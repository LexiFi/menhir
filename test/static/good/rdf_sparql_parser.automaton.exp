State 0:
query' -> . query [ # ]
-- On PREFIX shift to state 1
-- On BASE shift to state 4
-- On query shift to state 6
-- On prologue_item shift to state 7
-- On prologue shift to state 9
-- On list(prologue_item) shift to state 719
-- On SELECT reduce production list(prologue_item) ->
-- On DESCRIBE reduce production list(prologue_item) ->
-- On CONSTRUCT reduce production list(prologue_item) ->
-- On ASK reduce production list(prologue_item) ->

State 1:
prologue_item -> PREFIX . Pname_ns Iriref_ [ SELECT PREFIX DESCRIBE CONSTRUCT BASE ASK ]
-- On Pname_ns shift to state 2

State 2:
prologue_item -> PREFIX Pname_ns . Iriref_ [ SELECT PREFIX DESCRIBE CONSTRUCT BASE ASK ]
-- On Iriref_ shift to state 3

State 3:
prologue_item -> PREFIX Pname_ns Iriref_ . [ SELECT PREFIX DESCRIBE CONSTRUCT BASE ASK ]
-- On SELECT reduce production prologue_item -> PREFIX Pname_ns Iriref_
-- On PREFIX reduce production prologue_item -> PREFIX Pname_ns Iriref_
-- On DESCRIBE reduce production prologue_item -> PREFIX Pname_ns Iriref_
-- On CONSTRUCT reduce production prologue_item -> PREFIX Pname_ns Iriref_
-- On BASE reduce production prologue_item -> PREFIX Pname_ns Iriref_
-- On ASK reduce production prologue_item -> PREFIX Pname_ns Iriref_

State 4:
prologue_item -> BASE . Iriref_ [ SELECT PREFIX DESCRIBE CONSTRUCT BASE ASK ]
-- On Iriref_ shift to state 5

State 5:
prologue_item -> BASE Iriref_ . [ SELECT PREFIX DESCRIBE CONSTRUCT BASE ASK ]
-- On SELECT reduce production prologue_item -> BASE Iriref_
-- On PREFIX reduce production prologue_item -> BASE Iriref_
-- On DESCRIBE reduce production prologue_item -> BASE Iriref_
-- On CONSTRUCT reduce production prologue_item -> BASE Iriref_
-- On BASE reduce production prologue_item -> BASE Iriref_
-- On ASK reduce production prologue_item -> BASE Iriref_

State 6:
query' -> query . [ # ]
-- On # accept query

State 7:
list(prologue_item) -> prologue_item . list(prologue_item) [ SELECT DESCRIBE CONSTRUCT ASK ]
-- On PREFIX shift to state 1
-- On BASE shift to state 4
-- On prologue_item shift to state 7
-- On list(prologue_item) shift to state 8
-- On SELECT reduce production list(prologue_item) ->
-- On DESCRIBE reduce production list(prologue_item) ->
-- On CONSTRUCT reduce production list(prologue_item) ->
-- On ASK reduce production list(prologue_item) ->

State 8:
list(prologue_item) -> prologue_item list(prologue_item) . [ SELECT DESCRIBE CONSTRUCT ASK ]
-- On SELECT reduce production list(prologue_item) -> prologue_item list(prologue_item)
-- On DESCRIBE reduce production list(prologue_item) -> prologue_item list(prologue_item)
-- On CONSTRUCT reduce production list(prologue_item) -> prologue_item list(prologue_item)
-- On ASK reduce production list(prologue_item) -> prologue_item list(prologue_item)

State 9:
query -> prologue . query_kind values_clause EOF [ # ]
-- On SELECT shift to state 10
-- On DESCRIBE shift to state 664
-- On CONSTRUCT shift to state 683
-- On ASK shift to state 708
-- On select_clause shift to state 712
-- On query_kind shift to state 716

State 10:
select_clause -> SELECT . option(select_flag) select_vars [ WHERE LBRACE FROM ]
-- On REDUCED shift to state 11
-- On DISTINCT shift to state 12
-- On select_flag shift to state 13
-- On option(select_flag) shift to state 14
-- On Var2 reduce production option(select_flag) ->
-- On Var1 reduce production option(select_flag) ->
-- On STAR reduce production option(select_flag) ->
-- On LPAR reduce production option(select_flag) ->

State 11:
select_flag -> REDUCED . [ Var2 Var1 STAR LPAR ]
-- On Var2 reduce production select_flag -> REDUCED
-- On Var1 reduce production select_flag -> REDUCED
-- On STAR reduce production select_flag -> REDUCED
-- On LPAR reduce production select_flag -> REDUCED

State 12:
select_flag -> DISTINCT . [ Var2 Var1 STAR LPAR ]
-- On Var2 reduce production select_flag -> DISTINCT
-- On Var1 reduce production select_flag -> DISTINCT
-- On STAR reduce production select_flag -> DISTINCT
-- On LPAR reduce production select_flag -> DISTINCT

State 13:
option(select_flag) -> select_flag . [ Var2 Var1 STAR LPAR ]
-- On Var2 reduce production option(select_flag) -> select_flag
-- On Var1 reduce production option(select_flag) -> select_flag
-- On STAR reduce production option(select_flag) -> select_flag
-- On LPAR reduce production option(select_flag) -> select_flag

State 14:
select_clause -> SELECT option(select_flag) . select_vars [ WHERE LBRACE FROM ]
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On STAR shift to state 17
-- On LPAR shift to state 18
-- On var shift to state 659
-- On select_vars shift to state 660
-- On select_var shift to state 661
-- On nonempty_list(select_var) shift to state 663

State 15:
var -> Var2 . [ YEAR WHERE Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACKET RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING HAT GTE GT GROUP_CONCAT GROUP GRAPH FROM FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS A ]
-- On YEAR reduce production var -> Var2
-- On WHERE reduce production var -> Var2
-- On Var2 reduce production var -> Var2
-- On Var1 reduce production var -> Var2
-- On VALUES reduce production var -> Var2
-- On UUID reduce production var -> Var2
-- On URI reduce production var -> Var2
-- On UCASE reduce production var -> Var2
-- On TZ reduce production var -> Var2
-- On TIMEZONE reduce production var -> Var2
-- On String_literal reduce production var -> Var2
-- On SUM reduce production var -> Var2
-- On SUBSTR reduce production var -> Var2
-- On STRUUID reduce production var -> Var2
-- On STRSTARTS reduce production var -> Var2
-- On STRLEN reduce production var -> Var2
-- On STRLANG reduce production var -> Var2
-- On STRENDS reduce production var -> Var2
-- On STRDT reduce production var -> Var2
-- On STRBEFORE reduce production var -> Var2
-- On STRAFTER reduce production var -> Var2
-- On STR reduce production var -> Var2
-- On STAR reduce production var -> Var2
-- On SLASH reduce production var -> Var2
-- On SHA512 reduce production var -> Var2
-- On SHA384 reduce production var -> Var2
-- On SHA256 reduce production var -> Var2
-- On SHA1 reduce production var -> Var2
-- On SERVICE reduce production var -> Var2
-- On SEMICOLON reduce production var -> Var2
-- On SECONDS reduce production var -> Var2
-- On SAMPLE reduce production var -> Var2
-- On SAMETERM reduce production var -> Var2
-- On RPAR reduce production var -> Var2
-- On ROUND reduce production var -> Var2
-- On REPLACE reduce production var -> Var2
-- On REGEX reduce production var -> Var2
-- On RBRACKET reduce production var -> Var2
-- On RBRACE reduce production var -> Var2
-- On RAND reduce production var -> Var2
-- On Pname_ns reduce production var -> Var2
-- On Pname_ln reduce production var -> Var2
-- On PLUS reduce production var -> Var2
-- On PIPEPIPE reduce production var -> Var2
-- On ORDER reduce production var -> Var2
-- On OPTIONAL reduce production var -> Var2
-- On OFFSET reduce production var -> Var2
-- On NOW reduce production var -> Var2
-- On NOTEQUAL reduce production var -> Var2
-- On NOT reduce production var -> Var2
-- On NIL reduce production var -> Var2
-- On MONTH reduce production var -> Var2
-- On MINUTES reduce production var -> Var2
-- On MINUS reduce production var -> Var2
-- On MIN reduce production var -> Var2
-- On MD5 reduce production var -> Var2
-- On MAX reduce production var -> Var2
-- On LTE reduce production var -> Var2
-- On LT reduce production var -> Var2
-- On LPAR reduce production var -> Var2
-- On LIMIT reduce production var -> Var2
-- On LCASE reduce production var -> Var2
-- On LBRACKET reduce production var -> Var2
-- On LBRACE reduce production var -> Var2
-- On LANGMATCHES reduce production var -> Var2
-- On LANG reduce production var -> Var2
-- On Iriref_ reduce production var -> Var2
-- On Integer_positive reduce production var -> Var2
-- On Integer_negative reduce production var -> Var2
-- On Integer reduce production var -> Var2
-- On ISURI reduce production var -> Var2
-- On ISNUMERIC reduce production var -> Var2
-- On ISLITERAL reduce production var -> Var2
-- On ISIRI reduce production var -> Var2
-- On ISBLANK reduce production var -> Var2
-- On IRI reduce production var -> Var2
-- On IN reduce production var -> Var2
-- On IF reduce production var -> Var2
-- On HOURS reduce production var -> Var2
-- On HAVING reduce production var -> Var2
-- On HAT reduce production var -> Var2
-- On GTE reduce production var -> Var2
-- On GT reduce production var -> Var2
-- On GROUP_CONCAT reduce production var -> Var2
-- On GROUP reduce production var -> Var2
-- On GRAPH reduce production var -> Var2
-- On FROM reduce production var -> Var2
-- On FLOOR reduce production var -> Var2
-- On FILTER reduce production var -> Var2
-- On EXISTS reduce production var -> Var2
-- On EQUAL reduce production var -> Var2
-- On EOF reduce production var -> Var2
-- On ENCODE_FOR_URI reduce production var -> Var2
-- On Double_positive reduce production var -> Var2
-- On Double_negative reduce production var -> Var2
-- On Double reduce production var -> Var2
-- On Decimal_positive reduce production var -> Var2
-- On Decimal_negative reduce production var -> Var2
-- On Decimal reduce production var -> Var2
-- On DOT reduce production var -> Var2
-- On DESC reduce production var -> Var2
-- On DAY reduce production var -> Var2
-- On DATATYPE reduce production var -> Var2
-- On COUNT reduce production var -> Var2
-- On CONTAINS reduce production var -> Var2
-- On CONCAT reduce production var -> Var2
-- On COMMA reduce production var -> Var2
-- On COALESCE reduce production var -> Var2
-- On CEIL reduce production var -> Var2
-- On Boolean reduce production var -> Var2
-- On Blank_node_label reduce production var -> Var2
-- On BOUND reduce production var -> Var2
-- On BNODE reduce production var -> Var2
-- On BIND reduce production var -> Var2
-- On BANG reduce production var -> Var2
-- On AVG reduce production var -> Var2
-- On ASC reduce production var -> Var2
-- On AS reduce production var -> Var2
-- On ANON reduce production var -> Var2
-- On AMPAMP reduce production var -> Var2
-- On ABS reduce production var -> Var2
-- On A reduce production var -> Var2

State 16:
var -> Var1 . [ YEAR WHERE Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACKET RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING HAT GTE GT GROUP_CONCAT GROUP GRAPH FROM FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS A ]
-- On YEAR reduce production var -> Var1
-- On WHERE reduce production var -> Var1
-- On Var2 reduce production var -> Var1
-- On Var1 reduce production var -> Var1
-- On VALUES reduce production var -> Var1
-- On UUID reduce production var -> Var1
-- On URI reduce production var -> Var1
-- On UCASE reduce production var -> Var1
-- On TZ reduce production var -> Var1
-- On TIMEZONE reduce production var -> Var1
-- On String_literal reduce production var -> Var1
-- On SUM reduce production var -> Var1
-- On SUBSTR reduce production var -> Var1
-- On STRUUID reduce production var -> Var1
-- On STRSTARTS reduce production var -> Var1
-- On STRLEN reduce production var -> Var1
-- On STRLANG reduce production var -> Var1
-- On STRENDS reduce production var -> Var1
-- On STRDT reduce production var -> Var1
-- On STRBEFORE reduce production var -> Var1
-- On STRAFTER reduce production var -> Var1
-- On STR reduce production var -> Var1
-- On STAR reduce production var -> Var1
-- On SLASH reduce production var -> Var1
-- On SHA512 reduce production var -> Var1
-- On SHA384 reduce production var -> Var1
-- On SHA256 reduce production var -> Var1
-- On SHA1 reduce production var -> Var1
-- On SERVICE reduce production var -> Var1
-- On SEMICOLON reduce production var -> Var1
-- On SECONDS reduce production var -> Var1
-- On SAMPLE reduce production var -> Var1
-- On SAMETERM reduce production var -> Var1
-- On RPAR reduce production var -> Var1
-- On ROUND reduce production var -> Var1
-- On REPLACE reduce production var -> Var1
-- On REGEX reduce production var -> Var1
-- On RBRACKET reduce production var -> Var1
-- On RBRACE reduce production var -> Var1
-- On RAND reduce production var -> Var1
-- On Pname_ns reduce production var -> Var1
-- On Pname_ln reduce production var -> Var1
-- On PLUS reduce production var -> Var1
-- On PIPEPIPE reduce production var -> Var1
-- On ORDER reduce production var -> Var1
-- On OPTIONAL reduce production var -> Var1
-- On OFFSET reduce production var -> Var1
-- On NOW reduce production var -> Var1
-- On NOTEQUAL reduce production var -> Var1
-- On NOT reduce production var -> Var1
-- On NIL reduce production var -> Var1
-- On MONTH reduce production var -> Var1
-- On MINUTES reduce production var -> Var1
-- On MINUS reduce production var -> Var1
-- On MIN reduce production var -> Var1
-- On MD5 reduce production var -> Var1
-- On MAX reduce production var -> Var1
-- On LTE reduce production var -> Var1
-- On LT reduce production var -> Var1
-- On LPAR reduce production var -> Var1
-- On LIMIT reduce production var -> Var1
-- On LCASE reduce production var -> Var1
-- On LBRACKET reduce production var -> Var1
-- On LBRACE reduce production var -> Var1
-- On LANGMATCHES reduce production var -> Var1
-- On LANG reduce production var -> Var1
-- On Iriref_ reduce production var -> Var1
-- On Integer_positive reduce production var -> Var1
-- On Integer_negative reduce production var -> Var1
-- On Integer reduce production var -> Var1
-- On ISURI reduce production var -> Var1
-- On ISNUMERIC reduce production var -> Var1
-- On ISLITERAL reduce production var -> Var1
-- On ISIRI reduce production var -> Var1
-- On ISBLANK reduce production var -> Var1
-- On IRI reduce production var -> Var1
-- On IN reduce production var -> Var1
-- On IF reduce production var -> Var1
-- On HOURS reduce production var -> Var1
-- On HAVING reduce production var -> Var1
-- On HAT reduce production var -> Var1
-- On GTE reduce production var -> Var1
-- On GT reduce production var -> Var1
-- On GROUP_CONCAT reduce production var -> Var1
-- On GROUP reduce production var -> Var1
-- On GRAPH reduce production var -> Var1
-- On FROM reduce production var -> Var1
-- On FLOOR reduce production var -> Var1
-- On FILTER reduce production var -> Var1
-- On EXISTS reduce production var -> Var1
-- On EQUAL reduce production var -> Var1
-- On EOF reduce production var -> Var1
-- On ENCODE_FOR_URI reduce production var -> Var1
-- On Double_positive reduce production var -> Var1
-- On Double_negative reduce production var -> Var1
-- On Double reduce production var -> Var1
-- On Decimal_positive reduce production var -> Var1
-- On Decimal_negative reduce production var -> Var1
-- On Decimal reduce production var -> Var1
-- On DOT reduce production var -> Var1
-- On DESC reduce production var -> Var1
-- On DAY reduce production var -> Var1
-- On DATATYPE reduce production var -> Var1
-- On COUNT reduce production var -> Var1
-- On CONTAINS reduce production var -> Var1
-- On CONCAT reduce production var -> Var1
-- On COMMA reduce production var -> Var1
-- On COALESCE reduce production var -> Var1
-- On CEIL reduce production var -> Var1
-- On Boolean reduce production var -> Var1
-- On Blank_node_label reduce production var -> Var1
-- On BOUND reduce production var -> Var1
-- On BNODE reduce production var -> Var1
-- On BIND reduce production var -> Var1
-- On BANG reduce production var -> Var1
-- On AVG reduce production var -> Var1
-- On ASC reduce production var -> Var1
-- On AS reduce production var -> Var1
-- On ANON reduce production var -> Var1
-- On AMPAMP reduce production var -> Var1
-- On ABS reduce production var -> Var1
-- On A reduce production var -> Var1

State 17:
select_vars -> STAR . [ WHERE LBRACE FROM ]
-- On WHERE reduce production select_vars -> STAR
-- On LBRACE reduce production select_vars -> STAR
-- On FROM reduce production select_vars -> STAR

State 18:
select_var -> LPAR . expression AS var RPAR [ WHERE Var2 Var1 LPAR LBRACE FROM ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 655
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 19:
built_in_call -> YEAR . LPAR expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On LPAR shift to state 20

State 20:
built_in_call -> YEAR LPAR . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 653
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 21:
built_in_call -> UUID . NIL [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On NIL shift to state 22

State 22:
built_in_call -> UUID NIL . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production built_in_call -> UUID NIL
-- On Var2 reduce production built_in_call -> UUID NIL
-- On Var1 reduce production built_in_call -> UUID NIL
-- On VALUES reduce production built_in_call -> UUID NIL
-- On UUID reduce production built_in_call -> UUID NIL
-- On URI reduce production built_in_call -> UUID NIL
-- On UCASE reduce production built_in_call -> UUID NIL
-- On TZ reduce production built_in_call -> UUID NIL
-- On TIMEZONE reduce production built_in_call -> UUID NIL
-- On String_literal reduce production built_in_call -> UUID NIL
-- On SUM reduce production built_in_call -> UUID NIL
-- On SUBSTR reduce production built_in_call -> UUID NIL
-- On STRUUID reduce production built_in_call -> UUID NIL
-- On STRSTARTS reduce production built_in_call -> UUID NIL
-- On STRLEN reduce production built_in_call -> UUID NIL
-- On STRLANG reduce production built_in_call -> UUID NIL
-- On STRENDS reduce production built_in_call -> UUID NIL
-- On STRDT reduce production built_in_call -> UUID NIL
-- On STRBEFORE reduce production built_in_call -> UUID NIL
-- On STRAFTER reduce production built_in_call -> UUID NIL
-- On STR reduce production built_in_call -> UUID NIL
-- On STAR reduce production built_in_call -> UUID NIL
-- On SLASH reduce production built_in_call -> UUID NIL
-- On SHA512 reduce production built_in_call -> UUID NIL
-- On SHA384 reduce production built_in_call -> UUID NIL
-- On SHA256 reduce production built_in_call -> UUID NIL
-- On SHA1 reduce production built_in_call -> UUID NIL
-- On SERVICE reduce production built_in_call -> UUID NIL
-- On SEMICOLON reduce production built_in_call -> UUID NIL
-- On SECONDS reduce production built_in_call -> UUID NIL
-- On SAMPLE reduce production built_in_call -> UUID NIL
-- On SAMETERM reduce production built_in_call -> UUID NIL
-- On RPAR reduce production built_in_call -> UUID NIL
-- On ROUND reduce production built_in_call -> UUID NIL
-- On REPLACE reduce production built_in_call -> UUID NIL
-- On REGEX reduce production built_in_call -> UUID NIL
-- On RBRACE reduce production built_in_call -> UUID NIL
-- On RAND reduce production built_in_call -> UUID NIL
-- On Pname_ns reduce production built_in_call -> UUID NIL
-- On Pname_ln reduce production built_in_call -> UUID NIL
-- On PLUS reduce production built_in_call -> UUID NIL
-- On PIPEPIPE reduce production built_in_call -> UUID NIL
-- On ORDER reduce production built_in_call -> UUID NIL
-- On OPTIONAL reduce production built_in_call -> UUID NIL
-- On OFFSET reduce production built_in_call -> UUID NIL
-- On NOW reduce production built_in_call -> UUID NIL
-- On NOTEQUAL reduce production built_in_call -> UUID NIL
-- On NOT reduce production built_in_call -> UUID NIL
-- On NIL reduce production built_in_call -> UUID NIL
-- On MONTH reduce production built_in_call -> UUID NIL
-- On MINUTES reduce production built_in_call -> UUID NIL
-- On MINUS reduce production built_in_call -> UUID NIL
-- On MIN reduce production built_in_call -> UUID NIL
-- On MD5 reduce production built_in_call -> UUID NIL
-- On MAX reduce production built_in_call -> UUID NIL
-- On LTE reduce production built_in_call -> UUID NIL
-- On LT reduce production built_in_call -> UUID NIL
-- On LPAR reduce production built_in_call -> UUID NIL
-- On LIMIT reduce production built_in_call -> UUID NIL
-- On LCASE reduce production built_in_call -> UUID NIL
-- On LBRACKET reduce production built_in_call -> UUID NIL
-- On LBRACE reduce production built_in_call -> UUID NIL
-- On LANGMATCHES reduce production built_in_call -> UUID NIL
-- On LANG reduce production built_in_call -> UUID NIL
-- On Iriref_ reduce production built_in_call -> UUID NIL
-- On Integer_positive reduce production built_in_call -> UUID NIL
-- On Integer_negative reduce production built_in_call -> UUID NIL
-- On Integer reduce production built_in_call -> UUID NIL
-- On ISURI reduce production built_in_call -> UUID NIL
-- On ISNUMERIC reduce production built_in_call -> UUID NIL
-- On ISLITERAL reduce production built_in_call -> UUID NIL
-- On ISIRI reduce production built_in_call -> UUID NIL
-- On ISBLANK reduce production built_in_call -> UUID NIL
-- On IRI reduce production built_in_call -> UUID NIL
-- On IN reduce production built_in_call -> UUID NIL
-- On IF reduce production built_in_call -> UUID NIL
-- On HOURS reduce production built_in_call -> UUID NIL
-- On HAVING reduce production built_in_call -> UUID NIL
-- On GTE reduce production built_in_call -> UUID NIL
-- On GT reduce production built_in_call -> UUID NIL
-- On GROUP_CONCAT reduce production built_in_call -> UUID NIL
-- On GRAPH reduce production built_in_call -> UUID NIL
-- On FLOOR reduce production built_in_call -> UUID NIL
-- On FILTER reduce production built_in_call -> UUID NIL
-- On EXISTS reduce production built_in_call -> UUID NIL
-- On EQUAL reduce production built_in_call -> UUID NIL
-- On EOF reduce production built_in_call -> UUID NIL
-- On ENCODE_FOR_URI reduce production built_in_call -> UUID NIL
-- On Double_positive reduce production built_in_call -> UUID NIL
-- On Double_negative reduce production built_in_call -> UUID NIL
-- On Double reduce production built_in_call -> UUID NIL
-- On Decimal_positive reduce production built_in_call -> UUID NIL
-- On Decimal_negative reduce production built_in_call -> UUID NIL
-- On Decimal reduce production built_in_call -> UUID NIL
-- On DOT reduce production built_in_call -> UUID NIL
-- On DESC reduce production built_in_call -> UUID NIL
-- On DAY reduce production built_in_call -> UUID NIL
-- On DATATYPE reduce production built_in_call -> UUID NIL
-- On COUNT reduce production built_in_call -> UUID NIL
-- On CONTAINS reduce production built_in_call -> UUID NIL
-- On CONCAT reduce production built_in_call -> UUID NIL
-- On COMMA reduce production built_in_call -> UUID NIL
-- On COALESCE reduce production built_in_call -> UUID NIL
-- On CEIL reduce production built_in_call -> UUID NIL
-- On Boolean reduce production built_in_call -> UUID NIL
-- On Blank_node_label reduce production built_in_call -> UUID NIL
-- On BOUND reduce production built_in_call -> UUID NIL
-- On BNODE reduce production built_in_call -> UUID NIL
-- On BIND reduce production built_in_call -> UUID NIL
-- On BANG reduce production built_in_call -> UUID NIL
-- On AVG reduce production built_in_call -> UUID NIL
-- On ASC reduce production built_in_call -> UUID NIL
-- On AS reduce production built_in_call -> UUID NIL
-- On ANON reduce production built_in_call -> UUID NIL
-- On AMPAMP reduce production built_in_call -> UUID NIL
-- On ABS reduce production built_in_call -> UUID NIL

State 23:
built_in_call -> URI . LPAR expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On LPAR shift to state 24

State 24:
built_in_call -> URI LPAR . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 651
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 25:
built_in_call -> UCASE . LPAR expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On LPAR shift to state 26

State 26:
built_in_call -> UCASE LPAR . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 649
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 27:
built_in_call -> TZ . LPAR expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On LPAR shift to state 28

State 28:
built_in_call -> TZ LPAR . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 647
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 29:
built_in_call -> TIMEZONE . LPAR expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On LPAR shift to state 30

State 30:
built_in_call -> TIMEZONE LPAR . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 645
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 31:
string -> String_literal . [ YEAR Var2 Var1 VALUES UUID URI UNDEF UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACKET RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX Langtag LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING HATHAT HAT GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG AS ANON AMPAMP ABS A ]
-- On YEAR reduce production string -> String_literal
-- On Var2 reduce production string -> String_literal
-- On Var1 reduce production string -> String_literal
-- On VALUES reduce production string -> String_literal
-- On UUID reduce production string -> String_literal
-- On URI reduce production string -> String_literal
-- On UNDEF reduce production string -> String_literal
-- On UCASE reduce production string -> String_literal
-- On TZ reduce production string -> String_literal
-- On TIMEZONE reduce production string -> String_literal
-- On String_literal reduce production string -> String_literal
-- On SUM reduce production string -> String_literal
-- On SUBSTR reduce production string -> String_literal
-- On STRUUID reduce production string -> String_literal
-- On STRSTARTS reduce production string -> String_literal
-- On STRLEN reduce production string -> String_literal
-- On STRLANG reduce production string -> String_literal
-- On STRENDS reduce production string -> String_literal
-- On STRDT reduce production string -> String_literal
-- On STRBEFORE reduce production string -> String_literal
-- On STRAFTER reduce production string -> String_literal
-- On STR reduce production string -> String_literal
-- On STAR reduce production string -> String_literal
-- On SLASH reduce production string -> String_literal
-- On SHA512 reduce production string -> String_literal
-- On SHA384 reduce production string -> String_literal
-- On SHA256 reduce production string -> String_literal
-- On SHA1 reduce production string -> String_literal
-- On SERVICE reduce production string -> String_literal
-- On SEMICOLON reduce production string -> String_literal
-- On SECONDS reduce production string -> String_literal
-- On SAMPLE reduce production string -> String_literal
-- On SAMETERM reduce production string -> String_literal
-- On RPAR reduce production string -> String_literal
-- On ROUND reduce production string -> String_literal
-- On REPLACE reduce production string -> String_literal
-- On REGEX reduce production string -> String_literal
-- On RBRACKET reduce production string -> String_literal
-- On RBRACE reduce production string -> String_literal
-- On RAND reduce production string -> String_literal
-- On Pname_ns reduce production string -> String_literal
-- On Pname_ln reduce production string -> String_literal
-- On PLUS reduce production string -> String_literal
-- On PIPEPIPE reduce production string -> String_literal
-- On ORDER reduce production string -> String_literal
-- On OPTIONAL reduce production string -> String_literal
-- On OFFSET reduce production string -> String_literal
-- On NOW reduce production string -> String_literal
-- On NOTEQUAL reduce production string -> String_literal
-- On NOT reduce production string -> String_literal
-- On NIL reduce production string -> String_literal
-- On MONTH reduce production string -> String_literal
-- On MINUTES reduce production string -> String_literal
-- On MINUS reduce production string -> String_literal
-- On MIN reduce production string -> String_literal
-- On MD5 reduce production string -> String_literal
-- On MAX reduce production string -> String_literal
-- On Langtag reduce production string -> String_literal
-- On LTE reduce production string -> String_literal
-- On LT reduce production string -> String_literal
-- On LPAR reduce production string -> String_literal
-- On LIMIT reduce production string -> String_literal
-- On LCASE reduce production string -> String_literal
-- On LBRACKET reduce production string -> String_literal
-- On LBRACE reduce production string -> String_literal
-- On LANGMATCHES reduce production string -> String_literal
-- On LANG reduce production string -> String_literal
-- On Iriref_ reduce production string -> String_literal
-- On Integer_positive reduce production string -> String_literal
-- On Integer_negative reduce production string -> String_literal
-- On Integer reduce production string -> String_literal
-- On ISURI reduce production string -> String_literal
-- On ISNUMERIC reduce production string -> String_literal
-- On ISLITERAL reduce production string -> String_literal
-- On ISIRI reduce production string -> String_literal
-- On ISBLANK reduce production string -> String_literal
-- On IRI reduce production string -> String_literal
-- On IN reduce production string -> String_literal
-- On IF reduce production string -> String_literal
-- On HOURS reduce production string -> String_literal
-- On HAVING reduce production string -> String_literal
-- On HATHAT reduce production string -> String_literal
-- On HAT reduce production string -> String_literal
-- On GTE reduce production string -> String_literal
-- On GT reduce production string -> String_literal
-- On GROUP_CONCAT reduce production string -> String_literal
-- On GRAPH reduce production string -> String_literal
-- On FLOOR reduce production string -> String_literal
-- On FILTER reduce production string -> String_literal
-- On EXISTS reduce production string -> String_literal
-- On EQUAL reduce production string -> String_literal
-- On EOF reduce production string -> String_literal
-- On ENCODE_FOR_URI reduce production string -> String_literal
-- On Double_positive reduce production string -> String_literal
-- On Double_negative reduce production string -> String_literal
-- On Double reduce production string -> String_literal
-- On Decimal_positive reduce production string -> String_literal
-- On Decimal_negative reduce production string -> String_literal
-- On Decimal reduce production string -> String_literal
-- On DOT reduce production string -> String_literal
-- On DAY reduce production string -> String_literal
-- On DATATYPE reduce production string -> String_literal
-- On COUNT reduce production string -> String_literal
-- On CONTAINS reduce production string -> String_literal
-- On CONCAT reduce production string -> String_literal
-- On COMMA reduce production string -> String_literal
-- On COALESCE reduce production string -> String_literal
-- On CEIL reduce production string -> String_literal
-- On Boolean reduce production string -> String_literal
-- On Blank_node_label reduce production string -> String_literal
-- On BOUND reduce production string -> String_literal
-- On BNODE reduce production string -> String_literal
-- On BIND reduce production string -> String_literal
-- On BANG reduce production string -> String_literal
-- On AVG reduce production string -> String_literal
-- On AS reduce production string -> String_literal
-- On ANON reduce production string -> String_literal
-- On AMPAMP reduce production string -> String_literal
-- On ABS reduce production string -> String_literal
-- On A reduce production string -> String_literal

State 32:
aggregate -> SUM . LPAR option(DISTINCT) expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On LPAR shift to state 33

State 33:
aggregate -> SUM LPAR . option(DISTINCT) expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On DISTINCT shift to state 34
-- On option(DISTINCT) shift to state 35
-- On YEAR reduce production option(DISTINCT) ->
-- On Var2 reduce production option(DISTINCT) ->
-- On Var1 reduce production option(DISTINCT) ->
-- On UUID reduce production option(DISTINCT) ->
-- On URI reduce production option(DISTINCT) ->
-- On UCASE reduce production option(DISTINCT) ->
-- On TZ reduce production option(DISTINCT) ->
-- On TIMEZONE reduce production option(DISTINCT) ->
-- On String_literal reduce production option(DISTINCT) ->
-- On SUM reduce production option(DISTINCT) ->
-- On SUBSTR reduce production option(DISTINCT) ->
-- On STRUUID reduce production option(DISTINCT) ->
-- On STRSTARTS reduce production option(DISTINCT) ->
-- On STRLEN reduce production option(DISTINCT) ->
-- On STRLANG reduce production option(DISTINCT) ->
-- On STRENDS reduce production option(DISTINCT) ->
-- On STRDT reduce production option(DISTINCT) ->
-- On STRBEFORE reduce production option(DISTINCT) ->
-- On STRAFTER reduce production option(DISTINCT) ->
-- On STR reduce production option(DISTINCT) ->
-- On SHA512 reduce production option(DISTINCT) ->
-- On SHA384 reduce production option(DISTINCT) ->
-- On SHA256 reduce production option(DISTINCT) ->
-- On SHA1 reduce production option(DISTINCT) ->
-- On SECONDS reduce production option(DISTINCT) ->
-- On SAMPLE reduce production option(DISTINCT) ->
-- On SAMETERM reduce production option(DISTINCT) ->
-- On ROUND reduce production option(DISTINCT) ->
-- On REPLACE reduce production option(DISTINCT) ->
-- On REGEX reduce production option(DISTINCT) ->
-- On RAND reduce production option(DISTINCT) ->
-- On Pname_ns reduce production option(DISTINCT) ->
-- On Pname_ln reduce production option(DISTINCT) ->
-- On PLUS reduce production option(DISTINCT) ->
-- On NOW reduce production option(DISTINCT) ->
-- On NOT reduce production option(DISTINCT) ->
-- On MONTH reduce production option(DISTINCT) ->
-- On MINUTES reduce production option(DISTINCT) ->
-- On MINUS reduce production option(DISTINCT) ->
-- On MIN reduce production option(DISTINCT) ->
-- On MD5 reduce production option(DISTINCT) ->
-- On MAX reduce production option(DISTINCT) ->
-- On LPAR reduce production option(DISTINCT) ->
-- On LCASE reduce production option(DISTINCT) ->
-- On LANGMATCHES reduce production option(DISTINCT) ->
-- On LANG reduce production option(DISTINCT) ->
-- On Iriref_ reduce production option(DISTINCT) ->
-- On Integer_positive reduce production option(DISTINCT) ->
-- On Integer_negative reduce production option(DISTINCT) ->
-- On Integer reduce production option(DISTINCT) ->
-- On ISURI reduce production option(DISTINCT) ->
-- On ISNUMERIC reduce production option(DISTINCT) ->
-- On ISLITERAL reduce production option(DISTINCT) ->
-- On ISIRI reduce production option(DISTINCT) ->
-- On ISBLANK reduce production option(DISTINCT) ->
-- On IRI reduce production option(DISTINCT) ->
-- On IF reduce production option(DISTINCT) ->
-- On HOURS reduce production option(DISTINCT) ->
-- On GROUP_CONCAT reduce production option(DISTINCT) ->
-- On FLOOR reduce production option(DISTINCT) ->
-- On EXISTS reduce production option(DISTINCT) ->
-- On ENCODE_FOR_URI reduce production option(DISTINCT) ->
-- On Double_positive reduce production option(DISTINCT) ->
-- On Double_negative reduce production option(DISTINCT) ->
-- On Double reduce production option(DISTINCT) ->
-- On Decimal_positive reduce production option(DISTINCT) ->
-- On Decimal_negative reduce production option(DISTINCT) ->
-- On Decimal reduce production option(DISTINCT) ->
-- On DAY reduce production option(DISTINCT) ->
-- On DATATYPE reduce production option(DISTINCT) ->
-- On COUNT reduce production option(DISTINCT) ->
-- On CONTAINS reduce production option(DISTINCT) ->
-- On CONCAT reduce production option(DISTINCT) ->
-- On COALESCE reduce production option(DISTINCT) ->
-- On CEIL reduce production option(DISTINCT) ->
-- On Boolean reduce production option(DISTINCT) ->
-- On BOUND reduce production option(DISTINCT) ->
-- On BNODE reduce production option(DISTINCT) ->
-- On BANG reduce production option(DISTINCT) ->
-- On AVG reduce production option(DISTINCT) ->
-- On ABS reduce production option(DISTINCT) ->

State 34:
option(DISTINCT) -> DISTINCT . [ YEAR Var2 Var1 UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RAND Pname_ns Pname_ln PLUS NOW NOT MONTH MINUTES MINUS MIN MD5 MAX LPAR LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IF HOURS GROUP_CONCAT FLOOR EXISTS ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL Boolean BOUND BNODE BANG AVG ABS ]
-- On YEAR reduce production option(DISTINCT) -> DISTINCT
-- On Var2 reduce production option(DISTINCT) -> DISTINCT
-- On Var1 reduce production option(DISTINCT) -> DISTINCT
-- On UUID reduce production option(DISTINCT) -> DISTINCT
-- On URI reduce production option(DISTINCT) -> DISTINCT
-- On UCASE reduce production option(DISTINCT) -> DISTINCT
-- On TZ reduce production option(DISTINCT) -> DISTINCT
-- On TIMEZONE reduce production option(DISTINCT) -> DISTINCT
-- On String_literal reduce production option(DISTINCT) -> DISTINCT
-- On SUM reduce production option(DISTINCT) -> DISTINCT
-- On SUBSTR reduce production option(DISTINCT) -> DISTINCT
-- On STRUUID reduce production option(DISTINCT) -> DISTINCT
-- On STRSTARTS reduce production option(DISTINCT) -> DISTINCT
-- On STRLEN reduce production option(DISTINCT) -> DISTINCT
-- On STRLANG reduce production option(DISTINCT) -> DISTINCT
-- On STRENDS reduce production option(DISTINCT) -> DISTINCT
-- On STRDT reduce production option(DISTINCT) -> DISTINCT
-- On STRBEFORE reduce production option(DISTINCT) -> DISTINCT
-- On STRAFTER reduce production option(DISTINCT) -> DISTINCT
-- On STR reduce production option(DISTINCT) -> DISTINCT
-- On STAR reduce production option(DISTINCT) -> DISTINCT
-- On SHA512 reduce production option(DISTINCT) -> DISTINCT
-- On SHA384 reduce production option(DISTINCT) -> DISTINCT
-- On SHA256 reduce production option(DISTINCT) -> DISTINCT
-- On SHA1 reduce production option(DISTINCT) -> DISTINCT
-- On SECONDS reduce production option(DISTINCT) -> DISTINCT
-- On SAMPLE reduce production option(DISTINCT) -> DISTINCT
-- On SAMETERM reduce production option(DISTINCT) -> DISTINCT
-- On ROUND reduce production option(DISTINCT) -> DISTINCT
-- On REPLACE reduce production option(DISTINCT) -> DISTINCT
-- On REGEX reduce production option(DISTINCT) -> DISTINCT
-- On RAND reduce production option(DISTINCT) -> DISTINCT
-- On Pname_ns reduce production option(DISTINCT) -> DISTINCT
-- On Pname_ln reduce production option(DISTINCT) -> DISTINCT
-- On PLUS reduce production option(DISTINCT) -> DISTINCT
-- On NOW reduce production option(DISTINCT) -> DISTINCT
-- On NOT reduce production option(DISTINCT) -> DISTINCT
-- On MONTH reduce production option(DISTINCT) -> DISTINCT
-- On MINUTES reduce production option(DISTINCT) -> DISTINCT
-- On MINUS reduce production option(DISTINCT) -> DISTINCT
-- On MIN reduce production option(DISTINCT) -> DISTINCT
-- On MD5 reduce production option(DISTINCT) -> DISTINCT
-- On MAX reduce production option(DISTINCT) -> DISTINCT
-- On LPAR reduce production option(DISTINCT) -> DISTINCT
-- On LCASE reduce production option(DISTINCT) -> DISTINCT
-- On LANGMATCHES reduce production option(DISTINCT) -> DISTINCT
-- On LANG reduce production option(DISTINCT) -> DISTINCT
-- On Iriref_ reduce production option(DISTINCT) -> DISTINCT
-- On Integer_positive reduce production option(DISTINCT) -> DISTINCT
-- On Integer_negative reduce production option(DISTINCT) -> DISTINCT
-- On Integer reduce production option(DISTINCT) -> DISTINCT
-- On ISURI reduce production option(DISTINCT) -> DISTINCT
-- On ISNUMERIC reduce production option(DISTINCT) -> DISTINCT
-- On ISLITERAL reduce production option(DISTINCT) -> DISTINCT
-- On ISIRI reduce production option(DISTINCT) -> DISTINCT
-- On ISBLANK reduce production option(DISTINCT) -> DISTINCT
-- On IRI reduce production option(DISTINCT) -> DISTINCT
-- On IF reduce production option(DISTINCT) -> DISTINCT
-- On HOURS reduce production option(DISTINCT) -> DISTINCT
-- On GROUP_CONCAT reduce production option(DISTINCT) -> DISTINCT
-- On FLOOR reduce production option(DISTINCT) -> DISTINCT
-- On EXISTS reduce production option(DISTINCT) -> DISTINCT
-- On ENCODE_FOR_URI reduce production option(DISTINCT) -> DISTINCT
-- On Double_positive reduce production option(DISTINCT) -> DISTINCT
-- On Double_negative reduce production option(DISTINCT) -> DISTINCT
-- On Double reduce production option(DISTINCT) -> DISTINCT
-- On Decimal_positive reduce production option(DISTINCT) -> DISTINCT
-- On Decimal_negative reduce production option(DISTINCT) -> DISTINCT
-- On Decimal reduce production option(DISTINCT) -> DISTINCT
-- On DAY reduce production option(DISTINCT) -> DISTINCT
-- On DATATYPE reduce production option(DISTINCT) -> DISTINCT
-- On COUNT reduce production option(DISTINCT) -> DISTINCT
-- On CONTAINS reduce production option(DISTINCT) -> DISTINCT
-- On CONCAT reduce production option(DISTINCT) -> DISTINCT
-- On COALESCE reduce production option(DISTINCT) -> DISTINCT
-- On CEIL reduce production option(DISTINCT) -> DISTINCT
-- On Boolean reduce production option(DISTINCT) -> DISTINCT
-- On BOUND reduce production option(DISTINCT) -> DISTINCT
-- On BNODE reduce production option(DISTINCT) -> DISTINCT
-- On BANG reduce production option(DISTINCT) -> DISTINCT
-- On AVG reduce production option(DISTINCT) -> DISTINCT
-- On ABS reduce production option(DISTINCT) -> DISTINCT

State 35:
aggregate -> SUM LPAR option(DISTINCT) . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 643
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 36:
substring_expression -> SUBSTR . LPAR expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
substring_expression -> SUBSTR . LPAR expression COMMA expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On LPAR shift to state 37

State 37:
substring_expression -> SUBSTR LPAR . expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
substring_expression -> SUBSTR LPAR . expression COMMA expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 636
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 38:
built_in_call -> STRUUID . NIL [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On NIL shift to state 39

State 39:
built_in_call -> STRUUID NIL . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production built_in_call -> STRUUID NIL
-- On Var2 reduce production built_in_call -> STRUUID NIL
-- On Var1 reduce production built_in_call -> STRUUID NIL
-- On VALUES reduce production built_in_call -> STRUUID NIL
-- On UUID reduce production built_in_call -> STRUUID NIL
-- On URI reduce production built_in_call -> STRUUID NIL
-- On UCASE reduce production built_in_call -> STRUUID NIL
-- On TZ reduce production built_in_call -> STRUUID NIL
-- On TIMEZONE reduce production built_in_call -> STRUUID NIL
-- On String_literal reduce production built_in_call -> STRUUID NIL
-- On SUM reduce production built_in_call -> STRUUID NIL
-- On SUBSTR reduce production built_in_call -> STRUUID NIL
-- On STRUUID reduce production built_in_call -> STRUUID NIL
-- On STRSTARTS reduce production built_in_call -> STRUUID NIL
-- On STRLEN reduce production built_in_call -> STRUUID NIL
-- On STRLANG reduce production built_in_call -> STRUUID NIL
-- On STRENDS reduce production built_in_call -> STRUUID NIL
-- On STRDT reduce production built_in_call -> STRUUID NIL
-- On STRBEFORE reduce production built_in_call -> STRUUID NIL
-- On STRAFTER reduce production built_in_call -> STRUUID NIL
-- On STR reduce production built_in_call -> STRUUID NIL
-- On STAR reduce production built_in_call -> STRUUID NIL
-- On SLASH reduce production built_in_call -> STRUUID NIL
-- On SHA512 reduce production built_in_call -> STRUUID NIL
-- On SHA384 reduce production built_in_call -> STRUUID NIL
-- On SHA256 reduce production built_in_call -> STRUUID NIL
-- On SHA1 reduce production built_in_call -> STRUUID NIL
-- On SERVICE reduce production built_in_call -> STRUUID NIL
-- On SEMICOLON reduce production built_in_call -> STRUUID NIL
-- On SECONDS reduce production built_in_call -> STRUUID NIL
-- On SAMPLE reduce production built_in_call -> STRUUID NIL
-- On SAMETERM reduce production built_in_call -> STRUUID NIL
-- On RPAR reduce production built_in_call -> STRUUID NIL
-- On ROUND reduce production built_in_call -> STRUUID NIL
-- On REPLACE reduce production built_in_call -> STRUUID NIL
-- On REGEX reduce production built_in_call -> STRUUID NIL
-- On RBRACE reduce production built_in_call -> STRUUID NIL
-- On RAND reduce production built_in_call -> STRUUID NIL
-- On Pname_ns reduce production built_in_call -> STRUUID NIL
-- On Pname_ln reduce production built_in_call -> STRUUID NIL
-- On PLUS reduce production built_in_call -> STRUUID NIL
-- On PIPEPIPE reduce production built_in_call -> STRUUID NIL
-- On ORDER reduce production built_in_call -> STRUUID NIL
-- On OPTIONAL reduce production built_in_call -> STRUUID NIL
-- On OFFSET reduce production built_in_call -> STRUUID NIL
-- On NOW reduce production built_in_call -> STRUUID NIL
-- On NOTEQUAL reduce production built_in_call -> STRUUID NIL
-- On NOT reduce production built_in_call -> STRUUID NIL
-- On NIL reduce production built_in_call -> STRUUID NIL
-- On MONTH reduce production built_in_call -> STRUUID NIL
-- On MINUTES reduce production built_in_call -> STRUUID NIL
-- On MINUS reduce production built_in_call -> STRUUID NIL
-- On MIN reduce production built_in_call -> STRUUID NIL
-- On MD5 reduce production built_in_call -> STRUUID NIL
-- On MAX reduce production built_in_call -> STRUUID NIL
-- On LTE reduce production built_in_call -> STRUUID NIL
-- On LT reduce production built_in_call -> STRUUID NIL
-- On LPAR reduce production built_in_call -> STRUUID NIL
-- On LIMIT reduce production built_in_call -> STRUUID NIL
-- On LCASE reduce production built_in_call -> STRUUID NIL
-- On LBRACKET reduce production built_in_call -> STRUUID NIL
-- On LBRACE reduce production built_in_call -> STRUUID NIL
-- On LANGMATCHES reduce production built_in_call -> STRUUID NIL
-- On LANG reduce production built_in_call -> STRUUID NIL
-- On Iriref_ reduce production built_in_call -> STRUUID NIL
-- On Integer_positive reduce production built_in_call -> STRUUID NIL
-- On Integer_negative reduce production built_in_call -> STRUUID NIL
-- On Integer reduce production built_in_call -> STRUUID NIL
-- On ISURI reduce production built_in_call -> STRUUID NIL
-- On ISNUMERIC reduce production built_in_call -> STRUUID NIL
-- On ISLITERAL reduce production built_in_call -> STRUUID NIL
-- On ISIRI reduce production built_in_call -> STRUUID NIL
-- On ISBLANK reduce production built_in_call -> STRUUID NIL
-- On IRI reduce production built_in_call -> STRUUID NIL
-- On IN reduce production built_in_call -> STRUUID NIL
-- On IF reduce production built_in_call -> STRUUID NIL
-- On HOURS reduce production built_in_call -> STRUUID NIL
-- On HAVING reduce production built_in_call -> STRUUID NIL
-- On GTE reduce production built_in_call -> STRUUID NIL
-- On GT reduce production built_in_call -> STRUUID NIL
-- On GROUP_CONCAT reduce production built_in_call -> STRUUID NIL
-- On GRAPH reduce production built_in_call -> STRUUID NIL
-- On FLOOR reduce production built_in_call -> STRUUID NIL
-- On FILTER reduce production built_in_call -> STRUUID NIL
-- On EXISTS reduce production built_in_call -> STRUUID NIL
-- On EQUAL reduce production built_in_call -> STRUUID NIL
-- On EOF reduce production built_in_call -> STRUUID NIL
-- On ENCODE_FOR_URI reduce production built_in_call -> STRUUID NIL
-- On Double_positive reduce production built_in_call -> STRUUID NIL
-- On Double_negative reduce production built_in_call -> STRUUID NIL
-- On Double reduce production built_in_call -> STRUUID NIL
-- On Decimal_positive reduce production built_in_call -> STRUUID NIL
-- On Decimal_negative reduce production built_in_call -> STRUUID NIL
-- On Decimal reduce production built_in_call -> STRUUID NIL
-- On DOT reduce production built_in_call -> STRUUID NIL
-- On DESC reduce production built_in_call -> STRUUID NIL
-- On DAY reduce production built_in_call -> STRUUID NIL
-- On DATATYPE reduce production built_in_call -> STRUUID NIL
-- On COUNT reduce production built_in_call -> STRUUID NIL
-- On CONTAINS reduce production built_in_call -> STRUUID NIL
-- On CONCAT reduce production built_in_call -> STRUUID NIL
-- On COMMA reduce production built_in_call -> STRUUID NIL
-- On COALESCE reduce production built_in_call -> STRUUID NIL
-- On CEIL reduce production built_in_call -> STRUUID NIL
-- On Boolean reduce production built_in_call -> STRUUID NIL
-- On Blank_node_label reduce production built_in_call -> STRUUID NIL
-- On BOUND reduce production built_in_call -> STRUUID NIL
-- On BNODE reduce production built_in_call -> STRUUID NIL
-- On BIND reduce production built_in_call -> STRUUID NIL
-- On BANG reduce production built_in_call -> STRUUID NIL
-- On AVG reduce production built_in_call -> STRUUID NIL
-- On ASC reduce production built_in_call -> STRUUID NIL
-- On AS reduce production built_in_call -> STRUUID NIL
-- On ANON reduce production built_in_call -> STRUUID NIL
-- On AMPAMP reduce production built_in_call -> STRUUID NIL
-- On ABS reduce production built_in_call -> STRUUID NIL

State 40:
built_in_call -> STRSTARTS . LPAR expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On LPAR shift to state 41

State 41:
built_in_call -> STRSTARTS LPAR . expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 632
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 42:
built_in_call -> STRLEN . LPAR expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On LPAR shift to state 43

State 43:
built_in_call -> STRLEN LPAR . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 630
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 44:
built_in_call -> STRLANG . LPAR expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On LPAR shift to state 45

State 45:
built_in_call -> STRLANG LPAR . expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 626
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 46:
built_in_call -> STRENDS . LPAR expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On LPAR shift to state 47

State 47:
built_in_call -> STRENDS LPAR . expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 622
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 48:
built_in_call -> STRDT . LPAR expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On LPAR shift to state 49

State 49:
built_in_call -> STRDT LPAR . expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 618
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 50:
built_in_call -> STRBEFORE . LPAR expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On LPAR shift to state 51

State 51:
built_in_call -> STRBEFORE LPAR . expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 614
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 52:
built_in_call -> STRAFTER . LPAR expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On LPAR shift to state 53

State 53:
built_in_call -> STRAFTER LPAR . expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 610
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 54:
built_in_call -> STR . LPAR expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On LPAR shift to state 55

State 55:
built_in_call -> STR LPAR . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 608
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 56:
built_in_call -> SHA512 . LPAR expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On LPAR shift to state 57

State 57:
built_in_call -> SHA512 LPAR . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 606
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 58:
built_in_call -> SHA384 . LPAR expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On LPAR shift to state 59

State 59:
built_in_call -> SHA384 LPAR . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 604
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 60:
built_in_call -> SHA256 . LPAR expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On LPAR shift to state 61

State 61:
built_in_call -> SHA256 LPAR . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 602
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 62:
built_in_call -> SHA1 . LPAR expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On LPAR shift to state 63

State 63:
built_in_call -> SHA1 LPAR . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 600
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 64:
built_in_call -> SECONDS . LPAR expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On LPAR shift to state 65

State 65:
built_in_call -> SECONDS LPAR . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 598
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 66:
aggregate -> SAMPLE . LPAR option(DISTINCT) expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On LPAR shift to state 67

State 67:
aggregate -> SAMPLE LPAR . option(DISTINCT) expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On DISTINCT shift to state 34
-- On option(DISTINCT) shift to state 68
-- On YEAR reduce production option(DISTINCT) ->
-- On Var2 reduce production option(DISTINCT) ->
-- On Var1 reduce production option(DISTINCT) ->
-- On UUID reduce production option(DISTINCT) ->
-- On URI reduce production option(DISTINCT) ->
-- On UCASE reduce production option(DISTINCT) ->
-- On TZ reduce production option(DISTINCT) ->
-- On TIMEZONE reduce production option(DISTINCT) ->
-- On String_literal reduce production option(DISTINCT) ->
-- On SUM reduce production option(DISTINCT) ->
-- On SUBSTR reduce production option(DISTINCT) ->
-- On STRUUID reduce production option(DISTINCT) ->
-- On STRSTARTS reduce production option(DISTINCT) ->
-- On STRLEN reduce production option(DISTINCT) ->
-- On STRLANG reduce production option(DISTINCT) ->
-- On STRENDS reduce production option(DISTINCT) ->
-- On STRDT reduce production option(DISTINCT) ->
-- On STRBEFORE reduce production option(DISTINCT) ->
-- On STRAFTER reduce production option(DISTINCT) ->
-- On STR reduce production option(DISTINCT) ->
-- On SHA512 reduce production option(DISTINCT) ->
-- On SHA384 reduce production option(DISTINCT) ->
-- On SHA256 reduce production option(DISTINCT) ->
-- On SHA1 reduce production option(DISTINCT) ->
-- On SECONDS reduce production option(DISTINCT) ->
-- On SAMPLE reduce production option(DISTINCT) ->
-- On SAMETERM reduce production option(DISTINCT) ->
-- On ROUND reduce production option(DISTINCT) ->
-- On REPLACE reduce production option(DISTINCT) ->
-- On REGEX reduce production option(DISTINCT) ->
-- On RAND reduce production option(DISTINCT) ->
-- On Pname_ns reduce production option(DISTINCT) ->
-- On Pname_ln reduce production option(DISTINCT) ->
-- On PLUS reduce production option(DISTINCT) ->
-- On NOW reduce production option(DISTINCT) ->
-- On NOT reduce production option(DISTINCT) ->
-- On MONTH reduce production option(DISTINCT) ->
-- On MINUTES reduce production option(DISTINCT) ->
-- On MINUS reduce production option(DISTINCT) ->
-- On MIN reduce production option(DISTINCT) ->
-- On MD5 reduce production option(DISTINCT) ->
-- On MAX reduce production option(DISTINCT) ->
-- On LPAR reduce production option(DISTINCT) ->
-- On LCASE reduce production option(DISTINCT) ->
-- On LANGMATCHES reduce production option(DISTINCT) ->
-- On LANG reduce production option(DISTINCT) ->
-- On Iriref_ reduce production option(DISTINCT) ->
-- On Integer_positive reduce production option(DISTINCT) ->
-- On Integer_negative reduce production option(DISTINCT) ->
-- On Integer reduce production option(DISTINCT) ->
-- On ISURI reduce production option(DISTINCT) ->
-- On ISNUMERIC reduce production option(DISTINCT) ->
-- On ISLITERAL reduce production option(DISTINCT) ->
-- On ISIRI reduce production option(DISTINCT) ->
-- On ISBLANK reduce production option(DISTINCT) ->
-- On IRI reduce production option(DISTINCT) ->
-- On IF reduce production option(DISTINCT) ->
-- On HOURS reduce production option(DISTINCT) ->
-- On GROUP_CONCAT reduce production option(DISTINCT) ->
-- On FLOOR reduce production option(DISTINCT) ->
-- On EXISTS reduce production option(DISTINCT) ->
-- On ENCODE_FOR_URI reduce production option(DISTINCT) ->
-- On Double_positive reduce production option(DISTINCT) ->
-- On Double_negative reduce production option(DISTINCT) ->
-- On Double reduce production option(DISTINCT) ->
-- On Decimal_positive reduce production option(DISTINCT) ->
-- On Decimal_negative reduce production option(DISTINCT) ->
-- On Decimal reduce production option(DISTINCT) ->
-- On DAY reduce production option(DISTINCT) ->
-- On DATATYPE reduce production option(DISTINCT) ->
-- On COUNT reduce production option(DISTINCT) ->
-- On CONTAINS reduce production option(DISTINCT) ->
-- On CONCAT reduce production option(DISTINCT) ->
-- On COALESCE reduce production option(DISTINCT) ->
-- On CEIL reduce production option(DISTINCT) ->
-- On Boolean reduce production option(DISTINCT) ->
-- On BOUND reduce production option(DISTINCT) ->
-- On BNODE reduce production option(DISTINCT) ->
-- On BANG reduce production option(DISTINCT) ->
-- On AVG reduce production option(DISTINCT) ->
-- On ABS reduce production option(DISTINCT) ->

State 68:
aggregate -> SAMPLE LPAR option(DISTINCT) . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 596
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 69:
built_in_call -> SAMETERM . LPAR expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On LPAR shift to state 70

State 70:
built_in_call -> SAMETERM LPAR . expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 592
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 71:
built_in_call -> ROUND . LPAR expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On LPAR shift to state 72

State 72:
built_in_call -> ROUND LPAR . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 590
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 73:
str_replace_expression -> REPLACE . LPAR expression COMMA expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
str_replace_expression -> REPLACE . LPAR expression COMMA expression COMMA expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On LPAR shift to state 74

State 74:
str_replace_expression -> REPLACE LPAR . expression COMMA expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
str_replace_expression -> REPLACE LPAR . expression COMMA expression COMMA expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 581
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 75:
regexp_expression -> REGEX . LPAR expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
regexp_expression -> REGEX . LPAR expression COMMA expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On LPAR shift to state 76

State 76:
regexp_expression -> REGEX LPAR . expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
regexp_expression -> REGEX LPAR . expression COMMA expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 574
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 77:
built_in_call -> RAND . NIL [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On NIL shift to state 78

State 78:
built_in_call -> RAND NIL . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production built_in_call -> RAND NIL
-- On Var2 reduce production built_in_call -> RAND NIL
-- On Var1 reduce production built_in_call -> RAND NIL
-- On VALUES reduce production built_in_call -> RAND NIL
-- On UUID reduce production built_in_call -> RAND NIL
-- On URI reduce production built_in_call -> RAND NIL
-- On UCASE reduce production built_in_call -> RAND NIL
-- On TZ reduce production built_in_call -> RAND NIL
-- On TIMEZONE reduce production built_in_call -> RAND NIL
-- On String_literal reduce production built_in_call -> RAND NIL
-- On SUM reduce production built_in_call -> RAND NIL
-- On SUBSTR reduce production built_in_call -> RAND NIL
-- On STRUUID reduce production built_in_call -> RAND NIL
-- On STRSTARTS reduce production built_in_call -> RAND NIL
-- On STRLEN reduce production built_in_call -> RAND NIL
-- On STRLANG reduce production built_in_call -> RAND NIL
-- On STRENDS reduce production built_in_call -> RAND NIL
-- On STRDT reduce production built_in_call -> RAND NIL
-- On STRBEFORE reduce production built_in_call -> RAND NIL
-- On STRAFTER reduce production built_in_call -> RAND NIL
-- On STR reduce production built_in_call -> RAND NIL
-- On STAR reduce production built_in_call -> RAND NIL
-- On SLASH reduce production built_in_call -> RAND NIL
-- On SHA512 reduce production built_in_call -> RAND NIL
-- On SHA384 reduce production built_in_call -> RAND NIL
-- On SHA256 reduce production built_in_call -> RAND NIL
-- On SHA1 reduce production built_in_call -> RAND NIL
-- On SERVICE reduce production built_in_call -> RAND NIL
-- On SEMICOLON reduce production built_in_call -> RAND NIL
-- On SECONDS reduce production built_in_call -> RAND NIL
-- On SAMPLE reduce production built_in_call -> RAND NIL
-- On SAMETERM reduce production built_in_call -> RAND NIL
-- On RPAR reduce production built_in_call -> RAND NIL
-- On ROUND reduce production built_in_call -> RAND NIL
-- On REPLACE reduce production built_in_call -> RAND NIL
-- On REGEX reduce production built_in_call -> RAND NIL
-- On RBRACE reduce production built_in_call -> RAND NIL
-- On RAND reduce production built_in_call -> RAND NIL
-- On Pname_ns reduce production built_in_call -> RAND NIL
-- On Pname_ln reduce production built_in_call -> RAND NIL
-- On PLUS reduce production built_in_call -> RAND NIL
-- On PIPEPIPE reduce production built_in_call -> RAND NIL
-- On ORDER reduce production built_in_call -> RAND NIL
-- On OPTIONAL reduce production built_in_call -> RAND NIL
-- On OFFSET reduce production built_in_call -> RAND NIL
-- On NOW reduce production built_in_call -> RAND NIL
-- On NOTEQUAL reduce production built_in_call -> RAND NIL
-- On NOT reduce production built_in_call -> RAND NIL
-- On NIL reduce production built_in_call -> RAND NIL
-- On MONTH reduce production built_in_call -> RAND NIL
-- On MINUTES reduce production built_in_call -> RAND NIL
-- On MINUS reduce production built_in_call -> RAND NIL
-- On MIN reduce production built_in_call -> RAND NIL
-- On MD5 reduce production built_in_call -> RAND NIL
-- On MAX reduce production built_in_call -> RAND NIL
-- On LTE reduce production built_in_call -> RAND NIL
-- On LT reduce production built_in_call -> RAND NIL
-- On LPAR reduce production built_in_call -> RAND NIL
-- On LIMIT reduce production built_in_call -> RAND NIL
-- On LCASE reduce production built_in_call -> RAND NIL
-- On LBRACKET reduce production built_in_call -> RAND NIL
-- On LBRACE reduce production built_in_call -> RAND NIL
-- On LANGMATCHES reduce production built_in_call -> RAND NIL
-- On LANG reduce production built_in_call -> RAND NIL
-- On Iriref_ reduce production built_in_call -> RAND NIL
-- On Integer_positive reduce production built_in_call -> RAND NIL
-- On Integer_negative reduce production built_in_call -> RAND NIL
-- On Integer reduce production built_in_call -> RAND NIL
-- On ISURI reduce production built_in_call -> RAND NIL
-- On ISNUMERIC reduce production built_in_call -> RAND NIL
-- On ISLITERAL reduce production built_in_call -> RAND NIL
-- On ISIRI reduce production built_in_call -> RAND NIL
-- On ISBLANK reduce production built_in_call -> RAND NIL
-- On IRI reduce production built_in_call -> RAND NIL
-- On IN reduce production built_in_call -> RAND NIL
-- On IF reduce production built_in_call -> RAND NIL
-- On HOURS reduce production built_in_call -> RAND NIL
-- On HAVING reduce production built_in_call -> RAND NIL
-- On GTE reduce production built_in_call -> RAND NIL
-- On GT reduce production built_in_call -> RAND NIL
-- On GROUP_CONCAT reduce production built_in_call -> RAND NIL
-- On GRAPH reduce production built_in_call -> RAND NIL
-- On FLOOR reduce production built_in_call -> RAND NIL
-- On FILTER reduce production built_in_call -> RAND NIL
-- On EXISTS reduce production built_in_call -> RAND NIL
-- On EQUAL reduce production built_in_call -> RAND NIL
-- On EOF reduce production built_in_call -> RAND NIL
-- On ENCODE_FOR_URI reduce production built_in_call -> RAND NIL
-- On Double_positive reduce production built_in_call -> RAND NIL
-- On Double_negative reduce production built_in_call -> RAND NIL
-- On Double reduce production built_in_call -> RAND NIL
-- On Decimal_positive reduce production built_in_call -> RAND NIL
-- On Decimal_negative reduce production built_in_call -> RAND NIL
-- On Decimal reduce production built_in_call -> RAND NIL
-- On DOT reduce production built_in_call -> RAND NIL
-- On DESC reduce production built_in_call -> RAND NIL
-- On DAY reduce production built_in_call -> RAND NIL
-- On DATATYPE reduce production built_in_call -> RAND NIL
-- On COUNT reduce production built_in_call -> RAND NIL
-- On CONTAINS reduce production built_in_call -> RAND NIL
-- On CONCAT reduce production built_in_call -> RAND NIL
-- On COMMA reduce production built_in_call -> RAND NIL
-- On COALESCE reduce production built_in_call -> RAND NIL
-- On CEIL reduce production built_in_call -> RAND NIL
-- On Boolean reduce production built_in_call -> RAND NIL
-- On Blank_node_label reduce production built_in_call -> RAND NIL
-- On BOUND reduce production built_in_call -> RAND NIL
-- On BNODE reduce production built_in_call -> RAND NIL
-- On BIND reduce production built_in_call -> RAND NIL
-- On BANG reduce production built_in_call -> RAND NIL
-- On AVG reduce production built_in_call -> RAND NIL
-- On ASC reduce production built_in_call -> RAND NIL
-- On AS reduce production built_in_call -> RAND NIL
-- On ANON reduce production built_in_call -> RAND NIL
-- On AMPAMP reduce production built_in_call -> RAND NIL
-- On ABS reduce production built_in_call -> RAND NIL

State 79:
prefixed_name -> Pname_ns . [ YEAR WHERE Var2 Var1 VALUES UUID URI UNDEF UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACKET RBRACE RAND QM Pname_ns Pname_ln PLUS PIPEPIPE PIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING HAT GTE GT GROUP_CONCAT GROUP GRAPH FROM FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG AS ANON AMPAMP ABS A ]
-- On YEAR reduce production prefixed_name -> Pname_ns
-- On WHERE reduce production prefixed_name -> Pname_ns
-- On Var2 reduce production prefixed_name -> Pname_ns
-- On Var1 reduce production prefixed_name -> Pname_ns
-- On VALUES reduce production prefixed_name -> Pname_ns
-- On UUID reduce production prefixed_name -> Pname_ns
-- On URI reduce production prefixed_name -> Pname_ns
-- On UNDEF reduce production prefixed_name -> Pname_ns
-- On UCASE reduce production prefixed_name -> Pname_ns
-- On TZ reduce production prefixed_name -> Pname_ns
-- On TIMEZONE reduce production prefixed_name -> Pname_ns
-- On String_literal reduce production prefixed_name -> Pname_ns
-- On SUM reduce production prefixed_name -> Pname_ns
-- On SUBSTR reduce production prefixed_name -> Pname_ns
-- On STRUUID reduce production prefixed_name -> Pname_ns
-- On STRSTARTS reduce production prefixed_name -> Pname_ns
-- On STRLEN reduce production prefixed_name -> Pname_ns
-- On STRLANG reduce production prefixed_name -> Pname_ns
-- On STRENDS reduce production prefixed_name -> Pname_ns
-- On STRDT reduce production prefixed_name -> Pname_ns
-- On STRBEFORE reduce production prefixed_name -> Pname_ns
-- On STRAFTER reduce production prefixed_name -> Pname_ns
-- On STR reduce production prefixed_name -> Pname_ns
-- On STAR reduce production prefixed_name -> Pname_ns
-- On SLASH reduce production prefixed_name -> Pname_ns
-- On SHA512 reduce production prefixed_name -> Pname_ns
-- On SHA384 reduce production prefixed_name -> Pname_ns
-- On SHA256 reduce production prefixed_name -> Pname_ns
-- On SHA1 reduce production prefixed_name -> Pname_ns
-- On SERVICE reduce production prefixed_name -> Pname_ns
-- On SEMICOLON reduce production prefixed_name -> Pname_ns
-- On SECONDS reduce production prefixed_name -> Pname_ns
-- On SAMPLE reduce production prefixed_name -> Pname_ns
-- On SAMETERM reduce production prefixed_name -> Pname_ns
-- On RPAR reduce production prefixed_name -> Pname_ns
-- On ROUND reduce production prefixed_name -> Pname_ns
-- On REPLACE reduce production prefixed_name -> Pname_ns
-- On REGEX reduce production prefixed_name -> Pname_ns
-- On RBRACKET reduce production prefixed_name -> Pname_ns
-- On RBRACE reduce production prefixed_name -> Pname_ns
-- On RAND reduce production prefixed_name -> Pname_ns
-- On QM reduce production prefixed_name -> Pname_ns
-- On Pname_ns reduce production prefixed_name -> Pname_ns
-- On Pname_ln reduce production prefixed_name -> Pname_ns
-- On PLUS reduce production prefixed_name -> Pname_ns
-- On PIPEPIPE reduce production prefixed_name -> Pname_ns
-- On PIPE reduce production prefixed_name -> Pname_ns
-- On ORDER reduce production prefixed_name -> Pname_ns
-- On OPTIONAL reduce production prefixed_name -> Pname_ns
-- On OFFSET reduce production prefixed_name -> Pname_ns
-- On NOW reduce production prefixed_name -> Pname_ns
-- On NOTEQUAL reduce production prefixed_name -> Pname_ns
-- On NOT reduce production prefixed_name -> Pname_ns
-- On NIL reduce production prefixed_name -> Pname_ns
-- On MONTH reduce production prefixed_name -> Pname_ns
-- On MINUTES reduce production prefixed_name -> Pname_ns
-- On MINUS reduce production prefixed_name -> Pname_ns
-- On MIN reduce production prefixed_name -> Pname_ns
-- On MD5 reduce production prefixed_name -> Pname_ns
-- On MAX reduce production prefixed_name -> Pname_ns
-- On LTE reduce production prefixed_name -> Pname_ns
-- On LT reduce production prefixed_name -> Pname_ns
-- On LPAR reduce production prefixed_name -> Pname_ns
-- On LIMIT reduce production prefixed_name -> Pname_ns
-- On LCASE reduce production prefixed_name -> Pname_ns
-- On LBRACKET reduce production prefixed_name -> Pname_ns
-- On LBRACE reduce production prefixed_name -> Pname_ns
-- On LANGMATCHES reduce production prefixed_name -> Pname_ns
-- On LANG reduce production prefixed_name -> Pname_ns
-- On Iriref_ reduce production prefixed_name -> Pname_ns
-- On Integer_positive reduce production prefixed_name -> Pname_ns
-- On Integer_negative reduce production prefixed_name -> Pname_ns
-- On Integer reduce production prefixed_name -> Pname_ns
-- On ISURI reduce production prefixed_name -> Pname_ns
-- On ISNUMERIC reduce production prefixed_name -> Pname_ns
-- On ISLITERAL reduce production prefixed_name -> Pname_ns
-- On ISIRI reduce production prefixed_name -> Pname_ns
-- On ISBLANK reduce production prefixed_name -> Pname_ns
-- On IRI reduce production prefixed_name -> Pname_ns
-- On IN reduce production prefixed_name -> Pname_ns
-- On IF reduce production prefixed_name -> Pname_ns
-- On HOURS reduce production prefixed_name -> Pname_ns
-- On HAVING reduce production prefixed_name -> Pname_ns
-- On HAT reduce production prefixed_name -> Pname_ns
-- On GTE reduce production prefixed_name -> Pname_ns
-- On GT reduce production prefixed_name -> Pname_ns
-- On GROUP_CONCAT reduce production prefixed_name -> Pname_ns
-- On GROUP reduce production prefixed_name -> Pname_ns
-- On GRAPH reduce production prefixed_name -> Pname_ns
-- On FROM reduce production prefixed_name -> Pname_ns
-- On FLOOR reduce production prefixed_name -> Pname_ns
-- On FILTER reduce production prefixed_name -> Pname_ns
-- On EXISTS reduce production prefixed_name -> Pname_ns
-- On EQUAL reduce production prefixed_name -> Pname_ns
-- On EOF reduce production prefixed_name -> Pname_ns
-- On ENCODE_FOR_URI reduce production prefixed_name -> Pname_ns
-- On Double_positive reduce production prefixed_name -> Pname_ns
-- On Double_negative reduce production prefixed_name -> Pname_ns
-- On Double reduce production prefixed_name -> Pname_ns
-- On Decimal_positive reduce production prefixed_name -> Pname_ns
-- On Decimal_negative reduce production prefixed_name -> Pname_ns
-- On Decimal reduce production prefixed_name -> Pname_ns
-- On DOT reduce production prefixed_name -> Pname_ns
-- On DAY reduce production prefixed_name -> Pname_ns
-- On DATATYPE reduce production prefixed_name -> Pname_ns
-- On COUNT reduce production prefixed_name -> Pname_ns
-- On CONTAINS reduce production prefixed_name -> Pname_ns
-- On CONCAT reduce production prefixed_name -> Pname_ns
-- On COMMA reduce production prefixed_name -> Pname_ns
-- On COALESCE reduce production prefixed_name -> Pname_ns
-- On CEIL reduce production prefixed_name -> Pname_ns
-- On Boolean reduce production prefixed_name -> Pname_ns
-- On Blank_node_label reduce production prefixed_name -> Pname_ns
-- On BOUND reduce production prefixed_name -> Pname_ns
-- On BNODE reduce production prefixed_name -> Pname_ns
-- On BIND reduce production prefixed_name -> Pname_ns
-- On BANG reduce production prefixed_name -> Pname_ns
-- On AVG reduce production prefixed_name -> Pname_ns
-- On AS reduce production prefixed_name -> Pname_ns
-- On ANON reduce production prefixed_name -> Pname_ns
-- On AMPAMP reduce production prefixed_name -> Pname_ns
-- On ABS reduce production prefixed_name -> Pname_ns
-- On A reduce production prefixed_name -> Pname_ns

State 80:
prefixed_name -> Pname_ln . [ YEAR WHERE Var2 Var1 VALUES UUID URI UNDEF UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACKET RBRACE RAND QM Pname_ns Pname_ln PLUS PIPEPIPE PIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING HAT GTE GT GROUP_CONCAT GROUP GRAPH FROM FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG AS ANON AMPAMP ABS A ]
-- On YEAR reduce production prefixed_name -> Pname_ln
-- On WHERE reduce production prefixed_name -> Pname_ln
-- On Var2 reduce production prefixed_name -> Pname_ln
-- On Var1 reduce production prefixed_name -> Pname_ln
-- On VALUES reduce production prefixed_name -> Pname_ln
-- On UUID reduce production prefixed_name -> Pname_ln
-- On URI reduce production prefixed_name -> Pname_ln
-- On UNDEF reduce production prefixed_name -> Pname_ln
-- On UCASE reduce production prefixed_name -> Pname_ln
-- On TZ reduce production prefixed_name -> Pname_ln
-- On TIMEZONE reduce production prefixed_name -> Pname_ln
-- On String_literal reduce production prefixed_name -> Pname_ln
-- On SUM reduce production prefixed_name -> Pname_ln
-- On SUBSTR reduce production prefixed_name -> Pname_ln
-- On STRUUID reduce production prefixed_name -> Pname_ln
-- On STRSTARTS reduce production prefixed_name -> Pname_ln
-- On STRLEN reduce production prefixed_name -> Pname_ln
-- On STRLANG reduce production prefixed_name -> Pname_ln
-- On STRENDS reduce production prefixed_name -> Pname_ln
-- On STRDT reduce production prefixed_name -> Pname_ln
-- On STRBEFORE reduce production prefixed_name -> Pname_ln
-- On STRAFTER reduce production prefixed_name -> Pname_ln
-- On STR reduce production prefixed_name -> Pname_ln
-- On STAR reduce production prefixed_name -> Pname_ln
-- On SLASH reduce production prefixed_name -> Pname_ln
-- On SHA512 reduce production prefixed_name -> Pname_ln
-- On SHA384 reduce production prefixed_name -> Pname_ln
-- On SHA256 reduce production prefixed_name -> Pname_ln
-- On SHA1 reduce production prefixed_name -> Pname_ln
-- On SERVICE reduce production prefixed_name -> Pname_ln
-- On SEMICOLON reduce production prefixed_name -> Pname_ln
-- On SECONDS reduce production prefixed_name -> Pname_ln
-- On SAMPLE reduce production prefixed_name -> Pname_ln
-- On SAMETERM reduce production prefixed_name -> Pname_ln
-- On RPAR reduce production prefixed_name -> Pname_ln
-- On ROUND reduce production prefixed_name -> Pname_ln
-- On REPLACE reduce production prefixed_name -> Pname_ln
-- On REGEX reduce production prefixed_name -> Pname_ln
-- On RBRACKET reduce production prefixed_name -> Pname_ln
-- On RBRACE reduce production prefixed_name -> Pname_ln
-- On RAND reduce production prefixed_name -> Pname_ln
-- On QM reduce production prefixed_name -> Pname_ln
-- On Pname_ns reduce production prefixed_name -> Pname_ln
-- On Pname_ln reduce production prefixed_name -> Pname_ln
-- On PLUS reduce production prefixed_name -> Pname_ln
-- On PIPEPIPE reduce production prefixed_name -> Pname_ln
-- On PIPE reduce production prefixed_name -> Pname_ln
-- On ORDER reduce production prefixed_name -> Pname_ln
-- On OPTIONAL reduce production prefixed_name -> Pname_ln
-- On OFFSET reduce production prefixed_name -> Pname_ln
-- On NOW reduce production prefixed_name -> Pname_ln
-- On NOTEQUAL reduce production prefixed_name -> Pname_ln
-- On NOT reduce production prefixed_name -> Pname_ln
-- On NIL reduce production prefixed_name -> Pname_ln
-- On MONTH reduce production prefixed_name -> Pname_ln
-- On MINUTES reduce production prefixed_name -> Pname_ln
-- On MINUS reduce production prefixed_name -> Pname_ln
-- On MIN reduce production prefixed_name -> Pname_ln
-- On MD5 reduce production prefixed_name -> Pname_ln
-- On MAX reduce production prefixed_name -> Pname_ln
-- On LTE reduce production prefixed_name -> Pname_ln
-- On LT reduce production prefixed_name -> Pname_ln
-- On LPAR reduce production prefixed_name -> Pname_ln
-- On LIMIT reduce production prefixed_name -> Pname_ln
-- On LCASE reduce production prefixed_name -> Pname_ln
-- On LBRACKET reduce production prefixed_name -> Pname_ln
-- On LBRACE reduce production prefixed_name -> Pname_ln
-- On LANGMATCHES reduce production prefixed_name -> Pname_ln
-- On LANG reduce production prefixed_name -> Pname_ln
-- On Iriref_ reduce production prefixed_name -> Pname_ln
-- On Integer_positive reduce production prefixed_name -> Pname_ln
-- On Integer_negative reduce production prefixed_name -> Pname_ln
-- On Integer reduce production prefixed_name -> Pname_ln
-- On ISURI reduce production prefixed_name -> Pname_ln
-- On ISNUMERIC reduce production prefixed_name -> Pname_ln
-- On ISLITERAL reduce production prefixed_name -> Pname_ln
-- On ISIRI reduce production prefixed_name -> Pname_ln
-- On ISBLANK reduce production prefixed_name -> Pname_ln
-- On IRI reduce production prefixed_name -> Pname_ln
-- On IN reduce production prefixed_name -> Pname_ln
-- On IF reduce production prefixed_name -> Pname_ln
-- On HOURS reduce production prefixed_name -> Pname_ln
-- On HAVING reduce production prefixed_name -> Pname_ln
-- On HAT reduce production prefixed_name -> Pname_ln
-- On GTE reduce production prefixed_name -> Pname_ln
-- On GT reduce production prefixed_name -> Pname_ln
-- On GROUP_CONCAT reduce production prefixed_name -> Pname_ln
-- On GROUP reduce production prefixed_name -> Pname_ln
-- On GRAPH reduce production prefixed_name -> Pname_ln
-- On FROM reduce production prefixed_name -> Pname_ln
-- On FLOOR reduce production prefixed_name -> Pname_ln
-- On FILTER reduce production prefixed_name -> Pname_ln
-- On EXISTS reduce production prefixed_name -> Pname_ln
-- On EQUAL reduce production prefixed_name -> Pname_ln
-- On EOF reduce production prefixed_name -> Pname_ln
-- On ENCODE_FOR_URI reduce production prefixed_name -> Pname_ln
-- On Double_positive reduce production prefixed_name -> Pname_ln
-- On Double_negative reduce production prefixed_name -> Pname_ln
-- On Double reduce production prefixed_name -> Pname_ln
-- On Decimal_positive reduce production prefixed_name -> Pname_ln
-- On Decimal_negative reduce production prefixed_name -> Pname_ln
-- On Decimal reduce production prefixed_name -> Pname_ln
-- On DOT reduce production prefixed_name -> Pname_ln
-- On DAY reduce production prefixed_name -> Pname_ln
-- On DATATYPE reduce production prefixed_name -> Pname_ln
-- On COUNT reduce production prefixed_name -> Pname_ln
-- On CONTAINS reduce production prefixed_name -> Pname_ln
-- On CONCAT reduce production prefixed_name -> Pname_ln
-- On COMMA reduce production prefixed_name -> Pname_ln
-- On COALESCE reduce production prefixed_name -> Pname_ln
-- On CEIL reduce production prefixed_name -> Pname_ln
-- On Boolean reduce production prefixed_name -> Pname_ln
-- On Blank_node_label reduce production prefixed_name -> Pname_ln
-- On BOUND reduce production prefixed_name -> Pname_ln
-- On BNODE reduce production prefixed_name -> Pname_ln
-- On BIND reduce production prefixed_name -> Pname_ln
-- On BANG reduce production prefixed_name -> Pname_ln
-- On AVG reduce production prefixed_name -> Pname_ln
-- On AS reduce production prefixed_name -> Pname_ln
-- On ANON reduce production prefixed_name -> Pname_ln
-- On AMPAMP reduce production prefixed_name -> Pname_ln
-- On ABS reduce production prefixed_name -> Pname_ln
-- On A reduce production prefixed_name -> Pname_ln

State 81:
numexp -> PLUS . expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 573
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 82:
built_in_call -> NOW . NIL [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On NIL shift to state 83

State 83:
built_in_call -> NOW NIL . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production built_in_call -> NOW NIL
-- On Var2 reduce production built_in_call -> NOW NIL
-- On Var1 reduce production built_in_call -> NOW NIL
-- On VALUES reduce production built_in_call -> NOW NIL
-- On UUID reduce production built_in_call -> NOW NIL
-- On URI reduce production built_in_call -> NOW NIL
-- On UCASE reduce production built_in_call -> NOW NIL
-- On TZ reduce production built_in_call -> NOW NIL
-- On TIMEZONE reduce production built_in_call -> NOW NIL
-- On String_literal reduce production built_in_call -> NOW NIL
-- On SUM reduce production built_in_call -> NOW NIL
-- On SUBSTR reduce production built_in_call -> NOW NIL
-- On STRUUID reduce production built_in_call -> NOW NIL
-- On STRSTARTS reduce production built_in_call -> NOW NIL
-- On STRLEN reduce production built_in_call -> NOW NIL
-- On STRLANG reduce production built_in_call -> NOW NIL
-- On STRENDS reduce production built_in_call -> NOW NIL
-- On STRDT reduce production built_in_call -> NOW NIL
-- On STRBEFORE reduce production built_in_call -> NOW NIL
-- On STRAFTER reduce production built_in_call -> NOW NIL
-- On STR reduce production built_in_call -> NOW NIL
-- On STAR reduce production built_in_call -> NOW NIL
-- On SLASH reduce production built_in_call -> NOW NIL
-- On SHA512 reduce production built_in_call -> NOW NIL
-- On SHA384 reduce production built_in_call -> NOW NIL
-- On SHA256 reduce production built_in_call -> NOW NIL
-- On SHA1 reduce production built_in_call -> NOW NIL
-- On SERVICE reduce production built_in_call -> NOW NIL
-- On SEMICOLON reduce production built_in_call -> NOW NIL
-- On SECONDS reduce production built_in_call -> NOW NIL
-- On SAMPLE reduce production built_in_call -> NOW NIL
-- On SAMETERM reduce production built_in_call -> NOW NIL
-- On RPAR reduce production built_in_call -> NOW NIL
-- On ROUND reduce production built_in_call -> NOW NIL
-- On REPLACE reduce production built_in_call -> NOW NIL
-- On REGEX reduce production built_in_call -> NOW NIL
-- On RBRACE reduce production built_in_call -> NOW NIL
-- On RAND reduce production built_in_call -> NOW NIL
-- On Pname_ns reduce production built_in_call -> NOW NIL
-- On Pname_ln reduce production built_in_call -> NOW NIL
-- On PLUS reduce production built_in_call -> NOW NIL
-- On PIPEPIPE reduce production built_in_call -> NOW NIL
-- On ORDER reduce production built_in_call -> NOW NIL
-- On OPTIONAL reduce production built_in_call -> NOW NIL
-- On OFFSET reduce production built_in_call -> NOW NIL
-- On NOW reduce production built_in_call -> NOW NIL
-- On NOTEQUAL reduce production built_in_call -> NOW NIL
-- On NOT reduce production built_in_call -> NOW NIL
-- On NIL reduce production built_in_call -> NOW NIL
-- On MONTH reduce production built_in_call -> NOW NIL
-- On MINUTES reduce production built_in_call -> NOW NIL
-- On MINUS reduce production built_in_call -> NOW NIL
-- On MIN reduce production built_in_call -> NOW NIL
-- On MD5 reduce production built_in_call -> NOW NIL
-- On MAX reduce production built_in_call -> NOW NIL
-- On LTE reduce production built_in_call -> NOW NIL
-- On LT reduce production built_in_call -> NOW NIL
-- On LPAR reduce production built_in_call -> NOW NIL
-- On LIMIT reduce production built_in_call -> NOW NIL
-- On LCASE reduce production built_in_call -> NOW NIL
-- On LBRACKET reduce production built_in_call -> NOW NIL
-- On LBRACE reduce production built_in_call -> NOW NIL
-- On LANGMATCHES reduce production built_in_call -> NOW NIL
-- On LANG reduce production built_in_call -> NOW NIL
-- On Iriref_ reduce production built_in_call -> NOW NIL
-- On Integer_positive reduce production built_in_call -> NOW NIL
-- On Integer_negative reduce production built_in_call -> NOW NIL
-- On Integer reduce production built_in_call -> NOW NIL
-- On ISURI reduce production built_in_call -> NOW NIL
-- On ISNUMERIC reduce production built_in_call -> NOW NIL
-- On ISLITERAL reduce production built_in_call -> NOW NIL
-- On ISIRI reduce production built_in_call -> NOW NIL
-- On ISBLANK reduce production built_in_call -> NOW NIL
-- On IRI reduce production built_in_call -> NOW NIL
-- On IN reduce production built_in_call -> NOW NIL
-- On IF reduce production built_in_call -> NOW NIL
-- On HOURS reduce production built_in_call -> NOW NIL
-- On HAVING reduce production built_in_call -> NOW NIL
-- On GTE reduce production built_in_call -> NOW NIL
-- On GT reduce production built_in_call -> NOW NIL
-- On GROUP_CONCAT reduce production built_in_call -> NOW NIL
-- On GRAPH reduce production built_in_call -> NOW NIL
-- On FLOOR reduce production built_in_call -> NOW NIL
-- On FILTER reduce production built_in_call -> NOW NIL
-- On EXISTS reduce production built_in_call -> NOW NIL
-- On EQUAL reduce production built_in_call -> NOW NIL
-- On EOF reduce production built_in_call -> NOW NIL
-- On ENCODE_FOR_URI reduce production built_in_call -> NOW NIL
-- On Double_positive reduce production built_in_call -> NOW NIL
-- On Double_negative reduce production built_in_call -> NOW NIL
-- On Double reduce production built_in_call -> NOW NIL
-- On Decimal_positive reduce production built_in_call -> NOW NIL
-- On Decimal_negative reduce production built_in_call -> NOW NIL
-- On Decimal reduce production built_in_call -> NOW NIL
-- On DOT reduce production built_in_call -> NOW NIL
-- On DESC reduce production built_in_call -> NOW NIL
-- On DAY reduce production built_in_call -> NOW NIL
-- On DATATYPE reduce production built_in_call -> NOW NIL
-- On COUNT reduce production built_in_call -> NOW NIL
-- On CONTAINS reduce production built_in_call -> NOW NIL
-- On CONCAT reduce production built_in_call -> NOW NIL
-- On COMMA reduce production built_in_call -> NOW NIL
-- On COALESCE reduce production built_in_call -> NOW NIL
-- On CEIL reduce production built_in_call -> NOW NIL
-- On Boolean reduce production built_in_call -> NOW NIL
-- On Blank_node_label reduce production built_in_call -> NOW NIL
-- On BOUND reduce production built_in_call -> NOW NIL
-- On BNODE reduce production built_in_call -> NOW NIL
-- On BIND reduce production built_in_call -> NOW NIL
-- On BANG reduce production built_in_call -> NOW NIL
-- On AVG reduce production built_in_call -> NOW NIL
-- On ASC reduce production built_in_call -> NOW NIL
-- On AS reduce production built_in_call -> NOW NIL
-- On ANON reduce production built_in_call -> NOW NIL
-- On AMPAMP reduce production built_in_call -> NOW NIL
-- On ABS reduce production built_in_call -> NOW NIL

State 84:
built_in_call -> NOT . EXISTS group_graph_pattern [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On EXISTS shift to state 85

State 85:
built_in_call -> NOT EXISTS . group_graph_pattern [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On LBRACE shift to state 86
-- On group_graph_pattern shift to state 572

State 86:
group_graph_pattern -> LBRACE . subselect RBRACE [ YEAR Var2 Var1 VALUES UUID URI UNION UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GROUP GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
group_graph_pattern -> LBRACE . group_graph_pattern_sub RBRACE [ YEAR Var2 Var1 VALUES UUID URI UNION UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GROUP GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On String_literal shift to state 31
-- On SELECT shift to state 10
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On NIL shift to state 87
-- On LPAR shift to state 88
-- On LBRACKET shift to state 89
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On Boolean shift to state 139
-- On Blank_node_label shift to state 140
-- On ANON shift to state 141
-- On var_or_term shift to state 214
-- On var shift to state 143
-- On triples_same_subject_path shift to state 216
-- On triples_node_path shift to state 218
-- On triples_block_details shift to state 226
-- On triples_block shift to state 227
-- On subselect shift to state 228
-- On string shift to state 145
-- On select_clause shift to state 230
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 151
-- On prefixed_name shift to state 97
-- On option(triples_block) shift to state 528
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 159
-- On iri shift to state 160
-- On group_graph_pattern_sub shift to state 570
-- On graph_term shift to state 161
-- On collection_path shift to state 163
-- On boolean_literal shift to state 164
-- On blank_node_property_list_path shift to state 165
-- On blank_node shift to state 166
-- On VALUES reduce production option(triples_block) ->
-- On SERVICE reduce production option(triples_block) ->
-- On RBRACE reduce production option(triples_block) ->
-- On OPTIONAL reduce production option(triples_block) ->
-- On MINUS reduce production option(triples_block) ->
-- On LBRACE reduce production option(triples_block) ->
-- On GRAPH reduce production option(triples_block) ->
-- On FILTER reduce production option(triples_block) ->
-- On BIND reduce production option(triples_block) ->

State 87:
graph_term -> NIL . [ Var2 Var1 VALUES String_literal SERVICE SEMICOLON RPAR RBRACKET RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer HAT GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT COMMA Boolean Blank_node_label BIND BANG ANON A ]
-- On Var2 reduce production graph_term -> NIL
-- On Var1 reduce production graph_term -> NIL
-- On VALUES reduce production graph_term -> NIL
-- On String_literal reduce production graph_term -> NIL
-- On SERVICE reduce production graph_term -> NIL
-- On SEMICOLON reduce production graph_term -> NIL
-- On RPAR reduce production graph_term -> NIL
-- On RBRACKET reduce production graph_term -> NIL
-- On RBRACE reduce production graph_term -> NIL
-- On Pname_ns reduce production graph_term -> NIL
-- On Pname_ln reduce production graph_term -> NIL
-- On OPTIONAL reduce production graph_term -> NIL
-- On NIL reduce production graph_term -> NIL
-- On MINUS reduce production graph_term -> NIL
-- On LPAR reduce production graph_term -> NIL
-- On LBRACKET reduce production graph_term -> NIL
-- On LBRACE reduce production graph_term -> NIL
-- On Iriref_ reduce production graph_term -> NIL
-- On Integer_positive reduce production graph_term -> NIL
-- On Integer_negative reduce production graph_term -> NIL
-- On Integer reduce production graph_term -> NIL
-- On HAT reduce production graph_term -> NIL
-- On GRAPH reduce production graph_term -> NIL
-- On FILTER reduce production graph_term -> NIL
-- On Double_positive reduce production graph_term -> NIL
-- On Double_negative reduce production graph_term -> NIL
-- On Double reduce production graph_term -> NIL
-- On Decimal_positive reduce production graph_term -> NIL
-- On Decimal_negative reduce production graph_term -> NIL
-- On Decimal reduce production graph_term -> NIL
-- On DOT reduce production graph_term -> NIL
-- On COMMA reduce production graph_term -> NIL
-- On Boolean reduce production graph_term -> NIL
-- On Blank_node_label reduce production graph_term -> NIL
-- On BIND reduce production graph_term -> NIL
-- On BANG reduce production graph_term -> NIL
-- On ANON reduce production graph_term -> NIL
-- On A reduce production graph_term -> NIL

State 88:
collection_path -> LPAR . nonempty_list(graph_node_path) RPAR [ Var2 Var1 VALUES String_literal SERVICE SEMICOLON RPAR RBRACKET RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer HAT GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT COMMA Boolean Blank_node_label BIND BANG ANON A ]
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On String_literal shift to state 31
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On NIL shift to state 87
-- On LPAR shift to state 88
-- On LBRACKET shift to state 89
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On Boolean shift to state 139
-- On Blank_node_label shift to state 140
-- On ANON shift to state 141
-- On var_or_term shift to state 142
-- On var shift to state 143
-- On triples_node_path shift to state 144
-- On string shift to state 145
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 151
-- On prefixed_name shift to state 97
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 159
-- On nonempty_list(graph_node_path) shift to state 210
-- On iri shift to state 160
-- On graph_term shift to state 161
-- On graph_node_path shift to state 212
-- On collection_path shift to state 163
-- On boolean_literal shift to state 164
-- On blank_node_property_list_path shift to state 165
-- On blank_node shift to state 166

State 89:
blank_node_property_list_path -> LBRACKET . property_list_path_not_empty RBRACKET [ Var2 Var1 VALUES String_literal SERVICE SEMICOLON RPAR RBRACKET RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer HAT GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT COMMA Boolean Blank_node_label BIND BANG ANON A ]
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On LPAR shift to state 90
-- On Iriref_ shift to state 91
-- On HAT shift to state 92
-- On BANG shift to state 93
-- On A shift to state 108
-- On verb_path_or_simple shift to state 129
-- On var shift to state 202
-- On separated_nonempty_list(SLASH,path_elt_or_inverse) shift to state 117
-- On separated_nonempty_list(PIPE,path_sequence) shift to state 118
-- On property_list_path_not_empty shift to state 208
-- On prefixed_name shift to state 97
-- On path_sequence shift to state 119
-- On path_primary shift to state 109
-- On path_elt_or_inverse shift to state 122
-- On path_elt shift to state 125
-- On path_alternative shift to state 126
-- On path shift to state 203
-- On iri shift to state 116

State 90:
path_primary -> LPAR . path RPAR [ Var2 Var1 String_literal STAR SLASH RPAR QM Pname_ns Pname_ln PLUS PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On LPAR shift to state 90
-- On Iriref_ shift to state 91
-- On HAT shift to state 92
-- On BANG shift to state 93
-- On A shift to state 108
-- On separated_nonempty_list(SLASH,path_elt_or_inverse) shift to state 117
-- On separated_nonempty_list(PIPE,path_sequence) shift to state 118
-- On prefixed_name shift to state 97
-- On path_sequence shift to state 119
-- On path_primary shift to state 109
-- On path_elt_or_inverse shift to state 122
-- On path_elt shift to state 125
-- On path_alternative shift to state 126
-- On path shift to state 127
-- On iri shift to state 116

State 91:
iri -> Iriref_ . [ YEAR WHERE Var2 Var1 VALUES UUID URI UNDEF UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACKET RBRACE RAND QM Pname_ns Pname_ln PLUS PIPEPIPE PIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING HAT GTE GT GROUP_CONCAT GROUP GRAPH FROM FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG AS ANON AMPAMP ABS A ]
-- On YEAR reduce production iri -> Iriref_
-- On WHERE reduce production iri -> Iriref_
-- On Var2 reduce production iri -> Iriref_
-- On Var1 reduce production iri -> Iriref_
-- On VALUES reduce production iri -> Iriref_
-- On UUID reduce production iri -> Iriref_
-- On URI reduce production iri -> Iriref_
-- On UNDEF reduce production iri -> Iriref_
-- On UCASE reduce production iri -> Iriref_
-- On TZ reduce production iri -> Iriref_
-- On TIMEZONE reduce production iri -> Iriref_
-- On String_literal reduce production iri -> Iriref_
-- On SUM reduce production iri -> Iriref_
-- On SUBSTR reduce production iri -> Iriref_
-- On STRUUID reduce production iri -> Iriref_
-- On STRSTARTS reduce production iri -> Iriref_
-- On STRLEN reduce production iri -> Iriref_
-- On STRLANG reduce production iri -> Iriref_
-- On STRENDS reduce production iri -> Iriref_
-- On STRDT reduce production iri -> Iriref_
-- On STRBEFORE reduce production iri -> Iriref_
-- On STRAFTER reduce production iri -> Iriref_
-- On STR reduce production iri -> Iriref_
-- On STAR reduce production iri -> Iriref_
-- On SLASH reduce production iri -> Iriref_
-- On SHA512 reduce production iri -> Iriref_
-- On SHA384 reduce production iri -> Iriref_
-- On SHA256 reduce production iri -> Iriref_
-- On SHA1 reduce production iri -> Iriref_
-- On SERVICE reduce production iri -> Iriref_
-- On SEMICOLON reduce production iri -> Iriref_
-- On SECONDS reduce production iri -> Iriref_
-- On SAMPLE reduce production iri -> Iriref_
-- On SAMETERM reduce production iri -> Iriref_
-- On RPAR reduce production iri -> Iriref_
-- On ROUND reduce production iri -> Iriref_
-- On REPLACE reduce production iri -> Iriref_
-- On REGEX reduce production iri -> Iriref_
-- On RBRACKET reduce production iri -> Iriref_
-- On RBRACE reduce production iri -> Iriref_
-- On RAND reduce production iri -> Iriref_
-- On QM reduce production iri -> Iriref_
-- On Pname_ns reduce production iri -> Iriref_
-- On Pname_ln reduce production iri -> Iriref_
-- On PLUS reduce production iri -> Iriref_
-- On PIPEPIPE reduce production iri -> Iriref_
-- On PIPE reduce production iri -> Iriref_
-- On ORDER reduce production iri -> Iriref_
-- On OPTIONAL reduce production iri -> Iriref_
-- On OFFSET reduce production iri -> Iriref_
-- On NOW reduce production iri -> Iriref_
-- On NOTEQUAL reduce production iri -> Iriref_
-- On NOT reduce production iri -> Iriref_
-- On NIL reduce production iri -> Iriref_
-- On MONTH reduce production iri -> Iriref_
-- On MINUTES reduce production iri -> Iriref_
-- On MINUS reduce production iri -> Iriref_
-- On MIN reduce production iri -> Iriref_
-- On MD5 reduce production iri -> Iriref_
-- On MAX reduce production iri -> Iriref_
-- On LTE reduce production iri -> Iriref_
-- On LT reduce production iri -> Iriref_
-- On LPAR reduce production iri -> Iriref_
-- On LIMIT reduce production iri -> Iriref_
-- On LCASE reduce production iri -> Iriref_
-- On LBRACKET reduce production iri -> Iriref_
-- On LBRACE reduce production iri -> Iriref_
-- On LANGMATCHES reduce production iri -> Iriref_
-- On LANG reduce production iri -> Iriref_
-- On Iriref_ reduce production iri -> Iriref_
-- On Integer_positive reduce production iri -> Iriref_
-- On Integer_negative reduce production iri -> Iriref_
-- On Integer reduce production iri -> Iriref_
-- On ISURI reduce production iri -> Iriref_
-- On ISNUMERIC reduce production iri -> Iriref_
-- On ISLITERAL reduce production iri -> Iriref_
-- On ISIRI reduce production iri -> Iriref_
-- On ISBLANK reduce production iri -> Iriref_
-- On IRI reduce production iri -> Iriref_
-- On IN reduce production iri -> Iriref_
-- On IF reduce production iri -> Iriref_
-- On HOURS reduce production iri -> Iriref_
-- On HAVING reduce production iri -> Iriref_
-- On HAT reduce production iri -> Iriref_
-- On GTE reduce production iri -> Iriref_
-- On GT reduce production iri -> Iriref_
-- On GROUP_CONCAT reduce production iri -> Iriref_
-- On GROUP reduce production iri -> Iriref_
-- On GRAPH reduce production iri -> Iriref_
-- On FROM reduce production iri -> Iriref_
-- On FLOOR reduce production iri -> Iriref_
-- On FILTER reduce production iri -> Iriref_
-- On EXISTS reduce production iri -> Iriref_
-- On EQUAL reduce production iri -> Iriref_
-- On EOF reduce production iri -> Iriref_
-- On ENCODE_FOR_URI reduce production iri -> Iriref_
-- On Double_positive reduce production iri -> Iriref_
-- On Double_negative reduce production iri -> Iriref_
-- On Double reduce production iri -> Iriref_
-- On Decimal_positive reduce production iri -> Iriref_
-- On Decimal_negative reduce production iri -> Iriref_
-- On Decimal reduce production iri -> Iriref_
-- On DOT reduce production iri -> Iriref_
-- On DAY reduce production iri -> Iriref_
-- On DATATYPE reduce production iri -> Iriref_
-- On COUNT reduce production iri -> Iriref_
-- On CONTAINS reduce production iri -> Iriref_
-- On CONCAT reduce production iri -> Iriref_
-- On COMMA reduce production iri -> Iriref_
-- On COALESCE reduce production iri -> Iriref_
-- On CEIL reduce production iri -> Iriref_
-- On Boolean reduce production iri -> Iriref_
-- On Blank_node_label reduce production iri -> Iriref_
-- On BOUND reduce production iri -> Iriref_
-- On BNODE reduce production iri -> Iriref_
-- On BIND reduce production iri -> Iriref_
-- On BANG reduce production iri -> Iriref_
-- On AVG reduce production iri -> Iriref_
-- On AS reduce production iri -> Iriref_
-- On ANON reduce production iri -> Iriref_
-- On AMPAMP reduce production iri -> Iriref_
-- On ABS reduce production iri -> Iriref_
-- On A reduce production iri -> Iriref_

State 92:
path_elt_or_inverse -> HAT . path_elt [ Var2 Var1 String_literal SLASH RPAR Pname_ns Pname_ln PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On LPAR shift to state 90
-- On Iriref_ shift to state 91
-- On BANG shift to state 93
-- On A shift to state 108
-- On prefixed_name shift to state 97
-- On path_primary shift to state 109
-- On path_elt shift to state 115
-- On iri shift to state 116

State 93:
path_primary -> BANG . path_negated_property_list [ Var2 Var1 String_literal STAR SLASH RPAR QM Pname_ns Pname_ln PLUS PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On LPAR shift to state 94
-- On Iriref_ shift to state 91
-- On HAT shift to state 95
-- On A shift to state 99
-- On prefixed_name shift to state 97
-- On path_one_in_property_set shift to state 106
-- On path_negated_property_list shift to state 107
-- On iri shift to state 104

State 94:
path_negated_property_list -> LPAR . loption(separated_nonempty_list(PIPE,path_one_in_property_set)) [ Var2 Var1 String_literal STAR SLASH RPAR QM Pname_ns Pname_ln PLUS PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On Iriref_ shift to state 91
-- On HAT shift to state 95
-- On A shift to state 99
-- On separated_nonempty_list(PIPE,path_one_in_property_set) shift to state 100
-- On prefixed_name shift to state 97
-- On path_one_in_property_set shift to state 101
-- On loption(separated_nonempty_list(PIPE,path_one_in_property_set)) shift to state 105
-- On iri shift to state 104
-- On Var2 reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) ->
-- On Var1 reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) ->
-- On String_literal reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) ->
-- On STAR reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) ->
-- On SLASH reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) ->
-- On RPAR reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) ->
-- On QM reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) ->
-- On Pname_ns reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) ->
-- On Pname_ln reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) ->
-- On PLUS reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) ->
-- On PIPE reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) ->
-- On NIL reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) ->
-- On LPAR reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) ->
-- On LBRACKET reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) ->
-- On Iriref_ reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) ->
-- On Integer_positive reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) ->
-- On Integer_negative reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) ->
-- On Integer reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) ->
-- On Double_positive reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) ->
-- On Double_negative reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) ->
-- On Double reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) ->
-- On Decimal_positive reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) ->
-- On Decimal_negative reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) ->
-- On Decimal reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) ->
-- On Boolean reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) ->
-- On Blank_node_label reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) ->
-- On ANON reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) ->
** Conflict on Pname_ns Pname_ln Iriref_

State 95:
path_one_in_property_set -> HAT . iri [ Var2 Var1 String_literal STAR SLASH RPAR QM Pname_ns Pname_ln PLUS PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
path_one_in_property_set -> HAT . A [ Var2 Var1 String_literal STAR SLASH RPAR QM Pname_ns Pname_ln PLUS PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On Iriref_ shift to state 91
-- On A shift to state 96
-- On prefixed_name shift to state 97
-- On iri shift to state 98

State 96:
path_one_in_property_set -> HAT A . [ Var2 Var1 String_literal STAR SLASH RPAR QM Pname_ns Pname_ln PLUS PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
-- On Var2 reduce production path_one_in_property_set -> HAT A
-- On Var1 reduce production path_one_in_property_set -> HAT A
-- On String_literal reduce production path_one_in_property_set -> HAT A
-- On STAR reduce production path_one_in_property_set -> HAT A
-- On SLASH reduce production path_one_in_property_set -> HAT A
-- On RPAR reduce production path_one_in_property_set -> HAT A
-- On QM reduce production path_one_in_property_set -> HAT A
-- On Pname_ns reduce production path_one_in_property_set -> HAT A
-- On Pname_ln reduce production path_one_in_property_set -> HAT A
-- On PLUS reduce production path_one_in_property_set -> HAT A
-- On PIPE reduce production path_one_in_property_set -> HAT A
-- On NIL reduce production path_one_in_property_set -> HAT A
-- On LPAR reduce production path_one_in_property_set -> HAT A
-- On LBRACKET reduce production path_one_in_property_set -> HAT A
-- On Iriref_ reduce production path_one_in_property_set -> HAT A
-- On Integer_positive reduce production path_one_in_property_set -> HAT A
-- On Integer_negative reduce production path_one_in_property_set -> HAT A
-- On Integer reduce production path_one_in_property_set -> HAT A
-- On Double_positive reduce production path_one_in_property_set -> HAT A
-- On Double_negative reduce production path_one_in_property_set -> HAT A
-- On Double reduce production path_one_in_property_set -> HAT A
-- On Decimal_positive reduce production path_one_in_property_set -> HAT A
-- On Decimal_negative reduce production path_one_in_property_set -> HAT A
-- On Decimal reduce production path_one_in_property_set -> HAT A
-- On Boolean reduce production path_one_in_property_set -> HAT A
-- On Blank_node_label reduce production path_one_in_property_set -> HAT A
-- On ANON reduce production path_one_in_property_set -> HAT A

State 97:
iri -> prefixed_name . [ YEAR WHERE Var2 Var1 VALUES UUID URI UNDEF UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACKET RBRACE RAND QM Pname_ns Pname_ln PLUS PIPEPIPE PIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING HAT GTE GT GROUP_CONCAT GROUP GRAPH FROM FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG AS ANON AMPAMP ABS A ]
-- On YEAR reduce production iri -> prefixed_name
-- On WHERE reduce production iri -> prefixed_name
-- On Var2 reduce production iri -> prefixed_name
-- On Var1 reduce production iri -> prefixed_name
-- On VALUES reduce production iri -> prefixed_name
-- On UUID reduce production iri -> prefixed_name
-- On URI reduce production iri -> prefixed_name
-- On UNDEF reduce production iri -> prefixed_name
-- On UCASE reduce production iri -> prefixed_name
-- On TZ reduce production iri -> prefixed_name
-- On TIMEZONE reduce production iri -> prefixed_name
-- On String_literal reduce production iri -> prefixed_name
-- On SUM reduce production iri -> prefixed_name
-- On SUBSTR reduce production iri -> prefixed_name
-- On STRUUID reduce production iri -> prefixed_name
-- On STRSTARTS reduce production iri -> prefixed_name
-- On STRLEN reduce production iri -> prefixed_name
-- On STRLANG reduce production iri -> prefixed_name
-- On STRENDS reduce production iri -> prefixed_name
-- On STRDT reduce production iri -> prefixed_name
-- On STRBEFORE reduce production iri -> prefixed_name
-- On STRAFTER reduce production iri -> prefixed_name
-- On STR reduce production iri -> prefixed_name
-- On STAR reduce production iri -> prefixed_name
-- On SLASH reduce production iri -> prefixed_name
-- On SHA512 reduce production iri -> prefixed_name
-- On SHA384 reduce production iri -> prefixed_name
-- On SHA256 reduce production iri -> prefixed_name
-- On SHA1 reduce production iri -> prefixed_name
-- On SERVICE reduce production iri -> prefixed_name
-- On SEMICOLON reduce production iri -> prefixed_name
-- On SECONDS reduce production iri -> prefixed_name
-- On SAMPLE reduce production iri -> prefixed_name
-- On SAMETERM reduce production iri -> prefixed_name
-- On RPAR reduce production iri -> prefixed_name
-- On ROUND reduce production iri -> prefixed_name
-- On REPLACE reduce production iri -> prefixed_name
-- On REGEX reduce production iri -> prefixed_name
-- On RBRACKET reduce production iri -> prefixed_name
-- On RBRACE reduce production iri -> prefixed_name
-- On RAND reduce production iri -> prefixed_name
-- On QM reduce production iri -> prefixed_name
-- On Pname_ns reduce production iri -> prefixed_name
-- On Pname_ln reduce production iri -> prefixed_name
-- On PLUS reduce production iri -> prefixed_name
-- On PIPEPIPE reduce production iri -> prefixed_name
-- On PIPE reduce production iri -> prefixed_name
-- On ORDER reduce production iri -> prefixed_name
-- On OPTIONAL reduce production iri -> prefixed_name
-- On OFFSET reduce production iri -> prefixed_name
-- On NOW reduce production iri -> prefixed_name
-- On NOTEQUAL reduce production iri -> prefixed_name
-- On NOT reduce production iri -> prefixed_name
-- On NIL reduce production iri -> prefixed_name
-- On MONTH reduce production iri -> prefixed_name
-- On MINUTES reduce production iri -> prefixed_name
-- On MINUS reduce production iri -> prefixed_name
-- On MIN reduce production iri -> prefixed_name
-- On MD5 reduce production iri -> prefixed_name
-- On MAX reduce production iri -> prefixed_name
-- On LTE reduce production iri -> prefixed_name
-- On LT reduce production iri -> prefixed_name
-- On LPAR reduce production iri -> prefixed_name
-- On LIMIT reduce production iri -> prefixed_name
-- On LCASE reduce production iri -> prefixed_name
-- On LBRACKET reduce production iri -> prefixed_name
-- On LBRACE reduce production iri -> prefixed_name
-- On LANGMATCHES reduce production iri -> prefixed_name
-- On LANG reduce production iri -> prefixed_name
-- On Iriref_ reduce production iri -> prefixed_name
-- On Integer_positive reduce production iri -> prefixed_name
-- On Integer_negative reduce production iri -> prefixed_name
-- On Integer reduce production iri -> prefixed_name
-- On ISURI reduce production iri -> prefixed_name
-- On ISNUMERIC reduce production iri -> prefixed_name
-- On ISLITERAL reduce production iri -> prefixed_name
-- On ISIRI reduce production iri -> prefixed_name
-- On ISBLANK reduce production iri -> prefixed_name
-- On IRI reduce production iri -> prefixed_name
-- On IN reduce production iri -> prefixed_name
-- On IF reduce production iri -> prefixed_name
-- On HOURS reduce production iri -> prefixed_name
-- On HAVING reduce production iri -> prefixed_name
-- On HAT reduce production iri -> prefixed_name
-- On GTE reduce production iri -> prefixed_name
-- On GT reduce production iri -> prefixed_name
-- On GROUP_CONCAT reduce production iri -> prefixed_name
-- On GROUP reduce production iri -> prefixed_name
-- On GRAPH reduce production iri -> prefixed_name
-- On FROM reduce production iri -> prefixed_name
-- On FLOOR reduce production iri -> prefixed_name
-- On FILTER reduce production iri -> prefixed_name
-- On EXISTS reduce production iri -> prefixed_name
-- On EQUAL reduce production iri -> prefixed_name
-- On EOF reduce production iri -> prefixed_name
-- On ENCODE_FOR_URI reduce production iri -> prefixed_name
-- On Double_positive reduce production iri -> prefixed_name
-- On Double_negative reduce production iri -> prefixed_name
-- On Double reduce production iri -> prefixed_name
-- On Decimal_positive reduce production iri -> prefixed_name
-- On Decimal_negative reduce production iri -> prefixed_name
-- On Decimal reduce production iri -> prefixed_name
-- On DOT reduce production iri -> prefixed_name
-- On DAY reduce production iri -> prefixed_name
-- On DATATYPE reduce production iri -> prefixed_name
-- On COUNT reduce production iri -> prefixed_name
-- On CONTAINS reduce production iri -> prefixed_name
-- On CONCAT reduce production iri -> prefixed_name
-- On COMMA reduce production iri -> prefixed_name
-- On COALESCE reduce production iri -> prefixed_name
-- On CEIL reduce production iri -> prefixed_name
-- On Boolean reduce production iri -> prefixed_name
-- On Blank_node_label reduce production iri -> prefixed_name
-- On BOUND reduce production iri -> prefixed_name
-- On BNODE reduce production iri -> prefixed_name
-- On BIND reduce production iri -> prefixed_name
-- On BANG reduce production iri -> prefixed_name
-- On AVG reduce production iri -> prefixed_name
-- On AS reduce production iri -> prefixed_name
-- On ANON reduce production iri -> prefixed_name
-- On AMPAMP reduce production iri -> prefixed_name
-- On ABS reduce production iri -> prefixed_name
-- On A reduce production iri -> prefixed_name

State 98:
path_one_in_property_set -> HAT iri . [ Var2 Var1 String_literal STAR SLASH RPAR QM Pname_ns Pname_ln PLUS PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
-- On Var2 reduce production path_one_in_property_set -> HAT iri
-- On Var1 reduce production path_one_in_property_set -> HAT iri
-- On String_literal reduce production path_one_in_property_set -> HAT iri
-- On STAR reduce production path_one_in_property_set -> HAT iri
-- On SLASH reduce production path_one_in_property_set -> HAT iri
-- On RPAR reduce production path_one_in_property_set -> HAT iri
-- On QM reduce production path_one_in_property_set -> HAT iri
-- On Pname_ns reduce production path_one_in_property_set -> HAT iri
-- On Pname_ln reduce production path_one_in_property_set -> HAT iri
-- On PLUS reduce production path_one_in_property_set -> HAT iri
-- On PIPE reduce production path_one_in_property_set -> HAT iri
-- On NIL reduce production path_one_in_property_set -> HAT iri
-- On LPAR reduce production path_one_in_property_set -> HAT iri
-- On LBRACKET reduce production path_one_in_property_set -> HAT iri
-- On Iriref_ reduce production path_one_in_property_set -> HAT iri
-- On Integer_positive reduce production path_one_in_property_set -> HAT iri
-- On Integer_negative reduce production path_one_in_property_set -> HAT iri
-- On Integer reduce production path_one_in_property_set -> HAT iri
-- On Double_positive reduce production path_one_in_property_set -> HAT iri
-- On Double_negative reduce production path_one_in_property_set -> HAT iri
-- On Double reduce production path_one_in_property_set -> HAT iri
-- On Decimal_positive reduce production path_one_in_property_set -> HAT iri
-- On Decimal_negative reduce production path_one_in_property_set -> HAT iri
-- On Decimal reduce production path_one_in_property_set -> HAT iri
-- On Boolean reduce production path_one_in_property_set -> HAT iri
-- On Blank_node_label reduce production path_one_in_property_set -> HAT iri
-- On ANON reduce production path_one_in_property_set -> HAT iri

State 99:
path_one_in_property_set -> A . [ Var2 Var1 String_literal STAR SLASH RPAR QM Pname_ns Pname_ln PLUS PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
-- On Var2 reduce production path_one_in_property_set -> A
-- On Var1 reduce production path_one_in_property_set -> A
-- On String_literal reduce production path_one_in_property_set -> A
-- On STAR reduce production path_one_in_property_set -> A
-- On SLASH reduce production path_one_in_property_set -> A
-- On RPAR reduce production path_one_in_property_set -> A
-- On QM reduce production path_one_in_property_set -> A
-- On Pname_ns reduce production path_one_in_property_set -> A
-- On Pname_ln reduce production path_one_in_property_set -> A
-- On PLUS reduce production path_one_in_property_set -> A
-- On PIPE reduce production path_one_in_property_set -> A
-- On NIL reduce production path_one_in_property_set -> A
-- On LPAR reduce production path_one_in_property_set -> A
-- On LBRACKET reduce production path_one_in_property_set -> A
-- On Iriref_ reduce production path_one_in_property_set -> A
-- On Integer_positive reduce production path_one_in_property_set -> A
-- On Integer_negative reduce production path_one_in_property_set -> A
-- On Integer reduce production path_one_in_property_set -> A
-- On Double_positive reduce production path_one_in_property_set -> A
-- On Double_negative reduce production path_one_in_property_set -> A
-- On Double reduce production path_one_in_property_set -> A
-- On Decimal_positive reduce production path_one_in_property_set -> A
-- On Decimal_negative reduce production path_one_in_property_set -> A
-- On Decimal reduce production path_one_in_property_set -> A
-- On Boolean reduce production path_one_in_property_set -> A
-- On Blank_node_label reduce production path_one_in_property_set -> A
-- On ANON reduce production path_one_in_property_set -> A

State 100:
loption(separated_nonempty_list(PIPE,path_one_in_property_set)) -> separated_nonempty_list(PIPE,path_one_in_property_set) . [ Var2 Var1 String_literal STAR SLASH RPAR QM Pname_ns Pname_ln PLUS PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
-- On Var2 reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) -> separated_nonempty_list(PIPE,path_one_in_property_set)
-- On Var1 reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) -> separated_nonempty_list(PIPE,path_one_in_property_set)
-- On String_literal reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) -> separated_nonempty_list(PIPE,path_one_in_property_set)
-- On STAR reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) -> separated_nonempty_list(PIPE,path_one_in_property_set)
-- On SLASH reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) -> separated_nonempty_list(PIPE,path_one_in_property_set)
-- On RPAR reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) -> separated_nonempty_list(PIPE,path_one_in_property_set)
-- On QM reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) -> separated_nonempty_list(PIPE,path_one_in_property_set)
-- On Pname_ns reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) -> separated_nonempty_list(PIPE,path_one_in_property_set)
-- On Pname_ln reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) -> separated_nonempty_list(PIPE,path_one_in_property_set)
-- On PLUS reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) -> separated_nonempty_list(PIPE,path_one_in_property_set)
-- On PIPE reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) -> separated_nonempty_list(PIPE,path_one_in_property_set)
-- On NIL reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) -> separated_nonempty_list(PIPE,path_one_in_property_set)
-- On LPAR reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) -> separated_nonempty_list(PIPE,path_one_in_property_set)
-- On LBRACKET reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) -> separated_nonempty_list(PIPE,path_one_in_property_set)
-- On Iriref_ reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) -> separated_nonempty_list(PIPE,path_one_in_property_set)
-- On Integer_positive reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) -> separated_nonempty_list(PIPE,path_one_in_property_set)
-- On Integer_negative reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) -> separated_nonempty_list(PIPE,path_one_in_property_set)
-- On Integer reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) -> separated_nonempty_list(PIPE,path_one_in_property_set)
-- On Double_positive reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) -> separated_nonempty_list(PIPE,path_one_in_property_set)
-- On Double_negative reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) -> separated_nonempty_list(PIPE,path_one_in_property_set)
-- On Double reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) -> separated_nonempty_list(PIPE,path_one_in_property_set)
-- On Decimal_positive reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) -> separated_nonempty_list(PIPE,path_one_in_property_set)
-- On Decimal_negative reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) -> separated_nonempty_list(PIPE,path_one_in_property_set)
-- On Decimal reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) -> separated_nonempty_list(PIPE,path_one_in_property_set)
-- On Boolean reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) -> separated_nonempty_list(PIPE,path_one_in_property_set)
-- On Blank_node_label reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) -> separated_nonempty_list(PIPE,path_one_in_property_set)
-- On ANON reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) -> separated_nonempty_list(PIPE,path_one_in_property_set)

State 101:
separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set . [ Var2 Var1 String_literal STAR SLASH RPAR QM Pname_ns Pname_ln PLUS PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set . PIPE separated_nonempty_list(PIPE,path_one_in_property_set) [ Var2 Var1 String_literal STAR SLASH RPAR QM Pname_ns Pname_ln PLUS PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
-- On PIPE shift to state 102
-- On Var2 reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set
-- On Var1 reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set
-- On String_literal reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set
-- On STAR reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set
-- On SLASH reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set
-- On RPAR reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set
-- On QM reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set
-- On Pname_ns reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set
-- On Pname_ln reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set
-- On PLUS reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set
-- On PIPE reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set
-- On NIL reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set
-- On LPAR reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set
-- On LBRACKET reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set
-- On Iriref_ reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set
-- On Integer_positive reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set
-- On Integer_negative reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set
-- On Integer reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set
-- On Double_positive reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set
-- On Double_negative reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set
-- On Double reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set
-- On Decimal_positive reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set
-- On Decimal_negative reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set
-- On Decimal reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set
-- On Boolean reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set
-- On Blank_node_label reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set
-- On ANON reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set
** Conflict on PIPE

State 102:
separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set PIPE . separated_nonempty_list(PIPE,path_one_in_property_set) [ Var2 Var1 String_literal STAR SLASH RPAR QM Pname_ns Pname_ln PLUS PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On Iriref_ shift to state 91
-- On HAT shift to state 95
-- On A shift to state 99
-- On separated_nonempty_list(PIPE,path_one_in_property_set) shift to state 103
-- On prefixed_name shift to state 97
-- On path_one_in_property_set shift to state 101
-- On iri shift to state 104

State 103:
separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set PIPE separated_nonempty_list(PIPE,path_one_in_property_set) . [ Var2 Var1 String_literal STAR SLASH RPAR QM Pname_ns Pname_ln PLUS PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
-- On Var2 reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set PIPE separated_nonempty_list(PIPE,path_one_in_property_set)
-- On Var1 reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set PIPE separated_nonempty_list(PIPE,path_one_in_property_set)
-- On String_literal reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set PIPE separated_nonempty_list(PIPE,path_one_in_property_set)
-- On STAR reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set PIPE separated_nonempty_list(PIPE,path_one_in_property_set)
-- On SLASH reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set PIPE separated_nonempty_list(PIPE,path_one_in_property_set)
-- On RPAR reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set PIPE separated_nonempty_list(PIPE,path_one_in_property_set)
-- On QM reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set PIPE separated_nonempty_list(PIPE,path_one_in_property_set)
-- On Pname_ns reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set PIPE separated_nonempty_list(PIPE,path_one_in_property_set)
-- On Pname_ln reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set PIPE separated_nonempty_list(PIPE,path_one_in_property_set)
-- On PLUS reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set PIPE separated_nonempty_list(PIPE,path_one_in_property_set)
-- On PIPE reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set PIPE separated_nonempty_list(PIPE,path_one_in_property_set)
-- On NIL reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set PIPE separated_nonempty_list(PIPE,path_one_in_property_set)
-- On LPAR reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set PIPE separated_nonempty_list(PIPE,path_one_in_property_set)
-- On LBRACKET reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set PIPE separated_nonempty_list(PIPE,path_one_in_property_set)
-- On Iriref_ reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set PIPE separated_nonempty_list(PIPE,path_one_in_property_set)
-- On Integer_positive reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set PIPE separated_nonempty_list(PIPE,path_one_in_property_set)
-- On Integer_negative reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set PIPE separated_nonempty_list(PIPE,path_one_in_property_set)
-- On Integer reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set PIPE separated_nonempty_list(PIPE,path_one_in_property_set)
-- On Double_positive reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set PIPE separated_nonempty_list(PIPE,path_one_in_property_set)
-- On Double_negative reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set PIPE separated_nonempty_list(PIPE,path_one_in_property_set)
-- On Double reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set PIPE separated_nonempty_list(PIPE,path_one_in_property_set)
-- On Decimal_positive reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set PIPE separated_nonempty_list(PIPE,path_one_in_property_set)
-- On Decimal_negative reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set PIPE separated_nonempty_list(PIPE,path_one_in_property_set)
-- On Decimal reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set PIPE separated_nonempty_list(PIPE,path_one_in_property_set)
-- On Boolean reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set PIPE separated_nonempty_list(PIPE,path_one_in_property_set)
-- On Blank_node_label reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set PIPE separated_nonempty_list(PIPE,path_one_in_property_set)
-- On ANON reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set PIPE separated_nonempty_list(PIPE,path_one_in_property_set)

State 104:
path_one_in_property_set -> iri . [ Var2 Var1 String_literal STAR SLASH RPAR QM Pname_ns Pname_ln PLUS PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
-- On Var2 reduce production path_one_in_property_set -> iri
-- On Var1 reduce production path_one_in_property_set -> iri
-- On String_literal reduce production path_one_in_property_set -> iri
-- On STAR reduce production path_one_in_property_set -> iri
-- On SLASH reduce production path_one_in_property_set -> iri
-- On RPAR reduce production path_one_in_property_set -> iri
-- On QM reduce production path_one_in_property_set -> iri
-- On Pname_ns reduce production path_one_in_property_set -> iri
-- On Pname_ln reduce production path_one_in_property_set -> iri
-- On PLUS reduce production path_one_in_property_set -> iri
-- On PIPE reduce production path_one_in_property_set -> iri
-- On NIL reduce production path_one_in_property_set -> iri
-- On LPAR reduce production path_one_in_property_set -> iri
-- On LBRACKET reduce production path_one_in_property_set -> iri
-- On Iriref_ reduce production path_one_in_property_set -> iri
-- On Integer_positive reduce production path_one_in_property_set -> iri
-- On Integer_negative reduce production path_one_in_property_set -> iri
-- On Integer reduce production path_one_in_property_set -> iri
-- On Double_positive reduce production path_one_in_property_set -> iri
-- On Double_negative reduce production path_one_in_property_set -> iri
-- On Double reduce production path_one_in_property_set -> iri
-- On Decimal_positive reduce production path_one_in_property_set -> iri
-- On Decimal_negative reduce production path_one_in_property_set -> iri
-- On Decimal reduce production path_one_in_property_set -> iri
-- On Boolean reduce production path_one_in_property_set -> iri
-- On Blank_node_label reduce production path_one_in_property_set -> iri
-- On ANON reduce production path_one_in_property_set -> iri

State 105:
path_negated_property_list -> LPAR loption(separated_nonempty_list(PIPE,path_one_in_property_set)) . [ Var2 Var1 String_literal STAR SLASH RPAR QM Pname_ns Pname_ln PLUS PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
-- On Var2 reduce production path_negated_property_list -> LPAR loption(separated_nonempty_list(PIPE,path_one_in_property_set))
-- On Var1 reduce production path_negated_property_list -> LPAR loption(separated_nonempty_list(PIPE,path_one_in_property_set))
-- On String_literal reduce production path_negated_property_list -> LPAR loption(separated_nonempty_list(PIPE,path_one_in_property_set))
-- On STAR reduce production path_negated_property_list -> LPAR loption(separated_nonempty_list(PIPE,path_one_in_property_set))
-- On SLASH reduce production path_negated_property_list -> LPAR loption(separated_nonempty_list(PIPE,path_one_in_property_set))
-- On RPAR reduce production path_negated_property_list -> LPAR loption(separated_nonempty_list(PIPE,path_one_in_property_set))
-- On QM reduce production path_negated_property_list -> LPAR loption(separated_nonempty_list(PIPE,path_one_in_property_set))
-- On Pname_ns reduce production path_negated_property_list -> LPAR loption(separated_nonempty_list(PIPE,path_one_in_property_set))
-- On Pname_ln reduce production path_negated_property_list -> LPAR loption(separated_nonempty_list(PIPE,path_one_in_property_set))
-- On PLUS reduce production path_negated_property_list -> LPAR loption(separated_nonempty_list(PIPE,path_one_in_property_set))
-- On PIPE reduce production path_negated_property_list -> LPAR loption(separated_nonempty_list(PIPE,path_one_in_property_set))
-- On NIL reduce production path_negated_property_list -> LPAR loption(separated_nonempty_list(PIPE,path_one_in_property_set))
-- On LPAR reduce production path_negated_property_list -> LPAR loption(separated_nonempty_list(PIPE,path_one_in_property_set))
-- On LBRACKET reduce production path_negated_property_list -> LPAR loption(separated_nonempty_list(PIPE,path_one_in_property_set))
-- On Iriref_ reduce production path_negated_property_list -> LPAR loption(separated_nonempty_list(PIPE,path_one_in_property_set))
-- On Integer_positive reduce production path_negated_property_list -> LPAR loption(separated_nonempty_list(PIPE,path_one_in_property_set))
-- On Integer_negative reduce production path_negated_property_list -> LPAR loption(separated_nonempty_list(PIPE,path_one_in_property_set))
-- On Integer reduce production path_negated_property_list -> LPAR loption(separated_nonempty_list(PIPE,path_one_in_property_set))
-- On Double_positive reduce production path_negated_property_list -> LPAR loption(separated_nonempty_list(PIPE,path_one_in_property_set))
-- On Double_negative reduce production path_negated_property_list -> LPAR loption(separated_nonempty_list(PIPE,path_one_in_property_set))
-- On Double reduce production path_negated_property_list -> LPAR loption(separated_nonempty_list(PIPE,path_one_in_property_set))
-- On Decimal_positive reduce production path_negated_property_list -> LPAR loption(separated_nonempty_list(PIPE,path_one_in_property_set))
-- On Decimal_negative reduce production path_negated_property_list -> LPAR loption(separated_nonempty_list(PIPE,path_one_in_property_set))
-- On Decimal reduce production path_negated_property_list -> LPAR loption(separated_nonempty_list(PIPE,path_one_in_property_set))
-- On Boolean reduce production path_negated_property_list -> LPAR loption(separated_nonempty_list(PIPE,path_one_in_property_set))
-- On Blank_node_label reduce production path_negated_property_list -> LPAR loption(separated_nonempty_list(PIPE,path_one_in_property_set))
-- On ANON reduce production path_negated_property_list -> LPAR loption(separated_nonempty_list(PIPE,path_one_in_property_set))

State 106:
path_negated_property_list -> path_one_in_property_set . [ Var2 Var1 String_literal STAR SLASH RPAR QM Pname_ns Pname_ln PLUS PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
-- On Var2 reduce production path_negated_property_list -> path_one_in_property_set
-- On Var1 reduce production path_negated_property_list -> path_one_in_property_set
-- On String_literal reduce production path_negated_property_list -> path_one_in_property_set
-- On STAR reduce production path_negated_property_list -> path_one_in_property_set
-- On SLASH reduce production path_negated_property_list -> path_one_in_property_set
-- On RPAR reduce production path_negated_property_list -> path_one_in_property_set
-- On QM reduce production path_negated_property_list -> path_one_in_property_set
-- On Pname_ns reduce production path_negated_property_list -> path_one_in_property_set
-- On Pname_ln reduce production path_negated_property_list -> path_one_in_property_set
-- On PLUS reduce production path_negated_property_list -> path_one_in_property_set
-- On PIPE reduce production path_negated_property_list -> path_one_in_property_set
-- On NIL reduce production path_negated_property_list -> path_one_in_property_set
-- On LPAR reduce production path_negated_property_list -> path_one_in_property_set
-- On LBRACKET reduce production path_negated_property_list -> path_one_in_property_set
-- On Iriref_ reduce production path_negated_property_list -> path_one_in_property_set
-- On Integer_positive reduce production path_negated_property_list -> path_one_in_property_set
-- On Integer_negative reduce production path_negated_property_list -> path_one_in_property_set
-- On Integer reduce production path_negated_property_list -> path_one_in_property_set
-- On Double_positive reduce production path_negated_property_list -> path_one_in_property_set
-- On Double_negative reduce production path_negated_property_list -> path_one_in_property_set
-- On Double reduce production path_negated_property_list -> path_one_in_property_set
-- On Decimal_positive reduce production path_negated_property_list -> path_one_in_property_set
-- On Decimal_negative reduce production path_negated_property_list -> path_one_in_property_set
-- On Decimal reduce production path_negated_property_list -> path_one_in_property_set
-- On Boolean reduce production path_negated_property_list -> path_one_in_property_set
-- On Blank_node_label reduce production path_negated_property_list -> path_one_in_property_set
-- On ANON reduce production path_negated_property_list -> path_one_in_property_set

State 107:
path_primary -> BANG path_negated_property_list . [ Var2 Var1 String_literal STAR SLASH RPAR QM Pname_ns Pname_ln PLUS PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
-- On Var2 reduce production path_primary -> BANG path_negated_property_list
-- On Var1 reduce production path_primary -> BANG path_negated_property_list
-- On String_literal reduce production path_primary -> BANG path_negated_property_list
-- On STAR reduce production path_primary -> BANG path_negated_property_list
-- On SLASH reduce production path_primary -> BANG path_negated_property_list
-- On RPAR reduce production path_primary -> BANG path_negated_property_list
-- On QM reduce production path_primary -> BANG path_negated_property_list
-- On Pname_ns reduce production path_primary -> BANG path_negated_property_list
-- On Pname_ln reduce production path_primary -> BANG path_negated_property_list
-- On PLUS reduce production path_primary -> BANG path_negated_property_list
-- On PIPE reduce production path_primary -> BANG path_negated_property_list
-- On NIL reduce production path_primary -> BANG path_negated_property_list
-- On LPAR reduce production path_primary -> BANG path_negated_property_list
-- On LBRACKET reduce production path_primary -> BANG path_negated_property_list
-- On Iriref_ reduce production path_primary -> BANG path_negated_property_list
-- On Integer_positive reduce production path_primary -> BANG path_negated_property_list
-- On Integer_negative reduce production path_primary -> BANG path_negated_property_list
-- On Integer reduce production path_primary -> BANG path_negated_property_list
-- On Double_positive reduce production path_primary -> BANG path_negated_property_list
-- On Double_negative reduce production path_primary -> BANG path_negated_property_list
-- On Double reduce production path_primary -> BANG path_negated_property_list
-- On Decimal_positive reduce production path_primary -> BANG path_negated_property_list
-- On Decimal_negative reduce production path_primary -> BANG path_negated_property_list
-- On Decimal reduce production path_primary -> BANG path_negated_property_list
-- On Boolean reduce production path_primary -> BANG path_negated_property_list
-- On Blank_node_label reduce production path_primary -> BANG path_negated_property_list
-- On ANON reduce production path_primary -> BANG path_negated_property_list

State 108:
path_primary -> A . [ Var2 Var1 String_literal STAR SLASH RPAR QM Pname_ns Pname_ln PLUS PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
-- On Var2 reduce production path_primary -> A
-- On Var1 reduce production path_primary -> A
-- On String_literal reduce production path_primary -> A
-- On STAR reduce production path_primary -> A
-- On SLASH reduce production path_primary -> A
-- On RPAR reduce production path_primary -> A
-- On QM reduce production path_primary -> A
-- On Pname_ns reduce production path_primary -> A
-- On Pname_ln reduce production path_primary -> A
-- On PLUS reduce production path_primary -> A
-- On PIPE reduce production path_primary -> A
-- On NIL reduce production path_primary -> A
-- On LPAR reduce production path_primary -> A
-- On LBRACKET reduce production path_primary -> A
-- On Iriref_ reduce production path_primary -> A
-- On Integer_positive reduce production path_primary -> A
-- On Integer_negative reduce production path_primary -> A
-- On Integer reduce production path_primary -> A
-- On Double_positive reduce production path_primary -> A
-- On Double_negative reduce production path_primary -> A
-- On Double reduce production path_primary -> A
-- On Decimal_positive reduce production path_primary -> A
-- On Decimal_negative reduce production path_primary -> A
-- On Decimal reduce production path_primary -> A
-- On Boolean reduce production path_primary -> A
-- On Blank_node_label reduce production path_primary -> A
-- On ANON reduce production path_primary -> A

State 109:
path_elt -> path_primary . option(path_mod) [ Var2 Var1 String_literal SLASH RPAR Pname_ns Pname_ln PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
-- On STAR shift to state 110
-- On QM shift to state 111
-- On PLUS shift to state 112
-- On path_mod shift to state 113
-- On option(path_mod) shift to state 114
-- On Var2 reduce production option(path_mod) ->
-- On Var1 reduce production option(path_mod) ->
-- On String_literal reduce production option(path_mod) ->
-- On SLASH reduce production option(path_mod) ->
-- On RPAR reduce production option(path_mod) ->
-- On Pname_ns reduce production option(path_mod) ->
-- On Pname_ln reduce production option(path_mod) ->
-- On PIPE reduce production option(path_mod) ->
-- On NIL reduce production option(path_mod) ->
-- On LPAR reduce production option(path_mod) ->
-- On LBRACKET reduce production option(path_mod) ->
-- On Iriref_ reduce production option(path_mod) ->
-- On Integer_positive reduce production option(path_mod) ->
-- On Integer_negative reduce production option(path_mod) ->
-- On Integer reduce production option(path_mod) ->
-- On Double_positive reduce production option(path_mod) ->
-- On Double_negative reduce production option(path_mod) ->
-- On Double reduce production option(path_mod) ->
-- On Decimal_positive reduce production option(path_mod) ->
-- On Decimal_negative reduce production option(path_mod) ->
-- On Decimal reduce production option(path_mod) ->
-- On Boolean reduce production option(path_mod) ->
-- On Blank_node_label reduce production option(path_mod) ->
-- On ANON reduce production option(path_mod) ->

State 110:
path_mod -> STAR . [ Var2 Var1 String_literal SLASH RPAR Pname_ns Pname_ln PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
-- On Var2 reduce production path_mod -> STAR
-- On Var1 reduce production path_mod -> STAR
-- On String_literal reduce production path_mod -> STAR
-- On SLASH reduce production path_mod -> STAR
-- On RPAR reduce production path_mod -> STAR
-- On Pname_ns reduce production path_mod -> STAR
-- On Pname_ln reduce production path_mod -> STAR
-- On PIPE reduce production path_mod -> STAR
-- On NIL reduce production path_mod -> STAR
-- On LPAR reduce production path_mod -> STAR
-- On LBRACKET reduce production path_mod -> STAR
-- On Iriref_ reduce production path_mod -> STAR
-- On Integer_positive reduce production path_mod -> STAR
-- On Integer_negative reduce production path_mod -> STAR
-- On Integer reduce production path_mod -> STAR
-- On Double_positive reduce production path_mod -> STAR
-- On Double_negative reduce production path_mod -> STAR
-- On Double reduce production path_mod -> STAR
-- On Decimal_positive reduce production path_mod -> STAR
-- On Decimal_negative reduce production path_mod -> STAR
-- On Decimal reduce production path_mod -> STAR
-- On Boolean reduce production path_mod -> STAR
-- On Blank_node_label reduce production path_mod -> STAR
-- On ANON reduce production path_mod -> STAR

State 111:
path_mod -> QM . [ Var2 Var1 String_literal SLASH RPAR Pname_ns Pname_ln PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
-- On Var2 reduce production path_mod -> QM
-- On Var1 reduce production path_mod -> QM
-- On String_literal reduce production path_mod -> QM
-- On SLASH reduce production path_mod -> QM
-- On RPAR reduce production path_mod -> QM
-- On Pname_ns reduce production path_mod -> QM
-- On Pname_ln reduce production path_mod -> QM
-- On PIPE reduce production path_mod -> QM
-- On NIL reduce production path_mod -> QM
-- On LPAR reduce production path_mod -> QM
-- On LBRACKET reduce production path_mod -> QM
-- On Iriref_ reduce production path_mod -> QM
-- On Integer_positive reduce production path_mod -> QM
-- On Integer_negative reduce production path_mod -> QM
-- On Integer reduce production path_mod -> QM
-- On Double_positive reduce production path_mod -> QM
-- On Double_negative reduce production path_mod -> QM
-- On Double reduce production path_mod -> QM
-- On Decimal_positive reduce production path_mod -> QM
-- On Decimal_negative reduce production path_mod -> QM
-- On Decimal reduce production path_mod -> QM
-- On Boolean reduce production path_mod -> QM
-- On Blank_node_label reduce production path_mod -> QM
-- On ANON reduce production path_mod -> QM

State 112:
path_mod -> PLUS . [ Var2 Var1 String_literal SLASH RPAR Pname_ns Pname_ln PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
-- On Var2 reduce production path_mod -> PLUS
-- On Var1 reduce production path_mod -> PLUS
-- On String_literal reduce production path_mod -> PLUS
-- On SLASH reduce production path_mod -> PLUS
-- On RPAR reduce production path_mod -> PLUS
-- On Pname_ns reduce production path_mod -> PLUS
-- On Pname_ln reduce production path_mod -> PLUS
-- On PIPE reduce production path_mod -> PLUS
-- On NIL reduce production path_mod -> PLUS
-- On LPAR reduce production path_mod -> PLUS
-- On LBRACKET reduce production path_mod -> PLUS
-- On Iriref_ reduce production path_mod -> PLUS
-- On Integer_positive reduce production path_mod -> PLUS
-- On Integer_negative reduce production path_mod -> PLUS
-- On Integer reduce production path_mod -> PLUS
-- On Double_positive reduce production path_mod -> PLUS
-- On Double_negative reduce production path_mod -> PLUS
-- On Double reduce production path_mod -> PLUS
-- On Decimal_positive reduce production path_mod -> PLUS
-- On Decimal_negative reduce production path_mod -> PLUS
-- On Decimal reduce production path_mod -> PLUS
-- On Boolean reduce production path_mod -> PLUS
-- On Blank_node_label reduce production path_mod -> PLUS
-- On ANON reduce production path_mod -> PLUS

State 113:
option(path_mod) -> path_mod . [ Var2 Var1 String_literal SLASH RPAR Pname_ns Pname_ln PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
-- On Var2 reduce production option(path_mod) -> path_mod
-- On Var1 reduce production option(path_mod) -> path_mod
-- On String_literal reduce production option(path_mod) -> path_mod
-- On SLASH reduce production option(path_mod) -> path_mod
-- On RPAR reduce production option(path_mod) -> path_mod
-- On Pname_ns reduce production option(path_mod) -> path_mod
-- On Pname_ln reduce production option(path_mod) -> path_mod
-- On PIPE reduce production option(path_mod) -> path_mod
-- On NIL reduce production option(path_mod) -> path_mod
-- On LPAR reduce production option(path_mod) -> path_mod
-- On LBRACKET reduce production option(path_mod) -> path_mod
-- On Iriref_ reduce production option(path_mod) -> path_mod
-- On Integer_positive reduce production option(path_mod) -> path_mod
-- On Integer_negative reduce production option(path_mod) -> path_mod
-- On Integer reduce production option(path_mod) -> path_mod
-- On Double_positive reduce production option(path_mod) -> path_mod
-- On Double_negative reduce production option(path_mod) -> path_mod
-- On Double reduce production option(path_mod) -> path_mod
-- On Decimal_positive reduce production option(path_mod) -> path_mod
-- On Decimal_negative reduce production option(path_mod) -> path_mod
-- On Decimal reduce production option(path_mod) -> path_mod
-- On Boolean reduce production option(path_mod) -> path_mod
-- On Blank_node_label reduce production option(path_mod) -> path_mod
-- On ANON reduce production option(path_mod) -> path_mod

State 114:
path_elt -> path_primary option(path_mod) . [ Var2 Var1 String_literal SLASH RPAR Pname_ns Pname_ln PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
-- On Var2 reduce production path_elt -> path_primary option(path_mod)
-- On Var1 reduce production path_elt -> path_primary option(path_mod)
-- On String_literal reduce production path_elt -> path_primary option(path_mod)
-- On SLASH reduce production path_elt -> path_primary option(path_mod)
-- On RPAR reduce production path_elt -> path_primary option(path_mod)
-- On Pname_ns reduce production path_elt -> path_primary option(path_mod)
-- On Pname_ln reduce production path_elt -> path_primary option(path_mod)
-- On PIPE reduce production path_elt -> path_primary option(path_mod)
-- On NIL reduce production path_elt -> path_primary option(path_mod)
-- On LPAR reduce production path_elt -> path_primary option(path_mod)
-- On LBRACKET reduce production path_elt -> path_primary option(path_mod)
-- On Iriref_ reduce production path_elt -> path_primary option(path_mod)
-- On Integer_positive reduce production path_elt -> path_primary option(path_mod)
-- On Integer_negative reduce production path_elt -> path_primary option(path_mod)
-- On Integer reduce production path_elt -> path_primary option(path_mod)
-- On Double_positive reduce production path_elt -> path_primary option(path_mod)
-- On Double_negative reduce production path_elt -> path_primary option(path_mod)
-- On Double reduce production path_elt -> path_primary option(path_mod)
-- On Decimal_positive reduce production path_elt -> path_primary option(path_mod)
-- On Decimal_negative reduce production path_elt -> path_primary option(path_mod)
-- On Decimal reduce production path_elt -> path_primary option(path_mod)
-- On Boolean reduce production path_elt -> path_primary option(path_mod)
-- On Blank_node_label reduce production path_elt -> path_primary option(path_mod)
-- On ANON reduce production path_elt -> path_primary option(path_mod)

State 115:
path_elt_or_inverse -> HAT path_elt . [ Var2 Var1 String_literal SLASH RPAR Pname_ns Pname_ln PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
-- On Var2 reduce production path_elt_or_inverse -> HAT path_elt
-- On Var1 reduce production path_elt_or_inverse -> HAT path_elt
-- On String_literal reduce production path_elt_or_inverse -> HAT path_elt
-- On SLASH reduce production path_elt_or_inverse -> HAT path_elt
-- On RPAR reduce production path_elt_or_inverse -> HAT path_elt
-- On Pname_ns reduce production path_elt_or_inverse -> HAT path_elt
-- On Pname_ln reduce production path_elt_or_inverse -> HAT path_elt
-- On PIPE reduce production path_elt_or_inverse -> HAT path_elt
-- On NIL reduce production path_elt_or_inverse -> HAT path_elt
-- On LPAR reduce production path_elt_or_inverse -> HAT path_elt
-- On LBRACKET reduce production path_elt_or_inverse -> HAT path_elt
-- On Iriref_ reduce production path_elt_or_inverse -> HAT path_elt
-- On Integer_positive reduce production path_elt_or_inverse -> HAT path_elt
-- On Integer_negative reduce production path_elt_or_inverse -> HAT path_elt
-- On Integer reduce production path_elt_or_inverse -> HAT path_elt
-- On Double_positive reduce production path_elt_or_inverse -> HAT path_elt
-- On Double_negative reduce production path_elt_or_inverse -> HAT path_elt
-- On Double reduce production path_elt_or_inverse -> HAT path_elt
-- On Decimal_positive reduce production path_elt_or_inverse -> HAT path_elt
-- On Decimal_negative reduce production path_elt_or_inverse -> HAT path_elt
-- On Decimal reduce production path_elt_or_inverse -> HAT path_elt
-- On Boolean reduce production path_elt_or_inverse -> HAT path_elt
-- On Blank_node_label reduce production path_elt_or_inverse -> HAT path_elt
-- On ANON reduce production path_elt_or_inverse -> HAT path_elt

State 116:
path_primary -> iri . [ Var2 Var1 String_literal STAR SLASH RPAR QM Pname_ns Pname_ln PLUS PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
-- On Var2 reduce production path_primary -> iri
-- On Var1 reduce production path_primary -> iri
-- On String_literal reduce production path_primary -> iri
-- On STAR reduce production path_primary -> iri
-- On SLASH reduce production path_primary -> iri
-- On RPAR reduce production path_primary -> iri
-- On QM reduce production path_primary -> iri
-- On Pname_ns reduce production path_primary -> iri
-- On Pname_ln reduce production path_primary -> iri
-- On PLUS reduce production path_primary -> iri
-- On PIPE reduce production path_primary -> iri
-- On NIL reduce production path_primary -> iri
-- On LPAR reduce production path_primary -> iri
-- On LBRACKET reduce production path_primary -> iri
-- On Iriref_ reduce production path_primary -> iri
-- On Integer_positive reduce production path_primary -> iri
-- On Integer_negative reduce production path_primary -> iri
-- On Integer reduce production path_primary -> iri
-- On Double_positive reduce production path_primary -> iri
-- On Double_negative reduce production path_primary -> iri
-- On Double reduce production path_primary -> iri
-- On Decimal_positive reduce production path_primary -> iri
-- On Decimal_negative reduce production path_primary -> iri
-- On Decimal reduce production path_primary -> iri
-- On Boolean reduce production path_primary -> iri
-- On Blank_node_label reduce production path_primary -> iri
-- On ANON reduce production path_primary -> iri

State 117:
path_sequence -> separated_nonempty_list(SLASH,path_elt_or_inverse) . [ Var2 Var1 String_literal RPAR Pname_ns Pname_ln PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
-- On Var2 reduce production path_sequence -> separated_nonempty_list(SLASH,path_elt_or_inverse)
-- On Var1 reduce production path_sequence -> separated_nonempty_list(SLASH,path_elt_or_inverse)
-- On String_literal reduce production path_sequence -> separated_nonempty_list(SLASH,path_elt_or_inverse)
-- On RPAR reduce production path_sequence -> separated_nonempty_list(SLASH,path_elt_or_inverse)
-- On Pname_ns reduce production path_sequence -> separated_nonempty_list(SLASH,path_elt_or_inverse)
-- On Pname_ln reduce production path_sequence -> separated_nonempty_list(SLASH,path_elt_or_inverse)
-- On PIPE reduce production path_sequence -> separated_nonempty_list(SLASH,path_elt_or_inverse)
-- On NIL reduce production path_sequence -> separated_nonempty_list(SLASH,path_elt_or_inverse)
-- On LPAR reduce production path_sequence -> separated_nonempty_list(SLASH,path_elt_or_inverse)
-- On LBRACKET reduce production path_sequence -> separated_nonempty_list(SLASH,path_elt_or_inverse)
-- On Iriref_ reduce production path_sequence -> separated_nonempty_list(SLASH,path_elt_or_inverse)
-- On Integer_positive reduce production path_sequence -> separated_nonempty_list(SLASH,path_elt_or_inverse)
-- On Integer_negative reduce production path_sequence -> separated_nonempty_list(SLASH,path_elt_or_inverse)
-- On Integer reduce production path_sequence -> separated_nonempty_list(SLASH,path_elt_or_inverse)
-- On Double_positive reduce production path_sequence -> separated_nonempty_list(SLASH,path_elt_or_inverse)
-- On Double_negative reduce production path_sequence -> separated_nonempty_list(SLASH,path_elt_or_inverse)
-- On Double reduce production path_sequence -> separated_nonempty_list(SLASH,path_elt_or_inverse)
-- On Decimal_positive reduce production path_sequence -> separated_nonempty_list(SLASH,path_elt_or_inverse)
-- On Decimal_negative reduce production path_sequence -> separated_nonempty_list(SLASH,path_elt_or_inverse)
-- On Decimal reduce production path_sequence -> separated_nonempty_list(SLASH,path_elt_or_inverse)
-- On Boolean reduce production path_sequence -> separated_nonempty_list(SLASH,path_elt_or_inverse)
-- On Blank_node_label reduce production path_sequence -> separated_nonempty_list(SLASH,path_elt_or_inverse)
-- On ANON reduce production path_sequence -> separated_nonempty_list(SLASH,path_elt_or_inverse)

State 118:
path_alternative -> separated_nonempty_list(PIPE,path_sequence) . [ Var2 Var1 String_literal RPAR Pname_ns Pname_ln NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
-- On Var2 reduce production path_alternative -> separated_nonempty_list(PIPE,path_sequence)
-- On Var1 reduce production path_alternative -> separated_nonempty_list(PIPE,path_sequence)
-- On String_literal reduce production path_alternative -> separated_nonempty_list(PIPE,path_sequence)
-- On RPAR reduce production path_alternative -> separated_nonempty_list(PIPE,path_sequence)
-- On Pname_ns reduce production path_alternative -> separated_nonempty_list(PIPE,path_sequence)
-- On Pname_ln reduce production path_alternative -> separated_nonempty_list(PIPE,path_sequence)
-- On NIL reduce production path_alternative -> separated_nonempty_list(PIPE,path_sequence)
-- On LPAR reduce production path_alternative -> separated_nonempty_list(PIPE,path_sequence)
-- On LBRACKET reduce production path_alternative -> separated_nonempty_list(PIPE,path_sequence)
-- On Iriref_ reduce production path_alternative -> separated_nonempty_list(PIPE,path_sequence)
-- On Integer_positive reduce production path_alternative -> separated_nonempty_list(PIPE,path_sequence)
-- On Integer_negative reduce production path_alternative -> separated_nonempty_list(PIPE,path_sequence)
-- On Integer reduce production path_alternative -> separated_nonempty_list(PIPE,path_sequence)
-- On Double_positive reduce production path_alternative -> separated_nonempty_list(PIPE,path_sequence)
-- On Double_negative reduce production path_alternative -> separated_nonempty_list(PIPE,path_sequence)
-- On Double reduce production path_alternative -> separated_nonempty_list(PIPE,path_sequence)
-- On Decimal_positive reduce production path_alternative -> separated_nonempty_list(PIPE,path_sequence)
-- On Decimal_negative reduce production path_alternative -> separated_nonempty_list(PIPE,path_sequence)
-- On Decimal reduce production path_alternative -> separated_nonempty_list(PIPE,path_sequence)
-- On Boolean reduce production path_alternative -> separated_nonempty_list(PIPE,path_sequence)
-- On Blank_node_label reduce production path_alternative -> separated_nonempty_list(PIPE,path_sequence)
-- On ANON reduce production path_alternative -> separated_nonempty_list(PIPE,path_sequence)

State 119:
separated_nonempty_list(PIPE,path_sequence) -> path_sequence . [ Var2 Var1 String_literal RPAR Pname_ns Pname_ln NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
separated_nonempty_list(PIPE,path_sequence) -> path_sequence . PIPE separated_nonempty_list(PIPE,path_sequence) [ Var2 Var1 String_literal RPAR Pname_ns Pname_ln NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
-- On PIPE shift to state 120
-- On Var2 reduce production separated_nonempty_list(PIPE,path_sequence) -> path_sequence
-- On Var1 reduce production separated_nonempty_list(PIPE,path_sequence) -> path_sequence
-- On String_literal reduce production separated_nonempty_list(PIPE,path_sequence) -> path_sequence
-- On RPAR reduce production separated_nonempty_list(PIPE,path_sequence) -> path_sequence
-- On Pname_ns reduce production separated_nonempty_list(PIPE,path_sequence) -> path_sequence
-- On Pname_ln reduce production separated_nonempty_list(PIPE,path_sequence) -> path_sequence
-- On NIL reduce production separated_nonempty_list(PIPE,path_sequence) -> path_sequence
-- On LPAR reduce production separated_nonempty_list(PIPE,path_sequence) -> path_sequence
-- On LBRACKET reduce production separated_nonempty_list(PIPE,path_sequence) -> path_sequence
-- On Iriref_ reduce production separated_nonempty_list(PIPE,path_sequence) -> path_sequence
-- On Integer_positive reduce production separated_nonempty_list(PIPE,path_sequence) -> path_sequence
-- On Integer_negative reduce production separated_nonempty_list(PIPE,path_sequence) -> path_sequence
-- On Integer reduce production separated_nonempty_list(PIPE,path_sequence) -> path_sequence
-- On Double_positive reduce production separated_nonempty_list(PIPE,path_sequence) -> path_sequence
-- On Double_negative reduce production separated_nonempty_list(PIPE,path_sequence) -> path_sequence
-- On Double reduce production separated_nonempty_list(PIPE,path_sequence) -> path_sequence
-- On Decimal_positive reduce production separated_nonempty_list(PIPE,path_sequence) -> path_sequence
-- On Decimal_negative reduce production separated_nonempty_list(PIPE,path_sequence) -> path_sequence
-- On Decimal reduce production separated_nonempty_list(PIPE,path_sequence) -> path_sequence
-- On Boolean reduce production separated_nonempty_list(PIPE,path_sequence) -> path_sequence
-- On Blank_node_label reduce production separated_nonempty_list(PIPE,path_sequence) -> path_sequence
-- On ANON reduce production separated_nonempty_list(PIPE,path_sequence) -> path_sequence

State 120:
separated_nonempty_list(PIPE,path_sequence) -> path_sequence PIPE . separated_nonempty_list(PIPE,path_sequence) [ Var2 Var1 String_literal RPAR Pname_ns Pname_ln NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On LPAR shift to state 90
-- On Iriref_ shift to state 91
-- On HAT shift to state 92
-- On BANG shift to state 93
-- On A shift to state 108
-- On separated_nonempty_list(SLASH,path_elt_or_inverse) shift to state 117
-- On separated_nonempty_list(PIPE,path_sequence) shift to state 121
-- On prefixed_name shift to state 97
-- On path_sequence shift to state 119
-- On path_primary shift to state 109
-- On path_elt_or_inverse shift to state 122
-- On path_elt shift to state 125
-- On iri shift to state 116

State 121:
separated_nonempty_list(PIPE,path_sequence) -> path_sequence PIPE separated_nonempty_list(PIPE,path_sequence) . [ Var2 Var1 String_literal RPAR Pname_ns Pname_ln NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
-- On Var2 reduce production separated_nonempty_list(PIPE,path_sequence) -> path_sequence PIPE separated_nonempty_list(PIPE,path_sequence)
-- On Var1 reduce production separated_nonempty_list(PIPE,path_sequence) -> path_sequence PIPE separated_nonempty_list(PIPE,path_sequence)
-- On String_literal reduce production separated_nonempty_list(PIPE,path_sequence) -> path_sequence PIPE separated_nonempty_list(PIPE,path_sequence)
-- On RPAR reduce production separated_nonempty_list(PIPE,path_sequence) -> path_sequence PIPE separated_nonempty_list(PIPE,path_sequence)
-- On Pname_ns reduce production separated_nonempty_list(PIPE,path_sequence) -> path_sequence PIPE separated_nonempty_list(PIPE,path_sequence)
-- On Pname_ln reduce production separated_nonempty_list(PIPE,path_sequence) -> path_sequence PIPE separated_nonempty_list(PIPE,path_sequence)
-- On NIL reduce production separated_nonempty_list(PIPE,path_sequence) -> path_sequence PIPE separated_nonempty_list(PIPE,path_sequence)
-- On LPAR reduce production separated_nonempty_list(PIPE,path_sequence) -> path_sequence PIPE separated_nonempty_list(PIPE,path_sequence)
-- On LBRACKET reduce production separated_nonempty_list(PIPE,path_sequence) -> path_sequence PIPE separated_nonempty_list(PIPE,path_sequence)
-- On Iriref_ reduce production separated_nonempty_list(PIPE,path_sequence) -> path_sequence PIPE separated_nonempty_list(PIPE,path_sequence)
-- On Integer_positive reduce production separated_nonempty_list(PIPE,path_sequence) -> path_sequence PIPE separated_nonempty_list(PIPE,path_sequence)
-- On Integer_negative reduce production separated_nonempty_list(PIPE,path_sequence) -> path_sequence PIPE separated_nonempty_list(PIPE,path_sequence)
-- On Integer reduce production separated_nonempty_list(PIPE,path_sequence) -> path_sequence PIPE separated_nonempty_list(PIPE,path_sequence)
-- On Double_positive reduce production separated_nonempty_list(PIPE,path_sequence) -> path_sequence PIPE separated_nonempty_list(PIPE,path_sequence)
-- On Double_negative reduce production separated_nonempty_list(PIPE,path_sequence) -> path_sequence PIPE separated_nonempty_list(PIPE,path_sequence)
-- On Double reduce production separated_nonempty_list(PIPE,path_sequence) -> path_sequence PIPE separated_nonempty_list(PIPE,path_sequence)
-- On Decimal_positive reduce production separated_nonempty_list(PIPE,path_sequence) -> path_sequence PIPE separated_nonempty_list(PIPE,path_sequence)
-- On Decimal_negative reduce production separated_nonempty_list(PIPE,path_sequence) -> path_sequence PIPE separated_nonempty_list(PIPE,path_sequence)
-- On Decimal reduce production separated_nonempty_list(PIPE,path_sequence) -> path_sequence PIPE separated_nonempty_list(PIPE,path_sequence)
-- On Boolean reduce production separated_nonempty_list(PIPE,path_sequence) -> path_sequence PIPE separated_nonempty_list(PIPE,path_sequence)
-- On Blank_node_label reduce production separated_nonempty_list(PIPE,path_sequence) -> path_sequence PIPE separated_nonempty_list(PIPE,path_sequence)
-- On ANON reduce production separated_nonempty_list(PIPE,path_sequence) -> path_sequence PIPE separated_nonempty_list(PIPE,path_sequence)

State 122:
separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse . [ Var2 Var1 String_literal RPAR Pname_ns Pname_ln PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse . SLASH separated_nonempty_list(SLASH,path_elt_or_inverse) [ Var2 Var1 String_literal RPAR Pname_ns Pname_ln PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
-- On SLASH shift to state 123
-- On Var2 reduce production separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse
-- On Var1 reduce production separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse
-- On String_literal reduce production separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse
-- On RPAR reduce production separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse
-- On Pname_ns reduce production separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse
-- On Pname_ln reduce production separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse
-- On PIPE reduce production separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse
-- On NIL reduce production separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse
-- On LPAR reduce production separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse
-- On LBRACKET reduce production separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse
-- On Iriref_ reduce production separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse
-- On Integer_positive reduce production separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse
-- On Integer_negative reduce production separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse
-- On Integer reduce production separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse
-- On Double_positive reduce production separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse
-- On Double_negative reduce production separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse
-- On Double reduce production separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse
-- On Decimal_positive reduce production separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse
-- On Decimal_negative reduce production separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse
-- On Decimal reduce production separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse
-- On Boolean reduce production separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse
-- On Blank_node_label reduce production separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse
-- On ANON reduce production separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse

State 123:
separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse SLASH . separated_nonempty_list(SLASH,path_elt_or_inverse) [ Var2 Var1 String_literal RPAR Pname_ns Pname_ln PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On LPAR shift to state 90
-- On Iriref_ shift to state 91
-- On HAT shift to state 92
-- On BANG shift to state 93
-- On A shift to state 108
-- On separated_nonempty_list(SLASH,path_elt_or_inverse) shift to state 124
-- On prefixed_name shift to state 97
-- On path_primary shift to state 109
-- On path_elt_or_inverse shift to state 122
-- On path_elt shift to state 125
-- On iri shift to state 116

State 124:
separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse SLASH separated_nonempty_list(SLASH,path_elt_or_inverse) . [ Var2 Var1 String_literal RPAR Pname_ns Pname_ln PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
-- On Var2 reduce production separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse SLASH separated_nonempty_list(SLASH,path_elt_or_inverse)
-- On Var1 reduce production separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse SLASH separated_nonempty_list(SLASH,path_elt_or_inverse)
-- On String_literal reduce production separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse SLASH separated_nonempty_list(SLASH,path_elt_or_inverse)
-- On RPAR reduce production separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse SLASH separated_nonempty_list(SLASH,path_elt_or_inverse)
-- On Pname_ns reduce production separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse SLASH separated_nonempty_list(SLASH,path_elt_or_inverse)
-- On Pname_ln reduce production separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse SLASH separated_nonempty_list(SLASH,path_elt_or_inverse)
-- On PIPE reduce production separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse SLASH separated_nonempty_list(SLASH,path_elt_or_inverse)
-- On NIL reduce production separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse SLASH separated_nonempty_list(SLASH,path_elt_or_inverse)
-- On LPAR reduce production separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse SLASH separated_nonempty_list(SLASH,path_elt_or_inverse)
-- On LBRACKET reduce production separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse SLASH separated_nonempty_list(SLASH,path_elt_or_inverse)
-- On Iriref_ reduce production separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse SLASH separated_nonempty_list(SLASH,path_elt_or_inverse)
-- On Integer_positive reduce production separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse SLASH separated_nonempty_list(SLASH,path_elt_or_inverse)
-- On Integer_negative reduce production separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse SLASH separated_nonempty_list(SLASH,path_elt_or_inverse)
-- On Integer reduce production separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse SLASH separated_nonempty_list(SLASH,path_elt_or_inverse)
-- On Double_positive reduce production separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse SLASH separated_nonempty_list(SLASH,path_elt_or_inverse)
-- On Double_negative reduce production separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse SLASH separated_nonempty_list(SLASH,path_elt_or_inverse)
-- On Double reduce production separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse SLASH separated_nonempty_list(SLASH,path_elt_or_inverse)
-- On Decimal_positive reduce production separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse SLASH separated_nonempty_list(SLASH,path_elt_or_inverse)
-- On Decimal_negative reduce production separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse SLASH separated_nonempty_list(SLASH,path_elt_or_inverse)
-- On Decimal reduce production separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse SLASH separated_nonempty_list(SLASH,path_elt_or_inverse)
-- On Boolean reduce production separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse SLASH separated_nonempty_list(SLASH,path_elt_or_inverse)
-- On Blank_node_label reduce production separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse SLASH separated_nonempty_list(SLASH,path_elt_or_inverse)
-- On ANON reduce production separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse SLASH separated_nonempty_list(SLASH,path_elt_or_inverse)

State 125:
path_elt_or_inverse -> path_elt . [ Var2 Var1 String_literal SLASH RPAR Pname_ns Pname_ln PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
-- On Var2 reduce production path_elt_or_inverse -> path_elt
-- On Var1 reduce production path_elt_or_inverse -> path_elt
-- On String_literal reduce production path_elt_or_inverse -> path_elt
-- On SLASH reduce production path_elt_or_inverse -> path_elt
-- On RPAR reduce production path_elt_or_inverse -> path_elt
-- On Pname_ns reduce production path_elt_or_inverse -> path_elt
-- On Pname_ln reduce production path_elt_or_inverse -> path_elt
-- On PIPE reduce production path_elt_or_inverse -> path_elt
-- On NIL reduce production path_elt_or_inverse -> path_elt
-- On LPAR reduce production path_elt_or_inverse -> path_elt
-- On LBRACKET reduce production path_elt_or_inverse -> path_elt
-- On Iriref_ reduce production path_elt_or_inverse -> path_elt
-- On Integer_positive reduce production path_elt_or_inverse -> path_elt
-- On Integer_negative reduce production path_elt_or_inverse -> path_elt
-- On Integer reduce production path_elt_or_inverse -> path_elt
-- On Double_positive reduce production path_elt_or_inverse -> path_elt
-- On Double_negative reduce production path_elt_or_inverse -> path_elt
-- On Double reduce production path_elt_or_inverse -> path_elt
-- On Decimal_positive reduce production path_elt_or_inverse -> path_elt
-- On Decimal_negative reduce production path_elt_or_inverse -> path_elt
-- On Decimal reduce production path_elt_or_inverse -> path_elt
-- On Boolean reduce production path_elt_or_inverse -> path_elt
-- On Blank_node_label reduce production path_elt_or_inverse -> path_elt
-- On ANON reduce production path_elt_or_inverse -> path_elt

State 126:
path -> path_alternative . [ Var2 Var1 String_literal RPAR Pname_ns Pname_ln NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
-- On Var2 reduce production path -> path_alternative
-- On Var1 reduce production path -> path_alternative
-- On String_literal reduce production path -> path_alternative
-- On RPAR reduce production path -> path_alternative
-- On Pname_ns reduce production path -> path_alternative
-- On Pname_ln reduce production path -> path_alternative
-- On NIL reduce production path -> path_alternative
-- On LPAR reduce production path -> path_alternative
-- On LBRACKET reduce production path -> path_alternative
-- On Iriref_ reduce production path -> path_alternative
-- On Integer_positive reduce production path -> path_alternative
-- On Integer_negative reduce production path -> path_alternative
-- On Integer reduce production path -> path_alternative
-- On Double_positive reduce production path -> path_alternative
-- On Double_negative reduce production path -> path_alternative
-- On Double reduce production path -> path_alternative
-- On Decimal_positive reduce production path -> path_alternative
-- On Decimal_negative reduce production path -> path_alternative
-- On Decimal reduce production path -> path_alternative
-- On Boolean reduce production path -> path_alternative
-- On Blank_node_label reduce production path -> path_alternative
-- On ANON reduce production path -> path_alternative

State 127:
path_primary -> LPAR path . RPAR [ Var2 Var1 String_literal STAR SLASH RPAR QM Pname_ns Pname_ln PLUS PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
-- On RPAR shift to state 128

State 128:
path_primary -> LPAR path RPAR . [ Var2 Var1 String_literal STAR SLASH RPAR QM Pname_ns Pname_ln PLUS PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
-- On Var2 reduce production path_primary -> LPAR path RPAR
-- On Var1 reduce production path_primary -> LPAR path RPAR
-- On String_literal reduce production path_primary -> LPAR path RPAR
-- On STAR reduce production path_primary -> LPAR path RPAR
-- On SLASH reduce production path_primary -> LPAR path RPAR
-- On RPAR reduce production path_primary -> LPAR path RPAR
-- On QM reduce production path_primary -> LPAR path RPAR
-- On Pname_ns reduce production path_primary -> LPAR path RPAR
-- On Pname_ln reduce production path_primary -> LPAR path RPAR
-- On PLUS reduce production path_primary -> LPAR path RPAR
-- On PIPE reduce production path_primary -> LPAR path RPAR
-- On NIL reduce production path_primary -> LPAR path RPAR
-- On LPAR reduce production path_primary -> LPAR path RPAR
-- On LBRACKET reduce production path_primary -> LPAR path RPAR
-- On Iriref_ reduce production path_primary -> LPAR path RPAR
-- On Integer_positive reduce production path_primary -> LPAR path RPAR
-- On Integer_negative reduce production path_primary -> LPAR path RPAR
-- On Integer reduce production path_primary -> LPAR path RPAR
-- On Double_positive reduce production path_primary -> LPAR path RPAR
-- On Double_negative reduce production path_primary -> LPAR path RPAR
-- On Double reduce production path_primary -> LPAR path RPAR
-- On Decimal_positive reduce production path_primary -> LPAR path RPAR
-- On Decimal_negative reduce production path_primary -> LPAR path RPAR
-- On Decimal reduce production path_primary -> LPAR path RPAR
-- On Boolean reduce production path_primary -> LPAR path RPAR
-- On Blank_node_label reduce production path_primary -> LPAR path RPAR
-- On ANON reduce production path_primary -> LPAR path RPAR

State 129:
property_list_path_not_empty -> verb_path_or_simple . object_list_path list(verbp_object_list_l) [ VALUES SERVICE RBRACKET RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER DOT BIND ]
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On String_literal shift to state 31
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On NIL shift to state 87
-- On LPAR shift to state 88
-- On LBRACKET shift to state 89
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On Boolean shift to state 139
-- On Blank_node_label shift to state 140
-- On ANON shift to state 141
-- On var_or_term shift to state 142
-- On var shift to state 143
-- On triples_node_path shift to state 144
-- On string shift to state 145
-- On separated_nonempty_list(COMMA,object_path) shift to state 149
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 151
-- On prefixed_name shift to state 97
-- On object_path shift to state 152
-- On object_list_path shift to state 167
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 159
-- On iri shift to state 160
-- On graph_term shift to state 161
-- On graph_node_path shift to state 162
-- On collection_path shift to state 163
-- On boolean_literal shift to state 164
-- On blank_node_property_list_path shift to state 165
-- On blank_node shift to state 166

State 130:
numeric_literal_positive -> Integer_positive . [ YEAR Var2 Var1 VALUES UUID URI UNDEF UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACKET RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING HAT GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG AS ANON AMPAMP ABS A ]
-- On YEAR reduce production numeric_literal_positive -> Integer_positive
-- On Var2 reduce production numeric_literal_positive -> Integer_positive
-- On Var1 reduce production numeric_literal_positive -> Integer_positive
-- On VALUES reduce production numeric_literal_positive -> Integer_positive
-- On UUID reduce production numeric_literal_positive -> Integer_positive
-- On URI reduce production numeric_literal_positive -> Integer_positive
-- On UNDEF reduce production numeric_literal_positive -> Integer_positive
-- On UCASE reduce production numeric_literal_positive -> Integer_positive
-- On TZ reduce production numeric_literal_positive -> Integer_positive
-- On TIMEZONE reduce production numeric_literal_positive -> Integer_positive
-- On String_literal reduce production numeric_literal_positive -> Integer_positive
-- On SUM reduce production numeric_literal_positive -> Integer_positive
-- On SUBSTR reduce production numeric_literal_positive -> Integer_positive
-- On STRUUID reduce production numeric_literal_positive -> Integer_positive
-- On STRSTARTS reduce production numeric_literal_positive -> Integer_positive
-- On STRLEN reduce production numeric_literal_positive -> Integer_positive
-- On STRLANG reduce production numeric_literal_positive -> Integer_positive
-- On STRENDS reduce production numeric_literal_positive -> Integer_positive
-- On STRDT reduce production numeric_literal_positive -> Integer_positive
-- On STRBEFORE reduce production numeric_literal_positive -> Integer_positive
-- On STRAFTER reduce production numeric_literal_positive -> Integer_positive
-- On STR reduce production numeric_literal_positive -> Integer_positive
-- On STAR reduce production numeric_literal_positive -> Integer_positive
-- On SLASH reduce production numeric_literal_positive -> Integer_positive
-- On SHA512 reduce production numeric_literal_positive -> Integer_positive
-- On SHA384 reduce production numeric_literal_positive -> Integer_positive
-- On SHA256 reduce production numeric_literal_positive -> Integer_positive
-- On SHA1 reduce production numeric_literal_positive -> Integer_positive
-- On SERVICE reduce production numeric_literal_positive -> Integer_positive
-- On SEMICOLON reduce production numeric_literal_positive -> Integer_positive
-- On SECONDS reduce production numeric_literal_positive -> Integer_positive
-- On SAMPLE reduce production numeric_literal_positive -> Integer_positive
-- On SAMETERM reduce production numeric_literal_positive -> Integer_positive
-- On RPAR reduce production numeric_literal_positive -> Integer_positive
-- On ROUND reduce production numeric_literal_positive -> Integer_positive
-- On REPLACE reduce production numeric_literal_positive -> Integer_positive
-- On REGEX reduce production numeric_literal_positive -> Integer_positive
-- On RBRACKET reduce production numeric_literal_positive -> Integer_positive
-- On RBRACE reduce production numeric_literal_positive -> Integer_positive
-- On RAND reduce production numeric_literal_positive -> Integer_positive
-- On Pname_ns reduce production numeric_literal_positive -> Integer_positive
-- On Pname_ln reduce production numeric_literal_positive -> Integer_positive
-- On PLUS reduce production numeric_literal_positive -> Integer_positive
-- On PIPEPIPE reduce production numeric_literal_positive -> Integer_positive
-- On ORDER reduce production numeric_literal_positive -> Integer_positive
-- On OPTIONAL reduce production numeric_literal_positive -> Integer_positive
-- On OFFSET reduce production numeric_literal_positive -> Integer_positive
-- On NOW reduce production numeric_literal_positive -> Integer_positive
-- On NOTEQUAL reduce production numeric_literal_positive -> Integer_positive
-- On NOT reduce production numeric_literal_positive -> Integer_positive
-- On NIL reduce production numeric_literal_positive -> Integer_positive
-- On MONTH reduce production numeric_literal_positive -> Integer_positive
-- On MINUTES reduce production numeric_literal_positive -> Integer_positive
-- On MINUS reduce production numeric_literal_positive -> Integer_positive
-- On MIN reduce production numeric_literal_positive -> Integer_positive
-- On MD5 reduce production numeric_literal_positive -> Integer_positive
-- On MAX reduce production numeric_literal_positive -> Integer_positive
-- On LTE reduce production numeric_literal_positive -> Integer_positive
-- On LT reduce production numeric_literal_positive -> Integer_positive
-- On LPAR reduce production numeric_literal_positive -> Integer_positive
-- On LIMIT reduce production numeric_literal_positive -> Integer_positive
-- On LCASE reduce production numeric_literal_positive -> Integer_positive
-- On LBRACKET reduce production numeric_literal_positive -> Integer_positive
-- On LBRACE reduce production numeric_literal_positive -> Integer_positive
-- On LANGMATCHES reduce production numeric_literal_positive -> Integer_positive
-- On LANG reduce production numeric_literal_positive -> Integer_positive
-- On Iriref_ reduce production numeric_literal_positive -> Integer_positive
-- On Integer_positive reduce production numeric_literal_positive -> Integer_positive
-- On Integer_negative reduce production numeric_literal_positive -> Integer_positive
-- On Integer reduce production numeric_literal_positive -> Integer_positive
-- On ISURI reduce production numeric_literal_positive -> Integer_positive
-- On ISNUMERIC reduce production numeric_literal_positive -> Integer_positive
-- On ISLITERAL reduce production numeric_literal_positive -> Integer_positive
-- On ISIRI reduce production numeric_literal_positive -> Integer_positive
-- On ISBLANK reduce production numeric_literal_positive -> Integer_positive
-- On IRI reduce production numeric_literal_positive -> Integer_positive
-- On IN reduce production numeric_literal_positive -> Integer_positive
-- On IF reduce production numeric_literal_positive -> Integer_positive
-- On HOURS reduce production numeric_literal_positive -> Integer_positive
-- On HAVING reduce production numeric_literal_positive -> Integer_positive
-- On HAT reduce production numeric_literal_positive -> Integer_positive
-- On GTE reduce production numeric_literal_positive -> Integer_positive
-- On GT reduce production numeric_literal_positive -> Integer_positive
-- On GROUP_CONCAT reduce production numeric_literal_positive -> Integer_positive
-- On GRAPH reduce production numeric_literal_positive -> Integer_positive
-- On FLOOR reduce production numeric_literal_positive -> Integer_positive
-- On FILTER reduce production numeric_literal_positive -> Integer_positive
-- On EXISTS reduce production numeric_literal_positive -> Integer_positive
-- On EQUAL reduce production numeric_literal_positive -> Integer_positive
-- On EOF reduce production numeric_literal_positive -> Integer_positive
-- On ENCODE_FOR_URI reduce production numeric_literal_positive -> Integer_positive
-- On Double_positive reduce production numeric_literal_positive -> Integer_positive
-- On Double_negative reduce production numeric_literal_positive -> Integer_positive
-- On Double reduce production numeric_literal_positive -> Integer_positive
-- On Decimal_positive reduce production numeric_literal_positive -> Integer_positive
-- On Decimal_negative reduce production numeric_literal_positive -> Integer_positive
-- On Decimal reduce production numeric_literal_positive -> Integer_positive
-- On DOT reduce production numeric_literal_positive -> Integer_positive
-- On DAY reduce production numeric_literal_positive -> Integer_positive
-- On DATATYPE reduce production numeric_literal_positive -> Integer_positive
-- On COUNT reduce production numeric_literal_positive -> Integer_positive
-- On CONTAINS reduce production numeric_literal_positive -> Integer_positive
-- On CONCAT reduce production numeric_literal_positive -> Integer_positive
-- On COMMA reduce production numeric_literal_positive -> Integer_positive
-- On COALESCE reduce production numeric_literal_positive -> Integer_positive
-- On CEIL reduce production numeric_literal_positive -> Integer_positive
-- On Boolean reduce production numeric_literal_positive -> Integer_positive
-- On Blank_node_label reduce production numeric_literal_positive -> Integer_positive
-- On BOUND reduce production numeric_literal_positive -> Integer_positive
-- On BNODE reduce production numeric_literal_positive -> Integer_positive
-- On BIND reduce production numeric_literal_positive -> Integer_positive
-- On BANG reduce production numeric_literal_positive -> Integer_positive
-- On AVG reduce production numeric_literal_positive -> Integer_positive
-- On AS reduce production numeric_literal_positive -> Integer_positive
-- On ANON reduce production numeric_literal_positive -> Integer_positive
-- On AMPAMP reduce production numeric_literal_positive -> Integer_positive
-- On ABS reduce production numeric_literal_positive -> Integer_positive
-- On A reduce production numeric_literal_positive -> Integer_positive

State 131:
numeric_literal_negative -> Integer_negative . [ YEAR Var2 Var1 VALUES UUID URI UNDEF UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACKET RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING HAT GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG AS ANON AMPAMP ABS A ]
-- On YEAR reduce production numeric_literal_negative -> Integer_negative
-- On Var2 reduce production numeric_literal_negative -> Integer_negative
-- On Var1 reduce production numeric_literal_negative -> Integer_negative
-- On VALUES reduce production numeric_literal_negative -> Integer_negative
-- On UUID reduce production numeric_literal_negative -> Integer_negative
-- On URI reduce production numeric_literal_negative -> Integer_negative
-- On UNDEF reduce production numeric_literal_negative -> Integer_negative
-- On UCASE reduce production numeric_literal_negative -> Integer_negative
-- On TZ reduce production numeric_literal_negative -> Integer_negative
-- On TIMEZONE reduce production numeric_literal_negative -> Integer_negative
-- On String_literal reduce production numeric_literal_negative -> Integer_negative
-- On SUM reduce production numeric_literal_negative -> Integer_negative
-- On SUBSTR reduce production numeric_literal_negative -> Integer_negative
-- On STRUUID reduce production numeric_literal_negative -> Integer_negative
-- On STRSTARTS reduce production numeric_literal_negative -> Integer_negative
-- On STRLEN reduce production numeric_literal_negative -> Integer_negative
-- On STRLANG reduce production numeric_literal_negative -> Integer_negative
-- On STRENDS reduce production numeric_literal_negative -> Integer_negative
-- On STRDT reduce production numeric_literal_negative -> Integer_negative
-- On STRBEFORE reduce production numeric_literal_negative -> Integer_negative
-- On STRAFTER reduce production numeric_literal_negative -> Integer_negative
-- On STR reduce production numeric_literal_negative -> Integer_negative
-- On STAR reduce production numeric_literal_negative -> Integer_negative
-- On SLASH reduce production numeric_literal_negative -> Integer_negative
-- On SHA512 reduce production numeric_literal_negative -> Integer_negative
-- On SHA384 reduce production numeric_literal_negative -> Integer_negative
-- On SHA256 reduce production numeric_literal_negative -> Integer_negative
-- On SHA1 reduce production numeric_literal_negative -> Integer_negative
-- On SERVICE reduce production numeric_literal_negative -> Integer_negative
-- On SEMICOLON reduce production numeric_literal_negative -> Integer_negative
-- On SECONDS reduce production numeric_literal_negative -> Integer_negative
-- On SAMPLE reduce production numeric_literal_negative -> Integer_negative
-- On SAMETERM reduce production numeric_literal_negative -> Integer_negative
-- On RPAR reduce production numeric_literal_negative -> Integer_negative
-- On ROUND reduce production numeric_literal_negative -> Integer_negative
-- On REPLACE reduce production numeric_literal_negative -> Integer_negative
-- On REGEX reduce production numeric_literal_negative -> Integer_negative
-- On RBRACKET reduce production numeric_literal_negative -> Integer_negative
-- On RBRACE reduce production numeric_literal_negative -> Integer_negative
-- On RAND reduce production numeric_literal_negative -> Integer_negative
-- On Pname_ns reduce production numeric_literal_negative -> Integer_negative
-- On Pname_ln reduce production numeric_literal_negative -> Integer_negative
-- On PLUS reduce production numeric_literal_negative -> Integer_negative
-- On PIPEPIPE reduce production numeric_literal_negative -> Integer_negative
-- On ORDER reduce production numeric_literal_negative -> Integer_negative
-- On OPTIONAL reduce production numeric_literal_negative -> Integer_negative
-- On OFFSET reduce production numeric_literal_negative -> Integer_negative
-- On NOW reduce production numeric_literal_negative -> Integer_negative
-- On NOTEQUAL reduce production numeric_literal_negative -> Integer_negative
-- On NOT reduce production numeric_literal_negative -> Integer_negative
-- On NIL reduce production numeric_literal_negative -> Integer_negative
-- On MONTH reduce production numeric_literal_negative -> Integer_negative
-- On MINUTES reduce production numeric_literal_negative -> Integer_negative
-- On MINUS reduce production numeric_literal_negative -> Integer_negative
-- On MIN reduce production numeric_literal_negative -> Integer_negative
-- On MD5 reduce production numeric_literal_negative -> Integer_negative
-- On MAX reduce production numeric_literal_negative -> Integer_negative
-- On LTE reduce production numeric_literal_negative -> Integer_negative
-- On LT reduce production numeric_literal_negative -> Integer_negative
-- On LPAR reduce production numeric_literal_negative -> Integer_negative
-- On LIMIT reduce production numeric_literal_negative -> Integer_negative
-- On LCASE reduce production numeric_literal_negative -> Integer_negative
-- On LBRACKET reduce production numeric_literal_negative -> Integer_negative
-- On LBRACE reduce production numeric_literal_negative -> Integer_negative
-- On LANGMATCHES reduce production numeric_literal_negative -> Integer_negative
-- On LANG reduce production numeric_literal_negative -> Integer_negative
-- On Iriref_ reduce production numeric_literal_negative -> Integer_negative
-- On Integer_positive reduce production numeric_literal_negative -> Integer_negative
-- On Integer_negative reduce production numeric_literal_negative -> Integer_negative
-- On Integer reduce production numeric_literal_negative -> Integer_negative
-- On ISURI reduce production numeric_literal_negative -> Integer_negative
-- On ISNUMERIC reduce production numeric_literal_negative -> Integer_negative
-- On ISLITERAL reduce production numeric_literal_negative -> Integer_negative
-- On ISIRI reduce production numeric_literal_negative -> Integer_negative
-- On ISBLANK reduce production numeric_literal_negative -> Integer_negative
-- On IRI reduce production numeric_literal_negative -> Integer_negative
-- On IN reduce production numeric_literal_negative -> Integer_negative
-- On IF reduce production numeric_literal_negative -> Integer_negative
-- On HOURS reduce production numeric_literal_negative -> Integer_negative
-- On HAVING reduce production numeric_literal_negative -> Integer_negative
-- On HAT reduce production numeric_literal_negative -> Integer_negative
-- On GTE reduce production numeric_literal_negative -> Integer_negative
-- On GT reduce production numeric_literal_negative -> Integer_negative
-- On GROUP_CONCAT reduce production numeric_literal_negative -> Integer_negative
-- On GRAPH reduce production numeric_literal_negative -> Integer_negative
-- On FLOOR reduce production numeric_literal_negative -> Integer_negative
-- On FILTER reduce production numeric_literal_negative -> Integer_negative
-- On EXISTS reduce production numeric_literal_negative -> Integer_negative
-- On EQUAL reduce production numeric_literal_negative -> Integer_negative
-- On EOF reduce production numeric_literal_negative -> Integer_negative
-- On ENCODE_FOR_URI reduce production numeric_literal_negative -> Integer_negative
-- On Double_positive reduce production numeric_literal_negative -> Integer_negative
-- On Double_negative reduce production numeric_literal_negative -> Integer_negative
-- On Double reduce production numeric_literal_negative -> Integer_negative
-- On Decimal_positive reduce production numeric_literal_negative -> Integer_negative
-- On Decimal_negative reduce production numeric_literal_negative -> Integer_negative
-- On Decimal reduce production numeric_literal_negative -> Integer_negative
-- On DOT reduce production numeric_literal_negative -> Integer_negative
-- On DAY reduce production numeric_literal_negative -> Integer_negative
-- On DATATYPE reduce production numeric_literal_negative -> Integer_negative
-- On COUNT reduce production numeric_literal_negative -> Integer_negative
-- On CONTAINS reduce production numeric_literal_negative -> Integer_negative
-- On CONCAT reduce production numeric_literal_negative -> Integer_negative
-- On COMMA reduce production numeric_literal_negative -> Integer_negative
-- On COALESCE reduce production numeric_literal_negative -> Integer_negative
-- On CEIL reduce production numeric_literal_negative -> Integer_negative
-- On Boolean reduce production numeric_literal_negative -> Integer_negative
-- On Blank_node_label reduce production numeric_literal_negative -> Integer_negative
-- On BOUND reduce production numeric_literal_negative -> Integer_negative
-- On BNODE reduce production numeric_literal_negative -> Integer_negative
-- On BIND reduce production numeric_literal_negative -> Integer_negative
-- On BANG reduce production numeric_literal_negative -> Integer_negative
-- On AVG reduce production numeric_literal_negative -> Integer_negative
-- On AS reduce production numeric_literal_negative -> Integer_negative
-- On ANON reduce production numeric_literal_negative -> Integer_negative
-- On AMPAMP reduce production numeric_literal_negative -> Integer_negative
-- On ABS reduce production numeric_literal_negative -> Integer_negative
-- On A reduce production numeric_literal_negative -> Integer_negative

State 132:
numeric_literal_unsigned -> Integer . [ YEAR Var2 Var1 VALUES UUID URI UNDEF UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACKET RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING HAT GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG AS ANON AMPAMP ABS A ]
-- On YEAR reduce production numeric_literal_unsigned -> Integer
-- On Var2 reduce production numeric_literal_unsigned -> Integer
-- On Var1 reduce production numeric_literal_unsigned -> Integer
-- On VALUES reduce production numeric_literal_unsigned -> Integer
-- On UUID reduce production numeric_literal_unsigned -> Integer
-- On URI reduce production numeric_literal_unsigned -> Integer
-- On UNDEF reduce production numeric_literal_unsigned -> Integer
-- On UCASE reduce production numeric_literal_unsigned -> Integer
-- On TZ reduce production numeric_literal_unsigned -> Integer
-- On TIMEZONE reduce production numeric_literal_unsigned -> Integer
-- On String_literal reduce production numeric_literal_unsigned -> Integer
-- On SUM reduce production numeric_literal_unsigned -> Integer
-- On SUBSTR reduce production numeric_literal_unsigned -> Integer
-- On STRUUID reduce production numeric_literal_unsigned -> Integer
-- On STRSTARTS reduce production numeric_literal_unsigned -> Integer
-- On STRLEN reduce production numeric_literal_unsigned -> Integer
-- On STRLANG reduce production numeric_literal_unsigned -> Integer
-- On STRENDS reduce production numeric_literal_unsigned -> Integer
-- On STRDT reduce production numeric_literal_unsigned -> Integer
-- On STRBEFORE reduce production numeric_literal_unsigned -> Integer
-- On STRAFTER reduce production numeric_literal_unsigned -> Integer
-- On STR reduce production numeric_literal_unsigned -> Integer
-- On STAR reduce production numeric_literal_unsigned -> Integer
-- On SLASH reduce production numeric_literal_unsigned -> Integer
-- On SHA512 reduce production numeric_literal_unsigned -> Integer
-- On SHA384 reduce production numeric_literal_unsigned -> Integer
-- On SHA256 reduce production numeric_literal_unsigned -> Integer
-- On SHA1 reduce production numeric_literal_unsigned -> Integer
-- On SERVICE reduce production numeric_literal_unsigned -> Integer
-- On SEMICOLON reduce production numeric_literal_unsigned -> Integer
-- On SECONDS reduce production numeric_literal_unsigned -> Integer
-- On SAMPLE reduce production numeric_literal_unsigned -> Integer
-- On SAMETERM reduce production numeric_literal_unsigned -> Integer
-- On RPAR reduce production numeric_literal_unsigned -> Integer
-- On ROUND reduce production numeric_literal_unsigned -> Integer
-- On REPLACE reduce production numeric_literal_unsigned -> Integer
-- On REGEX reduce production numeric_literal_unsigned -> Integer
-- On RBRACKET reduce production numeric_literal_unsigned -> Integer
-- On RBRACE reduce production numeric_literal_unsigned -> Integer
-- On RAND reduce production numeric_literal_unsigned -> Integer
-- On Pname_ns reduce production numeric_literal_unsigned -> Integer
-- On Pname_ln reduce production numeric_literal_unsigned -> Integer
-- On PLUS reduce production numeric_literal_unsigned -> Integer
-- On PIPEPIPE reduce production numeric_literal_unsigned -> Integer
-- On ORDER reduce production numeric_literal_unsigned -> Integer
-- On OPTIONAL reduce production numeric_literal_unsigned -> Integer
-- On OFFSET reduce production numeric_literal_unsigned -> Integer
-- On NOW reduce production numeric_literal_unsigned -> Integer
-- On NOTEQUAL reduce production numeric_literal_unsigned -> Integer
-- On NOT reduce production numeric_literal_unsigned -> Integer
-- On NIL reduce production numeric_literal_unsigned -> Integer
-- On MONTH reduce production numeric_literal_unsigned -> Integer
-- On MINUTES reduce production numeric_literal_unsigned -> Integer
-- On MINUS reduce production numeric_literal_unsigned -> Integer
-- On MIN reduce production numeric_literal_unsigned -> Integer
-- On MD5 reduce production numeric_literal_unsigned -> Integer
-- On MAX reduce production numeric_literal_unsigned -> Integer
-- On LTE reduce production numeric_literal_unsigned -> Integer
-- On LT reduce production numeric_literal_unsigned -> Integer
-- On LPAR reduce production numeric_literal_unsigned -> Integer
-- On LIMIT reduce production numeric_literal_unsigned -> Integer
-- On LCASE reduce production numeric_literal_unsigned -> Integer
-- On LBRACKET reduce production numeric_literal_unsigned -> Integer
-- On LBRACE reduce production numeric_literal_unsigned -> Integer
-- On LANGMATCHES reduce production numeric_literal_unsigned -> Integer
-- On LANG reduce production numeric_literal_unsigned -> Integer
-- On Iriref_ reduce production numeric_literal_unsigned -> Integer
-- On Integer_positive reduce production numeric_literal_unsigned -> Integer
-- On Integer_negative reduce production numeric_literal_unsigned -> Integer
-- On Integer reduce production numeric_literal_unsigned -> Integer
-- On ISURI reduce production numeric_literal_unsigned -> Integer
-- On ISNUMERIC reduce production numeric_literal_unsigned -> Integer
-- On ISLITERAL reduce production numeric_literal_unsigned -> Integer
-- On ISIRI reduce production numeric_literal_unsigned -> Integer
-- On ISBLANK reduce production numeric_literal_unsigned -> Integer
-- On IRI reduce production numeric_literal_unsigned -> Integer
-- On IN reduce production numeric_literal_unsigned -> Integer
-- On IF reduce production numeric_literal_unsigned -> Integer
-- On HOURS reduce production numeric_literal_unsigned -> Integer
-- On HAVING reduce production numeric_literal_unsigned -> Integer
-- On HAT reduce production numeric_literal_unsigned -> Integer
-- On GTE reduce production numeric_literal_unsigned -> Integer
-- On GT reduce production numeric_literal_unsigned -> Integer
-- On GROUP_CONCAT reduce production numeric_literal_unsigned -> Integer
-- On GRAPH reduce production numeric_literal_unsigned -> Integer
-- On FLOOR reduce production numeric_literal_unsigned -> Integer
-- On FILTER reduce production numeric_literal_unsigned -> Integer
-- On EXISTS reduce production numeric_literal_unsigned -> Integer
-- On EQUAL reduce production numeric_literal_unsigned -> Integer
-- On EOF reduce production numeric_literal_unsigned -> Integer
-- On ENCODE_FOR_URI reduce production numeric_literal_unsigned -> Integer
-- On Double_positive reduce production numeric_literal_unsigned -> Integer
-- On Double_negative reduce production numeric_literal_unsigned -> Integer
-- On Double reduce production numeric_literal_unsigned -> Integer
-- On Decimal_positive reduce production numeric_literal_unsigned -> Integer
-- On Decimal_negative reduce production numeric_literal_unsigned -> Integer
-- On Decimal reduce production numeric_literal_unsigned -> Integer
-- On DOT reduce production numeric_literal_unsigned -> Integer
-- On DAY reduce production numeric_literal_unsigned -> Integer
-- On DATATYPE reduce production numeric_literal_unsigned -> Integer
-- On COUNT reduce production numeric_literal_unsigned -> Integer
-- On CONTAINS reduce production numeric_literal_unsigned -> Integer
-- On CONCAT reduce production numeric_literal_unsigned -> Integer
-- On COMMA reduce production numeric_literal_unsigned -> Integer
-- On COALESCE reduce production numeric_literal_unsigned -> Integer
-- On CEIL reduce production numeric_literal_unsigned -> Integer
-- On Boolean reduce production numeric_literal_unsigned -> Integer
-- On Blank_node_label reduce production numeric_literal_unsigned -> Integer
-- On BOUND reduce production numeric_literal_unsigned -> Integer
-- On BNODE reduce production numeric_literal_unsigned -> Integer
-- On BIND reduce production numeric_literal_unsigned -> Integer
-- On BANG reduce production numeric_literal_unsigned -> Integer
-- On AVG reduce production numeric_literal_unsigned -> Integer
-- On AS reduce production numeric_literal_unsigned -> Integer
-- On ANON reduce production numeric_literal_unsigned -> Integer
-- On AMPAMP reduce production numeric_literal_unsigned -> Integer
-- On ABS reduce production numeric_literal_unsigned -> Integer
-- On A reduce production numeric_literal_unsigned -> Integer

State 133:
numeric_literal_positive -> Double_positive . [ YEAR Var2 Var1 VALUES UUID URI UNDEF UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACKET RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING HAT GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG AS ANON AMPAMP ABS A ]
-- On YEAR reduce production numeric_literal_positive -> Double_positive
-- On Var2 reduce production numeric_literal_positive -> Double_positive
-- On Var1 reduce production numeric_literal_positive -> Double_positive
-- On VALUES reduce production numeric_literal_positive -> Double_positive
-- On UUID reduce production numeric_literal_positive -> Double_positive
-- On URI reduce production numeric_literal_positive -> Double_positive
-- On UNDEF reduce production numeric_literal_positive -> Double_positive
-- On UCASE reduce production numeric_literal_positive -> Double_positive
-- On TZ reduce production numeric_literal_positive -> Double_positive
-- On TIMEZONE reduce production numeric_literal_positive -> Double_positive
-- On String_literal reduce production numeric_literal_positive -> Double_positive
-- On SUM reduce production numeric_literal_positive -> Double_positive
-- On SUBSTR reduce production numeric_literal_positive -> Double_positive
-- On STRUUID reduce production numeric_literal_positive -> Double_positive
-- On STRSTARTS reduce production numeric_literal_positive -> Double_positive
-- On STRLEN reduce production numeric_literal_positive -> Double_positive
-- On STRLANG reduce production numeric_literal_positive -> Double_positive
-- On STRENDS reduce production numeric_literal_positive -> Double_positive
-- On STRDT reduce production numeric_literal_positive -> Double_positive
-- On STRBEFORE reduce production numeric_literal_positive -> Double_positive
-- On STRAFTER reduce production numeric_literal_positive -> Double_positive
-- On STR reduce production numeric_literal_positive -> Double_positive
-- On STAR reduce production numeric_literal_positive -> Double_positive
-- On SLASH reduce production numeric_literal_positive -> Double_positive
-- On SHA512 reduce production numeric_literal_positive -> Double_positive
-- On SHA384 reduce production numeric_literal_positive -> Double_positive
-- On SHA256 reduce production numeric_literal_positive -> Double_positive
-- On SHA1 reduce production numeric_literal_positive -> Double_positive
-- On SERVICE reduce production numeric_literal_positive -> Double_positive
-- On SEMICOLON reduce production numeric_literal_positive -> Double_positive
-- On SECONDS reduce production numeric_literal_positive -> Double_positive
-- On SAMPLE reduce production numeric_literal_positive -> Double_positive
-- On SAMETERM reduce production numeric_literal_positive -> Double_positive
-- On RPAR reduce production numeric_literal_positive -> Double_positive
-- On ROUND reduce production numeric_literal_positive -> Double_positive
-- On REPLACE reduce production numeric_literal_positive -> Double_positive
-- On REGEX reduce production numeric_literal_positive -> Double_positive
-- On RBRACKET reduce production numeric_literal_positive -> Double_positive
-- On RBRACE reduce production numeric_literal_positive -> Double_positive
-- On RAND reduce production numeric_literal_positive -> Double_positive
-- On Pname_ns reduce production numeric_literal_positive -> Double_positive
-- On Pname_ln reduce production numeric_literal_positive -> Double_positive
-- On PLUS reduce production numeric_literal_positive -> Double_positive
-- On PIPEPIPE reduce production numeric_literal_positive -> Double_positive
-- On ORDER reduce production numeric_literal_positive -> Double_positive
-- On OPTIONAL reduce production numeric_literal_positive -> Double_positive
-- On OFFSET reduce production numeric_literal_positive -> Double_positive
-- On NOW reduce production numeric_literal_positive -> Double_positive
-- On NOTEQUAL reduce production numeric_literal_positive -> Double_positive
-- On NOT reduce production numeric_literal_positive -> Double_positive
-- On NIL reduce production numeric_literal_positive -> Double_positive
-- On MONTH reduce production numeric_literal_positive -> Double_positive
-- On MINUTES reduce production numeric_literal_positive -> Double_positive
-- On MINUS reduce production numeric_literal_positive -> Double_positive
-- On MIN reduce production numeric_literal_positive -> Double_positive
-- On MD5 reduce production numeric_literal_positive -> Double_positive
-- On MAX reduce production numeric_literal_positive -> Double_positive
-- On LTE reduce production numeric_literal_positive -> Double_positive
-- On LT reduce production numeric_literal_positive -> Double_positive
-- On LPAR reduce production numeric_literal_positive -> Double_positive
-- On LIMIT reduce production numeric_literal_positive -> Double_positive
-- On LCASE reduce production numeric_literal_positive -> Double_positive
-- On LBRACKET reduce production numeric_literal_positive -> Double_positive
-- On LBRACE reduce production numeric_literal_positive -> Double_positive
-- On LANGMATCHES reduce production numeric_literal_positive -> Double_positive
-- On LANG reduce production numeric_literal_positive -> Double_positive
-- On Iriref_ reduce production numeric_literal_positive -> Double_positive
-- On Integer_positive reduce production numeric_literal_positive -> Double_positive
-- On Integer_negative reduce production numeric_literal_positive -> Double_positive
-- On Integer reduce production numeric_literal_positive -> Double_positive
-- On ISURI reduce production numeric_literal_positive -> Double_positive
-- On ISNUMERIC reduce production numeric_literal_positive -> Double_positive
-- On ISLITERAL reduce production numeric_literal_positive -> Double_positive
-- On ISIRI reduce production numeric_literal_positive -> Double_positive
-- On ISBLANK reduce production numeric_literal_positive -> Double_positive
-- On IRI reduce production numeric_literal_positive -> Double_positive
-- On IN reduce production numeric_literal_positive -> Double_positive
-- On IF reduce production numeric_literal_positive -> Double_positive
-- On HOURS reduce production numeric_literal_positive -> Double_positive
-- On HAVING reduce production numeric_literal_positive -> Double_positive
-- On HAT reduce production numeric_literal_positive -> Double_positive
-- On GTE reduce production numeric_literal_positive -> Double_positive
-- On GT reduce production numeric_literal_positive -> Double_positive
-- On GROUP_CONCAT reduce production numeric_literal_positive -> Double_positive
-- On GRAPH reduce production numeric_literal_positive -> Double_positive
-- On FLOOR reduce production numeric_literal_positive -> Double_positive
-- On FILTER reduce production numeric_literal_positive -> Double_positive
-- On EXISTS reduce production numeric_literal_positive -> Double_positive
-- On EQUAL reduce production numeric_literal_positive -> Double_positive
-- On EOF reduce production numeric_literal_positive -> Double_positive
-- On ENCODE_FOR_URI reduce production numeric_literal_positive -> Double_positive
-- On Double_positive reduce production numeric_literal_positive -> Double_positive
-- On Double_negative reduce production numeric_literal_positive -> Double_positive
-- On Double reduce production numeric_literal_positive -> Double_positive
-- On Decimal_positive reduce production numeric_literal_positive -> Double_positive
-- On Decimal_negative reduce production numeric_literal_positive -> Double_positive
-- On Decimal reduce production numeric_literal_positive -> Double_positive
-- On DOT reduce production numeric_literal_positive -> Double_positive
-- On DAY reduce production numeric_literal_positive -> Double_positive
-- On DATATYPE reduce production numeric_literal_positive -> Double_positive
-- On COUNT reduce production numeric_literal_positive -> Double_positive
-- On CONTAINS reduce production numeric_literal_positive -> Double_positive
-- On CONCAT reduce production numeric_literal_positive -> Double_positive
-- On COMMA reduce production numeric_literal_positive -> Double_positive
-- On COALESCE reduce production numeric_literal_positive -> Double_positive
-- On CEIL reduce production numeric_literal_positive -> Double_positive
-- On Boolean reduce production numeric_literal_positive -> Double_positive
-- On Blank_node_label reduce production numeric_literal_positive -> Double_positive
-- On BOUND reduce production numeric_literal_positive -> Double_positive
-- On BNODE reduce production numeric_literal_positive -> Double_positive
-- On BIND reduce production numeric_literal_positive -> Double_positive
-- On BANG reduce production numeric_literal_positive -> Double_positive
-- On AVG reduce production numeric_literal_positive -> Double_positive
-- On AS reduce production numeric_literal_positive -> Double_positive
-- On ANON reduce production numeric_literal_positive -> Double_positive
-- On AMPAMP reduce production numeric_literal_positive -> Double_positive
-- On ABS reduce production numeric_literal_positive -> Double_positive
-- On A reduce production numeric_literal_positive -> Double_positive

State 134:
numeric_literal_negative -> Double_negative . [ YEAR Var2 Var1 VALUES UUID URI UNDEF UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACKET RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING HAT GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG AS ANON AMPAMP ABS A ]
-- On YEAR reduce production numeric_literal_negative -> Double_negative
-- On Var2 reduce production numeric_literal_negative -> Double_negative
-- On Var1 reduce production numeric_literal_negative -> Double_negative
-- On VALUES reduce production numeric_literal_negative -> Double_negative
-- On UUID reduce production numeric_literal_negative -> Double_negative
-- On URI reduce production numeric_literal_negative -> Double_negative
-- On UNDEF reduce production numeric_literal_negative -> Double_negative
-- On UCASE reduce production numeric_literal_negative -> Double_negative
-- On TZ reduce production numeric_literal_negative -> Double_negative
-- On TIMEZONE reduce production numeric_literal_negative -> Double_negative
-- On String_literal reduce production numeric_literal_negative -> Double_negative
-- On SUM reduce production numeric_literal_negative -> Double_negative
-- On SUBSTR reduce production numeric_literal_negative -> Double_negative
-- On STRUUID reduce production numeric_literal_negative -> Double_negative
-- On STRSTARTS reduce production numeric_literal_negative -> Double_negative
-- On STRLEN reduce production numeric_literal_negative -> Double_negative
-- On STRLANG reduce production numeric_literal_negative -> Double_negative
-- On STRENDS reduce production numeric_literal_negative -> Double_negative
-- On STRDT reduce production numeric_literal_negative -> Double_negative
-- On STRBEFORE reduce production numeric_literal_negative -> Double_negative
-- On STRAFTER reduce production numeric_literal_negative -> Double_negative
-- On STR reduce production numeric_literal_negative -> Double_negative
-- On STAR reduce production numeric_literal_negative -> Double_negative
-- On SLASH reduce production numeric_literal_negative -> Double_negative
-- On SHA512 reduce production numeric_literal_negative -> Double_negative
-- On SHA384 reduce production numeric_literal_negative -> Double_negative
-- On SHA256 reduce production numeric_literal_negative -> Double_negative
-- On SHA1 reduce production numeric_literal_negative -> Double_negative
-- On SERVICE reduce production numeric_literal_negative -> Double_negative
-- On SEMICOLON reduce production numeric_literal_negative -> Double_negative
-- On SECONDS reduce production numeric_literal_negative -> Double_negative
-- On SAMPLE reduce production numeric_literal_negative -> Double_negative
-- On SAMETERM reduce production numeric_literal_negative -> Double_negative
-- On RPAR reduce production numeric_literal_negative -> Double_negative
-- On ROUND reduce production numeric_literal_negative -> Double_negative
-- On REPLACE reduce production numeric_literal_negative -> Double_negative
-- On REGEX reduce production numeric_literal_negative -> Double_negative
-- On RBRACKET reduce production numeric_literal_negative -> Double_negative
-- On RBRACE reduce production numeric_literal_negative -> Double_negative
-- On RAND reduce production numeric_literal_negative -> Double_negative
-- On Pname_ns reduce production numeric_literal_negative -> Double_negative
-- On Pname_ln reduce production numeric_literal_negative -> Double_negative
-- On PLUS reduce production numeric_literal_negative -> Double_negative
-- On PIPEPIPE reduce production numeric_literal_negative -> Double_negative
-- On ORDER reduce production numeric_literal_negative -> Double_negative
-- On OPTIONAL reduce production numeric_literal_negative -> Double_negative
-- On OFFSET reduce production numeric_literal_negative -> Double_negative
-- On NOW reduce production numeric_literal_negative -> Double_negative
-- On NOTEQUAL reduce production numeric_literal_negative -> Double_negative
-- On NOT reduce production numeric_literal_negative -> Double_negative
-- On NIL reduce production numeric_literal_negative -> Double_negative
-- On MONTH reduce production numeric_literal_negative -> Double_negative
-- On MINUTES reduce production numeric_literal_negative -> Double_negative
-- On MINUS reduce production numeric_literal_negative -> Double_negative
-- On MIN reduce production numeric_literal_negative -> Double_negative
-- On MD5 reduce production numeric_literal_negative -> Double_negative
-- On MAX reduce production numeric_literal_negative -> Double_negative
-- On LTE reduce production numeric_literal_negative -> Double_negative
-- On LT reduce production numeric_literal_negative -> Double_negative
-- On LPAR reduce production numeric_literal_negative -> Double_negative
-- On LIMIT reduce production numeric_literal_negative -> Double_negative
-- On LCASE reduce production numeric_literal_negative -> Double_negative
-- On LBRACKET reduce production numeric_literal_negative -> Double_negative
-- On LBRACE reduce production numeric_literal_negative -> Double_negative
-- On LANGMATCHES reduce production numeric_literal_negative -> Double_negative
-- On LANG reduce production numeric_literal_negative -> Double_negative
-- On Iriref_ reduce production numeric_literal_negative -> Double_negative
-- On Integer_positive reduce production numeric_literal_negative -> Double_negative
-- On Integer_negative reduce production numeric_literal_negative -> Double_negative
-- On Integer reduce production numeric_literal_negative -> Double_negative
-- On ISURI reduce production numeric_literal_negative -> Double_negative
-- On ISNUMERIC reduce production numeric_literal_negative -> Double_negative
-- On ISLITERAL reduce production numeric_literal_negative -> Double_negative
-- On ISIRI reduce production numeric_literal_negative -> Double_negative
-- On ISBLANK reduce production numeric_literal_negative -> Double_negative
-- On IRI reduce production numeric_literal_negative -> Double_negative
-- On IN reduce production numeric_literal_negative -> Double_negative
-- On IF reduce production numeric_literal_negative -> Double_negative
-- On HOURS reduce production numeric_literal_negative -> Double_negative
-- On HAVING reduce production numeric_literal_negative -> Double_negative
-- On HAT reduce production numeric_literal_negative -> Double_negative
-- On GTE reduce production numeric_literal_negative -> Double_negative
-- On GT reduce production numeric_literal_negative -> Double_negative
-- On GROUP_CONCAT reduce production numeric_literal_negative -> Double_negative
-- On GRAPH reduce production numeric_literal_negative -> Double_negative
-- On FLOOR reduce production numeric_literal_negative -> Double_negative
-- On FILTER reduce production numeric_literal_negative -> Double_negative
-- On EXISTS reduce production numeric_literal_negative -> Double_negative
-- On EQUAL reduce production numeric_literal_negative -> Double_negative
-- On EOF reduce production numeric_literal_negative -> Double_negative
-- On ENCODE_FOR_URI reduce production numeric_literal_negative -> Double_negative
-- On Double_positive reduce production numeric_literal_negative -> Double_negative
-- On Double_negative reduce production numeric_literal_negative -> Double_negative
-- On Double reduce production numeric_literal_negative -> Double_negative
-- On Decimal_positive reduce production numeric_literal_negative -> Double_negative
-- On Decimal_negative reduce production numeric_literal_negative -> Double_negative
-- On Decimal reduce production numeric_literal_negative -> Double_negative
-- On DOT reduce production numeric_literal_negative -> Double_negative
-- On DAY reduce production numeric_literal_negative -> Double_negative
-- On DATATYPE reduce production numeric_literal_negative -> Double_negative
-- On COUNT reduce production numeric_literal_negative -> Double_negative
-- On CONTAINS reduce production numeric_literal_negative -> Double_negative
-- On CONCAT reduce production numeric_literal_negative -> Double_negative
-- On COMMA reduce production numeric_literal_negative -> Double_negative
-- On COALESCE reduce production numeric_literal_negative -> Double_negative
-- On CEIL reduce production numeric_literal_negative -> Double_negative
-- On Boolean reduce production numeric_literal_negative -> Double_negative
-- On Blank_node_label reduce production numeric_literal_negative -> Double_negative
-- On BOUND reduce production numeric_literal_negative -> Double_negative
-- On BNODE reduce production numeric_literal_negative -> Double_negative
-- On BIND reduce production numeric_literal_negative -> Double_negative
-- On BANG reduce production numeric_literal_negative -> Double_negative
-- On AVG reduce production numeric_literal_negative -> Double_negative
-- On AS reduce production numeric_literal_negative -> Double_negative
-- On ANON reduce production numeric_literal_negative -> Double_negative
-- On AMPAMP reduce production numeric_literal_negative -> Double_negative
-- On ABS reduce production numeric_literal_negative -> Double_negative
-- On A reduce production numeric_literal_negative -> Double_negative

State 135:
numeric_literal_unsigned -> Double . [ YEAR Var2 Var1 VALUES UUID URI UNDEF UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACKET RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING HAT GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG AS ANON AMPAMP ABS A ]
-- On YEAR reduce production numeric_literal_unsigned -> Double
-- On Var2 reduce production numeric_literal_unsigned -> Double
-- On Var1 reduce production numeric_literal_unsigned -> Double
-- On VALUES reduce production numeric_literal_unsigned -> Double
-- On UUID reduce production numeric_literal_unsigned -> Double
-- On URI reduce production numeric_literal_unsigned -> Double
-- On UNDEF reduce production numeric_literal_unsigned -> Double
-- On UCASE reduce production numeric_literal_unsigned -> Double
-- On TZ reduce production numeric_literal_unsigned -> Double
-- On TIMEZONE reduce production numeric_literal_unsigned -> Double
-- On String_literal reduce production numeric_literal_unsigned -> Double
-- On SUM reduce production numeric_literal_unsigned -> Double
-- On SUBSTR reduce production numeric_literal_unsigned -> Double
-- On STRUUID reduce production numeric_literal_unsigned -> Double
-- On STRSTARTS reduce production numeric_literal_unsigned -> Double
-- On STRLEN reduce production numeric_literal_unsigned -> Double
-- On STRLANG reduce production numeric_literal_unsigned -> Double
-- On STRENDS reduce production numeric_literal_unsigned -> Double
-- On STRDT reduce production numeric_literal_unsigned -> Double
-- On STRBEFORE reduce production numeric_literal_unsigned -> Double
-- On STRAFTER reduce production numeric_literal_unsigned -> Double
-- On STR reduce production numeric_literal_unsigned -> Double
-- On STAR reduce production numeric_literal_unsigned -> Double
-- On SLASH reduce production numeric_literal_unsigned -> Double
-- On SHA512 reduce production numeric_literal_unsigned -> Double
-- On SHA384 reduce production numeric_literal_unsigned -> Double
-- On SHA256 reduce production numeric_literal_unsigned -> Double
-- On SHA1 reduce production numeric_literal_unsigned -> Double
-- On SERVICE reduce production numeric_literal_unsigned -> Double
-- On SEMICOLON reduce production numeric_literal_unsigned -> Double
-- On SECONDS reduce production numeric_literal_unsigned -> Double
-- On SAMPLE reduce production numeric_literal_unsigned -> Double
-- On SAMETERM reduce production numeric_literal_unsigned -> Double
-- On RPAR reduce production numeric_literal_unsigned -> Double
-- On ROUND reduce production numeric_literal_unsigned -> Double
-- On REPLACE reduce production numeric_literal_unsigned -> Double
-- On REGEX reduce production numeric_literal_unsigned -> Double
-- On RBRACKET reduce production numeric_literal_unsigned -> Double
-- On RBRACE reduce production numeric_literal_unsigned -> Double
-- On RAND reduce production numeric_literal_unsigned -> Double
-- On Pname_ns reduce production numeric_literal_unsigned -> Double
-- On Pname_ln reduce production numeric_literal_unsigned -> Double
-- On PLUS reduce production numeric_literal_unsigned -> Double
-- On PIPEPIPE reduce production numeric_literal_unsigned -> Double
-- On ORDER reduce production numeric_literal_unsigned -> Double
-- On OPTIONAL reduce production numeric_literal_unsigned -> Double
-- On OFFSET reduce production numeric_literal_unsigned -> Double
-- On NOW reduce production numeric_literal_unsigned -> Double
-- On NOTEQUAL reduce production numeric_literal_unsigned -> Double
-- On NOT reduce production numeric_literal_unsigned -> Double
-- On NIL reduce production numeric_literal_unsigned -> Double
-- On MONTH reduce production numeric_literal_unsigned -> Double
-- On MINUTES reduce production numeric_literal_unsigned -> Double
-- On MINUS reduce production numeric_literal_unsigned -> Double
-- On MIN reduce production numeric_literal_unsigned -> Double
-- On MD5 reduce production numeric_literal_unsigned -> Double
-- On MAX reduce production numeric_literal_unsigned -> Double
-- On LTE reduce production numeric_literal_unsigned -> Double
-- On LT reduce production numeric_literal_unsigned -> Double
-- On LPAR reduce production numeric_literal_unsigned -> Double
-- On LIMIT reduce production numeric_literal_unsigned -> Double
-- On LCASE reduce production numeric_literal_unsigned -> Double
-- On LBRACKET reduce production numeric_literal_unsigned -> Double
-- On LBRACE reduce production numeric_literal_unsigned -> Double
-- On LANGMATCHES reduce production numeric_literal_unsigned -> Double
-- On LANG reduce production numeric_literal_unsigned -> Double
-- On Iriref_ reduce production numeric_literal_unsigned -> Double
-- On Integer_positive reduce production numeric_literal_unsigned -> Double
-- On Integer_negative reduce production numeric_literal_unsigned -> Double
-- On Integer reduce production numeric_literal_unsigned -> Double
-- On ISURI reduce production numeric_literal_unsigned -> Double
-- On ISNUMERIC reduce production numeric_literal_unsigned -> Double
-- On ISLITERAL reduce production numeric_literal_unsigned -> Double
-- On ISIRI reduce production numeric_literal_unsigned -> Double
-- On ISBLANK reduce production numeric_literal_unsigned -> Double
-- On IRI reduce production numeric_literal_unsigned -> Double
-- On IN reduce production numeric_literal_unsigned -> Double
-- On IF reduce production numeric_literal_unsigned -> Double
-- On HOURS reduce production numeric_literal_unsigned -> Double
-- On HAVING reduce production numeric_literal_unsigned -> Double
-- On HAT reduce production numeric_literal_unsigned -> Double
-- On GTE reduce production numeric_literal_unsigned -> Double
-- On GT reduce production numeric_literal_unsigned -> Double
-- On GROUP_CONCAT reduce production numeric_literal_unsigned -> Double
-- On GRAPH reduce production numeric_literal_unsigned -> Double
-- On FLOOR reduce production numeric_literal_unsigned -> Double
-- On FILTER reduce production numeric_literal_unsigned -> Double
-- On EXISTS reduce production numeric_literal_unsigned -> Double
-- On EQUAL reduce production numeric_literal_unsigned -> Double
-- On EOF reduce production numeric_literal_unsigned -> Double
-- On ENCODE_FOR_URI reduce production numeric_literal_unsigned -> Double
-- On Double_positive reduce production numeric_literal_unsigned -> Double
-- On Double_negative reduce production numeric_literal_unsigned -> Double
-- On Double reduce production numeric_literal_unsigned -> Double
-- On Decimal_positive reduce production numeric_literal_unsigned -> Double
-- On Decimal_negative reduce production numeric_literal_unsigned -> Double
-- On Decimal reduce production numeric_literal_unsigned -> Double
-- On DOT reduce production numeric_literal_unsigned -> Double
-- On DAY reduce production numeric_literal_unsigned -> Double
-- On DATATYPE reduce production numeric_literal_unsigned -> Double
-- On COUNT reduce production numeric_literal_unsigned -> Double
-- On CONTAINS reduce production numeric_literal_unsigned -> Double
-- On CONCAT reduce production numeric_literal_unsigned -> Double
-- On COMMA reduce production numeric_literal_unsigned -> Double
-- On COALESCE reduce production numeric_literal_unsigned -> Double
-- On CEIL reduce production numeric_literal_unsigned -> Double
-- On Boolean reduce production numeric_literal_unsigned -> Double
-- On Blank_node_label reduce production numeric_literal_unsigned -> Double
-- On BOUND reduce production numeric_literal_unsigned -> Double
-- On BNODE reduce production numeric_literal_unsigned -> Double
-- On BIND reduce production numeric_literal_unsigned -> Double
-- On BANG reduce production numeric_literal_unsigned -> Double
-- On AVG reduce production numeric_literal_unsigned -> Double
-- On AS reduce production numeric_literal_unsigned -> Double
-- On ANON reduce production numeric_literal_unsigned -> Double
-- On AMPAMP reduce production numeric_literal_unsigned -> Double
-- On ABS reduce production numeric_literal_unsigned -> Double
-- On A reduce production numeric_literal_unsigned -> Double

State 136:
numeric_literal_positive -> Decimal_positive . [ YEAR Var2 Var1 VALUES UUID URI UNDEF UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACKET RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING HAT GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG AS ANON AMPAMP ABS A ]
-- On YEAR reduce production numeric_literal_positive -> Decimal_positive
-- On Var2 reduce production numeric_literal_positive -> Decimal_positive
-- On Var1 reduce production numeric_literal_positive -> Decimal_positive
-- On VALUES reduce production numeric_literal_positive -> Decimal_positive
-- On UUID reduce production numeric_literal_positive -> Decimal_positive
-- On URI reduce production numeric_literal_positive -> Decimal_positive
-- On UNDEF reduce production numeric_literal_positive -> Decimal_positive
-- On UCASE reduce production numeric_literal_positive -> Decimal_positive
-- On TZ reduce production numeric_literal_positive -> Decimal_positive
-- On TIMEZONE reduce production numeric_literal_positive -> Decimal_positive
-- On String_literal reduce production numeric_literal_positive -> Decimal_positive
-- On SUM reduce production numeric_literal_positive -> Decimal_positive
-- On SUBSTR reduce production numeric_literal_positive -> Decimal_positive
-- On STRUUID reduce production numeric_literal_positive -> Decimal_positive
-- On STRSTARTS reduce production numeric_literal_positive -> Decimal_positive
-- On STRLEN reduce production numeric_literal_positive -> Decimal_positive
-- On STRLANG reduce production numeric_literal_positive -> Decimal_positive
-- On STRENDS reduce production numeric_literal_positive -> Decimal_positive
-- On STRDT reduce production numeric_literal_positive -> Decimal_positive
-- On STRBEFORE reduce production numeric_literal_positive -> Decimal_positive
-- On STRAFTER reduce production numeric_literal_positive -> Decimal_positive
-- On STR reduce production numeric_literal_positive -> Decimal_positive
-- On STAR reduce production numeric_literal_positive -> Decimal_positive
-- On SLASH reduce production numeric_literal_positive -> Decimal_positive
-- On SHA512 reduce production numeric_literal_positive -> Decimal_positive
-- On SHA384 reduce production numeric_literal_positive -> Decimal_positive
-- On SHA256 reduce production numeric_literal_positive -> Decimal_positive
-- On SHA1 reduce production numeric_literal_positive -> Decimal_positive
-- On SERVICE reduce production numeric_literal_positive -> Decimal_positive
-- On SEMICOLON reduce production numeric_literal_positive -> Decimal_positive
-- On SECONDS reduce production numeric_literal_positive -> Decimal_positive
-- On SAMPLE reduce production numeric_literal_positive -> Decimal_positive
-- On SAMETERM reduce production numeric_literal_positive -> Decimal_positive
-- On RPAR reduce production numeric_literal_positive -> Decimal_positive
-- On ROUND reduce production numeric_literal_positive -> Decimal_positive
-- On REPLACE reduce production numeric_literal_positive -> Decimal_positive
-- On REGEX reduce production numeric_literal_positive -> Decimal_positive
-- On RBRACKET reduce production numeric_literal_positive -> Decimal_positive
-- On RBRACE reduce production numeric_literal_positive -> Decimal_positive
-- On RAND reduce production numeric_literal_positive -> Decimal_positive
-- On Pname_ns reduce production numeric_literal_positive -> Decimal_positive
-- On Pname_ln reduce production numeric_literal_positive -> Decimal_positive
-- On PLUS reduce production numeric_literal_positive -> Decimal_positive
-- On PIPEPIPE reduce production numeric_literal_positive -> Decimal_positive
-- On ORDER reduce production numeric_literal_positive -> Decimal_positive
-- On OPTIONAL reduce production numeric_literal_positive -> Decimal_positive
-- On OFFSET reduce production numeric_literal_positive -> Decimal_positive
-- On NOW reduce production numeric_literal_positive -> Decimal_positive
-- On NOTEQUAL reduce production numeric_literal_positive -> Decimal_positive
-- On NOT reduce production numeric_literal_positive -> Decimal_positive
-- On NIL reduce production numeric_literal_positive -> Decimal_positive
-- On MONTH reduce production numeric_literal_positive -> Decimal_positive
-- On MINUTES reduce production numeric_literal_positive -> Decimal_positive
-- On MINUS reduce production numeric_literal_positive -> Decimal_positive
-- On MIN reduce production numeric_literal_positive -> Decimal_positive
-- On MD5 reduce production numeric_literal_positive -> Decimal_positive
-- On MAX reduce production numeric_literal_positive -> Decimal_positive
-- On LTE reduce production numeric_literal_positive -> Decimal_positive
-- On LT reduce production numeric_literal_positive -> Decimal_positive
-- On LPAR reduce production numeric_literal_positive -> Decimal_positive
-- On LIMIT reduce production numeric_literal_positive -> Decimal_positive
-- On LCASE reduce production numeric_literal_positive -> Decimal_positive
-- On LBRACKET reduce production numeric_literal_positive -> Decimal_positive
-- On LBRACE reduce production numeric_literal_positive -> Decimal_positive
-- On LANGMATCHES reduce production numeric_literal_positive -> Decimal_positive
-- On LANG reduce production numeric_literal_positive -> Decimal_positive
-- On Iriref_ reduce production numeric_literal_positive -> Decimal_positive
-- On Integer_positive reduce production numeric_literal_positive -> Decimal_positive
-- On Integer_negative reduce production numeric_literal_positive -> Decimal_positive
-- On Integer reduce production numeric_literal_positive -> Decimal_positive
-- On ISURI reduce production numeric_literal_positive -> Decimal_positive
-- On ISNUMERIC reduce production numeric_literal_positive -> Decimal_positive
-- On ISLITERAL reduce production numeric_literal_positive -> Decimal_positive
-- On ISIRI reduce production numeric_literal_positive -> Decimal_positive
-- On ISBLANK reduce production numeric_literal_positive -> Decimal_positive
-- On IRI reduce production numeric_literal_positive -> Decimal_positive
-- On IN reduce production numeric_literal_positive -> Decimal_positive
-- On IF reduce production numeric_literal_positive -> Decimal_positive
-- On HOURS reduce production numeric_literal_positive -> Decimal_positive
-- On HAVING reduce production numeric_literal_positive -> Decimal_positive
-- On HAT reduce production numeric_literal_positive -> Decimal_positive
-- On GTE reduce production numeric_literal_positive -> Decimal_positive
-- On GT reduce production numeric_literal_positive -> Decimal_positive
-- On GROUP_CONCAT reduce production numeric_literal_positive -> Decimal_positive
-- On GRAPH reduce production numeric_literal_positive -> Decimal_positive
-- On FLOOR reduce production numeric_literal_positive -> Decimal_positive
-- On FILTER reduce production numeric_literal_positive -> Decimal_positive
-- On EXISTS reduce production numeric_literal_positive -> Decimal_positive
-- On EQUAL reduce production numeric_literal_positive -> Decimal_positive
-- On EOF reduce production numeric_literal_positive -> Decimal_positive
-- On ENCODE_FOR_URI reduce production numeric_literal_positive -> Decimal_positive
-- On Double_positive reduce production numeric_literal_positive -> Decimal_positive
-- On Double_negative reduce production numeric_literal_positive -> Decimal_positive
-- On Double reduce production numeric_literal_positive -> Decimal_positive
-- On Decimal_positive reduce production numeric_literal_positive -> Decimal_positive
-- On Decimal_negative reduce production numeric_literal_positive -> Decimal_positive
-- On Decimal reduce production numeric_literal_positive -> Decimal_positive
-- On DOT reduce production numeric_literal_positive -> Decimal_positive
-- On DAY reduce production numeric_literal_positive -> Decimal_positive
-- On DATATYPE reduce production numeric_literal_positive -> Decimal_positive
-- On COUNT reduce production numeric_literal_positive -> Decimal_positive
-- On CONTAINS reduce production numeric_literal_positive -> Decimal_positive
-- On CONCAT reduce production numeric_literal_positive -> Decimal_positive
-- On COMMA reduce production numeric_literal_positive -> Decimal_positive
-- On COALESCE reduce production numeric_literal_positive -> Decimal_positive
-- On CEIL reduce production numeric_literal_positive -> Decimal_positive
-- On Boolean reduce production numeric_literal_positive -> Decimal_positive
-- On Blank_node_label reduce production numeric_literal_positive -> Decimal_positive
-- On BOUND reduce production numeric_literal_positive -> Decimal_positive
-- On BNODE reduce production numeric_literal_positive -> Decimal_positive
-- On BIND reduce production numeric_literal_positive -> Decimal_positive
-- On BANG reduce production numeric_literal_positive -> Decimal_positive
-- On AVG reduce production numeric_literal_positive -> Decimal_positive
-- On AS reduce production numeric_literal_positive -> Decimal_positive
-- On ANON reduce production numeric_literal_positive -> Decimal_positive
-- On AMPAMP reduce production numeric_literal_positive -> Decimal_positive
-- On ABS reduce production numeric_literal_positive -> Decimal_positive
-- On A reduce production numeric_literal_positive -> Decimal_positive

State 137:
numeric_literal_negative -> Decimal_negative . [ YEAR Var2 Var1 VALUES UUID URI UNDEF UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACKET RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING HAT GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG AS ANON AMPAMP ABS A ]
-- On YEAR reduce production numeric_literal_negative -> Decimal_negative
-- On Var2 reduce production numeric_literal_negative -> Decimal_negative
-- On Var1 reduce production numeric_literal_negative -> Decimal_negative
-- On VALUES reduce production numeric_literal_negative -> Decimal_negative
-- On UUID reduce production numeric_literal_negative -> Decimal_negative
-- On URI reduce production numeric_literal_negative -> Decimal_negative
-- On UNDEF reduce production numeric_literal_negative -> Decimal_negative
-- On UCASE reduce production numeric_literal_negative -> Decimal_negative
-- On TZ reduce production numeric_literal_negative -> Decimal_negative
-- On TIMEZONE reduce production numeric_literal_negative -> Decimal_negative
-- On String_literal reduce production numeric_literal_negative -> Decimal_negative
-- On SUM reduce production numeric_literal_negative -> Decimal_negative
-- On SUBSTR reduce production numeric_literal_negative -> Decimal_negative
-- On STRUUID reduce production numeric_literal_negative -> Decimal_negative
-- On STRSTARTS reduce production numeric_literal_negative -> Decimal_negative
-- On STRLEN reduce production numeric_literal_negative -> Decimal_negative
-- On STRLANG reduce production numeric_literal_negative -> Decimal_negative
-- On STRENDS reduce production numeric_literal_negative -> Decimal_negative
-- On STRDT reduce production numeric_literal_negative -> Decimal_negative
-- On STRBEFORE reduce production numeric_literal_negative -> Decimal_negative
-- On STRAFTER reduce production numeric_literal_negative -> Decimal_negative
-- On STR reduce production numeric_literal_negative -> Decimal_negative
-- On STAR reduce production numeric_literal_negative -> Decimal_negative
-- On SLASH reduce production numeric_literal_negative -> Decimal_negative
-- On SHA512 reduce production numeric_literal_negative -> Decimal_negative
-- On SHA384 reduce production numeric_literal_negative -> Decimal_negative
-- On SHA256 reduce production numeric_literal_negative -> Decimal_negative
-- On SHA1 reduce production numeric_literal_negative -> Decimal_negative
-- On SERVICE reduce production numeric_literal_negative -> Decimal_negative
-- On SEMICOLON reduce production numeric_literal_negative -> Decimal_negative
-- On SECONDS reduce production numeric_literal_negative -> Decimal_negative
-- On SAMPLE reduce production numeric_literal_negative -> Decimal_negative
-- On SAMETERM reduce production numeric_literal_negative -> Decimal_negative
-- On RPAR reduce production numeric_literal_negative -> Decimal_negative
-- On ROUND reduce production numeric_literal_negative -> Decimal_negative
-- On REPLACE reduce production numeric_literal_negative -> Decimal_negative
-- On REGEX reduce production numeric_literal_negative -> Decimal_negative
-- On RBRACKET reduce production numeric_literal_negative -> Decimal_negative
-- On RBRACE reduce production numeric_literal_negative -> Decimal_negative
-- On RAND reduce production numeric_literal_negative -> Decimal_negative
-- On Pname_ns reduce production numeric_literal_negative -> Decimal_negative
-- On Pname_ln reduce production numeric_literal_negative -> Decimal_negative
-- On PLUS reduce production numeric_literal_negative -> Decimal_negative
-- On PIPEPIPE reduce production numeric_literal_negative -> Decimal_negative
-- On ORDER reduce production numeric_literal_negative -> Decimal_negative
-- On OPTIONAL reduce production numeric_literal_negative -> Decimal_negative
-- On OFFSET reduce production numeric_literal_negative -> Decimal_negative
-- On NOW reduce production numeric_literal_negative -> Decimal_negative
-- On NOTEQUAL reduce production numeric_literal_negative -> Decimal_negative
-- On NOT reduce production numeric_literal_negative -> Decimal_negative
-- On NIL reduce production numeric_literal_negative -> Decimal_negative
-- On MONTH reduce production numeric_literal_negative -> Decimal_negative
-- On MINUTES reduce production numeric_literal_negative -> Decimal_negative
-- On MINUS reduce production numeric_literal_negative -> Decimal_negative
-- On MIN reduce production numeric_literal_negative -> Decimal_negative
-- On MD5 reduce production numeric_literal_negative -> Decimal_negative
-- On MAX reduce production numeric_literal_negative -> Decimal_negative
-- On LTE reduce production numeric_literal_negative -> Decimal_negative
-- On LT reduce production numeric_literal_negative -> Decimal_negative
-- On LPAR reduce production numeric_literal_negative -> Decimal_negative
-- On LIMIT reduce production numeric_literal_negative -> Decimal_negative
-- On LCASE reduce production numeric_literal_negative -> Decimal_negative
-- On LBRACKET reduce production numeric_literal_negative -> Decimal_negative
-- On LBRACE reduce production numeric_literal_negative -> Decimal_negative
-- On LANGMATCHES reduce production numeric_literal_negative -> Decimal_negative
-- On LANG reduce production numeric_literal_negative -> Decimal_negative
-- On Iriref_ reduce production numeric_literal_negative -> Decimal_negative
-- On Integer_positive reduce production numeric_literal_negative -> Decimal_negative
-- On Integer_negative reduce production numeric_literal_negative -> Decimal_negative
-- On Integer reduce production numeric_literal_negative -> Decimal_negative
-- On ISURI reduce production numeric_literal_negative -> Decimal_negative
-- On ISNUMERIC reduce production numeric_literal_negative -> Decimal_negative
-- On ISLITERAL reduce production numeric_literal_negative -> Decimal_negative
-- On ISIRI reduce production numeric_literal_negative -> Decimal_negative
-- On ISBLANK reduce production numeric_literal_negative -> Decimal_negative
-- On IRI reduce production numeric_literal_negative -> Decimal_negative
-- On IN reduce production numeric_literal_negative -> Decimal_negative
-- On IF reduce production numeric_literal_negative -> Decimal_negative
-- On HOURS reduce production numeric_literal_negative -> Decimal_negative
-- On HAVING reduce production numeric_literal_negative -> Decimal_negative
-- On HAT reduce production numeric_literal_negative -> Decimal_negative
-- On GTE reduce production numeric_literal_negative -> Decimal_negative
-- On GT reduce production numeric_literal_negative -> Decimal_negative
-- On GROUP_CONCAT reduce production numeric_literal_negative -> Decimal_negative
-- On GRAPH reduce production numeric_literal_negative -> Decimal_negative
-- On FLOOR reduce production numeric_literal_negative -> Decimal_negative
-- On FILTER reduce production numeric_literal_negative -> Decimal_negative
-- On EXISTS reduce production numeric_literal_negative -> Decimal_negative
-- On EQUAL reduce production numeric_literal_negative -> Decimal_negative
-- On EOF reduce production numeric_literal_negative -> Decimal_negative
-- On ENCODE_FOR_URI reduce production numeric_literal_negative -> Decimal_negative
-- On Double_positive reduce production numeric_literal_negative -> Decimal_negative
-- On Double_negative reduce production numeric_literal_negative -> Decimal_negative
-- On Double reduce production numeric_literal_negative -> Decimal_negative
-- On Decimal_positive reduce production numeric_literal_negative -> Decimal_negative
-- On Decimal_negative reduce production numeric_literal_negative -> Decimal_negative
-- On Decimal reduce production numeric_literal_negative -> Decimal_negative
-- On DOT reduce production numeric_literal_negative -> Decimal_negative
-- On DAY reduce production numeric_literal_negative -> Decimal_negative
-- On DATATYPE reduce production numeric_literal_negative -> Decimal_negative
-- On COUNT reduce production numeric_literal_negative -> Decimal_negative
-- On CONTAINS reduce production numeric_literal_negative -> Decimal_negative
-- On CONCAT reduce production numeric_literal_negative -> Decimal_negative
-- On COMMA reduce production numeric_literal_negative -> Decimal_negative
-- On COALESCE reduce production numeric_literal_negative -> Decimal_negative
-- On CEIL reduce production numeric_literal_negative -> Decimal_negative
-- On Boolean reduce production numeric_literal_negative -> Decimal_negative
-- On Blank_node_label reduce production numeric_literal_negative -> Decimal_negative
-- On BOUND reduce production numeric_literal_negative -> Decimal_negative
-- On BNODE reduce production numeric_literal_negative -> Decimal_negative
-- On BIND reduce production numeric_literal_negative -> Decimal_negative
-- On BANG reduce production numeric_literal_negative -> Decimal_negative
-- On AVG reduce production numeric_literal_negative -> Decimal_negative
-- On AS reduce production numeric_literal_negative -> Decimal_negative
-- On ANON reduce production numeric_literal_negative -> Decimal_negative
-- On AMPAMP reduce production numeric_literal_negative -> Decimal_negative
-- On ABS reduce production numeric_literal_negative -> Decimal_negative
-- On A reduce production numeric_literal_negative -> Decimal_negative

State 138:
numeric_literal_unsigned -> Decimal . [ YEAR Var2 Var1 VALUES UUID URI UNDEF UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACKET RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING HAT GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG AS ANON AMPAMP ABS A ]
-- On YEAR reduce production numeric_literal_unsigned -> Decimal
-- On Var2 reduce production numeric_literal_unsigned -> Decimal
-- On Var1 reduce production numeric_literal_unsigned -> Decimal
-- On VALUES reduce production numeric_literal_unsigned -> Decimal
-- On UUID reduce production numeric_literal_unsigned -> Decimal
-- On URI reduce production numeric_literal_unsigned -> Decimal
-- On UNDEF reduce production numeric_literal_unsigned -> Decimal
-- On UCASE reduce production numeric_literal_unsigned -> Decimal
-- On TZ reduce production numeric_literal_unsigned -> Decimal
-- On TIMEZONE reduce production numeric_literal_unsigned -> Decimal
-- On String_literal reduce production numeric_literal_unsigned -> Decimal
-- On SUM reduce production numeric_literal_unsigned -> Decimal
-- On SUBSTR reduce production numeric_literal_unsigned -> Decimal
-- On STRUUID reduce production numeric_literal_unsigned -> Decimal
-- On STRSTARTS reduce production numeric_literal_unsigned -> Decimal
-- On STRLEN reduce production numeric_literal_unsigned -> Decimal
-- On STRLANG reduce production numeric_literal_unsigned -> Decimal
-- On STRENDS reduce production numeric_literal_unsigned -> Decimal
-- On STRDT reduce production numeric_literal_unsigned -> Decimal
-- On STRBEFORE reduce production numeric_literal_unsigned -> Decimal
-- On STRAFTER reduce production numeric_literal_unsigned -> Decimal
-- On STR reduce production numeric_literal_unsigned -> Decimal
-- On STAR reduce production numeric_literal_unsigned -> Decimal
-- On SLASH reduce production numeric_literal_unsigned -> Decimal
-- On SHA512 reduce production numeric_literal_unsigned -> Decimal
-- On SHA384 reduce production numeric_literal_unsigned -> Decimal
-- On SHA256 reduce production numeric_literal_unsigned -> Decimal
-- On SHA1 reduce production numeric_literal_unsigned -> Decimal
-- On SERVICE reduce production numeric_literal_unsigned -> Decimal
-- On SEMICOLON reduce production numeric_literal_unsigned -> Decimal
-- On SECONDS reduce production numeric_literal_unsigned -> Decimal
-- On SAMPLE reduce production numeric_literal_unsigned -> Decimal
-- On SAMETERM reduce production numeric_literal_unsigned -> Decimal
-- On RPAR reduce production numeric_literal_unsigned -> Decimal
-- On ROUND reduce production numeric_literal_unsigned -> Decimal
-- On REPLACE reduce production numeric_literal_unsigned -> Decimal
-- On REGEX reduce production numeric_literal_unsigned -> Decimal
-- On RBRACKET reduce production numeric_literal_unsigned -> Decimal
-- On RBRACE reduce production numeric_literal_unsigned -> Decimal
-- On RAND reduce production numeric_literal_unsigned -> Decimal
-- On Pname_ns reduce production numeric_literal_unsigned -> Decimal
-- On Pname_ln reduce production numeric_literal_unsigned -> Decimal
-- On PLUS reduce production numeric_literal_unsigned -> Decimal
-- On PIPEPIPE reduce production numeric_literal_unsigned -> Decimal
-- On ORDER reduce production numeric_literal_unsigned -> Decimal
-- On OPTIONAL reduce production numeric_literal_unsigned -> Decimal
-- On OFFSET reduce production numeric_literal_unsigned -> Decimal
-- On NOW reduce production numeric_literal_unsigned -> Decimal
-- On NOTEQUAL reduce production numeric_literal_unsigned -> Decimal
-- On NOT reduce production numeric_literal_unsigned -> Decimal
-- On NIL reduce production numeric_literal_unsigned -> Decimal
-- On MONTH reduce production numeric_literal_unsigned -> Decimal
-- On MINUTES reduce production numeric_literal_unsigned -> Decimal
-- On MINUS reduce production numeric_literal_unsigned -> Decimal
-- On MIN reduce production numeric_literal_unsigned -> Decimal
-- On MD5 reduce production numeric_literal_unsigned -> Decimal
-- On MAX reduce production numeric_literal_unsigned -> Decimal
-- On LTE reduce production numeric_literal_unsigned -> Decimal
-- On LT reduce production numeric_literal_unsigned -> Decimal
-- On LPAR reduce production numeric_literal_unsigned -> Decimal
-- On LIMIT reduce production numeric_literal_unsigned -> Decimal
-- On LCASE reduce production numeric_literal_unsigned -> Decimal
-- On LBRACKET reduce production numeric_literal_unsigned -> Decimal
-- On LBRACE reduce production numeric_literal_unsigned -> Decimal
-- On LANGMATCHES reduce production numeric_literal_unsigned -> Decimal
-- On LANG reduce production numeric_literal_unsigned -> Decimal
-- On Iriref_ reduce production numeric_literal_unsigned -> Decimal
-- On Integer_positive reduce production numeric_literal_unsigned -> Decimal
-- On Integer_negative reduce production numeric_literal_unsigned -> Decimal
-- On Integer reduce production numeric_literal_unsigned -> Decimal
-- On ISURI reduce production numeric_literal_unsigned -> Decimal
-- On ISNUMERIC reduce production numeric_literal_unsigned -> Decimal
-- On ISLITERAL reduce production numeric_literal_unsigned -> Decimal
-- On ISIRI reduce production numeric_literal_unsigned -> Decimal
-- On ISBLANK reduce production numeric_literal_unsigned -> Decimal
-- On IRI reduce production numeric_literal_unsigned -> Decimal
-- On IN reduce production numeric_literal_unsigned -> Decimal
-- On IF reduce production numeric_literal_unsigned -> Decimal
-- On HOURS reduce production numeric_literal_unsigned -> Decimal
-- On HAVING reduce production numeric_literal_unsigned -> Decimal
-- On HAT reduce production numeric_literal_unsigned -> Decimal
-- On GTE reduce production numeric_literal_unsigned -> Decimal
-- On GT reduce production numeric_literal_unsigned -> Decimal
-- On GROUP_CONCAT reduce production numeric_literal_unsigned -> Decimal
-- On GRAPH reduce production numeric_literal_unsigned -> Decimal
-- On FLOOR reduce production numeric_literal_unsigned -> Decimal
-- On FILTER reduce production numeric_literal_unsigned -> Decimal
-- On EXISTS reduce production numeric_literal_unsigned -> Decimal
-- On EQUAL reduce production numeric_literal_unsigned -> Decimal
-- On EOF reduce production numeric_literal_unsigned -> Decimal
-- On ENCODE_FOR_URI reduce production numeric_literal_unsigned -> Decimal
-- On Double_positive reduce production numeric_literal_unsigned -> Decimal
-- On Double_negative reduce production numeric_literal_unsigned -> Decimal
-- On Double reduce production numeric_literal_unsigned -> Decimal
-- On Decimal_positive reduce production numeric_literal_unsigned -> Decimal
-- On Decimal_negative reduce production numeric_literal_unsigned -> Decimal
-- On Decimal reduce production numeric_literal_unsigned -> Decimal
-- On DOT reduce production numeric_literal_unsigned -> Decimal
-- On DAY reduce production numeric_literal_unsigned -> Decimal
-- On DATATYPE reduce production numeric_literal_unsigned -> Decimal
-- On COUNT reduce production numeric_literal_unsigned -> Decimal
-- On CONTAINS reduce production numeric_literal_unsigned -> Decimal
-- On CONCAT reduce production numeric_literal_unsigned -> Decimal
-- On COMMA reduce production numeric_literal_unsigned -> Decimal
-- On COALESCE reduce production numeric_literal_unsigned -> Decimal
-- On CEIL reduce production numeric_literal_unsigned -> Decimal
-- On Boolean reduce production numeric_literal_unsigned -> Decimal
-- On Blank_node_label reduce production numeric_literal_unsigned -> Decimal
-- On BOUND reduce production numeric_literal_unsigned -> Decimal
-- On BNODE reduce production numeric_literal_unsigned -> Decimal
-- On BIND reduce production numeric_literal_unsigned -> Decimal
-- On BANG reduce production numeric_literal_unsigned -> Decimal
-- On AVG reduce production numeric_literal_unsigned -> Decimal
-- On AS reduce production numeric_literal_unsigned -> Decimal
-- On ANON reduce production numeric_literal_unsigned -> Decimal
-- On AMPAMP reduce production numeric_literal_unsigned -> Decimal
-- On ABS reduce production numeric_literal_unsigned -> Decimal
-- On A reduce production numeric_literal_unsigned -> Decimal

State 139:
boolean_literal -> Boolean . [ YEAR Var2 Var1 VALUES UUID URI UNDEF UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACKET RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING HAT GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG AS ANON AMPAMP ABS A ]
-- On YEAR reduce production boolean_literal -> Boolean
-- On Var2 reduce production boolean_literal -> Boolean
-- On Var1 reduce production boolean_literal -> Boolean
-- On VALUES reduce production boolean_literal -> Boolean
-- On UUID reduce production boolean_literal -> Boolean
-- On URI reduce production boolean_literal -> Boolean
-- On UNDEF reduce production boolean_literal -> Boolean
-- On UCASE reduce production boolean_literal -> Boolean
-- On TZ reduce production boolean_literal -> Boolean
-- On TIMEZONE reduce production boolean_literal -> Boolean
-- On String_literal reduce production boolean_literal -> Boolean
-- On SUM reduce production boolean_literal -> Boolean
-- On SUBSTR reduce production boolean_literal -> Boolean
-- On STRUUID reduce production boolean_literal -> Boolean
-- On STRSTARTS reduce production boolean_literal -> Boolean
-- On STRLEN reduce production boolean_literal -> Boolean
-- On STRLANG reduce production boolean_literal -> Boolean
-- On STRENDS reduce production boolean_literal -> Boolean
-- On STRDT reduce production boolean_literal -> Boolean
-- On STRBEFORE reduce production boolean_literal -> Boolean
-- On STRAFTER reduce production boolean_literal -> Boolean
-- On STR reduce production boolean_literal -> Boolean
-- On STAR reduce production boolean_literal -> Boolean
-- On SLASH reduce production boolean_literal -> Boolean
-- On SHA512 reduce production boolean_literal -> Boolean
-- On SHA384 reduce production boolean_literal -> Boolean
-- On SHA256 reduce production boolean_literal -> Boolean
-- On SHA1 reduce production boolean_literal -> Boolean
-- On SERVICE reduce production boolean_literal -> Boolean
-- On SEMICOLON reduce production boolean_literal -> Boolean
-- On SECONDS reduce production boolean_literal -> Boolean
-- On SAMPLE reduce production boolean_literal -> Boolean
-- On SAMETERM reduce production boolean_literal -> Boolean
-- On RPAR reduce production boolean_literal -> Boolean
-- On ROUND reduce production boolean_literal -> Boolean
-- On REPLACE reduce production boolean_literal -> Boolean
-- On REGEX reduce production boolean_literal -> Boolean
-- On RBRACKET reduce production boolean_literal -> Boolean
-- On RBRACE reduce production boolean_literal -> Boolean
-- On RAND reduce production boolean_literal -> Boolean
-- On Pname_ns reduce production boolean_literal -> Boolean
-- On Pname_ln reduce production boolean_literal -> Boolean
-- On PLUS reduce production boolean_literal -> Boolean
-- On PIPEPIPE reduce production boolean_literal -> Boolean
-- On ORDER reduce production boolean_literal -> Boolean
-- On OPTIONAL reduce production boolean_literal -> Boolean
-- On OFFSET reduce production boolean_literal -> Boolean
-- On NOW reduce production boolean_literal -> Boolean
-- On NOTEQUAL reduce production boolean_literal -> Boolean
-- On NOT reduce production boolean_literal -> Boolean
-- On NIL reduce production boolean_literal -> Boolean
-- On MONTH reduce production boolean_literal -> Boolean
-- On MINUTES reduce production boolean_literal -> Boolean
-- On MINUS reduce production boolean_literal -> Boolean
-- On MIN reduce production boolean_literal -> Boolean
-- On MD5 reduce production boolean_literal -> Boolean
-- On MAX reduce production boolean_literal -> Boolean
-- On LTE reduce production boolean_literal -> Boolean
-- On LT reduce production boolean_literal -> Boolean
-- On LPAR reduce production boolean_literal -> Boolean
-- On LIMIT reduce production boolean_literal -> Boolean
-- On LCASE reduce production boolean_literal -> Boolean
-- On LBRACKET reduce production boolean_literal -> Boolean
-- On LBRACE reduce production boolean_literal -> Boolean
-- On LANGMATCHES reduce production boolean_literal -> Boolean
-- On LANG reduce production boolean_literal -> Boolean
-- On Iriref_ reduce production boolean_literal -> Boolean
-- On Integer_positive reduce production boolean_literal -> Boolean
-- On Integer_negative reduce production boolean_literal -> Boolean
-- On Integer reduce production boolean_literal -> Boolean
-- On ISURI reduce production boolean_literal -> Boolean
-- On ISNUMERIC reduce production boolean_literal -> Boolean
-- On ISLITERAL reduce production boolean_literal -> Boolean
-- On ISIRI reduce production boolean_literal -> Boolean
-- On ISBLANK reduce production boolean_literal -> Boolean
-- On IRI reduce production boolean_literal -> Boolean
-- On IN reduce production boolean_literal -> Boolean
-- On IF reduce production boolean_literal -> Boolean
-- On HOURS reduce production boolean_literal -> Boolean
-- On HAVING reduce production boolean_literal -> Boolean
-- On HAT reduce production boolean_literal -> Boolean
-- On GTE reduce production boolean_literal -> Boolean
-- On GT reduce production boolean_literal -> Boolean
-- On GROUP_CONCAT reduce production boolean_literal -> Boolean
-- On GRAPH reduce production boolean_literal -> Boolean
-- On FLOOR reduce production boolean_literal -> Boolean
-- On FILTER reduce production boolean_literal -> Boolean
-- On EXISTS reduce production boolean_literal -> Boolean
-- On EQUAL reduce production boolean_literal -> Boolean
-- On EOF reduce production boolean_literal -> Boolean
-- On ENCODE_FOR_URI reduce production boolean_literal -> Boolean
-- On Double_positive reduce production boolean_literal -> Boolean
-- On Double_negative reduce production boolean_literal -> Boolean
-- On Double reduce production boolean_literal -> Boolean
-- On Decimal_positive reduce production boolean_literal -> Boolean
-- On Decimal_negative reduce production boolean_literal -> Boolean
-- On Decimal reduce production boolean_literal -> Boolean
-- On DOT reduce production boolean_literal -> Boolean
-- On DAY reduce production boolean_literal -> Boolean
-- On DATATYPE reduce production boolean_literal -> Boolean
-- On COUNT reduce production boolean_literal -> Boolean
-- On CONTAINS reduce production boolean_literal -> Boolean
-- On CONCAT reduce production boolean_literal -> Boolean
-- On COMMA reduce production boolean_literal -> Boolean
-- On COALESCE reduce production boolean_literal -> Boolean
-- On CEIL reduce production boolean_literal -> Boolean
-- On Boolean reduce production boolean_literal -> Boolean
-- On Blank_node_label reduce production boolean_literal -> Boolean
-- On BOUND reduce production boolean_literal -> Boolean
-- On BNODE reduce production boolean_literal -> Boolean
-- On BIND reduce production boolean_literal -> Boolean
-- On BANG reduce production boolean_literal -> Boolean
-- On AVG reduce production boolean_literal -> Boolean
-- On AS reduce production boolean_literal -> Boolean
-- On ANON reduce production boolean_literal -> Boolean
-- On AMPAMP reduce production boolean_literal -> Boolean
-- On ABS reduce production boolean_literal -> Boolean
-- On A reduce production boolean_literal -> Boolean

State 140:
blank_node -> Blank_node_label . [ Var2 Var1 VALUES String_literal SERVICE SEMICOLON RPAR RBRACKET RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer HAT GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT COMMA Boolean Blank_node_label BIND BANG ANON A ]
-- On Var2 reduce production blank_node -> Blank_node_label
-- On Var1 reduce production blank_node -> Blank_node_label
-- On VALUES reduce production blank_node -> Blank_node_label
-- On String_literal reduce production blank_node -> Blank_node_label
-- On SERVICE reduce production blank_node -> Blank_node_label
-- On SEMICOLON reduce production blank_node -> Blank_node_label
-- On RPAR reduce production blank_node -> Blank_node_label
-- On RBRACKET reduce production blank_node -> Blank_node_label
-- On RBRACE reduce production blank_node -> Blank_node_label
-- On Pname_ns reduce production blank_node -> Blank_node_label
-- On Pname_ln reduce production blank_node -> Blank_node_label
-- On OPTIONAL reduce production blank_node -> Blank_node_label
-- On NIL reduce production blank_node -> Blank_node_label
-- On MINUS reduce production blank_node -> Blank_node_label
-- On LPAR reduce production blank_node -> Blank_node_label
-- On LBRACKET reduce production blank_node -> Blank_node_label
-- On LBRACE reduce production blank_node -> Blank_node_label
-- On Iriref_ reduce production blank_node -> Blank_node_label
-- On Integer_positive reduce production blank_node -> Blank_node_label
-- On Integer_negative reduce production blank_node -> Blank_node_label
-- On Integer reduce production blank_node -> Blank_node_label
-- On HAT reduce production blank_node -> Blank_node_label
-- On GRAPH reduce production blank_node -> Blank_node_label
-- On FILTER reduce production blank_node -> Blank_node_label
-- On Double_positive reduce production blank_node -> Blank_node_label
-- On Double_negative reduce production blank_node -> Blank_node_label
-- On Double reduce production blank_node -> Blank_node_label
-- On Decimal_positive reduce production blank_node -> Blank_node_label
-- On Decimal_negative reduce production blank_node -> Blank_node_label
-- On Decimal reduce production blank_node -> Blank_node_label
-- On DOT reduce production blank_node -> Blank_node_label
-- On COMMA reduce production blank_node -> Blank_node_label
-- On Boolean reduce production blank_node -> Blank_node_label
-- On Blank_node_label reduce production blank_node -> Blank_node_label
-- On BIND reduce production blank_node -> Blank_node_label
-- On BANG reduce production blank_node -> Blank_node_label
-- On ANON reduce production blank_node -> Blank_node_label
-- On A reduce production blank_node -> Blank_node_label

State 141:
blank_node -> ANON . [ Var2 Var1 VALUES String_literal SERVICE SEMICOLON RPAR RBRACKET RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer HAT GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT COMMA Boolean Blank_node_label BIND BANG ANON A ]
-- On Var2 reduce production blank_node -> ANON
-- On Var1 reduce production blank_node -> ANON
-- On VALUES reduce production blank_node -> ANON
-- On String_literal reduce production blank_node -> ANON
-- On SERVICE reduce production blank_node -> ANON
-- On SEMICOLON reduce production blank_node -> ANON
-- On RPAR reduce production blank_node -> ANON
-- On RBRACKET reduce production blank_node -> ANON
-- On RBRACE reduce production blank_node -> ANON
-- On Pname_ns reduce production blank_node -> ANON
-- On Pname_ln reduce production blank_node -> ANON
-- On OPTIONAL reduce production blank_node -> ANON
-- On NIL reduce production blank_node -> ANON
-- On MINUS reduce production blank_node -> ANON
-- On LPAR reduce production blank_node -> ANON
-- On LBRACKET reduce production blank_node -> ANON
-- On LBRACE reduce production blank_node -> ANON
-- On Iriref_ reduce production blank_node -> ANON
-- On Integer_positive reduce production blank_node -> ANON
-- On Integer_negative reduce production blank_node -> ANON
-- On Integer reduce production blank_node -> ANON
-- On HAT reduce production blank_node -> ANON
-- On GRAPH reduce production blank_node -> ANON
-- On FILTER reduce production blank_node -> ANON
-- On Double_positive reduce production blank_node -> ANON
-- On Double_negative reduce production blank_node -> ANON
-- On Double reduce production blank_node -> ANON
-- On Decimal_positive reduce production blank_node -> ANON
-- On Decimal_negative reduce production blank_node -> ANON
-- On Decimal reduce production blank_node -> ANON
-- On DOT reduce production blank_node -> ANON
-- On COMMA reduce production blank_node -> ANON
-- On Boolean reduce production blank_node -> ANON
-- On Blank_node_label reduce production blank_node -> ANON
-- On BIND reduce production blank_node -> ANON
-- On BANG reduce production blank_node -> ANON
-- On ANON reduce production blank_node -> ANON
-- On A reduce production blank_node -> ANON

State 142:
graph_node_path -> var_or_term . [ Var2 Var1 VALUES String_literal SERVICE SEMICOLON RPAR RBRACKET RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT COMMA Boolean Blank_node_label BIND ANON ]
-- On Var2 reduce production graph_node_path -> var_or_term
-- On Var1 reduce production graph_node_path -> var_or_term
-- On VALUES reduce production graph_node_path -> var_or_term
-- On String_literal reduce production graph_node_path -> var_or_term
-- On SERVICE reduce production graph_node_path -> var_or_term
-- On SEMICOLON reduce production graph_node_path -> var_or_term
-- On RPAR reduce production graph_node_path -> var_or_term
-- On RBRACKET reduce production graph_node_path -> var_or_term
-- On RBRACE reduce production graph_node_path -> var_or_term
-- On Pname_ns reduce production graph_node_path -> var_or_term
-- On Pname_ln reduce production graph_node_path -> var_or_term
-- On OPTIONAL reduce production graph_node_path -> var_or_term
-- On NIL reduce production graph_node_path -> var_or_term
-- On MINUS reduce production graph_node_path -> var_or_term
-- On LPAR reduce production graph_node_path -> var_or_term
-- On LBRACKET reduce production graph_node_path -> var_or_term
-- On LBRACE reduce production graph_node_path -> var_or_term
-- On Iriref_ reduce production graph_node_path -> var_or_term
-- On Integer_positive reduce production graph_node_path -> var_or_term
-- On Integer_negative reduce production graph_node_path -> var_or_term
-- On Integer reduce production graph_node_path -> var_or_term
-- On GRAPH reduce production graph_node_path -> var_or_term
-- On FILTER reduce production graph_node_path -> var_or_term
-- On Double_positive reduce production graph_node_path -> var_or_term
-- On Double_negative reduce production graph_node_path -> var_or_term
-- On Double reduce production graph_node_path -> var_or_term
-- On Decimal_positive reduce production graph_node_path -> var_or_term
-- On Decimal_negative reduce production graph_node_path -> var_or_term
-- On Decimal reduce production graph_node_path -> var_or_term
-- On DOT reduce production graph_node_path -> var_or_term
-- On COMMA reduce production graph_node_path -> var_or_term
-- On Boolean reduce production graph_node_path -> var_or_term
-- On Blank_node_label reduce production graph_node_path -> var_or_term
-- On BIND reduce production graph_node_path -> var_or_term
-- On ANON reduce production graph_node_path -> var_or_term

State 143:
var_or_term -> var . [ Var2 Var1 VALUES String_literal SERVICE SEMICOLON RPAR RBRACKET RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer HAT GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT COMMA Boolean Blank_node_label BIND BANG ANON A ]
-- On Var2 reduce production var_or_term -> var
-- On Var1 reduce production var_or_term -> var
-- On VALUES reduce production var_or_term -> var
-- On String_literal reduce production var_or_term -> var
-- On SERVICE reduce production var_or_term -> var
-- On SEMICOLON reduce production var_or_term -> var
-- On RPAR reduce production var_or_term -> var
-- On RBRACKET reduce production var_or_term -> var
-- On RBRACE reduce production var_or_term -> var
-- On Pname_ns reduce production var_or_term -> var
-- On Pname_ln reduce production var_or_term -> var
-- On OPTIONAL reduce production var_or_term -> var
-- On NIL reduce production var_or_term -> var
-- On MINUS reduce production var_or_term -> var
-- On LPAR reduce production var_or_term -> var
-- On LBRACKET reduce production var_or_term -> var
-- On LBRACE reduce production var_or_term -> var
-- On Iriref_ reduce production var_or_term -> var
-- On Integer_positive reduce production var_or_term -> var
-- On Integer_negative reduce production var_or_term -> var
-- On Integer reduce production var_or_term -> var
-- On HAT reduce production var_or_term -> var
-- On GRAPH reduce production var_or_term -> var
-- On FILTER reduce production var_or_term -> var
-- On Double_positive reduce production var_or_term -> var
-- On Double_negative reduce production var_or_term -> var
-- On Double reduce production var_or_term -> var
-- On Decimal_positive reduce production var_or_term -> var
-- On Decimal_negative reduce production var_or_term -> var
-- On Decimal reduce production var_or_term -> var
-- On DOT reduce production var_or_term -> var
-- On COMMA reduce production var_or_term -> var
-- On Boolean reduce production var_or_term -> var
-- On Blank_node_label reduce production var_or_term -> var
-- On BIND reduce production var_or_term -> var
-- On BANG reduce production var_or_term -> var
-- On ANON reduce production var_or_term -> var
-- On A reduce production var_or_term -> var

State 144:
graph_node_path -> triples_node_path . [ Var2 Var1 VALUES String_literal SERVICE SEMICOLON RPAR RBRACKET RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT COMMA Boolean Blank_node_label BIND ANON ]
-- On Var2 reduce production graph_node_path -> triples_node_path
-- On Var1 reduce production graph_node_path -> triples_node_path
-- On VALUES reduce production graph_node_path -> triples_node_path
-- On String_literal reduce production graph_node_path -> triples_node_path
-- On SERVICE reduce production graph_node_path -> triples_node_path
-- On SEMICOLON reduce production graph_node_path -> triples_node_path
-- On RPAR reduce production graph_node_path -> triples_node_path
-- On RBRACKET reduce production graph_node_path -> triples_node_path
-- On RBRACE reduce production graph_node_path -> triples_node_path
-- On Pname_ns reduce production graph_node_path -> triples_node_path
-- On Pname_ln reduce production graph_node_path -> triples_node_path
-- On OPTIONAL reduce production graph_node_path -> triples_node_path
-- On NIL reduce production graph_node_path -> triples_node_path
-- On MINUS reduce production graph_node_path -> triples_node_path
-- On LPAR reduce production graph_node_path -> triples_node_path
-- On LBRACKET reduce production graph_node_path -> triples_node_path
-- On LBRACE reduce production graph_node_path -> triples_node_path
-- On Iriref_ reduce production graph_node_path -> triples_node_path
-- On Integer_positive reduce production graph_node_path -> triples_node_path
-- On Integer_negative reduce production graph_node_path -> triples_node_path
-- On Integer reduce production graph_node_path -> triples_node_path
-- On GRAPH reduce production graph_node_path -> triples_node_path
-- On FILTER reduce production graph_node_path -> triples_node_path
-- On Double_positive reduce production graph_node_path -> triples_node_path
-- On Double_negative reduce production graph_node_path -> triples_node_path
-- On Double reduce production graph_node_path -> triples_node_path
-- On Decimal_positive reduce production graph_node_path -> triples_node_path
-- On Decimal_negative reduce production graph_node_path -> triples_node_path
-- On Decimal reduce production graph_node_path -> triples_node_path
-- On DOT reduce production graph_node_path -> triples_node_path
-- On COMMA reduce production graph_node_path -> triples_node_path
-- On Boolean reduce production graph_node_path -> triples_node_path
-- On Blank_node_label reduce production graph_node_path -> triples_node_path
-- On BIND reduce production graph_node_path -> triples_node_path
-- On ANON reduce production graph_node_path -> triples_node_path

State 145:
rdf_literal_ -> string . [ YEAR Var2 Var1 VALUES UUID URI UNDEF UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACKET RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING HAT GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG AS ANON AMPAMP ABS A ]
rdf_literal_ -> string . HATHAT iri [ YEAR Var2 Var1 VALUES UUID URI UNDEF UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACKET RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING HAT GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG AS ANON AMPAMP ABS A ]
rdf_literal_ -> string . Langtag [ YEAR Var2 Var1 VALUES UUID URI UNDEF UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACKET RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING HAT GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG AS ANON AMPAMP ABS A ]
-- On Langtag shift to state 146
-- On HATHAT shift to state 147
-- On YEAR reduce production rdf_literal_ -> string
-- On Var2 reduce production rdf_literal_ -> string
-- On Var1 reduce production rdf_literal_ -> string
-- On VALUES reduce production rdf_literal_ -> string
-- On UUID reduce production rdf_literal_ -> string
-- On URI reduce production rdf_literal_ -> string
-- On UNDEF reduce production rdf_literal_ -> string
-- On UCASE reduce production rdf_literal_ -> string
-- On TZ reduce production rdf_literal_ -> string
-- On TIMEZONE reduce production rdf_literal_ -> string
-- On String_literal reduce production rdf_literal_ -> string
-- On SUM reduce production rdf_literal_ -> string
-- On SUBSTR reduce production rdf_literal_ -> string
-- On STRUUID reduce production rdf_literal_ -> string
-- On STRSTARTS reduce production rdf_literal_ -> string
-- On STRLEN reduce production rdf_literal_ -> string
-- On STRLANG reduce production rdf_literal_ -> string
-- On STRENDS reduce production rdf_literal_ -> string
-- On STRDT reduce production rdf_literal_ -> string
-- On STRBEFORE reduce production rdf_literal_ -> string
-- On STRAFTER reduce production rdf_literal_ -> string
-- On STR reduce production rdf_literal_ -> string
-- On STAR reduce production rdf_literal_ -> string
-- On SLASH reduce production rdf_literal_ -> string
-- On SHA512 reduce production rdf_literal_ -> string
-- On SHA384 reduce production rdf_literal_ -> string
-- On SHA256 reduce production rdf_literal_ -> string
-- On SHA1 reduce production rdf_literal_ -> string
-- On SERVICE reduce production rdf_literal_ -> string
-- On SEMICOLON reduce production rdf_literal_ -> string
-- On SECONDS reduce production rdf_literal_ -> string
-- On SAMPLE reduce production rdf_literal_ -> string
-- On SAMETERM reduce production rdf_literal_ -> string
-- On RPAR reduce production rdf_literal_ -> string
-- On ROUND reduce production rdf_literal_ -> string
-- On REPLACE reduce production rdf_literal_ -> string
-- On REGEX reduce production rdf_literal_ -> string
-- On RBRACKET reduce production rdf_literal_ -> string
-- On RBRACE reduce production rdf_literal_ -> string
-- On RAND reduce production rdf_literal_ -> string
-- On Pname_ns reduce production rdf_literal_ -> string
-- On Pname_ln reduce production rdf_literal_ -> string
-- On PLUS reduce production rdf_literal_ -> string
-- On PIPEPIPE reduce production rdf_literal_ -> string
-- On ORDER reduce production rdf_literal_ -> string
-- On OPTIONAL reduce production rdf_literal_ -> string
-- On OFFSET reduce production rdf_literal_ -> string
-- On NOW reduce production rdf_literal_ -> string
-- On NOTEQUAL reduce production rdf_literal_ -> string
-- On NOT reduce production rdf_literal_ -> string
-- On NIL reduce production rdf_literal_ -> string
-- On MONTH reduce production rdf_literal_ -> string
-- On MINUTES reduce production rdf_literal_ -> string
-- On MINUS reduce production rdf_literal_ -> string
-- On MIN reduce production rdf_literal_ -> string
-- On MD5 reduce production rdf_literal_ -> string
-- On MAX reduce production rdf_literal_ -> string
-- On LTE reduce production rdf_literal_ -> string
-- On LT reduce production rdf_literal_ -> string
-- On LPAR reduce production rdf_literal_ -> string
-- On LIMIT reduce production rdf_literal_ -> string
-- On LCASE reduce production rdf_literal_ -> string
-- On LBRACKET reduce production rdf_literal_ -> string
-- On LBRACE reduce production rdf_literal_ -> string
-- On LANGMATCHES reduce production rdf_literal_ -> string
-- On LANG reduce production rdf_literal_ -> string
-- On Iriref_ reduce production rdf_literal_ -> string
-- On Integer_positive reduce production rdf_literal_ -> string
-- On Integer_negative reduce production rdf_literal_ -> string
-- On Integer reduce production rdf_literal_ -> string
-- On ISURI reduce production rdf_literal_ -> string
-- On ISNUMERIC reduce production rdf_literal_ -> string
-- On ISLITERAL reduce production rdf_literal_ -> string
-- On ISIRI reduce production rdf_literal_ -> string
-- On ISBLANK reduce production rdf_literal_ -> string
-- On IRI reduce production rdf_literal_ -> string
-- On IN reduce production rdf_literal_ -> string
-- On IF reduce production rdf_literal_ -> string
-- On HOURS reduce production rdf_literal_ -> string
-- On HAVING reduce production rdf_literal_ -> string
-- On HAT reduce production rdf_literal_ -> string
-- On GTE reduce production rdf_literal_ -> string
-- On GT reduce production rdf_literal_ -> string
-- On GROUP_CONCAT reduce production rdf_literal_ -> string
-- On GRAPH reduce production rdf_literal_ -> string
-- On FLOOR reduce production rdf_literal_ -> string
-- On FILTER reduce production rdf_literal_ -> string
-- On EXISTS reduce production rdf_literal_ -> string
-- On EQUAL reduce production rdf_literal_ -> string
-- On EOF reduce production rdf_literal_ -> string
-- On ENCODE_FOR_URI reduce production rdf_literal_ -> string
-- On Double_positive reduce production rdf_literal_ -> string
-- On Double_negative reduce production rdf_literal_ -> string
-- On Double reduce production rdf_literal_ -> string
-- On Decimal_positive reduce production rdf_literal_ -> string
-- On Decimal_negative reduce production rdf_literal_ -> string
-- On Decimal reduce production rdf_literal_ -> string
-- On DOT reduce production rdf_literal_ -> string
-- On DAY reduce production rdf_literal_ -> string
-- On DATATYPE reduce production rdf_literal_ -> string
-- On COUNT reduce production rdf_literal_ -> string
-- On CONTAINS reduce production rdf_literal_ -> string
-- On CONCAT reduce production rdf_literal_ -> string
-- On COMMA reduce production rdf_literal_ -> string
-- On COALESCE reduce production rdf_literal_ -> string
-- On CEIL reduce production rdf_literal_ -> string
-- On Boolean reduce production rdf_literal_ -> string
-- On Blank_node_label reduce production rdf_literal_ -> string
-- On BOUND reduce production rdf_literal_ -> string
-- On BNODE reduce production rdf_literal_ -> string
-- On BIND reduce production rdf_literal_ -> string
-- On BANG reduce production rdf_literal_ -> string
-- On AVG reduce production rdf_literal_ -> string
-- On AS reduce production rdf_literal_ -> string
-- On ANON reduce production rdf_literal_ -> string
-- On AMPAMP reduce production rdf_literal_ -> string
-- On ABS reduce production rdf_literal_ -> string
-- On A reduce production rdf_literal_ -> string

State 146:
rdf_literal_ -> string Langtag . [ YEAR Var2 Var1 VALUES UUID URI UNDEF UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACKET RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING HAT GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG AS ANON AMPAMP ABS A ]
-- On YEAR reduce production rdf_literal_ -> string Langtag
-- On Var2 reduce production rdf_literal_ -> string Langtag
-- On Var1 reduce production rdf_literal_ -> string Langtag
-- On VALUES reduce production rdf_literal_ -> string Langtag
-- On UUID reduce production rdf_literal_ -> string Langtag
-- On URI reduce production rdf_literal_ -> string Langtag
-- On UNDEF reduce production rdf_literal_ -> string Langtag
-- On UCASE reduce production rdf_literal_ -> string Langtag
-- On TZ reduce production rdf_literal_ -> string Langtag
-- On TIMEZONE reduce production rdf_literal_ -> string Langtag
-- On String_literal reduce production rdf_literal_ -> string Langtag
-- On SUM reduce production rdf_literal_ -> string Langtag
-- On SUBSTR reduce production rdf_literal_ -> string Langtag
-- On STRUUID reduce production rdf_literal_ -> string Langtag
-- On STRSTARTS reduce production rdf_literal_ -> string Langtag
-- On STRLEN reduce production rdf_literal_ -> string Langtag
-- On STRLANG reduce production rdf_literal_ -> string Langtag
-- On STRENDS reduce production rdf_literal_ -> string Langtag
-- On STRDT reduce production rdf_literal_ -> string Langtag
-- On STRBEFORE reduce production rdf_literal_ -> string Langtag
-- On STRAFTER reduce production rdf_literal_ -> string Langtag
-- On STR reduce production rdf_literal_ -> string Langtag
-- On STAR reduce production rdf_literal_ -> string Langtag
-- On SLASH reduce production rdf_literal_ -> string Langtag
-- On SHA512 reduce production rdf_literal_ -> string Langtag
-- On SHA384 reduce production rdf_literal_ -> string Langtag
-- On SHA256 reduce production rdf_literal_ -> string Langtag
-- On SHA1 reduce production rdf_literal_ -> string Langtag
-- On SERVICE reduce production rdf_literal_ -> string Langtag
-- On SEMICOLON reduce production rdf_literal_ -> string Langtag
-- On SECONDS reduce production rdf_literal_ -> string Langtag
-- On SAMPLE reduce production rdf_literal_ -> string Langtag
-- On SAMETERM reduce production rdf_literal_ -> string Langtag
-- On RPAR reduce production rdf_literal_ -> string Langtag
-- On ROUND reduce production rdf_literal_ -> string Langtag
-- On REPLACE reduce production rdf_literal_ -> string Langtag
-- On REGEX reduce production rdf_literal_ -> string Langtag
-- On RBRACKET reduce production rdf_literal_ -> string Langtag
-- On RBRACE reduce production rdf_literal_ -> string Langtag
-- On RAND reduce production rdf_literal_ -> string Langtag
-- On Pname_ns reduce production rdf_literal_ -> string Langtag
-- On Pname_ln reduce production rdf_literal_ -> string Langtag
-- On PLUS reduce production rdf_literal_ -> string Langtag
-- On PIPEPIPE reduce production rdf_literal_ -> string Langtag
-- On ORDER reduce production rdf_literal_ -> string Langtag
-- On OPTIONAL reduce production rdf_literal_ -> string Langtag
-- On OFFSET reduce production rdf_literal_ -> string Langtag
-- On NOW reduce production rdf_literal_ -> string Langtag
-- On NOTEQUAL reduce production rdf_literal_ -> string Langtag
-- On NOT reduce production rdf_literal_ -> string Langtag
-- On NIL reduce production rdf_literal_ -> string Langtag
-- On MONTH reduce production rdf_literal_ -> string Langtag
-- On MINUTES reduce production rdf_literal_ -> string Langtag
-- On MINUS reduce production rdf_literal_ -> string Langtag
-- On MIN reduce production rdf_literal_ -> string Langtag
-- On MD5 reduce production rdf_literal_ -> string Langtag
-- On MAX reduce production rdf_literal_ -> string Langtag
-- On LTE reduce production rdf_literal_ -> string Langtag
-- On LT reduce production rdf_literal_ -> string Langtag
-- On LPAR reduce production rdf_literal_ -> string Langtag
-- On LIMIT reduce production rdf_literal_ -> string Langtag
-- On LCASE reduce production rdf_literal_ -> string Langtag
-- On LBRACKET reduce production rdf_literal_ -> string Langtag
-- On LBRACE reduce production rdf_literal_ -> string Langtag
-- On LANGMATCHES reduce production rdf_literal_ -> string Langtag
-- On LANG reduce production rdf_literal_ -> string Langtag
-- On Iriref_ reduce production rdf_literal_ -> string Langtag
-- On Integer_positive reduce production rdf_literal_ -> string Langtag
-- On Integer_negative reduce production rdf_literal_ -> string Langtag
-- On Integer reduce production rdf_literal_ -> string Langtag
-- On ISURI reduce production rdf_literal_ -> string Langtag
-- On ISNUMERIC reduce production rdf_literal_ -> string Langtag
-- On ISLITERAL reduce production rdf_literal_ -> string Langtag
-- On ISIRI reduce production rdf_literal_ -> string Langtag
-- On ISBLANK reduce production rdf_literal_ -> string Langtag
-- On IRI reduce production rdf_literal_ -> string Langtag
-- On IN reduce production rdf_literal_ -> string Langtag
-- On IF reduce production rdf_literal_ -> string Langtag
-- On HOURS reduce production rdf_literal_ -> string Langtag
-- On HAVING reduce production rdf_literal_ -> string Langtag
-- On HAT reduce production rdf_literal_ -> string Langtag
-- On GTE reduce production rdf_literal_ -> string Langtag
-- On GT reduce production rdf_literal_ -> string Langtag
-- On GROUP_CONCAT reduce production rdf_literal_ -> string Langtag
-- On GRAPH reduce production rdf_literal_ -> string Langtag
-- On FLOOR reduce production rdf_literal_ -> string Langtag
-- On FILTER reduce production rdf_literal_ -> string Langtag
-- On EXISTS reduce production rdf_literal_ -> string Langtag
-- On EQUAL reduce production rdf_literal_ -> string Langtag
-- On EOF reduce production rdf_literal_ -> string Langtag
-- On ENCODE_FOR_URI reduce production rdf_literal_ -> string Langtag
-- On Double_positive reduce production rdf_literal_ -> string Langtag
-- On Double_negative reduce production rdf_literal_ -> string Langtag
-- On Double reduce production rdf_literal_ -> string Langtag
-- On Decimal_positive reduce production rdf_literal_ -> string Langtag
-- On Decimal_negative reduce production rdf_literal_ -> string Langtag
-- On Decimal reduce production rdf_literal_ -> string Langtag
-- On DOT reduce production rdf_literal_ -> string Langtag
-- On DAY reduce production rdf_literal_ -> string Langtag
-- On DATATYPE reduce production rdf_literal_ -> string Langtag
-- On COUNT reduce production rdf_literal_ -> string Langtag
-- On CONTAINS reduce production rdf_literal_ -> string Langtag
-- On CONCAT reduce production rdf_literal_ -> string Langtag
-- On COMMA reduce production rdf_literal_ -> string Langtag
-- On COALESCE reduce production rdf_literal_ -> string Langtag
-- On CEIL reduce production rdf_literal_ -> string Langtag
-- On Boolean reduce production rdf_literal_ -> string Langtag
-- On Blank_node_label reduce production rdf_literal_ -> string Langtag
-- On BOUND reduce production rdf_literal_ -> string Langtag
-- On BNODE reduce production rdf_literal_ -> string Langtag
-- On BIND reduce production rdf_literal_ -> string Langtag
-- On BANG reduce production rdf_literal_ -> string Langtag
-- On AVG reduce production rdf_literal_ -> string Langtag
-- On AS reduce production rdf_literal_ -> string Langtag
-- On ANON reduce production rdf_literal_ -> string Langtag
-- On AMPAMP reduce production rdf_literal_ -> string Langtag
-- On ABS reduce production rdf_literal_ -> string Langtag
-- On A reduce production rdf_literal_ -> string Langtag

State 147:
rdf_literal_ -> string HATHAT . iri [ YEAR Var2 Var1 VALUES UUID URI UNDEF UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACKET RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING HAT GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG AS ANON AMPAMP ABS A ]
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On Iriref_ shift to state 91
-- On prefixed_name shift to state 97
-- On iri shift to state 148

State 148:
rdf_literal_ -> string HATHAT iri . [ YEAR Var2 Var1 VALUES UUID URI UNDEF UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACKET RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING HAT GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG AS ANON AMPAMP ABS A ]
-- On YEAR reduce production rdf_literal_ -> string HATHAT iri
-- On Var2 reduce production rdf_literal_ -> string HATHAT iri
-- On Var1 reduce production rdf_literal_ -> string HATHAT iri
-- On VALUES reduce production rdf_literal_ -> string HATHAT iri
-- On UUID reduce production rdf_literal_ -> string HATHAT iri
-- On URI reduce production rdf_literal_ -> string HATHAT iri
-- On UNDEF reduce production rdf_literal_ -> string HATHAT iri
-- On UCASE reduce production rdf_literal_ -> string HATHAT iri
-- On TZ reduce production rdf_literal_ -> string HATHAT iri
-- On TIMEZONE reduce production rdf_literal_ -> string HATHAT iri
-- On String_literal reduce production rdf_literal_ -> string HATHAT iri
-- On SUM reduce production rdf_literal_ -> string HATHAT iri
-- On SUBSTR reduce production rdf_literal_ -> string HATHAT iri
-- On STRUUID reduce production rdf_literal_ -> string HATHAT iri
-- On STRSTARTS reduce production rdf_literal_ -> string HATHAT iri
-- On STRLEN reduce production rdf_literal_ -> string HATHAT iri
-- On STRLANG reduce production rdf_literal_ -> string HATHAT iri
-- On STRENDS reduce production rdf_literal_ -> string HATHAT iri
-- On STRDT reduce production rdf_literal_ -> string HATHAT iri
-- On STRBEFORE reduce production rdf_literal_ -> string HATHAT iri
-- On STRAFTER reduce production rdf_literal_ -> string HATHAT iri
-- On STR reduce production rdf_literal_ -> string HATHAT iri
-- On STAR reduce production rdf_literal_ -> string HATHAT iri
-- On SLASH reduce production rdf_literal_ -> string HATHAT iri
-- On SHA512 reduce production rdf_literal_ -> string HATHAT iri
-- On SHA384 reduce production rdf_literal_ -> string HATHAT iri
-- On SHA256 reduce production rdf_literal_ -> string HATHAT iri
-- On SHA1 reduce production rdf_literal_ -> string HATHAT iri
-- On SERVICE reduce production rdf_literal_ -> string HATHAT iri
-- On SEMICOLON reduce production rdf_literal_ -> string HATHAT iri
-- On SECONDS reduce production rdf_literal_ -> string HATHAT iri
-- On SAMPLE reduce production rdf_literal_ -> string HATHAT iri
-- On SAMETERM reduce production rdf_literal_ -> string HATHAT iri
-- On RPAR reduce production rdf_literal_ -> string HATHAT iri
-- On ROUND reduce production rdf_literal_ -> string HATHAT iri
-- On REPLACE reduce production rdf_literal_ -> string HATHAT iri
-- On REGEX reduce production rdf_literal_ -> string HATHAT iri
-- On RBRACKET reduce production rdf_literal_ -> string HATHAT iri
-- On RBRACE reduce production rdf_literal_ -> string HATHAT iri
-- On RAND reduce production rdf_literal_ -> string HATHAT iri
-- On Pname_ns reduce production rdf_literal_ -> string HATHAT iri
-- On Pname_ln reduce production rdf_literal_ -> string HATHAT iri
-- On PLUS reduce production rdf_literal_ -> string HATHAT iri
-- On PIPEPIPE reduce production rdf_literal_ -> string HATHAT iri
-- On ORDER reduce production rdf_literal_ -> string HATHAT iri
-- On OPTIONAL reduce production rdf_literal_ -> string HATHAT iri
-- On OFFSET reduce production rdf_literal_ -> string HATHAT iri
-- On NOW reduce production rdf_literal_ -> string HATHAT iri
-- On NOTEQUAL reduce production rdf_literal_ -> string HATHAT iri
-- On NOT reduce production rdf_literal_ -> string HATHAT iri
-- On NIL reduce production rdf_literal_ -> string HATHAT iri
-- On MONTH reduce production rdf_literal_ -> string HATHAT iri
-- On MINUTES reduce production rdf_literal_ -> string HATHAT iri
-- On MINUS reduce production rdf_literal_ -> string HATHAT iri
-- On MIN reduce production rdf_literal_ -> string HATHAT iri
-- On MD5 reduce production rdf_literal_ -> string HATHAT iri
-- On MAX reduce production rdf_literal_ -> string HATHAT iri
-- On LTE reduce production rdf_literal_ -> string HATHAT iri
-- On LT reduce production rdf_literal_ -> string HATHAT iri
-- On LPAR reduce production rdf_literal_ -> string HATHAT iri
-- On LIMIT reduce production rdf_literal_ -> string HATHAT iri
-- On LCASE reduce production rdf_literal_ -> string HATHAT iri
-- On LBRACKET reduce production rdf_literal_ -> string HATHAT iri
-- On LBRACE reduce production rdf_literal_ -> string HATHAT iri
-- On LANGMATCHES reduce production rdf_literal_ -> string HATHAT iri
-- On LANG reduce production rdf_literal_ -> string HATHAT iri
-- On Iriref_ reduce production rdf_literal_ -> string HATHAT iri
-- On Integer_positive reduce production rdf_literal_ -> string HATHAT iri
-- On Integer_negative reduce production rdf_literal_ -> string HATHAT iri
-- On Integer reduce production rdf_literal_ -> string HATHAT iri
-- On ISURI reduce production rdf_literal_ -> string HATHAT iri
-- On ISNUMERIC reduce production rdf_literal_ -> string HATHAT iri
-- On ISLITERAL reduce production rdf_literal_ -> string HATHAT iri
-- On ISIRI reduce production rdf_literal_ -> string HATHAT iri
-- On ISBLANK reduce production rdf_literal_ -> string HATHAT iri
-- On IRI reduce production rdf_literal_ -> string HATHAT iri
-- On IN reduce production rdf_literal_ -> string HATHAT iri
-- On IF reduce production rdf_literal_ -> string HATHAT iri
-- On HOURS reduce production rdf_literal_ -> string HATHAT iri
-- On HAVING reduce production rdf_literal_ -> string HATHAT iri
-- On HAT reduce production rdf_literal_ -> string HATHAT iri
-- On GTE reduce production rdf_literal_ -> string HATHAT iri
-- On GT reduce production rdf_literal_ -> string HATHAT iri
-- On GROUP_CONCAT reduce production rdf_literal_ -> string HATHAT iri
-- On GRAPH reduce production rdf_literal_ -> string HATHAT iri
-- On FLOOR reduce production rdf_literal_ -> string HATHAT iri
-- On FILTER reduce production rdf_literal_ -> string HATHAT iri
-- On EXISTS reduce production rdf_literal_ -> string HATHAT iri
-- On EQUAL reduce production rdf_literal_ -> string HATHAT iri
-- On EOF reduce production rdf_literal_ -> string HATHAT iri
-- On ENCODE_FOR_URI reduce production rdf_literal_ -> string HATHAT iri
-- On Double_positive reduce production rdf_literal_ -> string HATHAT iri
-- On Double_negative reduce production rdf_literal_ -> string HATHAT iri
-- On Double reduce production rdf_literal_ -> string HATHAT iri
-- On Decimal_positive reduce production rdf_literal_ -> string HATHAT iri
-- On Decimal_negative reduce production rdf_literal_ -> string HATHAT iri
-- On Decimal reduce production rdf_literal_ -> string HATHAT iri
-- On DOT reduce production rdf_literal_ -> string HATHAT iri
-- On DAY reduce production rdf_literal_ -> string HATHAT iri
-- On DATATYPE reduce production rdf_literal_ -> string HATHAT iri
-- On COUNT reduce production rdf_literal_ -> string HATHAT iri
-- On CONTAINS reduce production rdf_literal_ -> string HATHAT iri
-- On CONCAT reduce production rdf_literal_ -> string HATHAT iri
-- On COMMA reduce production rdf_literal_ -> string HATHAT iri
-- On COALESCE reduce production rdf_literal_ -> string HATHAT iri
-- On CEIL reduce production rdf_literal_ -> string HATHAT iri
-- On Boolean reduce production rdf_literal_ -> string HATHAT iri
-- On Blank_node_label reduce production rdf_literal_ -> string HATHAT iri
-- On BOUND reduce production rdf_literal_ -> string HATHAT iri
-- On BNODE reduce production rdf_literal_ -> string HATHAT iri
-- On BIND reduce production rdf_literal_ -> string HATHAT iri
-- On BANG reduce production rdf_literal_ -> string HATHAT iri
-- On AVG reduce production rdf_literal_ -> string HATHAT iri
-- On AS reduce production rdf_literal_ -> string HATHAT iri
-- On ANON reduce production rdf_literal_ -> string HATHAT iri
-- On AMPAMP reduce production rdf_literal_ -> string HATHAT iri
-- On ABS reduce production rdf_literal_ -> string HATHAT iri
-- On A reduce production rdf_literal_ -> string HATHAT iri

State 149:
object_list_path -> separated_nonempty_list(COMMA,object_path) . [ VALUES SERVICE SEMICOLON RBRACKET RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER DOT BIND ]
-- On VALUES reduce production object_list_path -> separated_nonempty_list(COMMA,object_path)
-- On SERVICE reduce production object_list_path -> separated_nonempty_list(COMMA,object_path)
-- On SEMICOLON reduce production object_list_path -> separated_nonempty_list(COMMA,object_path)
-- On RBRACKET reduce production object_list_path -> separated_nonempty_list(COMMA,object_path)
-- On RBRACE reduce production object_list_path -> separated_nonempty_list(COMMA,object_path)
-- On OPTIONAL reduce production object_list_path -> separated_nonempty_list(COMMA,object_path)
-- On MINUS reduce production object_list_path -> separated_nonempty_list(COMMA,object_path)
-- On LBRACE reduce production object_list_path -> separated_nonempty_list(COMMA,object_path)
-- On GRAPH reduce production object_list_path -> separated_nonempty_list(COMMA,object_path)
-- On FILTER reduce production object_list_path -> separated_nonempty_list(COMMA,object_path)
-- On DOT reduce production object_list_path -> separated_nonempty_list(COMMA,object_path)
-- On BIND reduce production object_list_path -> separated_nonempty_list(COMMA,object_path)

State 150:
rdf_literal -> rdf_literal_ . [ YEAR Var2 Var1 VALUES UUID URI UNDEF UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACKET RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING HAT GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG AS ANON AMPAMP ABS A ]
-- On YEAR reduce production rdf_literal -> rdf_literal_
-- On Var2 reduce production rdf_literal -> rdf_literal_
-- On Var1 reduce production rdf_literal -> rdf_literal_
-- On VALUES reduce production rdf_literal -> rdf_literal_
-- On UUID reduce production rdf_literal -> rdf_literal_
-- On URI reduce production rdf_literal -> rdf_literal_
-- On UNDEF reduce production rdf_literal -> rdf_literal_
-- On UCASE reduce production rdf_literal -> rdf_literal_
-- On TZ reduce production rdf_literal -> rdf_literal_
-- On TIMEZONE reduce production rdf_literal -> rdf_literal_
-- On String_literal reduce production rdf_literal -> rdf_literal_
-- On SUM reduce production rdf_literal -> rdf_literal_
-- On SUBSTR reduce production rdf_literal -> rdf_literal_
-- On STRUUID reduce production rdf_literal -> rdf_literal_
-- On STRSTARTS reduce production rdf_literal -> rdf_literal_
-- On STRLEN reduce production rdf_literal -> rdf_literal_
-- On STRLANG reduce production rdf_literal -> rdf_literal_
-- On STRENDS reduce production rdf_literal -> rdf_literal_
-- On STRDT reduce production rdf_literal -> rdf_literal_
-- On STRBEFORE reduce production rdf_literal -> rdf_literal_
-- On STRAFTER reduce production rdf_literal -> rdf_literal_
-- On STR reduce production rdf_literal -> rdf_literal_
-- On STAR reduce production rdf_literal -> rdf_literal_
-- On SLASH reduce production rdf_literal -> rdf_literal_
-- On SHA512 reduce production rdf_literal -> rdf_literal_
-- On SHA384 reduce production rdf_literal -> rdf_literal_
-- On SHA256 reduce production rdf_literal -> rdf_literal_
-- On SHA1 reduce production rdf_literal -> rdf_literal_
-- On SERVICE reduce production rdf_literal -> rdf_literal_
-- On SEMICOLON reduce production rdf_literal -> rdf_literal_
-- On SECONDS reduce production rdf_literal -> rdf_literal_
-- On SAMPLE reduce production rdf_literal -> rdf_literal_
-- On SAMETERM reduce production rdf_literal -> rdf_literal_
-- On RPAR reduce production rdf_literal -> rdf_literal_
-- On ROUND reduce production rdf_literal -> rdf_literal_
-- On REPLACE reduce production rdf_literal -> rdf_literal_
-- On REGEX reduce production rdf_literal -> rdf_literal_
-- On RBRACKET reduce production rdf_literal -> rdf_literal_
-- On RBRACE reduce production rdf_literal -> rdf_literal_
-- On RAND reduce production rdf_literal -> rdf_literal_
-- On Pname_ns reduce production rdf_literal -> rdf_literal_
-- On Pname_ln reduce production rdf_literal -> rdf_literal_
-- On PLUS reduce production rdf_literal -> rdf_literal_
-- On PIPEPIPE reduce production rdf_literal -> rdf_literal_
-- On ORDER reduce production rdf_literal -> rdf_literal_
-- On OPTIONAL reduce production rdf_literal -> rdf_literal_
-- On OFFSET reduce production rdf_literal -> rdf_literal_
-- On NOW reduce production rdf_literal -> rdf_literal_
-- On NOTEQUAL reduce production rdf_literal -> rdf_literal_
-- On NOT reduce production rdf_literal -> rdf_literal_
-- On NIL reduce production rdf_literal -> rdf_literal_
-- On MONTH reduce production rdf_literal -> rdf_literal_
-- On MINUTES reduce production rdf_literal -> rdf_literal_
-- On MINUS reduce production rdf_literal -> rdf_literal_
-- On MIN reduce production rdf_literal -> rdf_literal_
-- On MD5 reduce production rdf_literal -> rdf_literal_
-- On MAX reduce production rdf_literal -> rdf_literal_
-- On LTE reduce production rdf_literal -> rdf_literal_
-- On LT reduce production rdf_literal -> rdf_literal_
-- On LPAR reduce production rdf_literal -> rdf_literal_
-- On LIMIT reduce production rdf_literal -> rdf_literal_
-- On LCASE reduce production rdf_literal -> rdf_literal_
-- On LBRACKET reduce production rdf_literal -> rdf_literal_
-- On LBRACE reduce production rdf_literal -> rdf_literal_
-- On LANGMATCHES reduce production rdf_literal -> rdf_literal_
-- On LANG reduce production rdf_literal -> rdf_literal_
-- On Iriref_ reduce production rdf_literal -> rdf_literal_
-- On Integer_positive reduce production rdf_literal -> rdf_literal_
-- On Integer_negative reduce production rdf_literal -> rdf_literal_
-- On Integer reduce production rdf_literal -> rdf_literal_
-- On ISURI reduce production rdf_literal -> rdf_literal_
-- On ISNUMERIC reduce production rdf_literal -> rdf_literal_
-- On ISLITERAL reduce production rdf_literal -> rdf_literal_
-- On ISIRI reduce production rdf_literal -> rdf_literal_
-- On ISBLANK reduce production rdf_literal -> rdf_literal_
-- On IRI reduce production rdf_literal -> rdf_literal_
-- On IN reduce production rdf_literal -> rdf_literal_
-- On IF reduce production rdf_literal -> rdf_literal_
-- On HOURS reduce production rdf_literal -> rdf_literal_
-- On HAVING reduce production rdf_literal -> rdf_literal_
-- On HAT reduce production rdf_literal -> rdf_literal_
-- On GTE reduce production rdf_literal -> rdf_literal_
-- On GT reduce production rdf_literal -> rdf_literal_
-- On GROUP_CONCAT reduce production rdf_literal -> rdf_literal_
-- On GRAPH reduce production rdf_literal -> rdf_literal_
-- On FLOOR reduce production rdf_literal -> rdf_literal_
-- On FILTER reduce production rdf_literal -> rdf_literal_
-- On EXISTS reduce production rdf_literal -> rdf_literal_
-- On EQUAL reduce production rdf_literal -> rdf_literal_
-- On EOF reduce production rdf_literal -> rdf_literal_
-- On ENCODE_FOR_URI reduce production rdf_literal -> rdf_literal_
-- On Double_positive reduce production rdf_literal -> rdf_literal_
-- On Double_negative reduce production rdf_literal -> rdf_literal_
-- On Double reduce production rdf_literal -> rdf_literal_
-- On Decimal_positive reduce production rdf_literal -> rdf_literal_
-- On Decimal_negative reduce production rdf_literal -> rdf_literal_
-- On Decimal reduce production rdf_literal -> rdf_literal_
-- On DOT reduce production rdf_literal -> rdf_literal_
-- On DAY reduce production rdf_literal -> rdf_literal_
-- On DATATYPE reduce production rdf_literal -> rdf_literal_
-- On COUNT reduce production rdf_literal -> rdf_literal_
-- On CONTAINS reduce production rdf_literal -> rdf_literal_
-- On CONCAT reduce production rdf_literal -> rdf_literal_
-- On COMMA reduce production rdf_literal -> rdf_literal_
-- On COALESCE reduce production rdf_literal -> rdf_literal_
-- On CEIL reduce production rdf_literal -> rdf_literal_
-- On Boolean reduce production rdf_literal -> rdf_literal_
-- On Blank_node_label reduce production rdf_literal -> rdf_literal_
-- On BOUND reduce production rdf_literal -> rdf_literal_
-- On BNODE reduce production rdf_literal -> rdf_literal_
-- On BIND reduce production rdf_literal -> rdf_literal_
-- On BANG reduce production rdf_literal -> rdf_literal_
-- On AVG reduce production rdf_literal -> rdf_literal_
-- On AS reduce production rdf_literal -> rdf_literal_
-- On ANON reduce production rdf_literal -> rdf_literal_
-- On AMPAMP reduce production rdf_literal -> rdf_literal_
-- On ABS reduce production rdf_literal -> rdf_literal_
-- On A reduce production rdf_literal -> rdf_literal_

State 151:
graph_term -> rdf_literal . [ Var2 Var1 VALUES String_literal SERVICE SEMICOLON RPAR RBRACKET RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer HAT GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT COMMA Boolean Blank_node_label BIND BANG ANON A ]
-- On Var2 reduce production graph_term -> rdf_literal
-- On Var1 reduce production graph_term -> rdf_literal
-- On VALUES reduce production graph_term -> rdf_literal
-- On String_literal reduce production graph_term -> rdf_literal
-- On SERVICE reduce production graph_term -> rdf_literal
-- On SEMICOLON reduce production graph_term -> rdf_literal
-- On RPAR reduce production graph_term -> rdf_literal
-- On RBRACKET reduce production graph_term -> rdf_literal
-- On RBRACE reduce production graph_term -> rdf_literal
-- On Pname_ns reduce production graph_term -> rdf_literal
-- On Pname_ln reduce production graph_term -> rdf_literal
-- On OPTIONAL reduce production graph_term -> rdf_literal
-- On NIL reduce production graph_term -> rdf_literal
-- On MINUS reduce production graph_term -> rdf_literal
-- On LPAR reduce production graph_term -> rdf_literal
-- On LBRACKET reduce production graph_term -> rdf_literal
-- On LBRACE reduce production graph_term -> rdf_literal
-- On Iriref_ reduce production graph_term -> rdf_literal
-- On Integer_positive reduce production graph_term -> rdf_literal
-- On Integer_negative reduce production graph_term -> rdf_literal
-- On Integer reduce production graph_term -> rdf_literal
-- On HAT reduce production graph_term -> rdf_literal
-- On GRAPH reduce production graph_term -> rdf_literal
-- On FILTER reduce production graph_term -> rdf_literal
-- On Double_positive reduce production graph_term -> rdf_literal
-- On Double_negative reduce production graph_term -> rdf_literal
-- On Double reduce production graph_term -> rdf_literal
-- On Decimal_positive reduce production graph_term -> rdf_literal
-- On Decimal_negative reduce production graph_term -> rdf_literal
-- On Decimal reduce production graph_term -> rdf_literal
-- On DOT reduce production graph_term -> rdf_literal
-- On COMMA reduce production graph_term -> rdf_literal
-- On Boolean reduce production graph_term -> rdf_literal
-- On Blank_node_label reduce production graph_term -> rdf_literal
-- On BIND reduce production graph_term -> rdf_literal
-- On BANG reduce production graph_term -> rdf_literal
-- On ANON reduce production graph_term -> rdf_literal
-- On A reduce production graph_term -> rdf_literal

State 152:
separated_nonempty_list(COMMA,object_path) -> object_path . [ VALUES SERVICE SEMICOLON RBRACKET RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER DOT BIND ]
separated_nonempty_list(COMMA,object_path) -> object_path . COMMA separated_nonempty_list(COMMA,object_path) [ VALUES SERVICE SEMICOLON RBRACKET RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER DOT BIND ]
-- On COMMA shift to state 153
-- On VALUES reduce production separated_nonempty_list(COMMA,object_path) -> object_path
-- On SERVICE reduce production separated_nonempty_list(COMMA,object_path) -> object_path
-- On SEMICOLON reduce production separated_nonempty_list(COMMA,object_path) -> object_path
-- On RBRACKET reduce production separated_nonempty_list(COMMA,object_path) -> object_path
-- On RBRACE reduce production separated_nonempty_list(COMMA,object_path) -> object_path
-- On OPTIONAL reduce production separated_nonempty_list(COMMA,object_path) -> object_path
-- On MINUS reduce production separated_nonempty_list(COMMA,object_path) -> object_path
-- On LBRACE reduce production separated_nonempty_list(COMMA,object_path) -> object_path
-- On GRAPH reduce production separated_nonempty_list(COMMA,object_path) -> object_path
-- On FILTER reduce production separated_nonempty_list(COMMA,object_path) -> object_path
-- On DOT reduce production separated_nonempty_list(COMMA,object_path) -> object_path
-- On BIND reduce production separated_nonempty_list(COMMA,object_path) -> object_path

State 153:
separated_nonempty_list(COMMA,object_path) -> object_path COMMA . separated_nonempty_list(COMMA,object_path) [ VALUES SERVICE SEMICOLON RBRACKET RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER DOT BIND ]
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On String_literal shift to state 31
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On NIL shift to state 87
-- On LPAR shift to state 88
-- On LBRACKET shift to state 89
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On Boolean shift to state 139
-- On Blank_node_label shift to state 140
-- On ANON shift to state 141
-- On var_or_term shift to state 142
-- On var shift to state 143
-- On triples_node_path shift to state 144
-- On string shift to state 145
-- On separated_nonempty_list(COMMA,object_path) shift to state 154
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 151
-- On prefixed_name shift to state 97
-- On object_path shift to state 152
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 159
-- On iri shift to state 160
-- On graph_term shift to state 161
-- On graph_node_path shift to state 162
-- On collection_path shift to state 163
-- On boolean_literal shift to state 164
-- On blank_node_property_list_path shift to state 165
-- On blank_node shift to state 166

State 154:
separated_nonempty_list(COMMA,object_path) -> object_path COMMA separated_nonempty_list(COMMA,object_path) . [ VALUES SERVICE SEMICOLON RBRACKET RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER DOT BIND ]
-- On VALUES reduce production separated_nonempty_list(COMMA,object_path) -> object_path COMMA separated_nonempty_list(COMMA,object_path)
-- On SERVICE reduce production separated_nonempty_list(COMMA,object_path) -> object_path COMMA separated_nonempty_list(COMMA,object_path)
-- On SEMICOLON reduce production separated_nonempty_list(COMMA,object_path) -> object_path COMMA separated_nonempty_list(COMMA,object_path)
-- On RBRACKET reduce production separated_nonempty_list(COMMA,object_path) -> object_path COMMA separated_nonempty_list(COMMA,object_path)
-- On RBRACE reduce production separated_nonempty_list(COMMA,object_path) -> object_path COMMA separated_nonempty_list(COMMA,object_path)
-- On OPTIONAL reduce production separated_nonempty_list(COMMA,object_path) -> object_path COMMA separated_nonempty_list(COMMA,object_path)
-- On MINUS reduce production separated_nonempty_list(COMMA,object_path) -> object_path COMMA separated_nonempty_list(COMMA,object_path)
-- On LBRACE reduce production separated_nonempty_list(COMMA,object_path) -> object_path COMMA separated_nonempty_list(COMMA,object_path)
-- On GRAPH reduce production separated_nonempty_list(COMMA,object_path) -> object_path COMMA separated_nonempty_list(COMMA,object_path)
-- On FILTER reduce production separated_nonempty_list(COMMA,object_path) -> object_path COMMA separated_nonempty_list(COMMA,object_path)
-- On DOT reduce production separated_nonempty_list(COMMA,object_path) -> object_path COMMA separated_nonempty_list(COMMA,object_path)
-- On BIND reduce production separated_nonempty_list(COMMA,object_path) -> object_path COMMA separated_nonempty_list(COMMA,object_path)

State 155:
numeric_literal_ -> numeric_literal_unsigned . [ YEAR Var2 Var1 VALUES UUID URI UNDEF UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACKET RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING HAT GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG AS ANON AMPAMP ABS A ]
-- On YEAR reduce production numeric_literal_ -> numeric_literal_unsigned
-- On Var2 reduce production numeric_literal_ -> numeric_literal_unsigned
-- On Var1 reduce production numeric_literal_ -> numeric_literal_unsigned
-- On VALUES reduce production numeric_literal_ -> numeric_literal_unsigned
-- On UUID reduce production numeric_literal_ -> numeric_literal_unsigned
-- On URI reduce production numeric_literal_ -> numeric_literal_unsigned
-- On UNDEF reduce production numeric_literal_ -> numeric_literal_unsigned
-- On UCASE reduce production numeric_literal_ -> numeric_literal_unsigned
-- On TZ reduce production numeric_literal_ -> numeric_literal_unsigned
-- On TIMEZONE reduce production numeric_literal_ -> numeric_literal_unsigned
-- On String_literal reduce production numeric_literal_ -> numeric_literal_unsigned
-- On SUM reduce production numeric_literal_ -> numeric_literal_unsigned
-- On SUBSTR reduce production numeric_literal_ -> numeric_literal_unsigned
-- On STRUUID reduce production numeric_literal_ -> numeric_literal_unsigned
-- On STRSTARTS reduce production numeric_literal_ -> numeric_literal_unsigned
-- On STRLEN reduce production numeric_literal_ -> numeric_literal_unsigned
-- On STRLANG reduce production numeric_literal_ -> numeric_literal_unsigned
-- On STRENDS reduce production numeric_literal_ -> numeric_literal_unsigned
-- On STRDT reduce production numeric_literal_ -> numeric_literal_unsigned
-- On STRBEFORE reduce production numeric_literal_ -> numeric_literal_unsigned
-- On STRAFTER reduce production numeric_literal_ -> numeric_literal_unsigned
-- On STR reduce production numeric_literal_ -> numeric_literal_unsigned
-- On STAR reduce production numeric_literal_ -> numeric_literal_unsigned
-- On SLASH reduce production numeric_literal_ -> numeric_literal_unsigned
-- On SHA512 reduce production numeric_literal_ -> numeric_literal_unsigned
-- On SHA384 reduce production numeric_literal_ -> numeric_literal_unsigned
-- On SHA256 reduce production numeric_literal_ -> numeric_literal_unsigned
-- On SHA1 reduce production numeric_literal_ -> numeric_literal_unsigned
-- On SERVICE reduce production numeric_literal_ -> numeric_literal_unsigned
-- On SEMICOLON reduce production numeric_literal_ -> numeric_literal_unsigned
-- On SECONDS reduce production numeric_literal_ -> numeric_literal_unsigned
-- On SAMPLE reduce production numeric_literal_ -> numeric_literal_unsigned
-- On SAMETERM reduce production numeric_literal_ -> numeric_literal_unsigned
-- On RPAR reduce production numeric_literal_ -> numeric_literal_unsigned
-- On ROUND reduce production numeric_literal_ -> numeric_literal_unsigned
-- On REPLACE reduce production numeric_literal_ -> numeric_literal_unsigned
-- On REGEX reduce production numeric_literal_ -> numeric_literal_unsigned
-- On RBRACKET reduce production numeric_literal_ -> numeric_literal_unsigned
-- On RBRACE reduce production numeric_literal_ -> numeric_literal_unsigned
-- On RAND reduce production numeric_literal_ -> numeric_literal_unsigned
-- On Pname_ns reduce production numeric_literal_ -> numeric_literal_unsigned
-- On Pname_ln reduce production numeric_literal_ -> numeric_literal_unsigned
-- On PLUS reduce production numeric_literal_ -> numeric_literal_unsigned
-- On PIPEPIPE reduce production numeric_literal_ -> numeric_literal_unsigned
-- On ORDER reduce production numeric_literal_ -> numeric_literal_unsigned
-- On OPTIONAL reduce production numeric_literal_ -> numeric_literal_unsigned
-- On OFFSET reduce production numeric_literal_ -> numeric_literal_unsigned
-- On NOW reduce production numeric_literal_ -> numeric_literal_unsigned
-- On NOTEQUAL reduce production numeric_literal_ -> numeric_literal_unsigned
-- On NOT reduce production numeric_literal_ -> numeric_literal_unsigned
-- On NIL reduce production numeric_literal_ -> numeric_literal_unsigned
-- On MONTH reduce production numeric_literal_ -> numeric_literal_unsigned
-- On MINUTES reduce production numeric_literal_ -> numeric_literal_unsigned
-- On MINUS reduce production numeric_literal_ -> numeric_literal_unsigned
-- On MIN reduce production numeric_literal_ -> numeric_literal_unsigned
-- On MD5 reduce production numeric_literal_ -> numeric_literal_unsigned
-- On MAX reduce production numeric_literal_ -> numeric_literal_unsigned
-- On LTE reduce production numeric_literal_ -> numeric_literal_unsigned
-- On LT reduce production numeric_literal_ -> numeric_literal_unsigned
-- On LPAR reduce production numeric_literal_ -> numeric_literal_unsigned
-- On LIMIT reduce production numeric_literal_ -> numeric_literal_unsigned
-- On LCASE reduce production numeric_literal_ -> numeric_literal_unsigned
-- On LBRACKET reduce production numeric_literal_ -> numeric_literal_unsigned
-- On LBRACE reduce production numeric_literal_ -> numeric_literal_unsigned
-- On LANGMATCHES reduce production numeric_literal_ -> numeric_literal_unsigned
-- On LANG reduce production numeric_literal_ -> numeric_literal_unsigned
-- On Iriref_ reduce production numeric_literal_ -> numeric_literal_unsigned
-- On Integer_positive reduce production numeric_literal_ -> numeric_literal_unsigned
-- On Integer_negative reduce production numeric_literal_ -> numeric_literal_unsigned
-- On Integer reduce production numeric_literal_ -> numeric_literal_unsigned
-- On ISURI reduce production numeric_literal_ -> numeric_literal_unsigned
-- On ISNUMERIC reduce production numeric_literal_ -> numeric_literal_unsigned
-- On ISLITERAL reduce production numeric_literal_ -> numeric_literal_unsigned
-- On ISIRI reduce production numeric_literal_ -> numeric_literal_unsigned
-- On ISBLANK reduce production numeric_literal_ -> numeric_literal_unsigned
-- On IRI reduce production numeric_literal_ -> numeric_literal_unsigned
-- On IN reduce production numeric_literal_ -> numeric_literal_unsigned
-- On IF reduce production numeric_literal_ -> numeric_literal_unsigned
-- On HOURS reduce production numeric_literal_ -> numeric_literal_unsigned
-- On HAVING reduce production numeric_literal_ -> numeric_literal_unsigned
-- On HAT reduce production numeric_literal_ -> numeric_literal_unsigned
-- On GTE reduce production numeric_literal_ -> numeric_literal_unsigned
-- On GT reduce production numeric_literal_ -> numeric_literal_unsigned
-- On GROUP_CONCAT reduce production numeric_literal_ -> numeric_literal_unsigned
-- On GRAPH reduce production numeric_literal_ -> numeric_literal_unsigned
-- On FLOOR reduce production numeric_literal_ -> numeric_literal_unsigned
-- On FILTER reduce production numeric_literal_ -> numeric_literal_unsigned
-- On EXISTS reduce production numeric_literal_ -> numeric_literal_unsigned
-- On EQUAL reduce production numeric_literal_ -> numeric_literal_unsigned
-- On EOF reduce production numeric_literal_ -> numeric_literal_unsigned
-- On ENCODE_FOR_URI reduce production numeric_literal_ -> numeric_literal_unsigned
-- On Double_positive reduce production numeric_literal_ -> numeric_literal_unsigned
-- On Double_negative reduce production numeric_literal_ -> numeric_literal_unsigned
-- On Double reduce production numeric_literal_ -> numeric_literal_unsigned
-- On Decimal_positive reduce production numeric_literal_ -> numeric_literal_unsigned
-- On Decimal_negative reduce production numeric_literal_ -> numeric_literal_unsigned
-- On Decimal reduce production numeric_literal_ -> numeric_literal_unsigned
-- On DOT reduce production numeric_literal_ -> numeric_literal_unsigned
-- On DAY reduce production numeric_literal_ -> numeric_literal_unsigned
-- On DATATYPE reduce production numeric_literal_ -> numeric_literal_unsigned
-- On COUNT reduce production numeric_literal_ -> numeric_literal_unsigned
-- On CONTAINS reduce production numeric_literal_ -> numeric_literal_unsigned
-- On CONCAT reduce production numeric_literal_ -> numeric_literal_unsigned
-- On COMMA reduce production numeric_literal_ -> numeric_literal_unsigned
-- On COALESCE reduce production numeric_literal_ -> numeric_literal_unsigned
-- On CEIL reduce production numeric_literal_ -> numeric_literal_unsigned
-- On Boolean reduce production numeric_literal_ -> numeric_literal_unsigned
-- On Blank_node_label reduce production numeric_literal_ -> numeric_literal_unsigned
-- On BOUND reduce production numeric_literal_ -> numeric_literal_unsigned
-- On BNODE reduce production numeric_literal_ -> numeric_literal_unsigned
-- On BIND reduce production numeric_literal_ -> numeric_literal_unsigned
-- On BANG reduce production numeric_literal_ -> numeric_literal_unsigned
-- On AVG reduce production numeric_literal_ -> numeric_literal_unsigned
-- On AS reduce production numeric_literal_ -> numeric_literal_unsigned
-- On ANON reduce production numeric_literal_ -> numeric_literal_unsigned
-- On AMPAMP reduce production numeric_literal_ -> numeric_literal_unsigned
-- On ABS reduce production numeric_literal_ -> numeric_literal_unsigned
-- On A reduce production numeric_literal_ -> numeric_literal_unsigned

State 156:
numeric_literal_ -> numeric_literal_positive . [ YEAR Var2 Var1 VALUES UUID URI UNDEF UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACKET RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING HAT GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG AS ANON AMPAMP ABS A ]
-- On YEAR reduce production numeric_literal_ -> numeric_literal_positive
-- On Var2 reduce production numeric_literal_ -> numeric_literal_positive
-- On Var1 reduce production numeric_literal_ -> numeric_literal_positive
-- On VALUES reduce production numeric_literal_ -> numeric_literal_positive
-- On UUID reduce production numeric_literal_ -> numeric_literal_positive
-- On URI reduce production numeric_literal_ -> numeric_literal_positive
-- On UNDEF reduce production numeric_literal_ -> numeric_literal_positive
-- On UCASE reduce production numeric_literal_ -> numeric_literal_positive
-- On TZ reduce production numeric_literal_ -> numeric_literal_positive
-- On TIMEZONE reduce production numeric_literal_ -> numeric_literal_positive
-- On String_literal reduce production numeric_literal_ -> numeric_literal_positive
-- On SUM reduce production numeric_literal_ -> numeric_literal_positive
-- On SUBSTR reduce production numeric_literal_ -> numeric_literal_positive
-- On STRUUID reduce production numeric_literal_ -> numeric_literal_positive
-- On STRSTARTS reduce production numeric_literal_ -> numeric_literal_positive
-- On STRLEN reduce production numeric_literal_ -> numeric_literal_positive
-- On STRLANG reduce production numeric_literal_ -> numeric_literal_positive
-- On STRENDS reduce production numeric_literal_ -> numeric_literal_positive
-- On STRDT reduce production numeric_literal_ -> numeric_literal_positive
-- On STRBEFORE reduce production numeric_literal_ -> numeric_literal_positive
-- On STRAFTER reduce production numeric_literal_ -> numeric_literal_positive
-- On STR reduce production numeric_literal_ -> numeric_literal_positive
-- On STAR reduce production numeric_literal_ -> numeric_literal_positive
-- On SLASH reduce production numeric_literal_ -> numeric_literal_positive
-- On SHA512 reduce production numeric_literal_ -> numeric_literal_positive
-- On SHA384 reduce production numeric_literal_ -> numeric_literal_positive
-- On SHA256 reduce production numeric_literal_ -> numeric_literal_positive
-- On SHA1 reduce production numeric_literal_ -> numeric_literal_positive
-- On SERVICE reduce production numeric_literal_ -> numeric_literal_positive
-- On SEMICOLON reduce production numeric_literal_ -> numeric_literal_positive
-- On SECONDS reduce production numeric_literal_ -> numeric_literal_positive
-- On SAMPLE reduce production numeric_literal_ -> numeric_literal_positive
-- On SAMETERM reduce production numeric_literal_ -> numeric_literal_positive
-- On RPAR reduce production numeric_literal_ -> numeric_literal_positive
-- On ROUND reduce production numeric_literal_ -> numeric_literal_positive
-- On REPLACE reduce production numeric_literal_ -> numeric_literal_positive
-- On REGEX reduce production numeric_literal_ -> numeric_literal_positive
-- On RBRACKET reduce production numeric_literal_ -> numeric_literal_positive
-- On RBRACE reduce production numeric_literal_ -> numeric_literal_positive
-- On RAND reduce production numeric_literal_ -> numeric_literal_positive
-- On Pname_ns reduce production numeric_literal_ -> numeric_literal_positive
-- On Pname_ln reduce production numeric_literal_ -> numeric_literal_positive
-- On PLUS reduce production numeric_literal_ -> numeric_literal_positive
-- On PIPEPIPE reduce production numeric_literal_ -> numeric_literal_positive
-- On ORDER reduce production numeric_literal_ -> numeric_literal_positive
-- On OPTIONAL reduce production numeric_literal_ -> numeric_literal_positive
-- On OFFSET reduce production numeric_literal_ -> numeric_literal_positive
-- On NOW reduce production numeric_literal_ -> numeric_literal_positive
-- On NOTEQUAL reduce production numeric_literal_ -> numeric_literal_positive
-- On NOT reduce production numeric_literal_ -> numeric_literal_positive
-- On NIL reduce production numeric_literal_ -> numeric_literal_positive
-- On MONTH reduce production numeric_literal_ -> numeric_literal_positive
-- On MINUTES reduce production numeric_literal_ -> numeric_literal_positive
-- On MINUS reduce production numeric_literal_ -> numeric_literal_positive
-- On MIN reduce production numeric_literal_ -> numeric_literal_positive
-- On MD5 reduce production numeric_literal_ -> numeric_literal_positive
-- On MAX reduce production numeric_literal_ -> numeric_literal_positive
-- On LTE reduce production numeric_literal_ -> numeric_literal_positive
-- On LT reduce production numeric_literal_ -> numeric_literal_positive
-- On LPAR reduce production numeric_literal_ -> numeric_literal_positive
-- On LIMIT reduce production numeric_literal_ -> numeric_literal_positive
-- On LCASE reduce production numeric_literal_ -> numeric_literal_positive
-- On LBRACKET reduce production numeric_literal_ -> numeric_literal_positive
-- On LBRACE reduce production numeric_literal_ -> numeric_literal_positive
-- On LANGMATCHES reduce production numeric_literal_ -> numeric_literal_positive
-- On LANG reduce production numeric_literal_ -> numeric_literal_positive
-- On Iriref_ reduce production numeric_literal_ -> numeric_literal_positive
-- On Integer_positive reduce production numeric_literal_ -> numeric_literal_positive
-- On Integer_negative reduce production numeric_literal_ -> numeric_literal_positive
-- On Integer reduce production numeric_literal_ -> numeric_literal_positive
-- On ISURI reduce production numeric_literal_ -> numeric_literal_positive
-- On ISNUMERIC reduce production numeric_literal_ -> numeric_literal_positive
-- On ISLITERAL reduce production numeric_literal_ -> numeric_literal_positive
-- On ISIRI reduce production numeric_literal_ -> numeric_literal_positive
-- On ISBLANK reduce production numeric_literal_ -> numeric_literal_positive
-- On IRI reduce production numeric_literal_ -> numeric_literal_positive
-- On IN reduce production numeric_literal_ -> numeric_literal_positive
-- On IF reduce production numeric_literal_ -> numeric_literal_positive
-- On HOURS reduce production numeric_literal_ -> numeric_literal_positive
-- On HAVING reduce production numeric_literal_ -> numeric_literal_positive
-- On HAT reduce production numeric_literal_ -> numeric_literal_positive
-- On GTE reduce production numeric_literal_ -> numeric_literal_positive
-- On GT reduce production numeric_literal_ -> numeric_literal_positive
-- On GROUP_CONCAT reduce production numeric_literal_ -> numeric_literal_positive
-- On GRAPH reduce production numeric_literal_ -> numeric_literal_positive
-- On FLOOR reduce production numeric_literal_ -> numeric_literal_positive
-- On FILTER reduce production numeric_literal_ -> numeric_literal_positive
-- On EXISTS reduce production numeric_literal_ -> numeric_literal_positive
-- On EQUAL reduce production numeric_literal_ -> numeric_literal_positive
-- On EOF reduce production numeric_literal_ -> numeric_literal_positive
-- On ENCODE_FOR_URI reduce production numeric_literal_ -> numeric_literal_positive
-- On Double_positive reduce production numeric_literal_ -> numeric_literal_positive
-- On Double_negative reduce production numeric_literal_ -> numeric_literal_positive
-- On Double reduce production numeric_literal_ -> numeric_literal_positive
-- On Decimal_positive reduce production numeric_literal_ -> numeric_literal_positive
-- On Decimal_negative reduce production numeric_literal_ -> numeric_literal_positive
-- On Decimal reduce production numeric_literal_ -> numeric_literal_positive
-- On DOT reduce production numeric_literal_ -> numeric_literal_positive
-- On DAY reduce production numeric_literal_ -> numeric_literal_positive
-- On DATATYPE reduce production numeric_literal_ -> numeric_literal_positive
-- On COUNT reduce production numeric_literal_ -> numeric_literal_positive
-- On CONTAINS reduce production numeric_literal_ -> numeric_literal_positive
-- On CONCAT reduce production numeric_literal_ -> numeric_literal_positive
-- On COMMA reduce production numeric_literal_ -> numeric_literal_positive
-- On COALESCE reduce production numeric_literal_ -> numeric_literal_positive
-- On CEIL reduce production numeric_literal_ -> numeric_literal_positive
-- On Boolean reduce production numeric_literal_ -> numeric_literal_positive
-- On Blank_node_label reduce production numeric_literal_ -> numeric_literal_positive
-- On BOUND reduce production numeric_literal_ -> numeric_literal_positive
-- On BNODE reduce production numeric_literal_ -> numeric_literal_positive
-- On BIND reduce production numeric_literal_ -> numeric_literal_positive
-- On BANG reduce production numeric_literal_ -> numeric_literal_positive
-- On AVG reduce production numeric_literal_ -> numeric_literal_positive
-- On AS reduce production numeric_literal_ -> numeric_literal_positive
-- On ANON reduce production numeric_literal_ -> numeric_literal_positive
-- On AMPAMP reduce production numeric_literal_ -> numeric_literal_positive
-- On ABS reduce production numeric_literal_ -> numeric_literal_positive
-- On A reduce production numeric_literal_ -> numeric_literal_positive

State 157:
numeric_literal_ -> numeric_literal_negative . [ YEAR Var2 Var1 VALUES UUID URI UNDEF UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACKET RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING HAT GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG AS ANON AMPAMP ABS A ]
-- On YEAR reduce production numeric_literal_ -> numeric_literal_negative
-- On Var2 reduce production numeric_literal_ -> numeric_literal_negative
-- On Var1 reduce production numeric_literal_ -> numeric_literal_negative
-- On VALUES reduce production numeric_literal_ -> numeric_literal_negative
-- On UUID reduce production numeric_literal_ -> numeric_literal_negative
-- On URI reduce production numeric_literal_ -> numeric_literal_negative
-- On UNDEF reduce production numeric_literal_ -> numeric_literal_negative
-- On UCASE reduce production numeric_literal_ -> numeric_literal_negative
-- On TZ reduce production numeric_literal_ -> numeric_literal_negative
-- On TIMEZONE reduce production numeric_literal_ -> numeric_literal_negative
-- On String_literal reduce production numeric_literal_ -> numeric_literal_negative
-- On SUM reduce production numeric_literal_ -> numeric_literal_negative
-- On SUBSTR reduce production numeric_literal_ -> numeric_literal_negative
-- On STRUUID reduce production numeric_literal_ -> numeric_literal_negative
-- On STRSTARTS reduce production numeric_literal_ -> numeric_literal_negative
-- On STRLEN reduce production numeric_literal_ -> numeric_literal_negative
-- On STRLANG reduce production numeric_literal_ -> numeric_literal_negative
-- On STRENDS reduce production numeric_literal_ -> numeric_literal_negative
-- On STRDT reduce production numeric_literal_ -> numeric_literal_negative
-- On STRBEFORE reduce production numeric_literal_ -> numeric_literal_negative
-- On STRAFTER reduce production numeric_literal_ -> numeric_literal_negative
-- On STR reduce production numeric_literal_ -> numeric_literal_negative
-- On STAR reduce production numeric_literal_ -> numeric_literal_negative
-- On SLASH reduce production numeric_literal_ -> numeric_literal_negative
-- On SHA512 reduce production numeric_literal_ -> numeric_literal_negative
-- On SHA384 reduce production numeric_literal_ -> numeric_literal_negative
-- On SHA256 reduce production numeric_literal_ -> numeric_literal_negative
-- On SHA1 reduce production numeric_literal_ -> numeric_literal_negative
-- On SERVICE reduce production numeric_literal_ -> numeric_literal_negative
-- On SEMICOLON reduce production numeric_literal_ -> numeric_literal_negative
-- On SECONDS reduce production numeric_literal_ -> numeric_literal_negative
-- On SAMPLE reduce production numeric_literal_ -> numeric_literal_negative
-- On SAMETERM reduce production numeric_literal_ -> numeric_literal_negative
-- On RPAR reduce production numeric_literal_ -> numeric_literal_negative
-- On ROUND reduce production numeric_literal_ -> numeric_literal_negative
-- On REPLACE reduce production numeric_literal_ -> numeric_literal_negative
-- On REGEX reduce production numeric_literal_ -> numeric_literal_negative
-- On RBRACKET reduce production numeric_literal_ -> numeric_literal_negative
-- On RBRACE reduce production numeric_literal_ -> numeric_literal_negative
-- On RAND reduce production numeric_literal_ -> numeric_literal_negative
-- On Pname_ns reduce production numeric_literal_ -> numeric_literal_negative
-- On Pname_ln reduce production numeric_literal_ -> numeric_literal_negative
-- On PLUS reduce production numeric_literal_ -> numeric_literal_negative
-- On PIPEPIPE reduce production numeric_literal_ -> numeric_literal_negative
-- On ORDER reduce production numeric_literal_ -> numeric_literal_negative
-- On OPTIONAL reduce production numeric_literal_ -> numeric_literal_negative
-- On OFFSET reduce production numeric_literal_ -> numeric_literal_negative
-- On NOW reduce production numeric_literal_ -> numeric_literal_negative
-- On NOTEQUAL reduce production numeric_literal_ -> numeric_literal_negative
-- On NOT reduce production numeric_literal_ -> numeric_literal_negative
-- On NIL reduce production numeric_literal_ -> numeric_literal_negative
-- On MONTH reduce production numeric_literal_ -> numeric_literal_negative
-- On MINUTES reduce production numeric_literal_ -> numeric_literal_negative
-- On MINUS reduce production numeric_literal_ -> numeric_literal_negative
-- On MIN reduce production numeric_literal_ -> numeric_literal_negative
-- On MD5 reduce production numeric_literal_ -> numeric_literal_negative
-- On MAX reduce production numeric_literal_ -> numeric_literal_negative
-- On LTE reduce production numeric_literal_ -> numeric_literal_negative
-- On LT reduce production numeric_literal_ -> numeric_literal_negative
-- On LPAR reduce production numeric_literal_ -> numeric_literal_negative
-- On LIMIT reduce production numeric_literal_ -> numeric_literal_negative
-- On LCASE reduce production numeric_literal_ -> numeric_literal_negative
-- On LBRACKET reduce production numeric_literal_ -> numeric_literal_negative
-- On LBRACE reduce production numeric_literal_ -> numeric_literal_negative
-- On LANGMATCHES reduce production numeric_literal_ -> numeric_literal_negative
-- On LANG reduce production numeric_literal_ -> numeric_literal_negative
-- On Iriref_ reduce production numeric_literal_ -> numeric_literal_negative
-- On Integer_positive reduce production numeric_literal_ -> numeric_literal_negative
-- On Integer_negative reduce production numeric_literal_ -> numeric_literal_negative
-- On Integer reduce production numeric_literal_ -> numeric_literal_negative
-- On ISURI reduce production numeric_literal_ -> numeric_literal_negative
-- On ISNUMERIC reduce production numeric_literal_ -> numeric_literal_negative
-- On ISLITERAL reduce production numeric_literal_ -> numeric_literal_negative
-- On ISIRI reduce production numeric_literal_ -> numeric_literal_negative
-- On ISBLANK reduce production numeric_literal_ -> numeric_literal_negative
-- On IRI reduce production numeric_literal_ -> numeric_literal_negative
-- On IN reduce production numeric_literal_ -> numeric_literal_negative
-- On IF reduce production numeric_literal_ -> numeric_literal_negative
-- On HOURS reduce production numeric_literal_ -> numeric_literal_negative
-- On HAVING reduce production numeric_literal_ -> numeric_literal_negative
-- On HAT reduce production numeric_literal_ -> numeric_literal_negative
-- On GTE reduce production numeric_literal_ -> numeric_literal_negative
-- On GT reduce production numeric_literal_ -> numeric_literal_negative
-- On GROUP_CONCAT reduce production numeric_literal_ -> numeric_literal_negative
-- On GRAPH reduce production numeric_literal_ -> numeric_literal_negative
-- On FLOOR reduce production numeric_literal_ -> numeric_literal_negative
-- On FILTER reduce production numeric_literal_ -> numeric_literal_negative
-- On EXISTS reduce production numeric_literal_ -> numeric_literal_negative
-- On EQUAL reduce production numeric_literal_ -> numeric_literal_negative
-- On EOF reduce production numeric_literal_ -> numeric_literal_negative
-- On ENCODE_FOR_URI reduce production numeric_literal_ -> numeric_literal_negative
-- On Double_positive reduce production numeric_literal_ -> numeric_literal_negative
-- On Double_negative reduce production numeric_literal_ -> numeric_literal_negative
-- On Double reduce production numeric_literal_ -> numeric_literal_negative
-- On Decimal_positive reduce production numeric_literal_ -> numeric_literal_negative
-- On Decimal_negative reduce production numeric_literal_ -> numeric_literal_negative
-- On Decimal reduce production numeric_literal_ -> numeric_literal_negative
-- On DOT reduce production numeric_literal_ -> numeric_literal_negative
-- On DAY reduce production numeric_literal_ -> numeric_literal_negative
-- On DATATYPE reduce production numeric_literal_ -> numeric_literal_negative
-- On COUNT reduce production numeric_literal_ -> numeric_literal_negative
-- On CONTAINS reduce production numeric_literal_ -> numeric_literal_negative
-- On CONCAT reduce production numeric_literal_ -> numeric_literal_negative
-- On COMMA reduce production numeric_literal_ -> numeric_literal_negative
-- On COALESCE reduce production numeric_literal_ -> numeric_literal_negative
-- On CEIL reduce production numeric_literal_ -> numeric_literal_negative
-- On Boolean reduce production numeric_literal_ -> numeric_literal_negative
-- On Blank_node_label reduce production numeric_literal_ -> numeric_literal_negative
-- On BOUND reduce production numeric_literal_ -> numeric_literal_negative
-- On BNODE reduce production numeric_literal_ -> numeric_literal_negative
-- On BIND reduce production numeric_literal_ -> numeric_literal_negative
-- On BANG reduce production numeric_literal_ -> numeric_literal_negative
-- On AVG reduce production numeric_literal_ -> numeric_literal_negative
-- On AS reduce production numeric_literal_ -> numeric_literal_negative
-- On ANON reduce production numeric_literal_ -> numeric_literal_negative
-- On AMPAMP reduce production numeric_literal_ -> numeric_literal_negative
-- On ABS reduce production numeric_literal_ -> numeric_literal_negative
-- On A reduce production numeric_literal_ -> numeric_literal_negative

State 158:
numeric_literal -> numeric_literal_ . [ YEAR Var2 Var1 VALUES UUID URI UNDEF UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACKET RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING HAT GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG AS ANON AMPAMP ABS A ]
-- On YEAR reduce production numeric_literal -> numeric_literal_
-- On Var2 reduce production numeric_literal -> numeric_literal_
-- On Var1 reduce production numeric_literal -> numeric_literal_
-- On VALUES reduce production numeric_literal -> numeric_literal_
-- On UUID reduce production numeric_literal -> numeric_literal_
-- On URI reduce production numeric_literal -> numeric_literal_
-- On UNDEF reduce production numeric_literal -> numeric_literal_
-- On UCASE reduce production numeric_literal -> numeric_literal_
-- On TZ reduce production numeric_literal -> numeric_literal_
-- On TIMEZONE reduce production numeric_literal -> numeric_literal_
-- On String_literal reduce production numeric_literal -> numeric_literal_
-- On SUM reduce production numeric_literal -> numeric_literal_
-- On SUBSTR reduce production numeric_literal -> numeric_literal_
-- On STRUUID reduce production numeric_literal -> numeric_literal_
-- On STRSTARTS reduce production numeric_literal -> numeric_literal_
-- On STRLEN reduce production numeric_literal -> numeric_literal_
-- On STRLANG reduce production numeric_literal -> numeric_literal_
-- On STRENDS reduce production numeric_literal -> numeric_literal_
-- On STRDT reduce production numeric_literal -> numeric_literal_
-- On STRBEFORE reduce production numeric_literal -> numeric_literal_
-- On STRAFTER reduce production numeric_literal -> numeric_literal_
-- On STR reduce production numeric_literal -> numeric_literal_
-- On STAR reduce production numeric_literal -> numeric_literal_
-- On SLASH reduce production numeric_literal -> numeric_literal_
-- On SHA512 reduce production numeric_literal -> numeric_literal_
-- On SHA384 reduce production numeric_literal -> numeric_literal_
-- On SHA256 reduce production numeric_literal -> numeric_literal_
-- On SHA1 reduce production numeric_literal -> numeric_literal_
-- On SERVICE reduce production numeric_literal -> numeric_literal_
-- On SEMICOLON reduce production numeric_literal -> numeric_literal_
-- On SECONDS reduce production numeric_literal -> numeric_literal_
-- On SAMPLE reduce production numeric_literal -> numeric_literal_
-- On SAMETERM reduce production numeric_literal -> numeric_literal_
-- On RPAR reduce production numeric_literal -> numeric_literal_
-- On ROUND reduce production numeric_literal -> numeric_literal_
-- On REPLACE reduce production numeric_literal -> numeric_literal_
-- On REGEX reduce production numeric_literal -> numeric_literal_
-- On RBRACKET reduce production numeric_literal -> numeric_literal_
-- On RBRACE reduce production numeric_literal -> numeric_literal_
-- On RAND reduce production numeric_literal -> numeric_literal_
-- On Pname_ns reduce production numeric_literal -> numeric_literal_
-- On Pname_ln reduce production numeric_literal -> numeric_literal_
-- On PLUS reduce production numeric_literal -> numeric_literal_
-- On PIPEPIPE reduce production numeric_literal -> numeric_literal_
-- On ORDER reduce production numeric_literal -> numeric_literal_
-- On OPTIONAL reduce production numeric_literal -> numeric_literal_
-- On OFFSET reduce production numeric_literal -> numeric_literal_
-- On NOW reduce production numeric_literal -> numeric_literal_
-- On NOTEQUAL reduce production numeric_literal -> numeric_literal_
-- On NOT reduce production numeric_literal -> numeric_literal_
-- On NIL reduce production numeric_literal -> numeric_literal_
-- On MONTH reduce production numeric_literal -> numeric_literal_
-- On MINUTES reduce production numeric_literal -> numeric_literal_
-- On MINUS reduce production numeric_literal -> numeric_literal_
-- On MIN reduce production numeric_literal -> numeric_literal_
-- On MD5 reduce production numeric_literal -> numeric_literal_
-- On MAX reduce production numeric_literal -> numeric_literal_
-- On LTE reduce production numeric_literal -> numeric_literal_
-- On LT reduce production numeric_literal -> numeric_literal_
-- On LPAR reduce production numeric_literal -> numeric_literal_
-- On LIMIT reduce production numeric_literal -> numeric_literal_
-- On LCASE reduce production numeric_literal -> numeric_literal_
-- On LBRACKET reduce production numeric_literal -> numeric_literal_
-- On LBRACE reduce production numeric_literal -> numeric_literal_
-- On LANGMATCHES reduce production numeric_literal -> numeric_literal_
-- On LANG reduce production numeric_literal -> numeric_literal_
-- On Iriref_ reduce production numeric_literal -> numeric_literal_
-- On Integer_positive reduce production numeric_literal -> numeric_literal_
-- On Integer_negative reduce production numeric_literal -> numeric_literal_
-- On Integer reduce production numeric_literal -> numeric_literal_
-- On ISURI reduce production numeric_literal -> numeric_literal_
-- On ISNUMERIC reduce production numeric_literal -> numeric_literal_
-- On ISLITERAL reduce production numeric_literal -> numeric_literal_
-- On ISIRI reduce production numeric_literal -> numeric_literal_
-- On ISBLANK reduce production numeric_literal -> numeric_literal_
-- On IRI reduce production numeric_literal -> numeric_literal_
-- On IN reduce production numeric_literal -> numeric_literal_
-- On IF reduce production numeric_literal -> numeric_literal_
-- On HOURS reduce production numeric_literal -> numeric_literal_
-- On HAVING reduce production numeric_literal -> numeric_literal_
-- On HAT reduce production numeric_literal -> numeric_literal_
-- On GTE reduce production numeric_literal -> numeric_literal_
-- On GT reduce production numeric_literal -> numeric_literal_
-- On GROUP_CONCAT reduce production numeric_literal -> numeric_literal_
-- On GRAPH reduce production numeric_literal -> numeric_literal_
-- On FLOOR reduce production numeric_literal -> numeric_literal_
-- On FILTER reduce production numeric_literal -> numeric_literal_
-- On EXISTS reduce production numeric_literal -> numeric_literal_
-- On EQUAL reduce production numeric_literal -> numeric_literal_
-- On EOF reduce production numeric_literal -> numeric_literal_
-- On ENCODE_FOR_URI reduce production numeric_literal -> numeric_literal_
-- On Double_positive reduce production numeric_literal -> numeric_literal_
-- On Double_negative reduce production numeric_literal -> numeric_literal_
-- On Double reduce production numeric_literal -> numeric_literal_
-- On Decimal_positive reduce production numeric_literal -> numeric_literal_
-- On Decimal_negative reduce production numeric_literal -> numeric_literal_
-- On Decimal reduce production numeric_literal -> numeric_literal_
-- On DOT reduce production numeric_literal -> numeric_literal_
-- On DAY reduce production numeric_literal -> numeric_literal_
-- On DATATYPE reduce production numeric_literal -> numeric_literal_
-- On COUNT reduce production numeric_literal -> numeric_literal_
-- On CONTAINS reduce production numeric_literal -> numeric_literal_
-- On CONCAT reduce production numeric_literal -> numeric_literal_
-- On COMMA reduce production numeric_literal -> numeric_literal_
-- On COALESCE reduce production numeric_literal -> numeric_literal_
-- On CEIL reduce production numeric_literal -> numeric_literal_
-- On Boolean reduce production numeric_literal -> numeric_literal_
-- On Blank_node_label reduce production numeric_literal -> numeric_literal_
-- On BOUND reduce production numeric_literal -> numeric_literal_
-- On BNODE reduce production numeric_literal -> numeric_literal_
-- On BIND reduce production numeric_literal -> numeric_literal_
-- On BANG reduce production numeric_literal -> numeric_literal_
-- On AVG reduce production numeric_literal -> numeric_literal_
-- On AS reduce production numeric_literal -> numeric_literal_
-- On ANON reduce production numeric_literal -> numeric_literal_
-- On AMPAMP reduce production numeric_literal -> numeric_literal_
-- On ABS reduce production numeric_literal -> numeric_literal_
-- On A reduce production numeric_literal -> numeric_literal_

State 159:
graph_term -> numeric_literal . [ Var2 Var1 VALUES String_literal SERVICE SEMICOLON RPAR RBRACKET RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer HAT GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT COMMA Boolean Blank_node_label BIND BANG ANON A ]
-- On Var2 reduce production graph_term -> numeric_literal
-- On Var1 reduce production graph_term -> numeric_literal
-- On VALUES reduce production graph_term -> numeric_literal
-- On String_literal reduce production graph_term -> numeric_literal
-- On SERVICE reduce production graph_term -> numeric_literal
-- On SEMICOLON reduce production graph_term -> numeric_literal
-- On RPAR reduce production graph_term -> numeric_literal
-- On RBRACKET reduce production graph_term -> numeric_literal
-- On RBRACE reduce production graph_term -> numeric_literal
-- On Pname_ns reduce production graph_term -> numeric_literal
-- On Pname_ln reduce production graph_term -> numeric_literal
-- On OPTIONAL reduce production graph_term -> numeric_literal
-- On NIL reduce production graph_term -> numeric_literal
-- On MINUS reduce production graph_term -> numeric_literal
-- On LPAR reduce production graph_term -> numeric_literal
-- On LBRACKET reduce production graph_term -> numeric_literal
-- On LBRACE reduce production graph_term -> numeric_literal
-- On Iriref_ reduce production graph_term -> numeric_literal
-- On Integer_positive reduce production graph_term -> numeric_literal
-- On Integer_negative reduce production graph_term -> numeric_literal
-- On Integer reduce production graph_term -> numeric_literal
-- On HAT reduce production graph_term -> numeric_literal
-- On GRAPH reduce production graph_term -> numeric_literal
-- On FILTER reduce production graph_term -> numeric_literal
-- On Double_positive reduce production graph_term -> numeric_literal
-- On Double_negative reduce production graph_term -> numeric_literal
-- On Double reduce production graph_term -> numeric_literal
-- On Decimal_positive reduce production graph_term -> numeric_literal
-- On Decimal_negative reduce production graph_term -> numeric_literal
-- On Decimal reduce production graph_term -> numeric_literal
-- On DOT reduce production graph_term -> numeric_literal
-- On COMMA reduce production graph_term -> numeric_literal
-- On Boolean reduce production graph_term -> numeric_literal
-- On Blank_node_label reduce production graph_term -> numeric_literal
-- On BIND reduce production graph_term -> numeric_literal
-- On BANG reduce production graph_term -> numeric_literal
-- On ANON reduce production graph_term -> numeric_literal
-- On A reduce production graph_term -> numeric_literal

State 160:
graph_term -> iri . [ Var2 Var1 VALUES String_literal SERVICE SEMICOLON RPAR RBRACKET RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer HAT GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT COMMA Boolean Blank_node_label BIND BANG ANON A ]
-- On Var2 reduce production graph_term -> iri
-- On Var1 reduce production graph_term -> iri
-- On VALUES reduce production graph_term -> iri
-- On String_literal reduce production graph_term -> iri
-- On SERVICE reduce production graph_term -> iri
-- On SEMICOLON reduce production graph_term -> iri
-- On RPAR reduce production graph_term -> iri
-- On RBRACKET reduce production graph_term -> iri
-- On RBRACE reduce production graph_term -> iri
-- On Pname_ns reduce production graph_term -> iri
-- On Pname_ln reduce production graph_term -> iri
-- On OPTIONAL reduce production graph_term -> iri
-- On NIL reduce production graph_term -> iri
-- On MINUS reduce production graph_term -> iri
-- On LPAR reduce production graph_term -> iri
-- On LBRACKET reduce production graph_term -> iri
-- On LBRACE reduce production graph_term -> iri
-- On Iriref_ reduce production graph_term -> iri
-- On Integer_positive reduce production graph_term -> iri
-- On Integer_negative reduce production graph_term -> iri
-- On Integer reduce production graph_term -> iri
-- On HAT reduce production graph_term -> iri
-- On GRAPH reduce production graph_term -> iri
-- On FILTER reduce production graph_term -> iri
-- On Double_positive reduce production graph_term -> iri
-- On Double_negative reduce production graph_term -> iri
-- On Double reduce production graph_term -> iri
-- On Decimal_positive reduce production graph_term -> iri
-- On Decimal_negative reduce production graph_term -> iri
-- On Decimal reduce production graph_term -> iri
-- On DOT reduce production graph_term -> iri
-- On COMMA reduce production graph_term -> iri
-- On Boolean reduce production graph_term -> iri
-- On Blank_node_label reduce production graph_term -> iri
-- On BIND reduce production graph_term -> iri
-- On BANG reduce production graph_term -> iri
-- On ANON reduce production graph_term -> iri
-- On A reduce production graph_term -> iri

State 161:
var_or_term -> graph_term . [ Var2 Var1 VALUES String_literal SERVICE SEMICOLON RPAR RBRACKET RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer HAT GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT COMMA Boolean Blank_node_label BIND BANG ANON A ]
-- On Var2 reduce production var_or_term -> graph_term
-- On Var1 reduce production var_or_term -> graph_term
-- On VALUES reduce production var_or_term -> graph_term
-- On String_literal reduce production var_or_term -> graph_term
-- On SERVICE reduce production var_or_term -> graph_term
-- On SEMICOLON reduce production var_or_term -> graph_term
-- On RPAR reduce production var_or_term -> graph_term
-- On RBRACKET reduce production var_or_term -> graph_term
-- On RBRACE reduce production var_or_term -> graph_term
-- On Pname_ns reduce production var_or_term -> graph_term
-- On Pname_ln reduce production var_or_term -> graph_term
-- On OPTIONAL reduce production var_or_term -> graph_term
-- On NIL reduce production var_or_term -> graph_term
-- On MINUS reduce production var_or_term -> graph_term
-- On LPAR reduce production var_or_term -> graph_term
-- On LBRACKET reduce production var_or_term -> graph_term
-- On LBRACE reduce production var_or_term -> graph_term
-- On Iriref_ reduce production var_or_term -> graph_term
-- On Integer_positive reduce production var_or_term -> graph_term
-- On Integer_negative reduce production var_or_term -> graph_term
-- On Integer reduce production var_or_term -> graph_term
-- On HAT reduce production var_or_term -> graph_term
-- On GRAPH reduce production var_or_term -> graph_term
-- On FILTER reduce production var_or_term -> graph_term
-- On Double_positive reduce production var_or_term -> graph_term
-- On Double_negative reduce production var_or_term -> graph_term
-- On Double reduce production var_or_term -> graph_term
-- On Decimal_positive reduce production var_or_term -> graph_term
-- On Decimal_negative reduce production var_or_term -> graph_term
-- On Decimal reduce production var_or_term -> graph_term
-- On DOT reduce production var_or_term -> graph_term
-- On COMMA reduce production var_or_term -> graph_term
-- On Boolean reduce production var_or_term -> graph_term
-- On Blank_node_label reduce production var_or_term -> graph_term
-- On BIND reduce production var_or_term -> graph_term
-- On BANG reduce production var_or_term -> graph_term
-- On ANON reduce production var_or_term -> graph_term
-- On A reduce production var_or_term -> graph_term

State 162:
object_path -> graph_node_path . [ VALUES SERVICE SEMICOLON RBRACKET RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER DOT COMMA BIND ]
-- On VALUES reduce production object_path -> graph_node_path
-- On SERVICE reduce production object_path -> graph_node_path
-- On SEMICOLON reduce production object_path -> graph_node_path
-- On RBRACKET reduce production object_path -> graph_node_path
-- On RBRACE reduce production object_path -> graph_node_path
-- On OPTIONAL reduce production object_path -> graph_node_path
-- On MINUS reduce production object_path -> graph_node_path
-- On LBRACE reduce production object_path -> graph_node_path
-- On GRAPH reduce production object_path -> graph_node_path
-- On FILTER reduce production object_path -> graph_node_path
-- On DOT reduce production object_path -> graph_node_path
-- On COMMA reduce production object_path -> graph_node_path
-- On BIND reduce production object_path -> graph_node_path

State 163:
triples_node_path -> collection_path . [ Var2 Var1 VALUES String_literal SERVICE SEMICOLON RPAR RBRACKET RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer HAT GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT COMMA Boolean Blank_node_label BIND BANG ANON A ]
-- On Var2 reduce production triples_node_path -> collection_path
-- On Var1 reduce production triples_node_path -> collection_path
-- On VALUES reduce production triples_node_path -> collection_path
-- On String_literal reduce production triples_node_path -> collection_path
-- On SERVICE reduce production triples_node_path -> collection_path
-- On SEMICOLON reduce production triples_node_path -> collection_path
-- On RPAR reduce production triples_node_path -> collection_path
-- On RBRACKET reduce production triples_node_path -> collection_path
-- On RBRACE reduce production triples_node_path -> collection_path
-- On Pname_ns reduce production triples_node_path -> collection_path
-- On Pname_ln reduce production triples_node_path -> collection_path
-- On OPTIONAL reduce production triples_node_path -> collection_path
-- On NIL reduce production triples_node_path -> collection_path
-- On MINUS reduce production triples_node_path -> collection_path
-- On LPAR reduce production triples_node_path -> collection_path
-- On LBRACKET reduce production triples_node_path -> collection_path
-- On LBRACE reduce production triples_node_path -> collection_path
-- On Iriref_ reduce production triples_node_path -> collection_path
-- On Integer_positive reduce production triples_node_path -> collection_path
-- On Integer_negative reduce production triples_node_path -> collection_path
-- On Integer reduce production triples_node_path -> collection_path
-- On HAT reduce production triples_node_path -> collection_path
-- On GRAPH reduce production triples_node_path -> collection_path
-- On FILTER reduce production triples_node_path -> collection_path
-- On Double_positive reduce production triples_node_path -> collection_path
-- On Double_negative reduce production triples_node_path -> collection_path
-- On Double reduce production triples_node_path -> collection_path
-- On Decimal_positive reduce production triples_node_path -> collection_path
-- On Decimal_negative reduce production triples_node_path -> collection_path
-- On Decimal reduce production triples_node_path -> collection_path
-- On DOT reduce production triples_node_path -> collection_path
-- On COMMA reduce production triples_node_path -> collection_path
-- On Boolean reduce production triples_node_path -> collection_path
-- On Blank_node_label reduce production triples_node_path -> collection_path
-- On BIND reduce production triples_node_path -> collection_path
-- On BANG reduce production triples_node_path -> collection_path
-- On ANON reduce production triples_node_path -> collection_path
-- On A reduce production triples_node_path -> collection_path

State 164:
graph_term -> boolean_literal . [ Var2 Var1 VALUES String_literal SERVICE SEMICOLON RPAR RBRACKET RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer HAT GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT COMMA Boolean Blank_node_label BIND BANG ANON A ]
-- On Var2 reduce production graph_term -> boolean_literal
-- On Var1 reduce production graph_term -> boolean_literal
-- On VALUES reduce production graph_term -> boolean_literal
-- On String_literal reduce production graph_term -> boolean_literal
-- On SERVICE reduce production graph_term -> boolean_literal
-- On SEMICOLON reduce production graph_term -> boolean_literal
-- On RPAR reduce production graph_term -> boolean_literal
-- On RBRACKET reduce production graph_term -> boolean_literal
-- On RBRACE reduce production graph_term -> boolean_literal
-- On Pname_ns reduce production graph_term -> boolean_literal
-- On Pname_ln reduce production graph_term -> boolean_literal
-- On OPTIONAL reduce production graph_term -> boolean_literal
-- On NIL reduce production graph_term -> boolean_literal
-- On MINUS reduce production graph_term -> boolean_literal
-- On LPAR reduce production graph_term -> boolean_literal
-- On LBRACKET reduce production graph_term -> boolean_literal
-- On LBRACE reduce production graph_term -> boolean_literal
-- On Iriref_ reduce production graph_term -> boolean_literal
-- On Integer_positive reduce production graph_term -> boolean_literal
-- On Integer_negative reduce production graph_term -> boolean_literal
-- On Integer reduce production graph_term -> boolean_literal
-- On HAT reduce production graph_term -> boolean_literal
-- On GRAPH reduce production graph_term -> boolean_literal
-- On FILTER reduce production graph_term -> boolean_literal
-- On Double_positive reduce production graph_term -> boolean_literal
-- On Double_negative reduce production graph_term -> boolean_literal
-- On Double reduce production graph_term -> boolean_literal
-- On Decimal_positive reduce production graph_term -> boolean_literal
-- On Decimal_negative reduce production graph_term -> boolean_literal
-- On Decimal reduce production graph_term -> boolean_literal
-- On DOT reduce production graph_term -> boolean_literal
-- On COMMA reduce production graph_term -> boolean_literal
-- On Boolean reduce production graph_term -> boolean_literal
-- On Blank_node_label reduce production graph_term -> boolean_literal
-- On BIND reduce production graph_term -> boolean_literal
-- On BANG reduce production graph_term -> boolean_literal
-- On ANON reduce production graph_term -> boolean_literal
-- On A reduce production graph_term -> boolean_literal

State 165:
triples_node_path -> blank_node_property_list_path . [ Var2 Var1 VALUES String_literal SERVICE SEMICOLON RPAR RBRACKET RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer HAT GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT COMMA Boolean Blank_node_label BIND BANG ANON A ]
-- On Var2 reduce production triples_node_path -> blank_node_property_list_path
-- On Var1 reduce production triples_node_path -> blank_node_property_list_path
-- On VALUES reduce production triples_node_path -> blank_node_property_list_path
-- On String_literal reduce production triples_node_path -> blank_node_property_list_path
-- On SERVICE reduce production triples_node_path -> blank_node_property_list_path
-- On SEMICOLON reduce production triples_node_path -> blank_node_property_list_path
-- On RPAR reduce production triples_node_path -> blank_node_property_list_path
-- On RBRACKET reduce production triples_node_path -> blank_node_property_list_path
-- On RBRACE reduce production triples_node_path -> blank_node_property_list_path
-- On Pname_ns reduce production triples_node_path -> blank_node_property_list_path
-- On Pname_ln reduce production triples_node_path -> blank_node_property_list_path
-- On OPTIONAL reduce production triples_node_path -> blank_node_property_list_path
-- On NIL reduce production triples_node_path -> blank_node_property_list_path
-- On MINUS reduce production triples_node_path -> blank_node_property_list_path
-- On LPAR reduce production triples_node_path -> blank_node_property_list_path
-- On LBRACKET reduce production triples_node_path -> blank_node_property_list_path
-- On LBRACE reduce production triples_node_path -> blank_node_property_list_path
-- On Iriref_ reduce production triples_node_path -> blank_node_property_list_path
-- On Integer_positive reduce production triples_node_path -> blank_node_property_list_path
-- On Integer_negative reduce production triples_node_path -> blank_node_property_list_path
-- On Integer reduce production triples_node_path -> blank_node_property_list_path
-- On HAT reduce production triples_node_path -> blank_node_property_list_path
-- On GRAPH reduce production triples_node_path -> blank_node_property_list_path
-- On FILTER reduce production triples_node_path -> blank_node_property_list_path
-- On Double_positive reduce production triples_node_path -> blank_node_property_list_path
-- On Double_negative reduce production triples_node_path -> blank_node_property_list_path
-- On Double reduce production triples_node_path -> blank_node_property_list_path
-- On Decimal_positive reduce production triples_node_path -> blank_node_property_list_path
-- On Decimal_negative reduce production triples_node_path -> blank_node_property_list_path
-- On Decimal reduce production triples_node_path -> blank_node_property_list_path
-- On DOT reduce production triples_node_path -> blank_node_property_list_path
-- On COMMA reduce production triples_node_path -> blank_node_property_list_path
-- On Boolean reduce production triples_node_path -> blank_node_property_list_path
-- On Blank_node_label reduce production triples_node_path -> blank_node_property_list_path
-- On BIND reduce production triples_node_path -> blank_node_property_list_path
-- On BANG reduce production triples_node_path -> blank_node_property_list_path
-- On ANON reduce production triples_node_path -> blank_node_property_list_path
-- On A reduce production triples_node_path -> blank_node_property_list_path

State 166:
graph_term -> blank_node . [ Var2 Var1 VALUES String_literal SERVICE SEMICOLON RPAR RBRACKET RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer HAT GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT COMMA Boolean Blank_node_label BIND BANG ANON A ]
-- On Var2 reduce production graph_term -> blank_node
-- On Var1 reduce production graph_term -> blank_node
-- On VALUES reduce production graph_term -> blank_node
-- On String_literal reduce production graph_term -> blank_node
-- On SERVICE reduce production graph_term -> blank_node
-- On SEMICOLON reduce production graph_term -> blank_node
-- On RPAR reduce production graph_term -> blank_node
-- On RBRACKET reduce production graph_term -> blank_node
-- On RBRACE reduce production graph_term -> blank_node
-- On Pname_ns reduce production graph_term -> blank_node
-- On Pname_ln reduce production graph_term -> blank_node
-- On OPTIONAL reduce production graph_term -> blank_node
-- On NIL reduce production graph_term -> blank_node
-- On MINUS reduce production graph_term -> blank_node
-- On LPAR reduce production graph_term -> blank_node
-- On LBRACKET reduce production graph_term -> blank_node
-- On LBRACE reduce production graph_term -> blank_node
-- On Iriref_ reduce production graph_term -> blank_node
-- On Integer_positive reduce production graph_term -> blank_node
-- On Integer_negative reduce production graph_term -> blank_node
-- On Integer reduce production graph_term -> blank_node
-- On HAT reduce production graph_term -> blank_node
-- On GRAPH reduce production graph_term -> blank_node
-- On FILTER reduce production graph_term -> blank_node
-- On Double_positive reduce production graph_term -> blank_node
-- On Double_negative reduce production graph_term -> blank_node
-- On Double reduce production graph_term -> blank_node
-- On Decimal_positive reduce production graph_term -> blank_node
-- On Decimal_negative reduce production graph_term -> blank_node
-- On Decimal reduce production graph_term -> blank_node
-- On DOT reduce production graph_term -> blank_node
-- On COMMA reduce production graph_term -> blank_node
-- On Boolean reduce production graph_term -> blank_node
-- On Blank_node_label reduce production graph_term -> blank_node
-- On BIND reduce production graph_term -> blank_node
-- On BANG reduce production graph_term -> blank_node
-- On ANON reduce production graph_term -> blank_node
-- On A reduce production graph_term -> blank_node

State 167:
property_list_path_not_empty -> verb_path_or_simple object_list_path . list(verbp_object_list_l) [ VALUES SERVICE RBRACKET RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER DOT BIND ]
-- On SEMICOLON shift to state 168
-- On verbp_object_list_l shift to state 205
-- On list(verbp_object_list_l) shift to state 207
-- On VALUES reduce production list(verbp_object_list_l) ->
-- On SERVICE reduce production list(verbp_object_list_l) ->
-- On RBRACKET reduce production list(verbp_object_list_l) ->
-- On RBRACE reduce production list(verbp_object_list_l) ->
-- On OPTIONAL reduce production list(verbp_object_list_l) ->
-- On MINUS reduce production list(verbp_object_list_l) ->
-- On LBRACE reduce production list(verbp_object_list_l) ->
-- On GRAPH reduce production list(verbp_object_list_l) ->
-- On FILTER reduce production list(verbp_object_list_l) ->
-- On DOT reduce production list(verbp_object_list_l) ->
-- On BIND reduce production list(verbp_object_list_l) ->

State 168:
verbp_object_list_l -> SEMICOLON . option(verbp_object_list) [ VALUES SERVICE SEMICOLON RBRACKET RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER DOT BIND ]
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On LPAR shift to state 90
-- On Iriref_ shift to state 91
-- On HAT shift to state 92
-- On BANG shift to state 93
-- On A shift to state 108
-- On verbp_object_list shift to state 169
-- On verb_path_or_simple shift to state 170
-- On var shift to state 202
-- On separated_nonempty_list(SLASH,path_elt_or_inverse) shift to state 117
-- On separated_nonempty_list(PIPE,path_sequence) shift to state 118
-- On prefixed_name shift to state 97
-- On path_sequence shift to state 119
-- On path_primary shift to state 109
-- On path_elt_or_inverse shift to state 122
-- On path_elt shift to state 125
-- On path_alternative shift to state 126
-- On path shift to state 203
-- On option(verbp_object_list) shift to state 204
-- On iri shift to state 116
-- On VALUES reduce production option(verbp_object_list) ->
-- On SERVICE reduce production option(verbp_object_list) ->
-- On SEMICOLON reduce production option(verbp_object_list) ->
-- On RBRACKET reduce production option(verbp_object_list) ->
-- On RBRACE reduce production option(verbp_object_list) ->
-- On OPTIONAL reduce production option(verbp_object_list) ->
-- On MINUS reduce production option(verbp_object_list) ->
-- On LBRACE reduce production option(verbp_object_list) ->
-- On GRAPH reduce production option(verbp_object_list) ->
-- On FILTER reduce production option(verbp_object_list) ->
-- On DOT reduce production option(verbp_object_list) ->
-- On BIND reduce production option(verbp_object_list) ->

State 169:
option(verbp_object_list) -> verbp_object_list . [ VALUES SERVICE SEMICOLON RBRACKET RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER DOT BIND ]
-- On VALUES reduce production option(verbp_object_list) -> verbp_object_list
-- On SERVICE reduce production option(verbp_object_list) -> verbp_object_list
-- On SEMICOLON reduce production option(verbp_object_list) -> verbp_object_list
-- On RBRACKET reduce production option(verbp_object_list) -> verbp_object_list
-- On RBRACE reduce production option(verbp_object_list) -> verbp_object_list
-- On OPTIONAL reduce production option(verbp_object_list) -> verbp_object_list
-- On MINUS reduce production option(verbp_object_list) -> verbp_object_list
-- On LBRACE reduce production option(verbp_object_list) -> verbp_object_list
-- On GRAPH reduce production option(verbp_object_list) -> verbp_object_list
-- On FILTER reduce production option(verbp_object_list) -> verbp_object_list
-- On DOT reduce production option(verbp_object_list) -> verbp_object_list
-- On BIND reduce production option(verbp_object_list) -> verbp_object_list

State 170:
verbp_object_list -> verb_path_or_simple . object_list [ VALUES SERVICE SEMICOLON RBRACKET RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER DOT BIND ]
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On String_literal shift to state 31
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On NIL shift to state 87
-- On LPAR shift to state 171
-- On LBRACKET shift to state 172
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On Boolean shift to state 139
-- On Blank_node_label shift to state 140
-- On ANON shift to state 141
-- On var_or_term shift to state 178
-- On var shift to state 143
-- On triples_node shift to state 179
-- On string shift to state 145
-- On separated_nonempty_list(COMMA,object_) shift to state 180
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 151
-- On prefixed_name shift to state 97
-- On object_list shift to state 201
-- On object_ shift to state 182
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 159
-- On iri shift to state 160
-- On graph_term shift to state 161
-- On graph_node shift to state 185
-- On collection shift to state 186
-- On boolean_literal shift to state 164
-- On blank_node_property_list shift to state 187
-- On blank_node shift to state 166

State 171:
collection -> LPAR . nonempty_list(graph_node) RPAR [ Var2 Var1 VALUES String_literal SERVICE SEMICOLON RPAR RBRACKET RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT COMMA Boolean Blank_node_label BIND ANON A ]
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On String_literal shift to state 31
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On NIL shift to state 87
-- On LPAR shift to state 171
-- On LBRACKET shift to state 172
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On Boolean shift to state 139
-- On Blank_node_label shift to state 140
-- On ANON shift to state 141
-- On var_or_term shift to state 178
-- On var shift to state 143
-- On triples_node shift to state 179
-- On string shift to state 145
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 151
-- On prefixed_name shift to state 97
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 159
-- On nonempty_list(graph_node) shift to state 197
-- On iri shift to state 160
-- On graph_term shift to state 161
-- On graph_node shift to state 199
-- On collection shift to state 186
-- On boolean_literal shift to state 164
-- On blank_node_property_list shift to state 187
-- On blank_node shift to state 166

State 172:
blank_node_property_list -> LBRACKET . property_list_not_empty RBRACKET [ Var2 Var1 VALUES String_literal SERVICE SEMICOLON RPAR RBRACKET RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT COMMA Boolean Blank_node_label BIND ANON A ]
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On Iriref_ shift to state 91
-- On A shift to state 173
-- On verb_object_list shift to state 174
-- On verb shift to state 177
-- On var_or_iri shift to state 188
-- On var shift to state 189
-- On property_list_not_empty shift to state 195
-- On prefixed_name shift to state 97
-- On iri shift to state 191

State 173:
verb -> A . [ Var2 Var1 String_literal Pname_ns Pname_ln NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
-- On Var2 reduce production verb -> A
-- On Var1 reduce production verb -> A
-- On String_literal reduce production verb -> A
-- On Pname_ns reduce production verb -> A
-- On Pname_ln reduce production verb -> A
-- On NIL reduce production verb -> A
-- On LPAR reduce production verb -> A
-- On LBRACKET reduce production verb -> A
-- On Iriref_ reduce production verb -> A
-- On Integer_positive reduce production verb -> A
-- On Integer_negative reduce production verb -> A
-- On Integer reduce production verb -> A
-- On Double_positive reduce production verb -> A
-- On Double_negative reduce production verb -> A
-- On Double reduce production verb -> A
-- On Decimal_positive reduce production verb -> A
-- On Decimal_negative reduce production verb -> A
-- On Decimal reduce production verb -> A
-- On Boolean reduce production verb -> A
-- On Blank_node_label reduce production verb -> A
-- On ANON reduce production verb -> A

State 174:
property_list_not_empty -> verb_object_list . list(verb_object_list_l) [ RBRACKET RBRACE DOT ]
-- On SEMICOLON shift to state 175
-- On verb_object_list_l shift to state 192
-- On list(verb_object_list_l) shift to state 194
-- On RBRACKET reduce production list(verb_object_list_l) ->
-- On RBRACE reduce production list(verb_object_list_l) ->
-- On DOT reduce production list(verb_object_list_l) ->

State 175:
verb_object_list_l -> SEMICOLON . option(verb_object_list) [ SEMICOLON RBRACKET RBRACE DOT ]
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On Iriref_ shift to state 91
-- On A shift to state 173
-- On verb_object_list shift to state 176
-- On verb shift to state 177
-- On var_or_iri shift to state 188
-- On var shift to state 189
-- On prefixed_name shift to state 97
-- On option(verb_object_list) shift to state 190
-- On iri shift to state 191
-- On SEMICOLON reduce production option(verb_object_list) ->
-- On RBRACKET reduce production option(verb_object_list) ->
-- On RBRACE reduce production option(verb_object_list) ->
-- On DOT reduce production option(verb_object_list) ->

State 176:
option(verb_object_list) -> verb_object_list . [ SEMICOLON RBRACKET RBRACE DOT ]
-- On SEMICOLON reduce production option(verb_object_list) -> verb_object_list
-- On RBRACKET reduce production option(verb_object_list) -> verb_object_list
-- On RBRACE reduce production option(verb_object_list) -> verb_object_list
-- On DOT reduce production option(verb_object_list) -> verb_object_list

State 177:
verb_object_list -> verb . object_list [ SEMICOLON RBRACKET RBRACE DOT ]
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On String_literal shift to state 31
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On NIL shift to state 87
-- On LPAR shift to state 171
-- On LBRACKET shift to state 172
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On Boolean shift to state 139
-- On Blank_node_label shift to state 140
-- On ANON shift to state 141
-- On var_or_term shift to state 178
-- On var shift to state 143
-- On triples_node shift to state 179
-- On string shift to state 145
-- On separated_nonempty_list(COMMA,object_) shift to state 180
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 151
-- On prefixed_name shift to state 97
-- On object_list shift to state 181
-- On object_ shift to state 182
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 159
-- On iri shift to state 160
-- On graph_term shift to state 161
-- On graph_node shift to state 185
-- On collection shift to state 186
-- On boolean_literal shift to state 164
-- On blank_node_property_list shift to state 187
-- On blank_node shift to state 166

State 178:
graph_node -> var_or_term . [ Var2 Var1 VALUES String_literal SERVICE SEMICOLON RPAR RBRACKET RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT COMMA Boolean Blank_node_label BIND ANON ]
-- On Var2 reduce production graph_node -> var_or_term
-- On Var1 reduce production graph_node -> var_or_term
-- On VALUES reduce production graph_node -> var_or_term
-- On String_literal reduce production graph_node -> var_or_term
-- On SERVICE reduce production graph_node -> var_or_term
-- On SEMICOLON reduce production graph_node -> var_or_term
-- On RPAR reduce production graph_node -> var_or_term
-- On RBRACKET reduce production graph_node -> var_or_term
-- On RBRACE reduce production graph_node -> var_or_term
-- On Pname_ns reduce production graph_node -> var_or_term
-- On Pname_ln reduce production graph_node -> var_or_term
-- On OPTIONAL reduce production graph_node -> var_or_term
-- On NIL reduce production graph_node -> var_or_term
-- On MINUS reduce production graph_node -> var_or_term
-- On LPAR reduce production graph_node -> var_or_term
-- On LBRACKET reduce production graph_node -> var_or_term
-- On LBRACE reduce production graph_node -> var_or_term
-- On Iriref_ reduce production graph_node -> var_or_term
-- On Integer_positive reduce production graph_node -> var_or_term
-- On Integer_negative reduce production graph_node -> var_or_term
-- On Integer reduce production graph_node -> var_or_term
-- On GRAPH reduce production graph_node -> var_or_term
-- On FILTER reduce production graph_node -> var_or_term
-- On Double_positive reduce production graph_node -> var_or_term
-- On Double_negative reduce production graph_node -> var_or_term
-- On Double reduce production graph_node -> var_or_term
-- On Decimal_positive reduce production graph_node -> var_or_term
-- On Decimal_negative reduce production graph_node -> var_or_term
-- On Decimal reduce production graph_node -> var_or_term
-- On DOT reduce production graph_node -> var_or_term
-- On COMMA reduce production graph_node -> var_or_term
-- On Boolean reduce production graph_node -> var_or_term
-- On Blank_node_label reduce production graph_node -> var_or_term
-- On BIND reduce production graph_node -> var_or_term
-- On ANON reduce production graph_node -> var_or_term

State 179:
graph_node -> triples_node . [ Var2 Var1 VALUES String_literal SERVICE SEMICOLON RPAR RBRACKET RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT COMMA Boolean Blank_node_label BIND ANON ]
-- On Var2 reduce production graph_node -> triples_node
-- On Var1 reduce production graph_node -> triples_node
-- On VALUES reduce production graph_node -> triples_node
-- On String_literal reduce production graph_node -> triples_node
-- On SERVICE reduce production graph_node -> triples_node
-- On SEMICOLON reduce production graph_node -> triples_node
-- On RPAR reduce production graph_node -> triples_node
-- On RBRACKET reduce production graph_node -> triples_node
-- On RBRACE reduce production graph_node -> triples_node
-- On Pname_ns reduce production graph_node -> triples_node
-- On Pname_ln reduce production graph_node -> triples_node
-- On OPTIONAL reduce production graph_node -> triples_node
-- On NIL reduce production graph_node -> triples_node
-- On MINUS reduce production graph_node -> triples_node
-- On LPAR reduce production graph_node -> triples_node
-- On LBRACKET reduce production graph_node -> triples_node
-- On LBRACE reduce production graph_node -> triples_node
-- On Iriref_ reduce production graph_node -> triples_node
-- On Integer_positive reduce production graph_node -> triples_node
-- On Integer_negative reduce production graph_node -> triples_node
-- On Integer reduce production graph_node -> triples_node
-- On GRAPH reduce production graph_node -> triples_node
-- On FILTER reduce production graph_node -> triples_node
-- On Double_positive reduce production graph_node -> triples_node
-- On Double_negative reduce production graph_node -> triples_node
-- On Double reduce production graph_node -> triples_node
-- On Decimal_positive reduce production graph_node -> triples_node
-- On Decimal_negative reduce production graph_node -> triples_node
-- On Decimal reduce production graph_node -> triples_node
-- On DOT reduce production graph_node -> triples_node
-- On COMMA reduce production graph_node -> triples_node
-- On Boolean reduce production graph_node -> triples_node
-- On Blank_node_label reduce production graph_node -> triples_node
-- On BIND reduce production graph_node -> triples_node
-- On ANON reduce production graph_node -> triples_node

State 180:
object_list -> separated_nonempty_list(COMMA,object_) . [ VALUES SERVICE SEMICOLON RBRACKET RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER DOT BIND ]
-- On VALUES reduce production object_list -> separated_nonempty_list(COMMA,object_)
-- On SERVICE reduce production object_list -> separated_nonempty_list(COMMA,object_)
-- On SEMICOLON reduce production object_list -> separated_nonempty_list(COMMA,object_)
-- On RBRACKET reduce production object_list -> separated_nonempty_list(COMMA,object_)
-- On RBRACE reduce production object_list -> separated_nonempty_list(COMMA,object_)
-- On OPTIONAL reduce production object_list -> separated_nonempty_list(COMMA,object_)
-- On MINUS reduce production object_list -> separated_nonempty_list(COMMA,object_)
-- On LBRACE reduce production object_list -> separated_nonempty_list(COMMA,object_)
-- On GRAPH reduce production object_list -> separated_nonempty_list(COMMA,object_)
-- On FILTER reduce production object_list -> separated_nonempty_list(COMMA,object_)
-- On DOT reduce production object_list -> separated_nonempty_list(COMMA,object_)
-- On BIND reduce production object_list -> separated_nonempty_list(COMMA,object_)

State 181:
verb_object_list -> verb object_list . [ SEMICOLON RBRACKET RBRACE DOT ]
-- On SEMICOLON reduce production verb_object_list -> verb object_list
-- On RBRACKET reduce production verb_object_list -> verb object_list
-- On RBRACE reduce production verb_object_list -> verb object_list
-- On DOT reduce production verb_object_list -> verb object_list

State 182:
separated_nonempty_list(COMMA,object_) -> object_ . [ VALUES SERVICE SEMICOLON RBRACKET RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER DOT BIND ]
separated_nonempty_list(COMMA,object_) -> object_ . COMMA separated_nonempty_list(COMMA,object_) [ VALUES SERVICE SEMICOLON RBRACKET RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER DOT BIND ]
-- On COMMA shift to state 183
-- On VALUES reduce production separated_nonempty_list(COMMA,object_) -> object_
-- On SERVICE reduce production separated_nonempty_list(COMMA,object_) -> object_
-- On SEMICOLON reduce production separated_nonempty_list(COMMA,object_) -> object_
-- On RBRACKET reduce production separated_nonempty_list(COMMA,object_) -> object_
-- On RBRACE reduce production separated_nonempty_list(COMMA,object_) -> object_
-- On OPTIONAL reduce production separated_nonempty_list(COMMA,object_) -> object_
-- On MINUS reduce production separated_nonempty_list(COMMA,object_) -> object_
-- On LBRACE reduce production separated_nonempty_list(COMMA,object_) -> object_
-- On GRAPH reduce production separated_nonempty_list(COMMA,object_) -> object_
-- On FILTER reduce production separated_nonempty_list(COMMA,object_) -> object_
-- On DOT reduce production separated_nonempty_list(COMMA,object_) -> object_
-- On BIND reduce production separated_nonempty_list(COMMA,object_) -> object_

State 183:
separated_nonempty_list(COMMA,object_) -> object_ COMMA . separated_nonempty_list(COMMA,object_) [ VALUES SERVICE SEMICOLON RBRACKET RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER DOT BIND ]
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On String_literal shift to state 31
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On NIL shift to state 87
-- On LPAR shift to state 171
-- On LBRACKET shift to state 172
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On Boolean shift to state 139
-- On Blank_node_label shift to state 140
-- On ANON shift to state 141
-- On var_or_term shift to state 178
-- On var shift to state 143
-- On triples_node shift to state 179
-- On string shift to state 145
-- On separated_nonempty_list(COMMA,object_) shift to state 184
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 151
-- On prefixed_name shift to state 97
-- On object_ shift to state 182
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 159
-- On iri shift to state 160
-- On graph_term shift to state 161
-- On graph_node shift to state 185
-- On collection shift to state 186
-- On boolean_literal shift to state 164
-- On blank_node_property_list shift to state 187
-- On blank_node shift to state 166

State 184:
separated_nonempty_list(COMMA,object_) -> object_ COMMA separated_nonempty_list(COMMA,object_) . [ VALUES SERVICE SEMICOLON RBRACKET RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER DOT BIND ]
-- On VALUES reduce production separated_nonempty_list(COMMA,object_) -> object_ COMMA separated_nonempty_list(COMMA,object_)
-- On SERVICE reduce production separated_nonempty_list(COMMA,object_) -> object_ COMMA separated_nonempty_list(COMMA,object_)
-- On SEMICOLON reduce production separated_nonempty_list(COMMA,object_) -> object_ COMMA separated_nonempty_list(COMMA,object_)
-- On RBRACKET reduce production separated_nonempty_list(COMMA,object_) -> object_ COMMA separated_nonempty_list(COMMA,object_)
-- On RBRACE reduce production separated_nonempty_list(COMMA,object_) -> object_ COMMA separated_nonempty_list(COMMA,object_)
-- On OPTIONAL reduce production separated_nonempty_list(COMMA,object_) -> object_ COMMA separated_nonempty_list(COMMA,object_)
-- On MINUS reduce production separated_nonempty_list(COMMA,object_) -> object_ COMMA separated_nonempty_list(COMMA,object_)
-- On LBRACE reduce production separated_nonempty_list(COMMA,object_) -> object_ COMMA separated_nonempty_list(COMMA,object_)
-- On GRAPH reduce production separated_nonempty_list(COMMA,object_) -> object_ COMMA separated_nonempty_list(COMMA,object_)
-- On FILTER reduce production separated_nonempty_list(COMMA,object_) -> object_ COMMA separated_nonempty_list(COMMA,object_)
-- On DOT reduce production separated_nonempty_list(COMMA,object_) -> object_ COMMA separated_nonempty_list(COMMA,object_)
-- On BIND reduce production separated_nonempty_list(COMMA,object_) -> object_ COMMA separated_nonempty_list(COMMA,object_)

State 185:
object_ -> graph_node . [ VALUES SERVICE SEMICOLON RBRACKET RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER DOT COMMA BIND ]
-- On VALUES reduce production object_ -> graph_node
-- On SERVICE reduce production object_ -> graph_node
-- On SEMICOLON reduce production object_ -> graph_node
-- On RBRACKET reduce production object_ -> graph_node
-- On RBRACE reduce production object_ -> graph_node
-- On OPTIONAL reduce production object_ -> graph_node
-- On MINUS reduce production object_ -> graph_node
-- On LBRACE reduce production object_ -> graph_node
-- On GRAPH reduce production object_ -> graph_node
-- On FILTER reduce production object_ -> graph_node
-- On DOT reduce production object_ -> graph_node
-- On COMMA reduce production object_ -> graph_node
-- On BIND reduce production object_ -> graph_node

State 186:
triples_node -> collection . [ Var2 Var1 VALUES String_literal SERVICE SEMICOLON RPAR RBRACKET RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT COMMA Boolean Blank_node_label BIND ANON A ]
-- On Var2 reduce production triples_node -> collection
-- On Var1 reduce production triples_node -> collection
-- On VALUES reduce production triples_node -> collection
-- On String_literal reduce production triples_node -> collection
-- On SERVICE reduce production triples_node -> collection
-- On SEMICOLON reduce production triples_node -> collection
-- On RPAR reduce production triples_node -> collection
-- On RBRACKET reduce production triples_node -> collection
-- On RBRACE reduce production triples_node -> collection
-- On Pname_ns reduce production triples_node -> collection
-- On Pname_ln reduce production triples_node -> collection
-- On OPTIONAL reduce production triples_node -> collection
-- On NIL reduce production triples_node -> collection
-- On MINUS reduce production triples_node -> collection
-- On LPAR reduce production triples_node -> collection
-- On LBRACKET reduce production triples_node -> collection
-- On LBRACE reduce production triples_node -> collection
-- On Iriref_ reduce production triples_node -> collection
-- On Integer_positive reduce production triples_node -> collection
-- On Integer_negative reduce production triples_node -> collection
-- On Integer reduce production triples_node -> collection
-- On GRAPH reduce production triples_node -> collection
-- On FILTER reduce production triples_node -> collection
-- On Double_positive reduce production triples_node -> collection
-- On Double_negative reduce production triples_node -> collection
-- On Double reduce production triples_node -> collection
-- On Decimal_positive reduce production triples_node -> collection
-- On Decimal_negative reduce production triples_node -> collection
-- On Decimal reduce production triples_node -> collection
-- On DOT reduce production triples_node -> collection
-- On COMMA reduce production triples_node -> collection
-- On Boolean reduce production triples_node -> collection
-- On Blank_node_label reduce production triples_node -> collection
-- On BIND reduce production triples_node -> collection
-- On ANON reduce production triples_node -> collection
-- On A reduce production triples_node -> collection

State 187:
triples_node -> blank_node_property_list . [ Var2 Var1 VALUES String_literal SERVICE SEMICOLON RPAR RBRACKET RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT COMMA Boolean Blank_node_label BIND ANON A ]
-- On Var2 reduce production triples_node -> blank_node_property_list
-- On Var1 reduce production triples_node -> blank_node_property_list
-- On VALUES reduce production triples_node -> blank_node_property_list
-- On String_literal reduce production triples_node -> blank_node_property_list
-- On SERVICE reduce production triples_node -> blank_node_property_list
-- On SEMICOLON reduce production triples_node -> blank_node_property_list
-- On RPAR reduce production triples_node -> blank_node_property_list
-- On RBRACKET reduce production triples_node -> blank_node_property_list
-- On RBRACE reduce production triples_node -> blank_node_property_list
-- On Pname_ns reduce production triples_node -> blank_node_property_list
-- On Pname_ln reduce production triples_node -> blank_node_property_list
-- On OPTIONAL reduce production triples_node -> blank_node_property_list
-- On NIL reduce production triples_node -> blank_node_property_list
-- On MINUS reduce production triples_node -> blank_node_property_list
-- On LPAR reduce production triples_node -> blank_node_property_list
-- On LBRACKET reduce production triples_node -> blank_node_property_list
-- On LBRACE reduce production triples_node -> blank_node_property_list
-- On Iriref_ reduce production triples_node -> blank_node_property_list
-- On Integer_positive reduce production triples_node -> blank_node_property_list
-- On Integer_negative reduce production triples_node -> blank_node_property_list
-- On Integer reduce production triples_node -> blank_node_property_list
-- On GRAPH reduce production triples_node -> blank_node_property_list
-- On FILTER reduce production triples_node -> blank_node_property_list
-- On Double_positive reduce production triples_node -> blank_node_property_list
-- On Double_negative reduce production triples_node -> blank_node_property_list
-- On Double reduce production triples_node -> blank_node_property_list
-- On Decimal_positive reduce production triples_node -> blank_node_property_list
-- On Decimal_negative reduce production triples_node -> blank_node_property_list
-- On Decimal reduce production triples_node -> blank_node_property_list
-- On DOT reduce production triples_node -> blank_node_property_list
-- On COMMA reduce production triples_node -> blank_node_property_list
-- On Boolean reduce production triples_node -> blank_node_property_list
-- On Blank_node_label reduce production triples_node -> blank_node_property_list
-- On BIND reduce production triples_node -> blank_node_property_list
-- On ANON reduce production triples_node -> blank_node_property_list
-- On A reduce production triples_node -> blank_node_property_list

State 188:
verb -> var_or_iri . [ Var2 Var1 String_literal Pname_ns Pname_ln NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
-- On Var2 reduce production verb -> var_or_iri
-- On Var1 reduce production verb -> var_or_iri
-- On String_literal reduce production verb -> var_or_iri
-- On Pname_ns reduce production verb -> var_or_iri
-- On Pname_ln reduce production verb -> var_or_iri
-- On NIL reduce production verb -> var_or_iri
-- On LPAR reduce production verb -> var_or_iri
-- On LBRACKET reduce production verb -> var_or_iri
-- On Iriref_ reduce production verb -> var_or_iri
-- On Integer_positive reduce production verb -> var_or_iri
-- On Integer_negative reduce production verb -> var_or_iri
-- On Integer reduce production verb -> var_or_iri
-- On Double_positive reduce production verb -> var_or_iri
-- On Double_negative reduce production verb -> var_or_iri
-- On Double reduce production verb -> var_or_iri
-- On Decimal_positive reduce production verb -> var_or_iri
-- On Decimal_negative reduce production verb -> var_or_iri
-- On Decimal reduce production verb -> var_or_iri
-- On Boolean reduce production verb -> var_or_iri
-- On Blank_node_label reduce production verb -> var_or_iri
-- On ANON reduce production verb -> var_or_iri

State 189:
var_or_iri -> var . [ WHERE Var2 Var1 VALUES String_literal Pname_ns Pname_ln ORDER OFFSET NIL LPAR LIMIT LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer HAVING GROUP FROM EOF Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
-- On WHERE reduce production var_or_iri -> var
-- On Var2 reduce production var_or_iri -> var
-- On Var1 reduce production var_or_iri -> var
-- On VALUES reduce production var_or_iri -> var
-- On String_literal reduce production var_or_iri -> var
-- On Pname_ns reduce production var_or_iri -> var
-- On Pname_ln reduce production var_or_iri -> var
-- On ORDER reduce production var_or_iri -> var
-- On OFFSET reduce production var_or_iri -> var
-- On NIL reduce production var_or_iri -> var
-- On LPAR reduce production var_or_iri -> var
-- On LIMIT reduce production var_or_iri -> var
-- On LBRACKET reduce production var_or_iri -> var
-- On LBRACE reduce production var_or_iri -> var
-- On Iriref_ reduce production var_or_iri -> var
-- On Integer_positive reduce production var_or_iri -> var
-- On Integer_negative reduce production var_or_iri -> var
-- On Integer reduce production var_or_iri -> var
-- On HAVING reduce production var_or_iri -> var
-- On GROUP reduce production var_or_iri -> var
-- On FROM reduce production var_or_iri -> var
-- On EOF reduce production var_or_iri -> var
-- On Double_positive reduce production var_or_iri -> var
-- On Double_negative reduce production var_or_iri -> var
-- On Double reduce production var_or_iri -> var
-- On Decimal_positive reduce production var_or_iri -> var
-- On Decimal_negative reduce production var_or_iri -> var
-- On Decimal reduce production var_or_iri -> var
-- On Boolean reduce production var_or_iri -> var
-- On Blank_node_label reduce production var_or_iri -> var
-- On ANON reduce production var_or_iri -> var

State 190:
verb_object_list_l -> SEMICOLON option(verb_object_list) . [ SEMICOLON RBRACKET RBRACE DOT ]
-- On SEMICOLON reduce production verb_object_list_l -> SEMICOLON option(verb_object_list)
-- On RBRACKET reduce production verb_object_list_l -> SEMICOLON option(verb_object_list)
-- On RBRACE reduce production verb_object_list_l -> SEMICOLON option(verb_object_list)
-- On DOT reduce production verb_object_list_l -> SEMICOLON option(verb_object_list)

State 191:
var_or_iri -> iri . [ WHERE Var2 Var1 VALUES String_literal Pname_ns Pname_ln ORDER OFFSET NIL LPAR LIMIT LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer HAVING GROUP FROM EOF Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
-- On WHERE reduce production var_or_iri -> iri
-- On Var2 reduce production var_or_iri -> iri
-- On Var1 reduce production var_or_iri -> iri
-- On VALUES reduce production var_or_iri -> iri
-- On String_literal reduce production var_or_iri -> iri
-- On Pname_ns reduce production var_or_iri -> iri
-- On Pname_ln reduce production var_or_iri -> iri
-- On ORDER reduce production var_or_iri -> iri
-- On OFFSET reduce production var_or_iri -> iri
-- On NIL reduce production var_or_iri -> iri
-- On LPAR reduce production var_or_iri -> iri
-- On LIMIT reduce production var_or_iri -> iri
-- On LBRACKET reduce production var_or_iri -> iri
-- On LBRACE reduce production var_or_iri -> iri
-- On Iriref_ reduce production var_or_iri -> iri
-- On Integer_positive reduce production var_or_iri -> iri
-- On Integer_negative reduce production var_or_iri -> iri
-- On Integer reduce production var_or_iri -> iri
-- On HAVING reduce production var_or_iri -> iri
-- On GROUP reduce production var_or_iri -> iri
-- On FROM reduce production var_or_iri -> iri
-- On EOF reduce production var_or_iri -> iri
-- On Double_positive reduce production var_or_iri -> iri
-- On Double_negative reduce production var_or_iri -> iri
-- On Double reduce production var_or_iri -> iri
-- On Decimal_positive reduce production var_or_iri -> iri
-- On Decimal_negative reduce production var_or_iri -> iri
-- On Decimal reduce production var_or_iri -> iri
-- On Boolean reduce production var_or_iri -> iri
-- On Blank_node_label reduce production var_or_iri -> iri
-- On ANON reduce production var_or_iri -> iri

State 192:
list(verb_object_list_l) -> verb_object_list_l . list(verb_object_list_l) [ RBRACKET RBRACE DOT ]
-- On SEMICOLON shift to state 175
-- On verb_object_list_l shift to state 192
-- On list(verb_object_list_l) shift to state 193
-- On RBRACKET reduce production list(verb_object_list_l) ->
-- On RBRACE reduce production list(verb_object_list_l) ->
-- On DOT reduce production list(verb_object_list_l) ->

State 193:
list(verb_object_list_l) -> verb_object_list_l list(verb_object_list_l) . [ RBRACKET RBRACE DOT ]
-- On RBRACKET reduce production list(verb_object_list_l) -> verb_object_list_l list(verb_object_list_l)
-- On RBRACE reduce production list(verb_object_list_l) -> verb_object_list_l list(verb_object_list_l)
-- On DOT reduce production list(verb_object_list_l) -> verb_object_list_l list(verb_object_list_l)

State 194:
property_list_not_empty -> verb_object_list list(verb_object_list_l) . [ RBRACKET RBRACE DOT ]
-- On RBRACKET reduce production property_list_not_empty -> verb_object_list list(verb_object_list_l)
-- On RBRACE reduce production property_list_not_empty -> verb_object_list list(verb_object_list_l)
-- On DOT reduce production property_list_not_empty -> verb_object_list list(verb_object_list_l)

State 195:
blank_node_property_list -> LBRACKET property_list_not_empty . RBRACKET [ Var2 Var1 VALUES String_literal SERVICE SEMICOLON RPAR RBRACKET RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT COMMA Boolean Blank_node_label BIND ANON A ]
-- On RBRACKET shift to state 196

State 196:
blank_node_property_list -> LBRACKET property_list_not_empty RBRACKET . [ Var2 Var1 VALUES String_literal SERVICE SEMICOLON RPAR RBRACKET RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT COMMA Boolean Blank_node_label BIND ANON A ]
-- On Var2 reduce production blank_node_property_list -> LBRACKET property_list_not_empty RBRACKET
-- On Var1 reduce production blank_node_property_list -> LBRACKET property_list_not_empty RBRACKET
-- On VALUES reduce production blank_node_property_list -> LBRACKET property_list_not_empty RBRACKET
-- On String_literal reduce production blank_node_property_list -> LBRACKET property_list_not_empty RBRACKET
-- On SERVICE reduce production blank_node_property_list -> LBRACKET property_list_not_empty RBRACKET
-- On SEMICOLON reduce production blank_node_property_list -> LBRACKET property_list_not_empty RBRACKET
-- On RPAR reduce production blank_node_property_list -> LBRACKET property_list_not_empty RBRACKET
-- On RBRACKET reduce production blank_node_property_list -> LBRACKET property_list_not_empty RBRACKET
-- On RBRACE reduce production blank_node_property_list -> LBRACKET property_list_not_empty RBRACKET
-- On Pname_ns reduce production blank_node_property_list -> LBRACKET property_list_not_empty RBRACKET
-- On Pname_ln reduce production blank_node_property_list -> LBRACKET property_list_not_empty RBRACKET
-- On OPTIONAL reduce production blank_node_property_list -> LBRACKET property_list_not_empty RBRACKET
-- On NIL reduce production blank_node_property_list -> LBRACKET property_list_not_empty RBRACKET
-- On MINUS reduce production blank_node_property_list -> LBRACKET property_list_not_empty RBRACKET
-- On LPAR reduce production blank_node_property_list -> LBRACKET property_list_not_empty RBRACKET
-- On LBRACKET reduce production blank_node_property_list -> LBRACKET property_list_not_empty RBRACKET
-- On LBRACE reduce production blank_node_property_list -> LBRACKET property_list_not_empty RBRACKET
-- On Iriref_ reduce production blank_node_property_list -> LBRACKET property_list_not_empty RBRACKET
-- On Integer_positive reduce production blank_node_property_list -> LBRACKET property_list_not_empty RBRACKET
-- On Integer_negative reduce production blank_node_property_list -> LBRACKET property_list_not_empty RBRACKET
-- On Integer reduce production blank_node_property_list -> LBRACKET property_list_not_empty RBRACKET
-- On GRAPH reduce production blank_node_property_list -> LBRACKET property_list_not_empty RBRACKET
-- On FILTER reduce production blank_node_property_list -> LBRACKET property_list_not_empty RBRACKET
-- On Double_positive reduce production blank_node_property_list -> LBRACKET property_list_not_empty RBRACKET
-- On Double_negative reduce production blank_node_property_list -> LBRACKET property_list_not_empty RBRACKET
-- On Double reduce production blank_node_property_list -> LBRACKET property_list_not_empty RBRACKET
-- On Decimal_positive reduce production blank_node_property_list -> LBRACKET property_list_not_empty RBRACKET
-- On Decimal_negative reduce production blank_node_property_list -> LBRACKET property_list_not_empty RBRACKET
-- On Decimal reduce production blank_node_property_list -> LBRACKET property_list_not_empty RBRACKET
-- On DOT reduce production blank_node_property_list -> LBRACKET property_list_not_empty RBRACKET
-- On COMMA reduce production blank_node_property_list -> LBRACKET property_list_not_empty RBRACKET
-- On Boolean reduce production blank_node_property_list -> LBRACKET property_list_not_empty RBRACKET
-- On Blank_node_label reduce production blank_node_property_list -> LBRACKET property_list_not_empty RBRACKET
-- On BIND reduce production blank_node_property_list -> LBRACKET property_list_not_empty RBRACKET
-- On ANON reduce production blank_node_property_list -> LBRACKET property_list_not_empty RBRACKET
-- On A reduce production blank_node_property_list -> LBRACKET property_list_not_empty RBRACKET

State 197:
collection -> LPAR nonempty_list(graph_node) . RPAR [ Var2 Var1 VALUES String_literal SERVICE SEMICOLON RPAR RBRACKET RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT COMMA Boolean Blank_node_label BIND ANON A ]
-- On RPAR shift to state 198

State 198:
collection -> LPAR nonempty_list(graph_node) RPAR . [ Var2 Var1 VALUES String_literal SERVICE SEMICOLON RPAR RBRACKET RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT COMMA Boolean Blank_node_label BIND ANON A ]
-- On Var2 reduce production collection -> LPAR nonempty_list(graph_node) RPAR
-- On Var1 reduce production collection -> LPAR nonempty_list(graph_node) RPAR
-- On VALUES reduce production collection -> LPAR nonempty_list(graph_node) RPAR
-- On String_literal reduce production collection -> LPAR nonempty_list(graph_node) RPAR
-- On SERVICE reduce production collection -> LPAR nonempty_list(graph_node) RPAR
-- On SEMICOLON reduce production collection -> LPAR nonempty_list(graph_node) RPAR
-- On RPAR reduce production collection -> LPAR nonempty_list(graph_node) RPAR
-- On RBRACKET reduce production collection -> LPAR nonempty_list(graph_node) RPAR
-- On RBRACE reduce production collection -> LPAR nonempty_list(graph_node) RPAR
-- On Pname_ns reduce production collection -> LPAR nonempty_list(graph_node) RPAR
-- On Pname_ln reduce production collection -> LPAR nonempty_list(graph_node) RPAR
-- On OPTIONAL reduce production collection -> LPAR nonempty_list(graph_node) RPAR
-- On NIL reduce production collection -> LPAR nonempty_list(graph_node) RPAR
-- On MINUS reduce production collection -> LPAR nonempty_list(graph_node) RPAR
-- On LPAR reduce production collection -> LPAR nonempty_list(graph_node) RPAR
-- On LBRACKET reduce production collection -> LPAR nonempty_list(graph_node) RPAR
-- On LBRACE reduce production collection -> LPAR nonempty_list(graph_node) RPAR
-- On Iriref_ reduce production collection -> LPAR nonempty_list(graph_node) RPAR
-- On Integer_positive reduce production collection -> LPAR nonempty_list(graph_node) RPAR
-- On Integer_negative reduce production collection -> LPAR nonempty_list(graph_node) RPAR
-- On Integer reduce production collection -> LPAR nonempty_list(graph_node) RPAR
-- On GRAPH reduce production collection -> LPAR nonempty_list(graph_node) RPAR
-- On FILTER reduce production collection -> LPAR nonempty_list(graph_node) RPAR
-- On Double_positive reduce production collection -> LPAR nonempty_list(graph_node) RPAR
-- On Double_negative reduce production collection -> LPAR nonempty_list(graph_node) RPAR
-- On Double reduce production collection -> LPAR nonempty_list(graph_node) RPAR
-- On Decimal_positive reduce production collection -> LPAR nonempty_list(graph_node) RPAR
-- On Decimal_negative reduce production collection -> LPAR nonempty_list(graph_node) RPAR
-- On Decimal reduce production collection -> LPAR nonempty_list(graph_node) RPAR
-- On DOT reduce production collection -> LPAR nonempty_list(graph_node) RPAR
-- On COMMA reduce production collection -> LPAR nonempty_list(graph_node) RPAR
-- On Boolean reduce production collection -> LPAR nonempty_list(graph_node) RPAR
-- On Blank_node_label reduce production collection -> LPAR nonempty_list(graph_node) RPAR
-- On BIND reduce production collection -> LPAR nonempty_list(graph_node) RPAR
-- On ANON reduce production collection -> LPAR nonempty_list(graph_node) RPAR
-- On A reduce production collection -> LPAR nonempty_list(graph_node) RPAR

State 199:
nonempty_list(graph_node) -> graph_node . [ RPAR ]
nonempty_list(graph_node) -> graph_node . nonempty_list(graph_node) [ RPAR ]
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On String_literal shift to state 31
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On NIL shift to state 87
-- On LPAR shift to state 171
-- On LBRACKET shift to state 172
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On Boolean shift to state 139
-- On Blank_node_label shift to state 140
-- On ANON shift to state 141
-- On var_or_term shift to state 178
-- On var shift to state 143
-- On triples_node shift to state 179
-- On string shift to state 145
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 151
-- On prefixed_name shift to state 97
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 159
-- On nonempty_list(graph_node) shift to state 200
-- On iri shift to state 160
-- On graph_term shift to state 161
-- On graph_node shift to state 199
-- On collection shift to state 186
-- On boolean_literal shift to state 164
-- On blank_node_property_list shift to state 187
-- On blank_node shift to state 166
-- On RPAR reduce production nonempty_list(graph_node) -> graph_node

State 200:
nonempty_list(graph_node) -> graph_node nonempty_list(graph_node) . [ RPAR ]
-- On RPAR reduce production nonempty_list(graph_node) -> graph_node nonempty_list(graph_node)

State 201:
verbp_object_list -> verb_path_or_simple object_list . [ VALUES SERVICE SEMICOLON RBRACKET RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER DOT BIND ]
-- On VALUES reduce production verbp_object_list -> verb_path_or_simple object_list
-- On SERVICE reduce production verbp_object_list -> verb_path_or_simple object_list
-- On SEMICOLON reduce production verbp_object_list -> verb_path_or_simple object_list
-- On RBRACKET reduce production verbp_object_list -> verb_path_or_simple object_list
-- On RBRACE reduce production verbp_object_list -> verb_path_or_simple object_list
-- On OPTIONAL reduce production verbp_object_list -> verb_path_or_simple object_list
-- On MINUS reduce production verbp_object_list -> verb_path_or_simple object_list
-- On LBRACE reduce production verbp_object_list -> verb_path_or_simple object_list
-- On GRAPH reduce production verbp_object_list -> verb_path_or_simple object_list
-- On FILTER reduce production verbp_object_list -> verb_path_or_simple object_list
-- On DOT reduce production verbp_object_list -> verb_path_or_simple object_list
-- On BIND reduce production verbp_object_list -> verb_path_or_simple object_list

State 202:
verb_path_or_simple -> var . [ Var2 Var1 String_literal Pname_ns Pname_ln NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
-- On Var2 reduce production verb_path_or_simple -> var
-- On Var1 reduce production verb_path_or_simple -> var
-- On String_literal reduce production verb_path_or_simple -> var
-- On Pname_ns reduce production verb_path_or_simple -> var
-- On Pname_ln reduce production verb_path_or_simple -> var
-- On NIL reduce production verb_path_or_simple -> var
-- On LPAR reduce production verb_path_or_simple -> var
-- On LBRACKET reduce production verb_path_or_simple -> var
-- On Iriref_ reduce production verb_path_or_simple -> var
-- On Integer_positive reduce production verb_path_or_simple -> var
-- On Integer_negative reduce production verb_path_or_simple -> var
-- On Integer reduce production verb_path_or_simple -> var
-- On Double_positive reduce production verb_path_or_simple -> var
-- On Double_negative reduce production verb_path_or_simple -> var
-- On Double reduce production verb_path_or_simple -> var
-- On Decimal_positive reduce production verb_path_or_simple -> var
-- On Decimal_negative reduce production verb_path_or_simple -> var
-- On Decimal reduce production verb_path_or_simple -> var
-- On Boolean reduce production verb_path_or_simple -> var
-- On Blank_node_label reduce production verb_path_or_simple -> var
-- On ANON reduce production verb_path_or_simple -> var

State 203:
verb_path_or_simple -> path . [ Var2 Var1 String_literal Pname_ns Pname_ln NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
-- On Var2 reduce production verb_path_or_simple -> path
-- On Var1 reduce production verb_path_or_simple -> path
-- On String_literal reduce production verb_path_or_simple -> path
-- On Pname_ns reduce production verb_path_or_simple -> path
-- On Pname_ln reduce production verb_path_or_simple -> path
-- On NIL reduce production verb_path_or_simple -> path
-- On LPAR reduce production verb_path_or_simple -> path
-- On LBRACKET reduce production verb_path_or_simple -> path
-- On Iriref_ reduce production verb_path_or_simple -> path
-- On Integer_positive reduce production verb_path_or_simple -> path
-- On Integer_negative reduce production verb_path_or_simple -> path
-- On Integer reduce production verb_path_or_simple -> path
-- On Double_positive reduce production verb_path_or_simple -> path
-- On Double_negative reduce production verb_path_or_simple -> path
-- On Double reduce production verb_path_or_simple -> path
-- On Decimal_positive reduce production verb_path_or_simple -> path
-- On Decimal_negative reduce production verb_path_or_simple -> path
-- On Decimal reduce production verb_path_or_simple -> path
-- On Boolean reduce production verb_path_or_simple -> path
-- On Blank_node_label reduce production verb_path_or_simple -> path
-- On ANON reduce production verb_path_or_simple -> path

State 204:
verbp_object_list_l -> SEMICOLON option(verbp_object_list) . [ VALUES SERVICE SEMICOLON RBRACKET RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER DOT BIND ]
-- On VALUES reduce production verbp_object_list_l -> SEMICOLON option(verbp_object_list)
-- On SERVICE reduce production verbp_object_list_l -> SEMICOLON option(verbp_object_list)
-- On SEMICOLON reduce production verbp_object_list_l -> SEMICOLON option(verbp_object_list)
-- On RBRACKET reduce production verbp_object_list_l -> SEMICOLON option(verbp_object_list)
-- On RBRACE reduce production verbp_object_list_l -> SEMICOLON option(verbp_object_list)
-- On OPTIONAL reduce production verbp_object_list_l -> SEMICOLON option(verbp_object_list)
-- On MINUS reduce production verbp_object_list_l -> SEMICOLON option(verbp_object_list)
-- On LBRACE reduce production verbp_object_list_l -> SEMICOLON option(verbp_object_list)
-- On GRAPH reduce production verbp_object_list_l -> SEMICOLON option(verbp_object_list)
-- On FILTER reduce production verbp_object_list_l -> SEMICOLON option(verbp_object_list)
-- On DOT reduce production verbp_object_list_l -> SEMICOLON option(verbp_object_list)
-- On BIND reduce production verbp_object_list_l -> SEMICOLON option(verbp_object_list)

State 205:
list(verbp_object_list_l) -> verbp_object_list_l . list(verbp_object_list_l) [ VALUES SERVICE RBRACKET RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER DOT BIND ]
-- On SEMICOLON shift to state 168
-- On verbp_object_list_l shift to state 205
-- On list(verbp_object_list_l) shift to state 206
-- On VALUES reduce production list(verbp_object_list_l) ->
-- On SERVICE reduce production list(verbp_object_list_l) ->
-- On RBRACKET reduce production list(verbp_object_list_l) ->
-- On RBRACE reduce production list(verbp_object_list_l) ->
-- On OPTIONAL reduce production list(verbp_object_list_l) ->
-- On MINUS reduce production list(verbp_object_list_l) ->
-- On LBRACE reduce production list(verbp_object_list_l) ->
-- On GRAPH reduce production list(verbp_object_list_l) ->
-- On FILTER reduce production list(verbp_object_list_l) ->
-- On DOT reduce production list(verbp_object_list_l) ->
-- On BIND reduce production list(verbp_object_list_l) ->

State 206:
list(verbp_object_list_l) -> verbp_object_list_l list(verbp_object_list_l) . [ VALUES SERVICE RBRACKET RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER DOT BIND ]
-- On VALUES reduce production list(verbp_object_list_l) -> verbp_object_list_l list(verbp_object_list_l)
-- On SERVICE reduce production list(verbp_object_list_l) -> verbp_object_list_l list(verbp_object_list_l)
-- On RBRACKET reduce production list(verbp_object_list_l) -> verbp_object_list_l list(verbp_object_list_l)
-- On RBRACE reduce production list(verbp_object_list_l) -> verbp_object_list_l list(verbp_object_list_l)
-- On OPTIONAL reduce production list(verbp_object_list_l) -> verbp_object_list_l list(verbp_object_list_l)
-- On MINUS reduce production list(verbp_object_list_l) -> verbp_object_list_l list(verbp_object_list_l)
-- On LBRACE reduce production list(verbp_object_list_l) -> verbp_object_list_l list(verbp_object_list_l)
-- On GRAPH reduce production list(verbp_object_list_l) -> verbp_object_list_l list(verbp_object_list_l)
-- On FILTER reduce production list(verbp_object_list_l) -> verbp_object_list_l list(verbp_object_list_l)
-- On DOT reduce production list(verbp_object_list_l) -> verbp_object_list_l list(verbp_object_list_l)
-- On BIND reduce production list(verbp_object_list_l) -> verbp_object_list_l list(verbp_object_list_l)

State 207:
property_list_path_not_empty -> verb_path_or_simple object_list_path list(verbp_object_list_l) . [ VALUES SERVICE RBRACKET RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER DOT BIND ]
-- On VALUES reduce production property_list_path_not_empty -> verb_path_or_simple object_list_path list(verbp_object_list_l)
-- On SERVICE reduce production property_list_path_not_empty -> verb_path_or_simple object_list_path list(verbp_object_list_l)
-- On RBRACKET reduce production property_list_path_not_empty -> verb_path_or_simple object_list_path list(verbp_object_list_l)
-- On RBRACE reduce production property_list_path_not_empty -> verb_path_or_simple object_list_path list(verbp_object_list_l)
-- On OPTIONAL reduce production property_list_path_not_empty -> verb_path_or_simple object_list_path list(verbp_object_list_l)
-- On MINUS reduce production property_list_path_not_empty -> verb_path_or_simple object_list_path list(verbp_object_list_l)
-- On LBRACE reduce production property_list_path_not_empty -> verb_path_or_simple object_list_path list(verbp_object_list_l)
-- On GRAPH reduce production property_list_path_not_empty -> verb_path_or_simple object_list_path list(verbp_object_list_l)
-- On FILTER reduce production property_list_path_not_empty -> verb_path_or_simple object_list_path list(verbp_object_list_l)
-- On DOT reduce production property_list_path_not_empty -> verb_path_or_simple object_list_path list(verbp_object_list_l)
-- On BIND reduce production property_list_path_not_empty -> verb_path_or_simple object_list_path list(verbp_object_list_l)

State 208:
blank_node_property_list_path -> LBRACKET property_list_path_not_empty . RBRACKET [ Var2 Var1 VALUES String_literal SERVICE SEMICOLON RPAR RBRACKET RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer HAT GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT COMMA Boolean Blank_node_label BIND BANG ANON A ]
-- On RBRACKET shift to state 209

State 209:
blank_node_property_list_path -> LBRACKET property_list_path_not_empty RBRACKET . [ Var2 Var1 VALUES String_literal SERVICE SEMICOLON RPAR RBRACKET RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer HAT GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT COMMA Boolean Blank_node_label BIND BANG ANON A ]
-- On Var2 reduce production blank_node_property_list_path -> LBRACKET property_list_path_not_empty RBRACKET
-- On Var1 reduce production blank_node_property_list_path -> LBRACKET property_list_path_not_empty RBRACKET
-- On VALUES reduce production blank_node_property_list_path -> LBRACKET property_list_path_not_empty RBRACKET
-- On String_literal reduce production blank_node_property_list_path -> LBRACKET property_list_path_not_empty RBRACKET
-- On SERVICE reduce production blank_node_property_list_path -> LBRACKET property_list_path_not_empty RBRACKET
-- On SEMICOLON reduce production blank_node_property_list_path -> LBRACKET property_list_path_not_empty RBRACKET
-- On RPAR reduce production blank_node_property_list_path -> LBRACKET property_list_path_not_empty RBRACKET
-- On RBRACKET reduce production blank_node_property_list_path -> LBRACKET property_list_path_not_empty RBRACKET
-- On RBRACE reduce production blank_node_property_list_path -> LBRACKET property_list_path_not_empty RBRACKET
-- On Pname_ns reduce production blank_node_property_list_path -> LBRACKET property_list_path_not_empty RBRACKET
-- On Pname_ln reduce production blank_node_property_list_path -> LBRACKET property_list_path_not_empty RBRACKET
-- On OPTIONAL reduce production blank_node_property_list_path -> LBRACKET property_list_path_not_empty RBRACKET
-- On NIL reduce production blank_node_property_list_path -> LBRACKET property_list_path_not_empty RBRACKET
-- On MINUS reduce production blank_node_property_list_path -> LBRACKET property_list_path_not_empty RBRACKET
-- On LPAR reduce production blank_node_property_list_path -> LBRACKET property_list_path_not_empty RBRACKET
-- On LBRACKET reduce production blank_node_property_list_path -> LBRACKET property_list_path_not_empty RBRACKET
-- On LBRACE reduce production blank_node_property_list_path -> LBRACKET property_list_path_not_empty RBRACKET
-- On Iriref_ reduce production blank_node_property_list_path -> LBRACKET property_list_path_not_empty RBRACKET
-- On Integer_positive reduce production blank_node_property_list_path -> LBRACKET property_list_path_not_empty RBRACKET
-- On Integer_negative reduce production blank_node_property_list_path -> LBRACKET property_list_path_not_empty RBRACKET
-- On Integer reduce production blank_node_property_list_path -> LBRACKET property_list_path_not_empty RBRACKET
-- On HAT reduce production blank_node_property_list_path -> LBRACKET property_list_path_not_empty RBRACKET
-- On GRAPH reduce production blank_node_property_list_path -> LBRACKET property_list_path_not_empty RBRACKET
-- On FILTER reduce production blank_node_property_list_path -> LBRACKET property_list_path_not_empty RBRACKET
-- On Double_positive reduce production blank_node_property_list_path -> LBRACKET property_list_path_not_empty RBRACKET
-- On Double_negative reduce production blank_node_property_list_path -> LBRACKET property_list_path_not_empty RBRACKET
-- On Double reduce production blank_node_property_list_path -> LBRACKET property_list_path_not_empty RBRACKET
-- On Decimal_positive reduce production blank_node_property_list_path -> LBRACKET property_list_path_not_empty RBRACKET
-- On Decimal_negative reduce production blank_node_property_list_path -> LBRACKET property_list_path_not_empty RBRACKET
-- On Decimal reduce production blank_node_property_list_path -> LBRACKET property_list_path_not_empty RBRACKET
-- On DOT reduce production blank_node_property_list_path -> LBRACKET property_list_path_not_empty RBRACKET
-- On COMMA reduce production blank_node_property_list_path -> LBRACKET property_list_path_not_empty RBRACKET
-- On Boolean reduce production blank_node_property_list_path -> LBRACKET property_list_path_not_empty RBRACKET
-- On Blank_node_label reduce production blank_node_property_list_path -> LBRACKET property_list_path_not_empty RBRACKET
-- On BIND reduce production blank_node_property_list_path -> LBRACKET property_list_path_not_empty RBRACKET
-- On BANG reduce production blank_node_property_list_path -> LBRACKET property_list_path_not_empty RBRACKET
-- On ANON reduce production blank_node_property_list_path -> LBRACKET property_list_path_not_empty RBRACKET
-- On A reduce production blank_node_property_list_path -> LBRACKET property_list_path_not_empty RBRACKET

State 210:
collection_path -> LPAR nonempty_list(graph_node_path) . RPAR [ Var2 Var1 VALUES String_literal SERVICE SEMICOLON RPAR RBRACKET RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer HAT GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT COMMA Boolean Blank_node_label BIND BANG ANON A ]
-- On RPAR shift to state 211

State 211:
collection_path -> LPAR nonempty_list(graph_node_path) RPAR . [ Var2 Var1 VALUES String_literal SERVICE SEMICOLON RPAR RBRACKET RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer HAT GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT COMMA Boolean Blank_node_label BIND BANG ANON A ]
-- On Var2 reduce production collection_path -> LPAR nonempty_list(graph_node_path) RPAR
-- On Var1 reduce production collection_path -> LPAR nonempty_list(graph_node_path) RPAR
-- On VALUES reduce production collection_path -> LPAR nonempty_list(graph_node_path) RPAR
-- On String_literal reduce production collection_path -> LPAR nonempty_list(graph_node_path) RPAR
-- On SERVICE reduce production collection_path -> LPAR nonempty_list(graph_node_path) RPAR
-- On SEMICOLON reduce production collection_path -> LPAR nonempty_list(graph_node_path) RPAR
-- On RPAR reduce production collection_path -> LPAR nonempty_list(graph_node_path) RPAR
-- On RBRACKET reduce production collection_path -> LPAR nonempty_list(graph_node_path) RPAR
-- On RBRACE reduce production collection_path -> LPAR nonempty_list(graph_node_path) RPAR
-- On Pname_ns reduce production collection_path -> LPAR nonempty_list(graph_node_path) RPAR
-- On Pname_ln reduce production collection_path -> LPAR nonempty_list(graph_node_path) RPAR
-- On OPTIONAL reduce production collection_path -> LPAR nonempty_list(graph_node_path) RPAR
-- On NIL reduce production collection_path -> LPAR nonempty_list(graph_node_path) RPAR
-- On MINUS reduce production collection_path -> LPAR nonempty_list(graph_node_path) RPAR
-- On LPAR reduce production collection_path -> LPAR nonempty_list(graph_node_path) RPAR
-- On LBRACKET reduce production collection_path -> LPAR nonempty_list(graph_node_path) RPAR
-- On LBRACE reduce production collection_path -> LPAR nonempty_list(graph_node_path) RPAR
-- On Iriref_ reduce production collection_path -> LPAR nonempty_list(graph_node_path) RPAR
-- On Integer_positive reduce production collection_path -> LPAR nonempty_list(graph_node_path) RPAR
-- On Integer_negative reduce production collection_path -> LPAR nonempty_list(graph_node_path) RPAR
-- On Integer reduce production collection_path -> LPAR nonempty_list(graph_node_path) RPAR
-- On HAT reduce production collection_path -> LPAR nonempty_list(graph_node_path) RPAR
-- On GRAPH reduce production collection_path -> LPAR nonempty_list(graph_node_path) RPAR
-- On FILTER reduce production collection_path -> LPAR nonempty_list(graph_node_path) RPAR
-- On Double_positive reduce production collection_path -> LPAR nonempty_list(graph_node_path) RPAR
-- On Double_negative reduce production collection_path -> LPAR nonempty_list(graph_node_path) RPAR
-- On Double reduce production collection_path -> LPAR nonempty_list(graph_node_path) RPAR
-- On Decimal_positive reduce production collection_path -> LPAR nonempty_list(graph_node_path) RPAR
-- On Decimal_negative reduce production collection_path -> LPAR nonempty_list(graph_node_path) RPAR
-- On Decimal reduce production collection_path -> LPAR nonempty_list(graph_node_path) RPAR
-- On DOT reduce production collection_path -> LPAR nonempty_list(graph_node_path) RPAR
-- On COMMA reduce production collection_path -> LPAR nonempty_list(graph_node_path) RPAR
-- On Boolean reduce production collection_path -> LPAR nonempty_list(graph_node_path) RPAR
-- On Blank_node_label reduce production collection_path -> LPAR nonempty_list(graph_node_path) RPAR
-- On BIND reduce production collection_path -> LPAR nonempty_list(graph_node_path) RPAR
-- On BANG reduce production collection_path -> LPAR nonempty_list(graph_node_path) RPAR
-- On ANON reduce production collection_path -> LPAR nonempty_list(graph_node_path) RPAR
-- On A reduce production collection_path -> LPAR nonempty_list(graph_node_path) RPAR

State 212:
nonempty_list(graph_node_path) -> graph_node_path . [ RPAR ]
nonempty_list(graph_node_path) -> graph_node_path . nonempty_list(graph_node_path) [ RPAR ]
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On String_literal shift to state 31
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On NIL shift to state 87
-- On LPAR shift to state 88
-- On LBRACKET shift to state 89
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On Boolean shift to state 139
-- On Blank_node_label shift to state 140
-- On ANON shift to state 141
-- On var_or_term shift to state 142
-- On var shift to state 143
-- On triples_node_path shift to state 144
-- On string shift to state 145
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 151
-- On prefixed_name shift to state 97
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 159
-- On nonempty_list(graph_node_path) shift to state 213
-- On iri shift to state 160
-- On graph_term shift to state 161
-- On graph_node_path shift to state 212
-- On collection_path shift to state 163
-- On boolean_literal shift to state 164
-- On blank_node_property_list_path shift to state 165
-- On blank_node shift to state 166
-- On RPAR reduce production nonempty_list(graph_node_path) -> graph_node_path

State 213:
nonempty_list(graph_node_path) -> graph_node_path nonempty_list(graph_node_path) . [ RPAR ]
-- On RPAR reduce production nonempty_list(graph_node_path) -> graph_node_path nonempty_list(graph_node_path)

State 214:
triples_same_subject_path -> var_or_term . property_list_path_not_empty [ VALUES SERVICE RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER DOT BIND ]
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On LPAR shift to state 90
-- On Iriref_ shift to state 91
-- On HAT shift to state 92
-- On BANG shift to state 93
-- On A shift to state 108
-- On verb_path_or_simple shift to state 129
-- On var shift to state 202
-- On separated_nonempty_list(SLASH,path_elt_or_inverse) shift to state 117
-- On separated_nonempty_list(PIPE,path_sequence) shift to state 118
-- On property_list_path_not_empty shift to state 215
-- On prefixed_name shift to state 97
-- On path_sequence shift to state 119
-- On path_primary shift to state 109
-- On path_elt_or_inverse shift to state 122
-- On path_elt shift to state 125
-- On path_alternative shift to state 126
-- On path shift to state 203
-- On iri shift to state 116

State 215:
triples_same_subject_path -> var_or_term property_list_path_not_empty . [ VALUES SERVICE RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER DOT BIND ]
-- On VALUES reduce production triples_same_subject_path -> var_or_term property_list_path_not_empty
-- On SERVICE reduce production triples_same_subject_path -> var_or_term property_list_path_not_empty
-- On RBRACE reduce production triples_same_subject_path -> var_or_term property_list_path_not_empty
-- On OPTIONAL reduce production triples_same_subject_path -> var_or_term property_list_path_not_empty
-- On MINUS reduce production triples_same_subject_path -> var_or_term property_list_path_not_empty
-- On LBRACE reduce production triples_same_subject_path -> var_or_term property_list_path_not_empty
-- On GRAPH reduce production triples_same_subject_path -> var_or_term property_list_path_not_empty
-- On FILTER reduce production triples_same_subject_path -> var_or_term property_list_path_not_empty
-- On DOT reduce production triples_same_subject_path -> var_or_term property_list_path_not_empty
-- On BIND reduce production triples_same_subject_path -> var_or_term property_list_path_not_empty

State 216:
triples_block_details -> triples_same_subject_path . option(triples_block_details2) [ VALUES SERVICE RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER BIND ]
-- On DOT shift to state 217
-- On triples_block_details2 shift to state 224
-- On option(triples_block_details2) shift to state 225
-- On VALUES reduce production option(triples_block_details2) ->
-- On SERVICE reduce production option(triples_block_details2) ->
-- On RBRACE reduce production option(triples_block_details2) ->
-- On OPTIONAL reduce production option(triples_block_details2) ->
-- On MINUS reduce production option(triples_block_details2) ->
-- On LBRACE reduce production option(triples_block_details2) ->
-- On GRAPH reduce production option(triples_block_details2) ->
-- On FILTER reduce production option(triples_block_details2) ->
-- On BIND reduce production option(triples_block_details2) ->

State 217:
triples_block_details2 -> DOT . option(triples_block_details) [ VALUES SERVICE RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER BIND ]
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On String_literal shift to state 31
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On NIL shift to state 87
-- On LPAR shift to state 88
-- On LBRACKET shift to state 89
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On Boolean shift to state 139
-- On Blank_node_label shift to state 140
-- On ANON shift to state 141
-- On var_or_term shift to state 214
-- On var shift to state 143
-- On triples_same_subject_path shift to state 216
-- On triples_node_path shift to state 218
-- On triples_block_details shift to state 222
-- On string shift to state 145
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 151
-- On prefixed_name shift to state 97
-- On option(triples_block_details) shift to state 223
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 159
-- On iri shift to state 160
-- On graph_term shift to state 161
-- On collection_path shift to state 163
-- On boolean_literal shift to state 164
-- On blank_node_property_list_path shift to state 165
-- On blank_node shift to state 166
-- On VALUES reduce production option(triples_block_details) ->
-- On SERVICE reduce production option(triples_block_details) ->
-- On RBRACE reduce production option(triples_block_details) ->
-- On OPTIONAL reduce production option(triples_block_details) ->
-- On MINUS reduce production option(triples_block_details) ->
-- On LBRACE reduce production option(triples_block_details) ->
-- On GRAPH reduce production option(triples_block_details) ->
-- On FILTER reduce production option(triples_block_details) ->
-- On BIND reduce production option(triples_block_details) ->

State 218:
triples_same_subject_path -> triples_node_path . property_list_path [ VALUES SERVICE RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER DOT BIND ]
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On LPAR shift to state 90
-- On Iriref_ shift to state 91
-- On HAT shift to state 92
-- On BANG shift to state 93
-- On A shift to state 108
-- On verb_path_or_simple shift to state 129
-- On var shift to state 202
-- On separated_nonempty_list(SLASH,path_elt_or_inverse) shift to state 117
-- On separated_nonempty_list(PIPE,path_sequence) shift to state 118
-- On property_list_path_not_empty shift to state 219
-- On property_list_path shift to state 220
-- On prefixed_name shift to state 97
-- On path_sequence shift to state 119
-- On path_primary shift to state 109
-- On path_elt_or_inverse shift to state 122
-- On path_elt shift to state 125
-- On path_alternative shift to state 126
-- On path shift to state 203
-- On option(property_list_path_not_empty) shift to state 221
-- On iri shift to state 116
-- On VALUES reduce production option(property_list_path_not_empty) ->
-- On SERVICE reduce production option(property_list_path_not_empty) ->
-- On RBRACE reduce production option(property_list_path_not_empty) ->
-- On OPTIONAL reduce production option(property_list_path_not_empty) ->
-- On MINUS reduce production option(property_list_path_not_empty) ->
-- On LBRACE reduce production option(property_list_path_not_empty) ->
-- On GRAPH reduce production option(property_list_path_not_empty) ->
-- On FILTER reduce production option(property_list_path_not_empty) ->
-- On DOT reduce production option(property_list_path_not_empty) ->
-- On BIND reduce production option(property_list_path_not_empty) ->

State 219:
option(property_list_path_not_empty) -> property_list_path_not_empty . [ VALUES SERVICE RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER DOT BIND ]
-- On VALUES reduce production option(property_list_path_not_empty) -> property_list_path_not_empty
-- On SERVICE reduce production option(property_list_path_not_empty) -> property_list_path_not_empty
-- On RBRACE reduce production option(property_list_path_not_empty) -> property_list_path_not_empty
-- On OPTIONAL reduce production option(property_list_path_not_empty) -> property_list_path_not_empty
-- On MINUS reduce production option(property_list_path_not_empty) -> property_list_path_not_empty
-- On LBRACE reduce production option(property_list_path_not_empty) -> property_list_path_not_empty
-- On GRAPH reduce production option(property_list_path_not_empty) -> property_list_path_not_empty
-- On FILTER reduce production option(property_list_path_not_empty) -> property_list_path_not_empty
-- On DOT reduce production option(property_list_path_not_empty) -> property_list_path_not_empty
-- On BIND reduce production option(property_list_path_not_empty) -> property_list_path_not_empty

State 220:
triples_same_subject_path -> triples_node_path property_list_path . [ VALUES SERVICE RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER DOT BIND ]
-- On VALUES reduce production triples_same_subject_path -> triples_node_path property_list_path
-- On SERVICE reduce production triples_same_subject_path -> triples_node_path property_list_path
-- On RBRACE reduce production triples_same_subject_path -> triples_node_path property_list_path
-- On OPTIONAL reduce production triples_same_subject_path -> triples_node_path property_list_path
-- On MINUS reduce production triples_same_subject_path -> triples_node_path property_list_path
-- On LBRACE reduce production triples_same_subject_path -> triples_node_path property_list_path
-- On GRAPH reduce production triples_same_subject_path -> triples_node_path property_list_path
-- On FILTER reduce production triples_same_subject_path -> triples_node_path property_list_path
-- On DOT reduce production triples_same_subject_path -> triples_node_path property_list_path
-- On BIND reduce production triples_same_subject_path -> triples_node_path property_list_path

State 221:
property_list_path -> option(property_list_path_not_empty) . [ VALUES SERVICE RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER DOT BIND ]
-- On VALUES reduce production property_list_path -> option(property_list_path_not_empty)
-- On SERVICE reduce production property_list_path -> option(property_list_path_not_empty)
-- On RBRACE reduce production property_list_path -> option(property_list_path_not_empty)
-- On OPTIONAL reduce production property_list_path -> option(property_list_path_not_empty)
-- On MINUS reduce production property_list_path -> option(property_list_path_not_empty)
-- On LBRACE reduce production property_list_path -> option(property_list_path_not_empty)
-- On GRAPH reduce production property_list_path -> option(property_list_path_not_empty)
-- On FILTER reduce production property_list_path -> option(property_list_path_not_empty)
-- On DOT reduce production property_list_path -> option(property_list_path_not_empty)
-- On BIND reduce production property_list_path -> option(property_list_path_not_empty)

State 222:
option(triples_block_details) -> triples_block_details . [ VALUES SERVICE RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER BIND ]
-- On VALUES reduce production option(triples_block_details) -> triples_block_details
-- On SERVICE reduce production option(triples_block_details) -> triples_block_details
-- On RBRACE reduce production option(triples_block_details) -> triples_block_details
-- On OPTIONAL reduce production option(triples_block_details) -> triples_block_details
-- On MINUS reduce production option(triples_block_details) -> triples_block_details
-- On LBRACE reduce production option(triples_block_details) -> triples_block_details
-- On GRAPH reduce production option(triples_block_details) -> triples_block_details
-- On FILTER reduce production option(triples_block_details) -> triples_block_details
-- On BIND reduce production option(triples_block_details) -> triples_block_details

State 223:
triples_block_details2 -> DOT option(triples_block_details) . [ VALUES SERVICE RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER BIND ]
-- On VALUES reduce production triples_block_details2 -> DOT option(triples_block_details)
-- On SERVICE reduce production triples_block_details2 -> DOT option(triples_block_details)
-- On RBRACE reduce production triples_block_details2 -> DOT option(triples_block_details)
-- On OPTIONAL reduce production triples_block_details2 -> DOT option(triples_block_details)
-- On MINUS reduce production triples_block_details2 -> DOT option(triples_block_details)
-- On LBRACE reduce production triples_block_details2 -> DOT option(triples_block_details)
-- On GRAPH reduce production triples_block_details2 -> DOT option(triples_block_details)
-- On FILTER reduce production triples_block_details2 -> DOT option(triples_block_details)
-- On BIND reduce production triples_block_details2 -> DOT option(triples_block_details)

State 224:
option(triples_block_details2) -> triples_block_details2 . [ VALUES SERVICE RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER BIND ]
-- On VALUES reduce production option(triples_block_details2) -> triples_block_details2
-- On SERVICE reduce production option(triples_block_details2) -> triples_block_details2
-- On RBRACE reduce production option(triples_block_details2) -> triples_block_details2
-- On OPTIONAL reduce production option(triples_block_details2) -> triples_block_details2
-- On MINUS reduce production option(triples_block_details2) -> triples_block_details2
-- On LBRACE reduce production option(triples_block_details2) -> triples_block_details2
-- On GRAPH reduce production option(triples_block_details2) -> triples_block_details2
-- On FILTER reduce production option(triples_block_details2) -> triples_block_details2
-- On BIND reduce production option(triples_block_details2) -> triples_block_details2

State 225:
triples_block_details -> triples_same_subject_path option(triples_block_details2) . [ VALUES SERVICE RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER BIND ]
-- On VALUES reduce production triples_block_details -> triples_same_subject_path option(triples_block_details2)
-- On SERVICE reduce production triples_block_details -> triples_same_subject_path option(triples_block_details2)
-- On RBRACE reduce production triples_block_details -> triples_same_subject_path option(triples_block_details2)
-- On OPTIONAL reduce production triples_block_details -> triples_same_subject_path option(triples_block_details2)
-- On MINUS reduce production triples_block_details -> triples_same_subject_path option(triples_block_details2)
-- On LBRACE reduce production triples_block_details -> triples_same_subject_path option(triples_block_details2)
-- On GRAPH reduce production triples_block_details -> triples_same_subject_path option(triples_block_details2)
-- On FILTER reduce production triples_block_details -> triples_same_subject_path option(triples_block_details2)
-- On BIND reduce production triples_block_details -> triples_same_subject_path option(triples_block_details2)

State 226:
triples_block -> triples_block_details . [ VALUES SERVICE RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER BIND ]
-- On VALUES reduce production triples_block -> triples_block_details
-- On SERVICE reduce production triples_block -> triples_block_details
-- On RBRACE reduce production triples_block -> triples_block_details
-- On OPTIONAL reduce production triples_block -> triples_block_details
-- On MINUS reduce production triples_block -> triples_block_details
-- On LBRACE reduce production triples_block -> triples_block_details
-- On GRAPH reduce production triples_block -> triples_block_details
-- On FILTER reduce production triples_block -> triples_block_details
-- On BIND reduce production triples_block -> triples_block_details

State 227:
option(triples_block) -> triples_block . [ VALUES SERVICE RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER BIND ]
-- On VALUES reduce production option(triples_block) -> triples_block
-- On SERVICE reduce production option(triples_block) -> triples_block
-- On RBRACE reduce production option(triples_block) -> triples_block
-- On OPTIONAL reduce production option(triples_block) -> triples_block
-- On MINUS reduce production option(triples_block) -> triples_block
-- On LBRACE reduce production option(triples_block) -> triples_block
-- On GRAPH reduce production option(triples_block) -> triples_block
-- On FILTER reduce production option(triples_block) -> triples_block
-- On BIND reduce production option(triples_block) -> triples_block

State 228:
group_graph_pattern -> LBRACE subselect . RBRACE [ YEAR Var2 Var1 VALUES UUID URI UNION UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GROUP GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On RBRACE shift to state 229

State 229:
group_graph_pattern -> LBRACE subselect RBRACE . [ YEAR Var2 Var1 VALUES UUID URI UNION UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GROUP GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On Var2 reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On Var1 reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On VALUES reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On UUID reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On URI reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On UNION reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On UCASE reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On TZ reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On TIMEZONE reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On String_literal reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On SUM reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On SUBSTR reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On STRUUID reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On STRSTARTS reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On STRLEN reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On STRLANG reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On STRENDS reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On STRDT reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On STRBEFORE reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On STRAFTER reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On STR reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On STAR reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On SLASH reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On SHA512 reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On SHA384 reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On SHA256 reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On SHA1 reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On SERVICE reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On SEMICOLON reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On SECONDS reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On SAMPLE reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On SAMETERM reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On RPAR reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On ROUND reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On REPLACE reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On REGEX reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On RBRACE reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On RAND reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On Pname_ns reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On Pname_ln reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On PLUS reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On PIPEPIPE reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On ORDER reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On OPTIONAL reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On OFFSET reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On NOW reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On NOTEQUAL reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On NOT reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On NIL reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On MONTH reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On MINUTES reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On MINUS reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On MIN reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On MD5 reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On MAX reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On LTE reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On LT reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On LPAR reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On LIMIT reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On LCASE reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On LBRACKET reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On LBRACE reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On LANGMATCHES reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On LANG reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On Iriref_ reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On Integer_positive reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On Integer_negative reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On Integer reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On ISURI reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On ISNUMERIC reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On ISLITERAL reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On ISIRI reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On ISBLANK reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On IRI reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On IN reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On IF reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On HOURS reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On HAVING reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On GTE reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On GT reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On GROUP_CONCAT reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On GROUP reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On GRAPH reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On FLOOR reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On FILTER reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On EXISTS reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On EQUAL reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On EOF reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On ENCODE_FOR_URI reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On Double_positive reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On Double_negative reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On Double reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On Decimal_positive reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On Decimal_negative reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On Decimal reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On DOT reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On DESC reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On DAY reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On DATATYPE reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On COUNT reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On CONTAINS reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On CONCAT reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On COMMA reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On COALESCE reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On CEIL reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On Boolean reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On Blank_node_label reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On BOUND reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On BNODE reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On BIND reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On BANG reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On AVG reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On ASC reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On AS reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On ANON reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On AMPAMP reduce production group_graph_pattern -> LBRACE subselect RBRACE
-- On ABS reduce production group_graph_pattern -> LBRACE subselect RBRACE

State 230:
subselect -> select_clause . where_clause solution_modifier values_clause [ RBRACE ]
-- On WHERE shift to state 231
-- On where_clause shift to state 232
-- On option(WHERE) shift to state 526
-- On LBRACE reduce production option(WHERE) ->

State 231:
option(WHERE) -> WHERE . [ LBRACE ]
-- On LBRACE reduce production option(WHERE) -> WHERE

State 232:
subselect -> select_clause where_clause . solution_modifier values_clause [ RBRACE ]
-- On GROUP shift to state 233
-- On solution_modifier shift to state 453
-- On option(group_clause) shift to state 488
-- On group_clause shift to state 525
-- On VALUES reduce production option(group_clause) ->
-- On RBRACE reduce production option(group_clause) ->
-- On ORDER reduce production option(group_clause) ->
-- On OFFSET reduce production option(group_clause) ->
-- On LIMIT reduce production option(group_clause) ->
-- On HAVING reduce production option(group_clause) ->

State 233:
group_clause -> GROUP . BY nonempty_list(group_condition) [ VALUES RBRACE ORDER OFFSET LIMIT HAVING EOF ]
-- On BY shift to state 234

State 234:
group_clause -> GROUP BY . nonempty_list(group_condition) [ VALUES RBRACE ORDER OFFSET LIMIT HAVING EOF ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 443
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On nonempty_list(group_condition) shift to state 444
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On group_var shift to state 445
-- On group_condition shift to state 446
-- On function_call shift to state 448
-- On expression shift to state 449
-- On built_in_call shift to state 452
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 235:
built_in_call -> MONTH . LPAR expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On LPAR shift to state 236

State 236:
built_in_call -> MONTH LPAR . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 441
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 237:
built_in_call -> MINUTES . LPAR expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On LPAR shift to state 238

State 238:
built_in_call -> MINUTES LPAR . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 439
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 239:
numexp -> MINUS . expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 438
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 240:
aggregate -> MIN . LPAR option(DISTINCT) expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On LPAR shift to state 241

State 241:
aggregate -> MIN LPAR . option(DISTINCT) expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On DISTINCT shift to state 34
-- On option(DISTINCT) shift to state 242
-- On YEAR reduce production option(DISTINCT) ->
-- On Var2 reduce production option(DISTINCT) ->
-- On Var1 reduce production option(DISTINCT) ->
-- On UUID reduce production option(DISTINCT) ->
-- On URI reduce production option(DISTINCT) ->
-- On UCASE reduce production option(DISTINCT) ->
-- On TZ reduce production option(DISTINCT) ->
-- On TIMEZONE reduce production option(DISTINCT) ->
-- On String_literal reduce production option(DISTINCT) ->
-- On SUM reduce production option(DISTINCT) ->
-- On SUBSTR reduce production option(DISTINCT) ->
-- On STRUUID reduce production option(DISTINCT) ->
-- On STRSTARTS reduce production option(DISTINCT) ->
-- On STRLEN reduce production option(DISTINCT) ->
-- On STRLANG reduce production option(DISTINCT) ->
-- On STRENDS reduce production option(DISTINCT) ->
-- On STRDT reduce production option(DISTINCT) ->
-- On STRBEFORE reduce production option(DISTINCT) ->
-- On STRAFTER reduce production option(DISTINCT) ->
-- On STR reduce production option(DISTINCT) ->
-- On SHA512 reduce production option(DISTINCT) ->
-- On SHA384 reduce production option(DISTINCT) ->
-- On SHA256 reduce production option(DISTINCT) ->
-- On SHA1 reduce production option(DISTINCT) ->
-- On SECONDS reduce production option(DISTINCT) ->
-- On SAMPLE reduce production option(DISTINCT) ->
-- On SAMETERM reduce production option(DISTINCT) ->
-- On ROUND reduce production option(DISTINCT) ->
-- On REPLACE reduce production option(DISTINCT) ->
-- On REGEX reduce production option(DISTINCT) ->
-- On RAND reduce production option(DISTINCT) ->
-- On Pname_ns reduce production option(DISTINCT) ->
-- On Pname_ln reduce production option(DISTINCT) ->
-- On PLUS reduce production option(DISTINCT) ->
-- On NOW reduce production option(DISTINCT) ->
-- On NOT reduce production option(DISTINCT) ->
-- On MONTH reduce production option(DISTINCT) ->
-- On MINUTES reduce production option(DISTINCT) ->
-- On MINUS reduce production option(DISTINCT) ->
-- On MIN reduce production option(DISTINCT) ->
-- On MD5 reduce production option(DISTINCT) ->
-- On MAX reduce production option(DISTINCT) ->
-- On LPAR reduce production option(DISTINCT) ->
-- On LCASE reduce production option(DISTINCT) ->
-- On LANGMATCHES reduce production option(DISTINCT) ->
-- On LANG reduce production option(DISTINCT) ->
-- On Iriref_ reduce production option(DISTINCT) ->
-- On Integer_positive reduce production option(DISTINCT) ->
-- On Integer_negative reduce production option(DISTINCT) ->
-- On Integer reduce production option(DISTINCT) ->
-- On ISURI reduce production option(DISTINCT) ->
-- On ISNUMERIC reduce production option(DISTINCT) ->
-- On ISLITERAL reduce production option(DISTINCT) ->
-- On ISIRI reduce production option(DISTINCT) ->
-- On ISBLANK reduce production option(DISTINCT) ->
-- On IRI reduce production option(DISTINCT) ->
-- On IF reduce production option(DISTINCT) ->
-- On HOURS reduce production option(DISTINCT) ->
-- On GROUP_CONCAT reduce production option(DISTINCT) ->
-- On FLOOR reduce production option(DISTINCT) ->
-- On EXISTS reduce production option(DISTINCT) ->
-- On ENCODE_FOR_URI reduce production option(DISTINCT) ->
-- On Double_positive reduce production option(DISTINCT) ->
-- On Double_negative reduce production option(DISTINCT) ->
-- On Double reduce production option(DISTINCT) ->
-- On Decimal_positive reduce production option(DISTINCT) ->
-- On Decimal_negative reduce production option(DISTINCT) ->
-- On Decimal reduce production option(DISTINCT) ->
-- On DAY reduce production option(DISTINCT) ->
-- On DATATYPE reduce production option(DISTINCT) ->
-- On COUNT reduce production option(DISTINCT) ->
-- On CONTAINS reduce production option(DISTINCT) ->
-- On CONCAT reduce production option(DISTINCT) ->
-- On COALESCE reduce production option(DISTINCT) ->
-- On CEIL reduce production option(DISTINCT) ->
-- On Boolean reduce production option(DISTINCT) ->
-- On BOUND reduce production option(DISTINCT) ->
-- On BNODE reduce production option(DISTINCT) ->
-- On BANG reduce production option(DISTINCT) ->
-- On AVG reduce production option(DISTINCT) ->
-- On ABS reduce production option(DISTINCT) ->

State 242:
aggregate -> MIN LPAR option(DISTINCT) . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 436
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 243:
built_in_call -> MD5 . LPAR expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On LPAR shift to state 244

State 244:
built_in_call -> MD5 LPAR . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 434
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 245:
aggregate -> MAX . LPAR option(DISTINCT) expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On LPAR shift to state 246

State 246:
aggregate -> MAX LPAR . option(DISTINCT) expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On DISTINCT shift to state 34
-- On option(DISTINCT) shift to state 247
-- On YEAR reduce production option(DISTINCT) ->
-- On Var2 reduce production option(DISTINCT) ->
-- On Var1 reduce production option(DISTINCT) ->
-- On UUID reduce production option(DISTINCT) ->
-- On URI reduce production option(DISTINCT) ->
-- On UCASE reduce production option(DISTINCT) ->
-- On TZ reduce production option(DISTINCT) ->
-- On TIMEZONE reduce production option(DISTINCT) ->
-- On String_literal reduce production option(DISTINCT) ->
-- On SUM reduce production option(DISTINCT) ->
-- On SUBSTR reduce production option(DISTINCT) ->
-- On STRUUID reduce production option(DISTINCT) ->
-- On STRSTARTS reduce production option(DISTINCT) ->
-- On STRLEN reduce production option(DISTINCT) ->
-- On STRLANG reduce production option(DISTINCT) ->
-- On STRENDS reduce production option(DISTINCT) ->
-- On STRDT reduce production option(DISTINCT) ->
-- On STRBEFORE reduce production option(DISTINCT) ->
-- On STRAFTER reduce production option(DISTINCT) ->
-- On STR reduce production option(DISTINCT) ->
-- On SHA512 reduce production option(DISTINCT) ->
-- On SHA384 reduce production option(DISTINCT) ->
-- On SHA256 reduce production option(DISTINCT) ->
-- On SHA1 reduce production option(DISTINCT) ->
-- On SECONDS reduce production option(DISTINCT) ->
-- On SAMPLE reduce production option(DISTINCT) ->
-- On SAMETERM reduce production option(DISTINCT) ->
-- On ROUND reduce production option(DISTINCT) ->
-- On REPLACE reduce production option(DISTINCT) ->
-- On REGEX reduce production option(DISTINCT) ->
-- On RAND reduce production option(DISTINCT) ->
-- On Pname_ns reduce production option(DISTINCT) ->
-- On Pname_ln reduce production option(DISTINCT) ->
-- On PLUS reduce production option(DISTINCT) ->
-- On NOW reduce production option(DISTINCT) ->
-- On NOT reduce production option(DISTINCT) ->
-- On MONTH reduce production option(DISTINCT) ->
-- On MINUTES reduce production option(DISTINCT) ->
-- On MINUS reduce production option(DISTINCT) ->
-- On MIN reduce production option(DISTINCT) ->
-- On MD5 reduce production option(DISTINCT) ->
-- On MAX reduce production option(DISTINCT) ->
-- On LPAR reduce production option(DISTINCT) ->
-- On LCASE reduce production option(DISTINCT) ->
-- On LANGMATCHES reduce production option(DISTINCT) ->
-- On LANG reduce production option(DISTINCT) ->
-- On Iriref_ reduce production option(DISTINCT) ->
-- On Integer_positive reduce production option(DISTINCT) ->
-- On Integer_negative reduce production option(DISTINCT) ->
-- On Integer reduce production option(DISTINCT) ->
-- On ISURI reduce production option(DISTINCT) ->
-- On ISNUMERIC reduce production option(DISTINCT) ->
-- On ISLITERAL reduce production option(DISTINCT) ->
-- On ISIRI reduce production option(DISTINCT) ->
-- On ISBLANK reduce production option(DISTINCT) ->
-- On IRI reduce production option(DISTINCT) ->
-- On IF reduce production option(DISTINCT) ->
-- On HOURS reduce production option(DISTINCT) ->
-- On GROUP_CONCAT reduce production option(DISTINCT) ->
-- On FLOOR reduce production option(DISTINCT) ->
-- On EXISTS reduce production option(DISTINCT) ->
-- On ENCODE_FOR_URI reduce production option(DISTINCT) ->
-- On Double_positive reduce production option(DISTINCT) ->
-- On Double_negative reduce production option(DISTINCT) ->
-- On Double reduce production option(DISTINCT) ->
-- On Decimal_positive reduce production option(DISTINCT) ->
-- On Decimal_negative reduce production option(DISTINCT) ->
-- On Decimal reduce production option(DISTINCT) ->
-- On DAY reduce production option(DISTINCT) ->
-- On DATATYPE reduce production option(DISTINCT) ->
-- On COUNT reduce production option(DISTINCT) ->
-- On CONTAINS reduce production option(DISTINCT) ->
-- On CONCAT reduce production option(DISTINCT) ->
-- On COALESCE reduce production option(DISTINCT) ->
-- On CEIL reduce production option(DISTINCT) ->
-- On Boolean reduce production option(DISTINCT) ->
-- On BOUND reduce production option(DISTINCT) ->
-- On BNODE reduce production option(DISTINCT) ->
-- On BANG reduce production option(DISTINCT) ->
-- On AVG reduce production option(DISTINCT) ->
-- On ABS reduce production option(DISTINCT) ->

State 247:
aggregate -> MAX LPAR option(DISTINCT) . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 432
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 248:
bracketted_expression -> LPAR . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 430
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 249:
built_in_call -> LCASE . LPAR expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On LPAR shift to state 250

State 250:
built_in_call -> LCASE LPAR . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 428
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 251:
built_in_call -> LANGMATCHES . LPAR expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On LPAR shift to state 252

State 252:
built_in_call -> LANGMATCHES LPAR . expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 424
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 253:
built_in_call -> LANG . LPAR expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On LPAR shift to state 254

State 254:
built_in_call -> LANG LPAR . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 422
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 255:
built_in_call -> ISURI . LPAR expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On LPAR shift to state 256

State 256:
built_in_call -> ISURI LPAR . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 420
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 257:
built_in_call -> ISNUMERIC . LPAR expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On LPAR shift to state 258

State 258:
built_in_call -> ISNUMERIC LPAR . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 418
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 259:
built_in_call -> ISLITERAL . LPAR expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On LPAR shift to state 260

State 260:
built_in_call -> ISLITERAL LPAR . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 416
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 261:
built_in_call -> ISIRI . LPAR expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On LPAR shift to state 262

State 262:
built_in_call -> ISIRI LPAR . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 414
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 263:
built_in_call -> ISBLANK . LPAR expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On LPAR shift to state 264

State 264:
built_in_call -> ISBLANK LPAR . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 412
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 265:
built_in_call -> IRI . LPAR expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On LPAR shift to state 266

State 266:
built_in_call -> IRI LPAR . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 410
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 267:
built_in_call -> IF . LPAR expression COMMA expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On LPAR shift to state 268

State 268:
built_in_call -> IF LPAR . expression COMMA expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 404
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 269:
built_in_call -> HOURS . LPAR expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On LPAR shift to state 270

State 270:
built_in_call -> HOURS LPAR . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 402
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 271:
aggregate -> GROUP_CONCAT . LPAR option(DISTINCT) expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
aggregate -> GROUP_CONCAT . LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On LPAR shift to state 272

State 272:
aggregate -> GROUP_CONCAT LPAR . option(DISTINCT) expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
aggregate -> GROUP_CONCAT LPAR . option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On DISTINCT shift to state 34
-- On option(DISTINCT) shift to state 273
-- On YEAR reduce production option(DISTINCT) ->
-- On Var2 reduce production option(DISTINCT) ->
-- On Var1 reduce production option(DISTINCT) ->
-- On UUID reduce production option(DISTINCT) ->
-- On URI reduce production option(DISTINCT) ->
-- On UCASE reduce production option(DISTINCT) ->
-- On TZ reduce production option(DISTINCT) ->
-- On TIMEZONE reduce production option(DISTINCT) ->
-- On String_literal reduce production option(DISTINCT) ->
-- On SUM reduce production option(DISTINCT) ->
-- On SUBSTR reduce production option(DISTINCT) ->
-- On STRUUID reduce production option(DISTINCT) ->
-- On STRSTARTS reduce production option(DISTINCT) ->
-- On STRLEN reduce production option(DISTINCT) ->
-- On STRLANG reduce production option(DISTINCT) ->
-- On STRENDS reduce production option(DISTINCT) ->
-- On STRDT reduce production option(DISTINCT) ->
-- On STRBEFORE reduce production option(DISTINCT) ->
-- On STRAFTER reduce production option(DISTINCT) ->
-- On STR reduce production option(DISTINCT) ->
-- On SHA512 reduce production option(DISTINCT) ->
-- On SHA384 reduce production option(DISTINCT) ->
-- On SHA256 reduce production option(DISTINCT) ->
-- On SHA1 reduce production option(DISTINCT) ->
-- On SECONDS reduce production option(DISTINCT) ->
-- On SAMPLE reduce production option(DISTINCT) ->
-- On SAMETERM reduce production option(DISTINCT) ->
-- On ROUND reduce production option(DISTINCT) ->
-- On REPLACE reduce production option(DISTINCT) ->
-- On REGEX reduce production option(DISTINCT) ->
-- On RAND reduce production option(DISTINCT) ->
-- On Pname_ns reduce production option(DISTINCT) ->
-- On Pname_ln reduce production option(DISTINCT) ->
-- On PLUS reduce production option(DISTINCT) ->
-- On NOW reduce production option(DISTINCT) ->
-- On NOT reduce production option(DISTINCT) ->
-- On MONTH reduce production option(DISTINCT) ->
-- On MINUTES reduce production option(DISTINCT) ->
-- On MINUS reduce production option(DISTINCT) ->
-- On MIN reduce production option(DISTINCT) ->
-- On MD5 reduce production option(DISTINCT) ->
-- On MAX reduce production option(DISTINCT) ->
-- On LPAR reduce production option(DISTINCT) ->
-- On LCASE reduce production option(DISTINCT) ->
-- On LANGMATCHES reduce production option(DISTINCT) ->
-- On LANG reduce production option(DISTINCT) ->
-- On Iriref_ reduce production option(DISTINCT) ->
-- On Integer_positive reduce production option(DISTINCT) ->
-- On Integer_negative reduce production option(DISTINCT) ->
-- On Integer reduce production option(DISTINCT) ->
-- On ISURI reduce production option(DISTINCT) ->
-- On ISNUMERIC reduce production option(DISTINCT) ->
-- On ISLITERAL reduce production option(DISTINCT) ->
-- On ISIRI reduce production option(DISTINCT) ->
-- On ISBLANK reduce production option(DISTINCT) ->
-- On IRI reduce production option(DISTINCT) ->
-- On IF reduce production option(DISTINCT) ->
-- On HOURS reduce production option(DISTINCT) ->
-- On GROUP_CONCAT reduce production option(DISTINCT) ->
-- On FLOOR reduce production option(DISTINCT) ->
-- On EXISTS reduce production option(DISTINCT) ->
-- On ENCODE_FOR_URI reduce production option(DISTINCT) ->
-- On Double_positive reduce production option(DISTINCT) ->
-- On Double_negative reduce production option(DISTINCT) ->
-- On Double reduce production option(DISTINCT) ->
-- On Decimal_positive reduce production option(DISTINCT) ->
-- On Decimal_negative reduce production option(DISTINCT) ->
-- On Decimal reduce production option(DISTINCT) ->
-- On DAY reduce production option(DISTINCT) ->
-- On DATATYPE reduce production option(DISTINCT) ->
-- On COUNT reduce production option(DISTINCT) ->
-- On CONTAINS reduce production option(DISTINCT) ->
-- On CONCAT reduce production option(DISTINCT) ->
-- On COALESCE reduce production option(DISTINCT) ->
-- On CEIL reduce production option(DISTINCT) ->
-- On Boolean reduce production option(DISTINCT) ->
-- On BOUND reduce production option(DISTINCT) ->
-- On BNODE reduce production option(DISTINCT) ->
-- On BANG reduce production option(DISTINCT) ->
-- On AVG reduce production option(DISTINCT) ->
-- On ABS reduce production option(DISTINCT) ->

State 273:
aggregate -> GROUP_CONCAT LPAR option(DISTINCT) . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
aggregate -> GROUP_CONCAT LPAR option(DISTINCT) . expression SEMICOLON SEPARATOR EQUAL string RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 395
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 274:
built_in_call -> FLOOR . LPAR expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On LPAR shift to state 275

State 275:
built_in_call -> FLOOR LPAR . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 393
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 276:
built_in_call -> EXISTS . group_graph_pattern [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On LBRACE shift to state 86
-- On group_graph_pattern shift to state 277

State 277:
built_in_call -> EXISTS group_graph_pattern . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production built_in_call -> EXISTS group_graph_pattern
-- On Var2 reduce production built_in_call -> EXISTS group_graph_pattern
-- On Var1 reduce production built_in_call -> EXISTS group_graph_pattern
-- On VALUES reduce production built_in_call -> EXISTS group_graph_pattern
-- On UUID reduce production built_in_call -> EXISTS group_graph_pattern
-- On URI reduce production built_in_call -> EXISTS group_graph_pattern
-- On UCASE reduce production built_in_call -> EXISTS group_graph_pattern
-- On TZ reduce production built_in_call -> EXISTS group_graph_pattern
-- On TIMEZONE reduce production built_in_call -> EXISTS group_graph_pattern
-- On String_literal reduce production built_in_call -> EXISTS group_graph_pattern
-- On SUM reduce production built_in_call -> EXISTS group_graph_pattern
-- On SUBSTR reduce production built_in_call -> EXISTS group_graph_pattern
-- On STRUUID reduce production built_in_call -> EXISTS group_graph_pattern
-- On STRSTARTS reduce production built_in_call -> EXISTS group_graph_pattern
-- On STRLEN reduce production built_in_call -> EXISTS group_graph_pattern
-- On STRLANG reduce production built_in_call -> EXISTS group_graph_pattern
-- On STRENDS reduce production built_in_call -> EXISTS group_graph_pattern
-- On STRDT reduce production built_in_call -> EXISTS group_graph_pattern
-- On STRBEFORE reduce production built_in_call -> EXISTS group_graph_pattern
-- On STRAFTER reduce production built_in_call -> EXISTS group_graph_pattern
-- On STR reduce production built_in_call -> EXISTS group_graph_pattern
-- On STAR reduce production built_in_call -> EXISTS group_graph_pattern
-- On SLASH reduce production built_in_call -> EXISTS group_graph_pattern
-- On SHA512 reduce production built_in_call -> EXISTS group_graph_pattern
-- On SHA384 reduce production built_in_call -> EXISTS group_graph_pattern
-- On SHA256 reduce production built_in_call -> EXISTS group_graph_pattern
-- On SHA1 reduce production built_in_call -> EXISTS group_graph_pattern
-- On SERVICE reduce production built_in_call -> EXISTS group_graph_pattern
-- On SEMICOLON reduce production built_in_call -> EXISTS group_graph_pattern
-- On SECONDS reduce production built_in_call -> EXISTS group_graph_pattern
-- On SAMPLE reduce production built_in_call -> EXISTS group_graph_pattern
-- On SAMETERM reduce production built_in_call -> EXISTS group_graph_pattern
-- On RPAR reduce production built_in_call -> EXISTS group_graph_pattern
-- On ROUND reduce production built_in_call -> EXISTS group_graph_pattern
-- On REPLACE reduce production built_in_call -> EXISTS group_graph_pattern
-- On REGEX reduce production built_in_call -> EXISTS group_graph_pattern
-- On RBRACE reduce production built_in_call -> EXISTS group_graph_pattern
-- On RAND reduce production built_in_call -> EXISTS group_graph_pattern
-- On Pname_ns reduce production built_in_call -> EXISTS group_graph_pattern
-- On Pname_ln reduce production built_in_call -> EXISTS group_graph_pattern
-- On PLUS reduce production built_in_call -> EXISTS group_graph_pattern
-- On PIPEPIPE reduce production built_in_call -> EXISTS group_graph_pattern
-- On ORDER reduce production built_in_call -> EXISTS group_graph_pattern
-- On OPTIONAL reduce production built_in_call -> EXISTS group_graph_pattern
-- On OFFSET reduce production built_in_call -> EXISTS group_graph_pattern
-- On NOW reduce production built_in_call -> EXISTS group_graph_pattern
-- On NOTEQUAL reduce production built_in_call -> EXISTS group_graph_pattern
-- On NOT reduce production built_in_call -> EXISTS group_graph_pattern
-- On NIL reduce production built_in_call -> EXISTS group_graph_pattern
-- On MONTH reduce production built_in_call -> EXISTS group_graph_pattern
-- On MINUTES reduce production built_in_call -> EXISTS group_graph_pattern
-- On MINUS reduce production built_in_call -> EXISTS group_graph_pattern
-- On MIN reduce production built_in_call -> EXISTS group_graph_pattern
-- On MD5 reduce production built_in_call -> EXISTS group_graph_pattern
-- On MAX reduce production built_in_call -> EXISTS group_graph_pattern
-- On LTE reduce production built_in_call -> EXISTS group_graph_pattern
-- On LT reduce production built_in_call -> EXISTS group_graph_pattern
-- On LPAR reduce production built_in_call -> EXISTS group_graph_pattern
-- On LIMIT reduce production built_in_call -> EXISTS group_graph_pattern
-- On LCASE reduce production built_in_call -> EXISTS group_graph_pattern
-- On LBRACKET reduce production built_in_call -> EXISTS group_graph_pattern
-- On LBRACE reduce production built_in_call -> EXISTS group_graph_pattern
-- On LANGMATCHES reduce production built_in_call -> EXISTS group_graph_pattern
-- On LANG reduce production built_in_call -> EXISTS group_graph_pattern
-- On Iriref_ reduce production built_in_call -> EXISTS group_graph_pattern
-- On Integer_positive reduce production built_in_call -> EXISTS group_graph_pattern
-- On Integer_negative reduce production built_in_call -> EXISTS group_graph_pattern
-- On Integer reduce production built_in_call -> EXISTS group_graph_pattern
-- On ISURI reduce production built_in_call -> EXISTS group_graph_pattern
-- On ISNUMERIC reduce production built_in_call -> EXISTS group_graph_pattern
-- On ISLITERAL reduce production built_in_call -> EXISTS group_graph_pattern
-- On ISIRI reduce production built_in_call -> EXISTS group_graph_pattern
-- On ISBLANK reduce production built_in_call -> EXISTS group_graph_pattern
-- On IRI reduce production built_in_call -> EXISTS group_graph_pattern
-- On IN reduce production built_in_call -> EXISTS group_graph_pattern
-- On IF reduce production built_in_call -> EXISTS group_graph_pattern
-- On HOURS reduce production built_in_call -> EXISTS group_graph_pattern
-- On HAVING reduce production built_in_call -> EXISTS group_graph_pattern
-- On GTE reduce production built_in_call -> EXISTS group_graph_pattern
-- On GT reduce production built_in_call -> EXISTS group_graph_pattern
-- On GROUP_CONCAT reduce production built_in_call -> EXISTS group_graph_pattern
-- On GRAPH reduce production built_in_call -> EXISTS group_graph_pattern
-- On FLOOR reduce production built_in_call -> EXISTS group_graph_pattern
-- On FILTER reduce production built_in_call -> EXISTS group_graph_pattern
-- On EXISTS reduce production built_in_call -> EXISTS group_graph_pattern
-- On EQUAL reduce production built_in_call -> EXISTS group_graph_pattern
-- On EOF reduce production built_in_call -> EXISTS group_graph_pattern
-- On ENCODE_FOR_URI reduce production built_in_call -> EXISTS group_graph_pattern
-- On Double_positive reduce production built_in_call -> EXISTS group_graph_pattern
-- On Double_negative reduce production built_in_call -> EXISTS group_graph_pattern
-- On Double reduce production built_in_call -> EXISTS group_graph_pattern
-- On Decimal_positive reduce production built_in_call -> EXISTS group_graph_pattern
-- On Decimal_negative reduce production built_in_call -> EXISTS group_graph_pattern
-- On Decimal reduce production built_in_call -> EXISTS group_graph_pattern
-- On DOT reduce production built_in_call -> EXISTS group_graph_pattern
-- On DESC reduce production built_in_call -> EXISTS group_graph_pattern
-- On DAY reduce production built_in_call -> EXISTS group_graph_pattern
-- On DATATYPE reduce production built_in_call -> EXISTS group_graph_pattern
-- On COUNT reduce production built_in_call -> EXISTS group_graph_pattern
-- On CONTAINS reduce production built_in_call -> EXISTS group_graph_pattern
-- On CONCAT reduce production built_in_call -> EXISTS group_graph_pattern
-- On COMMA reduce production built_in_call -> EXISTS group_graph_pattern
-- On COALESCE reduce production built_in_call -> EXISTS group_graph_pattern
-- On CEIL reduce production built_in_call -> EXISTS group_graph_pattern
-- On Boolean reduce production built_in_call -> EXISTS group_graph_pattern
-- On Blank_node_label reduce production built_in_call -> EXISTS group_graph_pattern
-- On BOUND reduce production built_in_call -> EXISTS group_graph_pattern
-- On BNODE reduce production built_in_call -> EXISTS group_graph_pattern
-- On BIND reduce production built_in_call -> EXISTS group_graph_pattern
-- On BANG reduce production built_in_call -> EXISTS group_graph_pattern
-- On AVG reduce production built_in_call -> EXISTS group_graph_pattern
-- On ASC reduce production built_in_call -> EXISTS group_graph_pattern
-- On AS reduce production built_in_call -> EXISTS group_graph_pattern
-- On ANON reduce production built_in_call -> EXISTS group_graph_pattern
-- On AMPAMP reduce production built_in_call -> EXISTS group_graph_pattern
-- On ABS reduce production built_in_call -> EXISTS group_graph_pattern

State 278:
built_in_call -> ENCODE_FOR_URI . LPAR expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On LPAR shift to state 279

State 279:
built_in_call -> ENCODE_FOR_URI LPAR . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 391
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 280:
built_in_call -> DAY . LPAR expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On LPAR shift to state 281

State 281:
built_in_call -> DAY LPAR . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 389
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 282:
built_in_call -> DATATYPE . LPAR expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On LPAR shift to state 283

State 283:
built_in_call -> DATATYPE LPAR . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 387
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 284:
aggregate -> COUNT . LPAR option(DISTINCT) STAR RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
aggregate -> COUNT . LPAR option(DISTINCT) expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On LPAR shift to state 285

State 285:
aggregate -> COUNT LPAR . option(DISTINCT) STAR RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
aggregate -> COUNT LPAR . option(DISTINCT) expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On DISTINCT shift to state 34
-- On option(DISTINCT) shift to state 286
-- On YEAR reduce production option(DISTINCT) ->
-- On Var2 reduce production option(DISTINCT) ->
-- On Var1 reduce production option(DISTINCT) ->
-- On UUID reduce production option(DISTINCT) ->
-- On URI reduce production option(DISTINCT) ->
-- On UCASE reduce production option(DISTINCT) ->
-- On TZ reduce production option(DISTINCT) ->
-- On TIMEZONE reduce production option(DISTINCT) ->
-- On String_literal reduce production option(DISTINCT) ->
-- On SUM reduce production option(DISTINCT) ->
-- On SUBSTR reduce production option(DISTINCT) ->
-- On STRUUID reduce production option(DISTINCT) ->
-- On STRSTARTS reduce production option(DISTINCT) ->
-- On STRLEN reduce production option(DISTINCT) ->
-- On STRLANG reduce production option(DISTINCT) ->
-- On STRENDS reduce production option(DISTINCT) ->
-- On STRDT reduce production option(DISTINCT) ->
-- On STRBEFORE reduce production option(DISTINCT) ->
-- On STRAFTER reduce production option(DISTINCT) ->
-- On STR reduce production option(DISTINCT) ->
-- On STAR reduce production option(DISTINCT) ->
-- On SHA512 reduce production option(DISTINCT) ->
-- On SHA384 reduce production option(DISTINCT) ->
-- On SHA256 reduce production option(DISTINCT) ->
-- On SHA1 reduce production option(DISTINCT) ->
-- On SECONDS reduce production option(DISTINCT) ->
-- On SAMPLE reduce production option(DISTINCT) ->
-- On SAMETERM reduce production option(DISTINCT) ->
-- On ROUND reduce production option(DISTINCT) ->
-- On REPLACE reduce production option(DISTINCT) ->
-- On REGEX reduce production option(DISTINCT) ->
-- On RAND reduce production option(DISTINCT) ->
-- On Pname_ns reduce production option(DISTINCT) ->
-- On Pname_ln reduce production option(DISTINCT) ->
-- On PLUS reduce production option(DISTINCT) ->
-- On NOW reduce production option(DISTINCT) ->
-- On NOT reduce production option(DISTINCT) ->
-- On MONTH reduce production option(DISTINCT) ->
-- On MINUTES reduce production option(DISTINCT) ->
-- On MINUS reduce production option(DISTINCT) ->
-- On MIN reduce production option(DISTINCT) ->
-- On MD5 reduce production option(DISTINCT) ->
-- On MAX reduce production option(DISTINCT) ->
-- On LPAR reduce production option(DISTINCT) ->
-- On LCASE reduce production option(DISTINCT) ->
-- On LANGMATCHES reduce production option(DISTINCT) ->
-- On LANG reduce production option(DISTINCT) ->
-- On Iriref_ reduce production option(DISTINCT) ->
-- On Integer_positive reduce production option(DISTINCT) ->
-- On Integer_negative reduce production option(DISTINCT) ->
-- On Integer reduce production option(DISTINCT) ->
-- On ISURI reduce production option(DISTINCT) ->
-- On ISNUMERIC reduce production option(DISTINCT) ->
-- On ISLITERAL reduce production option(DISTINCT) ->
-- On ISIRI reduce production option(DISTINCT) ->
-- On ISBLANK reduce production option(DISTINCT) ->
-- On IRI reduce production option(DISTINCT) ->
-- On IF reduce production option(DISTINCT) ->
-- On HOURS reduce production option(DISTINCT) ->
-- On GROUP_CONCAT reduce production option(DISTINCT) ->
-- On FLOOR reduce production option(DISTINCT) ->
-- On EXISTS reduce production option(DISTINCT) ->
-- On ENCODE_FOR_URI reduce production option(DISTINCT) ->
-- On Double_positive reduce production option(DISTINCT) ->
-- On Double_negative reduce production option(DISTINCT) ->
-- On Double reduce production option(DISTINCT) ->
-- On Decimal_positive reduce production option(DISTINCT) ->
-- On Decimal_negative reduce production option(DISTINCT) ->
-- On Decimal reduce production option(DISTINCT) ->
-- On DAY reduce production option(DISTINCT) ->
-- On DATATYPE reduce production option(DISTINCT) ->
-- On COUNT reduce production option(DISTINCT) ->
-- On CONTAINS reduce production option(DISTINCT) ->
-- On CONCAT reduce production option(DISTINCT) ->
-- On COALESCE reduce production option(DISTINCT) ->
-- On CEIL reduce production option(DISTINCT) ->
-- On Boolean reduce production option(DISTINCT) ->
-- On BOUND reduce production option(DISTINCT) ->
-- On BNODE reduce production option(DISTINCT) ->
-- On BANG reduce production option(DISTINCT) ->
-- On AVG reduce production option(DISTINCT) ->
-- On ABS reduce production option(DISTINCT) ->

State 286:
aggregate -> COUNT LPAR option(DISTINCT) . STAR RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
aggregate -> COUNT LPAR option(DISTINCT) . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On STAR shift to state 287
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 385
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 287:
aggregate -> COUNT LPAR option(DISTINCT) STAR . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On RPAR shift to state 288

State 288:
aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On Var2 reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On Var1 reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On VALUES reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On UUID reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On URI reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On UCASE reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On TZ reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On TIMEZONE reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On String_literal reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On SUM reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On SUBSTR reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On STRUUID reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On STRSTARTS reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On STRLEN reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On STRLANG reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On STRENDS reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On STRDT reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On STRBEFORE reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On STRAFTER reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On STR reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On STAR reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On SLASH reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On SHA512 reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On SHA384 reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On SHA256 reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On SHA1 reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On SERVICE reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On SEMICOLON reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On SECONDS reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On SAMPLE reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On SAMETERM reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On RPAR reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On ROUND reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On REPLACE reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On REGEX reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On RBRACE reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On RAND reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On Pname_ns reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On Pname_ln reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On PLUS reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On PIPEPIPE reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On ORDER reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On OPTIONAL reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On OFFSET reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On NOW reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On NOTEQUAL reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On NOT reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On NIL reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On MONTH reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On MINUTES reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On MINUS reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On MIN reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On MD5 reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On MAX reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On LTE reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On LT reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On LPAR reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On LIMIT reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On LCASE reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On LBRACKET reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On LBRACE reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On LANGMATCHES reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On LANG reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On Iriref_ reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On Integer_positive reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On Integer_negative reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On Integer reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On ISURI reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On ISNUMERIC reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On ISLITERAL reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On ISIRI reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On ISBLANK reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On IRI reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On IN reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On IF reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On HOURS reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On HAVING reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On GTE reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On GT reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On GROUP_CONCAT reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On GRAPH reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On FLOOR reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On FILTER reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On EXISTS reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On EQUAL reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On EOF reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On ENCODE_FOR_URI reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On Double_positive reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On Double_negative reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On Double reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On Decimal_positive reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On Decimal_negative reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On Decimal reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On DOT reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On DESC reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On DAY reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On DATATYPE reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On COUNT reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On CONTAINS reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On CONCAT reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On COMMA reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On COALESCE reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On CEIL reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On Boolean reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On Blank_node_label reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On BOUND reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On BNODE reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On BIND reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On BANG reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On AVG reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On ASC reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On AS reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On ANON reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On AMPAMP reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR
-- On ABS reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR

State 289:
built_in_call -> CONTAINS . LPAR expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On LPAR shift to state 290

State 290:
built_in_call -> CONTAINS LPAR . expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 381
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 291:
built_in_call -> CONCAT . expression_list [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On NIL shift to state 292
-- On LPAR shift to state 293
-- On expression_list shift to state 380

State 292:
expression_list -> NIL . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production expression_list -> NIL
-- On Var2 reduce production expression_list -> NIL
-- On Var1 reduce production expression_list -> NIL
-- On VALUES reduce production expression_list -> NIL
-- On UUID reduce production expression_list -> NIL
-- On URI reduce production expression_list -> NIL
-- On UCASE reduce production expression_list -> NIL
-- On TZ reduce production expression_list -> NIL
-- On TIMEZONE reduce production expression_list -> NIL
-- On String_literal reduce production expression_list -> NIL
-- On SUM reduce production expression_list -> NIL
-- On SUBSTR reduce production expression_list -> NIL
-- On STRUUID reduce production expression_list -> NIL
-- On STRSTARTS reduce production expression_list -> NIL
-- On STRLEN reduce production expression_list -> NIL
-- On STRLANG reduce production expression_list -> NIL
-- On STRENDS reduce production expression_list -> NIL
-- On STRDT reduce production expression_list -> NIL
-- On STRBEFORE reduce production expression_list -> NIL
-- On STRAFTER reduce production expression_list -> NIL
-- On STR reduce production expression_list -> NIL
-- On STAR reduce production expression_list -> NIL
-- On SLASH reduce production expression_list -> NIL
-- On SHA512 reduce production expression_list -> NIL
-- On SHA384 reduce production expression_list -> NIL
-- On SHA256 reduce production expression_list -> NIL
-- On SHA1 reduce production expression_list -> NIL
-- On SERVICE reduce production expression_list -> NIL
-- On SEMICOLON reduce production expression_list -> NIL
-- On SECONDS reduce production expression_list -> NIL
-- On SAMPLE reduce production expression_list -> NIL
-- On SAMETERM reduce production expression_list -> NIL
-- On RPAR reduce production expression_list -> NIL
-- On ROUND reduce production expression_list -> NIL
-- On REPLACE reduce production expression_list -> NIL
-- On REGEX reduce production expression_list -> NIL
-- On RBRACE reduce production expression_list -> NIL
-- On RAND reduce production expression_list -> NIL
-- On Pname_ns reduce production expression_list -> NIL
-- On Pname_ln reduce production expression_list -> NIL
-- On PLUS reduce production expression_list -> NIL
-- On PIPEPIPE reduce production expression_list -> NIL
-- On ORDER reduce production expression_list -> NIL
-- On OPTIONAL reduce production expression_list -> NIL
-- On OFFSET reduce production expression_list -> NIL
-- On NOW reduce production expression_list -> NIL
-- On NOTEQUAL reduce production expression_list -> NIL
-- On NOT reduce production expression_list -> NIL
-- On NIL reduce production expression_list -> NIL
-- On MONTH reduce production expression_list -> NIL
-- On MINUTES reduce production expression_list -> NIL
-- On MINUS reduce production expression_list -> NIL
-- On MIN reduce production expression_list -> NIL
-- On MD5 reduce production expression_list -> NIL
-- On MAX reduce production expression_list -> NIL
-- On LTE reduce production expression_list -> NIL
-- On LT reduce production expression_list -> NIL
-- On LPAR reduce production expression_list -> NIL
-- On LIMIT reduce production expression_list -> NIL
-- On LCASE reduce production expression_list -> NIL
-- On LBRACKET reduce production expression_list -> NIL
-- On LBRACE reduce production expression_list -> NIL
-- On LANGMATCHES reduce production expression_list -> NIL
-- On LANG reduce production expression_list -> NIL
-- On Iriref_ reduce production expression_list -> NIL
-- On Integer_positive reduce production expression_list -> NIL
-- On Integer_negative reduce production expression_list -> NIL
-- On Integer reduce production expression_list -> NIL
-- On ISURI reduce production expression_list -> NIL
-- On ISNUMERIC reduce production expression_list -> NIL
-- On ISLITERAL reduce production expression_list -> NIL
-- On ISIRI reduce production expression_list -> NIL
-- On ISBLANK reduce production expression_list -> NIL
-- On IRI reduce production expression_list -> NIL
-- On IN reduce production expression_list -> NIL
-- On IF reduce production expression_list -> NIL
-- On HOURS reduce production expression_list -> NIL
-- On HAVING reduce production expression_list -> NIL
-- On GTE reduce production expression_list -> NIL
-- On GT reduce production expression_list -> NIL
-- On GROUP_CONCAT reduce production expression_list -> NIL
-- On GRAPH reduce production expression_list -> NIL
-- On FLOOR reduce production expression_list -> NIL
-- On FILTER reduce production expression_list -> NIL
-- On EXISTS reduce production expression_list -> NIL
-- On EQUAL reduce production expression_list -> NIL
-- On EOF reduce production expression_list -> NIL
-- On ENCODE_FOR_URI reduce production expression_list -> NIL
-- On Double_positive reduce production expression_list -> NIL
-- On Double_negative reduce production expression_list -> NIL
-- On Double reduce production expression_list -> NIL
-- On Decimal_positive reduce production expression_list -> NIL
-- On Decimal_negative reduce production expression_list -> NIL
-- On Decimal reduce production expression_list -> NIL
-- On DOT reduce production expression_list -> NIL
-- On DESC reduce production expression_list -> NIL
-- On DAY reduce production expression_list -> NIL
-- On DATATYPE reduce production expression_list -> NIL
-- On COUNT reduce production expression_list -> NIL
-- On CONTAINS reduce production expression_list -> NIL
-- On CONCAT reduce production expression_list -> NIL
-- On COMMA reduce production expression_list -> NIL
-- On COALESCE reduce production expression_list -> NIL
-- On CEIL reduce production expression_list -> NIL
-- On Boolean reduce production expression_list -> NIL
-- On Blank_node_label reduce production expression_list -> NIL
-- On BOUND reduce production expression_list -> NIL
-- On BNODE reduce production expression_list -> NIL
-- On BIND reduce production expression_list -> NIL
-- On BANG reduce production expression_list -> NIL
-- On AVG reduce production expression_list -> NIL
-- On ASC reduce production expression_list -> NIL
-- On AS reduce production expression_list -> NIL
-- On ANON reduce production expression_list -> NIL
-- On AMPAMP reduce production expression_list -> NIL
-- On ABS reduce production expression_list -> NIL

State 293:
expression_list -> LPAR . separated_nonempty_list(COMMA,expression) RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On separated_nonempty_list(COMMA,expression) shift to state 378
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 333
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 294:
built_in_call -> COALESCE . expression_list [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On NIL shift to state 292
-- On LPAR shift to state 293
-- On expression_list shift to state 295

State 295:
built_in_call -> COALESCE expression_list . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production built_in_call -> COALESCE expression_list
-- On Var2 reduce production built_in_call -> COALESCE expression_list
-- On Var1 reduce production built_in_call -> COALESCE expression_list
-- On VALUES reduce production built_in_call -> COALESCE expression_list
-- On UUID reduce production built_in_call -> COALESCE expression_list
-- On URI reduce production built_in_call -> COALESCE expression_list
-- On UCASE reduce production built_in_call -> COALESCE expression_list
-- On TZ reduce production built_in_call -> COALESCE expression_list
-- On TIMEZONE reduce production built_in_call -> COALESCE expression_list
-- On String_literal reduce production built_in_call -> COALESCE expression_list
-- On SUM reduce production built_in_call -> COALESCE expression_list
-- On SUBSTR reduce production built_in_call -> COALESCE expression_list
-- On STRUUID reduce production built_in_call -> COALESCE expression_list
-- On STRSTARTS reduce production built_in_call -> COALESCE expression_list
-- On STRLEN reduce production built_in_call -> COALESCE expression_list
-- On STRLANG reduce production built_in_call -> COALESCE expression_list
-- On STRENDS reduce production built_in_call -> COALESCE expression_list
-- On STRDT reduce production built_in_call -> COALESCE expression_list
-- On STRBEFORE reduce production built_in_call -> COALESCE expression_list
-- On STRAFTER reduce production built_in_call -> COALESCE expression_list
-- On STR reduce production built_in_call -> COALESCE expression_list
-- On STAR reduce production built_in_call -> COALESCE expression_list
-- On SLASH reduce production built_in_call -> COALESCE expression_list
-- On SHA512 reduce production built_in_call -> COALESCE expression_list
-- On SHA384 reduce production built_in_call -> COALESCE expression_list
-- On SHA256 reduce production built_in_call -> COALESCE expression_list
-- On SHA1 reduce production built_in_call -> COALESCE expression_list
-- On SERVICE reduce production built_in_call -> COALESCE expression_list
-- On SEMICOLON reduce production built_in_call -> COALESCE expression_list
-- On SECONDS reduce production built_in_call -> COALESCE expression_list
-- On SAMPLE reduce production built_in_call -> COALESCE expression_list
-- On SAMETERM reduce production built_in_call -> COALESCE expression_list
-- On RPAR reduce production built_in_call -> COALESCE expression_list
-- On ROUND reduce production built_in_call -> COALESCE expression_list
-- On REPLACE reduce production built_in_call -> COALESCE expression_list
-- On REGEX reduce production built_in_call -> COALESCE expression_list
-- On RBRACE reduce production built_in_call -> COALESCE expression_list
-- On RAND reduce production built_in_call -> COALESCE expression_list
-- On Pname_ns reduce production built_in_call -> COALESCE expression_list
-- On Pname_ln reduce production built_in_call -> COALESCE expression_list
-- On PLUS reduce production built_in_call -> COALESCE expression_list
-- On PIPEPIPE reduce production built_in_call -> COALESCE expression_list
-- On ORDER reduce production built_in_call -> COALESCE expression_list
-- On OPTIONAL reduce production built_in_call -> COALESCE expression_list
-- On OFFSET reduce production built_in_call -> COALESCE expression_list
-- On NOW reduce production built_in_call -> COALESCE expression_list
-- On NOTEQUAL reduce production built_in_call -> COALESCE expression_list
-- On NOT reduce production built_in_call -> COALESCE expression_list
-- On NIL reduce production built_in_call -> COALESCE expression_list
-- On MONTH reduce production built_in_call -> COALESCE expression_list
-- On MINUTES reduce production built_in_call -> COALESCE expression_list
-- On MINUS reduce production built_in_call -> COALESCE expression_list
-- On MIN reduce production built_in_call -> COALESCE expression_list
-- On MD5 reduce production built_in_call -> COALESCE expression_list
-- On MAX reduce production built_in_call -> COALESCE expression_list
-- On LTE reduce production built_in_call -> COALESCE expression_list
-- On LT reduce production built_in_call -> COALESCE expression_list
-- On LPAR reduce production built_in_call -> COALESCE expression_list
-- On LIMIT reduce production built_in_call -> COALESCE expression_list
-- On LCASE reduce production built_in_call -> COALESCE expression_list
-- On LBRACKET reduce production built_in_call -> COALESCE expression_list
-- On LBRACE reduce production built_in_call -> COALESCE expression_list
-- On LANGMATCHES reduce production built_in_call -> COALESCE expression_list
-- On LANG reduce production built_in_call -> COALESCE expression_list
-- On Iriref_ reduce production built_in_call -> COALESCE expression_list
-- On Integer_positive reduce production built_in_call -> COALESCE expression_list
-- On Integer_negative reduce production built_in_call -> COALESCE expression_list
-- On Integer reduce production built_in_call -> COALESCE expression_list
-- On ISURI reduce production built_in_call -> COALESCE expression_list
-- On ISNUMERIC reduce production built_in_call -> COALESCE expression_list
-- On ISLITERAL reduce production built_in_call -> COALESCE expression_list
-- On ISIRI reduce production built_in_call -> COALESCE expression_list
-- On ISBLANK reduce production built_in_call -> COALESCE expression_list
-- On IRI reduce production built_in_call -> COALESCE expression_list
-- On IN reduce production built_in_call -> COALESCE expression_list
-- On IF reduce production built_in_call -> COALESCE expression_list
-- On HOURS reduce production built_in_call -> COALESCE expression_list
-- On HAVING reduce production built_in_call -> COALESCE expression_list
-- On GTE reduce production built_in_call -> COALESCE expression_list
-- On GT reduce production built_in_call -> COALESCE expression_list
-- On GROUP_CONCAT reduce production built_in_call -> COALESCE expression_list
-- On GRAPH reduce production built_in_call -> COALESCE expression_list
-- On FLOOR reduce production built_in_call -> COALESCE expression_list
-- On FILTER reduce production built_in_call -> COALESCE expression_list
-- On EXISTS reduce production built_in_call -> COALESCE expression_list
-- On EQUAL reduce production built_in_call -> COALESCE expression_list
-- On EOF reduce production built_in_call -> COALESCE expression_list
-- On ENCODE_FOR_URI reduce production built_in_call -> COALESCE expression_list
-- On Double_positive reduce production built_in_call -> COALESCE expression_list
-- On Double_negative reduce production built_in_call -> COALESCE expression_list
-- On Double reduce production built_in_call -> COALESCE expression_list
-- On Decimal_positive reduce production built_in_call -> COALESCE expression_list
-- On Decimal_negative reduce production built_in_call -> COALESCE expression_list
-- On Decimal reduce production built_in_call -> COALESCE expression_list
-- On DOT reduce production built_in_call -> COALESCE expression_list
-- On DESC reduce production built_in_call -> COALESCE expression_list
-- On DAY reduce production built_in_call -> COALESCE expression_list
-- On DATATYPE reduce production built_in_call -> COALESCE expression_list
-- On COUNT reduce production built_in_call -> COALESCE expression_list
-- On CONTAINS reduce production built_in_call -> COALESCE expression_list
-- On CONCAT reduce production built_in_call -> COALESCE expression_list
-- On COMMA reduce production built_in_call -> COALESCE expression_list
-- On COALESCE reduce production built_in_call -> COALESCE expression_list
-- On CEIL reduce production built_in_call -> COALESCE expression_list
-- On Boolean reduce production built_in_call -> COALESCE expression_list
-- On Blank_node_label reduce production built_in_call -> COALESCE expression_list
-- On BOUND reduce production built_in_call -> COALESCE expression_list
-- On BNODE reduce production built_in_call -> COALESCE expression_list
-- On BIND reduce production built_in_call -> COALESCE expression_list
-- On BANG reduce production built_in_call -> COALESCE expression_list
-- On AVG reduce production built_in_call -> COALESCE expression_list
-- On ASC reduce production built_in_call -> COALESCE expression_list
-- On AS reduce production built_in_call -> COALESCE expression_list
-- On ANON reduce production built_in_call -> COALESCE expression_list
-- On AMPAMP reduce production built_in_call -> COALESCE expression_list
-- On ABS reduce production built_in_call -> COALESCE expression_list

State 296:
built_in_call -> CEIL . LPAR expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On LPAR shift to state 297

State 297:
built_in_call -> CEIL LPAR . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 376
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 298:
built_in_call -> BOUND . LPAR var RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On LPAR shift to state 299

State 299:
built_in_call -> BOUND LPAR . var RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On var shift to state 300

State 300:
built_in_call -> BOUND LPAR var . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On RPAR shift to state 301

State 301:
built_in_call -> BOUND LPAR var RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production built_in_call -> BOUND LPAR var RPAR
-- On Var2 reduce production built_in_call -> BOUND LPAR var RPAR
-- On Var1 reduce production built_in_call -> BOUND LPAR var RPAR
-- On VALUES reduce production built_in_call -> BOUND LPAR var RPAR
-- On UUID reduce production built_in_call -> BOUND LPAR var RPAR
-- On URI reduce production built_in_call -> BOUND LPAR var RPAR
-- On UCASE reduce production built_in_call -> BOUND LPAR var RPAR
-- On TZ reduce production built_in_call -> BOUND LPAR var RPAR
-- On TIMEZONE reduce production built_in_call -> BOUND LPAR var RPAR
-- On String_literal reduce production built_in_call -> BOUND LPAR var RPAR
-- On SUM reduce production built_in_call -> BOUND LPAR var RPAR
-- On SUBSTR reduce production built_in_call -> BOUND LPAR var RPAR
-- On STRUUID reduce production built_in_call -> BOUND LPAR var RPAR
-- On STRSTARTS reduce production built_in_call -> BOUND LPAR var RPAR
-- On STRLEN reduce production built_in_call -> BOUND LPAR var RPAR
-- On STRLANG reduce production built_in_call -> BOUND LPAR var RPAR
-- On STRENDS reduce production built_in_call -> BOUND LPAR var RPAR
-- On STRDT reduce production built_in_call -> BOUND LPAR var RPAR
-- On STRBEFORE reduce production built_in_call -> BOUND LPAR var RPAR
-- On STRAFTER reduce production built_in_call -> BOUND LPAR var RPAR
-- On STR reduce production built_in_call -> BOUND LPAR var RPAR
-- On STAR reduce production built_in_call -> BOUND LPAR var RPAR
-- On SLASH reduce production built_in_call -> BOUND LPAR var RPAR
-- On SHA512 reduce production built_in_call -> BOUND LPAR var RPAR
-- On SHA384 reduce production built_in_call -> BOUND LPAR var RPAR
-- On SHA256 reduce production built_in_call -> BOUND LPAR var RPAR
-- On SHA1 reduce production built_in_call -> BOUND LPAR var RPAR
-- On SERVICE reduce production built_in_call -> BOUND LPAR var RPAR
-- On SEMICOLON reduce production built_in_call -> BOUND LPAR var RPAR
-- On SECONDS reduce production built_in_call -> BOUND LPAR var RPAR
-- On SAMPLE reduce production built_in_call -> BOUND LPAR var RPAR
-- On SAMETERM reduce production built_in_call -> BOUND LPAR var RPAR
-- On RPAR reduce production built_in_call -> BOUND LPAR var RPAR
-- On ROUND reduce production built_in_call -> BOUND LPAR var RPAR
-- On REPLACE reduce production built_in_call -> BOUND LPAR var RPAR
-- On REGEX reduce production built_in_call -> BOUND LPAR var RPAR
-- On RBRACE reduce production built_in_call -> BOUND LPAR var RPAR
-- On RAND reduce production built_in_call -> BOUND LPAR var RPAR
-- On Pname_ns reduce production built_in_call -> BOUND LPAR var RPAR
-- On Pname_ln reduce production built_in_call -> BOUND LPAR var RPAR
-- On PLUS reduce production built_in_call -> BOUND LPAR var RPAR
-- On PIPEPIPE reduce production built_in_call -> BOUND LPAR var RPAR
-- On ORDER reduce production built_in_call -> BOUND LPAR var RPAR
-- On OPTIONAL reduce production built_in_call -> BOUND LPAR var RPAR
-- On OFFSET reduce production built_in_call -> BOUND LPAR var RPAR
-- On NOW reduce production built_in_call -> BOUND LPAR var RPAR
-- On NOTEQUAL reduce production built_in_call -> BOUND LPAR var RPAR
-- On NOT reduce production built_in_call -> BOUND LPAR var RPAR
-- On NIL reduce production built_in_call -> BOUND LPAR var RPAR
-- On MONTH reduce production built_in_call -> BOUND LPAR var RPAR
-- On MINUTES reduce production built_in_call -> BOUND LPAR var RPAR
-- On MINUS reduce production built_in_call -> BOUND LPAR var RPAR
-- On MIN reduce production built_in_call -> BOUND LPAR var RPAR
-- On MD5 reduce production built_in_call -> BOUND LPAR var RPAR
-- On MAX reduce production built_in_call -> BOUND LPAR var RPAR
-- On LTE reduce production built_in_call -> BOUND LPAR var RPAR
-- On LT reduce production built_in_call -> BOUND LPAR var RPAR
-- On LPAR reduce production built_in_call -> BOUND LPAR var RPAR
-- On LIMIT reduce production built_in_call -> BOUND LPAR var RPAR
-- On LCASE reduce production built_in_call -> BOUND LPAR var RPAR
-- On LBRACKET reduce production built_in_call -> BOUND LPAR var RPAR
-- On LBRACE reduce production built_in_call -> BOUND LPAR var RPAR
-- On LANGMATCHES reduce production built_in_call -> BOUND LPAR var RPAR
-- On LANG reduce production built_in_call -> BOUND LPAR var RPAR
-- On Iriref_ reduce production built_in_call -> BOUND LPAR var RPAR
-- On Integer_positive reduce production built_in_call -> BOUND LPAR var RPAR
-- On Integer_negative reduce production built_in_call -> BOUND LPAR var RPAR
-- On Integer reduce production built_in_call -> BOUND LPAR var RPAR
-- On ISURI reduce production built_in_call -> BOUND LPAR var RPAR
-- On ISNUMERIC reduce production built_in_call -> BOUND LPAR var RPAR
-- On ISLITERAL reduce production built_in_call -> BOUND LPAR var RPAR
-- On ISIRI reduce production built_in_call -> BOUND LPAR var RPAR
-- On ISBLANK reduce production built_in_call -> BOUND LPAR var RPAR
-- On IRI reduce production built_in_call -> BOUND LPAR var RPAR
-- On IN reduce production built_in_call -> BOUND LPAR var RPAR
-- On IF reduce production built_in_call -> BOUND LPAR var RPAR
-- On HOURS reduce production built_in_call -> BOUND LPAR var RPAR
-- On HAVING reduce production built_in_call -> BOUND LPAR var RPAR
-- On GTE reduce production built_in_call -> BOUND LPAR var RPAR
-- On GT reduce production built_in_call -> BOUND LPAR var RPAR
-- On GROUP_CONCAT reduce production built_in_call -> BOUND LPAR var RPAR
-- On GRAPH reduce production built_in_call -> BOUND LPAR var RPAR
-- On FLOOR reduce production built_in_call -> BOUND LPAR var RPAR
-- On FILTER reduce production built_in_call -> BOUND LPAR var RPAR
-- On EXISTS reduce production built_in_call -> BOUND LPAR var RPAR
-- On EQUAL reduce production built_in_call -> BOUND LPAR var RPAR
-- On EOF reduce production built_in_call -> BOUND LPAR var RPAR
-- On ENCODE_FOR_URI reduce production built_in_call -> BOUND LPAR var RPAR
-- On Double_positive reduce production built_in_call -> BOUND LPAR var RPAR
-- On Double_negative reduce production built_in_call -> BOUND LPAR var RPAR
-- On Double reduce production built_in_call -> BOUND LPAR var RPAR
-- On Decimal_positive reduce production built_in_call -> BOUND LPAR var RPAR
-- On Decimal_negative reduce production built_in_call -> BOUND LPAR var RPAR
-- On Decimal reduce production built_in_call -> BOUND LPAR var RPAR
-- On DOT reduce production built_in_call -> BOUND LPAR var RPAR
-- On DESC reduce production built_in_call -> BOUND LPAR var RPAR
-- On DAY reduce production built_in_call -> BOUND LPAR var RPAR
-- On DATATYPE reduce production built_in_call -> BOUND LPAR var RPAR
-- On COUNT reduce production built_in_call -> BOUND LPAR var RPAR
-- On CONTAINS reduce production built_in_call -> BOUND LPAR var RPAR
-- On CONCAT reduce production built_in_call -> BOUND LPAR var RPAR
-- On COMMA reduce production built_in_call -> BOUND LPAR var RPAR
-- On COALESCE reduce production built_in_call -> BOUND LPAR var RPAR
-- On CEIL reduce production built_in_call -> BOUND LPAR var RPAR
-- On Boolean reduce production built_in_call -> BOUND LPAR var RPAR
-- On Blank_node_label reduce production built_in_call -> BOUND LPAR var RPAR
-- On BOUND reduce production built_in_call -> BOUND LPAR var RPAR
-- On BNODE reduce production built_in_call -> BOUND LPAR var RPAR
-- On BIND reduce production built_in_call -> BOUND LPAR var RPAR
-- On BANG reduce production built_in_call -> BOUND LPAR var RPAR
-- On AVG reduce production built_in_call -> BOUND LPAR var RPAR
-- On ASC reduce production built_in_call -> BOUND LPAR var RPAR
-- On AS reduce production built_in_call -> BOUND LPAR var RPAR
-- On ANON reduce production built_in_call -> BOUND LPAR var RPAR
-- On AMPAMP reduce production built_in_call -> BOUND LPAR var RPAR
-- On ABS reduce production built_in_call -> BOUND LPAR var RPAR

State 302:
built_in_call -> BNODE . LPAR expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
built_in_call -> BNODE . NIL [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On NIL shift to state 303
-- On LPAR shift to state 304

State 303:
built_in_call -> BNODE NIL . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production built_in_call -> BNODE NIL
-- On Var2 reduce production built_in_call -> BNODE NIL
-- On Var1 reduce production built_in_call -> BNODE NIL
-- On VALUES reduce production built_in_call -> BNODE NIL
-- On UUID reduce production built_in_call -> BNODE NIL
-- On URI reduce production built_in_call -> BNODE NIL
-- On UCASE reduce production built_in_call -> BNODE NIL
-- On TZ reduce production built_in_call -> BNODE NIL
-- On TIMEZONE reduce production built_in_call -> BNODE NIL
-- On String_literal reduce production built_in_call -> BNODE NIL
-- On SUM reduce production built_in_call -> BNODE NIL
-- On SUBSTR reduce production built_in_call -> BNODE NIL
-- On STRUUID reduce production built_in_call -> BNODE NIL
-- On STRSTARTS reduce production built_in_call -> BNODE NIL
-- On STRLEN reduce production built_in_call -> BNODE NIL
-- On STRLANG reduce production built_in_call -> BNODE NIL
-- On STRENDS reduce production built_in_call -> BNODE NIL
-- On STRDT reduce production built_in_call -> BNODE NIL
-- On STRBEFORE reduce production built_in_call -> BNODE NIL
-- On STRAFTER reduce production built_in_call -> BNODE NIL
-- On STR reduce production built_in_call -> BNODE NIL
-- On STAR reduce production built_in_call -> BNODE NIL
-- On SLASH reduce production built_in_call -> BNODE NIL
-- On SHA512 reduce production built_in_call -> BNODE NIL
-- On SHA384 reduce production built_in_call -> BNODE NIL
-- On SHA256 reduce production built_in_call -> BNODE NIL
-- On SHA1 reduce production built_in_call -> BNODE NIL
-- On SERVICE reduce production built_in_call -> BNODE NIL
-- On SEMICOLON reduce production built_in_call -> BNODE NIL
-- On SECONDS reduce production built_in_call -> BNODE NIL
-- On SAMPLE reduce production built_in_call -> BNODE NIL
-- On SAMETERM reduce production built_in_call -> BNODE NIL
-- On RPAR reduce production built_in_call -> BNODE NIL
-- On ROUND reduce production built_in_call -> BNODE NIL
-- On REPLACE reduce production built_in_call -> BNODE NIL
-- On REGEX reduce production built_in_call -> BNODE NIL
-- On RBRACE reduce production built_in_call -> BNODE NIL
-- On RAND reduce production built_in_call -> BNODE NIL
-- On Pname_ns reduce production built_in_call -> BNODE NIL
-- On Pname_ln reduce production built_in_call -> BNODE NIL
-- On PLUS reduce production built_in_call -> BNODE NIL
-- On PIPEPIPE reduce production built_in_call -> BNODE NIL
-- On ORDER reduce production built_in_call -> BNODE NIL
-- On OPTIONAL reduce production built_in_call -> BNODE NIL
-- On OFFSET reduce production built_in_call -> BNODE NIL
-- On NOW reduce production built_in_call -> BNODE NIL
-- On NOTEQUAL reduce production built_in_call -> BNODE NIL
-- On NOT reduce production built_in_call -> BNODE NIL
-- On NIL reduce production built_in_call -> BNODE NIL
-- On MONTH reduce production built_in_call -> BNODE NIL
-- On MINUTES reduce production built_in_call -> BNODE NIL
-- On MINUS reduce production built_in_call -> BNODE NIL
-- On MIN reduce production built_in_call -> BNODE NIL
-- On MD5 reduce production built_in_call -> BNODE NIL
-- On MAX reduce production built_in_call -> BNODE NIL
-- On LTE reduce production built_in_call -> BNODE NIL
-- On LT reduce production built_in_call -> BNODE NIL
-- On LPAR reduce production built_in_call -> BNODE NIL
-- On LIMIT reduce production built_in_call -> BNODE NIL
-- On LCASE reduce production built_in_call -> BNODE NIL
-- On LBRACKET reduce production built_in_call -> BNODE NIL
-- On LBRACE reduce production built_in_call -> BNODE NIL
-- On LANGMATCHES reduce production built_in_call -> BNODE NIL
-- On LANG reduce production built_in_call -> BNODE NIL
-- On Iriref_ reduce production built_in_call -> BNODE NIL
-- On Integer_positive reduce production built_in_call -> BNODE NIL
-- On Integer_negative reduce production built_in_call -> BNODE NIL
-- On Integer reduce production built_in_call -> BNODE NIL
-- On ISURI reduce production built_in_call -> BNODE NIL
-- On ISNUMERIC reduce production built_in_call -> BNODE NIL
-- On ISLITERAL reduce production built_in_call -> BNODE NIL
-- On ISIRI reduce production built_in_call -> BNODE NIL
-- On ISBLANK reduce production built_in_call -> BNODE NIL
-- On IRI reduce production built_in_call -> BNODE NIL
-- On IN reduce production built_in_call -> BNODE NIL
-- On IF reduce production built_in_call -> BNODE NIL
-- On HOURS reduce production built_in_call -> BNODE NIL
-- On HAVING reduce production built_in_call -> BNODE NIL
-- On GTE reduce production built_in_call -> BNODE NIL
-- On GT reduce production built_in_call -> BNODE NIL
-- On GROUP_CONCAT reduce production built_in_call -> BNODE NIL
-- On GRAPH reduce production built_in_call -> BNODE NIL
-- On FLOOR reduce production built_in_call -> BNODE NIL
-- On FILTER reduce production built_in_call -> BNODE NIL
-- On EXISTS reduce production built_in_call -> BNODE NIL
-- On EQUAL reduce production built_in_call -> BNODE NIL
-- On EOF reduce production built_in_call -> BNODE NIL
-- On ENCODE_FOR_URI reduce production built_in_call -> BNODE NIL
-- On Double_positive reduce production built_in_call -> BNODE NIL
-- On Double_negative reduce production built_in_call -> BNODE NIL
-- On Double reduce production built_in_call -> BNODE NIL
-- On Decimal_positive reduce production built_in_call -> BNODE NIL
-- On Decimal_negative reduce production built_in_call -> BNODE NIL
-- On Decimal reduce production built_in_call -> BNODE NIL
-- On DOT reduce production built_in_call -> BNODE NIL
-- On DESC reduce production built_in_call -> BNODE NIL
-- On DAY reduce production built_in_call -> BNODE NIL
-- On DATATYPE reduce production built_in_call -> BNODE NIL
-- On COUNT reduce production built_in_call -> BNODE NIL
-- On CONTAINS reduce production built_in_call -> BNODE NIL
-- On CONCAT reduce production built_in_call -> BNODE NIL
-- On COMMA reduce production built_in_call -> BNODE NIL
-- On COALESCE reduce production built_in_call -> BNODE NIL
-- On CEIL reduce production built_in_call -> BNODE NIL
-- On Boolean reduce production built_in_call -> BNODE NIL
-- On Blank_node_label reduce production built_in_call -> BNODE NIL
-- On BOUND reduce production built_in_call -> BNODE NIL
-- On BNODE reduce production built_in_call -> BNODE NIL
-- On BIND reduce production built_in_call -> BNODE NIL
-- On BANG reduce production built_in_call -> BNODE NIL
-- On AVG reduce production built_in_call -> BNODE NIL
-- On ASC reduce production built_in_call -> BNODE NIL
-- On AS reduce production built_in_call -> BNODE NIL
-- On ANON reduce production built_in_call -> BNODE NIL
-- On AMPAMP reduce production built_in_call -> BNODE NIL
-- On ABS reduce production built_in_call -> BNODE NIL

State 304:
built_in_call -> BNODE LPAR . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 374
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 305:
numexp -> BANG . expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 373
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 306:
aggregate -> AVG . LPAR option(DISTINCT) expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On LPAR shift to state 307

State 307:
aggregate -> AVG LPAR . option(DISTINCT) expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On DISTINCT shift to state 34
-- On option(DISTINCT) shift to state 308
-- On YEAR reduce production option(DISTINCT) ->
-- On Var2 reduce production option(DISTINCT) ->
-- On Var1 reduce production option(DISTINCT) ->
-- On UUID reduce production option(DISTINCT) ->
-- On URI reduce production option(DISTINCT) ->
-- On UCASE reduce production option(DISTINCT) ->
-- On TZ reduce production option(DISTINCT) ->
-- On TIMEZONE reduce production option(DISTINCT) ->
-- On String_literal reduce production option(DISTINCT) ->
-- On SUM reduce production option(DISTINCT) ->
-- On SUBSTR reduce production option(DISTINCT) ->
-- On STRUUID reduce production option(DISTINCT) ->
-- On STRSTARTS reduce production option(DISTINCT) ->
-- On STRLEN reduce production option(DISTINCT) ->
-- On STRLANG reduce production option(DISTINCT) ->
-- On STRENDS reduce production option(DISTINCT) ->
-- On STRDT reduce production option(DISTINCT) ->
-- On STRBEFORE reduce production option(DISTINCT) ->
-- On STRAFTER reduce production option(DISTINCT) ->
-- On STR reduce production option(DISTINCT) ->
-- On SHA512 reduce production option(DISTINCT) ->
-- On SHA384 reduce production option(DISTINCT) ->
-- On SHA256 reduce production option(DISTINCT) ->
-- On SHA1 reduce production option(DISTINCT) ->
-- On SECONDS reduce production option(DISTINCT) ->
-- On SAMPLE reduce production option(DISTINCT) ->
-- On SAMETERM reduce production option(DISTINCT) ->
-- On ROUND reduce production option(DISTINCT) ->
-- On REPLACE reduce production option(DISTINCT) ->
-- On REGEX reduce production option(DISTINCT) ->
-- On RAND reduce production option(DISTINCT) ->
-- On Pname_ns reduce production option(DISTINCT) ->
-- On Pname_ln reduce production option(DISTINCT) ->
-- On PLUS reduce production option(DISTINCT) ->
-- On NOW reduce production option(DISTINCT) ->
-- On NOT reduce production option(DISTINCT) ->
-- On MONTH reduce production option(DISTINCT) ->
-- On MINUTES reduce production option(DISTINCT) ->
-- On MINUS reduce production option(DISTINCT) ->
-- On MIN reduce production option(DISTINCT) ->
-- On MD5 reduce production option(DISTINCT) ->
-- On MAX reduce production option(DISTINCT) ->
-- On LPAR reduce production option(DISTINCT) ->
-- On LCASE reduce production option(DISTINCT) ->
-- On LANGMATCHES reduce production option(DISTINCT) ->
-- On LANG reduce production option(DISTINCT) ->
-- On Iriref_ reduce production option(DISTINCT) ->
-- On Integer_positive reduce production option(DISTINCT) ->
-- On Integer_negative reduce production option(DISTINCT) ->
-- On Integer reduce production option(DISTINCT) ->
-- On ISURI reduce production option(DISTINCT) ->
-- On ISNUMERIC reduce production option(DISTINCT) ->
-- On ISLITERAL reduce production option(DISTINCT) ->
-- On ISIRI reduce production option(DISTINCT) ->
-- On ISBLANK reduce production option(DISTINCT) ->
-- On IRI reduce production option(DISTINCT) ->
-- On IF reduce production option(DISTINCT) ->
-- On HOURS reduce production option(DISTINCT) ->
-- On GROUP_CONCAT reduce production option(DISTINCT) ->
-- On FLOOR reduce production option(DISTINCT) ->
-- On EXISTS reduce production option(DISTINCT) ->
-- On ENCODE_FOR_URI reduce production option(DISTINCT) ->
-- On Double_positive reduce production option(DISTINCT) ->
-- On Double_negative reduce production option(DISTINCT) ->
-- On Double reduce production option(DISTINCT) ->
-- On Decimal_positive reduce production option(DISTINCT) ->
-- On Decimal_negative reduce production option(DISTINCT) ->
-- On Decimal reduce production option(DISTINCT) ->
-- On DAY reduce production option(DISTINCT) ->
-- On DATATYPE reduce production option(DISTINCT) ->
-- On COUNT reduce production option(DISTINCT) ->
-- On CONTAINS reduce production option(DISTINCT) ->
-- On CONCAT reduce production option(DISTINCT) ->
-- On COALESCE reduce production option(DISTINCT) ->
-- On CEIL reduce production option(DISTINCT) ->
-- On Boolean reduce production option(DISTINCT) ->
-- On BOUND reduce production option(DISTINCT) ->
-- On BNODE reduce production option(DISTINCT) ->
-- On BANG reduce production option(DISTINCT) ->
-- On AVG reduce production option(DISTINCT) ->
-- On ABS reduce production option(DISTINCT) ->

State 308:
aggregate -> AVG LPAR option(DISTINCT) . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 371
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 309:
built_in_call -> ABS . LPAR expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On LPAR shift to state 310

State 310:
built_in_call -> ABS LPAR . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 369
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 311:
primary_expression -> var . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
-- On YEAR reduce production primary_expression -> var
-- On Var2 reduce production primary_expression -> var
-- On Var1 reduce production primary_expression -> var
-- On VALUES reduce production primary_expression -> var
-- On UUID reduce production primary_expression -> var
-- On URI reduce production primary_expression -> var
-- On UCASE reduce production primary_expression -> var
-- On TZ reduce production primary_expression -> var
-- On TIMEZONE reduce production primary_expression -> var
-- On String_literal reduce production primary_expression -> var
-- On SUM reduce production primary_expression -> var
-- On SUBSTR reduce production primary_expression -> var
-- On STRUUID reduce production primary_expression -> var
-- On STRSTARTS reduce production primary_expression -> var
-- On STRLEN reduce production primary_expression -> var
-- On STRLANG reduce production primary_expression -> var
-- On STRENDS reduce production primary_expression -> var
-- On STRDT reduce production primary_expression -> var
-- On STRBEFORE reduce production primary_expression -> var
-- On STRAFTER reduce production primary_expression -> var
-- On STR reduce production primary_expression -> var
-- On STAR reduce production primary_expression -> var
-- On SLASH reduce production primary_expression -> var
-- On SHA512 reduce production primary_expression -> var
-- On SHA384 reduce production primary_expression -> var
-- On SHA256 reduce production primary_expression -> var
-- On SHA1 reduce production primary_expression -> var
-- On SEMICOLON reduce production primary_expression -> var
-- On SECONDS reduce production primary_expression -> var
-- On SAMPLE reduce production primary_expression -> var
-- On SAMETERM reduce production primary_expression -> var
-- On RPAR reduce production primary_expression -> var
-- On ROUND reduce production primary_expression -> var
-- On REPLACE reduce production primary_expression -> var
-- On REGEX reduce production primary_expression -> var
-- On RBRACE reduce production primary_expression -> var
-- On RAND reduce production primary_expression -> var
-- On Pname_ns reduce production primary_expression -> var
-- On Pname_ln reduce production primary_expression -> var
-- On PLUS reduce production primary_expression -> var
-- On PIPEPIPE reduce production primary_expression -> var
-- On ORDER reduce production primary_expression -> var
-- On OFFSET reduce production primary_expression -> var
-- On NOW reduce production primary_expression -> var
-- On NOTEQUAL reduce production primary_expression -> var
-- On NOT reduce production primary_expression -> var
-- On MONTH reduce production primary_expression -> var
-- On MINUTES reduce production primary_expression -> var
-- On MINUS reduce production primary_expression -> var
-- On MIN reduce production primary_expression -> var
-- On MD5 reduce production primary_expression -> var
-- On MAX reduce production primary_expression -> var
-- On LTE reduce production primary_expression -> var
-- On LT reduce production primary_expression -> var
-- On LPAR reduce production primary_expression -> var
-- On LIMIT reduce production primary_expression -> var
-- On LCASE reduce production primary_expression -> var
-- On LANGMATCHES reduce production primary_expression -> var
-- On LANG reduce production primary_expression -> var
-- On Iriref_ reduce production primary_expression -> var
-- On Integer_positive reduce production primary_expression -> var
-- On Integer_negative reduce production primary_expression -> var
-- On Integer reduce production primary_expression -> var
-- On ISURI reduce production primary_expression -> var
-- On ISNUMERIC reduce production primary_expression -> var
-- On ISLITERAL reduce production primary_expression -> var
-- On ISIRI reduce production primary_expression -> var
-- On ISBLANK reduce production primary_expression -> var
-- On IRI reduce production primary_expression -> var
-- On IN reduce production primary_expression -> var
-- On IF reduce production primary_expression -> var
-- On HOURS reduce production primary_expression -> var
-- On HAVING reduce production primary_expression -> var
-- On GTE reduce production primary_expression -> var
-- On GT reduce production primary_expression -> var
-- On GROUP_CONCAT reduce production primary_expression -> var
-- On FLOOR reduce production primary_expression -> var
-- On EXISTS reduce production primary_expression -> var
-- On EQUAL reduce production primary_expression -> var
-- On EOF reduce production primary_expression -> var
-- On ENCODE_FOR_URI reduce production primary_expression -> var
-- On Double_positive reduce production primary_expression -> var
-- On Double_negative reduce production primary_expression -> var
-- On Double reduce production primary_expression -> var
-- On Decimal_positive reduce production primary_expression -> var
-- On Decimal_negative reduce production primary_expression -> var
-- On Decimal reduce production primary_expression -> var
-- On DAY reduce production primary_expression -> var
-- On DATATYPE reduce production primary_expression -> var
-- On COUNT reduce production primary_expression -> var
-- On CONTAINS reduce production primary_expression -> var
-- On CONCAT reduce production primary_expression -> var
-- On COMMA reduce production primary_expression -> var
-- On COALESCE reduce production primary_expression -> var
-- On CEIL reduce production primary_expression -> var
-- On Boolean reduce production primary_expression -> var
-- On BOUND reduce production primary_expression -> var
-- On BNODE reduce production primary_expression -> var
-- On BANG reduce production primary_expression -> var
-- On AVG reduce production primary_expression -> var
-- On AS reduce production primary_expression -> var
-- On AMPAMP reduce production primary_expression -> var
-- On ABS reduce production primary_expression -> var

State 312:
expression -> value_logical . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
value_logical -> value_logical . AMPAMP value_logical [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
value_logical -> value_logical . PIPEPIPE value_logical [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
-- On PIPEPIPE shift to state 313
-- On AMPAMP shift to state 367
-- On YEAR reduce production expression -> value_logical
-- On Var2 reduce production expression -> value_logical
-- On Var1 reduce production expression -> value_logical
-- On VALUES reduce production expression -> value_logical
-- On UUID reduce production expression -> value_logical
-- On URI reduce production expression -> value_logical
-- On UCASE reduce production expression -> value_logical
-- On TZ reduce production expression -> value_logical
-- On TIMEZONE reduce production expression -> value_logical
-- On String_literal reduce production expression -> value_logical
-- On SUM reduce production expression -> value_logical
-- On SUBSTR reduce production expression -> value_logical
-- On STRUUID reduce production expression -> value_logical
-- On STRSTARTS reduce production expression -> value_logical
-- On STRLEN reduce production expression -> value_logical
-- On STRLANG reduce production expression -> value_logical
-- On STRENDS reduce production expression -> value_logical
-- On STRDT reduce production expression -> value_logical
-- On STRBEFORE reduce production expression -> value_logical
-- On STRAFTER reduce production expression -> value_logical
-- On STR reduce production expression -> value_logical
-- On STAR reduce production expression -> value_logical
-- On SLASH reduce production expression -> value_logical
-- On SHA512 reduce production expression -> value_logical
-- On SHA384 reduce production expression -> value_logical
-- On SHA256 reduce production expression -> value_logical
-- On SHA1 reduce production expression -> value_logical
-- On SEMICOLON reduce production expression -> value_logical
-- On SECONDS reduce production expression -> value_logical
-- On SAMPLE reduce production expression -> value_logical
-- On SAMETERM reduce production expression -> value_logical
-- On RPAR reduce production expression -> value_logical
-- On ROUND reduce production expression -> value_logical
-- On REPLACE reduce production expression -> value_logical
-- On REGEX reduce production expression -> value_logical
-- On RBRACE reduce production expression -> value_logical
-- On RAND reduce production expression -> value_logical
-- On Pname_ns reduce production expression -> value_logical
-- On Pname_ln reduce production expression -> value_logical
-- On PLUS reduce production expression -> value_logical
-- On PIPEPIPE reduce production expression -> value_logical
-- On ORDER reduce production expression -> value_logical
-- On OFFSET reduce production expression -> value_logical
-- On NOW reduce production expression -> value_logical
-- On NOTEQUAL reduce production expression -> value_logical
-- On NOT reduce production expression -> value_logical
-- On MONTH reduce production expression -> value_logical
-- On MINUTES reduce production expression -> value_logical
-- On MINUS reduce production expression -> value_logical
-- On MIN reduce production expression -> value_logical
-- On MD5 reduce production expression -> value_logical
-- On MAX reduce production expression -> value_logical
-- On LTE reduce production expression -> value_logical
-- On LT reduce production expression -> value_logical
-- On LPAR reduce production expression -> value_logical
-- On LIMIT reduce production expression -> value_logical
-- On LCASE reduce production expression -> value_logical
-- On LANGMATCHES reduce production expression -> value_logical
-- On LANG reduce production expression -> value_logical
-- On Iriref_ reduce production expression -> value_logical
-- On Integer_positive reduce production expression -> value_logical
-- On Integer_negative reduce production expression -> value_logical
-- On Integer reduce production expression -> value_logical
-- On ISURI reduce production expression -> value_logical
-- On ISNUMERIC reduce production expression -> value_logical
-- On ISLITERAL reduce production expression -> value_logical
-- On ISIRI reduce production expression -> value_logical
-- On ISBLANK reduce production expression -> value_logical
-- On IRI reduce production expression -> value_logical
-- On IN reduce production expression -> value_logical
-- On IF reduce production expression -> value_logical
-- On HOURS reduce production expression -> value_logical
-- On HAVING reduce production expression -> value_logical
-- On GTE reduce production expression -> value_logical
-- On GT reduce production expression -> value_logical
-- On GROUP_CONCAT reduce production expression -> value_logical
-- On FLOOR reduce production expression -> value_logical
-- On EXISTS reduce production expression -> value_logical
-- On EQUAL reduce production expression -> value_logical
-- On EOF reduce production expression -> value_logical
-- On ENCODE_FOR_URI reduce production expression -> value_logical
-- On Double_positive reduce production expression -> value_logical
-- On Double_negative reduce production expression -> value_logical
-- On Double reduce production expression -> value_logical
-- On Decimal_positive reduce production expression -> value_logical
-- On Decimal_negative reduce production expression -> value_logical
-- On Decimal reduce production expression -> value_logical
-- On DAY reduce production expression -> value_logical
-- On DATATYPE reduce production expression -> value_logical
-- On COUNT reduce production expression -> value_logical
-- On CONTAINS reduce production expression -> value_logical
-- On CONCAT reduce production expression -> value_logical
-- On COMMA reduce production expression -> value_logical
-- On COALESCE reduce production expression -> value_logical
-- On CEIL reduce production expression -> value_logical
-- On Boolean reduce production expression -> value_logical
-- On BOUND reduce production expression -> value_logical
-- On BNODE reduce production expression -> value_logical
-- On BANG reduce production expression -> value_logical
-- On AVG reduce production expression -> value_logical
-- On AS reduce production expression -> value_logical
-- On AMPAMP reduce production expression -> value_logical
-- On ABS reduce production expression -> value_logical
** Conflict on PIPEPIPE AMPAMP

State 313:
value_logical -> value_logical PIPEPIPE . value_logical [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 314
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 351
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 314:
expression -> value_logical . [ STAR SLASH PLUS MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative ]
value_logical -> value_logical . AMPAMP value_logical [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
value_logical -> value_logical . PIPEPIPE value_logical [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
value_logical -> value_logical PIPEPIPE value_logical . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
-- On YEAR reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On Var2 reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On Var1 reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On VALUES reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On UUID reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On URI reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On UCASE reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On TZ reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On TIMEZONE reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On String_literal reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On SUM reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On SUBSTR reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On STRUUID reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On STRSTARTS reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On STRLEN reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On STRLANG reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On STRENDS reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On STRDT reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On STRBEFORE reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On STRAFTER reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On STR reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On STAR reduce production expression -> value_logical
-- On STAR reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On SLASH reduce production expression -> value_logical
-- On SLASH reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On SHA512 reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On SHA384 reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On SHA256 reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On SHA1 reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On SEMICOLON reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On SECONDS reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On SAMPLE reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On SAMETERM reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On RPAR reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On ROUND reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On REPLACE reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On REGEX reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On RBRACE reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On RAND reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On Pname_ns reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On Pname_ln reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On PLUS reduce production expression -> value_logical
-- On PLUS reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On PIPEPIPE reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On ORDER reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On OFFSET reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On NOW reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On NOTEQUAL reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On NOT reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On MONTH reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On MINUTES reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On MINUS reduce production expression -> value_logical
-- On MINUS reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On MIN reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On MD5 reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On MAX reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On LTE reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On LT reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On LPAR reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On LIMIT reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On LCASE reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On LANGMATCHES reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On LANG reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On Iriref_ reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On Integer_positive reduce production expression -> value_logical
-- On Integer_positive reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On Integer_negative reduce production expression -> value_logical
-- On Integer_negative reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On Integer reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On ISURI reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On ISNUMERIC reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On ISLITERAL reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On ISIRI reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On ISBLANK reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On IRI reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On IN reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On IF reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On HOURS reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On HAVING reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On GTE reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On GT reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On GROUP_CONCAT reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On FLOOR reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On EXISTS reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On EQUAL reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On EOF reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On ENCODE_FOR_URI reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On Double_positive reduce production expression -> value_logical
-- On Double_positive reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On Double_negative reduce production expression -> value_logical
-- On Double_negative reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On Double reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On Decimal_positive reduce production expression -> value_logical
-- On Decimal_positive reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On Decimal_negative reduce production expression -> value_logical
-- On Decimal_negative reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On Decimal reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On DAY reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On DATATYPE reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On COUNT reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On CONTAINS reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On CONCAT reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On COMMA reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On COALESCE reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On CEIL reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On Boolean reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On BOUND reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On BNODE reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On BANG reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On AVG reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On AS reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On AMPAMP reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On ABS reduce production value_logical -> value_logical PIPEPIPE value_logical
** Conflict on STAR SLASH PLUS MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative

State 315:
built_in_call -> substring_expression . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production built_in_call -> substring_expression
-- On Var2 reduce production built_in_call -> substring_expression
-- On Var1 reduce production built_in_call -> substring_expression
-- On VALUES reduce production built_in_call -> substring_expression
-- On UUID reduce production built_in_call -> substring_expression
-- On URI reduce production built_in_call -> substring_expression
-- On UCASE reduce production built_in_call -> substring_expression
-- On TZ reduce production built_in_call -> substring_expression
-- On TIMEZONE reduce production built_in_call -> substring_expression
-- On String_literal reduce production built_in_call -> substring_expression
-- On SUM reduce production built_in_call -> substring_expression
-- On SUBSTR reduce production built_in_call -> substring_expression
-- On STRUUID reduce production built_in_call -> substring_expression
-- On STRSTARTS reduce production built_in_call -> substring_expression
-- On STRLEN reduce production built_in_call -> substring_expression
-- On STRLANG reduce production built_in_call -> substring_expression
-- On STRENDS reduce production built_in_call -> substring_expression
-- On STRDT reduce production built_in_call -> substring_expression
-- On STRBEFORE reduce production built_in_call -> substring_expression
-- On STRAFTER reduce production built_in_call -> substring_expression
-- On STR reduce production built_in_call -> substring_expression
-- On STAR reduce production built_in_call -> substring_expression
-- On SLASH reduce production built_in_call -> substring_expression
-- On SHA512 reduce production built_in_call -> substring_expression
-- On SHA384 reduce production built_in_call -> substring_expression
-- On SHA256 reduce production built_in_call -> substring_expression
-- On SHA1 reduce production built_in_call -> substring_expression
-- On SERVICE reduce production built_in_call -> substring_expression
-- On SEMICOLON reduce production built_in_call -> substring_expression
-- On SECONDS reduce production built_in_call -> substring_expression
-- On SAMPLE reduce production built_in_call -> substring_expression
-- On SAMETERM reduce production built_in_call -> substring_expression
-- On RPAR reduce production built_in_call -> substring_expression
-- On ROUND reduce production built_in_call -> substring_expression
-- On REPLACE reduce production built_in_call -> substring_expression
-- On REGEX reduce production built_in_call -> substring_expression
-- On RBRACE reduce production built_in_call -> substring_expression
-- On RAND reduce production built_in_call -> substring_expression
-- On Pname_ns reduce production built_in_call -> substring_expression
-- On Pname_ln reduce production built_in_call -> substring_expression
-- On PLUS reduce production built_in_call -> substring_expression
-- On PIPEPIPE reduce production built_in_call -> substring_expression
-- On ORDER reduce production built_in_call -> substring_expression
-- On OPTIONAL reduce production built_in_call -> substring_expression
-- On OFFSET reduce production built_in_call -> substring_expression
-- On NOW reduce production built_in_call -> substring_expression
-- On NOTEQUAL reduce production built_in_call -> substring_expression
-- On NOT reduce production built_in_call -> substring_expression
-- On NIL reduce production built_in_call -> substring_expression
-- On MONTH reduce production built_in_call -> substring_expression
-- On MINUTES reduce production built_in_call -> substring_expression
-- On MINUS reduce production built_in_call -> substring_expression
-- On MIN reduce production built_in_call -> substring_expression
-- On MD5 reduce production built_in_call -> substring_expression
-- On MAX reduce production built_in_call -> substring_expression
-- On LTE reduce production built_in_call -> substring_expression
-- On LT reduce production built_in_call -> substring_expression
-- On LPAR reduce production built_in_call -> substring_expression
-- On LIMIT reduce production built_in_call -> substring_expression
-- On LCASE reduce production built_in_call -> substring_expression
-- On LBRACKET reduce production built_in_call -> substring_expression
-- On LBRACE reduce production built_in_call -> substring_expression
-- On LANGMATCHES reduce production built_in_call -> substring_expression
-- On LANG reduce production built_in_call -> substring_expression
-- On Iriref_ reduce production built_in_call -> substring_expression
-- On Integer_positive reduce production built_in_call -> substring_expression
-- On Integer_negative reduce production built_in_call -> substring_expression
-- On Integer reduce production built_in_call -> substring_expression
-- On ISURI reduce production built_in_call -> substring_expression
-- On ISNUMERIC reduce production built_in_call -> substring_expression
-- On ISLITERAL reduce production built_in_call -> substring_expression
-- On ISIRI reduce production built_in_call -> substring_expression
-- On ISBLANK reduce production built_in_call -> substring_expression
-- On IRI reduce production built_in_call -> substring_expression
-- On IN reduce production built_in_call -> substring_expression
-- On IF reduce production built_in_call -> substring_expression
-- On HOURS reduce production built_in_call -> substring_expression
-- On HAVING reduce production built_in_call -> substring_expression
-- On GTE reduce production built_in_call -> substring_expression
-- On GT reduce production built_in_call -> substring_expression
-- On GROUP_CONCAT reduce production built_in_call -> substring_expression
-- On GRAPH reduce production built_in_call -> substring_expression
-- On FLOOR reduce production built_in_call -> substring_expression
-- On FILTER reduce production built_in_call -> substring_expression
-- On EXISTS reduce production built_in_call -> substring_expression
-- On EQUAL reduce production built_in_call -> substring_expression
-- On EOF reduce production built_in_call -> substring_expression
-- On ENCODE_FOR_URI reduce production built_in_call -> substring_expression
-- On Double_positive reduce production built_in_call -> substring_expression
-- On Double_negative reduce production built_in_call -> substring_expression
-- On Double reduce production built_in_call -> substring_expression
-- On Decimal_positive reduce production built_in_call -> substring_expression
-- On Decimal_negative reduce production built_in_call -> substring_expression
-- On Decimal reduce production built_in_call -> substring_expression
-- On DOT reduce production built_in_call -> substring_expression
-- On DESC reduce production built_in_call -> substring_expression
-- On DAY reduce production built_in_call -> substring_expression
-- On DATATYPE reduce production built_in_call -> substring_expression
-- On COUNT reduce production built_in_call -> substring_expression
-- On CONTAINS reduce production built_in_call -> substring_expression
-- On CONCAT reduce production built_in_call -> substring_expression
-- On COMMA reduce production built_in_call -> substring_expression
-- On COALESCE reduce production built_in_call -> substring_expression
-- On CEIL reduce production built_in_call -> substring_expression
-- On Boolean reduce production built_in_call -> substring_expression
-- On Blank_node_label reduce production built_in_call -> substring_expression
-- On BOUND reduce production built_in_call -> substring_expression
-- On BNODE reduce production built_in_call -> substring_expression
-- On BIND reduce production built_in_call -> substring_expression
-- On BANG reduce production built_in_call -> substring_expression
-- On AVG reduce production built_in_call -> substring_expression
-- On ASC reduce production built_in_call -> substring_expression
-- On AS reduce production built_in_call -> substring_expression
-- On ANON reduce production built_in_call -> substring_expression
-- On AMPAMP reduce production built_in_call -> substring_expression
-- On ABS reduce production built_in_call -> substring_expression

State 316:
built_in_call -> str_replace_expression . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production built_in_call -> str_replace_expression
-- On Var2 reduce production built_in_call -> str_replace_expression
-- On Var1 reduce production built_in_call -> str_replace_expression
-- On VALUES reduce production built_in_call -> str_replace_expression
-- On UUID reduce production built_in_call -> str_replace_expression
-- On URI reduce production built_in_call -> str_replace_expression
-- On UCASE reduce production built_in_call -> str_replace_expression
-- On TZ reduce production built_in_call -> str_replace_expression
-- On TIMEZONE reduce production built_in_call -> str_replace_expression
-- On String_literal reduce production built_in_call -> str_replace_expression
-- On SUM reduce production built_in_call -> str_replace_expression
-- On SUBSTR reduce production built_in_call -> str_replace_expression
-- On STRUUID reduce production built_in_call -> str_replace_expression
-- On STRSTARTS reduce production built_in_call -> str_replace_expression
-- On STRLEN reduce production built_in_call -> str_replace_expression
-- On STRLANG reduce production built_in_call -> str_replace_expression
-- On STRENDS reduce production built_in_call -> str_replace_expression
-- On STRDT reduce production built_in_call -> str_replace_expression
-- On STRBEFORE reduce production built_in_call -> str_replace_expression
-- On STRAFTER reduce production built_in_call -> str_replace_expression
-- On STR reduce production built_in_call -> str_replace_expression
-- On STAR reduce production built_in_call -> str_replace_expression
-- On SLASH reduce production built_in_call -> str_replace_expression
-- On SHA512 reduce production built_in_call -> str_replace_expression
-- On SHA384 reduce production built_in_call -> str_replace_expression
-- On SHA256 reduce production built_in_call -> str_replace_expression
-- On SHA1 reduce production built_in_call -> str_replace_expression
-- On SERVICE reduce production built_in_call -> str_replace_expression
-- On SEMICOLON reduce production built_in_call -> str_replace_expression
-- On SECONDS reduce production built_in_call -> str_replace_expression
-- On SAMPLE reduce production built_in_call -> str_replace_expression
-- On SAMETERM reduce production built_in_call -> str_replace_expression
-- On RPAR reduce production built_in_call -> str_replace_expression
-- On ROUND reduce production built_in_call -> str_replace_expression
-- On REPLACE reduce production built_in_call -> str_replace_expression
-- On REGEX reduce production built_in_call -> str_replace_expression
-- On RBRACE reduce production built_in_call -> str_replace_expression
-- On RAND reduce production built_in_call -> str_replace_expression
-- On Pname_ns reduce production built_in_call -> str_replace_expression
-- On Pname_ln reduce production built_in_call -> str_replace_expression
-- On PLUS reduce production built_in_call -> str_replace_expression
-- On PIPEPIPE reduce production built_in_call -> str_replace_expression
-- On ORDER reduce production built_in_call -> str_replace_expression
-- On OPTIONAL reduce production built_in_call -> str_replace_expression
-- On OFFSET reduce production built_in_call -> str_replace_expression
-- On NOW reduce production built_in_call -> str_replace_expression
-- On NOTEQUAL reduce production built_in_call -> str_replace_expression
-- On NOT reduce production built_in_call -> str_replace_expression
-- On NIL reduce production built_in_call -> str_replace_expression
-- On MONTH reduce production built_in_call -> str_replace_expression
-- On MINUTES reduce production built_in_call -> str_replace_expression
-- On MINUS reduce production built_in_call -> str_replace_expression
-- On MIN reduce production built_in_call -> str_replace_expression
-- On MD5 reduce production built_in_call -> str_replace_expression
-- On MAX reduce production built_in_call -> str_replace_expression
-- On LTE reduce production built_in_call -> str_replace_expression
-- On LT reduce production built_in_call -> str_replace_expression
-- On LPAR reduce production built_in_call -> str_replace_expression
-- On LIMIT reduce production built_in_call -> str_replace_expression
-- On LCASE reduce production built_in_call -> str_replace_expression
-- On LBRACKET reduce production built_in_call -> str_replace_expression
-- On LBRACE reduce production built_in_call -> str_replace_expression
-- On LANGMATCHES reduce production built_in_call -> str_replace_expression
-- On LANG reduce production built_in_call -> str_replace_expression
-- On Iriref_ reduce production built_in_call -> str_replace_expression
-- On Integer_positive reduce production built_in_call -> str_replace_expression
-- On Integer_negative reduce production built_in_call -> str_replace_expression
-- On Integer reduce production built_in_call -> str_replace_expression
-- On ISURI reduce production built_in_call -> str_replace_expression
-- On ISNUMERIC reduce production built_in_call -> str_replace_expression
-- On ISLITERAL reduce production built_in_call -> str_replace_expression
-- On ISIRI reduce production built_in_call -> str_replace_expression
-- On ISBLANK reduce production built_in_call -> str_replace_expression
-- On IRI reduce production built_in_call -> str_replace_expression
-- On IN reduce production built_in_call -> str_replace_expression
-- On IF reduce production built_in_call -> str_replace_expression
-- On HOURS reduce production built_in_call -> str_replace_expression
-- On HAVING reduce production built_in_call -> str_replace_expression
-- On GTE reduce production built_in_call -> str_replace_expression
-- On GT reduce production built_in_call -> str_replace_expression
-- On GROUP_CONCAT reduce production built_in_call -> str_replace_expression
-- On GRAPH reduce production built_in_call -> str_replace_expression
-- On FLOOR reduce production built_in_call -> str_replace_expression
-- On FILTER reduce production built_in_call -> str_replace_expression
-- On EXISTS reduce production built_in_call -> str_replace_expression
-- On EQUAL reduce production built_in_call -> str_replace_expression
-- On EOF reduce production built_in_call -> str_replace_expression
-- On ENCODE_FOR_URI reduce production built_in_call -> str_replace_expression
-- On Double_positive reduce production built_in_call -> str_replace_expression
-- On Double_negative reduce production built_in_call -> str_replace_expression
-- On Double reduce production built_in_call -> str_replace_expression
-- On Decimal_positive reduce production built_in_call -> str_replace_expression
-- On Decimal_negative reduce production built_in_call -> str_replace_expression
-- On Decimal reduce production built_in_call -> str_replace_expression
-- On DOT reduce production built_in_call -> str_replace_expression
-- On DESC reduce production built_in_call -> str_replace_expression
-- On DAY reduce production built_in_call -> str_replace_expression
-- On DATATYPE reduce production built_in_call -> str_replace_expression
-- On COUNT reduce production built_in_call -> str_replace_expression
-- On CONTAINS reduce production built_in_call -> str_replace_expression
-- On CONCAT reduce production built_in_call -> str_replace_expression
-- On COMMA reduce production built_in_call -> str_replace_expression
-- On COALESCE reduce production built_in_call -> str_replace_expression
-- On CEIL reduce production built_in_call -> str_replace_expression
-- On Boolean reduce production built_in_call -> str_replace_expression
-- On Blank_node_label reduce production built_in_call -> str_replace_expression
-- On BOUND reduce production built_in_call -> str_replace_expression
-- On BNODE reduce production built_in_call -> str_replace_expression
-- On BIND reduce production built_in_call -> str_replace_expression
-- On BANG reduce production built_in_call -> str_replace_expression
-- On AVG reduce production built_in_call -> str_replace_expression
-- On ASC reduce production built_in_call -> str_replace_expression
-- On AS reduce production built_in_call -> str_replace_expression
-- On ANON reduce production built_in_call -> str_replace_expression
-- On AMPAMP reduce production built_in_call -> str_replace_expression
-- On ABS reduce production built_in_call -> str_replace_expression

State 317:
value_logical -> relational_expression . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
-- On YEAR reduce production value_logical -> relational_expression
-- On Var2 reduce production value_logical -> relational_expression
-- On Var1 reduce production value_logical -> relational_expression
-- On VALUES reduce production value_logical -> relational_expression
-- On UUID reduce production value_logical -> relational_expression
-- On URI reduce production value_logical -> relational_expression
-- On UCASE reduce production value_logical -> relational_expression
-- On TZ reduce production value_logical -> relational_expression
-- On TIMEZONE reduce production value_logical -> relational_expression
-- On String_literal reduce production value_logical -> relational_expression
-- On SUM reduce production value_logical -> relational_expression
-- On SUBSTR reduce production value_logical -> relational_expression
-- On STRUUID reduce production value_logical -> relational_expression
-- On STRSTARTS reduce production value_logical -> relational_expression
-- On STRLEN reduce production value_logical -> relational_expression
-- On STRLANG reduce production value_logical -> relational_expression
-- On STRENDS reduce production value_logical -> relational_expression
-- On STRDT reduce production value_logical -> relational_expression
-- On STRBEFORE reduce production value_logical -> relational_expression
-- On STRAFTER reduce production value_logical -> relational_expression
-- On STR reduce production value_logical -> relational_expression
-- On STAR reduce production value_logical -> relational_expression
-- On SLASH reduce production value_logical -> relational_expression
-- On SHA512 reduce production value_logical -> relational_expression
-- On SHA384 reduce production value_logical -> relational_expression
-- On SHA256 reduce production value_logical -> relational_expression
-- On SHA1 reduce production value_logical -> relational_expression
-- On SEMICOLON reduce production value_logical -> relational_expression
-- On SECONDS reduce production value_logical -> relational_expression
-- On SAMPLE reduce production value_logical -> relational_expression
-- On SAMETERM reduce production value_logical -> relational_expression
-- On RPAR reduce production value_logical -> relational_expression
-- On ROUND reduce production value_logical -> relational_expression
-- On REPLACE reduce production value_logical -> relational_expression
-- On REGEX reduce production value_logical -> relational_expression
-- On RBRACE reduce production value_logical -> relational_expression
-- On RAND reduce production value_logical -> relational_expression
-- On Pname_ns reduce production value_logical -> relational_expression
-- On Pname_ln reduce production value_logical -> relational_expression
-- On PLUS reduce production value_logical -> relational_expression
-- On PIPEPIPE reduce production value_logical -> relational_expression
-- On ORDER reduce production value_logical -> relational_expression
-- On OFFSET reduce production value_logical -> relational_expression
-- On NOW reduce production value_logical -> relational_expression
-- On NOTEQUAL reduce production value_logical -> relational_expression
-- On NOT reduce production value_logical -> relational_expression
-- On MONTH reduce production value_logical -> relational_expression
-- On MINUTES reduce production value_logical -> relational_expression
-- On MINUS reduce production value_logical -> relational_expression
-- On MIN reduce production value_logical -> relational_expression
-- On MD5 reduce production value_logical -> relational_expression
-- On MAX reduce production value_logical -> relational_expression
-- On LTE reduce production value_logical -> relational_expression
-- On LT reduce production value_logical -> relational_expression
-- On LPAR reduce production value_logical -> relational_expression
-- On LIMIT reduce production value_logical -> relational_expression
-- On LCASE reduce production value_logical -> relational_expression
-- On LANGMATCHES reduce production value_logical -> relational_expression
-- On LANG reduce production value_logical -> relational_expression
-- On Iriref_ reduce production value_logical -> relational_expression
-- On Integer_positive reduce production value_logical -> relational_expression
-- On Integer_negative reduce production value_logical -> relational_expression
-- On Integer reduce production value_logical -> relational_expression
-- On ISURI reduce production value_logical -> relational_expression
-- On ISNUMERIC reduce production value_logical -> relational_expression
-- On ISLITERAL reduce production value_logical -> relational_expression
-- On ISIRI reduce production value_logical -> relational_expression
-- On ISBLANK reduce production value_logical -> relational_expression
-- On IRI reduce production value_logical -> relational_expression
-- On IN reduce production value_logical -> relational_expression
-- On IF reduce production value_logical -> relational_expression
-- On HOURS reduce production value_logical -> relational_expression
-- On HAVING reduce production value_logical -> relational_expression
-- On GTE reduce production value_logical -> relational_expression
-- On GT reduce production value_logical -> relational_expression
-- On GROUP_CONCAT reduce production value_logical -> relational_expression
-- On FLOOR reduce production value_logical -> relational_expression
-- On EXISTS reduce production value_logical -> relational_expression
-- On EQUAL reduce production value_logical -> relational_expression
-- On EOF reduce production value_logical -> relational_expression
-- On ENCODE_FOR_URI reduce production value_logical -> relational_expression
-- On Double_positive reduce production value_logical -> relational_expression
-- On Double_negative reduce production value_logical -> relational_expression
-- On Double reduce production value_logical -> relational_expression
-- On Decimal_positive reduce production value_logical -> relational_expression
-- On Decimal_negative reduce production value_logical -> relational_expression
-- On Decimal reduce production value_logical -> relational_expression
-- On DAY reduce production value_logical -> relational_expression
-- On DATATYPE reduce production value_logical -> relational_expression
-- On COUNT reduce production value_logical -> relational_expression
-- On CONTAINS reduce production value_logical -> relational_expression
-- On CONCAT reduce production value_logical -> relational_expression
-- On COMMA reduce production value_logical -> relational_expression
-- On COALESCE reduce production value_logical -> relational_expression
-- On CEIL reduce production value_logical -> relational_expression
-- On Boolean reduce production value_logical -> relational_expression
-- On BOUND reduce production value_logical -> relational_expression
-- On BNODE reduce production value_logical -> relational_expression
-- On BANG reduce production value_logical -> relational_expression
-- On AVG reduce production value_logical -> relational_expression
-- On AS reduce production value_logical -> relational_expression
-- On AMPAMP reduce production value_logical -> relational_expression
-- On ABS reduce production value_logical -> relational_expression

State 318:
built_in_call -> regexp_expression . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production built_in_call -> regexp_expression
-- On Var2 reduce production built_in_call -> regexp_expression
-- On Var1 reduce production built_in_call -> regexp_expression
-- On VALUES reduce production built_in_call -> regexp_expression
-- On UUID reduce production built_in_call -> regexp_expression
-- On URI reduce production built_in_call -> regexp_expression
-- On UCASE reduce production built_in_call -> regexp_expression
-- On TZ reduce production built_in_call -> regexp_expression
-- On TIMEZONE reduce production built_in_call -> regexp_expression
-- On String_literal reduce production built_in_call -> regexp_expression
-- On SUM reduce production built_in_call -> regexp_expression
-- On SUBSTR reduce production built_in_call -> regexp_expression
-- On STRUUID reduce production built_in_call -> regexp_expression
-- On STRSTARTS reduce production built_in_call -> regexp_expression
-- On STRLEN reduce production built_in_call -> regexp_expression
-- On STRLANG reduce production built_in_call -> regexp_expression
-- On STRENDS reduce production built_in_call -> regexp_expression
-- On STRDT reduce production built_in_call -> regexp_expression
-- On STRBEFORE reduce production built_in_call -> regexp_expression
-- On STRAFTER reduce production built_in_call -> regexp_expression
-- On STR reduce production built_in_call -> regexp_expression
-- On STAR reduce production built_in_call -> regexp_expression
-- On SLASH reduce production built_in_call -> regexp_expression
-- On SHA512 reduce production built_in_call -> regexp_expression
-- On SHA384 reduce production built_in_call -> regexp_expression
-- On SHA256 reduce production built_in_call -> regexp_expression
-- On SHA1 reduce production built_in_call -> regexp_expression
-- On SERVICE reduce production built_in_call -> regexp_expression
-- On SEMICOLON reduce production built_in_call -> regexp_expression
-- On SECONDS reduce production built_in_call -> regexp_expression
-- On SAMPLE reduce production built_in_call -> regexp_expression
-- On SAMETERM reduce production built_in_call -> regexp_expression
-- On RPAR reduce production built_in_call -> regexp_expression
-- On ROUND reduce production built_in_call -> regexp_expression
-- On REPLACE reduce production built_in_call -> regexp_expression
-- On REGEX reduce production built_in_call -> regexp_expression
-- On RBRACE reduce production built_in_call -> regexp_expression
-- On RAND reduce production built_in_call -> regexp_expression
-- On Pname_ns reduce production built_in_call -> regexp_expression
-- On Pname_ln reduce production built_in_call -> regexp_expression
-- On PLUS reduce production built_in_call -> regexp_expression
-- On PIPEPIPE reduce production built_in_call -> regexp_expression
-- On ORDER reduce production built_in_call -> regexp_expression
-- On OPTIONAL reduce production built_in_call -> regexp_expression
-- On OFFSET reduce production built_in_call -> regexp_expression
-- On NOW reduce production built_in_call -> regexp_expression
-- On NOTEQUAL reduce production built_in_call -> regexp_expression
-- On NOT reduce production built_in_call -> regexp_expression
-- On NIL reduce production built_in_call -> regexp_expression
-- On MONTH reduce production built_in_call -> regexp_expression
-- On MINUTES reduce production built_in_call -> regexp_expression
-- On MINUS reduce production built_in_call -> regexp_expression
-- On MIN reduce production built_in_call -> regexp_expression
-- On MD5 reduce production built_in_call -> regexp_expression
-- On MAX reduce production built_in_call -> regexp_expression
-- On LTE reduce production built_in_call -> regexp_expression
-- On LT reduce production built_in_call -> regexp_expression
-- On LPAR reduce production built_in_call -> regexp_expression
-- On LIMIT reduce production built_in_call -> regexp_expression
-- On LCASE reduce production built_in_call -> regexp_expression
-- On LBRACKET reduce production built_in_call -> regexp_expression
-- On LBRACE reduce production built_in_call -> regexp_expression
-- On LANGMATCHES reduce production built_in_call -> regexp_expression
-- On LANG reduce production built_in_call -> regexp_expression
-- On Iriref_ reduce production built_in_call -> regexp_expression
-- On Integer_positive reduce production built_in_call -> regexp_expression
-- On Integer_negative reduce production built_in_call -> regexp_expression
-- On Integer reduce production built_in_call -> regexp_expression
-- On ISURI reduce production built_in_call -> regexp_expression
-- On ISNUMERIC reduce production built_in_call -> regexp_expression
-- On ISLITERAL reduce production built_in_call -> regexp_expression
-- On ISIRI reduce production built_in_call -> regexp_expression
-- On ISBLANK reduce production built_in_call -> regexp_expression
-- On IRI reduce production built_in_call -> regexp_expression
-- On IN reduce production built_in_call -> regexp_expression
-- On IF reduce production built_in_call -> regexp_expression
-- On HOURS reduce production built_in_call -> regexp_expression
-- On HAVING reduce production built_in_call -> regexp_expression
-- On GTE reduce production built_in_call -> regexp_expression
-- On GT reduce production built_in_call -> regexp_expression
-- On GROUP_CONCAT reduce production built_in_call -> regexp_expression
-- On GRAPH reduce production built_in_call -> regexp_expression
-- On FLOOR reduce production built_in_call -> regexp_expression
-- On FILTER reduce production built_in_call -> regexp_expression
-- On EXISTS reduce production built_in_call -> regexp_expression
-- On EQUAL reduce production built_in_call -> regexp_expression
-- On EOF reduce production built_in_call -> regexp_expression
-- On ENCODE_FOR_URI reduce production built_in_call -> regexp_expression
-- On Double_positive reduce production built_in_call -> regexp_expression
-- On Double_negative reduce production built_in_call -> regexp_expression
-- On Double reduce production built_in_call -> regexp_expression
-- On Decimal_positive reduce production built_in_call -> regexp_expression
-- On Decimal_negative reduce production built_in_call -> regexp_expression
-- On Decimal reduce production built_in_call -> regexp_expression
-- On DOT reduce production built_in_call -> regexp_expression
-- On DESC reduce production built_in_call -> regexp_expression
-- On DAY reduce production built_in_call -> regexp_expression
-- On DATATYPE reduce production built_in_call -> regexp_expression
-- On COUNT reduce production built_in_call -> regexp_expression
-- On CONTAINS reduce production built_in_call -> regexp_expression
-- On CONCAT reduce production built_in_call -> regexp_expression
-- On COMMA reduce production built_in_call -> regexp_expression
-- On COALESCE reduce production built_in_call -> regexp_expression
-- On CEIL reduce production built_in_call -> regexp_expression
-- On Boolean reduce production built_in_call -> regexp_expression
-- On Blank_node_label reduce production built_in_call -> regexp_expression
-- On BOUND reduce production built_in_call -> regexp_expression
-- On BNODE reduce production built_in_call -> regexp_expression
-- On BIND reduce production built_in_call -> regexp_expression
-- On BANG reduce production built_in_call -> regexp_expression
-- On AVG reduce production built_in_call -> regexp_expression
-- On ASC reduce production built_in_call -> regexp_expression
-- On AS reduce production built_in_call -> regexp_expression
-- On ANON reduce production built_in_call -> regexp_expression
-- On AMPAMP reduce production built_in_call -> regexp_expression
-- On ABS reduce production built_in_call -> regexp_expression

State 319:
primary_expression -> rdf_literal . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
-- On YEAR reduce production primary_expression -> rdf_literal
-- On Var2 reduce production primary_expression -> rdf_literal
-- On Var1 reduce production primary_expression -> rdf_literal
-- On VALUES reduce production primary_expression -> rdf_literal
-- On UUID reduce production primary_expression -> rdf_literal
-- On URI reduce production primary_expression -> rdf_literal
-- On UCASE reduce production primary_expression -> rdf_literal
-- On TZ reduce production primary_expression -> rdf_literal
-- On TIMEZONE reduce production primary_expression -> rdf_literal
-- On String_literal reduce production primary_expression -> rdf_literal
-- On SUM reduce production primary_expression -> rdf_literal
-- On SUBSTR reduce production primary_expression -> rdf_literal
-- On STRUUID reduce production primary_expression -> rdf_literal
-- On STRSTARTS reduce production primary_expression -> rdf_literal
-- On STRLEN reduce production primary_expression -> rdf_literal
-- On STRLANG reduce production primary_expression -> rdf_literal
-- On STRENDS reduce production primary_expression -> rdf_literal
-- On STRDT reduce production primary_expression -> rdf_literal
-- On STRBEFORE reduce production primary_expression -> rdf_literal
-- On STRAFTER reduce production primary_expression -> rdf_literal
-- On STR reduce production primary_expression -> rdf_literal
-- On STAR reduce production primary_expression -> rdf_literal
-- On SLASH reduce production primary_expression -> rdf_literal
-- On SHA512 reduce production primary_expression -> rdf_literal
-- On SHA384 reduce production primary_expression -> rdf_literal
-- On SHA256 reduce production primary_expression -> rdf_literal
-- On SHA1 reduce production primary_expression -> rdf_literal
-- On SEMICOLON reduce production primary_expression -> rdf_literal
-- On SECONDS reduce production primary_expression -> rdf_literal
-- On SAMPLE reduce production primary_expression -> rdf_literal
-- On SAMETERM reduce production primary_expression -> rdf_literal
-- On RPAR reduce production primary_expression -> rdf_literal
-- On ROUND reduce production primary_expression -> rdf_literal
-- On REPLACE reduce production primary_expression -> rdf_literal
-- On REGEX reduce production primary_expression -> rdf_literal
-- On RBRACE reduce production primary_expression -> rdf_literal
-- On RAND reduce production primary_expression -> rdf_literal
-- On Pname_ns reduce production primary_expression -> rdf_literal
-- On Pname_ln reduce production primary_expression -> rdf_literal
-- On PLUS reduce production primary_expression -> rdf_literal
-- On PIPEPIPE reduce production primary_expression -> rdf_literal
-- On ORDER reduce production primary_expression -> rdf_literal
-- On OFFSET reduce production primary_expression -> rdf_literal
-- On NOW reduce production primary_expression -> rdf_literal
-- On NOTEQUAL reduce production primary_expression -> rdf_literal
-- On NOT reduce production primary_expression -> rdf_literal
-- On MONTH reduce production primary_expression -> rdf_literal
-- On MINUTES reduce production primary_expression -> rdf_literal
-- On MINUS reduce production primary_expression -> rdf_literal
-- On MIN reduce production primary_expression -> rdf_literal
-- On MD5 reduce production primary_expression -> rdf_literal
-- On MAX reduce production primary_expression -> rdf_literal
-- On LTE reduce production primary_expression -> rdf_literal
-- On LT reduce production primary_expression -> rdf_literal
-- On LPAR reduce production primary_expression -> rdf_literal
-- On LIMIT reduce production primary_expression -> rdf_literal
-- On LCASE reduce production primary_expression -> rdf_literal
-- On LANGMATCHES reduce production primary_expression -> rdf_literal
-- On LANG reduce production primary_expression -> rdf_literal
-- On Iriref_ reduce production primary_expression -> rdf_literal
-- On Integer_positive reduce production primary_expression -> rdf_literal
-- On Integer_negative reduce production primary_expression -> rdf_literal
-- On Integer reduce production primary_expression -> rdf_literal
-- On ISURI reduce production primary_expression -> rdf_literal
-- On ISNUMERIC reduce production primary_expression -> rdf_literal
-- On ISLITERAL reduce production primary_expression -> rdf_literal
-- On ISIRI reduce production primary_expression -> rdf_literal
-- On ISBLANK reduce production primary_expression -> rdf_literal
-- On IRI reduce production primary_expression -> rdf_literal
-- On IN reduce production primary_expression -> rdf_literal
-- On IF reduce production primary_expression -> rdf_literal
-- On HOURS reduce production primary_expression -> rdf_literal
-- On HAVING reduce production primary_expression -> rdf_literal
-- On GTE reduce production primary_expression -> rdf_literal
-- On GT reduce production primary_expression -> rdf_literal
-- On GROUP_CONCAT reduce production primary_expression -> rdf_literal
-- On FLOOR reduce production primary_expression -> rdf_literal
-- On EXISTS reduce production primary_expression -> rdf_literal
-- On EQUAL reduce production primary_expression -> rdf_literal
-- On EOF reduce production primary_expression -> rdf_literal
-- On ENCODE_FOR_URI reduce production primary_expression -> rdf_literal
-- On Double_positive reduce production primary_expression -> rdf_literal
-- On Double_negative reduce production primary_expression -> rdf_literal
-- On Double reduce production primary_expression -> rdf_literal
-- On Decimal_positive reduce production primary_expression -> rdf_literal
-- On Decimal_negative reduce production primary_expression -> rdf_literal
-- On Decimal reduce production primary_expression -> rdf_literal
-- On DAY reduce production primary_expression -> rdf_literal
-- On DATATYPE reduce production primary_expression -> rdf_literal
-- On COUNT reduce production primary_expression -> rdf_literal
-- On CONTAINS reduce production primary_expression -> rdf_literal
-- On CONCAT reduce production primary_expression -> rdf_literal
-- On COMMA reduce production primary_expression -> rdf_literal
-- On COALESCE reduce production primary_expression -> rdf_literal
-- On CEIL reduce production primary_expression -> rdf_literal
-- On Boolean reduce production primary_expression -> rdf_literal
-- On BOUND reduce production primary_expression -> rdf_literal
-- On BNODE reduce production primary_expression -> rdf_literal
-- On BANG reduce production primary_expression -> rdf_literal
-- On AVG reduce production primary_expression -> rdf_literal
-- On AS reduce production primary_expression -> rdf_literal
-- On AMPAMP reduce production primary_expression -> rdf_literal
-- On ABS reduce production primary_expression -> rdf_literal

State 320:
numexp -> primary_expression . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
-- On YEAR reduce production numexp -> primary_expression
-- On Var2 reduce production numexp -> primary_expression
-- On Var1 reduce production numexp -> primary_expression
-- On VALUES reduce production numexp -> primary_expression
-- On UUID reduce production numexp -> primary_expression
-- On URI reduce production numexp -> primary_expression
-- On UCASE reduce production numexp -> primary_expression
-- On TZ reduce production numexp -> primary_expression
-- On TIMEZONE reduce production numexp -> primary_expression
-- On String_literal reduce production numexp -> primary_expression
-- On SUM reduce production numexp -> primary_expression
-- On SUBSTR reduce production numexp -> primary_expression
-- On STRUUID reduce production numexp -> primary_expression
-- On STRSTARTS reduce production numexp -> primary_expression
-- On STRLEN reduce production numexp -> primary_expression
-- On STRLANG reduce production numexp -> primary_expression
-- On STRENDS reduce production numexp -> primary_expression
-- On STRDT reduce production numexp -> primary_expression
-- On STRBEFORE reduce production numexp -> primary_expression
-- On STRAFTER reduce production numexp -> primary_expression
-- On STR reduce production numexp -> primary_expression
-- On STAR reduce production numexp -> primary_expression
-- On SLASH reduce production numexp -> primary_expression
-- On SHA512 reduce production numexp -> primary_expression
-- On SHA384 reduce production numexp -> primary_expression
-- On SHA256 reduce production numexp -> primary_expression
-- On SHA1 reduce production numexp -> primary_expression
-- On SEMICOLON reduce production numexp -> primary_expression
-- On SECONDS reduce production numexp -> primary_expression
-- On SAMPLE reduce production numexp -> primary_expression
-- On SAMETERM reduce production numexp -> primary_expression
-- On RPAR reduce production numexp -> primary_expression
-- On ROUND reduce production numexp -> primary_expression
-- On REPLACE reduce production numexp -> primary_expression
-- On REGEX reduce production numexp -> primary_expression
-- On RBRACE reduce production numexp -> primary_expression
-- On RAND reduce production numexp -> primary_expression
-- On Pname_ns reduce production numexp -> primary_expression
-- On Pname_ln reduce production numexp -> primary_expression
-- On PLUS reduce production numexp -> primary_expression
-- On PIPEPIPE reduce production numexp -> primary_expression
-- On ORDER reduce production numexp -> primary_expression
-- On OFFSET reduce production numexp -> primary_expression
-- On NOW reduce production numexp -> primary_expression
-- On NOTEQUAL reduce production numexp -> primary_expression
-- On NOT reduce production numexp -> primary_expression
-- On MONTH reduce production numexp -> primary_expression
-- On MINUTES reduce production numexp -> primary_expression
-- On MINUS reduce production numexp -> primary_expression
-- On MIN reduce production numexp -> primary_expression
-- On MD5 reduce production numexp -> primary_expression
-- On MAX reduce production numexp -> primary_expression
-- On LTE reduce production numexp -> primary_expression
-- On LT reduce production numexp -> primary_expression
-- On LPAR reduce production numexp -> primary_expression
-- On LIMIT reduce production numexp -> primary_expression
-- On LCASE reduce production numexp -> primary_expression
-- On LANGMATCHES reduce production numexp -> primary_expression
-- On LANG reduce production numexp -> primary_expression
-- On Iriref_ reduce production numexp -> primary_expression
-- On Integer_positive reduce production numexp -> primary_expression
-- On Integer_negative reduce production numexp -> primary_expression
-- On Integer reduce production numexp -> primary_expression
-- On ISURI reduce production numexp -> primary_expression
-- On ISNUMERIC reduce production numexp -> primary_expression
-- On ISLITERAL reduce production numexp -> primary_expression
-- On ISIRI reduce production numexp -> primary_expression
-- On ISBLANK reduce production numexp -> primary_expression
-- On IRI reduce production numexp -> primary_expression
-- On IN reduce production numexp -> primary_expression
-- On IF reduce production numexp -> primary_expression
-- On HOURS reduce production numexp -> primary_expression
-- On HAVING reduce production numexp -> primary_expression
-- On GTE reduce production numexp -> primary_expression
-- On GT reduce production numexp -> primary_expression
-- On GROUP_CONCAT reduce production numexp -> primary_expression
-- On FLOOR reduce production numexp -> primary_expression
-- On EXISTS reduce production numexp -> primary_expression
-- On EQUAL reduce production numexp -> primary_expression
-- On EOF reduce production numexp -> primary_expression
-- On ENCODE_FOR_URI reduce production numexp -> primary_expression
-- On Double_positive reduce production numexp -> primary_expression
-- On Double_negative reduce production numexp -> primary_expression
-- On Double reduce production numexp -> primary_expression
-- On Decimal_positive reduce production numexp -> primary_expression
-- On Decimal_negative reduce production numexp -> primary_expression
-- On Decimal reduce production numexp -> primary_expression
-- On DAY reduce production numexp -> primary_expression
-- On DATATYPE reduce production numexp -> primary_expression
-- On COUNT reduce production numexp -> primary_expression
-- On CONTAINS reduce production numexp -> primary_expression
-- On CONCAT reduce production numexp -> primary_expression
-- On COMMA reduce production numexp -> primary_expression
-- On COALESCE reduce production numexp -> primary_expression
-- On CEIL reduce production numexp -> primary_expression
-- On Boolean reduce production numexp -> primary_expression
-- On BOUND reduce production numexp -> primary_expression
-- On BNODE reduce production numexp -> primary_expression
-- On BANG reduce production numexp -> primary_expression
-- On AVG reduce production numexp -> primary_expression
-- On AS reduce production numexp -> primary_expression
-- On AMPAMP reduce production numexp -> primary_expression
-- On ABS reduce production numexp -> primary_expression

State 321:
relational_expression -> numexp . EQUAL numexp [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
relational_expression -> numexp . NOTEQUAL numexp [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
relational_expression -> numexp . LT numexp [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
relational_expression -> numexp . GT numexp [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
relational_expression -> numexp . LTE numexp [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
relational_expression -> numexp . GTE numexp [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
relational_expression -> numexp . IN expression_list [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
relational_expression -> numexp . NOT IN expression_list [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
relational_expression -> numexp . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
-- On NOTEQUAL shift to state 322
-- On NOT shift to state 352
-- On LTE shift to state 355
-- On LT shift to state 357
-- On IN shift to state 359
-- On GTE shift to state 361
-- On GT shift to state 363
-- On EQUAL shift to state 365
-- On YEAR reduce production relational_expression -> numexp
-- On Var2 reduce production relational_expression -> numexp
-- On Var1 reduce production relational_expression -> numexp
-- On VALUES reduce production relational_expression -> numexp
-- On UUID reduce production relational_expression -> numexp
-- On URI reduce production relational_expression -> numexp
-- On UCASE reduce production relational_expression -> numexp
-- On TZ reduce production relational_expression -> numexp
-- On TIMEZONE reduce production relational_expression -> numexp
-- On String_literal reduce production relational_expression -> numexp
-- On SUM reduce production relational_expression -> numexp
-- On SUBSTR reduce production relational_expression -> numexp
-- On STRUUID reduce production relational_expression -> numexp
-- On STRSTARTS reduce production relational_expression -> numexp
-- On STRLEN reduce production relational_expression -> numexp
-- On STRLANG reduce production relational_expression -> numexp
-- On STRENDS reduce production relational_expression -> numexp
-- On STRDT reduce production relational_expression -> numexp
-- On STRBEFORE reduce production relational_expression -> numexp
-- On STRAFTER reduce production relational_expression -> numexp
-- On STR reduce production relational_expression -> numexp
-- On STAR reduce production relational_expression -> numexp
-- On SLASH reduce production relational_expression -> numexp
-- On SHA512 reduce production relational_expression -> numexp
-- On SHA384 reduce production relational_expression -> numexp
-- On SHA256 reduce production relational_expression -> numexp
-- On SHA1 reduce production relational_expression -> numexp
-- On SEMICOLON reduce production relational_expression -> numexp
-- On SECONDS reduce production relational_expression -> numexp
-- On SAMPLE reduce production relational_expression -> numexp
-- On SAMETERM reduce production relational_expression -> numexp
-- On RPAR reduce production relational_expression -> numexp
-- On ROUND reduce production relational_expression -> numexp
-- On REPLACE reduce production relational_expression -> numexp
-- On REGEX reduce production relational_expression -> numexp
-- On RBRACE reduce production relational_expression -> numexp
-- On RAND reduce production relational_expression -> numexp
-- On Pname_ns reduce production relational_expression -> numexp
-- On Pname_ln reduce production relational_expression -> numexp
-- On PLUS reduce production relational_expression -> numexp
-- On PIPEPIPE reduce production relational_expression -> numexp
-- On ORDER reduce production relational_expression -> numexp
-- On OFFSET reduce production relational_expression -> numexp
-- On NOW reduce production relational_expression -> numexp
-- On NOTEQUAL reduce production relational_expression -> numexp
-- On NOT reduce production relational_expression -> numexp
-- On MONTH reduce production relational_expression -> numexp
-- On MINUTES reduce production relational_expression -> numexp
-- On MINUS reduce production relational_expression -> numexp
-- On MIN reduce production relational_expression -> numexp
-- On MD5 reduce production relational_expression -> numexp
-- On MAX reduce production relational_expression -> numexp
-- On LTE reduce production relational_expression -> numexp
-- On LT reduce production relational_expression -> numexp
-- On LPAR reduce production relational_expression -> numexp
-- On LIMIT reduce production relational_expression -> numexp
-- On LCASE reduce production relational_expression -> numexp
-- On LANGMATCHES reduce production relational_expression -> numexp
-- On LANG reduce production relational_expression -> numexp
-- On Iriref_ reduce production relational_expression -> numexp
-- On Integer_positive reduce production relational_expression -> numexp
-- On Integer_negative reduce production relational_expression -> numexp
-- On Integer reduce production relational_expression -> numexp
-- On ISURI reduce production relational_expression -> numexp
-- On ISNUMERIC reduce production relational_expression -> numexp
-- On ISLITERAL reduce production relational_expression -> numexp
-- On ISIRI reduce production relational_expression -> numexp
-- On ISBLANK reduce production relational_expression -> numexp
-- On IRI reduce production relational_expression -> numexp
-- On IN reduce production relational_expression -> numexp
-- On IF reduce production relational_expression -> numexp
-- On HOURS reduce production relational_expression -> numexp
-- On HAVING reduce production relational_expression -> numexp
-- On GTE reduce production relational_expression -> numexp
-- On GT reduce production relational_expression -> numexp
-- On GROUP_CONCAT reduce production relational_expression -> numexp
-- On FLOOR reduce production relational_expression -> numexp
-- On EXISTS reduce production relational_expression -> numexp
-- On EQUAL reduce production relational_expression -> numexp
-- On EOF reduce production relational_expression -> numexp
-- On ENCODE_FOR_URI reduce production relational_expression -> numexp
-- On Double_positive reduce production relational_expression -> numexp
-- On Double_negative reduce production relational_expression -> numexp
-- On Double reduce production relational_expression -> numexp
-- On Decimal_positive reduce production relational_expression -> numexp
-- On Decimal_negative reduce production relational_expression -> numexp
-- On Decimal reduce production relational_expression -> numexp
-- On DAY reduce production relational_expression -> numexp
-- On DATATYPE reduce production relational_expression -> numexp
-- On COUNT reduce production relational_expression -> numexp
-- On CONTAINS reduce production relational_expression -> numexp
-- On CONCAT reduce production relational_expression -> numexp
-- On COMMA reduce production relational_expression -> numexp
-- On COALESCE reduce production relational_expression -> numexp
-- On CEIL reduce production relational_expression -> numexp
-- On Boolean reduce production relational_expression -> numexp
-- On BOUND reduce production relational_expression -> numexp
-- On BNODE reduce production relational_expression -> numexp
-- On BANG reduce production relational_expression -> numexp
-- On AVG reduce production relational_expression -> numexp
-- On AS reduce production relational_expression -> numexp
-- On AMPAMP reduce production relational_expression -> numexp
-- On ABS reduce production relational_expression -> numexp
** Conflict on NOTEQUAL NOT LTE LT IN GTE GT EQUAL

State 322:
relational_expression -> numexp NOTEQUAL . numexp [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 323
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 351
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 323:
relational_expression -> numexp . EQUAL numexp [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . NOTEQUAL numexp [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp NOTEQUAL numexp . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
relational_expression -> numexp . LT numexp [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . GT numexp [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . LTE numexp [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . GTE numexp [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . IN expression_list [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . NOT IN expression_list [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
-- On YEAR reduce production relational_expression -> numexp NOTEQUAL numexp
-- On Var2 reduce production relational_expression -> numexp NOTEQUAL numexp
-- On Var1 reduce production relational_expression -> numexp NOTEQUAL numexp
-- On VALUES reduce production relational_expression -> numexp NOTEQUAL numexp
-- On UUID reduce production relational_expression -> numexp NOTEQUAL numexp
-- On URI reduce production relational_expression -> numexp NOTEQUAL numexp
-- On UCASE reduce production relational_expression -> numexp NOTEQUAL numexp
-- On TZ reduce production relational_expression -> numexp NOTEQUAL numexp
-- On TIMEZONE reduce production relational_expression -> numexp NOTEQUAL numexp
-- On String_literal reduce production relational_expression -> numexp NOTEQUAL numexp
-- On SUM reduce production relational_expression -> numexp NOTEQUAL numexp
-- On SUBSTR reduce production relational_expression -> numexp NOTEQUAL numexp
-- On STRUUID reduce production relational_expression -> numexp NOTEQUAL numexp
-- On STRSTARTS reduce production relational_expression -> numexp NOTEQUAL numexp
-- On STRLEN reduce production relational_expression -> numexp NOTEQUAL numexp
-- On STRLANG reduce production relational_expression -> numexp NOTEQUAL numexp
-- On STRENDS reduce production relational_expression -> numexp NOTEQUAL numexp
-- On STRDT reduce production relational_expression -> numexp NOTEQUAL numexp
-- On STRBEFORE reduce production relational_expression -> numexp NOTEQUAL numexp
-- On STRAFTER reduce production relational_expression -> numexp NOTEQUAL numexp
-- On STR reduce production relational_expression -> numexp NOTEQUAL numexp
-- On STAR reduce production relational_expression -> numexp NOTEQUAL numexp
-- On STAR reduce production relational_expression -> numexp
-- On SLASH reduce production relational_expression -> numexp NOTEQUAL numexp
-- On SLASH reduce production relational_expression -> numexp
-- On SHA512 reduce production relational_expression -> numexp NOTEQUAL numexp
-- On SHA384 reduce production relational_expression -> numexp NOTEQUAL numexp
-- On SHA256 reduce production relational_expression -> numexp NOTEQUAL numexp
-- On SHA1 reduce production relational_expression -> numexp NOTEQUAL numexp
-- On SEMICOLON reduce production relational_expression -> numexp NOTEQUAL numexp
-- On SECONDS reduce production relational_expression -> numexp NOTEQUAL numexp
-- On SAMPLE reduce production relational_expression -> numexp NOTEQUAL numexp
-- On SAMETERM reduce production relational_expression -> numexp NOTEQUAL numexp
-- On RPAR reduce production relational_expression -> numexp NOTEQUAL numexp
-- On ROUND reduce production relational_expression -> numexp NOTEQUAL numexp
-- On REPLACE reduce production relational_expression -> numexp NOTEQUAL numexp
-- On REGEX reduce production relational_expression -> numexp NOTEQUAL numexp
-- On RBRACE reduce production relational_expression -> numexp NOTEQUAL numexp
-- On RAND reduce production relational_expression -> numexp NOTEQUAL numexp
-- On Pname_ns reduce production relational_expression -> numexp NOTEQUAL numexp
-- On Pname_ln reduce production relational_expression -> numexp NOTEQUAL numexp
-- On PLUS reduce production relational_expression -> numexp NOTEQUAL numexp
-- On PLUS reduce production relational_expression -> numexp
-- On PIPEPIPE reduce production relational_expression -> numexp NOTEQUAL numexp
-- On PIPEPIPE reduce production relational_expression -> numexp
-- On ORDER reduce production relational_expression -> numexp NOTEQUAL numexp
-- On OFFSET reduce production relational_expression -> numexp NOTEQUAL numexp
-- On NOW reduce production relational_expression -> numexp NOTEQUAL numexp
-- On MONTH reduce production relational_expression -> numexp NOTEQUAL numexp
-- On MINUTES reduce production relational_expression -> numexp NOTEQUAL numexp
-- On MINUS reduce production relational_expression -> numexp NOTEQUAL numexp
-- On MINUS reduce production relational_expression -> numexp
-- On MIN reduce production relational_expression -> numexp NOTEQUAL numexp
-- On MD5 reduce production relational_expression -> numexp NOTEQUAL numexp
-- On MAX reduce production relational_expression -> numexp NOTEQUAL numexp
-- On LPAR reduce production relational_expression -> numexp NOTEQUAL numexp
-- On LIMIT reduce production relational_expression -> numexp NOTEQUAL numexp
-- On LCASE reduce production relational_expression -> numexp NOTEQUAL numexp
-- On LANGMATCHES reduce production relational_expression -> numexp NOTEQUAL numexp
-- On LANG reduce production relational_expression -> numexp NOTEQUAL numexp
-- On Iriref_ reduce production relational_expression -> numexp NOTEQUAL numexp
-- On Integer_positive reduce production relational_expression -> numexp NOTEQUAL numexp
-- On Integer_positive reduce production relational_expression -> numexp
-- On Integer_negative reduce production relational_expression -> numexp NOTEQUAL numexp
-- On Integer_negative reduce production relational_expression -> numexp
-- On Integer reduce production relational_expression -> numexp NOTEQUAL numexp
-- On ISURI reduce production relational_expression -> numexp NOTEQUAL numexp
-- On ISNUMERIC reduce production relational_expression -> numexp NOTEQUAL numexp
-- On ISLITERAL reduce production relational_expression -> numexp NOTEQUAL numexp
-- On ISIRI reduce production relational_expression -> numexp NOTEQUAL numexp
-- On ISBLANK reduce production relational_expression -> numexp NOTEQUAL numexp
-- On IRI reduce production relational_expression -> numexp NOTEQUAL numexp
-- On IF reduce production relational_expression -> numexp NOTEQUAL numexp
-- On HOURS reduce production relational_expression -> numexp NOTEQUAL numexp
-- On HAVING reduce production relational_expression -> numexp NOTEQUAL numexp
-- On GROUP_CONCAT reduce production relational_expression -> numexp NOTEQUAL numexp
-- On FLOOR reduce production relational_expression -> numexp NOTEQUAL numexp
-- On EXISTS reduce production relational_expression -> numexp NOTEQUAL numexp
-- On EOF reduce production relational_expression -> numexp NOTEQUAL numexp
-- On ENCODE_FOR_URI reduce production relational_expression -> numexp NOTEQUAL numexp
-- On Double_positive reduce production relational_expression -> numexp NOTEQUAL numexp
-- On Double_positive reduce production relational_expression -> numexp
-- On Double_negative reduce production relational_expression -> numexp NOTEQUAL numexp
-- On Double_negative reduce production relational_expression -> numexp
-- On Double reduce production relational_expression -> numexp NOTEQUAL numexp
-- On Decimal_positive reduce production relational_expression -> numexp NOTEQUAL numexp
-- On Decimal_positive reduce production relational_expression -> numexp
-- On Decimal_negative reduce production relational_expression -> numexp NOTEQUAL numexp
-- On Decimal_negative reduce production relational_expression -> numexp
-- On Decimal reduce production relational_expression -> numexp NOTEQUAL numexp
-- On DAY reduce production relational_expression -> numexp NOTEQUAL numexp
-- On DATATYPE reduce production relational_expression -> numexp NOTEQUAL numexp
-- On COUNT reduce production relational_expression -> numexp NOTEQUAL numexp
-- On CONTAINS reduce production relational_expression -> numexp NOTEQUAL numexp
-- On CONCAT reduce production relational_expression -> numexp NOTEQUAL numexp
-- On COMMA reduce production relational_expression -> numexp NOTEQUAL numexp
-- On COALESCE reduce production relational_expression -> numexp NOTEQUAL numexp
-- On CEIL reduce production relational_expression -> numexp NOTEQUAL numexp
-- On Boolean reduce production relational_expression -> numexp NOTEQUAL numexp
-- On BOUND reduce production relational_expression -> numexp NOTEQUAL numexp
-- On BNODE reduce production relational_expression -> numexp NOTEQUAL numexp
-- On BANG reduce production relational_expression -> numexp NOTEQUAL numexp
-- On AVG reduce production relational_expression -> numexp NOTEQUAL numexp
-- On AS reduce production relational_expression -> numexp NOTEQUAL numexp
-- On AMPAMP reduce production relational_expression -> numexp NOTEQUAL numexp
-- On AMPAMP reduce production relational_expression -> numexp
-- On ABS reduce production relational_expression -> numexp NOTEQUAL numexp
** Conflict on STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP

State 324:
primary_expression -> numeric_literal . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
-- On YEAR reduce production primary_expression -> numeric_literal
-- On Var2 reduce production primary_expression -> numeric_literal
-- On Var1 reduce production primary_expression -> numeric_literal
-- On VALUES reduce production primary_expression -> numeric_literal
-- On UUID reduce production primary_expression -> numeric_literal
-- On URI reduce production primary_expression -> numeric_literal
-- On UCASE reduce production primary_expression -> numeric_literal
-- On TZ reduce production primary_expression -> numeric_literal
-- On TIMEZONE reduce production primary_expression -> numeric_literal
-- On String_literal reduce production primary_expression -> numeric_literal
-- On SUM reduce production primary_expression -> numeric_literal
-- On SUBSTR reduce production primary_expression -> numeric_literal
-- On STRUUID reduce production primary_expression -> numeric_literal
-- On STRSTARTS reduce production primary_expression -> numeric_literal
-- On STRLEN reduce production primary_expression -> numeric_literal
-- On STRLANG reduce production primary_expression -> numeric_literal
-- On STRENDS reduce production primary_expression -> numeric_literal
-- On STRDT reduce production primary_expression -> numeric_literal
-- On STRBEFORE reduce production primary_expression -> numeric_literal
-- On STRAFTER reduce production primary_expression -> numeric_literal
-- On STR reduce production primary_expression -> numeric_literal
-- On STAR reduce production primary_expression -> numeric_literal
-- On SLASH reduce production primary_expression -> numeric_literal
-- On SHA512 reduce production primary_expression -> numeric_literal
-- On SHA384 reduce production primary_expression -> numeric_literal
-- On SHA256 reduce production primary_expression -> numeric_literal
-- On SHA1 reduce production primary_expression -> numeric_literal
-- On SEMICOLON reduce production primary_expression -> numeric_literal
-- On SECONDS reduce production primary_expression -> numeric_literal
-- On SAMPLE reduce production primary_expression -> numeric_literal
-- On SAMETERM reduce production primary_expression -> numeric_literal
-- On RPAR reduce production primary_expression -> numeric_literal
-- On ROUND reduce production primary_expression -> numeric_literal
-- On REPLACE reduce production primary_expression -> numeric_literal
-- On REGEX reduce production primary_expression -> numeric_literal
-- On RBRACE reduce production primary_expression -> numeric_literal
-- On RAND reduce production primary_expression -> numeric_literal
-- On Pname_ns reduce production primary_expression -> numeric_literal
-- On Pname_ln reduce production primary_expression -> numeric_literal
-- On PLUS reduce production primary_expression -> numeric_literal
-- On PIPEPIPE reduce production primary_expression -> numeric_literal
-- On ORDER reduce production primary_expression -> numeric_literal
-- On OFFSET reduce production primary_expression -> numeric_literal
-- On NOW reduce production primary_expression -> numeric_literal
-- On NOTEQUAL reduce production primary_expression -> numeric_literal
-- On NOT reduce production primary_expression -> numeric_literal
-- On MONTH reduce production primary_expression -> numeric_literal
-- On MINUTES reduce production primary_expression -> numeric_literal
-- On MINUS reduce production primary_expression -> numeric_literal
-- On MIN reduce production primary_expression -> numeric_literal
-- On MD5 reduce production primary_expression -> numeric_literal
-- On MAX reduce production primary_expression -> numeric_literal
-- On LTE reduce production primary_expression -> numeric_literal
-- On LT reduce production primary_expression -> numeric_literal
-- On LPAR reduce production primary_expression -> numeric_literal
-- On LIMIT reduce production primary_expression -> numeric_literal
-- On LCASE reduce production primary_expression -> numeric_literal
-- On LANGMATCHES reduce production primary_expression -> numeric_literal
-- On LANG reduce production primary_expression -> numeric_literal
-- On Iriref_ reduce production primary_expression -> numeric_literal
-- On Integer_positive reduce production primary_expression -> numeric_literal
-- On Integer_negative reduce production primary_expression -> numeric_literal
-- On Integer reduce production primary_expression -> numeric_literal
-- On ISURI reduce production primary_expression -> numeric_literal
-- On ISNUMERIC reduce production primary_expression -> numeric_literal
-- On ISLITERAL reduce production primary_expression -> numeric_literal
-- On ISIRI reduce production primary_expression -> numeric_literal
-- On ISBLANK reduce production primary_expression -> numeric_literal
-- On IRI reduce production primary_expression -> numeric_literal
-- On IN reduce production primary_expression -> numeric_literal
-- On IF reduce production primary_expression -> numeric_literal
-- On HOURS reduce production primary_expression -> numeric_literal
-- On HAVING reduce production primary_expression -> numeric_literal
-- On GTE reduce production primary_expression -> numeric_literal
-- On GT reduce production primary_expression -> numeric_literal
-- On GROUP_CONCAT reduce production primary_expression -> numeric_literal
-- On FLOOR reduce production primary_expression -> numeric_literal
-- On EXISTS reduce production primary_expression -> numeric_literal
-- On EQUAL reduce production primary_expression -> numeric_literal
-- On EOF reduce production primary_expression -> numeric_literal
-- On ENCODE_FOR_URI reduce production primary_expression -> numeric_literal
-- On Double_positive reduce production primary_expression -> numeric_literal
-- On Double_negative reduce production primary_expression -> numeric_literal
-- On Double reduce production primary_expression -> numeric_literal
-- On Decimal_positive reduce production primary_expression -> numeric_literal
-- On Decimal_negative reduce production primary_expression -> numeric_literal
-- On Decimal reduce production primary_expression -> numeric_literal
-- On DAY reduce production primary_expression -> numeric_literal
-- On DATATYPE reduce production primary_expression -> numeric_literal
-- On COUNT reduce production primary_expression -> numeric_literal
-- On CONTAINS reduce production primary_expression -> numeric_literal
-- On CONCAT reduce production primary_expression -> numeric_literal
-- On COMMA reduce production primary_expression -> numeric_literal
-- On COALESCE reduce production primary_expression -> numeric_literal
-- On CEIL reduce production primary_expression -> numeric_literal
-- On Boolean reduce production primary_expression -> numeric_literal
-- On BOUND reduce production primary_expression -> numeric_literal
-- On BNODE reduce production primary_expression -> numeric_literal
-- On BANG reduce production primary_expression -> numeric_literal
-- On AVG reduce production primary_expression -> numeric_literal
-- On AS reduce production primary_expression -> numeric_literal
-- On AMPAMP reduce production primary_expression -> numeric_literal
-- On ABS reduce production primary_expression -> numeric_literal

State 325:
primary_expression -> iri_or_function . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
-- On YEAR reduce production primary_expression -> iri_or_function
-- On Var2 reduce production primary_expression -> iri_or_function
-- On Var1 reduce production primary_expression -> iri_or_function
-- On VALUES reduce production primary_expression -> iri_or_function
-- On UUID reduce production primary_expression -> iri_or_function
-- On URI reduce production primary_expression -> iri_or_function
-- On UCASE reduce production primary_expression -> iri_or_function
-- On TZ reduce production primary_expression -> iri_or_function
-- On TIMEZONE reduce production primary_expression -> iri_or_function
-- On String_literal reduce production primary_expression -> iri_or_function
-- On SUM reduce production primary_expression -> iri_or_function
-- On SUBSTR reduce production primary_expression -> iri_or_function
-- On STRUUID reduce production primary_expression -> iri_or_function
-- On STRSTARTS reduce production primary_expression -> iri_or_function
-- On STRLEN reduce production primary_expression -> iri_or_function
-- On STRLANG reduce production primary_expression -> iri_or_function
-- On STRENDS reduce production primary_expression -> iri_or_function
-- On STRDT reduce production primary_expression -> iri_or_function
-- On STRBEFORE reduce production primary_expression -> iri_or_function
-- On STRAFTER reduce production primary_expression -> iri_or_function
-- On STR reduce production primary_expression -> iri_or_function
-- On STAR reduce production primary_expression -> iri_or_function
-- On SLASH reduce production primary_expression -> iri_or_function
-- On SHA512 reduce production primary_expression -> iri_or_function
-- On SHA384 reduce production primary_expression -> iri_or_function
-- On SHA256 reduce production primary_expression -> iri_or_function
-- On SHA1 reduce production primary_expression -> iri_or_function
-- On SEMICOLON reduce production primary_expression -> iri_or_function
-- On SECONDS reduce production primary_expression -> iri_or_function
-- On SAMPLE reduce production primary_expression -> iri_or_function
-- On SAMETERM reduce production primary_expression -> iri_or_function
-- On RPAR reduce production primary_expression -> iri_or_function
-- On ROUND reduce production primary_expression -> iri_or_function
-- On REPLACE reduce production primary_expression -> iri_or_function
-- On REGEX reduce production primary_expression -> iri_or_function
-- On RBRACE reduce production primary_expression -> iri_or_function
-- On RAND reduce production primary_expression -> iri_or_function
-- On Pname_ns reduce production primary_expression -> iri_or_function
-- On Pname_ln reduce production primary_expression -> iri_or_function
-- On PLUS reduce production primary_expression -> iri_or_function
-- On PIPEPIPE reduce production primary_expression -> iri_or_function
-- On ORDER reduce production primary_expression -> iri_or_function
-- On OFFSET reduce production primary_expression -> iri_or_function
-- On NOW reduce production primary_expression -> iri_or_function
-- On NOTEQUAL reduce production primary_expression -> iri_or_function
-- On NOT reduce production primary_expression -> iri_or_function
-- On MONTH reduce production primary_expression -> iri_or_function
-- On MINUTES reduce production primary_expression -> iri_or_function
-- On MINUS reduce production primary_expression -> iri_or_function
-- On MIN reduce production primary_expression -> iri_or_function
-- On MD5 reduce production primary_expression -> iri_or_function
-- On MAX reduce production primary_expression -> iri_or_function
-- On LTE reduce production primary_expression -> iri_or_function
-- On LT reduce production primary_expression -> iri_or_function
-- On LPAR reduce production primary_expression -> iri_or_function
-- On LIMIT reduce production primary_expression -> iri_or_function
-- On LCASE reduce production primary_expression -> iri_or_function
-- On LANGMATCHES reduce production primary_expression -> iri_or_function
-- On LANG reduce production primary_expression -> iri_or_function
-- On Iriref_ reduce production primary_expression -> iri_or_function
-- On Integer_positive reduce production primary_expression -> iri_or_function
-- On Integer_negative reduce production primary_expression -> iri_or_function
-- On Integer reduce production primary_expression -> iri_or_function
-- On ISURI reduce production primary_expression -> iri_or_function
-- On ISNUMERIC reduce production primary_expression -> iri_or_function
-- On ISLITERAL reduce production primary_expression -> iri_or_function
-- On ISIRI reduce production primary_expression -> iri_or_function
-- On ISBLANK reduce production primary_expression -> iri_or_function
-- On IRI reduce production primary_expression -> iri_or_function
-- On IN reduce production primary_expression -> iri_or_function
-- On IF reduce production primary_expression -> iri_or_function
-- On HOURS reduce production primary_expression -> iri_or_function
-- On HAVING reduce production primary_expression -> iri_or_function
-- On GTE reduce production primary_expression -> iri_or_function
-- On GT reduce production primary_expression -> iri_or_function
-- On GROUP_CONCAT reduce production primary_expression -> iri_or_function
-- On FLOOR reduce production primary_expression -> iri_or_function
-- On EXISTS reduce production primary_expression -> iri_or_function
-- On EQUAL reduce production primary_expression -> iri_or_function
-- On EOF reduce production primary_expression -> iri_or_function
-- On ENCODE_FOR_URI reduce production primary_expression -> iri_or_function
-- On Double_positive reduce production primary_expression -> iri_or_function
-- On Double_negative reduce production primary_expression -> iri_or_function
-- On Double reduce production primary_expression -> iri_or_function
-- On Decimal_positive reduce production primary_expression -> iri_or_function
-- On Decimal_negative reduce production primary_expression -> iri_or_function
-- On Decimal reduce production primary_expression -> iri_or_function
-- On DAY reduce production primary_expression -> iri_or_function
-- On DATATYPE reduce production primary_expression -> iri_or_function
-- On COUNT reduce production primary_expression -> iri_or_function
-- On CONTAINS reduce production primary_expression -> iri_or_function
-- On CONCAT reduce production primary_expression -> iri_or_function
-- On COMMA reduce production primary_expression -> iri_or_function
-- On COALESCE reduce production primary_expression -> iri_or_function
-- On CEIL reduce production primary_expression -> iri_or_function
-- On Boolean reduce production primary_expression -> iri_or_function
-- On BOUND reduce production primary_expression -> iri_or_function
-- On BNODE reduce production primary_expression -> iri_or_function
-- On BANG reduce production primary_expression -> iri_or_function
-- On AVG reduce production primary_expression -> iri_or_function
-- On AS reduce production primary_expression -> iri_or_function
-- On AMPAMP reduce production primary_expression -> iri_or_function
-- On ABS reduce production primary_expression -> iri_or_function

State 326:
function_call -> iri . arg_list [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
iri_or_function -> iri . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
-- On NIL shift to state 327
-- On LPAR shift to state 328
-- On arg_list shift to state 350
-- On YEAR reduce production iri_or_function -> iri
-- On Var2 reduce production iri_or_function -> iri
-- On Var1 reduce production iri_or_function -> iri
-- On VALUES reduce production iri_or_function -> iri
-- On UUID reduce production iri_or_function -> iri
-- On URI reduce production iri_or_function -> iri
-- On UCASE reduce production iri_or_function -> iri
-- On TZ reduce production iri_or_function -> iri
-- On TIMEZONE reduce production iri_or_function -> iri
-- On String_literal reduce production iri_or_function -> iri
-- On SUM reduce production iri_or_function -> iri
-- On SUBSTR reduce production iri_or_function -> iri
-- On STRUUID reduce production iri_or_function -> iri
-- On STRSTARTS reduce production iri_or_function -> iri
-- On STRLEN reduce production iri_or_function -> iri
-- On STRLANG reduce production iri_or_function -> iri
-- On STRENDS reduce production iri_or_function -> iri
-- On STRDT reduce production iri_or_function -> iri
-- On STRBEFORE reduce production iri_or_function -> iri
-- On STRAFTER reduce production iri_or_function -> iri
-- On STR reduce production iri_or_function -> iri
-- On STAR reduce production iri_or_function -> iri
-- On SLASH reduce production iri_or_function -> iri
-- On SHA512 reduce production iri_or_function -> iri
-- On SHA384 reduce production iri_or_function -> iri
-- On SHA256 reduce production iri_or_function -> iri
-- On SHA1 reduce production iri_or_function -> iri
-- On SEMICOLON reduce production iri_or_function -> iri
-- On SECONDS reduce production iri_or_function -> iri
-- On SAMPLE reduce production iri_or_function -> iri
-- On SAMETERM reduce production iri_or_function -> iri
-- On RPAR reduce production iri_or_function -> iri
-- On ROUND reduce production iri_or_function -> iri
-- On REPLACE reduce production iri_or_function -> iri
-- On REGEX reduce production iri_or_function -> iri
-- On RBRACE reduce production iri_or_function -> iri
-- On RAND reduce production iri_or_function -> iri
-- On Pname_ns reduce production iri_or_function -> iri
-- On Pname_ln reduce production iri_or_function -> iri
-- On PLUS reduce production iri_or_function -> iri
-- On PIPEPIPE reduce production iri_or_function -> iri
-- On ORDER reduce production iri_or_function -> iri
-- On OFFSET reduce production iri_or_function -> iri
-- On NOW reduce production iri_or_function -> iri
-- On NOTEQUAL reduce production iri_or_function -> iri
-- On NOT reduce production iri_or_function -> iri
-- On MONTH reduce production iri_or_function -> iri
-- On MINUTES reduce production iri_or_function -> iri
-- On MINUS reduce production iri_or_function -> iri
-- On MIN reduce production iri_or_function -> iri
-- On MD5 reduce production iri_or_function -> iri
-- On MAX reduce production iri_or_function -> iri
-- On LTE reduce production iri_or_function -> iri
-- On LT reduce production iri_or_function -> iri
-- On LPAR reduce production iri_or_function -> iri
-- On LIMIT reduce production iri_or_function -> iri
-- On LCASE reduce production iri_or_function -> iri
-- On LANGMATCHES reduce production iri_or_function -> iri
-- On LANG reduce production iri_or_function -> iri
-- On Iriref_ reduce production iri_or_function -> iri
-- On Integer_positive reduce production iri_or_function -> iri
-- On Integer_negative reduce production iri_or_function -> iri
-- On Integer reduce production iri_or_function -> iri
-- On ISURI reduce production iri_or_function -> iri
-- On ISNUMERIC reduce production iri_or_function -> iri
-- On ISLITERAL reduce production iri_or_function -> iri
-- On ISIRI reduce production iri_or_function -> iri
-- On ISBLANK reduce production iri_or_function -> iri
-- On IRI reduce production iri_or_function -> iri
-- On IN reduce production iri_or_function -> iri
-- On IF reduce production iri_or_function -> iri
-- On HOURS reduce production iri_or_function -> iri
-- On HAVING reduce production iri_or_function -> iri
-- On GTE reduce production iri_or_function -> iri
-- On GT reduce production iri_or_function -> iri
-- On GROUP_CONCAT reduce production iri_or_function -> iri
-- On FLOOR reduce production iri_or_function -> iri
-- On EXISTS reduce production iri_or_function -> iri
-- On EQUAL reduce production iri_or_function -> iri
-- On EOF reduce production iri_or_function -> iri
-- On ENCODE_FOR_URI reduce production iri_or_function -> iri
-- On Double_positive reduce production iri_or_function -> iri
-- On Double_negative reduce production iri_or_function -> iri
-- On Double reduce production iri_or_function -> iri
-- On Decimal_positive reduce production iri_or_function -> iri
-- On Decimal_negative reduce production iri_or_function -> iri
-- On Decimal reduce production iri_or_function -> iri
-- On DAY reduce production iri_or_function -> iri
-- On DATATYPE reduce production iri_or_function -> iri
-- On COUNT reduce production iri_or_function -> iri
-- On CONTAINS reduce production iri_or_function -> iri
-- On CONCAT reduce production iri_or_function -> iri
-- On COMMA reduce production iri_or_function -> iri
-- On COALESCE reduce production iri_or_function -> iri
-- On CEIL reduce production iri_or_function -> iri
-- On Boolean reduce production iri_or_function -> iri
-- On BOUND reduce production iri_or_function -> iri
-- On BNODE reduce production iri_or_function -> iri
-- On BANG reduce production iri_or_function -> iri
-- On AVG reduce production iri_or_function -> iri
-- On AS reduce production iri_or_function -> iri
-- On AMPAMP reduce production iri_or_function -> iri
-- On ABS reduce production iri_or_function -> iri
** Conflict on LPAR

State 327:
arg_list -> NIL . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production arg_list -> NIL
-- On Var2 reduce production arg_list -> NIL
-- On Var1 reduce production arg_list -> NIL
-- On VALUES reduce production arg_list -> NIL
-- On UUID reduce production arg_list -> NIL
-- On URI reduce production arg_list -> NIL
-- On UCASE reduce production arg_list -> NIL
-- On TZ reduce production arg_list -> NIL
-- On TIMEZONE reduce production arg_list -> NIL
-- On String_literal reduce production arg_list -> NIL
-- On SUM reduce production arg_list -> NIL
-- On SUBSTR reduce production arg_list -> NIL
-- On STRUUID reduce production arg_list -> NIL
-- On STRSTARTS reduce production arg_list -> NIL
-- On STRLEN reduce production arg_list -> NIL
-- On STRLANG reduce production arg_list -> NIL
-- On STRENDS reduce production arg_list -> NIL
-- On STRDT reduce production arg_list -> NIL
-- On STRBEFORE reduce production arg_list -> NIL
-- On STRAFTER reduce production arg_list -> NIL
-- On STR reduce production arg_list -> NIL
-- On STAR reduce production arg_list -> NIL
-- On SLASH reduce production arg_list -> NIL
-- On SHA512 reduce production arg_list -> NIL
-- On SHA384 reduce production arg_list -> NIL
-- On SHA256 reduce production arg_list -> NIL
-- On SHA1 reduce production arg_list -> NIL
-- On SERVICE reduce production arg_list -> NIL
-- On SEMICOLON reduce production arg_list -> NIL
-- On SECONDS reduce production arg_list -> NIL
-- On SAMPLE reduce production arg_list -> NIL
-- On SAMETERM reduce production arg_list -> NIL
-- On RPAR reduce production arg_list -> NIL
-- On ROUND reduce production arg_list -> NIL
-- On REPLACE reduce production arg_list -> NIL
-- On REGEX reduce production arg_list -> NIL
-- On RBRACE reduce production arg_list -> NIL
-- On RAND reduce production arg_list -> NIL
-- On Pname_ns reduce production arg_list -> NIL
-- On Pname_ln reduce production arg_list -> NIL
-- On PLUS reduce production arg_list -> NIL
-- On PIPEPIPE reduce production arg_list -> NIL
-- On ORDER reduce production arg_list -> NIL
-- On OPTIONAL reduce production arg_list -> NIL
-- On OFFSET reduce production arg_list -> NIL
-- On NOW reduce production arg_list -> NIL
-- On NOTEQUAL reduce production arg_list -> NIL
-- On NOT reduce production arg_list -> NIL
-- On NIL reduce production arg_list -> NIL
-- On MONTH reduce production arg_list -> NIL
-- On MINUTES reduce production arg_list -> NIL
-- On MINUS reduce production arg_list -> NIL
-- On MIN reduce production arg_list -> NIL
-- On MD5 reduce production arg_list -> NIL
-- On MAX reduce production arg_list -> NIL
-- On LTE reduce production arg_list -> NIL
-- On LT reduce production arg_list -> NIL
-- On LPAR reduce production arg_list -> NIL
-- On LIMIT reduce production arg_list -> NIL
-- On LCASE reduce production arg_list -> NIL
-- On LBRACKET reduce production arg_list -> NIL
-- On LBRACE reduce production arg_list -> NIL
-- On LANGMATCHES reduce production arg_list -> NIL
-- On LANG reduce production arg_list -> NIL
-- On Iriref_ reduce production arg_list -> NIL
-- On Integer_positive reduce production arg_list -> NIL
-- On Integer_negative reduce production arg_list -> NIL
-- On Integer reduce production arg_list -> NIL
-- On ISURI reduce production arg_list -> NIL
-- On ISNUMERIC reduce production arg_list -> NIL
-- On ISLITERAL reduce production arg_list -> NIL
-- On ISIRI reduce production arg_list -> NIL
-- On ISBLANK reduce production arg_list -> NIL
-- On IRI reduce production arg_list -> NIL
-- On IN reduce production arg_list -> NIL
-- On IF reduce production arg_list -> NIL
-- On HOURS reduce production arg_list -> NIL
-- On HAVING reduce production arg_list -> NIL
-- On GTE reduce production arg_list -> NIL
-- On GT reduce production arg_list -> NIL
-- On GROUP_CONCAT reduce production arg_list -> NIL
-- On GRAPH reduce production arg_list -> NIL
-- On FLOOR reduce production arg_list -> NIL
-- On FILTER reduce production arg_list -> NIL
-- On EXISTS reduce production arg_list -> NIL
-- On EQUAL reduce production arg_list -> NIL
-- On EOF reduce production arg_list -> NIL
-- On ENCODE_FOR_URI reduce production arg_list -> NIL
-- On Double_positive reduce production arg_list -> NIL
-- On Double_negative reduce production arg_list -> NIL
-- On Double reduce production arg_list -> NIL
-- On Decimal_positive reduce production arg_list -> NIL
-- On Decimal_negative reduce production arg_list -> NIL
-- On Decimal reduce production arg_list -> NIL
-- On DOT reduce production arg_list -> NIL
-- On DESC reduce production arg_list -> NIL
-- On DAY reduce production arg_list -> NIL
-- On DATATYPE reduce production arg_list -> NIL
-- On COUNT reduce production arg_list -> NIL
-- On CONTAINS reduce production arg_list -> NIL
-- On CONCAT reduce production arg_list -> NIL
-- On COMMA reduce production arg_list -> NIL
-- On COALESCE reduce production arg_list -> NIL
-- On CEIL reduce production arg_list -> NIL
-- On Boolean reduce production arg_list -> NIL
-- On Blank_node_label reduce production arg_list -> NIL
-- On BOUND reduce production arg_list -> NIL
-- On BNODE reduce production arg_list -> NIL
-- On BIND reduce production arg_list -> NIL
-- On BANG reduce production arg_list -> NIL
-- On AVG reduce production arg_list -> NIL
-- On ASC reduce production arg_list -> NIL
-- On AS reduce production arg_list -> NIL
-- On ANON reduce production arg_list -> NIL
-- On AMPAMP reduce production arg_list -> NIL
-- On ABS reduce production arg_list -> NIL

State 328:
arg_list -> LPAR . option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On DISTINCT shift to state 34
-- On option(DISTINCT) shift to state 329
-- On YEAR reduce production option(DISTINCT) ->
-- On Var2 reduce production option(DISTINCT) ->
-- On Var1 reduce production option(DISTINCT) ->
-- On UUID reduce production option(DISTINCT) ->
-- On URI reduce production option(DISTINCT) ->
-- On UCASE reduce production option(DISTINCT) ->
-- On TZ reduce production option(DISTINCT) ->
-- On TIMEZONE reduce production option(DISTINCT) ->
-- On String_literal reduce production option(DISTINCT) ->
-- On SUM reduce production option(DISTINCT) ->
-- On SUBSTR reduce production option(DISTINCT) ->
-- On STRUUID reduce production option(DISTINCT) ->
-- On STRSTARTS reduce production option(DISTINCT) ->
-- On STRLEN reduce production option(DISTINCT) ->
-- On STRLANG reduce production option(DISTINCT) ->
-- On STRENDS reduce production option(DISTINCT) ->
-- On STRDT reduce production option(DISTINCT) ->
-- On STRBEFORE reduce production option(DISTINCT) ->
-- On STRAFTER reduce production option(DISTINCT) ->
-- On STR reduce production option(DISTINCT) ->
-- On SHA512 reduce production option(DISTINCT) ->
-- On SHA384 reduce production option(DISTINCT) ->
-- On SHA256 reduce production option(DISTINCT) ->
-- On SHA1 reduce production option(DISTINCT) ->
-- On SECONDS reduce production option(DISTINCT) ->
-- On SAMPLE reduce production option(DISTINCT) ->
-- On SAMETERM reduce production option(DISTINCT) ->
-- On ROUND reduce production option(DISTINCT) ->
-- On REPLACE reduce production option(DISTINCT) ->
-- On REGEX reduce production option(DISTINCT) ->
-- On RAND reduce production option(DISTINCT) ->
-- On Pname_ns reduce production option(DISTINCT) ->
-- On Pname_ln reduce production option(DISTINCT) ->
-- On PLUS reduce production option(DISTINCT) ->
-- On NOW reduce production option(DISTINCT) ->
-- On NOT reduce production option(DISTINCT) ->
-- On MONTH reduce production option(DISTINCT) ->
-- On MINUTES reduce production option(DISTINCT) ->
-- On MINUS reduce production option(DISTINCT) ->
-- On MIN reduce production option(DISTINCT) ->
-- On MD5 reduce production option(DISTINCT) ->
-- On MAX reduce production option(DISTINCT) ->
-- On LPAR reduce production option(DISTINCT) ->
-- On LCASE reduce production option(DISTINCT) ->
-- On LANGMATCHES reduce production option(DISTINCT) ->
-- On LANG reduce production option(DISTINCT) ->
-- On Iriref_ reduce production option(DISTINCT) ->
-- On Integer_positive reduce production option(DISTINCT) ->
-- On Integer_negative reduce production option(DISTINCT) ->
-- On Integer reduce production option(DISTINCT) ->
-- On ISURI reduce production option(DISTINCT) ->
-- On ISNUMERIC reduce production option(DISTINCT) ->
-- On ISLITERAL reduce production option(DISTINCT) ->
-- On ISIRI reduce production option(DISTINCT) ->
-- On ISBLANK reduce production option(DISTINCT) ->
-- On IRI reduce production option(DISTINCT) ->
-- On IF reduce production option(DISTINCT) ->
-- On HOURS reduce production option(DISTINCT) ->
-- On GROUP_CONCAT reduce production option(DISTINCT) ->
-- On FLOOR reduce production option(DISTINCT) ->
-- On EXISTS reduce production option(DISTINCT) ->
-- On ENCODE_FOR_URI reduce production option(DISTINCT) ->
-- On Double_positive reduce production option(DISTINCT) ->
-- On Double_negative reduce production option(DISTINCT) ->
-- On Double reduce production option(DISTINCT) ->
-- On Decimal_positive reduce production option(DISTINCT) ->
-- On Decimal_negative reduce production option(DISTINCT) ->
-- On Decimal reduce production option(DISTINCT) ->
-- On DAY reduce production option(DISTINCT) ->
-- On DATATYPE reduce production option(DISTINCT) ->
-- On COUNT reduce production option(DISTINCT) ->
-- On CONTAINS reduce production option(DISTINCT) ->
-- On CONCAT reduce production option(DISTINCT) ->
-- On COALESCE reduce production option(DISTINCT) ->
-- On CEIL reduce production option(DISTINCT) ->
-- On Boolean reduce production option(DISTINCT) ->
-- On BOUND reduce production option(DISTINCT) ->
-- On BNODE reduce production option(DISTINCT) ->
-- On BANG reduce production option(DISTINCT) ->
-- On AVG reduce production option(DISTINCT) ->
-- On ABS reduce production option(DISTINCT) ->

State 329:
arg_list -> LPAR option(DISTINCT) . separated_nonempty_list(COMMA,expression) RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On separated_nonempty_list(COMMA,expression) shift to state 330
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 333
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 330:
arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On RPAR shift to state 331

State 331:
arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On Var2 reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On Var1 reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On VALUES reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On UUID reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On URI reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On UCASE reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On TZ reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On TIMEZONE reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On String_literal reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On SUM reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On SUBSTR reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On STRUUID reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On STRSTARTS reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On STRLEN reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On STRLANG reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On STRENDS reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On STRDT reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On STRBEFORE reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On STRAFTER reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On STR reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On STAR reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On SLASH reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On SHA512 reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On SHA384 reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On SHA256 reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On SHA1 reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On SERVICE reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On SEMICOLON reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On SECONDS reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On SAMPLE reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On SAMETERM reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On RPAR reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On ROUND reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On REPLACE reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On REGEX reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On RBRACE reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On RAND reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On Pname_ns reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On Pname_ln reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On PLUS reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On PIPEPIPE reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On ORDER reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On OPTIONAL reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On OFFSET reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On NOW reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On NOTEQUAL reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On NOT reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On NIL reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On MONTH reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On MINUTES reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On MINUS reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On MIN reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On MD5 reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On MAX reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On LTE reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On LT reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On LPAR reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On LIMIT reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On LCASE reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On LBRACKET reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On LBRACE reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On LANGMATCHES reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On LANG reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On Iriref_ reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On Integer_positive reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On Integer_negative reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On Integer reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On ISURI reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On ISNUMERIC reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On ISLITERAL reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On ISIRI reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On ISBLANK reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On IRI reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On IN reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On IF reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On HOURS reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On HAVING reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On GTE reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On GT reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On GROUP_CONCAT reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On GRAPH reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On FLOOR reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On FILTER reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On EXISTS reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On EQUAL reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On EOF reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On ENCODE_FOR_URI reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On Double_positive reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On Double_negative reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On Double reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On Decimal_positive reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On Decimal_negative reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On Decimal reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On DOT reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On DESC reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On DAY reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On DATATYPE reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On COUNT reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On CONTAINS reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On CONCAT reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On COMMA reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On COALESCE reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On CEIL reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On Boolean reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On Blank_node_label reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On BOUND reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On BNODE reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On BIND reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On BANG reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On AVG reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On ASC reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On AS reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On ANON reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On AMPAMP reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
-- On ABS reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR

State 332:
iri_or_function -> function_call . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
-- On YEAR reduce production iri_or_function -> function_call
-- On Var2 reduce production iri_or_function -> function_call
-- On Var1 reduce production iri_or_function -> function_call
-- On VALUES reduce production iri_or_function -> function_call
-- On UUID reduce production iri_or_function -> function_call
-- On URI reduce production iri_or_function -> function_call
-- On UCASE reduce production iri_or_function -> function_call
-- On TZ reduce production iri_or_function -> function_call
-- On TIMEZONE reduce production iri_or_function -> function_call
-- On String_literal reduce production iri_or_function -> function_call
-- On SUM reduce production iri_or_function -> function_call
-- On SUBSTR reduce production iri_or_function -> function_call
-- On STRUUID reduce production iri_or_function -> function_call
-- On STRSTARTS reduce production iri_or_function -> function_call
-- On STRLEN reduce production iri_or_function -> function_call
-- On STRLANG reduce production iri_or_function -> function_call
-- On STRENDS reduce production iri_or_function -> function_call
-- On STRDT reduce production iri_or_function -> function_call
-- On STRBEFORE reduce production iri_or_function -> function_call
-- On STRAFTER reduce production iri_or_function -> function_call
-- On STR reduce production iri_or_function -> function_call
-- On STAR reduce production iri_or_function -> function_call
-- On SLASH reduce production iri_or_function -> function_call
-- On SHA512 reduce production iri_or_function -> function_call
-- On SHA384 reduce production iri_or_function -> function_call
-- On SHA256 reduce production iri_or_function -> function_call
-- On SHA1 reduce production iri_or_function -> function_call
-- On SEMICOLON reduce production iri_or_function -> function_call
-- On SECONDS reduce production iri_or_function -> function_call
-- On SAMPLE reduce production iri_or_function -> function_call
-- On SAMETERM reduce production iri_or_function -> function_call
-- On RPAR reduce production iri_or_function -> function_call
-- On ROUND reduce production iri_or_function -> function_call
-- On REPLACE reduce production iri_or_function -> function_call
-- On REGEX reduce production iri_or_function -> function_call
-- On RBRACE reduce production iri_or_function -> function_call
-- On RAND reduce production iri_or_function -> function_call
-- On Pname_ns reduce production iri_or_function -> function_call
-- On Pname_ln reduce production iri_or_function -> function_call
-- On PLUS reduce production iri_or_function -> function_call
-- On PIPEPIPE reduce production iri_or_function -> function_call
-- On ORDER reduce production iri_or_function -> function_call
-- On OFFSET reduce production iri_or_function -> function_call
-- On NOW reduce production iri_or_function -> function_call
-- On NOTEQUAL reduce production iri_or_function -> function_call
-- On NOT reduce production iri_or_function -> function_call
-- On MONTH reduce production iri_or_function -> function_call
-- On MINUTES reduce production iri_or_function -> function_call
-- On MINUS reduce production iri_or_function -> function_call
-- On MIN reduce production iri_or_function -> function_call
-- On MD5 reduce production iri_or_function -> function_call
-- On MAX reduce production iri_or_function -> function_call
-- On LTE reduce production iri_or_function -> function_call
-- On LT reduce production iri_or_function -> function_call
-- On LPAR reduce production iri_or_function -> function_call
-- On LIMIT reduce production iri_or_function -> function_call
-- On LCASE reduce production iri_or_function -> function_call
-- On LANGMATCHES reduce production iri_or_function -> function_call
-- On LANG reduce production iri_or_function -> function_call
-- On Iriref_ reduce production iri_or_function -> function_call
-- On Integer_positive reduce production iri_or_function -> function_call
-- On Integer_negative reduce production iri_or_function -> function_call
-- On Integer reduce production iri_or_function -> function_call
-- On ISURI reduce production iri_or_function -> function_call
-- On ISNUMERIC reduce production iri_or_function -> function_call
-- On ISLITERAL reduce production iri_or_function -> function_call
-- On ISIRI reduce production iri_or_function -> function_call
-- On ISBLANK reduce production iri_or_function -> function_call
-- On IRI reduce production iri_or_function -> function_call
-- On IN reduce production iri_or_function -> function_call
-- On IF reduce production iri_or_function -> function_call
-- On HOURS reduce production iri_or_function -> function_call
-- On HAVING reduce production iri_or_function -> function_call
-- On GTE reduce production iri_or_function -> function_call
-- On GT reduce production iri_or_function -> function_call
-- On GROUP_CONCAT reduce production iri_or_function -> function_call
-- On FLOOR reduce production iri_or_function -> function_call
-- On EXISTS reduce production iri_or_function -> function_call
-- On EQUAL reduce production iri_or_function -> function_call
-- On EOF reduce production iri_or_function -> function_call
-- On ENCODE_FOR_URI reduce production iri_or_function -> function_call
-- On Double_positive reduce production iri_or_function -> function_call
-- On Double_negative reduce production iri_or_function -> function_call
-- On Double reduce production iri_or_function -> function_call
-- On Decimal_positive reduce production iri_or_function -> function_call
-- On Decimal_negative reduce production iri_or_function -> function_call
-- On Decimal reduce production iri_or_function -> function_call
-- On DAY reduce production iri_or_function -> function_call
-- On DATATYPE reduce production iri_or_function -> function_call
-- On COUNT reduce production iri_or_function -> function_call
-- On CONTAINS reduce production iri_or_function -> function_call
-- On CONCAT reduce production iri_or_function -> function_call
-- On COMMA reduce production iri_or_function -> function_call
-- On COALESCE reduce production iri_or_function -> function_call
-- On CEIL reduce production iri_or_function -> function_call
-- On Boolean reduce production iri_or_function -> function_call
-- On BOUND reduce production iri_or_function -> function_call
-- On BNODE reduce production iri_or_function -> function_call
-- On BANG reduce production iri_or_function -> function_call
-- On AVG reduce production iri_or_function -> function_call
-- On AS reduce production iri_or_function -> function_call
-- On AMPAMP reduce production iri_or_function -> function_call
-- On ABS reduce production iri_or_function -> function_call

State 333:
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
separated_nonempty_list(COMMA,expression) -> expression . [ RPAR ]
separated_nonempty_list(COMMA,expression) -> expression . COMMA separated_nonempty_list(COMMA,expression) [ RPAR ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On COMMA shift to state 348
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
-- On RPAR reduce production separated_nonempty_list(COMMA,expression) -> expression

State 334:
numexp -> expression STAR . expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 335
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 335:
numexp -> expression . STAR expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression STAR expression . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . SLASH expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . PLUS expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . MINUS expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . numeric_literal_positive [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . numeric_literal_negative [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
-- On YEAR reduce production numexp -> expression STAR expression
-- On Var2 reduce production numexp -> expression STAR expression
-- On Var1 reduce production numexp -> expression STAR expression
-- On VALUES reduce production numexp -> expression STAR expression
-- On UUID reduce production numexp -> expression STAR expression
-- On URI reduce production numexp -> expression STAR expression
-- On UCASE reduce production numexp -> expression STAR expression
-- On TZ reduce production numexp -> expression STAR expression
-- On TIMEZONE reduce production numexp -> expression STAR expression
-- On String_literal reduce production numexp -> expression STAR expression
-- On SUM reduce production numexp -> expression STAR expression
-- On SUBSTR reduce production numexp -> expression STAR expression
-- On STRUUID reduce production numexp -> expression STAR expression
-- On STRSTARTS reduce production numexp -> expression STAR expression
-- On STRLEN reduce production numexp -> expression STAR expression
-- On STRLANG reduce production numexp -> expression STAR expression
-- On STRENDS reduce production numexp -> expression STAR expression
-- On STRDT reduce production numexp -> expression STAR expression
-- On STRBEFORE reduce production numexp -> expression STAR expression
-- On STRAFTER reduce production numexp -> expression STAR expression
-- On STR reduce production numexp -> expression STAR expression
-- On STAR reduce production numexp -> expression STAR expression
-- On SLASH reduce production numexp -> expression STAR expression
-- On SHA512 reduce production numexp -> expression STAR expression
-- On SHA384 reduce production numexp -> expression STAR expression
-- On SHA256 reduce production numexp -> expression STAR expression
-- On SHA1 reduce production numexp -> expression STAR expression
-- On SEMICOLON reduce production numexp -> expression STAR expression
-- On SECONDS reduce production numexp -> expression STAR expression
-- On SAMPLE reduce production numexp -> expression STAR expression
-- On SAMETERM reduce production numexp -> expression STAR expression
-- On RPAR reduce production numexp -> expression STAR expression
-- On ROUND reduce production numexp -> expression STAR expression
-- On REPLACE reduce production numexp -> expression STAR expression
-- On REGEX reduce production numexp -> expression STAR expression
-- On RBRACE reduce production numexp -> expression STAR expression
-- On RAND reduce production numexp -> expression STAR expression
-- On Pname_ns reduce production numexp -> expression STAR expression
-- On Pname_ln reduce production numexp -> expression STAR expression
-- On PLUS reduce production numexp -> expression STAR expression
-- On PIPEPIPE reduce production numexp -> expression STAR expression
-- On ORDER reduce production numexp -> expression STAR expression
-- On OFFSET reduce production numexp -> expression STAR expression
-- On NOW reduce production numexp -> expression STAR expression
-- On NOTEQUAL reduce production numexp -> expression STAR expression
-- On NOT reduce production numexp -> expression STAR expression
-- On MONTH reduce production numexp -> expression STAR expression
-- On MINUTES reduce production numexp -> expression STAR expression
-- On MINUS reduce production numexp -> expression STAR expression
-- On MIN reduce production numexp -> expression STAR expression
-- On MD5 reduce production numexp -> expression STAR expression
-- On MAX reduce production numexp -> expression STAR expression
-- On LTE reduce production numexp -> expression STAR expression
-- On LT reduce production numexp -> expression STAR expression
-- On LPAR reduce production numexp -> expression STAR expression
-- On LIMIT reduce production numexp -> expression STAR expression
-- On LCASE reduce production numexp -> expression STAR expression
-- On LANGMATCHES reduce production numexp -> expression STAR expression
-- On LANG reduce production numexp -> expression STAR expression
-- On Iriref_ reduce production numexp -> expression STAR expression
-- On Integer_positive reduce production numexp -> expression STAR expression
-- On Integer_negative reduce production numexp -> expression STAR expression
-- On Integer reduce production numexp -> expression STAR expression
-- On ISURI reduce production numexp -> expression STAR expression
-- On ISNUMERIC reduce production numexp -> expression STAR expression
-- On ISLITERAL reduce production numexp -> expression STAR expression
-- On ISIRI reduce production numexp -> expression STAR expression
-- On ISBLANK reduce production numexp -> expression STAR expression
-- On IRI reduce production numexp -> expression STAR expression
-- On IN reduce production numexp -> expression STAR expression
-- On IF reduce production numexp -> expression STAR expression
-- On HOURS reduce production numexp -> expression STAR expression
-- On HAVING reduce production numexp -> expression STAR expression
-- On GTE reduce production numexp -> expression STAR expression
-- On GT reduce production numexp -> expression STAR expression
-- On GROUP_CONCAT reduce production numexp -> expression STAR expression
-- On FLOOR reduce production numexp -> expression STAR expression
-- On EXISTS reduce production numexp -> expression STAR expression
-- On EQUAL reduce production numexp -> expression STAR expression
-- On EOF reduce production numexp -> expression STAR expression
-- On ENCODE_FOR_URI reduce production numexp -> expression STAR expression
-- On Double_positive reduce production numexp -> expression STAR expression
-- On Double_negative reduce production numexp -> expression STAR expression
-- On Double reduce production numexp -> expression STAR expression
-- On Decimal_positive reduce production numexp -> expression STAR expression
-- On Decimal_negative reduce production numexp -> expression STAR expression
-- On Decimal reduce production numexp -> expression STAR expression
-- On DAY reduce production numexp -> expression STAR expression
-- On DATATYPE reduce production numexp -> expression STAR expression
-- On COUNT reduce production numexp -> expression STAR expression
-- On CONTAINS reduce production numexp -> expression STAR expression
-- On CONCAT reduce production numexp -> expression STAR expression
-- On COMMA reduce production numexp -> expression STAR expression
-- On COALESCE reduce production numexp -> expression STAR expression
-- On CEIL reduce production numexp -> expression STAR expression
-- On Boolean reduce production numexp -> expression STAR expression
-- On BOUND reduce production numexp -> expression STAR expression
-- On BNODE reduce production numexp -> expression STAR expression
-- On BANG reduce production numexp -> expression STAR expression
-- On AVG reduce production numexp -> expression STAR expression
-- On AS reduce production numexp -> expression STAR expression
-- On AMPAMP reduce production numexp -> expression STAR expression
-- On ABS reduce production numexp -> expression STAR expression
** Conflict on Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative

State 336:
numexp -> expression numeric_literal_positive . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
-- On YEAR reduce production numexp -> expression numeric_literal_positive
-- On Var2 reduce production numexp -> expression numeric_literal_positive
-- On Var1 reduce production numexp -> expression numeric_literal_positive
-- On VALUES reduce production numexp -> expression numeric_literal_positive
-- On UUID reduce production numexp -> expression numeric_literal_positive
-- On URI reduce production numexp -> expression numeric_literal_positive
-- On UCASE reduce production numexp -> expression numeric_literal_positive
-- On TZ reduce production numexp -> expression numeric_literal_positive
-- On TIMEZONE reduce production numexp -> expression numeric_literal_positive
-- On String_literal reduce production numexp -> expression numeric_literal_positive
-- On SUM reduce production numexp -> expression numeric_literal_positive
-- On SUBSTR reduce production numexp -> expression numeric_literal_positive
-- On STRUUID reduce production numexp -> expression numeric_literal_positive
-- On STRSTARTS reduce production numexp -> expression numeric_literal_positive
-- On STRLEN reduce production numexp -> expression numeric_literal_positive
-- On STRLANG reduce production numexp -> expression numeric_literal_positive
-- On STRENDS reduce production numexp -> expression numeric_literal_positive
-- On STRDT reduce production numexp -> expression numeric_literal_positive
-- On STRBEFORE reduce production numexp -> expression numeric_literal_positive
-- On STRAFTER reduce production numexp -> expression numeric_literal_positive
-- On STR reduce production numexp -> expression numeric_literal_positive
-- On STAR reduce production numexp -> expression numeric_literal_positive
-- On SLASH reduce production numexp -> expression numeric_literal_positive
-- On SHA512 reduce production numexp -> expression numeric_literal_positive
-- On SHA384 reduce production numexp -> expression numeric_literal_positive
-- On SHA256 reduce production numexp -> expression numeric_literal_positive
-- On SHA1 reduce production numexp -> expression numeric_literal_positive
-- On SEMICOLON reduce production numexp -> expression numeric_literal_positive
-- On SECONDS reduce production numexp -> expression numeric_literal_positive
-- On SAMPLE reduce production numexp -> expression numeric_literal_positive
-- On SAMETERM reduce production numexp -> expression numeric_literal_positive
-- On RPAR reduce production numexp -> expression numeric_literal_positive
-- On ROUND reduce production numexp -> expression numeric_literal_positive
-- On REPLACE reduce production numexp -> expression numeric_literal_positive
-- On REGEX reduce production numexp -> expression numeric_literal_positive
-- On RBRACE reduce production numexp -> expression numeric_literal_positive
-- On RAND reduce production numexp -> expression numeric_literal_positive
-- On Pname_ns reduce production numexp -> expression numeric_literal_positive
-- On Pname_ln reduce production numexp -> expression numeric_literal_positive
-- On PLUS reduce production numexp -> expression numeric_literal_positive
-- On PIPEPIPE reduce production numexp -> expression numeric_literal_positive
-- On ORDER reduce production numexp -> expression numeric_literal_positive
-- On OFFSET reduce production numexp -> expression numeric_literal_positive
-- On NOW reduce production numexp -> expression numeric_literal_positive
-- On NOTEQUAL reduce production numexp -> expression numeric_literal_positive
-- On NOT reduce production numexp -> expression numeric_literal_positive
-- On MONTH reduce production numexp -> expression numeric_literal_positive
-- On MINUTES reduce production numexp -> expression numeric_literal_positive
-- On MINUS reduce production numexp -> expression numeric_literal_positive
-- On MIN reduce production numexp -> expression numeric_literal_positive
-- On MD5 reduce production numexp -> expression numeric_literal_positive
-- On MAX reduce production numexp -> expression numeric_literal_positive
-- On LTE reduce production numexp -> expression numeric_literal_positive
-- On LT reduce production numexp -> expression numeric_literal_positive
-- On LPAR reduce production numexp -> expression numeric_literal_positive
-- On LIMIT reduce production numexp -> expression numeric_literal_positive
-- On LCASE reduce production numexp -> expression numeric_literal_positive
-- On LANGMATCHES reduce production numexp -> expression numeric_literal_positive
-- On LANG reduce production numexp -> expression numeric_literal_positive
-- On Iriref_ reduce production numexp -> expression numeric_literal_positive
-- On Integer_positive reduce production numexp -> expression numeric_literal_positive
-- On Integer_negative reduce production numexp -> expression numeric_literal_positive
-- On Integer reduce production numexp -> expression numeric_literal_positive
-- On ISURI reduce production numexp -> expression numeric_literal_positive
-- On ISNUMERIC reduce production numexp -> expression numeric_literal_positive
-- On ISLITERAL reduce production numexp -> expression numeric_literal_positive
-- On ISIRI reduce production numexp -> expression numeric_literal_positive
-- On ISBLANK reduce production numexp -> expression numeric_literal_positive
-- On IRI reduce production numexp -> expression numeric_literal_positive
-- On IN reduce production numexp -> expression numeric_literal_positive
-- On IF reduce production numexp -> expression numeric_literal_positive
-- On HOURS reduce production numexp -> expression numeric_literal_positive
-- On HAVING reduce production numexp -> expression numeric_literal_positive
-- On GTE reduce production numexp -> expression numeric_literal_positive
-- On GT reduce production numexp -> expression numeric_literal_positive
-- On GROUP_CONCAT reduce production numexp -> expression numeric_literal_positive
-- On FLOOR reduce production numexp -> expression numeric_literal_positive
-- On EXISTS reduce production numexp -> expression numeric_literal_positive
-- On EQUAL reduce production numexp -> expression numeric_literal_positive
-- On EOF reduce production numexp -> expression numeric_literal_positive
-- On ENCODE_FOR_URI reduce production numexp -> expression numeric_literal_positive
-- On Double_positive reduce production numexp -> expression numeric_literal_positive
-- On Double_negative reduce production numexp -> expression numeric_literal_positive
-- On Double reduce production numexp -> expression numeric_literal_positive
-- On Decimal_positive reduce production numexp -> expression numeric_literal_positive
-- On Decimal_negative reduce production numexp -> expression numeric_literal_positive
-- On Decimal reduce production numexp -> expression numeric_literal_positive
-- On DAY reduce production numexp -> expression numeric_literal_positive
-- On DATATYPE reduce production numexp -> expression numeric_literal_positive
-- On COUNT reduce production numexp -> expression numeric_literal_positive
-- On CONTAINS reduce production numexp -> expression numeric_literal_positive
-- On CONCAT reduce production numexp -> expression numeric_literal_positive
-- On COMMA reduce production numexp -> expression numeric_literal_positive
-- On COALESCE reduce production numexp -> expression numeric_literal_positive
-- On CEIL reduce production numexp -> expression numeric_literal_positive
-- On Boolean reduce production numexp -> expression numeric_literal_positive
-- On BOUND reduce production numexp -> expression numeric_literal_positive
-- On BNODE reduce production numexp -> expression numeric_literal_positive
-- On BANG reduce production numexp -> expression numeric_literal_positive
-- On AVG reduce production numexp -> expression numeric_literal_positive
-- On AS reduce production numexp -> expression numeric_literal_positive
-- On AMPAMP reduce production numexp -> expression numeric_literal_positive
-- On ABS reduce production numexp -> expression numeric_literal_positive

State 337:
numexp -> expression numeric_literal_negative . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
-- On YEAR reduce production numexp -> expression numeric_literal_negative
-- On Var2 reduce production numexp -> expression numeric_literal_negative
-- On Var1 reduce production numexp -> expression numeric_literal_negative
-- On VALUES reduce production numexp -> expression numeric_literal_negative
-- On UUID reduce production numexp -> expression numeric_literal_negative
-- On URI reduce production numexp -> expression numeric_literal_negative
-- On UCASE reduce production numexp -> expression numeric_literal_negative
-- On TZ reduce production numexp -> expression numeric_literal_negative
-- On TIMEZONE reduce production numexp -> expression numeric_literal_negative
-- On String_literal reduce production numexp -> expression numeric_literal_negative
-- On SUM reduce production numexp -> expression numeric_literal_negative
-- On SUBSTR reduce production numexp -> expression numeric_literal_negative
-- On STRUUID reduce production numexp -> expression numeric_literal_negative
-- On STRSTARTS reduce production numexp -> expression numeric_literal_negative
-- On STRLEN reduce production numexp -> expression numeric_literal_negative
-- On STRLANG reduce production numexp -> expression numeric_literal_negative
-- On STRENDS reduce production numexp -> expression numeric_literal_negative
-- On STRDT reduce production numexp -> expression numeric_literal_negative
-- On STRBEFORE reduce production numexp -> expression numeric_literal_negative
-- On STRAFTER reduce production numexp -> expression numeric_literal_negative
-- On STR reduce production numexp -> expression numeric_literal_negative
-- On STAR reduce production numexp -> expression numeric_literal_negative
-- On SLASH reduce production numexp -> expression numeric_literal_negative
-- On SHA512 reduce production numexp -> expression numeric_literal_negative
-- On SHA384 reduce production numexp -> expression numeric_literal_negative
-- On SHA256 reduce production numexp -> expression numeric_literal_negative
-- On SHA1 reduce production numexp -> expression numeric_literal_negative
-- On SEMICOLON reduce production numexp -> expression numeric_literal_negative
-- On SECONDS reduce production numexp -> expression numeric_literal_negative
-- On SAMPLE reduce production numexp -> expression numeric_literal_negative
-- On SAMETERM reduce production numexp -> expression numeric_literal_negative
-- On RPAR reduce production numexp -> expression numeric_literal_negative
-- On ROUND reduce production numexp -> expression numeric_literal_negative
-- On REPLACE reduce production numexp -> expression numeric_literal_negative
-- On REGEX reduce production numexp -> expression numeric_literal_negative
-- On RBRACE reduce production numexp -> expression numeric_literal_negative
-- On RAND reduce production numexp -> expression numeric_literal_negative
-- On Pname_ns reduce production numexp -> expression numeric_literal_negative
-- On Pname_ln reduce production numexp -> expression numeric_literal_negative
-- On PLUS reduce production numexp -> expression numeric_literal_negative
-- On PIPEPIPE reduce production numexp -> expression numeric_literal_negative
-- On ORDER reduce production numexp -> expression numeric_literal_negative
-- On OFFSET reduce production numexp -> expression numeric_literal_negative
-- On NOW reduce production numexp -> expression numeric_literal_negative
-- On NOTEQUAL reduce production numexp -> expression numeric_literal_negative
-- On NOT reduce production numexp -> expression numeric_literal_negative
-- On MONTH reduce production numexp -> expression numeric_literal_negative
-- On MINUTES reduce production numexp -> expression numeric_literal_negative
-- On MINUS reduce production numexp -> expression numeric_literal_negative
-- On MIN reduce production numexp -> expression numeric_literal_negative
-- On MD5 reduce production numexp -> expression numeric_literal_negative
-- On MAX reduce production numexp -> expression numeric_literal_negative
-- On LTE reduce production numexp -> expression numeric_literal_negative
-- On LT reduce production numexp -> expression numeric_literal_negative
-- On LPAR reduce production numexp -> expression numeric_literal_negative
-- On LIMIT reduce production numexp -> expression numeric_literal_negative
-- On LCASE reduce production numexp -> expression numeric_literal_negative
-- On LANGMATCHES reduce production numexp -> expression numeric_literal_negative
-- On LANG reduce production numexp -> expression numeric_literal_negative
-- On Iriref_ reduce production numexp -> expression numeric_literal_negative
-- On Integer_positive reduce production numexp -> expression numeric_literal_negative
-- On Integer_negative reduce production numexp -> expression numeric_literal_negative
-- On Integer reduce production numexp -> expression numeric_literal_negative
-- On ISURI reduce production numexp -> expression numeric_literal_negative
-- On ISNUMERIC reduce production numexp -> expression numeric_literal_negative
-- On ISLITERAL reduce production numexp -> expression numeric_literal_negative
-- On ISIRI reduce production numexp -> expression numeric_literal_negative
-- On ISBLANK reduce production numexp -> expression numeric_literal_negative
-- On IRI reduce production numexp -> expression numeric_literal_negative
-- On IN reduce production numexp -> expression numeric_literal_negative
-- On IF reduce production numexp -> expression numeric_literal_negative
-- On HOURS reduce production numexp -> expression numeric_literal_negative
-- On HAVING reduce production numexp -> expression numeric_literal_negative
-- On GTE reduce production numexp -> expression numeric_literal_negative
-- On GT reduce production numexp -> expression numeric_literal_negative
-- On GROUP_CONCAT reduce production numexp -> expression numeric_literal_negative
-- On FLOOR reduce production numexp -> expression numeric_literal_negative
-- On EXISTS reduce production numexp -> expression numeric_literal_negative
-- On EQUAL reduce production numexp -> expression numeric_literal_negative
-- On EOF reduce production numexp -> expression numeric_literal_negative
-- On ENCODE_FOR_URI reduce production numexp -> expression numeric_literal_negative
-- On Double_positive reduce production numexp -> expression numeric_literal_negative
-- On Double_negative reduce production numexp -> expression numeric_literal_negative
-- On Double reduce production numexp -> expression numeric_literal_negative
-- On Decimal_positive reduce production numexp -> expression numeric_literal_negative
-- On Decimal_negative reduce production numexp -> expression numeric_literal_negative
-- On Decimal reduce production numexp -> expression numeric_literal_negative
-- On DAY reduce production numexp -> expression numeric_literal_negative
-- On DATATYPE reduce production numexp -> expression numeric_literal_negative
-- On COUNT reduce production numexp -> expression numeric_literal_negative
-- On CONTAINS reduce production numexp -> expression numeric_literal_negative
-- On CONCAT reduce production numexp -> expression numeric_literal_negative
-- On COMMA reduce production numexp -> expression numeric_literal_negative
-- On COALESCE reduce production numexp -> expression numeric_literal_negative
-- On CEIL reduce production numexp -> expression numeric_literal_negative
-- On Boolean reduce production numexp -> expression numeric_literal_negative
-- On BOUND reduce production numexp -> expression numeric_literal_negative
-- On BNODE reduce production numexp -> expression numeric_literal_negative
-- On BANG reduce production numexp -> expression numeric_literal_negative
-- On AVG reduce production numexp -> expression numeric_literal_negative
-- On AS reduce production numexp -> expression numeric_literal_negative
-- On AMPAMP reduce production numexp -> expression numeric_literal_negative
-- On ABS reduce production numexp -> expression numeric_literal_negative

State 338:
primary_expression -> built_in_call . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
-- On YEAR reduce production primary_expression -> built_in_call
-- On Var2 reduce production primary_expression -> built_in_call
-- On Var1 reduce production primary_expression -> built_in_call
-- On VALUES reduce production primary_expression -> built_in_call
-- On UUID reduce production primary_expression -> built_in_call
-- On URI reduce production primary_expression -> built_in_call
-- On UCASE reduce production primary_expression -> built_in_call
-- On TZ reduce production primary_expression -> built_in_call
-- On TIMEZONE reduce production primary_expression -> built_in_call
-- On String_literal reduce production primary_expression -> built_in_call
-- On SUM reduce production primary_expression -> built_in_call
-- On SUBSTR reduce production primary_expression -> built_in_call
-- On STRUUID reduce production primary_expression -> built_in_call
-- On STRSTARTS reduce production primary_expression -> built_in_call
-- On STRLEN reduce production primary_expression -> built_in_call
-- On STRLANG reduce production primary_expression -> built_in_call
-- On STRENDS reduce production primary_expression -> built_in_call
-- On STRDT reduce production primary_expression -> built_in_call
-- On STRBEFORE reduce production primary_expression -> built_in_call
-- On STRAFTER reduce production primary_expression -> built_in_call
-- On STR reduce production primary_expression -> built_in_call
-- On STAR reduce production primary_expression -> built_in_call
-- On SLASH reduce production primary_expression -> built_in_call
-- On SHA512 reduce production primary_expression -> built_in_call
-- On SHA384 reduce production primary_expression -> built_in_call
-- On SHA256 reduce production primary_expression -> built_in_call
-- On SHA1 reduce production primary_expression -> built_in_call
-- On SEMICOLON reduce production primary_expression -> built_in_call
-- On SECONDS reduce production primary_expression -> built_in_call
-- On SAMPLE reduce production primary_expression -> built_in_call
-- On SAMETERM reduce production primary_expression -> built_in_call
-- On RPAR reduce production primary_expression -> built_in_call
-- On ROUND reduce production primary_expression -> built_in_call
-- On REPLACE reduce production primary_expression -> built_in_call
-- On REGEX reduce production primary_expression -> built_in_call
-- On RBRACE reduce production primary_expression -> built_in_call
-- On RAND reduce production primary_expression -> built_in_call
-- On Pname_ns reduce production primary_expression -> built_in_call
-- On Pname_ln reduce production primary_expression -> built_in_call
-- On PLUS reduce production primary_expression -> built_in_call
-- On PIPEPIPE reduce production primary_expression -> built_in_call
-- On ORDER reduce production primary_expression -> built_in_call
-- On OFFSET reduce production primary_expression -> built_in_call
-- On NOW reduce production primary_expression -> built_in_call
-- On NOTEQUAL reduce production primary_expression -> built_in_call
-- On NOT reduce production primary_expression -> built_in_call
-- On MONTH reduce production primary_expression -> built_in_call
-- On MINUTES reduce production primary_expression -> built_in_call
-- On MINUS reduce production primary_expression -> built_in_call
-- On MIN reduce production primary_expression -> built_in_call
-- On MD5 reduce production primary_expression -> built_in_call
-- On MAX reduce production primary_expression -> built_in_call
-- On LTE reduce production primary_expression -> built_in_call
-- On LT reduce production primary_expression -> built_in_call
-- On LPAR reduce production primary_expression -> built_in_call
-- On LIMIT reduce production primary_expression -> built_in_call
-- On LCASE reduce production primary_expression -> built_in_call
-- On LANGMATCHES reduce production primary_expression -> built_in_call
-- On LANG reduce production primary_expression -> built_in_call
-- On Iriref_ reduce production primary_expression -> built_in_call
-- On Integer_positive reduce production primary_expression -> built_in_call
-- On Integer_negative reduce production primary_expression -> built_in_call
-- On Integer reduce production primary_expression -> built_in_call
-- On ISURI reduce production primary_expression -> built_in_call
-- On ISNUMERIC reduce production primary_expression -> built_in_call
-- On ISLITERAL reduce production primary_expression -> built_in_call
-- On ISIRI reduce production primary_expression -> built_in_call
-- On ISBLANK reduce production primary_expression -> built_in_call
-- On IRI reduce production primary_expression -> built_in_call
-- On IN reduce production primary_expression -> built_in_call
-- On IF reduce production primary_expression -> built_in_call
-- On HOURS reduce production primary_expression -> built_in_call
-- On HAVING reduce production primary_expression -> built_in_call
-- On GTE reduce production primary_expression -> built_in_call
-- On GT reduce production primary_expression -> built_in_call
-- On GROUP_CONCAT reduce production primary_expression -> built_in_call
-- On FLOOR reduce production primary_expression -> built_in_call
-- On EXISTS reduce production primary_expression -> built_in_call
-- On EQUAL reduce production primary_expression -> built_in_call
-- On EOF reduce production primary_expression -> built_in_call
-- On ENCODE_FOR_URI reduce production primary_expression -> built_in_call
-- On Double_positive reduce production primary_expression -> built_in_call
-- On Double_negative reduce production primary_expression -> built_in_call
-- On Double reduce production primary_expression -> built_in_call
-- On Decimal_positive reduce production primary_expression -> built_in_call
-- On Decimal_negative reduce production primary_expression -> built_in_call
-- On Decimal reduce production primary_expression -> built_in_call
-- On DAY reduce production primary_expression -> built_in_call
-- On DATATYPE reduce production primary_expression -> built_in_call
-- On COUNT reduce production primary_expression -> built_in_call
-- On CONTAINS reduce production primary_expression -> built_in_call
-- On CONCAT reduce production primary_expression -> built_in_call
-- On COMMA reduce production primary_expression -> built_in_call
-- On COALESCE reduce production primary_expression -> built_in_call
-- On CEIL reduce production primary_expression -> built_in_call
-- On Boolean reduce production primary_expression -> built_in_call
-- On BOUND reduce production primary_expression -> built_in_call
-- On BNODE reduce production primary_expression -> built_in_call
-- On BANG reduce production primary_expression -> built_in_call
-- On AVG reduce production primary_expression -> built_in_call
-- On AS reduce production primary_expression -> built_in_call
-- On AMPAMP reduce production primary_expression -> built_in_call
-- On ABS reduce production primary_expression -> built_in_call

State 339:
primary_expression -> bracketted_expression . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
-- On YEAR reduce production primary_expression -> bracketted_expression
-- On Var2 reduce production primary_expression -> bracketted_expression
-- On Var1 reduce production primary_expression -> bracketted_expression
-- On VALUES reduce production primary_expression -> bracketted_expression
-- On UUID reduce production primary_expression -> bracketted_expression
-- On URI reduce production primary_expression -> bracketted_expression
-- On UCASE reduce production primary_expression -> bracketted_expression
-- On TZ reduce production primary_expression -> bracketted_expression
-- On TIMEZONE reduce production primary_expression -> bracketted_expression
-- On String_literal reduce production primary_expression -> bracketted_expression
-- On SUM reduce production primary_expression -> bracketted_expression
-- On SUBSTR reduce production primary_expression -> bracketted_expression
-- On STRUUID reduce production primary_expression -> bracketted_expression
-- On STRSTARTS reduce production primary_expression -> bracketted_expression
-- On STRLEN reduce production primary_expression -> bracketted_expression
-- On STRLANG reduce production primary_expression -> bracketted_expression
-- On STRENDS reduce production primary_expression -> bracketted_expression
-- On STRDT reduce production primary_expression -> bracketted_expression
-- On STRBEFORE reduce production primary_expression -> bracketted_expression
-- On STRAFTER reduce production primary_expression -> bracketted_expression
-- On STR reduce production primary_expression -> bracketted_expression
-- On STAR reduce production primary_expression -> bracketted_expression
-- On SLASH reduce production primary_expression -> bracketted_expression
-- On SHA512 reduce production primary_expression -> bracketted_expression
-- On SHA384 reduce production primary_expression -> bracketted_expression
-- On SHA256 reduce production primary_expression -> bracketted_expression
-- On SHA1 reduce production primary_expression -> bracketted_expression
-- On SEMICOLON reduce production primary_expression -> bracketted_expression
-- On SECONDS reduce production primary_expression -> bracketted_expression
-- On SAMPLE reduce production primary_expression -> bracketted_expression
-- On SAMETERM reduce production primary_expression -> bracketted_expression
-- On RPAR reduce production primary_expression -> bracketted_expression
-- On ROUND reduce production primary_expression -> bracketted_expression
-- On REPLACE reduce production primary_expression -> bracketted_expression
-- On REGEX reduce production primary_expression -> bracketted_expression
-- On RBRACE reduce production primary_expression -> bracketted_expression
-- On RAND reduce production primary_expression -> bracketted_expression
-- On Pname_ns reduce production primary_expression -> bracketted_expression
-- On Pname_ln reduce production primary_expression -> bracketted_expression
-- On PLUS reduce production primary_expression -> bracketted_expression
-- On PIPEPIPE reduce production primary_expression -> bracketted_expression
-- On ORDER reduce production primary_expression -> bracketted_expression
-- On OFFSET reduce production primary_expression -> bracketted_expression
-- On NOW reduce production primary_expression -> bracketted_expression
-- On NOTEQUAL reduce production primary_expression -> bracketted_expression
-- On NOT reduce production primary_expression -> bracketted_expression
-- On MONTH reduce production primary_expression -> bracketted_expression
-- On MINUTES reduce production primary_expression -> bracketted_expression
-- On MINUS reduce production primary_expression -> bracketted_expression
-- On MIN reduce production primary_expression -> bracketted_expression
-- On MD5 reduce production primary_expression -> bracketted_expression
-- On MAX reduce production primary_expression -> bracketted_expression
-- On LTE reduce production primary_expression -> bracketted_expression
-- On LT reduce production primary_expression -> bracketted_expression
-- On LPAR reduce production primary_expression -> bracketted_expression
-- On LIMIT reduce production primary_expression -> bracketted_expression
-- On LCASE reduce production primary_expression -> bracketted_expression
-- On LANGMATCHES reduce production primary_expression -> bracketted_expression
-- On LANG reduce production primary_expression -> bracketted_expression
-- On Iriref_ reduce production primary_expression -> bracketted_expression
-- On Integer_positive reduce production primary_expression -> bracketted_expression
-- On Integer_negative reduce production primary_expression -> bracketted_expression
-- On Integer reduce production primary_expression -> bracketted_expression
-- On ISURI reduce production primary_expression -> bracketted_expression
-- On ISNUMERIC reduce production primary_expression -> bracketted_expression
-- On ISLITERAL reduce production primary_expression -> bracketted_expression
-- On ISIRI reduce production primary_expression -> bracketted_expression
-- On ISBLANK reduce production primary_expression -> bracketted_expression
-- On IRI reduce production primary_expression -> bracketted_expression
-- On IN reduce production primary_expression -> bracketted_expression
-- On IF reduce production primary_expression -> bracketted_expression
-- On HOURS reduce production primary_expression -> bracketted_expression
-- On HAVING reduce production primary_expression -> bracketted_expression
-- On GTE reduce production primary_expression -> bracketted_expression
-- On GT reduce production primary_expression -> bracketted_expression
-- On GROUP_CONCAT reduce production primary_expression -> bracketted_expression
-- On FLOOR reduce production primary_expression -> bracketted_expression
-- On EXISTS reduce production primary_expression -> bracketted_expression
-- On EQUAL reduce production primary_expression -> bracketted_expression
-- On EOF reduce production primary_expression -> bracketted_expression
-- On ENCODE_FOR_URI reduce production primary_expression -> bracketted_expression
-- On Double_positive reduce production primary_expression -> bracketted_expression
-- On Double_negative reduce production primary_expression -> bracketted_expression
-- On Double reduce production primary_expression -> bracketted_expression
-- On Decimal_positive reduce production primary_expression -> bracketted_expression
-- On Decimal_negative reduce production primary_expression -> bracketted_expression
-- On Decimal reduce production primary_expression -> bracketted_expression
-- On DAY reduce production primary_expression -> bracketted_expression
-- On DATATYPE reduce production primary_expression -> bracketted_expression
-- On COUNT reduce production primary_expression -> bracketted_expression
-- On CONTAINS reduce production primary_expression -> bracketted_expression
-- On CONCAT reduce production primary_expression -> bracketted_expression
-- On COMMA reduce production primary_expression -> bracketted_expression
-- On COALESCE reduce production primary_expression -> bracketted_expression
-- On CEIL reduce production primary_expression -> bracketted_expression
-- On Boolean reduce production primary_expression -> bracketted_expression
-- On BOUND reduce production primary_expression -> bracketted_expression
-- On BNODE reduce production primary_expression -> bracketted_expression
-- On BANG reduce production primary_expression -> bracketted_expression
-- On AVG reduce production primary_expression -> bracketted_expression
-- On AS reduce production primary_expression -> bracketted_expression
-- On AMPAMP reduce production primary_expression -> bracketted_expression
-- On ABS reduce production primary_expression -> bracketted_expression

State 340:
primary_expression -> boolean_literal . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
-- On YEAR reduce production primary_expression -> boolean_literal
-- On Var2 reduce production primary_expression -> boolean_literal
-- On Var1 reduce production primary_expression -> boolean_literal
-- On VALUES reduce production primary_expression -> boolean_literal
-- On UUID reduce production primary_expression -> boolean_literal
-- On URI reduce production primary_expression -> boolean_literal
-- On UCASE reduce production primary_expression -> boolean_literal
-- On TZ reduce production primary_expression -> boolean_literal
-- On TIMEZONE reduce production primary_expression -> boolean_literal
-- On String_literal reduce production primary_expression -> boolean_literal
-- On SUM reduce production primary_expression -> boolean_literal
-- On SUBSTR reduce production primary_expression -> boolean_literal
-- On STRUUID reduce production primary_expression -> boolean_literal
-- On STRSTARTS reduce production primary_expression -> boolean_literal
-- On STRLEN reduce production primary_expression -> boolean_literal
-- On STRLANG reduce production primary_expression -> boolean_literal
-- On STRENDS reduce production primary_expression -> boolean_literal
-- On STRDT reduce production primary_expression -> boolean_literal
-- On STRBEFORE reduce production primary_expression -> boolean_literal
-- On STRAFTER reduce production primary_expression -> boolean_literal
-- On STR reduce production primary_expression -> boolean_literal
-- On STAR reduce production primary_expression -> boolean_literal
-- On SLASH reduce production primary_expression -> boolean_literal
-- On SHA512 reduce production primary_expression -> boolean_literal
-- On SHA384 reduce production primary_expression -> boolean_literal
-- On SHA256 reduce production primary_expression -> boolean_literal
-- On SHA1 reduce production primary_expression -> boolean_literal
-- On SEMICOLON reduce production primary_expression -> boolean_literal
-- On SECONDS reduce production primary_expression -> boolean_literal
-- On SAMPLE reduce production primary_expression -> boolean_literal
-- On SAMETERM reduce production primary_expression -> boolean_literal
-- On RPAR reduce production primary_expression -> boolean_literal
-- On ROUND reduce production primary_expression -> boolean_literal
-- On REPLACE reduce production primary_expression -> boolean_literal
-- On REGEX reduce production primary_expression -> boolean_literal
-- On RBRACE reduce production primary_expression -> boolean_literal
-- On RAND reduce production primary_expression -> boolean_literal
-- On Pname_ns reduce production primary_expression -> boolean_literal
-- On Pname_ln reduce production primary_expression -> boolean_literal
-- On PLUS reduce production primary_expression -> boolean_literal
-- On PIPEPIPE reduce production primary_expression -> boolean_literal
-- On ORDER reduce production primary_expression -> boolean_literal
-- On OFFSET reduce production primary_expression -> boolean_literal
-- On NOW reduce production primary_expression -> boolean_literal
-- On NOTEQUAL reduce production primary_expression -> boolean_literal
-- On NOT reduce production primary_expression -> boolean_literal
-- On MONTH reduce production primary_expression -> boolean_literal
-- On MINUTES reduce production primary_expression -> boolean_literal
-- On MINUS reduce production primary_expression -> boolean_literal
-- On MIN reduce production primary_expression -> boolean_literal
-- On MD5 reduce production primary_expression -> boolean_literal
-- On MAX reduce production primary_expression -> boolean_literal
-- On LTE reduce production primary_expression -> boolean_literal
-- On LT reduce production primary_expression -> boolean_literal
-- On LPAR reduce production primary_expression -> boolean_literal
-- On LIMIT reduce production primary_expression -> boolean_literal
-- On LCASE reduce production primary_expression -> boolean_literal
-- On LANGMATCHES reduce production primary_expression -> boolean_literal
-- On LANG reduce production primary_expression -> boolean_literal
-- On Iriref_ reduce production primary_expression -> boolean_literal
-- On Integer_positive reduce production primary_expression -> boolean_literal
-- On Integer_negative reduce production primary_expression -> boolean_literal
-- On Integer reduce production primary_expression -> boolean_literal
-- On ISURI reduce production primary_expression -> boolean_literal
-- On ISNUMERIC reduce production primary_expression -> boolean_literal
-- On ISLITERAL reduce production primary_expression -> boolean_literal
-- On ISIRI reduce production primary_expression -> boolean_literal
-- On ISBLANK reduce production primary_expression -> boolean_literal
-- On IRI reduce production primary_expression -> boolean_literal
-- On IN reduce production primary_expression -> boolean_literal
-- On IF reduce production primary_expression -> boolean_literal
-- On HOURS reduce production primary_expression -> boolean_literal
-- On HAVING reduce production primary_expression -> boolean_literal
-- On GTE reduce production primary_expression -> boolean_literal
-- On GT reduce production primary_expression -> boolean_literal
-- On GROUP_CONCAT reduce production primary_expression -> boolean_literal
-- On FLOOR reduce production primary_expression -> boolean_literal
-- On EXISTS reduce production primary_expression -> boolean_literal
-- On EQUAL reduce production primary_expression -> boolean_literal
-- On EOF reduce production primary_expression -> boolean_literal
-- On ENCODE_FOR_URI reduce production primary_expression -> boolean_literal
-- On Double_positive reduce production primary_expression -> boolean_literal
-- On Double_negative reduce production primary_expression -> boolean_literal
-- On Double reduce production primary_expression -> boolean_literal
-- On Decimal_positive reduce production primary_expression -> boolean_literal
-- On Decimal_negative reduce production primary_expression -> boolean_literal
-- On Decimal reduce production primary_expression -> boolean_literal
-- On DAY reduce production primary_expression -> boolean_literal
-- On DATATYPE reduce production primary_expression -> boolean_literal
-- On COUNT reduce production primary_expression -> boolean_literal
-- On CONTAINS reduce production primary_expression -> boolean_literal
-- On CONCAT reduce production primary_expression -> boolean_literal
-- On COMMA reduce production primary_expression -> boolean_literal
-- On COALESCE reduce production primary_expression -> boolean_literal
-- On CEIL reduce production primary_expression -> boolean_literal
-- On Boolean reduce production primary_expression -> boolean_literal
-- On BOUND reduce production primary_expression -> boolean_literal
-- On BNODE reduce production primary_expression -> boolean_literal
-- On BANG reduce production primary_expression -> boolean_literal
-- On AVG reduce production primary_expression -> boolean_literal
-- On AS reduce production primary_expression -> boolean_literal
-- On AMPAMP reduce production primary_expression -> boolean_literal
-- On ABS reduce production primary_expression -> boolean_literal

State 341:
built_in_call -> aggregate . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production built_in_call -> aggregate
-- On Var2 reduce production built_in_call -> aggregate
-- On Var1 reduce production built_in_call -> aggregate
-- On VALUES reduce production built_in_call -> aggregate
-- On UUID reduce production built_in_call -> aggregate
-- On URI reduce production built_in_call -> aggregate
-- On UCASE reduce production built_in_call -> aggregate
-- On TZ reduce production built_in_call -> aggregate
-- On TIMEZONE reduce production built_in_call -> aggregate
-- On String_literal reduce production built_in_call -> aggregate
-- On SUM reduce production built_in_call -> aggregate
-- On SUBSTR reduce production built_in_call -> aggregate
-- On STRUUID reduce production built_in_call -> aggregate
-- On STRSTARTS reduce production built_in_call -> aggregate
-- On STRLEN reduce production built_in_call -> aggregate
-- On STRLANG reduce production built_in_call -> aggregate
-- On STRENDS reduce production built_in_call -> aggregate
-- On STRDT reduce production built_in_call -> aggregate
-- On STRBEFORE reduce production built_in_call -> aggregate
-- On STRAFTER reduce production built_in_call -> aggregate
-- On STR reduce production built_in_call -> aggregate
-- On STAR reduce production built_in_call -> aggregate
-- On SLASH reduce production built_in_call -> aggregate
-- On SHA512 reduce production built_in_call -> aggregate
-- On SHA384 reduce production built_in_call -> aggregate
-- On SHA256 reduce production built_in_call -> aggregate
-- On SHA1 reduce production built_in_call -> aggregate
-- On SERVICE reduce production built_in_call -> aggregate
-- On SEMICOLON reduce production built_in_call -> aggregate
-- On SECONDS reduce production built_in_call -> aggregate
-- On SAMPLE reduce production built_in_call -> aggregate
-- On SAMETERM reduce production built_in_call -> aggregate
-- On RPAR reduce production built_in_call -> aggregate
-- On ROUND reduce production built_in_call -> aggregate
-- On REPLACE reduce production built_in_call -> aggregate
-- On REGEX reduce production built_in_call -> aggregate
-- On RBRACE reduce production built_in_call -> aggregate
-- On RAND reduce production built_in_call -> aggregate
-- On Pname_ns reduce production built_in_call -> aggregate
-- On Pname_ln reduce production built_in_call -> aggregate
-- On PLUS reduce production built_in_call -> aggregate
-- On PIPEPIPE reduce production built_in_call -> aggregate
-- On ORDER reduce production built_in_call -> aggregate
-- On OPTIONAL reduce production built_in_call -> aggregate
-- On OFFSET reduce production built_in_call -> aggregate
-- On NOW reduce production built_in_call -> aggregate
-- On NOTEQUAL reduce production built_in_call -> aggregate
-- On NOT reduce production built_in_call -> aggregate
-- On NIL reduce production built_in_call -> aggregate
-- On MONTH reduce production built_in_call -> aggregate
-- On MINUTES reduce production built_in_call -> aggregate
-- On MINUS reduce production built_in_call -> aggregate
-- On MIN reduce production built_in_call -> aggregate
-- On MD5 reduce production built_in_call -> aggregate
-- On MAX reduce production built_in_call -> aggregate
-- On LTE reduce production built_in_call -> aggregate
-- On LT reduce production built_in_call -> aggregate
-- On LPAR reduce production built_in_call -> aggregate
-- On LIMIT reduce production built_in_call -> aggregate
-- On LCASE reduce production built_in_call -> aggregate
-- On LBRACKET reduce production built_in_call -> aggregate
-- On LBRACE reduce production built_in_call -> aggregate
-- On LANGMATCHES reduce production built_in_call -> aggregate
-- On LANG reduce production built_in_call -> aggregate
-- On Iriref_ reduce production built_in_call -> aggregate
-- On Integer_positive reduce production built_in_call -> aggregate
-- On Integer_negative reduce production built_in_call -> aggregate
-- On Integer reduce production built_in_call -> aggregate
-- On ISURI reduce production built_in_call -> aggregate
-- On ISNUMERIC reduce production built_in_call -> aggregate
-- On ISLITERAL reduce production built_in_call -> aggregate
-- On ISIRI reduce production built_in_call -> aggregate
-- On ISBLANK reduce production built_in_call -> aggregate
-- On IRI reduce production built_in_call -> aggregate
-- On IN reduce production built_in_call -> aggregate
-- On IF reduce production built_in_call -> aggregate
-- On HOURS reduce production built_in_call -> aggregate
-- On HAVING reduce production built_in_call -> aggregate
-- On GTE reduce production built_in_call -> aggregate
-- On GT reduce production built_in_call -> aggregate
-- On GROUP_CONCAT reduce production built_in_call -> aggregate
-- On GRAPH reduce production built_in_call -> aggregate
-- On FLOOR reduce production built_in_call -> aggregate
-- On FILTER reduce production built_in_call -> aggregate
-- On EXISTS reduce production built_in_call -> aggregate
-- On EQUAL reduce production built_in_call -> aggregate
-- On EOF reduce production built_in_call -> aggregate
-- On ENCODE_FOR_URI reduce production built_in_call -> aggregate
-- On Double_positive reduce production built_in_call -> aggregate
-- On Double_negative reduce production built_in_call -> aggregate
-- On Double reduce production built_in_call -> aggregate
-- On Decimal_positive reduce production built_in_call -> aggregate
-- On Decimal_negative reduce production built_in_call -> aggregate
-- On Decimal reduce production built_in_call -> aggregate
-- On DOT reduce production built_in_call -> aggregate
-- On DESC reduce production built_in_call -> aggregate
-- On DAY reduce production built_in_call -> aggregate
-- On DATATYPE reduce production built_in_call -> aggregate
-- On COUNT reduce production built_in_call -> aggregate
-- On CONTAINS reduce production built_in_call -> aggregate
-- On CONCAT reduce production built_in_call -> aggregate
-- On COMMA reduce production built_in_call -> aggregate
-- On COALESCE reduce production built_in_call -> aggregate
-- On CEIL reduce production built_in_call -> aggregate
-- On Boolean reduce production built_in_call -> aggregate
-- On Blank_node_label reduce production built_in_call -> aggregate
-- On BOUND reduce production built_in_call -> aggregate
-- On BNODE reduce production built_in_call -> aggregate
-- On BIND reduce production built_in_call -> aggregate
-- On BANG reduce production built_in_call -> aggregate
-- On AVG reduce production built_in_call -> aggregate
-- On ASC reduce production built_in_call -> aggregate
-- On AS reduce production built_in_call -> aggregate
-- On ANON reduce production built_in_call -> aggregate
-- On AMPAMP reduce production built_in_call -> aggregate
-- On ABS reduce production built_in_call -> aggregate

State 342:
numexp -> expression SLASH . expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 343
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 343:
numexp -> expression . STAR expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . SLASH expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression SLASH expression . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . PLUS expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . MINUS expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . numeric_literal_positive [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . numeric_literal_negative [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
-- On YEAR reduce production numexp -> expression SLASH expression
-- On Var2 reduce production numexp -> expression SLASH expression
-- On Var1 reduce production numexp -> expression SLASH expression
-- On VALUES reduce production numexp -> expression SLASH expression
-- On UUID reduce production numexp -> expression SLASH expression
-- On URI reduce production numexp -> expression SLASH expression
-- On UCASE reduce production numexp -> expression SLASH expression
-- On TZ reduce production numexp -> expression SLASH expression
-- On TIMEZONE reduce production numexp -> expression SLASH expression
-- On String_literal reduce production numexp -> expression SLASH expression
-- On SUM reduce production numexp -> expression SLASH expression
-- On SUBSTR reduce production numexp -> expression SLASH expression
-- On STRUUID reduce production numexp -> expression SLASH expression
-- On STRSTARTS reduce production numexp -> expression SLASH expression
-- On STRLEN reduce production numexp -> expression SLASH expression
-- On STRLANG reduce production numexp -> expression SLASH expression
-- On STRENDS reduce production numexp -> expression SLASH expression
-- On STRDT reduce production numexp -> expression SLASH expression
-- On STRBEFORE reduce production numexp -> expression SLASH expression
-- On STRAFTER reduce production numexp -> expression SLASH expression
-- On STR reduce production numexp -> expression SLASH expression
-- On STAR reduce production numexp -> expression SLASH expression
-- On SLASH reduce production numexp -> expression SLASH expression
-- On SHA512 reduce production numexp -> expression SLASH expression
-- On SHA384 reduce production numexp -> expression SLASH expression
-- On SHA256 reduce production numexp -> expression SLASH expression
-- On SHA1 reduce production numexp -> expression SLASH expression
-- On SEMICOLON reduce production numexp -> expression SLASH expression
-- On SECONDS reduce production numexp -> expression SLASH expression
-- On SAMPLE reduce production numexp -> expression SLASH expression
-- On SAMETERM reduce production numexp -> expression SLASH expression
-- On RPAR reduce production numexp -> expression SLASH expression
-- On ROUND reduce production numexp -> expression SLASH expression
-- On REPLACE reduce production numexp -> expression SLASH expression
-- On REGEX reduce production numexp -> expression SLASH expression
-- On RBRACE reduce production numexp -> expression SLASH expression
-- On RAND reduce production numexp -> expression SLASH expression
-- On Pname_ns reduce production numexp -> expression SLASH expression
-- On Pname_ln reduce production numexp -> expression SLASH expression
-- On PLUS reduce production numexp -> expression SLASH expression
-- On PIPEPIPE reduce production numexp -> expression SLASH expression
-- On ORDER reduce production numexp -> expression SLASH expression
-- On OFFSET reduce production numexp -> expression SLASH expression
-- On NOW reduce production numexp -> expression SLASH expression
-- On NOTEQUAL reduce production numexp -> expression SLASH expression
-- On NOT reduce production numexp -> expression SLASH expression
-- On MONTH reduce production numexp -> expression SLASH expression
-- On MINUTES reduce production numexp -> expression SLASH expression
-- On MINUS reduce production numexp -> expression SLASH expression
-- On MIN reduce production numexp -> expression SLASH expression
-- On MD5 reduce production numexp -> expression SLASH expression
-- On MAX reduce production numexp -> expression SLASH expression
-- On LTE reduce production numexp -> expression SLASH expression
-- On LT reduce production numexp -> expression SLASH expression
-- On LPAR reduce production numexp -> expression SLASH expression
-- On LIMIT reduce production numexp -> expression SLASH expression
-- On LCASE reduce production numexp -> expression SLASH expression
-- On LANGMATCHES reduce production numexp -> expression SLASH expression
-- On LANG reduce production numexp -> expression SLASH expression
-- On Iriref_ reduce production numexp -> expression SLASH expression
-- On Integer_positive reduce production numexp -> expression SLASH expression
-- On Integer_negative reduce production numexp -> expression SLASH expression
-- On Integer reduce production numexp -> expression SLASH expression
-- On ISURI reduce production numexp -> expression SLASH expression
-- On ISNUMERIC reduce production numexp -> expression SLASH expression
-- On ISLITERAL reduce production numexp -> expression SLASH expression
-- On ISIRI reduce production numexp -> expression SLASH expression
-- On ISBLANK reduce production numexp -> expression SLASH expression
-- On IRI reduce production numexp -> expression SLASH expression
-- On IN reduce production numexp -> expression SLASH expression
-- On IF reduce production numexp -> expression SLASH expression
-- On HOURS reduce production numexp -> expression SLASH expression
-- On HAVING reduce production numexp -> expression SLASH expression
-- On GTE reduce production numexp -> expression SLASH expression
-- On GT reduce production numexp -> expression SLASH expression
-- On GROUP_CONCAT reduce production numexp -> expression SLASH expression
-- On FLOOR reduce production numexp -> expression SLASH expression
-- On EXISTS reduce production numexp -> expression SLASH expression
-- On EQUAL reduce production numexp -> expression SLASH expression
-- On EOF reduce production numexp -> expression SLASH expression
-- On ENCODE_FOR_URI reduce production numexp -> expression SLASH expression
-- On Double_positive reduce production numexp -> expression SLASH expression
-- On Double_negative reduce production numexp -> expression SLASH expression
-- On Double reduce production numexp -> expression SLASH expression
-- On Decimal_positive reduce production numexp -> expression SLASH expression
-- On Decimal_negative reduce production numexp -> expression SLASH expression
-- On Decimal reduce production numexp -> expression SLASH expression
-- On DAY reduce production numexp -> expression SLASH expression
-- On DATATYPE reduce production numexp -> expression SLASH expression
-- On COUNT reduce production numexp -> expression SLASH expression
-- On CONTAINS reduce production numexp -> expression SLASH expression
-- On CONCAT reduce production numexp -> expression SLASH expression
-- On COMMA reduce production numexp -> expression SLASH expression
-- On COALESCE reduce production numexp -> expression SLASH expression
-- On CEIL reduce production numexp -> expression SLASH expression
-- On Boolean reduce production numexp -> expression SLASH expression
-- On BOUND reduce production numexp -> expression SLASH expression
-- On BNODE reduce production numexp -> expression SLASH expression
-- On BANG reduce production numexp -> expression SLASH expression
-- On AVG reduce production numexp -> expression SLASH expression
-- On AS reduce production numexp -> expression SLASH expression
-- On AMPAMP reduce production numexp -> expression SLASH expression
-- On ABS reduce production numexp -> expression SLASH expression
** Conflict on Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative

State 344:
numexp -> expression PLUS . expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 345
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 345:
numexp -> expression . STAR expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . SLASH expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . PLUS expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression PLUS expression . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . MINUS expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . numeric_literal_positive [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . numeric_literal_negative [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
-- On YEAR reduce production numexp -> expression PLUS expression
-- On Var2 reduce production numexp -> expression PLUS expression
-- On Var1 reduce production numexp -> expression PLUS expression
-- On VALUES reduce production numexp -> expression PLUS expression
-- On UUID reduce production numexp -> expression PLUS expression
-- On URI reduce production numexp -> expression PLUS expression
-- On UCASE reduce production numexp -> expression PLUS expression
-- On TZ reduce production numexp -> expression PLUS expression
-- On TIMEZONE reduce production numexp -> expression PLUS expression
-- On String_literal reduce production numexp -> expression PLUS expression
-- On SUM reduce production numexp -> expression PLUS expression
-- On SUBSTR reduce production numexp -> expression PLUS expression
-- On STRUUID reduce production numexp -> expression PLUS expression
-- On STRSTARTS reduce production numexp -> expression PLUS expression
-- On STRLEN reduce production numexp -> expression PLUS expression
-- On STRLANG reduce production numexp -> expression PLUS expression
-- On STRENDS reduce production numexp -> expression PLUS expression
-- On STRDT reduce production numexp -> expression PLUS expression
-- On STRBEFORE reduce production numexp -> expression PLUS expression
-- On STRAFTER reduce production numexp -> expression PLUS expression
-- On STR reduce production numexp -> expression PLUS expression
-- On SHA512 reduce production numexp -> expression PLUS expression
-- On SHA384 reduce production numexp -> expression PLUS expression
-- On SHA256 reduce production numexp -> expression PLUS expression
-- On SHA1 reduce production numexp -> expression PLUS expression
-- On SEMICOLON reduce production numexp -> expression PLUS expression
-- On SECONDS reduce production numexp -> expression PLUS expression
-- On SAMPLE reduce production numexp -> expression PLUS expression
-- On SAMETERM reduce production numexp -> expression PLUS expression
-- On RPAR reduce production numexp -> expression PLUS expression
-- On ROUND reduce production numexp -> expression PLUS expression
-- On REPLACE reduce production numexp -> expression PLUS expression
-- On REGEX reduce production numexp -> expression PLUS expression
-- On RBRACE reduce production numexp -> expression PLUS expression
-- On RAND reduce production numexp -> expression PLUS expression
-- On Pname_ns reduce production numexp -> expression PLUS expression
-- On Pname_ln reduce production numexp -> expression PLUS expression
-- On PLUS reduce production numexp -> expression PLUS expression
-- On PIPEPIPE reduce production numexp -> expression PLUS expression
-- On ORDER reduce production numexp -> expression PLUS expression
-- On OFFSET reduce production numexp -> expression PLUS expression
-- On NOW reduce production numexp -> expression PLUS expression
-- On NOTEQUAL reduce production numexp -> expression PLUS expression
-- On NOT reduce production numexp -> expression PLUS expression
-- On MONTH reduce production numexp -> expression PLUS expression
-- On MINUTES reduce production numexp -> expression PLUS expression
-- On MINUS reduce production numexp -> expression PLUS expression
-- On MIN reduce production numexp -> expression PLUS expression
-- On MD5 reduce production numexp -> expression PLUS expression
-- On MAX reduce production numexp -> expression PLUS expression
-- On LTE reduce production numexp -> expression PLUS expression
-- On LT reduce production numexp -> expression PLUS expression
-- On LPAR reduce production numexp -> expression PLUS expression
-- On LIMIT reduce production numexp -> expression PLUS expression
-- On LCASE reduce production numexp -> expression PLUS expression
-- On LANGMATCHES reduce production numexp -> expression PLUS expression
-- On LANG reduce production numexp -> expression PLUS expression
-- On Iriref_ reduce production numexp -> expression PLUS expression
-- On Integer_positive reduce production numexp -> expression PLUS expression
-- On Integer_negative reduce production numexp -> expression PLUS expression
-- On Integer reduce production numexp -> expression PLUS expression
-- On ISURI reduce production numexp -> expression PLUS expression
-- On ISNUMERIC reduce production numexp -> expression PLUS expression
-- On ISLITERAL reduce production numexp -> expression PLUS expression
-- On ISIRI reduce production numexp -> expression PLUS expression
-- On ISBLANK reduce production numexp -> expression PLUS expression
-- On IRI reduce production numexp -> expression PLUS expression
-- On IN reduce production numexp -> expression PLUS expression
-- On IF reduce production numexp -> expression PLUS expression
-- On HOURS reduce production numexp -> expression PLUS expression
-- On HAVING reduce production numexp -> expression PLUS expression
-- On GTE reduce production numexp -> expression PLUS expression
-- On GT reduce production numexp -> expression PLUS expression
-- On GROUP_CONCAT reduce production numexp -> expression PLUS expression
-- On FLOOR reduce production numexp -> expression PLUS expression
-- On EXISTS reduce production numexp -> expression PLUS expression
-- On EQUAL reduce production numexp -> expression PLUS expression
-- On EOF reduce production numexp -> expression PLUS expression
-- On ENCODE_FOR_URI reduce production numexp -> expression PLUS expression
-- On Double_positive reduce production numexp -> expression PLUS expression
-- On Double_negative reduce production numexp -> expression PLUS expression
-- On Double reduce production numexp -> expression PLUS expression
-- On Decimal_positive reduce production numexp -> expression PLUS expression
-- On Decimal_negative reduce production numexp -> expression PLUS expression
-- On Decimal reduce production numexp -> expression PLUS expression
-- On DAY reduce production numexp -> expression PLUS expression
-- On DATATYPE reduce production numexp -> expression PLUS expression
-- On COUNT reduce production numexp -> expression PLUS expression
-- On CONTAINS reduce production numexp -> expression PLUS expression
-- On CONCAT reduce production numexp -> expression PLUS expression
-- On COMMA reduce production numexp -> expression PLUS expression
-- On COALESCE reduce production numexp -> expression PLUS expression
-- On CEIL reduce production numexp -> expression PLUS expression
-- On Boolean reduce production numexp -> expression PLUS expression
-- On BOUND reduce production numexp -> expression PLUS expression
-- On BNODE reduce production numexp -> expression PLUS expression
-- On BANG reduce production numexp -> expression PLUS expression
-- On AVG reduce production numexp -> expression PLUS expression
-- On AS reduce production numexp -> expression PLUS expression
-- On AMPAMP reduce production numexp -> expression PLUS expression
-- On ABS reduce production numexp -> expression PLUS expression
** Conflict on Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative

State 346:
numexp -> expression MINUS . expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 347
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 347:
numexp -> expression . STAR expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . SLASH expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . PLUS expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . MINUS expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression MINUS expression . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . numeric_literal_positive [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . numeric_literal_negative [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
-- On YEAR reduce production numexp -> expression MINUS expression
-- On Var2 reduce production numexp -> expression MINUS expression
-- On Var1 reduce production numexp -> expression MINUS expression
-- On VALUES reduce production numexp -> expression MINUS expression
-- On UUID reduce production numexp -> expression MINUS expression
-- On URI reduce production numexp -> expression MINUS expression
-- On UCASE reduce production numexp -> expression MINUS expression
-- On TZ reduce production numexp -> expression MINUS expression
-- On TIMEZONE reduce production numexp -> expression MINUS expression
-- On String_literal reduce production numexp -> expression MINUS expression
-- On SUM reduce production numexp -> expression MINUS expression
-- On SUBSTR reduce production numexp -> expression MINUS expression
-- On STRUUID reduce production numexp -> expression MINUS expression
-- On STRSTARTS reduce production numexp -> expression MINUS expression
-- On STRLEN reduce production numexp -> expression MINUS expression
-- On STRLANG reduce production numexp -> expression MINUS expression
-- On STRENDS reduce production numexp -> expression MINUS expression
-- On STRDT reduce production numexp -> expression MINUS expression
-- On STRBEFORE reduce production numexp -> expression MINUS expression
-- On STRAFTER reduce production numexp -> expression MINUS expression
-- On STR reduce production numexp -> expression MINUS expression
-- On SHA512 reduce production numexp -> expression MINUS expression
-- On SHA384 reduce production numexp -> expression MINUS expression
-- On SHA256 reduce production numexp -> expression MINUS expression
-- On SHA1 reduce production numexp -> expression MINUS expression
-- On SEMICOLON reduce production numexp -> expression MINUS expression
-- On SECONDS reduce production numexp -> expression MINUS expression
-- On SAMPLE reduce production numexp -> expression MINUS expression
-- On SAMETERM reduce production numexp -> expression MINUS expression
-- On RPAR reduce production numexp -> expression MINUS expression
-- On ROUND reduce production numexp -> expression MINUS expression
-- On REPLACE reduce production numexp -> expression MINUS expression
-- On REGEX reduce production numexp -> expression MINUS expression
-- On RBRACE reduce production numexp -> expression MINUS expression
-- On RAND reduce production numexp -> expression MINUS expression
-- On Pname_ns reduce production numexp -> expression MINUS expression
-- On Pname_ln reduce production numexp -> expression MINUS expression
-- On PLUS reduce production numexp -> expression MINUS expression
-- On PIPEPIPE reduce production numexp -> expression MINUS expression
-- On ORDER reduce production numexp -> expression MINUS expression
-- On OFFSET reduce production numexp -> expression MINUS expression
-- On NOW reduce production numexp -> expression MINUS expression
-- On NOTEQUAL reduce production numexp -> expression MINUS expression
-- On NOT reduce production numexp -> expression MINUS expression
-- On MONTH reduce production numexp -> expression MINUS expression
-- On MINUTES reduce production numexp -> expression MINUS expression
-- On MINUS reduce production numexp -> expression MINUS expression
-- On MIN reduce production numexp -> expression MINUS expression
-- On MD5 reduce production numexp -> expression MINUS expression
-- On MAX reduce production numexp -> expression MINUS expression
-- On LTE reduce production numexp -> expression MINUS expression
-- On LT reduce production numexp -> expression MINUS expression
-- On LPAR reduce production numexp -> expression MINUS expression
-- On LIMIT reduce production numexp -> expression MINUS expression
-- On LCASE reduce production numexp -> expression MINUS expression
-- On LANGMATCHES reduce production numexp -> expression MINUS expression
-- On LANG reduce production numexp -> expression MINUS expression
-- On Iriref_ reduce production numexp -> expression MINUS expression
-- On Integer_positive reduce production numexp -> expression MINUS expression
-- On Integer_negative reduce production numexp -> expression MINUS expression
-- On Integer reduce production numexp -> expression MINUS expression
-- On ISURI reduce production numexp -> expression MINUS expression
-- On ISNUMERIC reduce production numexp -> expression MINUS expression
-- On ISLITERAL reduce production numexp -> expression MINUS expression
-- On ISIRI reduce production numexp -> expression MINUS expression
-- On ISBLANK reduce production numexp -> expression MINUS expression
-- On IRI reduce production numexp -> expression MINUS expression
-- On IN reduce production numexp -> expression MINUS expression
-- On IF reduce production numexp -> expression MINUS expression
-- On HOURS reduce production numexp -> expression MINUS expression
-- On HAVING reduce production numexp -> expression MINUS expression
-- On GTE reduce production numexp -> expression MINUS expression
-- On GT reduce production numexp -> expression MINUS expression
-- On GROUP_CONCAT reduce production numexp -> expression MINUS expression
-- On FLOOR reduce production numexp -> expression MINUS expression
-- On EXISTS reduce production numexp -> expression MINUS expression
-- On EQUAL reduce production numexp -> expression MINUS expression
-- On EOF reduce production numexp -> expression MINUS expression
-- On ENCODE_FOR_URI reduce production numexp -> expression MINUS expression
-- On Double_positive reduce production numexp -> expression MINUS expression
-- On Double_negative reduce production numexp -> expression MINUS expression
-- On Double reduce production numexp -> expression MINUS expression
-- On Decimal_positive reduce production numexp -> expression MINUS expression
-- On Decimal_negative reduce production numexp -> expression MINUS expression
-- On Decimal reduce production numexp -> expression MINUS expression
-- On DAY reduce production numexp -> expression MINUS expression
-- On DATATYPE reduce production numexp -> expression MINUS expression
-- On COUNT reduce production numexp -> expression MINUS expression
-- On CONTAINS reduce production numexp -> expression MINUS expression
-- On CONCAT reduce production numexp -> expression MINUS expression
-- On COMMA reduce production numexp -> expression MINUS expression
-- On COALESCE reduce production numexp -> expression MINUS expression
-- On CEIL reduce production numexp -> expression MINUS expression
-- On Boolean reduce production numexp -> expression MINUS expression
-- On BOUND reduce production numexp -> expression MINUS expression
-- On BNODE reduce production numexp -> expression MINUS expression
-- On BANG reduce production numexp -> expression MINUS expression
-- On AVG reduce production numexp -> expression MINUS expression
-- On AS reduce production numexp -> expression MINUS expression
-- On AMPAMP reduce production numexp -> expression MINUS expression
-- On ABS reduce production numexp -> expression MINUS expression
** Conflict on Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative

State 348:
separated_nonempty_list(COMMA,expression) -> expression COMMA . separated_nonempty_list(COMMA,expression) [ RPAR ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On separated_nonempty_list(COMMA,expression) shift to state 349
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 333
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 349:
separated_nonempty_list(COMMA,expression) -> expression COMMA separated_nonempty_list(COMMA,expression) . [ RPAR ]
-- On RPAR reduce production separated_nonempty_list(COMMA,expression) -> expression COMMA separated_nonempty_list(COMMA,expression)

State 350:
function_call -> iri arg_list . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production function_call -> iri arg_list
-- On Var2 reduce production function_call -> iri arg_list
-- On Var1 reduce production function_call -> iri arg_list
-- On VALUES reduce production function_call -> iri arg_list
-- On UUID reduce production function_call -> iri arg_list
-- On URI reduce production function_call -> iri arg_list
-- On UCASE reduce production function_call -> iri arg_list
-- On TZ reduce production function_call -> iri arg_list
-- On TIMEZONE reduce production function_call -> iri arg_list
-- On String_literal reduce production function_call -> iri arg_list
-- On SUM reduce production function_call -> iri arg_list
-- On SUBSTR reduce production function_call -> iri arg_list
-- On STRUUID reduce production function_call -> iri arg_list
-- On STRSTARTS reduce production function_call -> iri arg_list
-- On STRLEN reduce production function_call -> iri arg_list
-- On STRLANG reduce production function_call -> iri arg_list
-- On STRENDS reduce production function_call -> iri arg_list
-- On STRDT reduce production function_call -> iri arg_list
-- On STRBEFORE reduce production function_call -> iri arg_list
-- On STRAFTER reduce production function_call -> iri arg_list
-- On STR reduce production function_call -> iri arg_list
-- On STAR reduce production function_call -> iri arg_list
-- On SLASH reduce production function_call -> iri arg_list
-- On SHA512 reduce production function_call -> iri arg_list
-- On SHA384 reduce production function_call -> iri arg_list
-- On SHA256 reduce production function_call -> iri arg_list
-- On SHA1 reduce production function_call -> iri arg_list
-- On SERVICE reduce production function_call -> iri arg_list
-- On SEMICOLON reduce production function_call -> iri arg_list
-- On SECONDS reduce production function_call -> iri arg_list
-- On SAMPLE reduce production function_call -> iri arg_list
-- On SAMETERM reduce production function_call -> iri arg_list
-- On RPAR reduce production function_call -> iri arg_list
-- On ROUND reduce production function_call -> iri arg_list
-- On REPLACE reduce production function_call -> iri arg_list
-- On REGEX reduce production function_call -> iri arg_list
-- On RBRACE reduce production function_call -> iri arg_list
-- On RAND reduce production function_call -> iri arg_list
-- On Pname_ns reduce production function_call -> iri arg_list
-- On Pname_ln reduce production function_call -> iri arg_list
-- On PLUS reduce production function_call -> iri arg_list
-- On PIPEPIPE reduce production function_call -> iri arg_list
-- On ORDER reduce production function_call -> iri arg_list
-- On OPTIONAL reduce production function_call -> iri arg_list
-- On OFFSET reduce production function_call -> iri arg_list
-- On NOW reduce production function_call -> iri arg_list
-- On NOTEQUAL reduce production function_call -> iri arg_list
-- On NOT reduce production function_call -> iri arg_list
-- On NIL reduce production function_call -> iri arg_list
-- On MONTH reduce production function_call -> iri arg_list
-- On MINUTES reduce production function_call -> iri arg_list
-- On MINUS reduce production function_call -> iri arg_list
-- On MIN reduce production function_call -> iri arg_list
-- On MD5 reduce production function_call -> iri arg_list
-- On MAX reduce production function_call -> iri arg_list
-- On LTE reduce production function_call -> iri arg_list
-- On LT reduce production function_call -> iri arg_list
-- On LPAR reduce production function_call -> iri arg_list
-- On LIMIT reduce production function_call -> iri arg_list
-- On LCASE reduce production function_call -> iri arg_list
-- On LBRACKET reduce production function_call -> iri arg_list
-- On LBRACE reduce production function_call -> iri arg_list
-- On LANGMATCHES reduce production function_call -> iri arg_list
-- On LANG reduce production function_call -> iri arg_list
-- On Iriref_ reduce production function_call -> iri arg_list
-- On Integer_positive reduce production function_call -> iri arg_list
-- On Integer_negative reduce production function_call -> iri arg_list
-- On Integer reduce production function_call -> iri arg_list
-- On ISURI reduce production function_call -> iri arg_list
-- On ISNUMERIC reduce production function_call -> iri arg_list
-- On ISLITERAL reduce production function_call -> iri arg_list
-- On ISIRI reduce production function_call -> iri arg_list
-- On ISBLANK reduce production function_call -> iri arg_list
-- On IRI reduce production function_call -> iri arg_list
-- On IN reduce production function_call -> iri arg_list
-- On IF reduce production function_call -> iri arg_list
-- On HOURS reduce production function_call -> iri arg_list
-- On HAVING reduce production function_call -> iri arg_list
-- On GTE reduce production function_call -> iri arg_list
-- On GT reduce production function_call -> iri arg_list
-- On GROUP_CONCAT reduce production function_call -> iri arg_list
-- On GRAPH reduce production function_call -> iri arg_list
-- On FLOOR reduce production function_call -> iri arg_list
-- On FILTER reduce production function_call -> iri arg_list
-- On EXISTS reduce production function_call -> iri arg_list
-- On EQUAL reduce production function_call -> iri arg_list
-- On EOF reduce production function_call -> iri arg_list
-- On ENCODE_FOR_URI reduce production function_call -> iri arg_list
-- On Double_positive reduce production function_call -> iri arg_list
-- On Double_negative reduce production function_call -> iri arg_list
-- On Double reduce production function_call -> iri arg_list
-- On Decimal_positive reduce production function_call -> iri arg_list
-- On Decimal_negative reduce production function_call -> iri arg_list
-- On Decimal reduce production function_call -> iri arg_list
-- On DOT reduce production function_call -> iri arg_list
-- On DESC reduce production function_call -> iri arg_list
-- On DAY reduce production function_call -> iri arg_list
-- On DATATYPE reduce production function_call -> iri arg_list
-- On COUNT reduce production function_call -> iri arg_list
-- On CONTAINS reduce production function_call -> iri arg_list
-- On CONCAT reduce production function_call -> iri arg_list
-- On COMMA reduce production function_call -> iri arg_list
-- On COALESCE reduce production function_call -> iri arg_list
-- On CEIL reduce production function_call -> iri arg_list
-- On Boolean reduce production function_call -> iri arg_list
-- On Blank_node_label reduce production function_call -> iri arg_list
-- On BOUND reduce production function_call -> iri arg_list
-- On BNODE reduce production function_call -> iri arg_list
-- On BIND reduce production function_call -> iri arg_list
-- On BANG reduce production function_call -> iri arg_list
-- On AVG reduce production function_call -> iri arg_list
-- On ASC reduce production function_call -> iri arg_list
-- On AS reduce production function_call -> iri arg_list
-- On ANON reduce production function_call -> iri arg_list
-- On AMPAMP reduce production function_call -> iri arg_list
-- On ABS reduce production function_call -> iri arg_list

State 351:
numexp -> expression . STAR expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . SLASH expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . PLUS expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . MINUS expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . numeric_literal_positive [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . numeric_literal_negative [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 352:
relational_expression -> numexp NOT . IN expression_list [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
-- On IN shift to state 353

State 353:
relational_expression -> numexp NOT IN . expression_list [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
-- On NIL shift to state 292
-- On LPAR shift to state 293
-- On expression_list shift to state 354

State 354:
relational_expression -> numexp NOT IN expression_list . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
-- On YEAR reduce production relational_expression -> numexp NOT IN expression_list
-- On Var2 reduce production relational_expression -> numexp NOT IN expression_list
-- On Var1 reduce production relational_expression -> numexp NOT IN expression_list
-- On VALUES reduce production relational_expression -> numexp NOT IN expression_list
-- On UUID reduce production relational_expression -> numexp NOT IN expression_list
-- On URI reduce production relational_expression -> numexp NOT IN expression_list
-- On UCASE reduce production relational_expression -> numexp NOT IN expression_list
-- On TZ reduce production relational_expression -> numexp NOT IN expression_list
-- On TIMEZONE reduce production relational_expression -> numexp NOT IN expression_list
-- On String_literal reduce production relational_expression -> numexp NOT IN expression_list
-- On SUM reduce production relational_expression -> numexp NOT IN expression_list
-- On SUBSTR reduce production relational_expression -> numexp NOT IN expression_list
-- On STRUUID reduce production relational_expression -> numexp NOT IN expression_list
-- On STRSTARTS reduce production relational_expression -> numexp NOT IN expression_list
-- On STRLEN reduce production relational_expression -> numexp NOT IN expression_list
-- On STRLANG reduce production relational_expression -> numexp NOT IN expression_list
-- On STRENDS reduce production relational_expression -> numexp NOT IN expression_list
-- On STRDT reduce production relational_expression -> numexp NOT IN expression_list
-- On STRBEFORE reduce production relational_expression -> numexp NOT IN expression_list
-- On STRAFTER reduce production relational_expression -> numexp NOT IN expression_list
-- On STR reduce production relational_expression -> numexp NOT IN expression_list
-- On STAR reduce production relational_expression -> numexp NOT IN expression_list
-- On SLASH reduce production relational_expression -> numexp NOT IN expression_list
-- On SHA512 reduce production relational_expression -> numexp NOT IN expression_list
-- On SHA384 reduce production relational_expression -> numexp NOT IN expression_list
-- On SHA256 reduce production relational_expression -> numexp NOT IN expression_list
-- On SHA1 reduce production relational_expression -> numexp NOT IN expression_list
-- On SEMICOLON reduce production relational_expression -> numexp NOT IN expression_list
-- On SECONDS reduce production relational_expression -> numexp NOT IN expression_list
-- On SAMPLE reduce production relational_expression -> numexp NOT IN expression_list
-- On SAMETERM reduce production relational_expression -> numexp NOT IN expression_list
-- On RPAR reduce production relational_expression -> numexp NOT IN expression_list
-- On ROUND reduce production relational_expression -> numexp NOT IN expression_list
-- On REPLACE reduce production relational_expression -> numexp NOT IN expression_list
-- On REGEX reduce production relational_expression -> numexp NOT IN expression_list
-- On RBRACE reduce production relational_expression -> numexp NOT IN expression_list
-- On RAND reduce production relational_expression -> numexp NOT IN expression_list
-- On Pname_ns reduce production relational_expression -> numexp NOT IN expression_list
-- On Pname_ln reduce production relational_expression -> numexp NOT IN expression_list
-- On PLUS reduce production relational_expression -> numexp NOT IN expression_list
-- On PIPEPIPE reduce production relational_expression -> numexp NOT IN expression_list
-- On ORDER reduce production relational_expression -> numexp NOT IN expression_list
-- On OFFSET reduce production relational_expression -> numexp NOT IN expression_list
-- On NOW reduce production relational_expression -> numexp NOT IN expression_list
-- On NOTEQUAL reduce production relational_expression -> numexp NOT IN expression_list
-- On NOT reduce production relational_expression -> numexp NOT IN expression_list
-- On MONTH reduce production relational_expression -> numexp NOT IN expression_list
-- On MINUTES reduce production relational_expression -> numexp NOT IN expression_list
-- On MINUS reduce production relational_expression -> numexp NOT IN expression_list
-- On MIN reduce production relational_expression -> numexp NOT IN expression_list
-- On MD5 reduce production relational_expression -> numexp NOT IN expression_list
-- On MAX reduce production relational_expression -> numexp NOT IN expression_list
-- On LTE reduce production relational_expression -> numexp NOT IN expression_list
-- On LT reduce production relational_expression -> numexp NOT IN expression_list
-- On LPAR reduce production relational_expression -> numexp NOT IN expression_list
-- On LIMIT reduce production relational_expression -> numexp NOT IN expression_list
-- On LCASE reduce production relational_expression -> numexp NOT IN expression_list
-- On LANGMATCHES reduce production relational_expression -> numexp NOT IN expression_list
-- On LANG reduce production relational_expression -> numexp NOT IN expression_list
-- On Iriref_ reduce production relational_expression -> numexp NOT IN expression_list
-- On Integer_positive reduce production relational_expression -> numexp NOT IN expression_list
-- On Integer_negative reduce production relational_expression -> numexp NOT IN expression_list
-- On Integer reduce production relational_expression -> numexp NOT IN expression_list
-- On ISURI reduce production relational_expression -> numexp NOT IN expression_list
-- On ISNUMERIC reduce production relational_expression -> numexp NOT IN expression_list
-- On ISLITERAL reduce production relational_expression -> numexp NOT IN expression_list
-- On ISIRI reduce production relational_expression -> numexp NOT IN expression_list
-- On ISBLANK reduce production relational_expression -> numexp NOT IN expression_list
-- On IRI reduce production relational_expression -> numexp NOT IN expression_list
-- On IN reduce production relational_expression -> numexp NOT IN expression_list
-- On IF reduce production relational_expression -> numexp NOT IN expression_list
-- On HOURS reduce production relational_expression -> numexp NOT IN expression_list
-- On HAVING reduce production relational_expression -> numexp NOT IN expression_list
-- On GTE reduce production relational_expression -> numexp NOT IN expression_list
-- On GT reduce production relational_expression -> numexp NOT IN expression_list
-- On GROUP_CONCAT reduce production relational_expression -> numexp NOT IN expression_list
-- On FLOOR reduce production relational_expression -> numexp NOT IN expression_list
-- On EXISTS reduce production relational_expression -> numexp NOT IN expression_list
-- On EQUAL reduce production relational_expression -> numexp NOT IN expression_list
-- On EOF reduce production relational_expression -> numexp NOT IN expression_list
-- On ENCODE_FOR_URI reduce production relational_expression -> numexp NOT IN expression_list
-- On Double_positive reduce production relational_expression -> numexp NOT IN expression_list
-- On Double_negative reduce production relational_expression -> numexp NOT IN expression_list
-- On Double reduce production relational_expression -> numexp NOT IN expression_list
-- On Decimal_positive reduce production relational_expression -> numexp NOT IN expression_list
-- On Decimal_negative reduce production relational_expression -> numexp NOT IN expression_list
-- On Decimal reduce production relational_expression -> numexp NOT IN expression_list
-- On DAY reduce production relational_expression -> numexp NOT IN expression_list
-- On DATATYPE reduce production relational_expression -> numexp NOT IN expression_list
-- On COUNT reduce production relational_expression -> numexp NOT IN expression_list
-- On CONTAINS reduce production relational_expression -> numexp NOT IN expression_list
-- On CONCAT reduce production relational_expression -> numexp NOT IN expression_list
-- On COMMA reduce production relational_expression -> numexp NOT IN expression_list
-- On COALESCE reduce production relational_expression -> numexp NOT IN expression_list
-- On CEIL reduce production relational_expression -> numexp NOT IN expression_list
-- On Boolean reduce production relational_expression -> numexp NOT IN expression_list
-- On BOUND reduce production relational_expression -> numexp NOT IN expression_list
-- On BNODE reduce production relational_expression -> numexp NOT IN expression_list
-- On BANG reduce production relational_expression -> numexp NOT IN expression_list
-- On AVG reduce production relational_expression -> numexp NOT IN expression_list
-- On AS reduce production relational_expression -> numexp NOT IN expression_list
-- On AMPAMP reduce production relational_expression -> numexp NOT IN expression_list
-- On ABS reduce production relational_expression -> numexp NOT IN expression_list

State 355:
relational_expression -> numexp LTE . numexp [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 356
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 351
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 356:
relational_expression -> numexp . EQUAL numexp [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . NOTEQUAL numexp [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . LT numexp [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . GT numexp [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . LTE numexp [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp LTE numexp . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
relational_expression -> numexp . GTE numexp [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . IN expression_list [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . NOT IN expression_list [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
-- On YEAR reduce production relational_expression -> numexp LTE numexp
-- On Var2 reduce production relational_expression -> numexp LTE numexp
-- On Var1 reduce production relational_expression -> numexp LTE numexp
-- On VALUES reduce production relational_expression -> numexp LTE numexp
-- On UUID reduce production relational_expression -> numexp LTE numexp
-- On URI reduce production relational_expression -> numexp LTE numexp
-- On UCASE reduce production relational_expression -> numexp LTE numexp
-- On TZ reduce production relational_expression -> numexp LTE numexp
-- On TIMEZONE reduce production relational_expression -> numexp LTE numexp
-- On String_literal reduce production relational_expression -> numexp LTE numexp
-- On SUM reduce production relational_expression -> numexp LTE numexp
-- On SUBSTR reduce production relational_expression -> numexp LTE numexp
-- On STRUUID reduce production relational_expression -> numexp LTE numexp
-- On STRSTARTS reduce production relational_expression -> numexp LTE numexp
-- On STRLEN reduce production relational_expression -> numexp LTE numexp
-- On STRLANG reduce production relational_expression -> numexp LTE numexp
-- On STRENDS reduce production relational_expression -> numexp LTE numexp
-- On STRDT reduce production relational_expression -> numexp LTE numexp
-- On STRBEFORE reduce production relational_expression -> numexp LTE numexp
-- On STRAFTER reduce production relational_expression -> numexp LTE numexp
-- On STR reduce production relational_expression -> numexp LTE numexp
-- On STAR reduce production relational_expression -> numexp LTE numexp
-- On STAR reduce production relational_expression -> numexp
-- On SLASH reduce production relational_expression -> numexp LTE numexp
-- On SLASH reduce production relational_expression -> numexp
-- On SHA512 reduce production relational_expression -> numexp LTE numexp
-- On SHA384 reduce production relational_expression -> numexp LTE numexp
-- On SHA256 reduce production relational_expression -> numexp LTE numexp
-- On SHA1 reduce production relational_expression -> numexp LTE numexp
-- On SEMICOLON reduce production relational_expression -> numexp LTE numexp
-- On SECONDS reduce production relational_expression -> numexp LTE numexp
-- On SAMPLE reduce production relational_expression -> numexp LTE numexp
-- On SAMETERM reduce production relational_expression -> numexp LTE numexp
-- On RPAR reduce production relational_expression -> numexp LTE numexp
-- On ROUND reduce production relational_expression -> numexp LTE numexp
-- On REPLACE reduce production relational_expression -> numexp LTE numexp
-- On REGEX reduce production relational_expression -> numexp LTE numexp
-- On RBRACE reduce production relational_expression -> numexp LTE numexp
-- On RAND reduce production relational_expression -> numexp LTE numexp
-- On Pname_ns reduce production relational_expression -> numexp LTE numexp
-- On Pname_ln reduce production relational_expression -> numexp LTE numexp
-- On PLUS reduce production relational_expression -> numexp LTE numexp
-- On PLUS reduce production relational_expression -> numexp
-- On PIPEPIPE reduce production relational_expression -> numexp LTE numexp
-- On PIPEPIPE reduce production relational_expression -> numexp
-- On ORDER reduce production relational_expression -> numexp LTE numexp
-- On OFFSET reduce production relational_expression -> numexp LTE numexp
-- On NOW reduce production relational_expression -> numexp LTE numexp
-- On MONTH reduce production relational_expression -> numexp LTE numexp
-- On MINUTES reduce production relational_expression -> numexp LTE numexp
-- On MINUS reduce production relational_expression -> numexp LTE numexp
-- On MINUS reduce production relational_expression -> numexp
-- On MIN reduce production relational_expression -> numexp LTE numexp
-- On MD5 reduce production relational_expression -> numexp LTE numexp
-- On MAX reduce production relational_expression -> numexp LTE numexp
-- On LPAR reduce production relational_expression -> numexp LTE numexp
-- On LIMIT reduce production relational_expression -> numexp LTE numexp
-- On LCASE reduce production relational_expression -> numexp LTE numexp
-- On LANGMATCHES reduce production relational_expression -> numexp LTE numexp
-- On LANG reduce production relational_expression -> numexp LTE numexp
-- On Iriref_ reduce production relational_expression -> numexp LTE numexp
-- On Integer_positive reduce production relational_expression -> numexp LTE numexp
-- On Integer_positive reduce production relational_expression -> numexp
-- On Integer_negative reduce production relational_expression -> numexp LTE numexp
-- On Integer_negative reduce production relational_expression -> numexp
-- On Integer reduce production relational_expression -> numexp LTE numexp
-- On ISURI reduce production relational_expression -> numexp LTE numexp
-- On ISNUMERIC reduce production relational_expression -> numexp LTE numexp
-- On ISLITERAL reduce production relational_expression -> numexp LTE numexp
-- On ISIRI reduce production relational_expression -> numexp LTE numexp
-- On ISBLANK reduce production relational_expression -> numexp LTE numexp
-- On IRI reduce production relational_expression -> numexp LTE numexp
-- On IF reduce production relational_expression -> numexp LTE numexp
-- On HOURS reduce production relational_expression -> numexp LTE numexp
-- On HAVING reduce production relational_expression -> numexp LTE numexp
-- On GROUP_CONCAT reduce production relational_expression -> numexp LTE numexp
-- On FLOOR reduce production relational_expression -> numexp LTE numexp
-- On EXISTS reduce production relational_expression -> numexp LTE numexp
-- On EOF reduce production relational_expression -> numexp LTE numexp
-- On ENCODE_FOR_URI reduce production relational_expression -> numexp LTE numexp
-- On Double_positive reduce production relational_expression -> numexp LTE numexp
-- On Double_positive reduce production relational_expression -> numexp
-- On Double_negative reduce production relational_expression -> numexp LTE numexp
-- On Double_negative reduce production relational_expression -> numexp
-- On Double reduce production relational_expression -> numexp LTE numexp
-- On Decimal_positive reduce production relational_expression -> numexp LTE numexp
-- On Decimal_positive reduce production relational_expression -> numexp
-- On Decimal_negative reduce production relational_expression -> numexp LTE numexp
-- On Decimal_negative reduce production relational_expression -> numexp
-- On Decimal reduce production relational_expression -> numexp LTE numexp
-- On DAY reduce production relational_expression -> numexp LTE numexp
-- On DATATYPE reduce production relational_expression -> numexp LTE numexp
-- On COUNT reduce production relational_expression -> numexp LTE numexp
-- On CONTAINS reduce production relational_expression -> numexp LTE numexp
-- On CONCAT reduce production relational_expression -> numexp LTE numexp
-- On COMMA reduce production relational_expression -> numexp LTE numexp
-- On COALESCE reduce production relational_expression -> numexp LTE numexp
-- On CEIL reduce production relational_expression -> numexp LTE numexp
-- On Boolean reduce production relational_expression -> numexp LTE numexp
-- On BOUND reduce production relational_expression -> numexp LTE numexp
-- On BNODE reduce production relational_expression -> numexp LTE numexp
-- On BANG reduce production relational_expression -> numexp LTE numexp
-- On AVG reduce production relational_expression -> numexp LTE numexp
-- On AS reduce production relational_expression -> numexp LTE numexp
-- On AMPAMP reduce production relational_expression -> numexp LTE numexp
-- On AMPAMP reduce production relational_expression -> numexp
-- On ABS reduce production relational_expression -> numexp LTE numexp
** Conflict on STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP

State 357:
relational_expression -> numexp LT . numexp [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 358
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 351
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 358:
relational_expression -> numexp . EQUAL numexp [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . NOTEQUAL numexp [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . LT numexp [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp LT numexp . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
relational_expression -> numexp . GT numexp [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . LTE numexp [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . GTE numexp [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . IN expression_list [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . NOT IN expression_list [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
-- On YEAR reduce production relational_expression -> numexp LT numexp
-- On Var2 reduce production relational_expression -> numexp LT numexp
-- On Var1 reduce production relational_expression -> numexp LT numexp
-- On VALUES reduce production relational_expression -> numexp LT numexp
-- On UUID reduce production relational_expression -> numexp LT numexp
-- On URI reduce production relational_expression -> numexp LT numexp
-- On UCASE reduce production relational_expression -> numexp LT numexp
-- On TZ reduce production relational_expression -> numexp LT numexp
-- On TIMEZONE reduce production relational_expression -> numexp LT numexp
-- On String_literal reduce production relational_expression -> numexp LT numexp
-- On SUM reduce production relational_expression -> numexp LT numexp
-- On SUBSTR reduce production relational_expression -> numexp LT numexp
-- On STRUUID reduce production relational_expression -> numexp LT numexp
-- On STRSTARTS reduce production relational_expression -> numexp LT numexp
-- On STRLEN reduce production relational_expression -> numexp LT numexp
-- On STRLANG reduce production relational_expression -> numexp LT numexp
-- On STRENDS reduce production relational_expression -> numexp LT numexp
-- On STRDT reduce production relational_expression -> numexp LT numexp
-- On STRBEFORE reduce production relational_expression -> numexp LT numexp
-- On STRAFTER reduce production relational_expression -> numexp LT numexp
-- On STR reduce production relational_expression -> numexp LT numexp
-- On STAR reduce production relational_expression -> numexp LT numexp
-- On STAR reduce production relational_expression -> numexp
-- On SLASH reduce production relational_expression -> numexp LT numexp
-- On SLASH reduce production relational_expression -> numexp
-- On SHA512 reduce production relational_expression -> numexp LT numexp
-- On SHA384 reduce production relational_expression -> numexp LT numexp
-- On SHA256 reduce production relational_expression -> numexp LT numexp
-- On SHA1 reduce production relational_expression -> numexp LT numexp
-- On SEMICOLON reduce production relational_expression -> numexp LT numexp
-- On SECONDS reduce production relational_expression -> numexp LT numexp
-- On SAMPLE reduce production relational_expression -> numexp LT numexp
-- On SAMETERM reduce production relational_expression -> numexp LT numexp
-- On RPAR reduce production relational_expression -> numexp LT numexp
-- On ROUND reduce production relational_expression -> numexp LT numexp
-- On REPLACE reduce production relational_expression -> numexp LT numexp
-- On REGEX reduce production relational_expression -> numexp LT numexp
-- On RBRACE reduce production relational_expression -> numexp LT numexp
-- On RAND reduce production relational_expression -> numexp LT numexp
-- On Pname_ns reduce production relational_expression -> numexp LT numexp
-- On Pname_ln reduce production relational_expression -> numexp LT numexp
-- On PLUS reduce production relational_expression -> numexp LT numexp
-- On PLUS reduce production relational_expression -> numexp
-- On PIPEPIPE reduce production relational_expression -> numexp LT numexp
-- On PIPEPIPE reduce production relational_expression -> numexp
-- On ORDER reduce production relational_expression -> numexp LT numexp
-- On OFFSET reduce production relational_expression -> numexp LT numexp
-- On NOW reduce production relational_expression -> numexp LT numexp
-- On MONTH reduce production relational_expression -> numexp LT numexp
-- On MINUTES reduce production relational_expression -> numexp LT numexp
-- On MINUS reduce production relational_expression -> numexp LT numexp
-- On MINUS reduce production relational_expression -> numexp
-- On MIN reduce production relational_expression -> numexp LT numexp
-- On MD5 reduce production relational_expression -> numexp LT numexp
-- On MAX reduce production relational_expression -> numexp LT numexp
-- On LPAR reduce production relational_expression -> numexp LT numexp
-- On LIMIT reduce production relational_expression -> numexp LT numexp
-- On LCASE reduce production relational_expression -> numexp LT numexp
-- On LANGMATCHES reduce production relational_expression -> numexp LT numexp
-- On LANG reduce production relational_expression -> numexp LT numexp
-- On Iriref_ reduce production relational_expression -> numexp LT numexp
-- On Integer_positive reduce production relational_expression -> numexp LT numexp
-- On Integer_positive reduce production relational_expression -> numexp
-- On Integer_negative reduce production relational_expression -> numexp LT numexp
-- On Integer_negative reduce production relational_expression -> numexp
-- On Integer reduce production relational_expression -> numexp LT numexp
-- On ISURI reduce production relational_expression -> numexp LT numexp
-- On ISNUMERIC reduce production relational_expression -> numexp LT numexp
-- On ISLITERAL reduce production relational_expression -> numexp LT numexp
-- On ISIRI reduce production relational_expression -> numexp LT numexp
-- On ISBLANK reduce production relational_expression -> numexp LT numexp
-- On IRI reduce production relational_expression -> numexp LT numexp
-- On IF reduce production relational_expression -> numexp LT numexp
-- On HOURS reduce production relational_expression -> numexp LT numexp
-- On HAVING reduce production relational_expression -> numexp LT numexp
-- On GROUP_CONCAT reduce production relational_expression -> numexp LT numexp
-- On FLOOR reduce production relational_expression -> numexp LT numexp
-- On EXISTS reduce production relational_expression -> numexp LT numexp
-- On EOF reduce production relational_expression -> numexp LT numexp
-- On ENCODE_FOR_URI reduce production relational_expression -> numexp LT numexp
-- On Double_positive reduce production relational_expression -> numexp LT numexp
-- On Double_positive reduce production relational_expression -> numexp
-- On Double_negative reduce production relational_expression -> numexp LT numexp
-- On Double_negative reduce production relational_expression -> numexp
-- On Double reduce production relational_expression -> numexp LT numexp
-- On Decimal_positive reduce production relational_expression -> numexp LT numexp
-- On Decimal_positive reduce production relational_expression -> numexp
-- On Decimal_negative reduce production relational_expression -> numexp LT numexp
-- On Decimal_negative reduce production relational_expression -> numexp
-- On Decimal reduce production relational_expression -> numexp LT numexp
-- On DAY reduce production relational_expression -> numexp LT numexp
-- On DATATYPE reduce production relational_expression -> numexp LT numexp
-- On COUNT reduce production relational_expression -> numexp LT numexp
-- On CONTAINS reduce production relational_expression -> numexp LT numexp
-- On CONCAT reduce production relational_expression -> numexp LT numexp
-- On COMMA reduce production relational_expression -> numexp LT numexp
-- On COALESCE reduce production relational_expression -> numexp LT numexp
-- On CEIL reduce production relational_expression -> numexp LT numexp
-- On Boolean reduce production relational_expression -> numexp LT numexp
-- On BOUND reduce production relational_expression -> numexp LT numexp
-- On BNODE reduce production relational_expression -> numexp LT numexp
-- On BANG reduce production relational_expression -> numexp LT numexp
-- On AVG reduce production relational_expression -> numexp LT numexp
-- On AS reduce production relational_expression -> numexp LT numexp
-- On AMPAMP reduce production relational_expression -> numexp LT numexp
-- On AMPAMP reduce production relational_expression -> numexp
-- On ABS reduce production relational_expression -> numexp LT numexp
** Conflict on STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP

State 359:
relational_expression -> numexp IN . expression_list [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
-- On NIL shift to state 292
-- On LPAR shift to state 293
-- On expression_list shift to state 360

State 360:
relational_expression -> numexp IN expression_list . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
-- On YEAR reduce production relational_expression -> numexp IN expression_list
-- On Var2 reduce production relational_expression -> numexp IN expression_list
-- On Var1 reduce production relational_expression -> numexp IN expression_list
-- On VALUES reduce production relational_expression -> numexp IN expression_list
-- On UUID reduce production relational_expression -> numexp IN expression_list
-- On URI reduce production relational_expression -> numexp IN expression_list
-- On UCASE reduce production relational_expression -> numexp IN expression_list
-- On TZ reduce production relational_expression -> numexp IN expression_list
-- On TIMEZONE reduce production relational_expression -> numexp IN expression_list
-- On String_literal reduce production relational_expression -> numexp IN expression_list
-- On SUM reduce production relational_expression -> numexp IN expression_list
-- On SUBSTR reduce production relational_expression -> numexp IN expression_list
-- On STRUUID reduce production relational_expression -> numexp IN expression_list
-- On STRSTARTS reduce production relational_expression -> numexp IN expression_list
-- On STRLEN reduce production relational_expression -> numexp IN expression_list
-- On STRLANG reduce production relational_expression -> numexp IN expression_list
-- On STRENDS reduce production relational_expression -> numexp IN expression_list
-- On STRDT reduce production relational_expression -> numexp IN expression_list
-- On STRBEFORE reduce production relational_expression -> numexp IN expression_list
-- On STRAFTER reduce production relational_expression -> numexp IN expression_list
-- On STR reduce production relational_expression -> numexp IN expression_list
-- On STAR reduce production relational_expression -> numexp IN expression_list
-- On SLASH reduce production relational_expression -> numexp IN expression_list
-- On SHA512 reduce production relational_expression -> numexp IN expression_list
-- On SHA384 reduce production relational_expression -> numexp IN expression_list
-- On SHA256 reduce production relational_expression -> numexp IN expression_list
-- On SHA1 reduce production relational_expression -> numexp IN expression_list
-- On SEMICOLON reduce production relational_expression -> numexp IN expression_list
-- On SECONDS reduce production relational_expression -> numexp IN expression_list
-- On SAMPLE reduce production relational_expression -> numexp IN expression_list
-- On SAMETERM reduce production relational_expression -> numexp IN expression_list
-- On RPAR reduce production relational_expression -> numexp IN expression_list
-- On ROUND reduce production relational_expression -> numexp IN expression_list
-- On REPLACE reduce production relational_expression -> numexp IN expression_list
-- On REGEX reduce production relational_expression -> numexp IN expression_list
-- On RBRACE reduce production relational_expression -> numexp IN expression_list
-- On RAND reduce production relational_expression -> numexp IN expression_list
-- On Pname_ns reduce production relational_expression -> numexp IN expression_list
-- On Pname_ln reduce production relational_expression -> numexp IN expression_list
-- On PLUS reduce production relational_expression -> numexp IN expression_list
-- On PIPEPIPE reduce production relational_expression -> numexp IN expression_list
-- On ORDER reduce production relational_expression -> numexp IN expression_list
-- On OFFSET reduce production relational_expression -> numexp IN expression_list
-- On NOW reduce production relational_expression -> numexp IN expression_list
-- On NOTEQUAL reduce production relational_expression -> numexp IN expression_list
-- On NOT reduce production relational_expression -> numexp IN expression_list
-- On MONTH reduce production relational_expression -> numexp IN expression_list
-- On MINUTES reduce production relational_expression -> numexp IN expression_list
-- On MINUS reduce production relational_expression -> numexp IN expression_list
-- On MIN reduce production relational_expression -> numexp IN expression_list
-- On MD5 reduce production relational_expression -> numexp IN expression_list
-- On MAX reduce production relational_expression -> numexp IN expression_list
-- On LTE reduce production relational_expression -> numexp IN expression_list
-- On LT reduce production relational_expression -> numexp IN expression_list
-- On LPAR reduce production relational_expression -> numexp IN expression_list
-- On LIMIT reduce production relational_expression -> numexp IN expression_list
-- On LCASE reduce production relational_expression -> numexp IN expression_list
-- On LANGMATCHES reduce production relational_expression -> numexp IN expression_list
-- On LANG reduce production relational_expression -> numexp IN expression_list
-- On Iriref_ reduce production relational_expression -> numexp IN expression_list
-- On Integer_positive reduce production relational_expression -> numexp IN expression_list
-- On Integer_negative reduce production relational_expression -> numexp IN expression_list
-- On Integer reduce production relational_expression -> numexp IN expression_list
-- On ISURI reduce production relational_expression -> numexp IN expression_list
-- On ISNUMERIC reduce production relational_expression -> numexp IN expression_list
-- On ISLITERAL reduce production relational_expression -> numexp IN expression_list
-- On ISIRI reduce production relational_expression -> numexp IN expression_list
-- On ISBLANK reduce production relational_expression -> numexp IN expression_list
-- On IRI reduce production relational_expression -> numexp IN expression_list
-- On IN reduce production relational_expression -> numexp IN expression_list
-- On IF reduce production relational_expression -> numexp IN expression_list
-- On HOURS reduce production relational_expression -> numexp IN expression_list
-- On HAVING reduce production relational_expression -> numexp IN expression_list
-- On GTE reduce production relational_expression -> numexp IN expression_list
-- On GT reduce production relational_expression -> numexp IN expression_list
-- On GROUP_CONCAT reduce production relational_expression -> numexp IN expression_list
-- On FLOOR reduce production relational_expression -> numexp IN expression_list
-- On EXISTS reduce production relational_expression -> numexp IN expression_list
-- On EQUAL reduce production relational_expression -> numexp IN expression_list
-- On EOF reduce production relational_expression -> numexp IN expression_list
-- On ENCODE_FOR_URI reduce production relational_expression -> numexp IN expression_list
-- On Double_positive reduce production relational_expression -> numexp IN expression_list
-- On Double_negative reduce production relational_expression -> numexp IN expression_list
-- On Double reduce production relational_expression -> numexp IN expression_list
-- On Decimal_positive reduce production relational_expression -> numexp IN expression_list
-- On Decimal_negative reduce production relational_expression -> numexp IN expression_list
-- On Decimal reduce production relational_expression -> numexp IN expression_list
-- On DAY reduce production relational_expression -> numexp IN expression_list
-- On DATATYPE reduce production relational_expression -> numexp IN expression_list
-- On COUNT reduce production relational_expression -> numexp IN expression_list
-- On CONTAINS reduce production relational_expression -> numexp IN expression_list
-- On CONCAT reduce production relational_expression -> numexp IN expression_list
-- On COMMA reduce production relational_expression -> numexp IN expression_list
-- On COALESCE reduce production relational_expression -> numexp IN expression_list
-- On CEIL reduce production relational_expression -> numexp IN expression_list
-- On Boolean reduce production relational_expression -> numexp IN expression_list
-- On BOUND reduce production relational_expression -> numexp IN expression_list
-- On BNODE reduce production relational_expression -> numexp IN expression_list
-- On BANG reduce production relational_expression -> numexp IN expression_list
-- On AVG reduce production relational_expression -> numexp IN expression_list
-- On AS reduce production relational_expression -> numexp IN expression_list
-- On AMPAMP reduce production relational_expression -> numexp IN expression_list
-- On ABS reduce production relational_expression -> numexp IN expression_list

State 361:
relational_expression -> numexp GTE . numexp [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 362
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 351
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 362:
relational_expression -> numexp . EQUAL numexp [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . NOTEQUAL numexp [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . LT numexp [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . GT numexp [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . LTE numexp [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . GTE numexp [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp GTE numexp . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
relational_expression -> numexp . IN expression_list [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . NOT IN expression_list [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
-- On YEAR reduce production relational_expression -> numexp GTE numexp
-- On Var2 reduce production relational_expression -> numexp GTE numexp
-- On Var1 reduce production relational_expression -> numexp GTE numexp
-- On VALUES reduce production relational_expression -> numexp GTE numexp
-- On UUID reduce production relational_expression -> numexp GTE numexp
-- On URI reduce production relational_expression -> numexp GTE numexp
-- On UCASE reduce production relational_expression -> numexp GTE numexp
-- On TZ reduce production relational_expression -> numexp GTE numexp
-- On TIMEZONE reduce production relational_expression -> numexp GTE numexp
-- On String_literal reduce production relational_expression -> numexp GTE numexp
-- On SUM reduce production relational_expression -> numexp GTE numexp
-- On SUBSTR reduce production relational_expression -> numexp GTE numexp
-- On STRUUID reduce production relational_expression -> numexp GTE numexp
-- On STRSTARTS reduce production relational_expression -> numexp GTE numexp
-- On STRLEN reduce production relational_expression -> numexp GTE numexp
-- On STRLANG reduce production relational_expression -> numexp GTE numexp
-- On STRENDS reduce production relational_expression -> numexp GTE numexp
-- On STRDT reduce production relational_expression -> numexp GTE numexp
-- On STRBEFORE reduce production relational_expression -> numexp GTE numexp
-- On STRAFTER reduce production relational_expression -> numexp GTE numexp
-- On STR reduce production relational_expression -> numexp GTE numexp
-- On STAR reduce production relational_expression -> numexp GTE numexp
-- On STAR reduce production relational_expression -> numexp
-- On SLASH reduce production relational_expression -> numexp GTE numexp
-- On SLASH reduce production relational_expression -> numexp
-- On SHA512 reduce production relational_expression -> numexp GTE numexp
-- On SHA384 reduce production relational_expression -> numexp GTE numexp
-- On SHA256 reduce production relational_expression -> numexp GTE numexp
-- On SHA1 reduce production relational_expression -> numexp GTE numexp
-- On SEMICOLON reduce production relational_expression -> numexp GTE numexp
-- On SECONDS reduce production relational_expression -> numexp GTE numexp
-- On SAMPLE reduce production relational_expression -> numexp GTE numexp
-- On SAMETERM reduce production relational_expression -> numexp GTE numexp
-- On RPAR reduce production relational_expression -> numexp GTE numexp
-- On ROUND reduce production relational_expression -> numexp GTE numexp
-- On REPLACE reduce production relational_expression -> numexp GTE numexp
-- On REGEX reduce production relational_expression -> numexp GTE numexp
-- On RBRACE reduce production relational_expression -> numexp GTE numexp
-- On RAND reduce production relational_expression -> numexp GTE numexp
-- On Pname_ns reduce production relational_expression -> numexp GTE numexp
-- On Pname_ln reduce production relational_expression -> numexp GTE numexp
-- On PLUS reduce production relational_expression -> numexp GTE numexp
-- On PLUS reduce production relational_expression -> numexp
-- On PIPEPIPE reduce production relational_expression -> numexp GTE numexp
-- On PIPEPIPE reduce production relational_expression -> numexp
-- On ORDER reduce production relational_expression -> numexp GTE numexp
-- On OFFSET reduce production relational_expression -> numexp GTE numexp
-- On NOW reduce production relational_expression -> numexp GTE numexp
-- On MONTH reduce production relational_expression -> numexp GTE numexp
-- On MINUTES reduce production relational_expression -> numexp GTE numexp
-- On MINUS reduce production relational_expression -> numexp GTE numexp
-- On MINUS reduce production relational_expression -> numexp
-- On MIN reduce production relational_expression -> numexp GTE numexp
-- On MD5 reduce production relational_expression -> numexp GTE numexp
-- On MAX reduce production relational_expression -> numexp GTE numexp
-- On LPAR reduce production relational_expression -> numexp GTE numexp
-- On LIMIT reduce production relational_expression -> numexp GTE numexp
-- On LCASE reduce production relational_expression -> numexp GTE numexp
-- On LANGMATCHES reduce production relational_expression -> numexp GTE numexp
-- On LANG reduce production relational_expression -> numexp GTE numexp
-- On Iriref_ reduce production relational_expression -> numexp GTE numexp
-- On Integer_positive reduce production relational_expression -> numexp GTE numexp
-- On Integer_positive reduce production relational_expression -> numexp
-- On Integer_negative reduce production relational_expression -> numexp GTE numexp
-- On Integer_negative reduce production relational_expression -> numexp
-- On Integer reduce production relational_expression -> numexp GTE numexp
-- On ISURI reduce production relational_expression -> numexp GTE numexp
-- On ISNUMERIC reduce production relational_expression -> numexp GTE numexp
-- On ISLITERAL reduce production relational_expression -> numexp GTE numexp
-- On ISIRI reduce production relational_expression -> numexp GTE numexp
-- On ISBLANK reduce production relational_expression -> numexp GTE numexp
-- On IRI reduce production relational_expression -> numexp GTE numexp
-- On IF reduce production relational_expression -> numexp GTE numexp
-- On HOURS reduce production relational_expression -> numexp GTE numexp
-- On HAVING reduce production relational_expression -> numexp GTE numexp
-- On GROUP_CONCAT reduce production relational_expression -> numexp GTE numexp
-- On FLOOR reduce production relational_expression -> numexp GTE numexp
-- On EXISTS reduce production relational_expression -> numexp GTE numexp
-- On EOF reduce production relational_expression -> numexp GTE numexp
-- On ENCODE_FOR_URI reduce production relational_expression -> numexp GTE numexp
-- On Double_positive reduce production relational_expression -> numexp GTE numexp
-- On Double_positive reduce production relational_expression -> numexp
-- On Double_negative reduce production relational_expression -> numexp GTE numexp
-- On Double_negative reduce production relational_expression -> numexp
-- On Double reduce production relational_expression -> numexp GTE numexp
-- On Decimal_positive reduce production relational_expression -> numexp GTE numexp
-- On Decimal_positive reduce production relational_expression -> numexp
-- On Decimal_negative reduce production relational_expression -> numexp GTE numexp
-- On Decimal_negative reduce production relational_expression -> numexp
-- On Decimal reduce production relational_expression -> numexp GTE numexp
-- On DAY reduce production relational_expression -> numexp GTE numexp
-- On DATATYPE reduce production relational_expression -> numexp GTE numexp
-- On COUNT reduce production relational_expression -> numexp GTE numexp
-- On CONTAINS reduce production relational_expression -> numexp GTE numexp
-- On CONCAT reduce production relational_expression -> numexp GTE numexp
-- On COMMA reduce production relational_expression -> numexp GTE numexp
-- On COALESCE reduce production relational_expression -> numexp GTE numexp
-- On CEIL reduce production relational_expression -> numexp GTE numexp
-- On Boolean reduce production relational_expression -> numexp GTE numexp
-- On BOUND reduce production relational_expression -> numexp GTE numexp
-- On BNODE reduce production relational_expression -> numexp GTE numexp
-- On BANG reduce production relational_expression -> numexp GTE numexp
-- On AVG reduce production relational_expression -> numexp GTE numexp
-- On AS reduce production relational_expression -> numexp GTE numexp
-- On AMPAMP reduce production relational_expression -> numexp GTE numexp
-- On AMPAMP reduce production relational_expression -> numexp
-- On ABS reduce production relational_expression -> numexp GTE numexp
** Conflict on STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP

State 363:
relational_expression -> numexp GT . numexp [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 364
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 351
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 364:
relational_expression -> numexp . EQUAL numexp [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . NOTEQUAL numexp [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . LT numexp [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . GT numexp [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp GT numexp . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
relational_expression -> numexp . LTE numexp [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . GTE numexp [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . IN expression_list [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . NOT IN expression_list [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
-- On YEAR reduce production relational_expression -> numexp GT numexp
-- On Var2 reduce production relational_expression -> numexp GT numexp
-- On Var1 reduce production relational_expression -> numexp GT numexp
-- On VALUES reduce production relational_expression -> numexp GT numexp
-- On UUID reduce production relational_expression -> numexp GT numexp
-- On URI reduce production relational_expression -> numexp GT numexp
-- On UCASE reduce production relational_expression -> numexp GT numexp
-- On TZ reduce production relational_expression -> numexp GT numexp
-- On TIMEZONE reduce production relational_expression -> numexp GT numexp
-- On String_literal reduce production relational_expression -> numexp GT numexp
-- On SUM reduce production relational_expression -> numexp GT numexp
-- On SUBSTR reduce production relational_expression -> numexp GT numexp
-- On STRUUID reduce production relational_expression -> numexp GT numexp
-- On STRSTARTS reduce production relational_expression -> numexp GT numexp
-- On STRLEN reduce production relational_expression -> numexp GT numexp
-- On STRLANG reduce production relational_expression -> numexp GT numexp
-- On STRENDS reduce production relational_expression -> numexp GT numexp
-- On STRDT reduce production relational_expression -> numexp GT numexp
-- On STRBEFORE reduce production relational_expression -> numexp GT numexp
-- On STRAFTER reduce production relational_expression -> numexp GT numexp
-- On STR reduce production relational_expression -> numexp GT numexp
-- On STAR reduce production relational_expression -> numexp GT numexp
-- On STAR reduce production relational_expression -> numexp
-- On SLASH reduce production relational_expression -> numexp GT numexp
-- On SLASH reduce production relational_expression -> numexp
-- On SHA512 reduce production relational_expression -> numexp GT numexp
-- On SHA384 reduce production relational_expression -> numexp GT numexp
-- On SHA256 reduce production relational_expression -> numexp GT numexp
-- On SHA1 reduce production relational_expression -> numexp GT numexp
-- On SEMICOLON reduce production relational_expression -> numexp GT numexp
-- On SECONDS reduce production relational_expression -> numexp GT numexp
-- On SAMPLE reduce production relational_expression -> numexp GT numexp
-- On SAMETERM reduce production relational_expression -> numexp GT numexp
-- On RPAR reduce production relational_expression -> numexp GT numexp
-- On ROUND reduce production relational_expression -> numexp GT numexp
-- On REPLACE reduce production relational_expression -> numexp GT numexp
-- On REGEX reduce production relational_expression -> numexp GT numexp
-- On RBRACE reduce production relational_expression -> numexp GT numexp
-- On RAND reduce production relational_expression -> numexp GT numexp
-- On Pname_ns reduce production relational_expression -> numexp GT numexp
-- On Pname_ln reduce production relational_expression -> numexp GT numexp
-- On PLUS reduce production relational_expression -> numexp GT numexp
-- On PLUS reduce production relational_expression -> numexp
-- On PIPEPIPE reduce production relational_expression -> numexp GT numexp
-- On PIPEPIPE reduce production relational_expression -> numexp
-- On ORDER reduce production relational_expression -> numexp GT numexp
-- On OFFSET reduce production relational_expression -> numexp GT numexp
-- On NOW reduce production relational_expression -> numexp GT numexp
-- On MONTH reduce production relational_expression -> numexp GT numexp
-- On MINUTES reduce production relational_expression -> numexp GT numexp
-- On MINUS reduce production relational_expression -> numexp GT numexp
-- On MINUS reduce production relational_expression -> numexp
-- On MIN reduce production relational_expression -> numexp GT numexp
-- On MD5 reduce production relational_expression -> numexp GT numexp
-- On MAX reduce production relational_expression -> numexp GT numexp
-- On LPAR reduce production relational_expression -> numexp GT numexp
-- On LIMIT reduce production relational_expression -> numexp GT numexp
-- On LCASE reduce production relational_expression -> numexp GT numexp
-- On LANGMATCHES reduce production relational_expression -> numexp GT numexp
-- On LANG reduce production relational_expression -> numexp GT numexp
-- On Iriref_ reduce production relational_expression -> numexp GT numexp
-- On Integer_positive reduce production relational_expression -> numexp GT numexp
-- On Integer_positive reduce production relational_expression -> numexp
-- On Integer_negative reduce production relational_expression -> numexp GT numexp
-- On Integer_negative reduce production relational_expression -> numexp
-- On Integer reduce production relational_expression -> numexp GT numexp
-- On ISURI reduce production relational_expression -> numexp GT numexp
-- On ISNUMERIC reduce production relational_expression -> numexp GT numexp
-- On ISLITERAL reduce production relational_expression -> numexp GT numexp
-- On ISIRI reduce production relational_expression -> numexp GT numexp
-- On ISBLANK reduce production relational_expression -> numexp GT numexp
-- On IRI reduce production relational_expression -> numexp GT numexp
-- On IF reduce production relational_expression -> numexp GT numexp
-- On HOURS reduce production relational_expression -> numexp GT numexp
-- On HAVING reduce production relational_expression -> numexp GT numexp
-- On GROUP_CONCAT reduce production relational_expression -> numexp GT numexp
-- On FLOOR reduce production relational_expression -> numexp GT numexp
-- On EXISTS reduce production relational_expression -> numexp GT numexp
-- On EOF reduce production relational_expression -> numexp GT numexp
-- On ENCODE_FOR_URI reduce production relational_expression -> numexp GT numexp
-- On Double_positive reduce production relational_expression -> numexp GT numexp
-- On Double_positive reduce production relational_expression -> numexp
-- On Double_negative reduce production relational_expression -> numexp GT numexp
-- On Double_negative reduce production relational_expression -> numexp
-- On Double reduce production relational_expression -> numexp GT numexp
-- On Decimal_positive reduce production relational_expression -> numexp GT numexp
-- On Decimal_positive reduce production relational_expression -> numexp
-- On Decimal_negative reduce production relational_expression -> numexp GT numexp
-- On Decimal_negative reduce production relational_expression -> numexp
-- On Decimal reduce production relational_expression -> numexp GT numexp
-- On DAY reduce production relational_expression -> numexp GT numexp
-- On DATATYPE reduce production relational_expression -> numexp GT numexp
-- On COUNT reduce production relational_expression -> numexp GT numexp
-- On CONTAINS reduce production relational_expression -> numexp GT numexp
-- On CONCAT reduce production relational_expression -> numexp GT numexp
-- On COMMA reduce production relational_expression -> numexp GT numexp
-- On COALESCE reduce production relational_expression -> numexp GT numexp
-- On CEIL reduce production relational_expression -> numexp GT numexp
-- On Boolean reduce production relational_expression -> numexp GT numexp
-- On BOUND reduce production relational_expression -> numexp GT numexp
-- On BNODE reduce production relational_expression -> numexp GT numexp
-- On BANG reduce production relational_expression -> numexp GT numexp
-- On AVG reduce production relational_expression -> numexp GT numexp
-- On AS reduce production relational_expression -> numexp GT numexp
-- On AMPAMP reduce production relational_expression -> numexp GT numexp
-- On AMPAMP reduce production relational_expression -> numexp
-- On ABS reduce production relational_expression -> numexp GT numexp
** Conflict on STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP

State 365:
relational_expression -> numexp EQUAL . numexp [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 366
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 351
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 366:
relational_expression -> numexp . EQUAL numexp [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp EQUAL numexp . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
relational_expression -> numexp . NOTEQUAL numexp [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . LT numexp [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . GT numexp [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . LTE numexp [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . GTE numexp [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . IN expression_list [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . NOT IN expression_list [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
-- On YEAR reduce production relational_expression -> numexp EQUAL numexp
-- On Var2 reduce production relational_expression -> numexp EQUAL numexp
-- On Var1 reduce production relational_expression -> numexp EQUAL numexp
-- On VALUES reduce production relational_expression -> numexp EQUAL numexp
-- On UUID reduce production relational_expression -> numexp EQUAL numexp
-- On URI reduce production relational_expression -> numexp EQUAL numexp
-- On UCASE reduce production relational_expression -> numexp EQUAL numexp
-- On TZ reduce production relational_expression -> numexp EQUAL numexp
-- On TIMEZONE reduce production relational_expression -> numexp EQUAL numexp
-- On String_literal reduce production relational_expression -> numexp EQUAL numexp
-- On SUM reduce production relational_expression -> numexp EQUAL numexp
-- On SUBSTR reduce production relational_expression -> numexp EQUAL numexp
-- On STRUUID reduce production relational_expression -> numexp EQUAL numexp
-- On STRSTARTS reduce production relational_expression -> numexp EQUAL numexp
-- On STRLEN reduce production relational_expression -> numexp EQUAL numexp
-- On STRLANG reduce production relational_expression -> numexp EQUAL numexp
-- On STRENDS reduce production relational_expression -> numexp EQUAL numexp
-- On STRDT reduce production relational_expression -> numexp EQUAL numexp
-- On STRBEFORE reduce production relational_expression -> numexp EQUAL numexp
-- On STRAFTER reduce production relational_expression -> numexp EQUAL numexp
-- On STR reduce production relational_expression -> numexp EQUAL numexp
-- On STAR reduce production relational_expression -> numexp EQUAL numexp
-- On STAR reduce production relational_expression -> numexp
-- On SLASH reduce production relational_expression -> numexp EQUAL numexp
-- On SLASH reduce production relational_expression -> numexp
-- On SHA512 reduce production relational_expression -> numexp EQUAL numexp
-- On SHA384 reduce production relational_expression -> numexp EQUAL numexp
-- On SHA256 reduce production relational_expression -> numexp EQUAL numexp
-- On SHA1 reduce production relational_expression -> numexp EQUAL numexp
-- On SEMICOLON reduce production relational_expression -> numexp EQUAL numexp
-- On SECONDS reduce production relational_expression -> numexp EQUAL numexp
-- On SAMPLE reduce production relational_expression -> numexp EQUAL numexp
-- On SAMETERM reduce production relational_expression -> numexp EQUAL numexp
-- On RPAR reduce production relational_expression -> numexp EQUAL numexp
-- On ROUND reduce production relational_expression -> numexp EQUAL numexp
-- On REPLACE reduce production relational_expression -> numexp EQUAL numexp
-- On REGEX reduce production relational_expression -> numexp EQUAL numexp
-- On RBRACE reduce production relational_expression -> numexp EQUAL numexp
-- On RAND reduce production relational_expression -> numexp EQUAL numexp
-- On Pname_ns reduce production relational_expression -> numexp EQUAL numexp
-- On Pname_ln reduce production relational_expression -> numexp EQUAL numexp
-- On PLUS reduce production relational_expression -> numexp EQUAL numexp
-- On PLUS reduce production relational_expression -> numexp
-- On PIPEPIPE reduce production relational_expression -> numexp EQUAL numexp
-- On PIPEPIPE reduce production relational_expression -> numexp
-- On ORDER reduce production relational_expression -> numexp EQUAL numexp
-- On OFFSET reduce production relational_expression -> numexp EQUAL numexp
-- On NOW reduce production relational_expression -> numexp EQUAL numexp
-- On MONTH reduce production relational_expression -> numexp EQUAL numexp
-- On MINUTES reduce production relational_expression -> numexp EQUAL numexp
-- On MINUS reduce production relational_expression -> numexp EQUAL numexp
-- On MINUS reduce production relational_expression -> numexp
-- On MIN reduce production relational_expression -> numexp EQUAL numexp
-- On MD5 reduce production relational_expression -> numexp EQUAL numexp
-- On MAX reduce production relational_expression -> numexp EQUAL numexp
-- On LPAR reduce production relational_expression -> numexp EQUAL numexp
-- On LIMIT reduce production relational_expression -> numexp EQUAL numexp
-- On LCASE reduce production relational_expression -> numexp EQUAL numexp
-- On LANGMATCHES reduce production relational_expression -> numexp EQUAL numexp
-- On LANG reduce production relational_expression -> numexp EQUAL numexp
-- On Iriref_ reduce production relational_expression -> numexp EQUAL numexp
-- On Integer_positive reduce production relational_expression -> numexp EQUAL numexp
-- On Integer_positive reduce production relational_expression -> numexp
-- On Integer_negative reduce production relational_expression -> numexp EQUAL numexp
-- On Integer_negative reduce production relational_expression -> numexp
-- On Integer reduce production relational_expression -> numexp EQUAL numexp
-- On ISURI reduce production relational_expression -> numexp EQUAL numexp
-- On ISNUMERIC reduce production relational_expression -> numexp EQUAL numexp
-- On ISLITERAL reduce production relational_expression -> numexp EQUAL numexp
-- On ISIRI reduce production relational_expression -> numexp EQUAL numexp
-- On ISBLANK reduce production relational_expression -> numexp EQUAL numexp
-- On IRI reduce production relational_expression -> numexp EQUAL numexp
-- On IF reduce production relational_expression -> numexp EQUAL numexp
-- On HOURS reduce production relational_expression -> numexp EQUAL numexp
-- On HAVING reduce production relational_expression -> numexp EQUAL numexp
-- On GROUP_CONCAT reduce production relational_expression -> numexp EQUAL numexp
-- On FLOOR reduce production relational_expression -> numexp EQUAL numexp
-- On EXISTS reduce production relational_expression -> numexp EQUAL numexp
-- On EOF reduce production relational_expression -> numexp EQUAL numexp
-- On ENCODE_FOR_URI reduce production relational_expression -> numexp EQUAL numexp
-- On Double_positive reduce production relational_expression -> numexp EQUAL numexp
-- On Double_positive reduce production relational_expression -> numexp
-- On Double_negative reduce production relational_expression -> numexp EQUAL numexp
-- On Double_negative reduce production relational_expression -> numexp
-- On Double reduce production relational_expression -> numexp EQUAL numexp
-- On Decimal_positive reduce production relational_expression -> numexp EQUAL numexp
-- On Decimal_positive reduce production relational_expression -> numexp
-- On Decimal_negative reduce production relational_expression -> numexp EQUAL numexp
-- On Decimal_negative reduce production relational_expression -> numexp
-- On Decimal reduce production relational_expression -> numexp EQUAL numexp
-- On DAY reduce production relational_expression -> numexp EQUAL numexp
-- On DATATYPE reduce production relational_expression -> numexp EQUAL numexp
-- On COUNT reduce production relational_expression -> numexp EQUAL numexp
-- On CONTAINS reduce production relational_expression -> numexp EQUAL numexp
-- On CONCAT reduce production relational_expression -> numexp EQUAL numexp
-- On COMMA reduce production relational_expression -> numexp EQUAL numexp
-- On COALESCE reduce production relational_expression -> numexp EQUAL numexp
-- On CEIL reduce production relational_expression -> numexp EQUAL numexp
-- On Boolean reduce production relational_expression -> numexp EQUAL numexp
-- On BOUND reduce production relational_expression -> numexp EQUAL numexp
-- On BNODE reduce production relational_expression -> numexp EQUAL numexp
-- On BANG reduce production relational_expression -> numexp EQUAL numexp
-- On AVG reduce production relational_expression -> numexp EQUAL numexp
-- On AS reduce production relational_expression -> numexp EQUAL numexp
-- On AMPAMP reduce production relational_expression -> numexp EQUAL numexp
-- On AMPAMP reduce production relational_expression -> numexp
-- On ABS reduce production relational_expression -> numexp EQUAL numexp
** Conflict on STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP

State 367:
value_logical -> value_logical AMPAMP . value_logical [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 368
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 351
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 368:
expression -> value_logical . [ STAR SLASH PLUS MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative ]
value_logical -> value_logical . AMPAMP value_logical [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
value_logical -> value_logical AMPAMP value_logical . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
value_logical -> value_logical . PIPEPIPE value_logical [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
-- On PIPEPIPE shift to state 313
-- On YEAR reduce production value_logical -> value_logical AMPAMP value_logical
-- On Var2 reduce production value_logical -> value_logical AMPAMP value_logical
-- On Var1 reduce production value_logical -> value_logical AMPAMP value_logical
-- On VALUES reduce production value_logical -> value_logical AMPAMP value_logical
-- On UUID reduce production value_logical -> value_logical AMPAMP value_logical
-- On URI reduce production value_logical -> value_logical AMPAMP value_logical
-- On UCASE reduce production value_logical -> value_logical AMPAMP value_logical
-- On TZ reduce production value_logical -> value_logical AMPAMP value_logical
-- On TIMEZONE reduce production value_logical -> value_logical AMPAMP value_logical
-- On String_literal reduce production value_logical -> value_logical AMPAMP value_logical
-- On SUM reduce production value_logical -> value_logical AMPAMP value_logical
-- On SUBSTR reduce production value_logical -> value_logical AMPAMP value_logical
-- On STRUUID reduce production value_logical -> value_logical AMPAMP value_logical
-- On STRSTARTS reduce production value_logical -> value_logical AMPAMP value_logical
-- On STRLEN reduce production value_logical -> value_logical AMPAMP value_logical
-- On STRLANG reduce production value_logical -> value_logical AMPAMP value_logical
-- On STRENDS reduce production value_logical -> value_logical AMPAMP value_logical
-- On STRDT reduce production value_logical -> value_logical AMPAMP value_logical
-- On STRBEFORE reduce production value_logical -> value_logical AMPAMP value_logical
-- On STRAFTER reduce production value_logical -> value_logical AMPAMP value_logical
-- On STR reduce production value_logical -> value_logical AMPAMP value_logical
-- On STAR reduce production expression -> value_logical
-- On STAR reduce production value_logical -> value_logical AMPAMP value_logical
-- On SLASH reduce production expression -> value_logical
-- On SLASH reduce production value_logical -> value_logical AMPAMP value_logical
-- On SHA512 reduce production value_logical -> value_logical AMPAMP value_logical
-- On SHA384 reduce production value_logical -> value_logical AMPAMP value_logical
-- On SHA256 reduce production value_logical -> value_logical AMPAMP value_logical
-- On SHA1 reduce production value_logical -> value_logical AMPAMP value_logical
-- On SEMICOLON reduce production value_logical -> value_logical AMPAMP value_logical
-- On SECONDS reduce production value_logical -> value_logical AMPAMP value_logical
-- On SAMPLE reduce production value_logical -> value_logical AMPAMP value_logical
-- On SAMETERM reduce production value_logical -> value_logical AMPAMP value_logical
-- On RPAR reduce production value_logical -> value_logical AMPAMP value_logical
-- On ROUND reduce production value_logical -> value_logical AMPAMP value_logical
-- On REPLACE reduce production value_logical -> value_logical AMPAMP value_logical
-- On REGEX reduce production value_logical -> value_logical AMPAMP value_logical
-- On RBRACE reduce production value_logical -> value_logical AMPAMP value_logical
-- On RAND reduce production value_logical -> value_logical AMPAMP value_logical
-- On Pname_ns reduce production value_logical -> value_logical AMPAMP value_logical
-- On Pname_ln reduce production value_logical -> value_logical AMPAMP value_logical
-- On PLUS reduce production expression -> value_logical
-- On PLUS reduce production value_logical -> value_logical AMPAMP value_logical
-- On ORDER reduce production value_logical -> value_logical AMPAMP value_logical
-- On OFFSET reduce production value_logical -> value_logical AMPAMP value_logical
-- On NOW reduce production value_logical -> value_logical AMPAMP value_logical
-- On NOTEQUAL reduce production value_logical -> value_logical AMPAMP value_logical
-- On NOT reduce production value_logical -> value_logical AMPAMP value_logical
-- On MONTH reduce production value_logical -> value_logical AMPAMP value_logical
-- On MINUTES reduce production value_logical -> value_logical AMPAMP value_logical
-- On MINUS reduce production expression -> value_logical
-- On MINUS reduce production value_logical -> value_logical AMPAMP value_logical
-- On MIN reduce production value_logical -> value_logical AMPAMP value_logical
-- On MD5 reduce production value_logical -> value_logical AMPAMP value_logical
-- On MAX reduce production value_logical -> value_logical AMPAMP value_logical
-- On LTE reduce production value_logical -> value_logical AMPAMP value_logical
-- On LT reduce production value_logical -> value_logical AMPAMP value_logical
-- On LPAR reduce production value_logical -> value_logical AMPAMP value_logical
-- On LIMIT reduce production value_logical -> value_logical AMPAMP value_logical
-- On LCASE reduce production value_logical -> value_logical AMPAMP value_logical
-- On LANGMATCHES reduce production value_logical -> value_logical AMPAMP value_logical
-- On LANG reduce production value_logical -> value_logical AMPAMP value_logical
-- On Iriref_ reduce production value_logical -> value_logical AMPAMP value_logical
-- On Integer_positive reduce production expression -> value_logical
-- On Integer_positive reduce production value_logical -> value_logical AMPAMP value_logical
-- On Integer_negative reduce production expression -> value_logical
-- On Integer_negative reduce production value_logical -> value_logical AMPAMP value_logical
-- On Integer reduce production value_logical -> value_logical AMPAMP value_logical
-- On ISURI reduce production value_logical -> value_logical AMPAMP value_logical
-- On ISNUMERIC reduce production value_logical -> value_logical AMPAMP value_logical
-- On ISLITERAL reduce production value_logical -> value_logical AMPAMP value_logical
-- On ISIRI reduce production value_logical -> value_logical AMPAMP value_logical
-- On ISBLANK reduce production value_logical -> value_logical AMPAMP value_logical
-- On IRI reduce production value_logical -> value_logical AMPAMP value_logical
-- On IN reduce production value_logical -> value_logical AMPAMP value_logical
-- On IF reduce production value_logical -> value_logical AMPAMP value_logical
-- On HOURS reduce production value_logical -> value_logical AMPAMP value_logical
-- On HAVING reduce production value_logical -> value_logical AMPAMP value_logical
-- On GTE reduce production value_logical -> value_logical AMPAMP value_logical
-- On GT reduce production value_logical -> value_logical AMPAMP value_logical
-- On GROUP_CONCAT reduce production value_logical -> value_logical AMPAMP value_logical
-- On FLOOR reduce production value_logical -> value_logical AMPAMP value_logical
-- On EXISTS reduce production value_logical -> value_logical AMPAMP value_logical
-- On EQUAL reduce production value_logical -> value_logical AMPAMP value_logical
-- On EOF reduce production value_logical -> value_logical AMPAMP value_logical
-- On ENCODE_FOR_URI reduce production value_logical -> value_logical AMPAMP value_logical
-- On Double_positive reduce production expression -> value_logical
-- On Double_positive reduce production value_logical -> value_logical AMPAMP value_logical
-- On Double_negative reduce production expression -> value_logical
-- On Double_negative reduce production value_logical -> value_logical AMPAMP value_logical
-- On Double reduce production value_logical -> value_logical AMPAMP value_logical
-- On Decimal_positive reduce production expression -> value_logical
-- On Decimal_positive reduce production value_logical -> value_logical AMPAMP value_logical
-- On Decimal_negative reduce production expression -> value_logical
-- On Decimal_negative reduce production value_logical -> value_logical AMPAMP value_logical
-- On Decimal reduce production value_logical -> value_logical AMPAMP value_logical
-- On DAY reduce production value_logical -> value_logical AMPAMP value_logical
-- On DATATYPE reduce production value_logical -> value_logical AMPAMP value_logical
-- On COUNT reduce production value_logical -> value_logical AMPAMP value_logical
-- On CONTAINS reduce production value_logical -> value_logical AMPAMP value_logical
-- On CONCAT reduce production value_logical -> value_logical AMPAMP value_logical
-- On COMMA reduce production value_logical -> value_logical AMPAMP value_logical
-- On COALESCE reduce production value_logical -> value_logical AMPAMP value_logical
-- On CEIL reduce production value_logical -> value_logical AMPAMP value_logical
-- On Boolean reduce production value_logical -> value_logical AMPAMP value_logical
-- On BOUND reduce production value_logical -> value_logical AMPAMP value_logical
-- On BNODE reduce production value_logical -> value_logical AMPAMP value_logical
-- On BANG reduce production value_logical -> value_logical AMPAMP value_logical
-- On AVG reduce production value_logical -> value_logical AMPAMP value_logical
-- On AS reduce production value_logical -> value_logical AMPAMP value_logical
-- On AMPAMP reduce production value_logical -> value_logical AMPAMP value_logical
-- On ABS reduce production value_logical -> value_logical AMPAMP value_logical
** Conflict on STAR SLASH PLUS MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative

State 369:
built_in_call -> ABS LPAR expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 370
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 370:
built_in_call -> ABS LPAR expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production built_in_call -> ABS LPAR expression RPAR
-- On Var2 reduce production built_in_call -> ABS LPAR expression RPAR
-- On Var1 reduce production built_in_call -> ABS LPAR expression RPAR
-- On VALUES reduce production built_in_call -> ABS LPAR expression RPAR
-- On UUID reduce production built_in_call -> ABS LPAR expression RPAR
-- On URI reduce production built_in_call -> ABS LPAR expression RPAR
-- On UCASE reduce production built_in_call -> ABS LPAR expression RPAR
-- On TZ reduce production built_in_call -> ABS LPAR expression RPAR
-- On TIMEZONE reduce production built_in_call -> ABS LPAR expression RPAR
-- On String_literal reduce production built_in_call -> ABS LPAR expression RPAR
-- On SUM reduce production built_in_call -> ABS LPAR expression RPAR
-- On SUBSTR reduce production built_in_call -> ABS LPAR expression RPAR
-- On STRUUID reduce production built_in_call -> ABS LPAR expression RPAR
-- On STRSTARTS reduce production built_in_call -> ABS LPAR expression RPAR
-- On STRLEN reduce production built_in_call -> ABS LPAR expression RPAR
-- On STRLANG reduce production built_in_call -> ABS LPAR expression RPAR
-- On STRENDS reduce production built_in_call -> ABS LPAR expression RPAR
-- On STRDT reduce production built_in_call -> ABS LPAR expression RPAR
-- On STRBEFORE reduce production built_in_call -> ABS LPAR expression RPAR
-- On STRAFTER reduce production built_in_call -> ABS LPAR expression RPAR
-- On STR reduce production built_in_call -> ABS LPAR expression RPAR
-- On STAR reduce production built_in_call -> ABS LPAR expression RPAR
-- On SLASH reduce production built_in_call -> ABS LPAR expression RPAR
-- On SHA512 reduce production built_in_call -> ABS LPAR expression RPAR
-- On SHA384 reduce production built_in_call -> ABS LPAR expression RPAR
-- On SHA256 reduce production built_in_call -> ABS LPAR expression RPAR
-- On SHA1 reduce production built_in_call -> ABS LPAR expression RPAR
-- On SERVICE reduce production built_in_call -> ABS LPAR expression RPAR
-- On SEMICOLON reduce production built_in_call -> ABS LPAR expression RPAR
-- On SECONDS reduce production built_in_call -> ABS LPAR expression RPAR
-- On SAMPLE reduce production built_in_call -> ABS LPAR expression RPAR
-- On SAMETERM reduce production built_in_call -> ABS LPAR expression RPAR
-- On RPAR reduce production built_in_call -> ABS LPAR expression RPAR
-- On ROUND reduce production built_in_call -> ABS LPAR expression RPAR
-- On REPLACE reduce production built_in_call -> ABS LPAR expression RPAR
-- On REGEX reduce production built_in_call -> ABS LPAR expression RPAR
-- On RBRACE reduce production built_in_call -> ABS LPAR expression RPAR
-- On RAND reduce production built_in_call -> ABS LPAR expression RPAR
-- On Pname_ns reduce production built_in_call -> ABS LPAR expression RPAR
-- On Pname_ln reduce production built_in_call -> ABS LPAR expression RPAR
-- On PLUS reduce production built_in_call -> ABS LPAR expression RPAR
-- On PIPEPIPE reduce production built_in_call -> ABS LPAR expression RPAR
-- On ORDER reduce production built_in_call -> ABS LPAR expression RPAR
-- On OPTIONAL reduce production built_in_call -> ABS LPAR expression RPAR
-- On OFFSET reduce production built_in_call -> ABS LPAR expression RPAR
-- On NOW reduce production built_in_call -> ABS LPAR expression RPAR
-- On NOTEQUAL reduce production built_in_call -> ABS LPAR expression RPAR
-- On NOT reduce production built_in_call -> ABS LPAR expression RPAR
-- On NIL reduce production built_in_call -> ABS LPAR expression RPAR
-- On MONTH reduce production built_in_call -> ABS LPAR expression RPAR
-- On MINUTES reduce production built_in_call -> ABS LPAR expression RPAR
-- On MINUS reduce production built_in_call -> ABS LPAR expression RPAR
-- On MIN reduce production built_in_call -> ABS LPAR expression RPAR
-- On MD5 reduce production built_in_call -> ABS LPAR expression RPAR
-- On MAX reduce production built_in_call -> ABS LPAR expression RPAR
-- On LTE reduce production built_in_call -> ABS LPAR expression RPAR
-- On LT reduce production built_in_call -> ABS LPAR expression RPAR
-- On LPAR reduce production built_in_call -> ABS LPAR expression RPAR
-- On LIMIT reduce production built_in_call -> ABS LPAR expression RPAR
-- On LCASE reduce production built_in_call -> ABS LPAR expression RPAR
-- On LBRACKET reduce production built_in_call -> ABS LPAR expression RPAR
-- On LBRACE reduce production built_in_call -> ABS LPAR expression RPAR
-- On LANGMATCHES reduce production built_in_call -> ABS LPAR expression RPAR
-- On LANG reduce production built_in_call -> ABS LPAR expression RPAR
-- On Iriref_ reduce production built_in_call -> ABS LPAR expression RPAR
-- On Integer_positive reduce production built_in_call -> ABS LPAR expression RPAR
-- On Integer_negative reduce production built_in_call -> ABS LPAR expression RPAR
-- On Integer reduce production built_in_call -> ABS LPAR expression RPAR
-- On ISURI reduce production built_in_call -> ABS LPAR expression RPAR
-- On ISNUMERIC reduce production built_in_call -> ABS LPAR expression RPAR
-- On ISLITERAL reduce production built_in_call -> ABS LPAR expression RPAR
-- On ISIRI reduce production built_in_call -> ABS LPAR expression RPAR
-- On ISBLANK reduce production built_in_call -> ABS LPAR expression RPAR
-- On IRI reduce production built_in_call -> ABS LPAR expression RPAR
-- On IN reduce production built_in_call -> ABS LPAR expression RPAR
-- On IF reduce production built_in_call -> ABS LPAR expression RPAR
-- On HOURS reduce production built_in_call -> ABS LPAR expression RPAR
-- On HAVING reduce production built_in_call -> ABS LPAR expression RPAR
-- On GTE reduce production built_in_call -> ABS LPAR expression RPAR
-- On GT reduce production built_in_call -> ABS LPAR expression RPAR
-- On GROUP_CONCAT reduce production built_in_call -> ABS LPAR expression RPAR
-- On GRAPH reduce production built_in_call -> ABS LPAR expression RPAR
-- On FLOOR reduce production built_in_call -> ABS LPAR expression RPAR
-- On FILTER reduce production built_in_call -> ABS LPAR expression RPAR
-- On EXISTS reduce production built_in_call -> ABS LPAR expression RPAR
-- On EQUAL reduce production built_in_call -> ABS LPAR expression RPAR
-- On EOF reduce production built_in_call -> ABS LPAR expression RPAR
-- On ENCODE_FOR_URI reduce production built_in_call -> ABS LPAR expression RPAR
-- On Double_positive reduce production built_in_call -> ABS LPAR expression RPAR
-- On Double_negative reduce production built_in_call -> ABS LPAR expression RPAR
-- On Double reduce production built_in_call -> ABS LPAR expression RPAR
-- On Decimal_positive reduce production built_in_call -> ABS LPAR expression RPAR
-- On Decimal_negative reduce production built_in_call -> ABS LPAR expression RPAR
-- On Decimal reduce production built_in_call -> ABS LPAR expression RPAR
-- On DOT reduce production built_in_call -> ABS LPAR expression RPAR
-- On DESC reduce production built_in_call -> ABS LPAR expression RPAR
-- On DAY reduce production built_in_call -> ABS LPAR expression RPAR
-- On DATATYPE reduce production built_in_call -> ABS LPAR expression RPAR
-- On COUNT reduce production built_in_call -> ABS LPAR expression RPAR
-- On CONTAINS reduce production built_in_call -> ABS LPAR expression RPAR
-- On CONCAT reduce production built_in_call -> ABS LPAR expression RPAR
-- On COMMA reduce production built_in_call -> ABS LPAR expression RPAR
-- On COALESCE reduce production built_in_call -> ABS LPAR expression RPAR
-- On CEIL reduce production built_in_call -> ABS LPAR expression RPAR
-- On Boolean reduce production built_in_call -> ABS LPAR expression RPAR
-- On Blank_node_label reduce production built_in_call -> ABS LPAR expression RPAR
-- On BOUND reduce production built_in_call -> ABS LPAR expression RPAR
-- On BNODE reduce production built_in_call -> ABS LPAR expression RPAR
-- On BIND reduce production built_in_call -> ABS LPAR expression RPAR
-- On BANG reduce production built_in_call -> ABS LPAR expression RPAR
-- On AVG reduce production built_in_call -> ABS LPAR expression RPAR
-- On ASC reduce production built_in_call -> ABS LPAR expression RPAR
-- On AS reduce production built_in_call -> ABS LPAR expression RPAR
-- On ANON reduce production built_in_call -> ABS LPAR expression RPAR
-- On AMPAMP reduce production built_in_call -> ABS LPAR expression RPAR
-- On ABS reduce production built_in_call -> ABS LPAR expression RPAR

State 371:
aggregate -> AVG LPAR option(DISTINCT) expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 372
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 372:
aggregate -> AVG LPAR option(DISTINCT) expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On Var2 reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On Var1 reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On VALUES reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On UUID reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On URI reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On UCASE reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On TZ reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On TIMEZONE reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On String_literal reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On SUM reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On SUBSTR reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On STRUUID reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On STRSTARTS reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On STRLEN reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On STRLANG reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On STRENDS reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On STRDT reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On STRBEFORE reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On STRAFTER reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On STR reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On STAR reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On SLASH reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On SHA512 reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On SHA384 reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On SHA256 reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On SHA1 reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On SERVICE reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On SEMICOLON reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On SECONDS reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On SAMPLE reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On SAMETERM reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On RPAR reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On ROUND reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On REPLACE reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On REGEX reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On RBRACE reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On RAND reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On Pname_ns reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On Pname_ln reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On PLUS reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On PIPEPIPE reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On ORDER reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On OPTIONAL reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On OFFSET reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On NOW reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On NOTEQUAL reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On NOT reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On NIL reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On MONTH reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On MINUTES reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On MINUS reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On MIN reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On MD5 reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On MAX reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On LTE reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On LT reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On LPAR reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On LIMIT reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On LCASE reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On LBRACKET reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On LBRACE reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On LANGMATCHES reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On LANG reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On Iriref_ reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On Integer_positive reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On Integer_negative reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On Integer reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On ISURI reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On ISNUMERIC reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On ISLITERAL reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On ISIRI reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On ISBLANK reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On IRI reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On IN reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On IF reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On HOURS reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On HAVING reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On GTE reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On GT reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On GROUP_CONCAT reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On GRAPH reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On FLOOR reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On FILTER reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On EXISTS reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On EQUAL reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On EOF reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On ENCODE_FOR_URI reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On Double_positive reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On Double_negative reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On Double reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On Decimal_positive reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On Decimal_negative reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On Decimal reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On DOT reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On DESC reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On DAY reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On DATATYPE reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On COUNT reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On CONTAINS reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On CONCAT reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On COMMA reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On COALESCE reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On CEIL reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On Boolean reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On Blank_node_label reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On BOUND reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On BNODE reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On BIND reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On BANG reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On AVG reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On ASC reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On AS reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On ANON reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On AMPAMP reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR
-- On ABS reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR

State 373:
numexp -> expression . STAR expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . SLASH expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . PLUS expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . MINUS expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . numeric_literal_positive [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . numeric_literal_negative [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> BANG expression . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
-- On YEAR reduce production numexp -> BANG expression
-- On Var2 reduce production numexp -> BANG expression
-- On Var1 reduce production numexp -> BANG expression
-- On VALUES reduce production numexp -> BANG expression
-- On UUID reduce production numexp -> BANG expression
-- On URI reduce production numexp -> BANG expression
-- On UCASE reduce production numexp -> BANG expression
-- On TZ reduce production numexp -> BANG expression
-- On TIMEZONE reduce production numexp -> BANG expression
-- On String_literal reduce production numexp -> BANG expression
-- On SUM reduce production numexp -> BANG expression
-- On SUBSTR reduce production numexp -> BANG expression
-- On STRUUID reduce production numexp -> BANG expression
-- On STRSTARTS reduce production numexp -> BANG expression
-- On STRLEN reduce production numexp -> BANG expression
-- On STRLANG reduce production numexp -> BANG expression
-- On STRENDS reduce production numexp -> BANG expression
-- On STRDT reduce production numexp -> BANG expression
-- On STRBEFORE reduce production numexp -> BANG expression
-- On STRAFTER reduce production numexp -> BANG expression
-- On STR reduce production numexp -> BANG expression
-- On STAR reduce production numexp -> BANG expression
-- On SLASH reduce production numexp -> BANG expression
-- On SHA512 reduce production numexp -> BANG expression
-- On SHA384 reduce production numexp -> BANG expression
-- On SHA256 reduce production numexp -> BANG expression
-- On SHA1 reduce production numexp -> BANG expression
-- On SEMICOLON reduce production numexp -> BANG expression
-- On SECONDS reduce production numexp -> BANG expression
-- On SAMPLE reduce production numexp -> BANG expression
-- On SAMETERM reduce production numexp -> BANG expression
-- On RPAR reduce production numexp -> BANG expression
-- On ROUND reduce production numexp -> BANG expression
-- On REPLACE reduce production numexp -> BANG expression
-- On REGEX reduce production numexp -> BANG expression
-- On RBRACE reduce production numexp -> BANG expression
-- On RAND reduce production numexp -> BANG expression
-- On Pname_ns reduce production numexp -> BANG expression
-- On Pname_ln reduce production numexp -> BANG expression
-- On PLUS reduce production numexp -> BANG expression
-- On PIPEPIPE reduce production numexp -> BANG expression
-- On ORDER reduce production numexp -> BANG expression
-- On OFFSET reduce production numexp -> BANG expression
-- On NOW reduce production numexp -> BANG expression
-- On NOTEQUAL reduce production numexp -> BANG expression
-- On NOT reduce production numexp -> BANG expression
-- On MONTH reduce production numexp -> BANG expression
-- On MINUTES reduce production numexp -> BANG expression
-- On MINUS reduce production numexp -> BANG expression
-- On MIN reduce production numexp -> BANG expression
-- On MD5 reduce production numexp -> BANG expression
-- On MAX reduce production numexp -> BANG expression
-- On LTE reduce production numexp -> BANG expression
-- On LT reduce production numexp -> BANG expression
-- On LPAR reduce production numexp -> BANG expression
-- On LIMIT reduce production numexp -> BANG expression
-- On LCASE reduce production numexp -> BANG expression
-- On LANGMATCHES reduce production numexp -> BANG expression
-- On LANG reduce production numexp -> BANG expression
-- On Iriref_ reduce production numexp -> BANG expression
-- On Integer_positive reduce production numexp -> BANG expression
-- On Integer_negative reduce production numexp -> BANG expression
-- On Integer reduce production numexp -> BANG expression
-- On ISURI reduce production numexp -> BANG expression
-- On ISNUMERIC reduce production numexp -> BANG expression
-- On ISLITERAL reduce production numexp -> BANG expression
-- On ISIRI reduce production numexp -> BANG expression
-- On ISBLANK reduce production numexp -> BANG expression
-- On IRI reduce production numexp -> BANG expression
-- On IN reduce production numexp -> BANG expression
-- On IF reduce production numexp -> BANG expression
-- On HOURS reduce production numexp -> BANG expression
-- On HAVING reduce production numexp -> BANG expression
-- On GTE reduce production numexp -> BANG expression
-- On GT reduce production numexp -> BANG expression
-- On GROUP_CONCAT reduce production numexp -> BANG expression
-- On FLOOR reduce production numexp -> BANG expression
-- On EXISTS reduce production numexp -> BANG expression
-- On EQUAL reduce production numexp -> BANG expression
-- On EOF reduce production numexp -> BANG expression
-- On ENCODE_FOR_URI reduce production numexp -> BANG expression
-- On Double_positive reduce production numexp -> BANG expression
-- On Double_negative reduce production numexp -> BANG expression
-- On Double reduce production numexp -> BANG expression
-- On Decimal_positive reduce production numexp -> BANG expression
-- On Decimal_negative reduce production numexp -> BANG expression
-- On Decimal reduce production numexp -> BANG expression
-- On DAY reduce production numexp -> BANG expression
-- On DATATYPE reduce production numexp -> BANG expression
-- On COUNT reduce production numexp -> BANG expression
-- On CONTAINS reduce production numexp -> BANG expression
-- On CONCAT reduce production numexp -> BANG expression
-- On COMMA reduce production numexp -> BANG expression
-- On COALESCE reduce production numexp -> BANG expression
-- On CEIL reduce production numexp -> BANG expression
-- On Boolean reduce production numexp -> BANG expression
-- On BOUND reduce production numexp -> BANG expression
-- On BNODE reduce production numexp -> BANG expression
-- On BANG reduce production numexp -> BANG expression
-- On AVG reduce production numexp -> BANG expression
-- On AS reduce production numexp -> BANG expression
-- On AMPAMP reduce production numexp -> BANG expression
-- On ABS reduce production numexp -> BANG expression
** Conflict on Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative

State 374:
built_in_call -> BNODE LPAR expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 375
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 375:
built_in_call -> BNODE LPAR expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production built_in_call -> BNODE LPAR expression RPAR
-- On Var2 reduce production built_in_call -> BNODE LPAR expression RPAR
-- On Var1 reduce production built_in_call -> BNODE LPAR expression RPAR
-- On VALUES reduce production built_in_call -> BNODE LPAR expression RPAR
-- On UUID reduce production built_in_call -> BNODE LPAR expression RPAR
-- On URI reduce production built_in_call -> BNODE LPAR expression RPAR
-- On UCASE reduce production built_in_call -> BNODE LPAR expression RPAR
-- On TZ reduce production built_in_call -> BNODE LPAR expression RPAR
-- On TIMEZONE reduce production built_in_call -> BNODE LPAR expression RPAR
-- On String_literal reduce production built_in_call -> BNODE LPAR expression RPAR
-- On SUM reduce production built_in_call -> BNODE LPAR expression RPAR
-- On SUBSTR reduce production built_in_call -> BNODE LPAR expression RPAR
-- On STRUUID reduce production built_in_call -> BNODE LPAR expression RPAR
-- On STRSTARTS reduce production built_in_call -> BNODE LPAR expression RPAR
-- On STRLEN reduce production built_in_call -> BNODE LPAR expression RPAR
-- On STRLANG reduce production built_in_call -> BNODE LPAR expression RPAR
-- On STRENDS reduce production built_in_call -> BNODE LPAR expression RPAR
-- On STRDT reduce production built_in_call -> BNODE LPAR expression RPAR
-- On STRBEFORE reduce production built_in_call -> BNODE LPAR expression RPAR
-- On STRAFTER reduce production built_in_call -> BNODE LPAR expression RPAR
-- On STR reduce production built_in_call -> BNODE LPAR expression RPAR
-- On STAR reduce production built_in_call -> BNODE LPAR expression RPAR
-- On SLASH reduce production built_in_call -> BNODE LPAR expression RPAR
-- On SHA512 reduce production built_in_call -> BNODE LPAR expression RPAR
-- On SHA384 reduce production built_in_call -> BNODE LPAR expression RPAR
-- On SHA256 reduce production built_in_call -> BNODE LPAR expression RPAR
-- On SHA1 reduce production built_in_call -> BNODE LPAR expression RPAR
-- On SERVICE reduce production built_in_call -> BNODE LPAR expression RPAR
-- On SEMICOLON reduce production built_in_call -> BNODE LPAR expression RPAR
-- On SECONDS reduce production built_in_call -> BNODE LPAR expression RPAR
-- On SAMPLE reduce production built_in_call -> BNODE LPAR expression RPAR
-- On SAMETERM reduce production built_in_call -> BNODE LPAR expression RPAR
-- On RPAR reduce production built_in_call -> BNODE LPAR expression RPAR
-- On ROUND reduce production built_in_call -> BNODE LPAR expression RPAR
-- On REPLACE reduce production built_in_call -> BNODE LPAR expression RPAR
-- On REGEX reduce production built_in_call -> BNODE LPAR expression RPAR
-- On RBRACE reduce production built_in_call -> BNODE LPAR expression RPAR
-- On RAND reduce production built_in_call -> BNODE LPAR expression RPAR
-- On Pname_ns reduce production built_in_call -> BNODE LPAR expression RPAR
-- On Pname_ln reduce production built_in_call -> BNODE LPAR expression RPAR
-- On PLUS reduce production built_in_call -> BNODE LPAR expression RPAR
-- On PIPEPIPE reduce production built_in_call -> BNODE LPAR expression RPAR
-- On ORDER reduce production built_in_call -> BNODE LPAR expression RPAR
-- On OPTIONAL reduce production built_in_call -> BNODE LPAR expression RPAR
-- On OFFSET reduce production built_in_call -> BNODE LPAR expression RPAR
-- On NOW reduce production built_in_call -> BNODE LPAR expression RPAR
-- On NOTEQUAL reduce production built_in_call -> BNODE LPAR expression RPAR
-- On NOT reduce production built_in_call -> BNODE LPAR expression RPAR
-- On NIL reduce production built_in_call -> BNODE LPAR expression RPAR
-- On MONTH reduce production built_in_call -> BNODE LPAR expression RPAR
-- On MINUTES reduce production built_in_call -> BNODE LPAR expression RPAR
-- On MINUS reduce production built_in_call -> BNODE LPAR expression RPAR
-- On MIN reduce production built_in_call -> BNODE LPAR expression RPAR
-- On MD5 reduce production built_in_call -> BNODE LPAR expression RPAR
-- On MAX reduce production built_in_call -> BNODE LPAR expression RPAR
-- On LTE reduce production built_in_call -> BNODE LPAR expression RPAR
-- On LT reduce production built_in_call -> BNODE LPAR expression RPAR
-- On LPAR reduce production built_in_call -> BNODE LPAR expression RPAR
-- On LIMIT reduce production built_in_call -> BNODE LPAR expression RPAR
-- On LCASE reduce production built_in_call -> BNODE LPAR expression RPAR
-- On LBRACKET reduce production built_in_call -> BNODE LPAR expression RPAR
-- On LBRACE reduce production built_in_call -> BNODE LPAR expression RPAR
-- On LANGMATCHES reduce production built_in_call -> BNODE LPAR expression RPAR
-- On LANG reduce production built_in_call -> BNODE LPAR expression RPAR
-- On Iriref_ reduce production built_in_call -> BNODE LPAR expression RPAR
-- On Integer_positive reduce production built_in_call -> BNODE LPAR expression RPAR
-- On Integer_negative reduce production built_in_call -> BNODE LPAR expression RPAR
-- On Integer reduce production built_in_call -> BNODE LPAR expression RPAR
-- On ISURI reduce production built_in_call -> BNODE LPAR expression RPAR
-- On ISNUMERIC reduce production built_in_call -> BNODE LPAR expression RPAR
-- On ISLITERAL reduce production built_in_call -> BNODE LPAR expression RPAR
-- On ISIRI reduce production built_in_call -> BNODE LPAR expression RPAR
-- On ISBLANK reduce production built_in_call -> BNODE LPAR expression RPAR
-- On IRI reduce production built_in_call -> BNODE LPAR expression RPAR
-- On IN reduce production built_in_call -> BNODE LPAR expression RPAR
-- On IF reduce production built_in_call -> BNODE LPAR expression RPAR
-- On HOURS reduce production built_in_call -> BNODE LPAR expression RPAR
-- On HAVING reduce production built_in_call -> BNODE LPAR expression RPAR
-- On GTE reduce production built_in_call -> BNODE LPAR expression RPAR
-- On GT reduce production built_in_call -> BNODE LPAR expression RPAR
-- On GROUP_CONCAT reduce production built_in_call -> BNODE LPAR expression RPAR
-- On GRAPH reduce production built_in_call -> BNODE LPAR expression RPAR
-- On FLOOR reduce production built_in_call -> BNODE LPAR expression RPAR
-- On FILTER reduce production built_in_call -> BNODE LPAR expression RPAR
-- On EXISTS reduce production built_in_call -> BNODE LPAR expression RPAR
-- On EQUAL reduce production built_in_call -> BNODE LPAR expression RPAR
-- On EOF reduce production built_in_call -> BNODE LPAR expression RPAR
-- On ENCODE_FOR_URI reduce production built_in_call -> BNODE LPAR expression RPAR
-- On Double_positive reduce production built_in_call -> BNODE LPAR expression RPAR
-- On Double_negative reduce production built_in_call -> BNODE LPAR expression RPAR
-- On Double reduce production built_in_call -> BNODE LPAR expression RPAR
-- On Decimal_positive reduce production built_in_call -> BNODE LPAR expression RPAR
-- On Decimal_negative reduce production built_in_call -> BNODE LPAR expression RPAR
-- On Decimal reduce production built_in_call -> BNODE LPAR expression RPAR
-- On DOT reduce production built_in_call -> BNODE LPAR expression RPAR
-- On DESC reduce production built_in_call -> BNODE LPAR expression RPAR
-- On DAY reduce production built_in_call -> BNODE LPAR expression RPAR
-- On DATATYPE reduce production built_in_call -> BNODE LPAR expression RPAR
-- On COUNT reduce production built_in_call -> BNODE LPAR expression RPAR
-- On CONTAINS reduce production built_in_call -> BNODE LPAR expression RPAR
-- On CONCAT reduce production built_in_call -> BNODE LPAR expression RPAR
-- On COMMA reduce production built_in_call -> BNODE LPAR expression RPAR
-- On COALESCE reduce production built_in_call -> BNODE LPAR expression RPAR
-- On CEIL reduce production built_in_call -> BNODE LPAR expression RPAR
-- On Boolean reduce production built_in_call -> BNODE LPAR expression RPAR
-- On Blank_node_label reduce production built_in_call -> BNODE LPAR expression RPAR
-- On BOUND reduce production built_in_call -> BNODE LPAR expression RPAR
-- On BNODE reduce production built_in_call -> BNODE LPAR expression RPAR
-- On BIND reduce production built_in_call -> BNODE LPAR expression RPAR
-- On BANG reduce production built_in_call -> BNODE LPAR expression RPAR
-- On AVG reduce production built_in_call -> BNODE LPAR expression RPAR
-- On ASC reduce production built_in_call -> BNODE LPAR expression RPAR
-- On AS reduce production built_in_call -> BNODE LPAR expression RPAR
-- On ANON reduce production built_in_call -> BNODE LPAR expression RPAR
-- On AMPAMP reduce production built_in_call -> BNODE LPAR expression RPAR
-- On ABS reduce production built_in_call -> BNODE LPAR expression RPAR

State 376:
built_in_call -> CEIL LPAR expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 377
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 377:
built_in_call -> CEIL LPAR expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production built_in_call -> CEIL LPAR expression RPAR
-- On Var2 reduce production built_in_call -> CEIL LPAR expression RPAR
-- On Var1 reduce production built_in_call -> CEIL LPAR expression RPAR
-- On VALUES reduce production built_in_call -> CEIL LPAR expression RPAR
-- On UUID reduce production built_in_call -> CEIL LPAR expression RPAR
-- On URI reduce production built_in_call -> CEIL LPAR expression RPAR
-- On UCASE reduce production built_in_call -> CEIL LPAR expression RPAR
-- On TZ reduce production built_in_call -> CEIL LPAR expression RPAR
-- On TIMEZONE reduce production built_in_call -> CEIL LPAR expression RPAR
-- On String_literal reduce production built_in_call -> CEIL LPAR expression RPAR
-- On SUM reduce production built_in_call -> CEIL LPAR expression RPAR
-- On SUBSTR reduce production built_in_call -> CEIL LPAR expression RPAR
-- On STRUUID reduce production built_in_call -> CEIL LPAR expression RPAR
-- On STRSTARTS reduce production built_in_call -> CEIL LPAR expression RPAR
-- On STRLEN reduce production built_in_call -> CEIL LPAR expression RPAR
-- On STRLANG reduce production built_in_call -> CEIL LPAR expression RPAR
-- On STRENDS reduce production built_in_call -> CEIL LPAR expression RPAR
-- On STRDT reduce production built_in_call -> CEIL LPAR expression RPAR
-- On STRBEFORE reduce production built_in_call -> CEIL LPAR expression RPAR
-- On STRAFTER reduce production built_in_call -> CEIL LPAR expression RPAR
-- On STR reduce production built_in_call -> CEIL LPAR expression RPAR
-- On STAR reduce production built_in_call -> CEIL LPAR expression RPAR
-- On SLASH reduce production built_in_call -> CEIL LPAR expression RPAR
-- On SHA512 reduce production built_in_call -> CEIL LPAR expression RPAR
-- On SHA384 reduce production built_in_call -> CEIL LPAR expression RPAR
-- On SHA256 reduce production built_in_call -> CEIL LPAR expression RPAR
-- On SHA1 reduce production built_in_call -> CEIL LPAR expression RPAR
-- On SERVICE reduce production built_in_call -> CEIL LPAR expression RPAR
-- On SEMICOLON reduce production built_in_call -> CEIL LPAR expression RPAR
-- On SECONDS reduce production built_in_call -> CEIL LPAR expression RPAR
-- On SAMPLE reduce production built_in_call -> CEIL LPAR expression RPAR
-- On SAMETERM reduce production built_in_call -> CEIL LPAR expression RPAR
-- On RPAR reduce production built_in_call -> CEIL LPAR expression RPAR
-- On ROUND reduce production built_in_call -> CEIL LPAR expression RPAR
-- On REPLACE reduce production built_in_call -> CEIL LPAR expression RPAR
-- On REGEX reduce production built_in_call -> CEIL LPAR expression RPAR
-- On RBRACE reduce production built_in_call -> CEIL LPAR expression RPAR
-- On RAND reduce production built_in_call -> CEIL LPAR expression RPAR
-- On Pname_ns reduce production built_in_call -> CEIL LPAR expression RPAR
-- On Pname_ln reduce production built_in_call -> CEIL LPAR expression RPAR
-- On PLUS reduce production built_in_call -> CEIL LPAR expression RPAR
-- On PIPEPIPE reduce production built_in_call -> CEIL LPAR expression RPAR
-- On ORDER reduce production built_in_call -> CEIL LPAR expression RPAR
-- On OPTIONAL reduce production built_in_call -> CEIL LPAR expression RPAR
-- On OFFSET reduce production built_in_call -> CEIL LPAR expression RPAR
-- On NOW reduce production built_in_call -> CEIL LPAR expression RPAR
-- On NOTEQUAL reduce production built_in_call -> CEIL LPAR expression RPAR
-- On NOT reduce production built_in_call -> CEIL LPAR expression RPAR
-- On NIL reduce production built_in_call -> CEIL LPAR expression RPAR
-- On MONTH reduce production built_in_call -> CEIL LPAR expression RPAR
-- On MINUTES reduce production built_in_call -> CEIL LPAR expression RPAR
-- On MINUS reduce production built_in_call -> CEIL LPAR expression RPAR
-- On MIN reduce production built_in_call -> CEIL LPAR expression RPAR
-- On MD5 reduce production built_in_call -> CEIL LPAR expression RPAR
-- On MAX reduce production built_in_call -> CEIL LPAR expression RPAR
-- On LTE reduce production built_in_call -> CEIL LPAR expression RPAR
-- On LT reduce production built_in_call -> CEIL LPAR expression RPAR
-- On LPAR reduce production built_in_call -> CEIL LPAR expression RPAR
-- On LIMIT reduce production built_in_call -> CEIL LPAR expression RPAR
-- On LCASE reduce production built_in_call -> CEIL LPAR expression RPAR
-- On LBRACKET reduce production built_in_call -> CEIL LPAR expression RPAR
-- On LBRACE reduce production built_in_call -> CEIL LPAR expression RPAR
-- On LANGMATCHES reduce production built_in_call -> CEIL LPAR expression RPAR
-- On LANG reduce production built_in_call -> CEIL LPAR expression RPAR
-- On Iriref_ reduce production built_in_call -> CEIL LPAR expression RPAR
-- On Integer_positive reduce production built_in_call -> CEIL LPAR expression RPAR
-- On Integer_negative reduce production built_in_call -> CEIL LPAR expression RPAR
-- On Integer reduce production built_in_call -> CEIL LPAR expression RPAR
-- On ISURI reduce production built_in_call -> CEIL LPAR expression RPAR
-- On ISNUMERIC reduce production built_in_call -> CEIL LPAR expression RPAR
-- On ISLITERAL reduce production built_in_call -> CEIL LPAR expression RPAR
-- On ISIRI reduce production built_in_call -> CEIL LPAR expression RPAR
-- On ISBLANK reduce production built_in_call -> CEIL LPAR expression RPAR
-- On IRI reduce production built_in_call -> CEIL LPAR expression RPAR
-- On IN reduce production built_in_call -> CEIL LPAR expression RPAR
-- On IF reduce production built_in_call -> CEIL LPAR expression RPAR
-- On HOURS reduce production built_in_call -> CEIL LPAR expression RPAR
-- On HAVING reduce production built_in_call -> CEIL LPAR expression RPAR
-- On GTE reduce production built_in_call -> CEIL LPAR expression RPAR
-- On GT reduce production built_in_call -> CEIL LPAR expression RPAR
-- On GROUP_CONCAT reduce production built_in_call -> CEIL LPAR expression RPAR
-- On GRAPH reduce production built_in_call -> CEIL LPAR expression RPAR
-- On FLOOR reduce production built_in_call -> CEIL LPAR expression RPAR
-- On FILTER reduce production built_in_call -> CEIL LPAR expression RPAR
-- On EXISTS reduce production built_in_call -> CEIL LPAR expression RPAR
-- On EQUAL reduce production built_in_call -> CEIL LPAR expression RPAR
-- On EOF reduce production built_in_call -> CEIL LPAR expression RPAR
-- On ENCODE_FOR_URI reduce production built_in_call -> CEIL LPAR expression RPAR
-- On Double_positive reduce production built_in_call -> CEIL LPAR expression RPAR
-- On Double_negative reduce production built_in_call -> CEIL LPAR expression RPAR
-- On Double reduce production built_in_call -> CEIL LPAR expression RPAR
-- On Decimal_positive reduce production built_in_call -> CEIL LPAR expression RPAR
-- On Decimal_negative reduce production built_in_call -> CEIL LPAR expression RPAR
-- On Decimal reduce production built_in_call -> CEIL LPAR expression RPAR
-- On DOT reduce production built_in_call -> CEIL LPAR expression RPAR
-- On DESC reduce production built_in_call -> CEIL LPAR expression RPAR
-- On DAY reduce production built_in_call -> CEIL LPAR expression RPAR
-- On DATATYPE reduce production built_in_call -> CEIL LPAR expression RPAR
-- On COUNT reduce production built_in_call -> CEIL LPAR expression RPAR
-- On CONTAINS reduce production built_in_call -> CEIL LPAR expression RPAR
-- On CONCAT reduce production built_in_call -> CEIL LPAR expression RPAR
-- On COMMA reduce production built_in_call -> CEIL LPAR expression RPAR
-- On COALESCE reduce production built_in_call -> CEIL LPAR expression RPAR
-- On CEIL reduce production built_in_call -> CEIL LPAR expression RPAR
-- On Boolean reduce production built_in_call -> CEIL LPAR expression RPAR
-- On Blank_node_label reduce production built_in_call -> CEIL LPAR expression RPAR
-- On BOUND reduce production built_in_call -> CEIL LPAR expression RPAR
-- On BNODE reduce production built_in_call -> CEIL LPAR expression RPAR
-- On BIND reduce production built_in_call -> CEIL LPAR expression RPAR
-- On BANG reduce production built_in_call -> CEIL LPAR expression RPAR
-- On AVG reduce production built_in_call -> CEIL LPAR expression RPAR
-- On ASC reduce production built_in_call -> CEIL LPAR expression RPAR
-- On AS reduce production built_in_call -> CEIL LPAR expression RPAR
-- On ANON reduce production built_in_call -> CEIL LPAR expression RPAR
-- On AMPAMP reduce production built_in_call -> CEIL LPAR expression RPAR
-- On ABS reduce production built_in_call -> CEIL LPAR expression RPAR

State 378:
expression_list -> LPAR separated_nonempty_list(COMMA,expression) . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On RPAR shift to state 379

State 379:
expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On Var2 reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On Var1 reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On VALUES reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On UUID reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On URI reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On UCASE reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On TZ reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On TIMEZONE reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On String_literal reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On SUM reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On SUBSTR reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On STRUUID reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On STRSTARTS reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On STRLEN reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On STRLANG reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On STRENDS reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On STRDT reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On STRBEFORE reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On STRAFTER reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On STR reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On STAR reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On SLASH reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On SHA512 reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On SHA384 reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On SHA256 reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On SHA1 reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On SERVICE reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On SEMICOLON reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On SECONDS reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On SAMPLE reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On SAMETERM reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On RPAR reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On ROUND reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On REPLACE reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On REGEX reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On RBRACE reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On RAND reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On Pname_ns reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On Pname_ln reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On PLUS reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On PIPEPIPE reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On ORDER reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On OPTIONAL reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On OFFSET reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On NOW reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On NOTEQUAL reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On NOT reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On NIL reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On MONTH reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On MINUTES reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On MINUS reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On MIN reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On MD5 reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On MAX reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On LTE reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On LT reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On LPAR reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On LIMIT reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On LCASE reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On LBRACKET reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On LBRACE reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On LANGMATCHES reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On LANG reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On Iriref_ reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On Integer_positive reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On Integer_negative reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On Integer reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On ISURI reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On ISNUMERIC reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On ISLITERAL reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On ISIRI reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On ISBLANK reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On IRI reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On IN reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On IF reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On HOURS reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On HAVING reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On GTE reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On GT reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On GROUP_CONCAT reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On GRAPH reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On FLOOR reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On FILTER reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On EXISTS reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On EQUAL reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On EOF reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On ENCODE_FOR_URI reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On Double_positive reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On Double_negative reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On Double reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On Decimal_positive reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On Decimal_negative reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On Decimal reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On DOT reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On DESC reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On DAY reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On DATATYPE reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On COUNT reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On CONTAINS reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On CONCAT reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On COMMA reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On COALESCE reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On CEIL reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On Boolean reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On Blank_node_label reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On BOUND reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On BNODE reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On BIND reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On BANG reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On AVG reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On ASC reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On AS reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On ANON reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On AMPAMP reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR
-- On ABS reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR

State 380:
built_in_call -> CONCAT expression_list . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production built_in_call -> CONCAT expression_list
-- On Var2 reduce production built_in_call -> CONCAT expression_list
-- On Var1 reduce production built_in_call -> CONCAT expression_list
-- On VALUES reduce production built_in_call -> CONCAT expression_list
-- On UUID reduce production built_in_call -> CONCAT expression_list
-- On URI reduce production built_in_call -> CONCAT expression_list
-- On UCASE reduce production built_in_call -> CONCAT expression_list
-- On TZ reduce production built_in_call -> CONCAT expression_list
-- On TIMEZONE reduce production built_in_call -> CONCAT expression_list
-- On String_literal reduce production built_in_call -> CONCAT expression_list
-- On SUM reduce production built_in_call -> CONCAT expression_list
-- On SUBSTR reduce production built_in_call -> CONCAT expression_list
-- On STRUUID reduce production built_in_call -> CONCAT expression_list
-- On STRSTARTS reduce production built_in_call -> CONCAT expression_list
-- On STRLEN reduce production built_in_call -> CONCAT expression_list
-- On STRLANG reduce production built_in_call -> CONCAT expression_list
-- On STRENDS reduce production built_in_call -> CONCAT expression_list
-- On STRDT reduce production built_in_call -> CONCAT expression_list
-- On STRBEFORE reduce production built_in_call -> CONCAT expression_list
-- On STRAFTER reduce production built_in_call -> CONCAT expression_list
-- On STR reduce production built_in_call -> CONCAT expression_list
-- On STAR reduce production built_in_call -> CONCAT expression_list
-- On SLASH reduce production built_in_call -> CONCAT expression_list
-- On SHA512 reduce production built_in_call -> CONCAT expression_list
-- On SHA384 reduce production built_in_call -> CONCAT expression_list
-- On SHA256 reduce production built_in_call -> CONCAT expression_list
-- On SHA1 reduce production built_in_call -> CONCAT expression_list
-- On SERVICE reduce production built_in_call -> CONCAT expression_list
-- On SEMICOLON reduce production built_in_call -> CONCAT expression_list
-- On SECONDS reduce production built_in_call -> CONCAT expression_list
-- On SAMPLE reduce production built_in_call -> CONCAT expression_list
-- On SAMETERM reduce production built_in_call -> CONCAT expression_list
-- On RPAR reduce production built_in_call -> CONCAT expression_list
-- On ROUND reduce production built_in_call -> CONCAT expression_list
-- On REPLACE reduce production built_in_call -> CONCAT expression_list
-- On REGEX reduce production built_in_call -> CONCAT expression_list
-- On RBRACE reduce production built_in_call -> CONCAT expression_list
-- On RAND reduce production built_in_call -> CONCAT expression_list
-- On Pname_ns reduce production built_in_call -> CONCAT expression_list
-- On Pname_ln reduce production built_in_call -> CONCAT expression_list
-- On PLUS reduce production built_in_call -> CONCAT expression_list
-- On PIPEPIPE reduce production built_in_call -> CONCAT expression_list
-- On ORDER reduce production built_in_call -> CONCAT expression_list
-- On OPTIONAL reduce production built_in_call -> CONCAT expression_list
-- On OFFSET reduce production built_in_call -> CONCAT expression_list
-- On NOW reduce production built_in_call -> CONCAT expression_list
-- On NOTEQUAL reduce production built_in_call -> CONCAT expression_list
-- On NOT reduce production built_in_call -> CONCAT expression_list
-- On NIL reduce production built_in_call -> CONCAT expression_list
-- On MONTH reduce production built_in_call -> CONCAT expression_list
-- On MINUTES reduce production built_in_call -> CONCAT expression_list
-- On MINUS reduce production built_in_call -> CONCAT expression_list
-- On MIN reduce production built_in_call -> CONCAT expression_list
-- On MD5 reduce production built_in_call -> CONCAT expression_list
-- On MAX reduce production built_in_call -> CONCAT expression_list
-- On LTE reduce production built_in_call -> CONCAT expression_list
-- On LT reduce production built_in_call -> CONCAT expression_list
-- On LPAR reduce production built_in_call -> CONCAT expression_list
-- On LIMIT reduce production built_in_call -> CONCAT expression_list
-- On LCASE reduce production built_in_call -> CONCAT expression_list
-- On LBRACKET reduce production built_in_call -> CONCAT expression_list
-- On LBRACE reduce production built_in_call -> CONCAT expression_list
-- On LANGMATCHES reduce production built_in_call -> CONCAT expression_list
-- On LANG reduce production built_in_call -> CONCAT expression_list
-- On Iriref_ reduce production built_in_call -> CONCAT expression_list
-- On Integer_positive reduce production built_in_call -> CONCAT expression_list
-- On Integer_negative reduce production built_in_call -> CONCAT expression_list
-- On Integer reduce production built_in_call -> CONCAT expression_list
-- On ISURI reduce production built_in_call -> CONCAT expression_list
-- On ISNUMERIC reduce production built_in_call -> CONCAT expression_list
-- On ISLITERAL reduce production built_in_call -> CONCAT expression_list
-- On ISIRI reduce production built_in_call -> CONCAT expression_list
-- On ISBLANK reduce production built_in_call -> CONCAT expression_list
-- On IRI reduce production built_in_call -> CONCAT expression_list
-- On IN reduce production built_in_call -> CONCAT expression_list
-- On IF reduce production built_in_call -> CONCAT expression_list
-- On HOURS reduce production built_in_call -> CONCAT expression_list
-- On HAVING reduce production built_in_call -> CONCAT expression_list
-- On GTE reduce production built_in_call -> CONCAT expression_list
-- On GT reduce production built_in_call -> CONCAT expression_list
-- On GROUP_CONCAT reduce production built_in_call -> CONCAT expression_list
-- On GRAPH reduce production built_in_call -> CONCAT expression_list
-- On FLOOR reduce production built_in_call -> CONCAT expression_list
-- On FILTER reduce production built_in_call -> CONCAT expression_list
-- On EXISTS reduce production built_in_call -> CONCAT expression_list
-- On EQUAL reduce production built_in_call -> CONCAT expression_list
-- On EOF reduce production built_in_call -> CONCAT expression_list
-- On ENCODE_FOR_URI reduce production built_in_call -> CONCAT expression_list
-- On Double_positive reduce production built_in_call -> CONCAT expression_list
-- On Double_negative reduce production built_in_call -> CONCAT expression_list
-- On Double reduce production built_in_call -> CONCAT expression_list
-- On Decimal_positive reduce production built_in_call -> CONCAT expression_list
-- On Decimal_negative reduce production built_in_call -> CONCAT expression_list
-- On Decimal reduce production built_in_call -> CONCAT expression_list
-- On DOT reduce production built_in_call -> CONCAT expression_list
-- On DESC reduce production built_in_call -> CONCAT expression_list
-- On DAY reduce production built_in_call -> CONCAT expression_list
-- On DATATYPE reduce production built_in_call -> CONCAT expression_list
-- On COUNT reduce production built_in_call -> CONCAT expression_list
-- On CONTAINS reduce production built_in_call -> CONCAT expression_list
-- On CONCAT reduce production built_in_call -> CONCAT expression_list
-- On COMMA reduce production built_in_call -> CONCAT expression_list
-- On COALESCE reduce production built_in_call -> CONCAT expression_list
-- On CEIL reduce production built_in_call -> CONCAT expression_list
-- On Boolean reduce production built_in_call -> CONCAT expression_list
-- On Blank_node_label reduce production built_in_call -> CONCAT expression_list
-- On BOUND reduce production built_in_call -> CONCAT expression_list
-- On BNODE reduce production built_in_call -> CONCAT expression_list
-- On BIND reduce production built_in_call -> CONCAT expression_list
-- On BANG reduce production built_in_call -> CONCAT expression_list
-- On AVG reduce production built_in_call -> CONCAT expression_list
-- On ASC reduce production built_in_call -> CONCAT expression_list
-- On AS reduce production built_in_call -> CONCAT expression_list
-- On ANON reduce production built_in_call -> CONCAT expression_list
-- On AMPAMP reduce production built_in_call -> CONCAT expression_list
-- On ABS reduce production built_in_call -> CONCAT expression_list

State 381:
built_in_call -> CONTAINS LPAR expression . COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On COMMA shift to state 382
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 382:
built_in_call -> CONTAINS LPAR expression COMMA . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 383
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 383:
built_in_call -> CONTAINS LPAR expression COMMA expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 384
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 384:
built_in_call -> CONTAINS LPAR expression COMMA expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On Var2 reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On Var1 reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On VALUES reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On UUID reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On URI reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On UCASE reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On TZ reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On TIMEZONE reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On String_literal reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On SUM reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On SUBSTR reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On STRUUID reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On STRSTARTS reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On STRLEN reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On STRLANG reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On STRENDS reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On STRDT reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On STRBEFORE reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On STRAFTER reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On STR reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On STAR reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On SLASH reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On SHA512 reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On SHA384 reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On SHA256 reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On SHA1 reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On SERVICE reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On SEMICOLON reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On SECONDS reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On SAMPLE reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On SAMETERM reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On RPAR reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On ROUND reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On REPLACE reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On REGEX reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On RBRACE reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On RAND reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On Pname_ns reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On Pname_ln reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On PLUS reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On PIPEPIPE reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On ORDER reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On OPTIONAL reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On OFFSET reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On NOW reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On NOTEQUAL reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On NOT reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On NIL reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On MONTH reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On MINUTES reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On MINUS reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On MIN reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On MD5 reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On MAX reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On LTE reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On LT reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On LPAR reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On LIMIT reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On LCASE reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On LBRACKET reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On LBRACE reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On LANGMATCHES reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On LANG reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On Iriref_ reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On Integer_positive reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On Integer_negative reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On Integer reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On ISURI reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On ISNUMERIC reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On ISLITERAL reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On ISIRI reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On ISBLANK reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On IRI reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On IN reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On IF reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On HOURS reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On HAVING reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On GTE reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On GT reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On GROUP_CONCAT reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On GRAPH reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On FLOOR reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On FILTER reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On EXISTS reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On EQUAL reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On EOF reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On ENCODE_FOR_URI reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On Double_positive reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On Double_negative reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On Double reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On Decimal_positive reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On Decimal_negative reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On Decimal reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On DOT reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On DESC reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On DAY reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On DATATYPE reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On COUNT reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On CONTAINS reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On CONCAT reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On COMMA reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On COALESCE reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On CEIL reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On Boolean reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On Blank_node_label reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On BOUND reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On BNODE reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On BIND reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On BANG reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On AVG reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On ASC reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On AS reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On ANON reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On AMPAMP reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR
-- On ABS reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR

State 385:
aggregate -> COUNT LPAR option(DISTINCT) expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 386
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 386:
aggregate -> COUNT LPAR option(DISTINCT) expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On Var2 reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On Var1 reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On VALUES reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On UUID reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On URI reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On UCASE reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On TZ reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On TIMEZONE reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On String_literal reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On SUM reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On SUBSTR reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On STRUUID reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On STRSTARTS reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On STRLEN reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On STRLANG reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On STRENDS reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On STRDT reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On STRBEFORE reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On STRAFTER reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On STR reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On STAR reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On SLASH reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On SHA512 reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On SHA384 reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On SHA256 reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On SHA1 reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On SERVICE reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On SEMICOLON reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On SECONDS reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On SAMPLE reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On SAMETERM reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On RPAR reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On ROUND reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On REPLACE reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On REGEX reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On RBRACE reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On RAND reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On Pname_ns reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On Pname_ln reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On PLUS reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On PIPEPIPE reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On ORDER reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On OPTIONAL reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On OFFSET reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On NOW reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On NOTEQUAL reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On NOT reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On NIL reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On MONTH reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On MINUTES reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On MINUS reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On MIN reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On MD5 reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On MAX reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On LTE reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On LT reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On LPAR reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On LIMIT reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On LCASE reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On LBRACKET reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On LBRACE reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On LANGMATCHES reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On LANG reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On Iriref_ reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On Integer_positive reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On Integer_negative reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On Integer reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On ISURI reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On ISNUMERIC reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On ISLITERAL reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On ISIRI reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On ISBLANK reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On IRI reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On IN reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On IF reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On HOURS reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On HAVING reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On GTE reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On GT reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On GROUP_CONCAT reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On GRAPH reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On FLOOR reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On FILTER reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On EXISTS reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On EQUAL reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On EOF reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On ENCODE_FOR_URI reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On Double_positive reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On Double_negative reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On Double reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On Decimal_positive reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On Decimal_negative reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On Decimal reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On DOT reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On DESC reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On DAY reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On DATATYPE reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On COUNT reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On CONTAINS reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On CONCAT reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On COMMA reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On COALESCE reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On CEIL reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On Boolean reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On Blank_node_label reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On BOUND reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On BNODE reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On BIND reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On BANG reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On AVG reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On ASC reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On AS reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On ANON reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On AMPAMP reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR
-- On ABS reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR

State 387:
built_in_call -> DATATYPE LPAR expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 388
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 388:
built_in_call -> DATATYPE LPAR expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On Var2 reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On Var1 reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On VALUES reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On UUID reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On URI reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On UCASE reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On TZ reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On TIMEZONE reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On String_literal reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On SUM reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On SUBSTR reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On STRUUID reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On STRSTARTS reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On STRLEN reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On STRLANG reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On STRENDS reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On STRDT reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On STRBEFORE reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On STRAFTER reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On STR reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On STAR reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On SLASH reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On SHA512 reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On SHA384 reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On SHA256 reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On SHA1 reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On SERVICE reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On SEMICOLON reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On SECONDS reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On SAMPLE reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On SAMETERM reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On RPAR reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On ROUND reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On REPLACE reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On REGEX reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On RBRACE reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On RAND reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On Pname_ns reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On Pname_ln reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On PLUS reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On PIPEPIPE reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On ORDER reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On OPTIONAL reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On OFFSET reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On NOW reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On NOTEQUAL reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On NOT reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On NIL reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On MONTH reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On MINUTES reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On MINUS reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On MIN reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On MD5 reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On MAX reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On LTE reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On LT reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On LPAR reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On LIMIT reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On LCASE reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On LBRACKET reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On LBRACE reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On LANGMATCHES reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On LANG reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On Iriref_ reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On Integer_positive reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On Integer_negative reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On Integer reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On ISURI reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On ISNUMERIC reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On ISLITERAL reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On ISIRI reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On ISBLANK reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On IRI reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On IN reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On IF reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On HOURS reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On HAVING reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On GTE reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On GT reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On GROUP_CONCAT reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On GRAPH reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On FLOOR reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On FILTER reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On EXISTS reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On EQUAL reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On EOF reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On ENCODE_FOR_URI reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On Double_positive reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On Double_negative reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On Double reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On Decimal_positive reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On Decimal_negative reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On Decimal reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On DOT reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On DESC reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On DAY reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On DATATYPE reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On COUNT reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On CONTAINS reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On CONCAT reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On COMMA reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On COALESCE reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On CEIL reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On Boolean reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On Blank_node_label reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On BOUND reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On BNODE reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On BIND reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On BANG reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On AVG reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On ASC reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On AS reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On ANON reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On AMPAMP reduce production built_in_call -> DATATYPE LPAR expression RPAR
-- On ABS reduce production built_in_call -> DATATYPE LPAR expression RPAR

State 389:
built_in_call -> DAY LPAR expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 390
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 390:
built_in_call -> DAY LPAR expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production built_in_call -> DAY LPAR expression RPAR
-- On Var2 reduce production built_in_call -> DAY LPAR expression RPAR
-- On Var1 reduce production built_in_call -> DAY LPAR expression RPAR
-- On VALUES reduce production built_in_call -> DAY LPAR expression RPAR
-- On UUID reduce production built_in_call -> DAY LPAR expression RPAR
-- On URI reduce production built_in_call -> DAY LPAR expression RPAR
-- On UCASE reduce production built_in_call -> DAY LPAR expression RPAR
-- On TZ reduce production built_in_call -> DAY LPAR expression RPAR
-- On TIMEZONE reduce production built_in_call -> DAY LPAR expression RPAR
-- On String_literal reduce production built_in_call -> DAY LPAR expression RPAR
-- On SUM reduce production built_in_call -> DAY LPAR expression RPAR
-- On SUBSTR reduce production built_in_call -> DAY LPAR expression RPAR
-- On STRUUID reduce production built_in_call -> DAY LPAR expression RPAR
-- On STRSTARTS reduce production built_in_call -> DAY LPAR expression RPAR
-- On STRLEN reduce production built_in_call -> DAY LPAR expression RPAR
-- On STRLANG reduce production built_in_call -> DAY LPAR expression RPAR
-- On STRENDS reduce production built_in_call -> DAY LPAR expression RPAR
-- On STRDT reduce production built_in_call -> DAY LPAR expression RPAR
-- On STRBEFORE reduce production built_in_call -> DAY LPAR expression RPAR
-- On STRAFTER reduce production built_in_call -> DAY LPAR expression RPAR
-- On STR reduce production built_in_call -> DAY LPAR expression RPAR
-- On STAR reduce production built_in_call -> DAY LPAR expression RPAR
-- On SLASH reduce production built_in_call -> DAY LPAR expression RPAR
-- On SHA512 reduce production built_in_call -> DAY LPAR expression RPAR
-- On SHA384 reduce production built_in_call -> DAY LPAR expression RPAR
-- On SHA256 reduce production built_in_call -> DAY LPAR expression RPAR
-- On SHA1 reduce production built_in_call -> DAY LPAR expression RPAR
-- On SERVICE reduce production built_in_call -> DAY LPAR expression RPAR
-- On SEMICOLON reduce production built_in_call -> DAY LPAR expression RPAR
-- On SECONDS reduce production built_in_call -> DAY LPAR expression RPAR
-- On SAMPLE reduce production built_in_call -> DAY LPAR expression RPAR
-- On SAMETERM reduce production built_in_call -> DAY LPAR expression RPAR
-- On RPAR reduce production built_in_call -> DAY LPAR expression RPAR
-- On ROUND reduce production built_in_call -> DAY LPAR expression RPAR
-- On REPLACE reduce production built_in_call -> DAY LPAR expression RPAR
-- On REGEX reduce production built_in_call -> DAY LPAR expression RPAR
-- On RBRACE reduce production built_in_call -> DAY LPAR expression RPAR
-- On RAND reduce production built_in_call -> DAY LPAR expression RPAR
-- On Pname_ns reduce production built_in_call -> DAY LPAR expression RPAR
-- On Pname_ln reduce production built_in_call -> DAY LPAR expression RPAR
-- On PLUS reduce production built_in_call -> DAY LPAR expression RPAR
-- On PIPEPIPE reduce production built_in_call -> DAY LPAR expression RPAR
-- On ORDER reduce production built_in_call -> DAY LPAR expression RPAR
-- On OPTIONAL reduce production built_in_call -> DAY LPAR expression RPAR
-- On OFFSET reduce production built_in_call -> DAY LPAR expression RPAR
-- On NOW reduce production built_in_call -> DAY LPAR expression RPAR
-- On NOTEQUAL reduce production built_in_call -> DAY LPAR expression RPAR
-- On NOT reduce production built_in_call -> DAY LPAR expression RPAR
-- On NIL reduce production built_in_call -> DAY LPAR expression RPAR
-- On MONTH reduce production built_in_call -> DAY LPAR expression RPAR
-- On MINUTES reduce production built_in_call -> DAY LPAR expression RPAR
-- On MINUS reduce production built_in_call -> DAY LPAR expression RPAR
-- On MIN reduce production built_in_call -> DAY LPAR expression RPAR
-- On MD5 reduce production built_in_call -> DAY LPAR expression RPAR
-- On MAX reduce production built_in_call -> DAY LPAR expression RPAR
-- On LTE reduce production built_in_call -> DAY LPAR expression RPAR
-- On LT reduce production built_in_call -> DAY LPAR expression RPAR
-- On LPAR reduce production built_in_call -> DAY LPAR expression RPAR
-- On LIMIT reduce production built_in_call -> DAY LPAR expression RPAR
-- On LCASE reduce production built_in_call -> DAY LPAR expression RPAR
-- On LBRACKET reduce production built_in_call -> DAY LPAR expression RPAR
-- On LBRACE reduce production built_in_call -> DAY LPAR expression RPAR
-- On LANGMATCHES reduce production built_in_call -> DAY LPAR expression RPAR
-- On LANG reduce production built_in_call -> DAY LPAR expression RPAR
-- On Iriref_ reduce production built_in_call -> DAY LPAR expression RPAR
-- On Integer_positive reduce production built_in_call -> DAY LPAR expression RPAR
-- On Integer_negative reduce production built_in_call -> DAY LPAR expression RPAR
-- On Integer reduce production built_in_call -> DAY LPAR expression RPAR
-- On ISURI reduce production built_in_call -> DAY LPAR expression RPAR
-- On ISNUMERIC reduce production built_in_call -> DAY LPAR expression RPAR
-- On ISLITERAL reduce production built_in_call -> DAY LPAR expression RPAR
-- On ISIRI reduce production built_in_call -> DAY LPAR expression RPAR
-- On ISBLANK reduce production built_in_call -> DAY LPAR expression RPAR
-- On IRI reduce production built_in_call -> DAY LPAR expression RPAR
-- On IN reduce production built_in_call -> DAY LPAR expression RPAR
-- On IF reduce production built_in_call -> DAY LPAR expression RPAR
-- On HOURS reduce production built_in_call -> DAY LPAR expression RPAR
-- On HAVING reduce production built_in_call -> DAY LPAR expression RPAR
-- On GTE reduce production built_in_call -> DAY LPAR expression RPAR
-- On GT reduce production built_in_call -> DAY LPAR expression RPAR
-- On GROUP_CONCAT reduce production built_in_call -> DAY LPAR expression RPAR
-- On GRAPH reduce production built_in_call -> DAY LPAR expression RPAR
-- On FLOOR reduce production built_in_call -> DAY LPAR expression RPAR
-- On FILTER reduce production built_in_call -> DAY LPAR expression RPAR
-- On EXISTS reduce production built_in_call -> DAY LPAR expression RPAR
-- On EQUAL reduce production built_in_call -> DAY LPAR expression RPAR
-- On EOF reduce production built_in_call -> DAY LPAR expression RPAR
-- On ENCODE_FOR_URI reduce production built_in_call -> DAY LPAR expression RPAR
-- On Double_positive reduce production built_in_call -> DAY LPAR expression RPAR
-- On Double_negative reduce production built_in_call -> DAY LPAR expression RPAR
-- On Double reduce production built_in_call -> DAY LPAR expression RPAR
-- On Decimal_positive reduce production built_in_call -> DAY LPAR expression RPAR
-- On Decimal_negative reduce production built_in_call -> DAY LPAR expression RPAR
-- On Decimal reduce production built_in_call -> DAY LPAR expression RPAR
-- On DOT reduce production built_in_call -> DAY LPAR expression RPAR
-- On DESC reduce production built_in_call -> DAY LPAR expression RPAR
-- On DAY reduce production built_in_call -> DAY LPAR expression RPAR
-- On DATATYPE reduce production built_in_call -> DAY LPAR expression RPAR
-- On COUNT reduce production built_in_call -> DAY LPAR expression RPAR
-- On CONTAINS reduce production built_in_call -> DAY LPAR expression RPAR
-- On CONCAT reduce production built_in_call -> DAY LPAR expression RPAR
-- On COMMA reduce production built_in_call -> DAY LPAR expression RPAR
-- On COALESCE reduce production built_in_call -> DAY LPAR expression RPAR
-- On CEIL reduce production built_in_call -> DAY LPAR expression RPAR
-- On Boolean reduce production built_in_call -> DAY LPAR expression RPAR
-- On Blank_node_label reduce production built_in_call -> DAY LPAR expression RPAR
-- On BOUND reduce production built_in_call -> DAY LPAR expression RPAR
-- On BNODE reduce production built_in_call -> DAY LPAR expression RPAR
-- On BIND reduce production built_in_call -> DAY LPAR expression RPAR
-- On BANG reduce production built_in_call -> DAY LPAR expression RPAR
-- On AVG reduce production built_in_call -> DAY LPAR expression RPAR
-- On ASC reduce production built_in_call -> DAY LPAR expression RPAR
-- On AS reduce production built_in_call -> DAY LPAR expression RPAR
-- On ANON reduce production built_in_call -> DAY LPAR expression RPAR
-- On AMPAMP reduce production built_in_call -> DAY LPAR expression RPAR
-- On ABS reduce production built_in_call -> DAY LPAR expression RPAR

State 391:
built_in_call -> ENCODE_FOR_URI LPAR expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 392
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 392:
built_in_call -> ENCODE_FOR_URI LPAR expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On Var2 reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On Var1 reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On VALUES reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On UUID reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On URI reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On UCASE reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On TZ reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On TIMEZONE reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On String_literal reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On SUM reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On SUBSTR reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On STRUUID reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On STRSTARTS reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On STRLEN reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On STRLANG reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On STRENDS reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On STRDT reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On STRBEFORE reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On STRAFTER reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On STR reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On STAR reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On SLASH reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On SHA512 reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On SHA384 reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On SHA256 reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On SHA1 reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On SERVICE reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On SEMICOLON reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On SECONDS reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On SAMPLE reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On SAMETERM reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On RPAR reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On ROUND reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On REPLACE reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On REGEX reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On RBRACE reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On RAND reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On Pname_ns reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On Pname_ln reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On PLUS reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On PIPEPIPE reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On ORDER reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On OPTIONAL reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On OFFSET reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On NOW reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On NOTEQUAL reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On NOT reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On NIL reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On MONTH reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On MINUTES reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On MINUS reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On MIN reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On MD5 reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On MAX reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On LTE reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On LT reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On LPAR reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On LIMIT reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On LCASE reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On LBRACKET reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On LBRACE reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On LANGMATCHES reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On LANG reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On Iriref_ reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On Integer_positive reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On Integer_negative reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On Integer reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On ISURI reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On ISNUMERIC reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On ISLITERAL reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On ISIRI reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On ISBLANK reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On IRI reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On IN reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On IF reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On HOURS reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On HAVING reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On GTE reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On GT reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On GROUP_CONCAT reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On GRAPH reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On FLOOR reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On FILTER reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On EXISTS reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On EQUAL reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On EOF reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On ENCODE_FOR_URI reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On Double_positive reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On Double_negative reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On Double reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On Decimal_positive reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On Decimal_negative reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On Decimal reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On DOT reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On DESC reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On DAY reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On DATATYPE reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On COUNT reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On CONTAINS reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On CONCAT reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On COMMA reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On COALESCE reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On CEIL reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On Boolean reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On Blank_node_label reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On BOUND reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On BNODE reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On BIND reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On BANG reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On AVG reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On ASC reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On AS reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On ANON reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On AMPAMP reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR
-- On ABS reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR

State 393:
built_in_call -> FLOOR LPAR expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 394
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 394:
built_in_call -> FLOOR LPAR expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On Var2 reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On Var1 reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On VALUES reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On UUID reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On URI reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On UCASE reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On TZ reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On TIMEZONE reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On String_literal reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On SUM reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On SUBSTR reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On STRUUID reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On STRSTARTS reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On STRLEN reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On STRLANG reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On STRENDS reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On STRDT reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On STRBEFORE reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On STRAFTER reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On STR reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On STAR reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On SLASH reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On SHA512 reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On SHA384 reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On SHA256 reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On SHA1 reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On SERVICE reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On SEMICOLON reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On SECONDS reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On SAMPLE reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On SAMETERM reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On RPAR reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On ROUND reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On REPLACE reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On REGEX reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On RBRACE reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On RAND reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On Pname_ns reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On Pname_ln reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On PLUS reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On PIPEPIPE reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On ORDER reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On OPTIONAL reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On OFFSET reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On NOW reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On NOTEQUAL reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On NOT reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On NIL reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On MONTH reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On MINUTES reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On MINUS reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On MIN reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On MD5 reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On MAX reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On LTE reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On LT reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On LPAR reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On LIMIT reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On LCASE reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On LBRACKET reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On LBRACE reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On LANGMATCHES reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On LANG reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On Iriref_ reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On Integer_positive reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On Integer_negative reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On Integer reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On ISURI reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On ISNUMERIC reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On ISLITERAL reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On ISIRI reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On ISBLANK reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On IRI reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On IN reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On IF reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On HOURS reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On HAVING reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On GTE reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On GT reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On GROUP_CONCAT reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On GRAPH reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On FLOOR reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On FILTER reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On EXISTS reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On EQUAL reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On EOF reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On ENCODE_FOR_URI reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On Double_positive reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On Double_negative reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On Double reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On Decimal_positive reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On Decimal_negative reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On Decimal reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On DOT reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On DESC reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On DAY reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On DATATYPE reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On COUNT reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On CONTAINS reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On CONCAT reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On COMMA reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On COALESCE reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On CEIL reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On Boolean reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On Blank_node_label reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On BOUND reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On BNODE reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On BIND reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On BANG reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On AVG reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On ASC reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On AS reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On ANON reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On AMPAMP reduce production built_in_call -> FLOOR LPAR expression RPAR
-- On ABS reduce production built_in_call -> FLOOR LPAR expression RPAR

State 395:
aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression . SEMICOLON SEPARATOR EQUAL string RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH SEMICOLON RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH SEMICOLON RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH SEMICOLON RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH SEMICOLON RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH SEMICOLON RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH SEMICOLON RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On SEMICOLON shift to state 396
-- On RPAR shift to state 401
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 396:
aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON . SEPARATOR EQUAL string RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On SEPARATOR shift to state 397

State 397:
aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR . EQUAL string RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On EQUAL shift to state 398

State 398:
aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL . string RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On String_literal shift to state 31
-- On string shift to state 399

State 399:
aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On RPAR shift to state 400

State 400:
aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On Var2 reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On Var1 reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On VALUES reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On UUID reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On URI reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On UCASE reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On TZ reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On TIMEZONE reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On String_literal reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On SUM reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On SUBSTR reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On STRUUID reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On STRSTARTS reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On STRLEN reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On STRLANG reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On STRENDS reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On STRDT reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On STRBEFORE reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On STRAFTER reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On STR reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On STAR reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On SLASH reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On SHA512 reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On SHA384 reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On SHA256 reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On SHA1 reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On SERVICE reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On SEMICOLON reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On SECONDS reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On SAMPLE reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On SAMETERM reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On RPAR reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On ROUND reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On REPLACE reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On REGEX reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On RBRACE reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On RAND reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On Pname_ns reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On Pname_ln reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On PLUS reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On PIPEPIPE reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On ORDER reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On OPTIONAL reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On OFFSET reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On NOW reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On NOTEQUAL reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On NOT reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On NIL reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On MONTH reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On MINUTES reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On MINUS reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On MIN reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On MD5 reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On MAX reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On LTE reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On LT reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On LPAR reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On LIMIT reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On LCASE reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On LBRACKET reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On LBRACE reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On LANGMATCHES reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On LANG reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On Iriref_ reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On Integer_positive reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On Integer_negative reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On Integer reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On ISURI reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On ISNUMERIC reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On ISLITERAL reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On ISIRI reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On ISBLANK reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On IRI reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On IN reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On IF reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On HOURS reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On HAVING reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On GTE reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On GT reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On GROUP_CONCAT reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On GRAPH reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On FLOOR reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On FILTER reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On EXISTS reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On EQUAL reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On EOF reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On ENCODE_FOR_URI reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On Double_positive reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On Double_negative reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On Double reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On Decimal_positive reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On Decimal_negative reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On Decimal reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On DOT reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On DESC reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On DAY reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On DATATYPE reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On COUNT reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On CONTAINS reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On CONCAT reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On COMMA reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On COALESCE reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On CEIL reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On Boolean reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On Blank_node_label reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On BOUND reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On BNODE reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On BIND reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On BANG reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On AVG reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On ASC reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On AS reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On ANON reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On AMPAMP reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
-- On ABS reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR

State 401:
aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On Var2 reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On Var1 reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On VALUES reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On UUID reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On URI reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On UCASE reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On TZ reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On TIMEZONE reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On String_literal reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On SUM reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On SUBSTR reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On STRUUID reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On STRSTARTS reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On STRLEN reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On STRLANG reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On STRENDS reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On STRDT reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On STRBEFORE reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On STRAFTER reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On STR reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On STAR reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On SLASH reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On SHA512 reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On SHA384 reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On SHA256 reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On SHA1 reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On SERVICE reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On SEMICOLON reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On SECONDS reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On SAMPLE reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On SAMETERM reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On RPAR reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On ROUND reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On REPLACE reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On REGEX reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On RBRACE reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On RAND reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On Pname_ns reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On Pname_ln reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On PLUS reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On PIPEPIPE reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On ORDER reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On OPTIONAL reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On OFFSET reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On NOW reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On NOTEQUAL reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On NOT reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On NIL reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On MONTH reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On MINUTES reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On MINUS reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On MIN reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On MD5 reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On MAX reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On LTE reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On LT reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On LPAR reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On LIMIT reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On LCASE reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On LBRACKET reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On LBRACE reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On LANGMATCHES reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On LANG reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On Iriref_ reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On Integer_positive reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On Integer_negative reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On Integer reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On ISURI reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On ISNUMERIC reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On ISLITERAL reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On ISIRI reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On ISBLANK reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On IRI reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On IN reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On IF reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On HOURS reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On HAVING reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On GTE reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On GT reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On GROUP_CONCAT reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On GRAPH reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On FLOOR reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On FILTER reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On EXISTS reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On EQUAL reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On EOF reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On ENCODE_FOR_URI reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On Double_positive reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On Double_negative reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On Double reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On Decimal_positive reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On Decimal_negative reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On Decimal reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On DOT reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On DESC reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On DAY reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On DATATYPE reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On COUNT reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On CONTAINS reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On CONCAT reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On COMMA reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On COALESCE reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On CEIL reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On Boolean reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On Blank_node_label reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On BOUND reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On BNODE reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On BIND reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On BANG reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On AVG reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On ASC reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On AS reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On ANON reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On AMPAMP reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
-- On ABS reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR

State 402:
built_in_call -> HOURS LPAR expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 403
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 403:
built_in_call -> HOURS LPAR expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production built_in_call -> HOURS LPAR expression RPAR
-- On Var2 reduce production built_in_call -> HOURS LPAR expression RPAR
-- On Var1 reduce production built_in_call -> HOURS LPAR expression RPAR
-- On VALUES reduce production built_in_call -> HOURS LPAR expression RPAR
-- On UUID reduce production built_in_call -> HOURS LPAR expression RPAR
-- On URI reduce production built_in_call -> HOURS LPAR expression RPAR
-- On UCASE reduce production built_in_call -> HOURS LPAR expression RPAR
-- On TZ reduce production built_in_call -> HOURS LPAR expression RPAR
-- On TIMEZONE reduce production built_in_call -> HOURS LPAR expression RPAR
-- On String_literal reduce production built_in_call -> HOURS LPAR expression RPAR
-- On SUM reduce production built_in_call -> HOURS LPAR expression RPAR
-- On SUBSTR reduce production built_in_call -> HOURS LPAR expression RPAR
-- On STRUUID reduce production built_in_call -> HOURS LPAR expression RPAR
-- On STRSTARTS reduce production built_in_call -> HOURS LPAR expression RPAR
-- On STRLEN reduce production built_in_call -> HOURS LPAR expression RPAR
-- On STRLANG reduce production built_in_call -> HOURS LPAR expression RPAR
-- On STRENDS reduce production built_in_call -> HOURS LPAR expression RPAR
-- On STRDT reduce production built_in_call -> HOURS LPAR expression RPAR
-- On STRBEFORE reduce production built_in_call -> HOURS LPAR expression RPAR
-- On STRAFTER reduce production built_in_call -> HOURS LPAR expression RPAR
-- On STR reduce production built_in_call -> HOURS LPAR expression RPAR
-- On STAR reduce production built_in_call -> HOURS LPAR expression RPAR
-- On SLASH reduce production built_in_call -> HOURS LPAR expression RPAR
-- On SHA512 reduce production built_in_call -> HOURS LPAR expression RPAR
-- On SHA384 reduce production built_in_call -> HOURS LPAR expression RPAR
-- On SHA256 reduce production built_in_call -> HOURS LPAR expression RPAR
-- On SHA1 reduce production built_in_call -> HOURS LPAR expression RPAR
-- On SERVICE reduce production built_in_call -> HOURS LPAR expression RPAR
-- On SEMICOLON reduce production built_in_call -> HOURS LPAR expression RPAR
-- On SECONDS reduce production built_in_call -> HOURS LPAR expression RPAR
-- On SAMPLE reduce production built_in_call -> HOURS LPAR expression RPAR
-- On SAMETERM reduce production built_in_call -> HOURS LPAR expression RPAR
-- On RPAR reduce production built_in_call -> HOURS LPAR expression RPAR
-- On ROUND reduce production built_in_call -> HOURS LPAR expression RPAR
-- On REPLACE reduce production built_in_call -> HOURS LPAR expression RPAR
-- On REGEX reduce production built_in_call -> HOURS LPAR expression RPAR
-- On RBRACE reduce production built_in_call -> HOURS LPAR expression RPAR
-- On RAND reduce production built_in_call -> HOURS LPAR expression RPAR
-- On Pname_ns reduce production built_in_call -> HOURS LPAR expression RPAR
-- On Pname_ln reduce production built_in_call -> HOURS LPAR expression RPAR
-- On PLUS reduce production built_in_call -> HOURS LPAR expression RPAR
-- On PIPEPIPE reduce production built_in_call -> HOURS LPAR expression RPAR
-- On ORDER reduce production built_in_call -> HOURS LPAR expression RPAR
-- On OPTIONAL reduce production built_in_call -> HOURS LPAR expression RPAR
-- On OFFSET reduce production built_in_call -> HOURS LPAR expression RPAR
-- On NOW reduce production built_in_call -> HOURS LPAR expression RPAR
-- On NOTEQUAL reduce production built_in_call -> HOURS LPAR expression RPAR
-- On NOT reduce production built_in_call -> HOURS LPAR expression RPAR
-- On NIL reduce production built_in_call -> HOURS LPAR expression RPAR
-- On MONTH reduce production built_in_call -> HOURS LPAR expression RPAR
-- On MINUTES reduce production built_in_call -> HOURS LPAR expression RPAR
-- On MINUS reduce production built_in_call -> HOURS LPAR expression RPAR
-- On MIN reduce production built_in_call -> HOURS LPAR expression RPAR
-- On MD5 reduce production built_in_call -> HOURS LPAR expression RPAR
-- On MAX reduce production built_in_call -> HOURS LPAR expression RPAR
-- On LTE reduce production built_in_call -> HOURS LPAR expression RPAR
-- On LT reduce production built_in_call -> HOURS LPAR expression RPAR
-- On LPAR reduce production built_in_call -> HOURS LPAR expression RPAR
-- On LIMIT reduce production built_in_call -> HOURS LPAR expression RPAR
-- On LCASE reduce production built_in_call -> HOURS LPAR expression RPAR
-- On LBRACKET reduce production built_in_call -> HOURS LPAR expression RPAR
-- On LBRACE reduce production built_in_call -> HOURS LPAR expression RPAR
-- On LANGMATCHES reduce production built_in_call -> HOURS LPAR expression RPAR
-- On LANG reduce production built_in_call -> HOURS LPAR expression RPAR
-- On Iriref_ reduce production built_in_call -> HOURS LPAR expression RPAR
-- On Integer_positive reduce production built_in_call -> HOURS LPAR expression RPAR
-- On Integer_negative reduce production built_in_call -> HOURS LPAR expression RPAR
-- On Integer reduce production built_in_call -> HOURS LPAR expression RPAR
-- On ISURI reduce production built_in_call -> HOURS LPAR expression RPAR
-- On ISNUMERIC reduce production built_in_call -> HOURS LPAR expression RPAR
-- On ISLITERAL reduce production built_in_call -> HOURS LPAR expression RPAR
-- On ISIRI reduce production built_in_call -> HOURS LPAR expression RPAR
-- On ISBLANK reduce production built_in_call -> HOURS LPAR expression RPAR
-- On IRI reduce production built_in_call -> HOURS LPAR expression RPAR
-- On IN reduce production built_in_call -> HOURS LPAR expression RPAR
-- On IF reduce production built_in_call -> HOURS LPAR expression RPAR
-- On HOURS reduce production built_in_call -> HOURS LPAR expression RPAR
-- On HAVING reduce production built_in_call -> HOURS LPAR expression RPAR
-- On GTE reduce production built_in_call -> HOURS LPAR expression RPAR
-- On GT reduce production built_in_call -> HOURS LPAR expression RPAR
-- On GROUP_CONCAT reduce production built_in_call -> HOURS LPAR expression RPAR
-- On GRAPH reduce production built_in_call -> HOURS LPAR expression RPAR
-- On FLOOR reduce production built_in_call -> HOURS LPAR expression RPAR
-- On FILTER reduce production built_in_call -> HOURS LPAR expression RPAR
-- On EXISTS reduce production built_in_call -> HOURS LPAR expression RPAR
-- On EQUAL reduce production built_in_call -> HOURS LPAR expression RPAR
-- On EOF reduce production built_in_call -> HOURS LPAR expression RPAR
-- On ENCODE_FOR_URI reduce production built_in_call -> HOURS LPAR expression RPAR
-- On Double_positive reduce production built_in_call -> HOURS LPAR expression RPAR
-- On Double_negative reduce production built_in_call -> HOURS LPAR expression RPAR
-- On Double reduce production built_in_call -> HOURS LPAR expression RPAR
-- On Decimal_positive reduce production built_in_call -> HOURS LPAR expression RPAR
-- On Decimal_negative reduce production built_in_call -> HOURS LPAR expression RPAR
-- On Decimal reduce production built_in_call -> HOURS LPAR expression RPAR
-- On DOT reduce production built_in_call -> HOURS LPAR expression RPAR
-- On DESC reduce production built_in_call -> HOURS LPAR expression RPAR
-- On DAY reduce production built_in_call -> HOURS LPAR expression RPAR
-- On DATATYPE reduce production built_in_call -> HOURS LPAR expression RPAR
-- On COUNT reduce production built_in_call -> HOURS LPAR expression RPAR
-- On CONTAINS reduce production built_in_call -> HOURS LPAR expression RPAR
-- On CONCAT reduce production built_in_call -> HOURS LPAR expression RPAR
-- On COMMA reduce production built_in_call -> HOURS LPAR expression RPAR
-- On COALESCE reduce production built_in_call -> HOURS LPAR expression RPAR
-- On CEIL reduce production built_in_call -> HOURS LPAR expression RPAR
-- On Boolean reduce production built_in_call -> HOURS LPAR expression RPAR
-- On Blank_node_label reduce production built_in_call -> HOURS LPAR expression RPAR
-- On BOUND reduce production built_in_call -> HOURS LPAR expression RPAR
-- On BNODE reduce production built_in_call -> HOURS LPAR expression RPAR
-- On BIND reduce production built_in_call -> HOURS LPAR expression RPAR
-- On BANG reduce production built_in_call -> HOURS LPAR expression RPAR
-- On AVG reduce production built_in_call -> HOURS LPAR expression RPAR
-- On ASC reduce production built_in_call -> HOURS LPAR expression RPAR
-- On AS reduce production built_in_call -> HOURS LPAR expression RPAR
-- On ANON reduce production built_in_call -> HOURS LPAR expression RPAR
-- On AMPAMP reduce production built_in_call -> HOURS LPAR expression RPAR
-- On ABS reduce production built_in_call -> HOURS LPAR expression RPAR

State 404:
built_in_call -> IF LPAR expression . COMMA expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On COMMA shift to state 405
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 405:
built_in_call -> IF LPAR expression COMMA . expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 406
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 406:
built_in_call -> IF LPAR expression COMMA expression . COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On COMMA shift to state 407
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 407:
built_in_call -> IF LPAR expression COMMA expression COMMA . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 408
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 408:
built_in_call -> IF LPAR expression COMMA expression COMMA expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 409
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 409:
built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On Var2 reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On Var1 reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On VALUES reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On UUID reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On URI reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On UCASE reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On TZ reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On TIMEZONE reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On String_literal reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On SUM reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On SUBSTR reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On STRUUID reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On STRSTARTS reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On STRLEN reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On STRLANG reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On STRENDS reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On STRDT reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On STRBEFORE reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On STRAFTER reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On STR reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On STAR reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On SLASH reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On SHA512 reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On SHA384 reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On SHA256 reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On SHA1 reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On SERVICE reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On SEMICOLON reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On SECONDS reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On SAMPLE reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On SAMETERM reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On RPAR reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On ROUND reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On REPLACE reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On REGEX reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On RBRACE reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On RAND reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On Pname_ns reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On Pname_ln reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On PLUS reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On PIPEPIPE reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On ORDER reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On OPTIONAL reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On OFFSET reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On NOW reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On NOTEQUAL reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On NOT reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On NIL reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On MONTH reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On MINUTES reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On MINUS reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On MIN reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On MD5 reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On MAX reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On LTE reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On LT reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On LPAR reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On LIMIT reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On LCASE reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On LBRACKET reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On LBRACE reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On LANGMATCHES reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On LANG reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On Iriref_ reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On Integer_positive reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On Integer_negative reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On Integer reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On ISURI reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On ISNUMERIC reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On ISLITERAL reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On ISIRI reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On ISBLANK reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On IRI reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On IN reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On IF reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On HOURS reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On HAVING reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On GTE reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On GT reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On GROUP_CONCAT reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On GRAPH reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On FLOOR reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On FILTER reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On EXISTS reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On EQUAL reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On EOF reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On ENCODE_FOR_URI reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On Double_positive reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On Double_negative reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On Double reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On Decimal_positive reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On Decimal_negative reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On Decimal reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On DOT reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On DESC reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On DAY reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On DATATYPE reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On COUNT reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On CONTAINS reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On CONCAT reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On COMMA reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On COALESCE reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On CEIL reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On Boolean reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On Blank_node_label reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On BOUND reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On BNODE reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On BIND reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On BANG reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On AVG reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On ASC reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On AS reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On ANON reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On AMPAMP reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR
-- On ABS reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR

State 410:
built_in_call -> IRI LPAR expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 411
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 411:
built_in_call -> IRI LPAR expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production built_in_call -> IRI LPAR expression RPAR
-- On Var2 reduce production built_in_call -> IRI LPAR expression RPAR
-- On Var1 reduce production built_in_call -> IRI LPAR expression RPAR
-- On VALUES reduce production built_in_call -> IRI LPAR expression RPAR
-- On UUID reduce production built_in_call -> IRI LPAR expression RPAR
-- On URI reduce production built_in_call -> IRI LPAR expression RPAR
-- On UCASE reduce production built_in_call -> IRI LPAR expression RPAR
-- On TZ reduce production built_in_call -> IRI LPAR expression RPAR
-- On TIMEZONE reduce production built_in_call -> IRI LPAR expression RPAR
-- On String_literal reduce production built_in_call -> IRI LPAR expression RPAR
-- On SUM reduce production built_in_call -> IRI LPAR expression RPAR
-- On SUBSTR reduce production built_in_call -> IRI LPAR expression RPAR
-- On STRUUID reduce production built_in_call -> IRI LPAR expression RPAR
-- On STRSTARTS reduce production built_in_call -> IRI LPAR expression RPAR
-- On STRLEN reduce production built_in_call -> IRI LPAR expression RPAR
-- On STRLANG reduce production built_in_call -> IRI LPAR expression RPAR
-- On STRENDS reduce production built_in_call -> IRI LPAR expression RPAR
-- On STRDT reduce production built_in_call -> IRI LPAR expression RPAR
-- On STRBEFORE reduce production built_in_call -> IRI LPAR expression RPAR
-- On STRAFTER reduce production built_in_call -> IRI LPAR expression RPAR
-- On STR reduce production built_in_call -> IRI LPAR expression RPAR
-- On STAR reduce production built_in_call -> IRI LPAR expression RPAR
-- On SLASH reduce production built_in_call -> IRI LPAR expression RPAR
-- On SHA512 reduce production built_in_call -> IRI LPAR expression RPAR
-- On SHA384 reduce production built_in_call -> IRI LPAR expression RPAR
-- On SHA256 reduce production built_in_call -> IRI LPAR expression RPAR
-- On SHA1 reduce production built_in_call -> IRI LPAR expression RPAR
-- On SERVICE reduce production built_in_call -> IRI LPAR expression RPAR
-- On SEMICOLON reduce production built_in_call -> IRI LPAR expression RPAR
-- On SECONDS reduce production built_in_call -> IRI LPAR expression RPAR
-- On SAMPLE reduce production built_in_call -> IRI LPAR expression RPAR
-- On SAMETERM reduce production built_in_call -> IRI LPAR expression RPAR
-- On RPAR reduce production built_in_call -> IRI LPAR expression RPAR
-- On ROUND reduce production built_in_call -> IRI LPAR expression RPAR
-- On REPLACE reduce production built_in_call -> IRI LPAR expression RPAR
-- On REGEX reduce production built_in_call -> IRI LPAR expression RPAR
-- On RBRACE reduce production built_in_call -> IRI LPAR expression RPAR
-- On RAND reduce production built_in_call -> IRI LPAR expression RPAR
-- On Pname_ns reduce production built_in_call -> IRI LPAR expression RPAR
-- On Pname_ln reduce production built_in_call -> IRI LPAR expression RPAR
-- On PLUS reduce production built_in_call -> IRI LPAR expression RPAR
-- On PIPEPIPE reduce production built_in_call -> IRI LPAR expression RPAR
-- On ORDER reduce production built_in_call -> IRI LPAR expression RPAR
-- On OPTIONAL reduce production built_in_call -> IRI LPAR expression RPAR
-- On OFFSET reduce production built_in_call -> IRI LPAR expression RPAR
-- On NOW reduce production built_in_call -> IRI LPAR expression RPAR
-- On NOTEQUAL reduce production built_in_call -> IRI LPAR expression RPAR
-- On NOT reduce production built_in_call -> IRI LPAR expression RPAR
-- On NIL reduce production built_in_call -> IRI LPAR expression RPAR
-- On MONTH reduce production built_in_call -> IRI LPAR expression RPAR
-- On MINUTES reduce production built_in_call -> IRI LPAR expression RPAR
-- On MINUS reduce production built_in_call -> IRI LPAR expression RPAR
-- On MIN reduce production built_in_call -> IRI LPAR expression RPAR
-- On MD5 reduce production built_in_call -> IRI LPAR expression RPAR
-- On MAX reduce production built_in_call -> IRI LPAR expression RPAR
-- On LTE reduce production built_in_call -> IRI LPAR expression RPAR
-- On LT reduce production built_in_call -> IRI LPAR expression RPAR
-- On LPAR reduce production built_in_call -> IRI LPAR expression RPAR
-- On LIMIT reduce production built_in_call -> IRI LPAR expression RPAR
-- On LCASE reduce production built_in_call -> IRI LPAR expression RPAR
-- On LBRACKET reduce production built_in_call -> IRI LPAR expression RPAR
-- On LBRACE reduce production built_in_call -> IRI LPAR expression RPAR
-- On LANGMATCHES reduce production built_in_call -> IRI LPAR expression RPAR
-- On LANG reduce production built_in_call -> IRI LPAR expression RPAR
-- On Iriref_ reduce production built_in_call -> IRI LPAR expression RPAR
-- On Integer_positive reduce production built_in_call -> IRI LPAR expression RPAR
-- On Integer_negative reduce production built_in_call -> IRI LPAR expression RPAR
-- On Integer reduce production built_in_call -> IRI LPAR expression RPAR
-- On ISURI reduce production built_in_call -> IRI LPAR expression RPAR
-- On ISNUMERIC reduce production built_in_call -> IRI LPAR expression RPAR
-- On ISLITERAL reduce production built_in_call -> IRI LPAR expression RPAR
-- On ISIRI reduce production built_in_call -> IRI LPAR expression RPAR
-- On ISBLANK reduce production built_in_call -> IRI LPAR expression RPAR
-- On IRI reduce production built_in_call -> IRI LPAR expression RPAR
-- On IN reduce production built_in_call -> IRI LPAR expression RPAR
-- On IF reduce production built_in_call -> IRI LPAR expression RPAR
-- On HOURS reduce production built_in_call -> IRI LPAR expression RPAR
-- On HAVING reduce production built_in_call -> IRI LPAR expression RPAR
-- On GTE reduce production built_in_call -> IRI LPAR expression RPAR
-- On GT reduce production built_in_call -> IRI LPAR expression RPAR
-- On GROUP_CONCAT reduce production built_in_call -> IRI LPAR expression RPAR
-- On GRAPH reduce production built_in_call -> IRI LPAR expression RPAR
-- On FLOOR reduce production built_in_call -> IRI LPAR expression RPAR
-- On FILTER reduce production built_in_call -> IRI LPAR expression RPAR
-- On EXISTS reduce production built_in_call -> IRI LPAR expression RPAR
-- On EQUAL reduce production built_in_call -> IRI LPAR expression RPAR
-- On EOF reduce production built_in_call -> IRI LPAR expression RPAR
-- On ENCODE_FOR_URI reduce production built_in_call -> IRI LPAR expression RPAR
-- On Double_positive reduce production built_in_call -> IRI LPAR expression RPAR
-- On Double_negative reduce production built_in_call -> IRI LPAR expression RPAR
-- On Double reduce production built_in_call -> IRI LPAR expression RPAR
-- On Decimal_positive reduce production built_in_call -> IRI LPAR expression RPAR
-- On Decimal_negative reduce production built_in_call -> IRI LPAR expression RPAR
-- On Decimal reduce production built_in_call -> IRI LPAR expression RPAR
-- On DOT reduce production built_in_call -> IRI LPAR expression RPAR
-- On DESC reduce production built_in_call -> IRI LPAR expression RPAR
-- On DAY reduce production built_in_call -> IRI LPAR expression RPAR
-- On DATATYPE reduce production built_in_call -> IRI LPAR expression RPAR
-- On COUNT reduce production built_in_call -> IRI LPAR expression RPAR
-- On CONTAINS reduce production built_in_call -> IRI LPAR expression RPAR
-- On CONCAT reduce production built_in_call -> IRI LPAR expression RPAR
-- On COMMA reduce production built_in_call -> IRI LPAR expression RPAR
-- On COALESCE reduce production built_in_call -> IRI LPAR expression RPAR
-- On CEIL reduce production built_in_call -> IRI LPAR expression RPAR
-- On Boolean reduce production built_in_call -> IRI LPAR expression RPAR
-- On Blank_node_label reduce production built_in_call -> IRI LPAR expression RPAR
-- On BOUND reduce production built_in_call -> IRI LPAR expression RPAR
-- On BNODE reduce production built_in_call -> IRI LPAR expression RPAR
-- On BIND reduce production built_in_call -> IRI LPAR expression RPAR
-- On BANG reduce production built_in_call -> IRI LPAR expression RPAR
-- On AVG reduce production built_in_call -> IRI LPAR expression RPAR
-- On ASC reduce production built_in_call -> IRI LPAR expression RPAR
-- On AS reduce production built_in_call -> IRI LPAR expression RPAR
-- On ANON reduce production built_in_call -> IRI LPAR expression RPAR
-- On AMPAMP reduce production built_in_call -> IRI LPAR expression RPAR
-- On ABS reduce production built_in_call -> IRI LPAR expression RPAR

State 412:
built_in_call -> ISBLANK LPAR expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 413
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 413:
built_in_call -> ISBLANK LPAR expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On Var2 reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On Var1 reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On VALUES reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On UUID reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On URI reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On UCASE reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On TZ reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On TIMEZONE reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On String_literal reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On SUM reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On SUBSTR reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On STRUUID reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On STRSTARTS reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On STRLEN reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On STRLANG reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On STRENDS reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On STRDT reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On STRBEFORE reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On STRAFTER reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On STR reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On STAR reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On SLASH reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On SHA512 reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On SHA384 reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On SHA256 reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On SHA1 reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On SERVICE reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On SEMICOLON reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On SECONDS reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On SAMPLE reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On SAMETERM reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On RPAR reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On ROUND reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On REPLACE reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On REGEX reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On RBRACE reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On RAND reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On Pname_ns reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On Pname_ln reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On PLUS reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On PIPEPIPE reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On ORDER reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On OPTIONAL reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On OFFSET reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On NOW reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On NOTEQUAL reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On NOT reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On NIL reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On MONTH reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On MINUTES reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On MINUS reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On MIN reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On MD5 reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On MAX reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On LTE reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On LT reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On LPAR reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On LIMIT reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On LCASE reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On LBRACKET reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On LBRACE reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On LANGMATCHES reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On LANG reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On Iriref_ reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On Integer_positive reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On Integer_negative reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On Integer reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On ISURI reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On ISNUMERIC reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On ISLITERAL reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On ISIRI reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On ISBLANK reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On IRI reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On IN reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On IF reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On HOURS reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On HAVING reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On GTE reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On GT reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On GROUP_CONCAT reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On GRAPH reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On FLOOR reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On FILTER reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On EXISTS reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On EQUAL reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On EOF reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On ENCODE_FOR_URI reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On Double_positive reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On Double_negative reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On Double reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On Decimal_positive reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On Decimal_negative reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On Decimal reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On DOT reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On DESC reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On DAY reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On DATATYPE reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On COUNT reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On CONTAINS reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On CONCAT reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On COMMA reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On COALESCE reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On CEIL reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On Boolean reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On Blank_node_label reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On BOUND reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On BNODE reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On BIND reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On BANG reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On AVG reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On ASC reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On AS reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On ANON reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On AMPAMP reduce production built_in_call -> ISBLANK LPAR expression RPAR
-- On ABS reduce production built_in_call -> ISBLANK LPAR expression RPAR

State 414:
built_in_call -> ISIRI LPAR expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 415
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 415:
built_in_call -> ISIRI LPAR expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On Var2 reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On Var1 reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On VALUES reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On UUID reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On URI reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On UCASE reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On TZ reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On TIMEZONE reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On String_literal reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On SUM reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On SUBSTR reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On STRUUID reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On STRSTARTS reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On STRLEN reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On STRLANG reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On STRENDS reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On STRDT reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On STRBEFORE reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On STRAFTER reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On STR reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On STAR reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On SLASH reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On SHA512 reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On SHA384 reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On SHA256 reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On SHA1 reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On SERVICE reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On SEMICOLON reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On SECONDS reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On SAMPLE reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On SAMETERM reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On RPAR reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On ROUND reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On REPLACE reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On REGEX reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On RBRACE reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On RAND reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On Pname_ns reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On Pname_ln reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On PLUS reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On PIPEPIPE reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On ORDER reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On OPTIONAL reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On OFFSET reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On NOW reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On NOTEQUAL reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On NOT reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On NIL reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On MONTH reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On MINUTES reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On MINUS reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On MIN reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On MD5 reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On MAX reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On LTE reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On LT reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On LPAR reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On LIMIT reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On LCASE reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On LBRACKET reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On LBRACE reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On LANGMATCHES reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On LANG reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On Iriref_ reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On Integer_positive reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On Integer_negative reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On Integer reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On ISURI reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On ISNUMERIC reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On ISLITERAL reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On ISIRI reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On ISBLANK reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On IRI reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On IN reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On IF reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On HOURS reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On HAVING reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On GTE reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On GT reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On GROUP_CONCAT reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On GRAPH reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On FLOOR reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On FILTER reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On EXISTS reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On EQUAL reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On EOF reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On ENCODE_FOR_URI reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On Double_positive reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On Double_negative reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On Double reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On Decimal_positive reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On Decimal_negative reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On Decimal reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On DOT reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On DESC reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On DAY reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On DATATYPE reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On COUNT reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On CONTAINS reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On CONCAT reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On COMMA reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On COALESCE reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On CEIL reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On Boolean reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On Blank_node_label reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On BOUND reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On BNODE reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On BIND reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On BANG reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On AVG reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On ASC reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On AS reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On ANON reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On AMPAMP reduce production built_in_call -> ISIRI LPAR expression RPAR
-- On ABS reduce production built_in_call -> ISIRI LPAR expression RPAR

State 416:
built_in_call -> ISLITERAL LPAR expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 417
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 417:
built_in_call -> ISLITERAL LPAR expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On Var2 reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On Var1 reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On VALUES reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On UUID reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On URI reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On UCASE reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On TZ reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On TIMEZONE reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On String_literal reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On SUM reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On SUBSTR reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On STRUUID reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On STRSTARTS reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On STRLEN reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On STRLANG reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On STRENDS reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On STRDT reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On STRBEFORE reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On STRAFTER reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On STR reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On STAR reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On SLASH reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On SHA512 reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On SHA384 reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On SHA256 reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On SHA1 reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On SERVICE reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On SEMICOLON reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On SECONDS reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On SAMPLE reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On SAMETERM reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On RPAR reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On ROUND reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On REPLACE reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On REGEX reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On RBRACE reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On RAND reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On Pname_ns reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On Pname_ln reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On PLUS reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On PIPEPIPE reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On ORDER reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On OPTIONAL reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On OFFSET reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On NOW reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On NOTEQUAL reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On NOT reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On NIL reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On MONTH reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On MINUTES reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On MINUS reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On MIN reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On MD5 reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On MAX reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On LTE reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On LT reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On LPAR reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On LIMIT reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On LCASE reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On LBRACKET reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On LBRACE reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On LANGMATCHES reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On LANG reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On Iriref_ reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On Integer_positive reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On Integer_negative reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On Integer reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On ISURI reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On ISNUMERIC reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On ISLITERAL reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On ISIRI reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On ISBLANK reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On IRI reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On IN reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On IF reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On HOURS reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On HAVING reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On GTE reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On GT reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On GROUP_CONCAT reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On GRAPH reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On FLOOR reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On FILTER reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On EXISTS reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On EQUAL reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On EOF reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On ENCODE_FOR_URI reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On Double_positive reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On Double_negative reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On Double reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On Decimal_positive reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On Decimal_negative reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On Decimal reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On DOT reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On DESC reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On DAY reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On DATATYPE reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On COUNT reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On CONTAINS reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On CONCAT reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On COMMA reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On COALESCE reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On CEIL reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On Boolean reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On Blank_node_label reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On BOUND reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On BNODE reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On BIND reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On BANG reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On AVG reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On ASC reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On AS reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On ANON reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On AMPAMP reduce production built_in_call -> ISLITERAL LPAR expression RPAR
-- On ABS reduce production built_in_call -> ISLITERAL LPAR expression RPAR

State 418:
built_in_call -> ISNUMERIC LPAR expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 419
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 419:
built_in_call -> ISNUMERIC LPAR expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On Var2 reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On Var1 reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On VALUES reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On UUID reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On URI reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On UCASE reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On TZ reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On TIMEZONE reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On String_literal reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On SUM reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On SUBSTR reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On STRUUID reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On STRSTARTS reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On STRLEN reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On STRLANG reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On STRENDS reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On STRDT reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On STRBEFORE reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On STRAFTER reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On STR reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On STAR reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On SLASH reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On SHA512 reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On SHA384 reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On SHA256 reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On SHA1 reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On SERVICE reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On SEMICOLON reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On SECONDS reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On SAMPLE reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On SAMETERM reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On RPAR reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On ROUND reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On REPLACE reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On REGEX reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On RBRACE reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On RAND reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On Pname_ns reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On Pname_ln reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On PLUS reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On PIPEPIPE reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On ORDER reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On OPTIONAL reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On OFFSET reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On NOW reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On NOTEQUAL reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On NOT reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On NIL reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On MONTH reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On MINUTES reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On MINUS reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On MIN reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On MD5 reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On MAX reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On LTE reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On LT reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On LPAR reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On LIMIT reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On LCASE reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On LBRACKET reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On LBRACE reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On LANGMATCHES reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On LANG reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On Iriref_ reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On Integer_positive reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On Integer_negative reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On Integer reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On ISURI reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On ISNUMERIC reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On ISLITERAL reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On ISIRI reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On ISBLANK reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On IRI reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On IN reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On IF reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On HOURS reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On HAVING reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On GTE reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On GT reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On GROUP_CONCAT reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On GRAPH reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On FLOOR reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On FILTER reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On EXISTS reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On EQUAL reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On EOF reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On ENCODE_FOR_URI reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On Double_positive reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On Double_negative reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On Double reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On Decimal_positive reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On Decimal_negative reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On Decimal reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On DOT reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On DESC reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On DAY reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On DATATYPE reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On COUNT reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On CONTAINS reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On CONCAT reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On COMMA reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On COALESCE reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On CEIL reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On Boolean reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On Blank_node_label reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On BOUND reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On BNODE reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On BIND reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On BANG reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On AVG reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On ASC reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On AS reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On ANON reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On AMPAMP reduce production built_in_call -> ISNUMERIC LPAR expression RPAR
-- On ABS reduce production built_in_call -> ISNUMERIC LPAR expression RPAR

State 420:
built_in_call -> ISURI LPAR expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 421
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 421:
built_in_call -> ISURI LPAR expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production built_in_call -> ISURI LPAR expression RPAR
-- On Var2 reduce production built_in_call -> ISURI LPAR expression RPAR
-- On Var1 reduce production built_in_call -> ISURI LPAR expression RPAR
-- On VALUES reduce production built_in_call -> ISURI LPAR expression RPAR
-- On UUID reduce production built_in_call -> ISURI LPAR expression RPAR
-- On URI reduce production built_in_call -> ISURI LPAR expression RPAR
-- On UCASE reduce production built_in_call -> ISURI LPAR expression RPAR
-- On TZ reduce production built_in_call -> ISURI LPAR expression RPAR
-- On TIMEZONE reduce production built_in_call -> ISURI LPAR expression RPAR
-- On String_literal reduce production built_in_call -> ISURI LPAR expression RPAR
-- On SUM reduce production built_in_call -> ISURI LPAR expression RPAR
-- On SUBSTR reduce production built_in_call -> ISURI LPAR expression RPAR
-- On STRUUID reduce production built_in_call -> ISURI LPAR expression RPAR
-- On STRSTARTS reduce production built_in_call -> ISURI LPAR expression RPAR
-- On STRLEN reduce production built_in_call -> ISURI LPAR expression RPAR
-- On STRLANG reduce production built_in_call -> ISURI LPAR expression RPAR
-- On STRENDS reduce production built_in_call -> ISURI LPAR expression RPAR
-- On STRDT reduce production built_in_call -> ISURI LPAR expression RPAR
-- On STRBEFORE reduce production built_in_call -> ISURI LPAR expression RPAR
-- On STRAFTER reduce production built_in_call -> ISURI LPAR expression RPAR
-- On STR reduce production built_in_call -> ISURI LPAR expression RPAR
-- On STAR reduce production built_in_call -> ISURI LPAR expression RPAR
-- On SLASH reduce production built_in_call -> ISURI LPAR expression RPAR
-- On SHA512 reduce production built_in_call -> ISURI LPAR expression RPAR
-- On SHA384 reduce production built_in_call -> ISURI LPAR expression RPAR
-- On SHA256 reduce production built_in_call -> ISURI LPAR expression RPAR
-- On SHA1 reduce production built_in_call -> ISURI LPAR expression RPAR
-- On SERVICE reduce production built_in_call -> ISURI LPAR expression RPAR
-- On SEMICOLON reduce production built_in_call -> ISURI LPAR expression RPAR
-- On SECONDS reduce production built_in_call -> ISURI LPAR expression RPAR
-- On SAMPLE reduce production built_in_call -> ISURI LPAR expression RPAR
-- On SAMETERM reduce production built_in_call -> ISURI LPAR expression RPAR
-- On RPAR reduce production built_in_call -> ISURI LPAR expression RPAR
-- On ROUND reduce production built_in_call -> ISURI LPAR expression RPAR
-- On REPLACE reduce production built_in_call -> ISURI LPAR expression RPAR
-- On REGEX reduce production built_in_call -> ISURI LPAR expression RPAR
-- On RBRACE reduce production built_in_call -> ISURI LPAR expression RPAR
-- On RAND reduce production built_in_call -> ISURI LPAR expression RPAR
-- On Pname_ns reduce production built_in_call -> ISURI LPAR expression RPAR
-- On Pname_ln reduce production built_in_call -> ISURI LPAR expression RPAR
-- On PLUS reduce production built_in_call -> ISURI LPAR expression RPAR
-- On PIPEPIPE reduce production built_in_call -> ISURI LPAR expression RPAR
-- On ORDER reduce production built_in_call -> ISURI LPAR expression RPAR
-- On OPTIONAL reduce production built_in_call -> ISURI LPAR expression RPAR
-- On OFFSET reduce production built_in_call -> ISURI LPAR expression RPAR
-- On NOW reduce production built_in_call -> ISURI LPAR expression RPAR
-- On NOTEQUAL reduce production built_in_call -> ISURI LPAR expression RPAR
-- On NOT reduce production built_in_call -> ISURI LPAR expression RPAR
-- On NIL reduce production built_in_call -> ISURI LPAR expression RPAR
-- On MONTH reduce production built_in_call -> ISURI LPAR expression RPAR
-- On MINUTES reduce production built_in_call -> ISURI LPAR expression RPAR
-- On MINUS reduce production built_in_call -> ISURI LPAR expression RPAR
-- On MIN reduce production built_in_call -> ISURI LPAR expression RPAR
-- On MD5 reduce production built_in_call -> ISURI LPAR expression RPAR
-- On MAX reduce production built_in_call -> ISURI LPAR expression RPAR
-- On LTE reduce production built_in_call -> ISURI LPAR expression RPAR
-- On LT reduce production built_in_call -> ISURI LPAR expression RPAR
-- On LPAR reduce production built_in_call -> ISURI LPAR expression RPAR
-- On LIMIT reduce production built_in_call -> ISURI LPAR expression RPAR
-- On LCASE reduce production built_in_call -> ISURI LPAR expression RPAR
-- On LBRACKET reduce production built_in_call -> ISURI LPAR expression RPAR
-- On LBRACE reduce production built_in_call -> ISURI LPAR expression RPAR
-- On LANGMATCHES reduce production built_in_call -> ISURI LPAR expression RPAR
-- On LANG reduce production built_in_call -> ISURI LPAR expression RPAR
-- On Iriref_ reduce production built_in_call -> ISURI LPAR expression RPAR
-- On Integer_positive reduce production built_in_call -> ISURI LPAR expression RPAR
-- On Integer_negative reduce production built_in_call -> ISURI LPAR expression RPAR
-- On Integer reduce production built_in_call -> ISURI LPAR expression RPAR
-- On ISURI reduce production built_in_call -> ISURI LPAR expression RPAR
-- On ISNUMERIC reduce production built_in_call -> ISURI LPAR expression RPAR
-- On ISLITERAL reduce production built_in_call -> ISURI LPAR expression RPAR
-- On ISIRI reduce production built_in_call -> ISURI LPAR expression RPAR
-- On ISBLANK reduce production built_in_call -> ISURI LPAR expression RPAR
-- On IRI reduce production built_in_call -> ISURI LPAR expression RPAR
-- On IN reduce production built_in_call -> ISURI LPAR expression RPAR
-- On IF reduce production built_in_call -> ISURI LPAR expression RPAR
-- On HOURS reduce production built_in_call -> ISURI LPAR expression RPAR
-- On HAVING reduce production built_in_call -> ISURI LPAR expression RPAR
-- On GTE reduce production built_in_call -> ISURI LPAR expression RPAR
-- On GT reduce production built_in_call -> ISURI LPAR expression RPAR
-- On GROUP_CONCAT reduce production built_in_call -> ISURI LPAR expression RPAR
-- On GRAPH reduce production built_in_call -> ISURI LPAR expression RPAR
-- On FLOOR reduce production built_in_call -> ISURI LPAR expression RPAR
-- On FILTER reduce production built_in_call -> ISURI LPAR expression RPAR
-- On EXISTS reduce production built_in_call -> ISURI LPAR expression RPAR
-- On EQUAL reduce production built_in_call -> ISURI LPAR expression RPAR
-- On EOF reduce production built_in_call -> ISURI LPAR expression RPAR
-- On ENCODE_FOR_URI reduce production built_in_call -> ISURI LPAR expression RPAR
-- On Double_positive reduce production built_in_call -> ISURI LPAR expression RPAR
-- On Double_negative reduce production built_in_call -> ISURI LPAR expression RPAR
-- On Double reduce production built_in_call -> ISURI LPAR expression RPAR
-- On Decimal_positive reduce production built_in_call -> ISURI LPAR expression RPAR
-- On Decimal_negative reduce production built_in_call -> ISURI LPAR expression RPAR
-- On Decimal reduce production built_in_call -> ISURI LPAR expression RPAR
-- On DOT reduce production built_in_call -> ISURI LPAR expression RPAR
-- On DESC reduce production built_in_call -> ISURI LPAR expression RPAR
-- On DAY reduce production built_in_call -> ISURI LPAR expression RPAR
-- On DATATYPE reduce production built_in_call -> ISURI LPAR expression RPAR
-- On COUNT reduce production built_in_call -> ISURI LPAR expression RPAR
-- On CONTAINS reduce production built_in_call -> ISURI LPAR expression RPAR
-- On CONCAT reduce production built_in_call -> ISURI LPAR expression RPAR
-- On COMMA reduce production built_in_call -> ISURI LPAR expression RPAR
-- On COALESCE reduce production built_in_call -> ISURI LPAR expression RPAR
-- On CEIL reduce production built_in_call -> ISURI LPAR expression RPAR
-- On Boolean reduce production built_in_call -> ISURI LPAR expression RPAR
-- On Blank_node_label reduce production built_in_call -> ISURI LPAR expression RPAR
-- On BOUND reduce production built_in_call -> ISURI LPAR expression RPAR
-- On BNODE reduce production built_in_call -> ISURI LPAR expression RPAR
-- On BIND reduce production built_in_call -> ISURI LPAR expression RPAR
-- On BANG reduce production built_in_call -> ISURI LPAR expression RPAR
-- On AVG reduce production built_in_call -> ISURI LPAR expression RPAR
-- On ASC reduce production built_in_call -> ISURI LPAR expression RPAR
-- On AS reduce production built_in_call -> ISURI LPAR expression RPAR
-- On ANON reduce production built_in_call -> ISURI LPAR expression RPAR
-- On AMPAMP reduce production built_in_call -> ISURI LPAR expression RPAR
-- On ABS reduce production built_in_call -> ISURI LPAR expression RPAR

State 422:
built_in_call -> LANG LPAR expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 423
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 423:
built_in_call -> LANG LPAR expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production built_in_call -> LANG LPAR expression RPAR
-- On Var2 reduce production built_in_call -> LANG LPAR expression RPAR
-- On Var1 reduce production built_in_call -> LANG LPAR expression RPAR
-- On VALUES reduce production built_in_call -> LANG LPAR expression RPAR
-- On UUID reduce production built_in_call -> LANG LPAR expression RPAR
-- On URI reduce production built_in_call -> LANG LPAR expression RPAR
-- On UCASE reduce production built_in_call -> LANG LPAR expression RPAR
-- On TZ reduce production built_in_call -> LANG LPAR expression RPAR
-- On TIMEZONE reduce production built_in_call -> LANG LPAR expression RPAR
-- On String_literal reduce production built_in_call -> LANG LPAR expression RPAR
-- On SUM reduce production built_in_call -> LANG LPAR expression RPAR
-- On SUBSTR reduce production built_in_call -> LANG LPAR expression RPAR
-- On STRUUID reduce production built_in_call -> LANG LPAR expression RPAR
-- On STRSTARTS reduce production built_in_call -> LANG LPAR expression RPAR
-- On STRLEN reduce production built_in_call -> LANG LPAR expression RPAR
-- On STRLANG reduce production built_in_call -> LANG LPAR expression RPAR
-- On STRENDS reduce production built_in_call -> LANG LPAR expression RPAR
-- On STRDT reduce production built_in_call -> LANG LPAR expression RPAR
-- On STRBEFORE reduce production built_in_call -> LANG LPAR expression RPAR
-- On STRAFTER reduce production built_in_call -> LANG LPAR expression RPAR
-- On STR reduce production built_in_call -> LANG LPAR expression RPAR
-- On STAR reduce production built_in_call -> LANG LPAR expression RPAR
-- On SLASH reduce production built_in_call -> LANG LPAR expression RPAR
-- On SHA512 reduce production built_in_call -> LANG LPAR expression RPAR
-- On SHA384 reduce production built_in_call -> LANG LPAR expression RPAR
-- On SHA256 reduce production built_in_call -> LANG LPAR expression RPAR
-- On SHA1 reduce production built_in_call -> LANG LPAR expression RPAR
-- On SERVICE reduce production built_in_call -> LANG LPAR expression RPAR
-- On SEMICOLON reduce production built_in_call -> LANG LPAR expression RPAR
-- On SECONDS reduce production built_in_call -> LANG LPAR expression RPAR
-- On SAMPLE reduce production built_in_call -> LANG LPAR expression RPAR
-- On SAMETERM reduce production built_in_call -> LANG LPAR expression RPAR
-- On RPAR reduce production built_in_call -> LANG LPAR expression RPAR
-- On ROUND reduce production built_in_call -> LANG LPAR expression RPAR
-- On REPLACE reduce production built_in_call -> LANG LPAR expression RPAR
-- On REGEX reduce production built_in_call -> LANG LPAR expression RPAR
-- On RBRACE reduce production built_in_call -> LANG LPAR expression RPAR
-- On RAND reduce production built_in_call -> LANG LPAR expression RPAR
-- On Pname_ns reduce production built_in_call -> LANG LPAR expression RPAR
-- On Pname_ln reduce production built_in_call -> LANG LPAR expression RPAR
-- On PLUS reduce production built_in_call -> LANG LPAR expression RPAR
-- On PIPEPIPE reduce production built_in_call -> LANG LPAR expression RPAR
-- On ORDER reduce production built_in_call -> LANG LPAR expression RPAR
-- On OPTIONAL reduce production built_in_call -> LANG LPAR expression RPAR
-- On OFFSET reduce production built_in_call -> LANG LPAR expression RPAR
-- On NOW reduce production built_in_call -> LANG LPAR expression RPAR
-- On NOTEQUAL reduce production built_in_call -> LANG LPAR expression RPAR
-- On NOT reduce production built_in_call -> LANG LPAR expression RPAR
-- On NIL reduce production built_in_call -> LANG LPAR expression RPAR
-- On MONTH reduce production built_in_call -> LANG LPAR expression RPAR
-- On MINUTES reduce production built_in_call -> LANG LPAR expression RPAR
-- On MINUS reduce production built_in_call -> LANG LPAR expression RPAR
-- On MIN reduce production built_in_call -> LANG LPAR expression RPAR
-- On MD5 reduce production built_in_call -> LANG LPAR expression RPAR
-- On MAX reduce production built_in_call -> LANG LPAR expression RPAR
-- On LTE reduce production built_in_call -> LANG LPAR expression RPAR
-- On LT reduce production built_in_call -> LANG LPAR expression RPAR
-- On LPAR reduce production built_in_call -> LANG LPAR expression RPAR
-- On LIMIT reduce production built_in_call -> LANG LPAR expression RPAR
-- On LCASE reduce production built_in_call -> LANG LPAR expression RPAR
-- On LBRACKET reduce production built_in_call -> LANG LPAR expression RPAR
-- On LBRACE reduce production built_in_call -> LANG LPAR expression RPAR
-- On LANGMATCHES reduce production built_in_call -> LANG LPAR expression RPAR
-- On LANG reduce production built_in_call -> LANG LPAR expression RPAR
-- On Iriref_ reduce production built_in_call -> LANG LPAR expression RPAR
-- On Integer_positive reduce production built_in_call -> LANG LPAR expression RPAR
-- On Integer_negative reduce production built_in_call -> LANG LPAR expression RPAR
-- On Integer reduce production built_in_call -> LANG LPAR expression RPAR
-- On ISURI reduce production built_in_call -> LANG LPAR expression RPAR
-- On ISNUMERIC reduce production built_in_call -> LANG LPAR expression RPAR
-- On ISLITERAL reduce production built_in_call -> LANG LPAR expression RPAR
-- On ISIRI reduce production built_in_call -> LANG LPAR expression RPAR
-- On ISBLANK reduce production built_in_call -> LANG LPAR expression RPAR
-- On IRI reduce production built_in_call -> LANG LPAR expression RPAR
-- On IN reduce production built_in_call -> LANG LPAR expression RPAR
-- On IF reduce production built_in_call -> LANG LPAR expression RPAR
-- On HOURS reduce production built_in_call -> LANG LPAR expression RPAR
-- On HAVING reduce production built_in_call -> LANG LPAR expression RPAR
-- On GTE reduce production built_in_call -> LANG LPAR expression RPAR
-- On GT reduce production built_in_call -> LANG LPAR expression RPAR
-- On GROUP_CONCAT reduce production built_in_call -> LANG LPAR expression RPAR
-- On GRAPH reduce production built_in_call -> LANG LPAR expression RPAR
-- On FLOOR reduce production built_in_call -> LANG LPAR expression RPAR
-- On FILTER reduce production built_in_call -> LANG LPAR expression RPAR
-- On EXISTS reduce production built_in_call -> LANG LPAR expression RPAR
-- On EQUAL reduce production built_in_call -> LANG LPAR expression RPAR
-- On EOF reduce production built_in_call -> LANG LPAR expression RPAR
-- On ENCODE_FOR_URI reduce production built_in_call -> LANG LPAR expression RPAR
-- On Double_positive reduce production built_in_call -> LANG LPAR expression RPAR
-- On Double_negative reduce production built_in_call -> LANG LPAR expression RPAR
-- On Double reduce production built_in_call -> LANG LPAR expression RPAR
-- On Decimal_positive reduce production built_in_call -> LANG LPAR expression RPAR
-- On Decimal_negative reduce production built_in_call -> LANG LPAR expression RPAR
-- On Decimal reduce production built_in_call -> LANG LPAR expression RPAR
-- On DOT reduce production built_in_call -> LANG LPAR expression RPAR
-- On DESC reduce production built_in_call -> LANG LPAR expression RPAR
-- On DAY reduce production built_in_call -> LANG LPAR expression RPAR
-- On DATATYPE reduce production built_in_call -> LANG LPAR expression RPAR
-- On COUNT reduce production built_in_call -> LANG LPAR expression RPAR
-- On CONTAINS reduce production built_in_call -> LANG LPAR expression RPAR
-- On CONCAT reduce production built_in_call -> LANG LPAR expression RPAR
-- On COMMA reduce production built_in_call -> LANG LPAR expression RPAR
-- On COALESCE reduce production built_in_call -> LANG LPAR expression RPAR
-- On CEIL reduce production built_in_call -> LANG LPAR expression RPAR
-- On Boolean reduce production built_in_call -> LANG LPAR expression RPAR
-- On Blank_node_label reduce production built_in_call -> LANG LPAR expression RPAR
-- On BOUND reduce production built_in_call -> LANG LPAR expression RPAR
-- On BNODE reduce production built_in_call -> LANG LPAR expression RPAR
-- On BIND reduce production built_in_call -> LANG LPAR expression RPAR
-- On BANG reduce production built_in_call -> LANG LPAR expression RPAR
-- On AVG reduce production built_in_call -> LANG LPAR expression RPAR
-- On ASC reduce production built_in_call -> LANG LPAR expression RPAR
-- On AS reduce production built_in_call -> LANG LPAR expression RPAR
-- On ANON reduce production built_in_call -> LANG LPAR expression RPAR
-- On AMPAMP reduce production built_in_call -> LANG LPAR expression RPAR
-- On ABS reduce production built_in_call -> LANG LPAR expression RPAR

State 424:
built_in_call -> LANGMATCHES LPAR expression . COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On COMMA shift to state 425
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 425:
built_in_call -> LANGMATCHES LPAR expression COMMA . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 426
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 426:
built_in_call -> LANGMATCHES LPAR expression COMMA expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 427
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 427:
built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On Var2 reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On Var1 reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On VALUES reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On UUID reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On URI reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On UCASE reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On TZ reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On TIMEZONE reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On String_literal reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On SUM reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On SUBSTR reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On STRUUID reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On STRSTARTS reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On STRLEN reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On STRLANG reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On STRENDS reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On STRDT reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On STRBEFORE reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On STRAFTER reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On STR reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On STAR reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On SLASH reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On SHA512 reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On SHA384 reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On SHA256 reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On SHA1 reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On SERVICE reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On SEMICOLON reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On SECONDS reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On SAMPLE reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On SAMETERM reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On RPAR reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On ROUND reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On REPLACE reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On REGEX reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On RBRACE reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On RAND reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On Pname_ns reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On Pname_ln reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On PLUS reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On PIPEPIPE reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On ORDER reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On OPTIONAL reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On OFFSET reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On NOW reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On NOTEQUAL reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On NOT reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On NIL reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On MONTH reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On MINUTES reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On MINUS reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On MIN reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On MD5 reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On MAX reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On LTE reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On LT reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On LPAR reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On LIMIT reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On LCASE reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On LBRACKET reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On LBRACE reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On LANGMATCHES reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On LANG reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On Iriref_ reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On Integer_positive reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On Integer_negative reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On Integer reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On ISURI reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On ISNUMERIC reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On ISLITERAL reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On ISIRI reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On ISBLANK reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On IRI reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On IN reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On IF reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On HOURS reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On HAVING reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On GTE reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On GT reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On GROUP_CONCAT reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On GRAPH reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On FLOOR reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On FILTER reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On EXISTS reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On EQUAL reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On EOF reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On ENCODE_FOR_URI reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On Double_positive reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On Double_negative reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On Double reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On Decimal_positive reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On Decimal_negative reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On Decimal reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On DOT reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On DESC reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On DAY reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On DATATYPE reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On COUNT reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On CONTAINS reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On CONCAT reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On COMMA reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On COALESCE reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On CEIL reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On Boolean reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On Blank_node_label reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On BOUND reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On BNODE reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On BIND reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On BANG reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On AVG reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On ASC reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On AS reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On ANON reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On AMPAMP reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR
-- On ABS reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR

State 428:
built_in_call -> LCASE LPAR expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 429
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 429:
built_in_call -> LCASE LPAR expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production built_in_call -> LCASE LPAR expression RPAR
-- On Var2 reduce production built_in_call -> LCASE LPAR expression RPAR
-- On Var1 reduce production built_in_call -> LCASE LPAR expression RPAR
-- On VALUES reduce production built_in_call -> LCASE LPAR expression RPAR
-- On UUID reduce production built_in_call -> LCASE LPAR expression RPAR
-- On URI reduce production built_in_call -> LCASE LPAR expression RPAR
-- On UCASE reduce production built_in_call -> LCASE LPAR expression RPAR
-- On TZ reduce production built_in_call -> LCASE LPAR expression RPAR
-- On TIMEZONE reduce production built_in_call -> LCASE LPAR expression RPAR
-- On String_literal reduce production built_in_call -> LCASE LPAR expression RPAR
-- On SUM reduce production built_in_call -> LCASE LPAR expression RPAR
-- On SUBSTR reduce production built_in_call -> LCASE LPAR expression RPAR
-- On STRUUID reduce production built_in_call -> LCASE LPAR expression RPAR
-- On STRSTARTS reduce production built_in_call -> LCASE LPAR expression RPAR
-- On STRLEN reduce production built_in_call -> LCASE LPAR expression RPAR
-- On STRLANG reduce production built_in_call -> LCASE LPAR expression RPAR
-- On STRENDS reduce production built_in_call -> LCASE LPAR expression RPAR
-- On STRDT reduce production built_in_call -> LCASE LPAR expression RPAR
-- On STRBEFORE reduce production built_in_call -> LCASE LPAR expression RPAR
-- On STRAFTER reduce production built_in_call -> LCASE LPAR expression RPAR
-- On STR reduce production built_in_call -> LCASE LPAR expression RPAR
-- On STAR reduce production built_in_call -> LCASE LPAR expression RPAR
-- On SLASH reduce production built_in_call -> LCASE LPAR expression RPAR
-- On SHA512 reduce production built_in_call -> LCASE LPAR expression RPAR
-- On SHA384 reduce production built_in_call -> LCASE LPAR expression RPAR
-- On SHA256 reduce production built_in_call -> LCASE LPAR expression RPAR
-- On SHA1 reduce production built_in_call -> LCASE LPAR expression RPAR
-- On SERVICE reduce production built_in_call -> LCASE LPAR expression RPAR
-- On SEMICOLON reduce production built_in_call -> LCASE LPAR expression RPAR
-- On SECONDS reduce production built_in_call -> LCASE LPAR expression RPAR
-- On SAMPLE reduce production built_in_call -> LCASE LPAR expression RPAR
-- On SAMETERM reduce production built_in_call -> LCASE LPAR expression RPAR
-- On RPAR reduce production built_in_call -> LCASE LPAR expression RPAR
-- On ROUND reduce production built_in_call -> LCASE LPAR expression RPAR
-- On REPLACE reduce production built_in_call -> LCASE LPAR expression RPAR
-- On REGEX reduce production built_in_call -> LCASE LPAR expression RPAR
-- On RBRACE reduce production built_in_call -> LCASE LPAR expression RPAR
-- On RAND reduce production built_in_call -> LCASE LPAR expression RPAR
-- On Pname_ns reduce production built_in_call -> LCASE LPAR expression RPAR
-- On Pname_ln reduce production built_in_call -> LCASE LPAR expression RPAR
-- On PLUS reduce production built_in_call -> LCASE LPAR expression RPAR
-- On PIPEPIPE reduce production built_in_call -> LCASE LPAR expression RPAR
-- On ORDER reduce production built_in_call -> LCASE LPAR expression RPAR
-- On OPTIONAL reduce production built_in_call -> LCASE LPAR expression RPAR
-- On OFFSET reduce production built_in_call -> LCASE LPAR expression RPAR
-- On NOW reduce production built_in_call -> LCASE LPAR expression RPAR
-- On NOTEQUAL reduce production built_in_call -> LCASE LPAR expression RPAR
-- On NOT reduce production built_in_call -> LCASE LPAR expression RPAR
-- On NIL reduce production built_in_call -> LCASE LPAR expression RPAR
-- On MONTH reduce production built_in_call -> LCASE LPAR expression RPAR
-- On MINUTES reduce production built_in_call -> LCASE LPAR expression RPAR
-- On MINUS reduce production built_in_call -> LCASE LPAR expression RPAR
-- On MIN reduce production built_in_call -> LCASE LPAR expression RPAR
-- On MD5 reduce production built_in_call -> LCASE LPAR expression RPAR
-- On MAX reduce production built_in_call -> LCASE LPAR expression RPAR
-- On LTE reduce production built_in_call -> LCASE LPAR expression RPAR
-- On LT reduce production built_in_call -> LCASE LPAR expression RPAR
-- On LPAR reduce production built_in_call -> LCASE LPAR expression RPAR
-- On LIMIT reduce production built_in_call -> LCASE LPAR expression RPAR
-- On LCASE reduce production built_in_call -> LCASE LPAR expression RPAR
-- On LBRACKET reduce production built_in_call -> LCASE LPAR expression RPAR
-- On LBRACE reduce production built_in_call -> LCASE LPAR expression RPAR
-- On LANGMATCHES reduce production built_in_call -> LCASE LPAR expression RPAR
-- On LANG reduce production built_in_call -> LCASE LPAR expression RPAR
-- On Iriref_ reduce production built_in_call -> LCASE LPAR expression RPAR
-- On Integer_positive reduce production built_in_call -> LCASE LPAR expression RPAR
-- On Integer_negative reduce production built_in_call -> LCASE LPAR expression RPAR
-- On Integer reduce production built_in_call -> LCASE LPAR expression RPAR
-- On ISURI reduce production built_in_call -> LCASE LPAR expression RPAR
-- On ISNUMERIC reduce production built_in_call -> LCASE LPAR expression RPAR
-- On ISLITERAL reduce production built_in_call -> LCASE LPAR expression RPAR
-- On ISIRI reduce production built_in_call -> LCASE LPAR expression RPAR
-- On ISBLANK reduce production built_in_call -> LCASE LPAR expression RPAR
-- On IRI reduce production built_in_call -> LCASE LPAR expression RPAR
-- On IN reduce production built_in_call -> LCASE LPAR expression RPAR
-- On IF reduce production built_in_call -> LCASE LPAR expression RPAR
-- On HOURS reduce production built_in_call -> LCASE LPAR expression RPAR
-- On HAVING reduce production built_in_call -> LCASE LPAR expression RPAR
-- On GTE reduce production built_in_call -> LCASE LPAR expression RPAR
-- On GT reduce production built_in_call -> LCASE LPAR expression RPAR
-- On GROUP_CONCAT reduce production built_in_call -> LCASE LPAR expression RPAR
-- On GRAPH reduce production built_in_call -> LCASE LPAR expression RPAR
-- On FLOOR reduce production built_in_call -> LCASE LPAR expression RPAR
-- On FILTER reduce production built_in_call -> LCASE LPAR expression RPAR
-- On EXISTS reduce production built_in_call -> LCASE LPAR expression RPAR
-- On EQUAL reduce production built_in_call -> LCASE LPAR expression RPAR
-- On EOF reduce production built_in_call -> LCASE LPAR expression RPAR
-- On ENCODE_FOR_URI reduce production built_in_call -> LCASE LPAR expression RPAR
-- On Double_positive reduce production built_in_call -> LCASE LPAR expression RPAR
-- On Double_negative reduce production built_in_call -> LCASE LPAR expression RPAR
-- On Double reduce production built_in_call -> LCASE LPAR expression RPAR
-- On Decimal_positive reduce production built_in_call -> LCASE LPAR expression RPAR
-- On Decimal_negative reduce production built_in_call -> LCASE LPAR expression RPAR
-- On Decimal reduce production built_in_call -> LCASE LPAR expression RPAR
-- On DOT reduce production built_in_call -> LCASE LPAR expression RPAR
-- On DESC reduce production built_in_call -> LCASE LPAR expression RPAR
-- On DAY reduce production built_in_call -> LCASE LPAR expression RPAR
-- On DATATYPE reduce production built_in_call -> LCASE LPAR expression RPAR
-- On COUNT reduce production built_in_call -> LCASE LPAR expression RPAR
-- On CONTAINS reduce production built_in_call -> LCASE LPAR expression RPAR
-- On CONCAT reduce production built_in_call -> LCASE LPAR expression RPAR
-- On COMMA reduce production built_in_call -> LCASE LPAR expression RPAR
-- On COALESCE reduce production built_in_call -> LCASE LPAR expression RPAR
-- On CEIL reduce production built_in_call -> LCASE LPAR expression RPAR
-- On Boolean reduce production built_in_call -> LCASE LPAR expression RPAR
-- On Blank_node_label reduce production built_in_call -> LCASE LPAR expression RPAR
-- On BOUND reduce production built_in_call -> LCASE LPAR expression RPAR
-- On BNODE reduce production built_in_call -> LCASE LPAR expression RPAR
-- On BIND reduce production built_in_call -> LCASE LPAR expression RPAR
-- On BANG reduce production built_in_call -> LCASE LPAR expression RPAR
-- On AVG reduce production built_in_call -> LCASE LPAR expression RPAR
-- On ASC reduce production built_in_call -> LCASE LPAR expression RPAR
-- On AS reduce production built_in_call -> LCASE LPAR expression RPAR
-- On ANON reduce production built_in_call -> LCASE LPAR expression RPAR
-- On AMPAMP reduce production built_in_call -> LCASE LPAR expression RPAR
-- On ABS reduce production built_in_call -> LCASE LPAR expression RPAR

State 430:
bracketted_expression -> LPAR expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 431
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 431:
bracketted_expression -> LPAR expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production bracketted_expression -> LPAR expression RPAR
-- On Var2 reduce production bracketted_expression -> LPAR expression RPAR
-- On Var1 reduce production bracketted_expression -> LPAR expression RPAR
-- On VALUES reduce production bracketted_expression -> LPAR expression RPAR
-- On UUID reduce production bracketted_expression -> LPAR expression RPAR
-- On URI reduce production bracketted_expression -> LPAR expression RPAR
-- On UCASE reduce production bracketted_expression -> LPAR expression RPAR
-- On TZ reduce production bracketted_expression -> LPAR expression RPAR
-- On TIMEZONE reduce production bracketted_expression -> LPAR expression RPAR
-- On String_literal reduce production bracketted_expression -> LPAR expression RPAR
-- On SUM reduce production bracketted_expression -> LPAR expression RPAR
-- On SUBSTR reduce production bracketted_expression -> LPAR expression RPAR
-- On STRUUID reduce production bracketted_expression -> LPAR expression RPAR
-- On STRSTARTS reduce production bracketted_expression -> LPAR expression RPAR
-- On STRLEN reduce production bracketted_expression -> LPAR expression RPAR
-- On STRLANG reduce production bracketted_expression -> LPAR expression RPAR
-- On STRENDS reduce production bracketted_expression -> LPAR expression RPAR
-- On STRDT reduce production bracketted_expression -> LPAR expression RPAR
-- On STRBEFORE reduce production bracketted_expression -> LPAR expression RPAR
-- On STRAFTER reduce production bracketted_expression -> LPAR expression RPAR
-- On STR reduce production bracketted_expression -> LPAR expression RPAR
-- On STAR reduce production bracketted_expression -> LPAR expression RPAR
-- On SLASH reduce production bracketted_expression -> LPAR expression RPAR
-- On SHA512 reduce production bracketted_expression -> LPAR expression RPAR
-- On SHA384 reduce production bracketted_expression -> LPAR expression RPAR
-- On SHA256 reduce production bracketted_expression -> LPAR expression RPAR
-- On SHA1 reduce production bracketted_expression -> LPAR expression RPAR
-- On SERVICE reduce production bracketted_expression -> LPAR expression RPAR
-- On SEMICOLON reduce production bracketted_expression -> LPAR expression RPAR
-- On SECONDS reduce production bracketted_expression -> LPAR expression RPAR
-- On SAMPLE reduce production bracketted_expression -> LPAR expression RPAR
-- On SAMETERM reduce production bracketted_expression -> LPAR expression RPAR
-- On RPAR reduce production bracketted_expression -> LPAR expression RPAR
-- On ROUND reduce production bracketted_expression -> LPAR expression RPAR
-- On REPLACE reduce production bracketted_expression -> LPAR expression RPAR
-- On REGEX reduce production bracketted_expression -> LPAR expression RPAR
-- On RBRACE reduce production bracketted_expression -> LPAR expression RPAR
-- On RAND reduce production bracketted_expression -> LPAR expression RPAR
-- On Pname_ns reduce production bracketted_expression -> LPAR expression RPAR
-- On Pname_ln reduce production bracketted_expression -> LPAR expression RPAR
-- On PLUS reduce production bracketted_expression -> LPAR expression RPAR
-- On PIPEPIPE reduce production bracketted_expression -> LPAR expression RPAR
-- On ORDER reduce production bracketted_expression -> LPAR expression RPAR
-- On OPTIONAL reduce production bracketted_expression -> LPAR expression RPAR
-- On OFFSET reduce production bracketted_expression -> LPAR expression RPAR
-- On NOW reduce production bracketted_expression -> LPAR expression RPAR
-- On NOTEQUAL reduce production bracketted_expression -> LPAR expression RPAR
-- On NOT reduce production bracketted_expression -> LPAR expression RPAR
-- On NIL reduce production bracketted_expression -> LPAR expression RPAR
-- On MONTH reduce production bracketted_expression -> LPAR expression RPAR
-- On MINUTES reduce production bracketted_expression -> LPAR expression RPAR
-- On MINUS reduce production bracketted_expression -> LPAR expression RPAR
-- On MIN reduce production bracketted_expression -> LPAR expression RPAR
-- On MD5 reduce production bracketted_expression -> LPAR expression RPAR
-- On MAX reduce production bracketted_expression -> LPAR expression RPAR
-- On LTE reduce production bracketted_expression -> LPAR expression RPAR
-- On LT reduce production bracketted_expression -> LPAR expression RPAR
-- On LPAR reduce production bracketted_expression -> LPAR expression RPAR
-- On LIMIT reduce production bracketted_expression -> LPAR expression RPAR
-- On LCASE reduce production bracketted_expression -> LPAR expression RPAR
-- On LBRACKET reduce production bracketted_expression -> LPAR expression RPAR
-- On LBRACE reduce production bracketted_expression -> LPAR expression RPAR
-- On LANGMATCHES reduce production bracketted_expression -> LPAR expression RPAR
-- On LANG reduce production bracketted_expression -> LPAR expression RPAR
-- On Iriref_ reduce production bracketted_expression -> LPAR expression RPAR
-- On Integer_positive reduce production bracketted_expression -> LPAR expression RPAR
-- On Integer_negative reduce production bracketted_expression -> LPAR expression RPAR
-- On Integer reduce production bracketted_expression -> LPAR expression RPAR
-- On ISURI reduce production bracketted_expression -> LPAR expression RPAR
-- On ISNUMERIC reduce production bracketted_expression -> LPAR expression RPAR
-- On ISLITERAL reduce production bracketted_expression -> LPAR expression RPAR
-- On ISIRI reduce production bracketted_expression -> LPAR expression RPAR
-- On ISBLANK reduce production bracketted_expression -> LPAR expression RPAR
-- On IRI reduce production bracketted_expression -> LPAR expression RPAR
-- On IN reduce production bracketted_expression -> LPAR expression RPAR
-- On IF reduce production bracketted_expression -> LPAR expression RPAR
-- On HOURS reduce production bracketted_expression -> LPAR expression RPAR
-- On HAVING reduce production bracketted_expression -> LPAR expression RPAR
-- On GTE reduce production bracketted_expression -> LPAR expression RPAR
-- On GT reduce production bracketted_expression -> LPAR expression RPAR
-- On GROUP_CONCAT reduce production bracketted_expression -> LPAR expression RPAR
-- On GRAPH reduce production bracketted_expression -> LPAR expression RPAR
-- On FLOOR reduce production bracketted_expression -> LPAR expression RPAR
-- On FILTER reduce production bracketted_expression -> LPAR expression RPAR
-- On EXISTS reduce production bracketted_expression -> LPAR expression RPAR
-- On EQUAL reduce production bracketted_expression -> LPAR expression RPAR
-- On EOF reduce production bracketted_expression -> LPAR expression RPAR
-- On ENCODE_FOR_URI reduce production bracketted_expression -> LPAR expression RPAR
-- On Double_positive reduce production bracketted_expression -> LPAR expression RPAR
-- On Double_negative reduce production bracketted_expression -> LPAR expression RPAR
-- On Double reduce production bracketted_expression -> LPAR expression RPAR
-- On Decimal_positive reduce production bracketted_expression -> LPAR expression RPAR
-- On Decimal_negative reduce production bracketted_expression -> LPAR expression RPAR
-- On Decimal reduce production bracketted_expression -> LPAR expression RPAR
-- On DOT reduce production bracketted_expression -> LPAR expression RPAR
-- On DESC reduce production bracketted_expression -> LPAR expression RPAR
-- On DAY reduce production bracketted_expression -> LPAR expression RPAR
-- On DATATYPE reduce production bracketted_expression -> LPAR expression RPAR
-- On COUNT reduce production bracketted_expression -> LPAR expression RPAR
-- On CONTAINS reduce production bracketted_expression -> LPAR expression RPAR
-- On CONCAT reduce production bracketted_expression -> LPAR expression RPAR
-- On COMMA reduce production bracketted_expression -> LPAR expression RPAR
-- On COALESCE reduce production bracketted_expression -> LPAR expression RPAR
-- On CEIL reduce production bracketted_expression -> LPAR expression RPAR
-- On Boolean reduce production bracketted_expression -> LPAR expression RPAR
-- On Blank_node_label reduce production bracketted_expression -> LPAR expression RPAR
-- On BOUND reduce production bracketted_expression -> LPAR expression RPAR
-- On BNODE reduce production bracketted_expression -> LPAR expression RPAR
-- On BIND reduce production bracketted_expression -> LPAR expression RPAR
-- On BANG reduce production bracketted_expression -> LPAR expression RPAR
-- On AVG reduce production bracketted_expression -> LPAR expression RPAR
-- On ASC reduce production bracketted_expression -> LPAR expression RPAR
-- On AS reduce production bracketted_expression -> LPAR expression RPAR
-- On ANON reduce production bracketted_expression -> LPAR expression RPAR
-- On AMPAMP reduce production bracketted_expression -> LPAR expression RPAR
-- On ABS reduce production bracketted_expression -> LPAR expression RPAR

State 432:
aggregate -> MAX LPAR option(DISTINCT) expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 433
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 433:
aggregate -> MAX LPAR option(DISTINCT) expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On Var2 reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On Var1 reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On VALUES reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On UUID reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On URI reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On UCASE reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On TZ reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On TIMEZONE reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On String_literal reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On SUM reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On SUBSTR reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On STRUUID reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On STRSTARTS reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On STRLEN reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On STRLANG reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On STRENDS reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On STRDT reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On STRBEFORE reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On STRAFTER reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On STR reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On STAR reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On SLASH reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On SHA512 reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On SHA384 reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On SHA256 reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On SHA1 reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On SERVICE reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On SEMICOLON reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On SECONDS reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On SAMPLE reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On SAMETERM reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On RPAR reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On ROUND reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On REPLACE reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On REGEX reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On RBRACE reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On RAND reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On Pname_ns reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On Pname_ln reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On PLUS reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On PIPEPIPE reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On ORDER reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On OPTIONAL reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On OFFSET reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On NOW reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On NOTEQUAL reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On NOT reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On NIL reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On MONTH reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On MINUTES reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On MINUS reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On MIN reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On MD5 reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On MAX reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On LTE reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On LT reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On LPAR reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On LIMIT reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On LCASE reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On LBRACKET reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On LBRACE reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On LANGMATCHES reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On LANG reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On Iriref_ reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On Integer_positive reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On Integer_negative reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On Integer reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On ISURI reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On ISNUMERIC reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On ISLITERAL reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On ISIRI reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On ISBLANK reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On IRI reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On IN reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On IF reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On HOURS reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On HAVING reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On GTE reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On GT reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On GROUP_CONCAT reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On GRAPH reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On FLOOR reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On FILTER reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On EXISTS reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On EQUAL reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On EOF reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On ENCODE_FOR_URI reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On Double_positive reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On Double_negative reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On Double reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On Decimal_positive reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On Decimal_negative reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On Decimal reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On DOT reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On DESC reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On DAY reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On DATATYPE reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On COUNT reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On CONTAINS reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On CONCAT reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On COMMA reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On COALESCE reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On CEIL reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On Boolean reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On Blank_node_label reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On BOUND reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On BNODE reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On BIND reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On BANG reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On AVG reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On ASC reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On AS reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On ANON reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On AMPAMP reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR
-- On ABS reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR

State 434:
built_in_call -> MD5 LPAR expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 435
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 435:
built_in_call -> MD5 LPAR expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production built_in_call -> MD5 LPAR expression RPAR
-- On Var2 reduce production built_in_call -> MD5 LPAR expression RPAR
-- On Var1 reduce production built_in_call -> MD5 LPAR expression RPAR
-- On VALUES reduce production built_in_call -> MD5 LPAR expression RPAR
-- On UUID reduce production built_in_call -> MD5 LPAR expression RPAR
-- On URI reduce production built_in_call -> MD5 LPAR expression RPAR
-- On UCASE reduce production built_in_call -> MD5 LPAR expression RPAR
-- On TZ reduce production built_in_call -> MD5 LPAR expression RPAR
-- On TIMEZONE reduce production built_in_call -> MD5 LPAR expression RPAR
-- On String_literal reduce production built_in_call -> MD5 LPAR expression RPAR
-- On SUM reduce production built_in_call -> MD5 LPAR expression RPAR
-- On SUBSTR reduce production built_in_call -> MD5 LPAR expression RPAR
-- On STRUUID reduce production built_in_call -> MD5 LPAR expression RPAR
-- On STRSTARTS reduce production built_in_call -> MD5 LPAR expression RPAR
-- On STRLEN reduce production built_in_call -> MD5 LPAR expression RPAR
-- On STRLANG reduce production built_in_call -> MD5 LPAR expression RPAR
-- On STRENDS reduce production built_in_call -> MD5 LPAR expression RPAR
-- On STRDT reduce production built_in_call -> MD5 LPAR expression RPAR
-- On STRBEFORE reduce production built_in_call -> MD5 LPAR expression RPAR
-- On STRAFTER reduce production built_in_call -> MD5 LPAR expression RPAR
-- On STR reduce production built_in_call -> MD5 LPAR expression RPAR
-- On STAR reduce production built_in_call -> MD5 LPAR expression RPAR
-- On SLASH reduce production built_in_call -> MD5 LPAR expression RPAR
-- On SHA512 reduce production built_in_call -> MD5 LPAR expression RPAR
-- On SHA384 reduce production built_in_call -> MD5 LPAR expression RPAR
-- On SHA256 reduce production built_in_call -> MD5 LPAR expression RPAR
-- On SHA1 reduce production built_in_call -> MD5 LPAR expression RPAR
-- On SERVICE reduce production built_in_call -> MD5 LPAR expression RPAR
-- On SEMICOLON reduce production built_in_call -> MD5 LPAR expression RPAR
-- On SECONDS reduce production built_in_call -> MD5 LPAR expression RPAR
-- On SAMPLE reduce production built_in_call -> MD5 LPAR expression RPAR
-- On SAMETERM reduce production built_in_call -> MD5 LPAR expression RPAR
-- On RPAR reduce production built_in_call -> MD5 LPAR expression RPAR
-- On ROUND reduce production built_in_call -> MD5 LPAR expression RPAR
-- On REPLACE reduce production built_in_call -> MD5 LPAR expression RPAR
-- On REGEX reduce production built_in_call -> MD5 LPAR expression RPAR
-- On RBRACE reduce production built_in_call -> MD5 LPAR expression RPAR
-- On RAND reduce production built_in_call -> MD5 LPAR expression RPAR
-- On Pname_ns reduce production built_in_call -> MD5 LPAR expression RPAR
-- On Pname_ln reduce production built_in_call -> MD5 LPAR expression RPAR
-- On PLUS reduce production built_in_call -> MD5 LPAR expression RPAR
-- On PIPEPIPE reduce production built_in_call -> MD5 LPAR expression RPAR
-- On ORDER reduce production built_in_call -> MD5 LPAR expression RPAR
-- On OPTIONAL reduce production built_in_call -> MD5 LPAR expression RPAR
-- On OFFSET reduce production built_in_call -> MD5 LPAR expression RPAR
-- On NOW reduce production built_in_call -> MD5 LPAR expression RPAR
-- On NOTEQUAL reduce production built_in_call -> MD5 LPAR expression RPAR
-- On NOT reduce production built_in_call -> MD5 LPAR expression RPAR
-- On NIL reduce production built_in_call -> MD5 LPAR expression RPAR
-- On MONTH reduce production built_in_call -> MD5 LPAR expression RPAR
-- On MINUTES reduce production built_in_call -> MD5 LPAR expression RPAR
-- On MINUS reduce production built_in_call -> MD5 LPAR expression RPAR
-- On MIN reduce production built_in_call -> MD5 LPAR expression RPAR
-- On MD5 reduce production built_in_call -> MD5 LPAR expression RPAR
-- On MAX reduce production built_in_call -> MD5 LPAR expression RPAR
-- On LTE reduce production built_in_call -> MD5 LPAR expression RPAR
-- On LT reduce production built_in_call -> MD5 LPAR expression RPAR
-- On LPAR reduce production built_in_call -> MD5 LPAR expression RPAR
-- On LIMIT reduce production built_in_call -> MD5 LPAR expression RPAR
-- On LCASE reduce production built_in_call -> MD5 LPAR expression RPAR
-- On LBRACKET reduce production built_in_call -> MD5 LPAR expression RPAR
-- On LBRACE reduce production built_in_call -> MD5 LPAR expression RPAR
-- On LANGMATCHES reduce production built_in_call -> MD5 LPAR expression RPAR
-- On LANG reduce production built_in_call -> MD5 LPAR expression RPAR
-- On Iriref_ reduce production built_in_call -> MD5 LPAR expression RPAR
-- On Integer_positive reduce production built_in_call -> MD5 LPAR expression RPAR
-- On Integer_negative reduce production built_in_call -> MD5 LPAR expression RPAR
-- On Integer reduce production built_in_call -> MD5 LPAR expression RPAR
-- On ISURI reduce production built_in_call -> MD5 LPAR expression RPAR
-- On ISNUMERIC reduce production built_in_call -> MD5 LPAR expression RPAR
-- On ISLITERAL reduce production built_in_call -> MD5 LPAR expression RPAR
-- On ISIRI reduce production built_in_call -> MD5 LPAR expression RPAR
-- On ISBLANK reduce production built_in_call -> MD5 LPAR expression RPAR
-- On IRI reduce production built_in_call -> MD5 LPAR expression RPAR
-- On IN reduce production built_in_call -> MD5 LPAR expression RPAR
-- On IF reduce production built_in_call -> MD5 LPAR expression RPAR
-- On HOURS reduce production built_in_call -> MD5 LPAR expression RPAR
-- On HAVING reduce production built_in_call -> MD5 LPAR expression RPAR
-- On GTE reduce production built_in_call -> MD5 LPAR expression RPAR
-- On GT reduce production built_in_call -> MD5 LPAR expression RPAR
-- On GROUP_CONCAT reduce production built_in_call -> MD5 LPAR expression RPAR
-- On GRAPH reduce production built_in_call -> MD5 LPAR expression RPAR
-- On FLOOR reduce production built_in_call -> MD5 LPAR expression RPAR
-- On FILTER reduce production built_in_call -> MD5 LPAR expression RPAR
-- On EXISTS reduce production built_in_call -> MD5 LPAR expression RPAR
-- On EQUAL reduce production built_in_call -> MD5 LPAR expression RPAR
-- On EOF reduce production built_in_call -> MD5 LPAR expression RPAR
-- On ENCODE_FOR_URI reduce production built_in_call -> MD5 LPAR expression RPAR
-- On Double_positive reduce production built_in_call -> MD5 LPAR expression RPAR
-- On Double_negative reduce production built_in_call -> MD5 LPAR expression RPAR
-- On Double reduce production built_in_call -> MD5 LPAR expression RPAR
-- On Decimal_positive reduce production built_in_call -> MD5 LPAR expression RPAR
-- On Decimal_negative reduce production built_in_call -> MD5 LPAR expression RPAR
-- On Decimal reduce production built_in_call -> MD5 LPAR expression RPAR
-- On DOT reduce production built_in_call -> MD5 LPAR expression RPAR
-- On DESC reduce production built_in_call -> MD5 LPAR expression RPAR
-- On DAY reduce production built_in_call -> MD5 LPAR expression RPAR
-- On DATATYPE reduce production built_in_call -> MD5 LPAR expression RPAR
-- On COUNT reduce production built_in_call -> MD5 LPAR expression RPAR
-- On CONTAINS reduce production built_in_call -> MD5 LPAR expression RPAR
-- On CONCAT reduce production built_in_call -> MD5 LPAR expression RPAR
-- On COMMA reduce production built_in_call -> MD5 LPAR expression RPAR
-- On COALESCE reduce production built_in_call -> MD5 LPAR expression RPAR
-- On CEIL reduce production built_in_call -> MD5 LPAR expression RPAR
-- On Boolean reduce production built_in_call -> MD5 LPAR expression RPAR
-- On Blank_node_label reduce production built_in_call -> MD5 LPAR expression RPAR
-- On BOUND reduce production built_in_call -> MD5 LPAR expression RPAR
-- On BNODE reduce production built_in_call -> MD5 LPAR expression RPAR
-- On BIND reduce production built_in_call -> MD5 LPAR expression RPAR
-- On BANG reduce production built_in_call -> MD5 LPAR expression RPAR
-- On AVG reduce production built_in_call -> MD5 LPAR expression RPAR
-- On ASC reduce production built_in_call -> MD5 LPAR expression RPAR
-- On AS reduce production built_in_call -> MD5 LPAR expression RPAR
-- On ANON reduce production built_in_call -> MD5 LPAR expression RPAR
-- On AMPAMP reduce production built_in_call -> MD5 LPAR expression RPAR
-- On ABS reduce production built_in_call -> MD5 LPAR expression RPAR

State 436:
aggregate -> MIN LPAR option(DISTINCT) expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 437
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 437:
aggregate -> MIN LPAR option(DISTINCT) expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On Var2 reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On Var1 reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On VALUES reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On UUID reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On URI reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On UCASE reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On TZ reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On TIMEZONE reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On String_literal reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On SUM reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On SUBSTR reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On STRUUID reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On STRSTARTS reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On STRLEN reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On STRLANG reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On STRENDS reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On STRDT reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On STRBEFORE reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On STRAFTER reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On STR reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On STAR reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On SLASH reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On SHA512 reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On SHA384 reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On SHA256 reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On SHA1 reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On SERVICE reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On SEMICOLON reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On SECONDS reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On SAMPLE reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On SAMETERM reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On RPAR reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On ROUND reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On REPLACE reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On REGEX reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On RBRACE reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On RAND reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On Pname_ns reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On Pname_ln reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On PLUS reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On PIPEPIPE reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On ORDER reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On OPTIONAL reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On OFFSET reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On NOW reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On NOTEQUAL reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On NOT reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On NIL reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On MONTH reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On MINUTES reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On MINUS reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On MIN reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On MD5 reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On MAX reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On LTE reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On LT reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On LPAR reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On LIMIT reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On LCASE reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On LBRACKET reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On LBRACE reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On LANGMATCHES reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On LANG reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On Iriref_ reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On Integer_positive reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On Integer_negative reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On Integer reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On ISURI reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On ISNUMERIC reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On ISLITERAL reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On ISIRI reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On ISBLANK reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On IRI reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On IN reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On IF reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On HOURS reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On HAVING reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On GTE reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On GT reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On GROUP_CONCAT reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On GRAPH reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On FLOOR reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On FILTER reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On EXISTS reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On EQUAL reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On EOF reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On ENCODE_FOR_URI reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On Double_positive reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On Double_negative reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On Double reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On Decimal_positive reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On Decimal_negative reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On Decimal reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On DOT reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On DESC reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On DAY reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On DATATYPE reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On COUNT reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On CONTAINS reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On CONCAT reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On COMMA reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On COALESCE reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On CEIL reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On Boolean reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On Blank_node_label reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On BOUND reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On BNODE reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On BIND reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On BANG reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On AVG reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On ASC reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On AS reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On ANON reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On AMPAMP reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR
-- On ABS reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR

State 438:
numexp -> expression . STAR expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . SLASH expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . PLUS expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . MINUS expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . numeric_literal_positive [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . numeric_literal_negative [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> MINUS expression . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
-- On YEAR reduce production numexp -> MINUS expression
-- On Var2 reduce production numexp -> MINUS expression
-- On Var1 reduce production numexp -> MINUS expression
-- On VALUES reduce production numexp -> MINUS expression
-- On UUID reduce production numexp -> MINUS expression
-- On URI reduce production numexp -> MINUS expression
-- On UCASE reduce production numexp -> MINUS expression
-- On TZ reduce production numexp -> MINUS expression
-- On TIMEZONE reduce production numexp -> MINUS expression
-- On String_literal reduce production numexp -> MINUS expression
-- On SUM reduce production numexp -> MINUS expression
-- On SUBSTR reduce production numexp -> MINUS expression
-- On STRUUID reduce production numexp -> MINUS expression
-- On STRSTARTS reduce production numexp -> MINUS expression
-- On STRLEN reduce production numexp -> MINUS expression
-- On STRLANG reduce production numexp -> MINUS expression
-- On STRENDS reduce production numexp -> MINUS expression
-- On STRDT reduce production numexp -> MINUS expression
-- On STRBEFORE reduce production numexp -> MINUS expression
-- On STRAFTER reduce production numexp -> MINUS expression
-- On STR reduce production numexp -> MINUS expression
-- On STAR reduce production numexp -> MINUS expression
-- On SLASH reduce production numexp -> MINUS expression
-- On SHA512 reduce production numexp -> MINUS expression
-- On SHA384 reduce production numexp -> MINUS expression
-- On SHA256 reduce production numexp -> MINUS expression
-- On SHA1 reduce production numexp -> MINUS expression
-- On SEMICOLON reduce production numexp -> MINUS expression
-- On SECONDS reduce production numexp -> MINUS expression
-- On SAMPLE reduce production numexp -> MINUS expression
-- On SAMETERM reduce production numexp -> MINUS expression
-- On RPAR reduce production numexp -> MINUS expression
-- On ROUND reduce production numexp -> MINUS expression
-- On REPLACE reduce production numexp -> MINUS expression
-- On REGEX reduce production numexp -> MINUS expression
-- On RBRACE reduce production numexp -> MINUS expression
-- On RAND reduce production numexp -> MINUS expression
-- On Pname_ns reduce production numexp -> MINUS expression
-- On Pname_ln reduce production numexp -> MINUS expression
-- On PLUS reduce production numexp -> MINUS expression
-- On PIPEPIPE reduce production numexp -> MINUS expression
-- On ORDER reduce production numexp -> MINUS expression
-- On OFFSET reduce production numexp -> MINUS expression
-- On NOW reduce production numexp -> MINUS expression
-- On NOTEQUAL reduce production numexp -> MINUS expression
-- On NOT reduce production numexp -> MINUS expression
-- On MONTH reduce production numexp -> MINUS expression
-- On MINUTES reduce production numexp -> MINUS expression
-- On MINUS reduce production numexp -> MINUS expression
-- On MIN reduce production numexp -> MINUS expression
-- On MD5 reduce production numexp -> MINUS expression
-- On MAX reduce production numexp -> MINUS expression
-- On LTE reduce production numexp -> MINUS expression
-- On LT reduce production numexp -> MINUS expression
-- On LPAR reduce production numexp -> MINUS expression
-- On LIMIT reduce production numexp -> MINUS expression
-- On LCASE reduce production numexp -> MINUS expression
-- On LANGMATCHES reduce production numexp -> MINUS expression
-- On LANG reduce production numexp -> MINUS expression
-- On Iriref_ reduce production numexp -> MINUS expression
-- On Integer_positive reduce production numexp -> MINUS expression
-- On Integer_negative reduce production numexp -> MINUS expression
-- On Integer reduce production numexp -> MINUS expression
-- On ISURI reduce production numexp -> MINUS expression
-- On ISNUMERIC reduce production numexp -> MINUS expression
-- On ISLITERAL reduce production numexp -> MINUS expression
-- On ISIRI reduce production numexp -> MINUS expression
-- On ISBLANK reduce production numexp -> MINUS expression
-- On IRI reduce production numexp -> MINUS expression
-- On IN reduce production numexp -> MINUS expression
-- On IF reduce production numexp -> MINUS expression
-- On HOURS reduce production numexp -> MINUS expression
-- On HAVING reduce production numexp -> MINUS expression
-- On GTE reduce production numexp -> MINUS expression
-- On GT reduce production numexp -> MINUS expression
-- On GROUP_CONCAT reduce production numexp -> MINUS expression
-- On FLOOR reduce production numexp -> MINUS expression
-- On EXISTS reduce production numexp -> MINUS expression
-- On EQUAL reduce production numexp -> MINUS expression
-- On EOF reduce production numexp -> MINUS expression
-- On ENCODE_FOR_URI reduce production numexp -> MINUS expression
-- On Double_positive reduce production numexp -> MINUS expression
-- On Double_negative reduce production numexp -> MINUS expression
-- On Double reduce production numexp -> MINUS expression
-- On Decimal_positive reduce production numexp -> MINUS expression
-- On Decimal_negative reduce production numexp -> MINUS expression
-- On Decimal reduce production numexp -> MINUS expression
-- On DAY reduce production numexp -> MINUS expression
-- On DATATYPE reduce production numexp -> MINUS expression
-- On COUNT reduce production numexp -> MINUS expression
-- On CONTAINS reduce production numexp -> MINUS expression
-- On CONCAT reduce production numexp -> MINUS expression
-- On COMMA reduce production numexp -> MINUS expression
-- On COALESCE reduce production numexp -> MINUS expression
-- On CEIL reduce production numexp -> MINUS expression
-- On Boolean reduce production numexp -> MINUS expression
-- On BOUND reduce production numexp -> MINUS expression
-- On BNODE reduce production numexp -> MINUS expression
-- On BANG reduce production numexp -> MINUS expression
-- On AVG reduce production numexp -> MINUS expression
-- On AS reduce production numexp -> MINUS expression
-- On AMPAMP reduce production numexp -> MINUS expression
-- On ABS reduce production numexp -> MINUS expression
** Conflict on Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative

State 439:
built_in_call -> MINUTES LPAR expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 440
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 440:
built_in_call -> MINUTES LPAR expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On Var2 reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On Var1 reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On VALUES reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On UUID reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On URI reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On UCASE reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On TZ reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On TIMEZONE reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On String_literal reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On SUM reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On SUBSTR reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On STRUUID reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On STRSTARTS reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On STRLEN reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On STRLANG reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On STRENDS reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On STRDT reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On STRBEFORE reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On STRAFTER reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On STR reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On STAR reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On SLASH reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On SHA512 reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On SHA384 reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On SHA256 reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On SHA1 reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On SERVICE reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On SEMICOLON reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On SECONDS reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On SAMPLE reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On SAMETERM reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On RPAR reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On ROUND reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On REPLACE reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On REGEX reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On RBRACE reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On RAND reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On Pname_ns reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On Pname_ln reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On PLUS reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On PIPEPIPE reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On ORDER reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On OPTIONAL reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On OFFSET reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On NOW reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On NOTEQUAL reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On NOT reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On NIL reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On MONTH reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On MINUTES reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On MINUS reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On MIN reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On MD5 reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On MAX reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On LTE reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On LT reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On LPAR reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On LIMIT reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On LCASE reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On LBRACKET reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On LBRACE reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On LANGMATCHES reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On LANG reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On Iriref_ reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On Integer_positive reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On Integer_negative reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On Integer reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On ISURI reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On ISNUMERIC reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On ISLITERAL reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On ISIRI reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On ISBLANK reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On IRI reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On IN reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On IF reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On HOURS reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On HAVING reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On GTE reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On GT reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On GROUP_CONCAT reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On GRAPH reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On FLOOR reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On FILTER reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On EXISTS reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On EQUAL reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On EOF reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On ENCODE_FOR_URI reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On Double_positive reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On Double_negative reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On Double reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On Decimal_positive reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On Decimal_negative reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On Decimal reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On DOT reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On DESC reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On DAY reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On DATATYPE reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On COUNT reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On CONTAINS reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On CONCAT reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On COMMA reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On COALESCE reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On CEIL reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On Boolean reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On Blank_node_label reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On BOUND reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On BNODE reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On BIND reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On BANG reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On AVG reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On ASC reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On AS reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On ANON reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On AMPAMP reduce production built_in_call -> MINUTES LPAR expression RPAR
-- On ABS reduce production built_in_call -> MINUTES LPAR expression RPAR

State 441:
built_in_call -> MONTH LPAR expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 442
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 442:
built_in_call -> MONTH LPAR expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production built_in_call -> MONTH LPAR expression RPAR
-- On Var2 reduce production built_in_call -> MONTH LPAR expression RPAR
-- On Var1 reduce production built_in_call -> MONTH LPAR expression RPAR
-- On VALUES reduce production built_in_call -> MONTH LPAR expression RPAR
-- On UUID reduce production built_in_call -> MONTH LPAR expression RPAR
-- On URI reduce production built_in_call -> MONTH LPAR expression RPAR
-- On UCASE reduce production built_in_call -> MONTH LPAR expression RPAR
-- On TZ reduce production built_in_call -> MONTH LPAR expression RPAR
-- On TIMEZONE reduce production built_in_call -> MONTH LPAR expression RPAR
-- On String_literal reduce production built_in_call -> MONTH LPAR expression RPAR
-- On SUM reduce production built_in_call -> MONTH LPAR expression RPAR
-- On SUBSTR reduce production built_in_call -> MONTH LPAR expression RPAR
-- On STRUUID reduce production built_in_call -> MONTH LPAR expression RPAR
-- On STRSTARTS reduce production built_in_call -> MONTH LPAR expression RPAR
-- On STRLEN reduce production built_in_call -> MONTH LPAR expression RPAR
-- On STRLANG reduce production built_in_call -> MONTH LPAR expression RPAR
-- On STRENDS reduce production built_in_call -> MONTH LPAR expression RPAR
-- On STRDT reduce production built_in_call -> MONTH LPAR expression RPAR
-- On STRBEFORE reduce production built_in_call -> MONTH LPAR expression RPAR
-- On STRAFTER reduce production built_in_call -> MONTH LPAR expression RPAR
-- On STR reduce production built_in_call -> MONTH LPAR expression RPAR
-- On STAR reduce production built_in_call -> MONTH LPAR expression RPAR
-- On SLASH reduce production built_in_call -> MONTH LPAR expression RPAR
-- On SHA512 reduce production built_in_call -> MONTH LPAR expression RPAR
-- On SHA384 reduce production built_in_call -> MONTH LPAR expression RPAR
-- On SHA256 reduce production built_in_call -> MONTH LPAR expression RPAR
-- On SHA1 reduce production built_in_call -> MONTH LPAR expression RPAR
-- On SERVICE reduce production built_in_call -> MONTH LPAR expression RPAR
-- On SEMICOLON reduce production built_in_call -> MONTH LPAR expression RPAR
-- On SECONDS reduce production built_in_call -> MONTH LPAR expression RPAR
-- On SAMPLE reduce production built_in_call -> MONTH LPAR expression RPAR
-- On SAMETERM reduce production built_in_call -> MONTH LPAR expression RPAR
-- On RPAR reduce production built_in_call -> MONTH LPAR expression RPAR
-- On ROUND reduce production built_in_call -> MONTH LPAR expression RPAR
-- On REPLACE reduce production built_in_call -> MONTH LPAR expression RPAR
-- On REGEX reduce production built_in_call -> MONTH LPAR expression RPAR
-- On RBRACE reduce production built_in_call -> MONTH LPAR expression RPAR
-- On RAND reduce production built_in_call -> MONTH LPAR expression RPAR
-- On Pname_ns reduce production built_in_call -> MONTH LPAR expression RPAR
-- On Pname_ln reduce production built_in_call -> MONTH LPAR expression RPAR
-- On PLUS reduce production built_in_call -> MONTH LPAR expression RPAR
-- On PIPEPIPE reduce production built_in_call -> MONTH LPAR expression RPAR
-- On ORDER reduce production built_in_call -> MONTH LPAR expression RPAR
-- On OPTIONAL reduce production built_in_call -> MONTH LPAR expression RPAR
-- On OFFSET reduce production built_in_call -> MONTH LPAR expression RPAR
-- On NOW reduce production built_in_call -> MONTH LPAR expression RPAR
-- On NOTEQUAL reduce production built_in_call -> MONTH LPAR expression RPAR
-- On NOT reduce production built_in_call -> MONTH LPAR expression RPAR
-- On NIL reduce production built_in_call -> MONTH LPAR expression RPAR
-- On MONTH reduce production built_in_call -> MONTH LPAR expression RPAR
-- On MINUTES reduce production built_in_call -> MONTH LPAR expression RPAR
-- On MINUS reduce production built_in_call -> MONTH LPAR expression RPAR
-- On MIN reduce production built_in_call -> MONTH LPAR expression RPAR
-- On MD5 reduce production built_in_call -> MONTH LPAR expression RPAR
-- On MAX reduce production built_in_call -> MONTH LPAR expression RPAR
-- On LTE reduce production built_in_call -> MONTH LPAR expression RPAR
-- On LT reduce production built_in_call -> MONTH LPAR expression RPAR
-- On LPAR reduce production built_in_call -> MONTH LPAR expression RPAR
-- On LIMIT reduce production built_in_call -> MONTH LPAR expression RPAR
-- On LCASE reduce production built_in_call -> MONTH LPAR expression RPAR
-- On LBRACKET reduce production built_in_call -> MONTH LPAR expression RPAR
-- On LBRACE reduce production built_in_call -> MONTH LPAR expression RPAR
-- On LANGMATCHES reduce production built_in_call -> MONTH LPAR expression RPAR
-- On LANG reduce production built_in_call -> MONTH LPAR expression RPAR
-- On Iriref_ reduce production built_in_call -> MONTH LPAR expression RPAR
-- On Integer_positive reduce production built_in_call -> MONTH LPAR expression RPAR
-- On Integer_negative reduce production built_in_call -> MONTH LPAR expression RPAR
-- On Integer reduce production built_in_call -> MONTH LPAR expression RPAR
-- On ISURI reduce production built_in_call -> MONTH LPAR expression RPAR
-- On ISNUMERIC reduce production built_in_call -> MONTH LPAR expression RPAR
-- On ISLITERAL reduce production built_in_call -> MONTH LPAR expression RPAR
-- On ISIRI reduce production built_in_call -> MONTH LPAR expression RPAR
-- On ISBLANK reduce production built_in_call -> MONTH LPAR expression RPAR
-- On IRI reduce production built_in_call -> MONTH LPAR expression RPAR
-- On IN reduce production built_in_call -> MONTH LPAR expression RPAR
-- On IF reduce production built_in_call -> MONTH LPAR expression RPAR
-- On HOURS reduce production built_in_call -> MONTH LPAR expression RPAR
-- On HAVING reduce production built_in_call -> MONTH LPAR expression RPAR
-- On GTE reduce production built_in_call -> MONTH LPAR expression RPAR
-- On GT reduce production built_in_call -> MONTH LPAR expression RPAR
-- On GROUP_CONCAT reduce production built_in_call -> MONTH LPAR expression RPAR
-- On GRAPH reduce production built_in_call -> MONTH LPAR expression RPAR
-- On FLOOR reduce production built_in_call -> MONTH LPAR expression RPAR
-- On FILTER reduce production built_in_call -> MONTH LPAR expression RPAR
-- On EXISTS reduce production built_in_call -> MONTH LPAR expression RPAR
-- On EQUAL reduce production built_in_call -> MONTH LPAR expression RPAR
-- On EOF reduce production built_in_call -> MONTH LPAR expression RPAR
-- On ENCODE_FOR_URI reduce production built_in_call -> MONTH LPAR expression RPAR
-- On Double_positive reduce production built_in_call -> MONTH LPAR expression RPAR
-- On Double_negative reduce production built_in_call -> MONTH LPAR expression RPAR
-- On Double reduce production built_in_call -> MONTH LPAR expression RPAR
-- On Decimal_positive reduce production built_in_call -> MONTH LPAR expression RPAR
-- On Decimal_negative reduce production built_in_call -> MONTH LPAR expression RPAR
-- On Decimal reduce production built_in_call -> MONTH LPAR expression RPAR
-- On DOT reduce production built_in_call -> MONTH LPAR expression RPAR
-- On DESC reduce production built_in_call -> MONTH LPAR expression RPAR
-- On DAY reduce production built_in_call -> MONTH LPAR expression RPAR
-- On DATATYPE reduce production built_in_call -> MONTH LPAR expression RPAR
-- On COUNT reduce production built_in_call -> MONTH LPAR expression RPAR
-- On CONTAINS reduce production built_in_call -> MONTH LPAR expression RPAR
-- On CONCAT reduce production built_in_call -> MONTH LPAR expression RPAR
-- On COMMA reduce production built_in_call -> MONTH LPAR expression RPAR
-- On COALESCE reduce production built_in_call -> MONTH LPAR expression RPAR
-- On CEIL reduce production built_in_call -> MONTH LPAR expression RPAR
-- On Boolean reduce production built_in_call -> MONTH LPAR expression RPAR
-- On Blank_node_label reduce production built_in_call -> MONTH LPAR expression RPAR
-- On BOUND reduce production built_in_call -> MONTH LPAR expression RPAR
-- On BNODE reduce production built_in_call -> MONTH LPAR expression RPAR
-- On BIND reduce production built_in_call -> MONTH LPAR expression RPAR
-- On BANG reduce production built_in_call -> MONTH LPAR expression RPAR
-- On AVG reduce production built_in_call -> MONTH LPAR expression RPAR
-- On ASC reduce production built_in_call -> MONTH LPAR expression RPAR
-- On AS reduce production built_in_call -> MONTH LPAR expression RPAR
-- On ANON reduce production built_in_call -> MONTH LPAR expression RPAR
-- On AMPAMP reduce production built_in_call -> MONTH LPAR expression RPAR
-- On ABS reduce production built_in_call -> MONTH LPAR expression RPAR

State 443:
group_var -> var . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS ORDER OFFSET NOW NOT MONTH MINUTES MINUS MIN MD5 MAX LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IF HOURS HAVING GROUP_CONCAT FLOOR EXISTS EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL Boolean BOUND BNODE BANG AVG ABS ]
primary_expression -> var . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
-- On YEAR reduce production group_var -> var
-- On YEAR reduce production primary_expression -> var
-- On Var2 reduce production group_var -> var
-- On Var2 reduce production primary_expression -> var
-- On Var1 reduce production group_var -> var
-- On Var1 reduce production primary_expression -> var
-- On VALUES reduce production group_var -> var
-- On VALUES reduce production primary_expression -> var
-- On UUID reduce production group_var -> var
-- On UUID reduce production primary_expression -> var
-- On URI reduce production group_var -> var
-- On URI reduce production primary_expression -> var
-- On UCASE reduce production group_var -> var
-- On UCASE reduce production primary_expression -> var
-- On TZ reduce production group_var -> var
-- On TZ reduce production primary_expression -> var
-- On TIMEZONE reduce production group_var -> var
-- On TIMEZONE reduce production primary_expression -> var
-- On String_literal reduce production group_var -> var
-- On String_literal reduce production primary_expression -> var
-- On SUM reduce production group_var -> var
-- On SUM reduce production primary_expression -> var
-- On SUBSTR reduce production group_var -> var
-- On SUBSTR reduce production primary_expression -> var
-- On STRUUID reduce production group_var -> var
-- On STRUUID reduce production primary_expression -> var
-- On STRSTARTS reduce production group_var -> var
-- On STRSTARTS reduce production primary_expression -> var
-- On STRLEN reduce production group_var -> var
-- On STRLEN reduce production primary_expression -> var
-- On STRLANG reduce production group_var -> var
-- On STRLANG reduce production primary_expression -> var
-- On STRENDS reduce production group_var -> var
-- On STRENDS reduce production primary_expression -> var
-- On STRDT reduce production group_var -> var
-- On STRDT reduce production primary_expression -> var
-- On STRBEFORE reduce production group_var -> var
-- On STRBEFORE reduce production primary_expression -> var
-- On STRAFTER reduce production group_var -> var
-- On STRAFTER reduce production primary_expression -> var
-- On STR reduce production group_var -> var
-- On STR reduce production primary_expression -> var
-- On STAR reduce production primary_expression -> var
-- On SLASH reduce production primary_expression -> var
-- On SHA512 reduce production group_var -> var
-- On SHA512 reduce production primary_expression -> var
-- On SHA384 reduce production group_var -> var
-- On SHA384 reduce production primary_expression -> var
-- On SHA256 reduce production group_var -> var
-- On SHA256 reduce production primary_expression -> var
-- On SHA1 reduce production group_var -> var
-- On SHA1 reduce production primary_expression -> var
-- On SECONDS reduce production group_var -> var
-- On SECONDS reduce production primary_expression -> var
-- On SAMPLE reduce production group_var -> var
-- On SAMPLE reduce production primary_expression -> var
-- On SAMETERM reduce production group_var -> var
-- On SAMETERM reduce production primary_expression -> var
-- On ROUND reduce production group_var -> var
-- On ROUND reduce production primary_expression -> var
-- On REPLACE reduce production group_var -> var
-- On REPLACE reduce production primary_expression -> var
-- On REGEX reduce production group_var -> var
-- On REGEX reduce production primary_expression -> var
-- On RBRACE reduce production group_var -> var
-- On RBRACE reduce production primary_expression -> var
-- On RAND reduce production group_var -> var
-- On RAND reduce production primary_expression -> var
-- On Pname_ns reduce production group_var -> var
-- On Pname_ns reduce production primary_expression -> var
-- On Pname_ln reduce production group_var -> var
-- On Pname_ln reduce production primary_expression -> var
-- On PLUS reduce production group_var -> var
-- On PLUS reduce production primary_expression -> var
-- On PIPEPIPE reduce production primary_expression -> var
-- On ORDER reduce production group_var -> var
-- On ORDER reduce production primary_expression -> var
-- On OFFSET reduce production group_var -> var
-- On OFFSET reduce production primary_expression -> var
-- On NOW reduce production group_var -> var
-- On NOW reduce production primary_expression -> var
-- On NOTEQUAL reduce production primary_expression -> var
-- On NOT reduce production group_var -> var
-- On NOT reduce production primary_expression -> var
-- On MONTH reduce production group_var -> var
-- On MONTH reduce production primary_expression -> var
-- On MINUTES reduce production group_var -> var
-- On MINUTES reduce production primary_expression -> var
-- On MINUS reduce production group_var -> var
-- On MINUS reduce production primary_expression -> var
-- On MIN reduce production group_var -> var
-- On MIN reduce production primary_expression -> var
-- On MD5 reduce production group_var -> var
-- On MD5 reduce production primary_expression -> var
-- On MAX reduce production group_var -> var
-- On MAX reduce production primary_expression -> var
-- On LTE reduce production primary_expression -> var
-- On LT reduce production primary_expression -> var
-- On LPAR reduce production group_var -> var
-- On LPAR reduce production primary_expression -> var
-- On LIMIT reduce production group_var -> var
-- On LIMIT reduce production primary_expression -> var
-- On LCASE reduce production group_var -> var
-- On LCASE reduce production primary_expression -> var
-- On LANGMATCHES reduce production group_var -> var
-- On LANGMATCHES reduce production primary_expression -> var
-- On LANG reduce production group_var -> var
-- On LANG reduce production primary_expression -> var
-- On Iriref_ reduce production group_var -> var
-- On Iriref_ reduce production primary_expression -> var
-- On Integer_positive reduce production group_var -> var
-- On Integer_positive reduce production primary_expression -> var
-- On Integer_negative reduce production group_var -> var
-- On Integer_negative reduce production primary_expression -> var
-- On Integer reduce production group_var -> var
-- On Integer reduce production primary_expression -> var
-- On ISURI reduce production group_var -> var
-- On ISURI reduce production primary_expression -> var
-- On ISNUMERIC reduce production group_var -> var
-- On ISNUMERIC reduce production primary_expression -> var
-- On ISLITERAL reduce production group_var -> var
-- On ISLITERAL reduce production primary_expression -> var
-- On ISIRI reduce production group_var -> var
-- On ISIRI reduce production primary_expression -> var
-- On ISBLANK reduce production group_var -> var
-- On ISBLANK reduce production primary_expression -> var
-- On IRI reduce production group_var -> var
-- On IRI reduce production primary_expression -> var
-- On IN reduce production primary_expression -> var
-- On IF reduce production group_var -> var
-- On IF reduce production primary_expression -> var
-- On HOURS reduce production group_var -> var
-- On HOURS reduce production primary_expression -> var
-- On HAVING reduce production group_var -> var
-- On HAVING reduce production primary_expression -> var
-- On GTE reduce production primary_expression -> var
-- On GT reduce production primary_expression -> var
-- On GROUP_CONCAT reduce production group_var -> var
-- On GROUP_CONCAT reduce production primary_expression -> var
-- On FLOOR reduce production group_var -> var
-- On FLOOR reduce production primary_expression -> var
-- On EXISTS reduce production group_var -> var
-- On EXISTS reduce production primary_expression -> var
-- On EQUAL reduce production primary_expression -> var
-- On EOF reduce production group_var -> var
-- On EOF reduce production primary_expression -> var
-- On ENCODE_FOR_URI reduce production group_var -> var
-- On ENCODE_FOR_URI reduce production primary_expression -> var
-- On Double_positive reduce production group_var -> var
-- On Double_positive reduce production primary_expression -> var
-- On Double_negative reduce production group_var -> var
-- On Double_negative reduce production primary_expression -> var
-- On Double reduce production group_var -> var
-- On Double reduce production primary_expression -> var
-- On Decimal_positive reduce production group_var -> var
-- On Decimal_positive reduce production primary_expression -> var
-- On Decimal_negative reduce production group_var -> var
-- On Decimal_negative reduce production primary_expression -> var
-- On Decimal reduce production group_var -> var
-- On Decimal reduce production primary_expression -> var
-- On DAY reduce production group_var -> var
-- On DAY reduce production primary_expression -> var
-- On DATATYPE reduce production group_var -> var
-- On DATATYPE reduce production primary_expression -> var
-- On COUNT reduce production group_var -> var
-- On COUNT reduce production primary_expression -> var
-- On CONTAINS reduce production group_var -> var
-- On CONTAINS reduce production primary_expression -> var
-- On CONCAT reduce production group_var -> var
-- On CONCAT reduce production primary_expression -> var
-- On COALESCE reduce production group_var -> var
-- On COALESCE reduce production primary_expression -> var
-- On CEIL reduce production group_var -> var
-- On CEIL reduce production primary_expression -> var
-- On Boolean reduce production group_var -> var
-- On Boolean reduce production primary_expression -> var
-- On BOUND reduce production group_var -> var
-- On BOUND reduce production primary_expression -> var
-- On BNODE reduce production group_var -> var
-- On BNODE reduce production primary_expression -> var
-- On BANG reduce production group_var -> var
-- On BANG reduce production primary_expression -> var
-- On AVG reduce production group_var -> var
-- On AVG reduce production primary_expression -> var
-- On AS reduce production primary_expression -> var
-- On AMPAMP reduce production primary_expression -> var
-- On ABS reduce production group_var -> var
-- On ABS reduce production primary_expression -> var
** Conflict on YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS ORDER OFFSET NOW NOT MONTH MINUTES MINUS MIN MD5 MAX LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IF HOURS HAVING GROUP_CONCAT FLOOR EXISTS EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL Boolean BOUND BNODE BANG AVG ABS

State 444:
group_clause -> GROUP BY nonempty_list(group_condition) . [ VALUES RBRACE ORDER OFFSET LIMIT HAVING EOF ]
-- On VALUES reduce production group_clause -> GROUP BY nonempty_list(group_condition)
-- On RBRACE reduce production group_clause -> GROUP BY nonempty_list(group_condition)
-- On ORDER reduce production group_clause -> GROUP BY nonempty_list(group_condition)
-- On OFFSET reduce production group_clause -> GROUP BY nonempty_list(group_condition)
-- On LIMIT reduce production group_clause -> GROUP BY nonempty_list(group_condition)
-- On HAVING reduce production group_clause -> GROUP BY nonempty_list(group_condition)
-- On EOF reduce production group_clause -> GROUP BY nonempty_list(group_condition)

State 445:
group_condition -> group_var . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS ORDER OFFSET NOW NOT MONTH MINUTES MINUS MIN MD5 MAX LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IF HOURS HAVING GROUP_CONCAT FLOOR EXISTS EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL Boolean BOUND BNODE BANG AVG ABS ]
-- On YEAR reduce production group_condition -> group_var
-- On Var2 reduce production group_condition -> group_var
-- On Var1 reduce production group_condition -> group_var
-- On VALUES reduce production group_condition -> group_var
-- On UUID reduce production group_condition -> group_var
-- On URI reduce production group_condition -> group_var
-- On UCASE reduce production group_condition -> group_var
-- On TZ reduce production group_condition -> group_var
-- On TIMEZONE reduce production group_condition -> group_var
-- On String_literal reduce production group_condition -> group_var
-- On SUM reduce production group_condition -> group_var
-- On SUBSTR reduce production group_condition -> group_var
-- On STRUUID reduce production group_condition -> group_var
-- On STRSTARTS reduce production group_condition -> group_var
-- On STRLEN reduce production group_condition -> group_var
-- On STRLANG reduce production group_condition -> group_var
-- On STRENDS reduce production group_condition -> group_var
-- On STRDT reduce production group_condition -> group_var
-- On STRBEFORE reduce production group_condition -> group_var
-- On STRAFTER reduce production group_condition -> group_var
-- On STR reduce production group_condition -> group_var
-- On SHA512 reduce production group_condition -> group_var
-- On SHA384 reduce production group_condition -> group_var
-- On SHA256 reduce production group_condition -> group_var
-- On SHA1 reduce production group_condition -> group_var
-- On SECONDS reduce production group_condition -> group_var
-- On SAMPLE reduce production group_condition -> group_var
-- On SAMETERM reduce production group_condition -> group_var
-- On ROUND reduce production group_condition -> group_var
-- On REPLACE reduce production group_condition -> group_var
-- On REGEX reduce production group_condition -> group_var
-- On RBRACE reduce production group_condition -> group_var
-- On RAND reduce production group_condition -> group_var
-- On Pname_ns reduce production group_condition -> group_var
-- On Pname_ln reduce production group_condition -> group_var
-- On PLUS reduce production group_condition -> group_var
-- On ORDER reduce production group_condition -> group_var
-- On OFFSET reduce production group_condition -> group_var
-- On NOW reduce production group_condition -> group_var
-- On NOT reduce production group_condition -> group_var
-- On MONTH reduce production group_condition -> group_var
-- On MINUTES reduce production group_condition -> group_var
-- On MINUS reduce production group_condition -> group_var
-- On MIN reduce production group_condition -> group_var
-- On MD5 reduce production group_condition -> group_var
-- On MAX reduce production group_condition -> group_var
-- On LPAR reduce production group_condition -> group_var
-- On LIMIT reduce production group_condition -> group_var
-- On LCASE reduce production group_condition -> group_var
-- On LANGMATCHES reduce production group_condition -> group_var
-- On LANG reduce production group_condition -> group_var
-- On Iriref_ reduce production group_condition -> group_var
-- On Integer_positive reduce production group_condition -> group_var
-- On Integer_negative reduce production group_condition -> group_var
-- On Integer reduce production group_condition -> group_var
-- On ISURI reduce production group_condition -> group_var
-- On ISNUMERIC reduce production group_condition -> group_var
-- On ISLITERAL reduce production group_condition -> group_var
-- On ISIRI reduce production group_condition -> group_var
-- On ISBLANK reduce production group_condition -> group_var
-- On IRI reduce production group_condition -> group_var
-- On IF reduce production group_condition -> group_var
-- On HOURS reduce production group_condition -> group_var
-- On HAVING reduce production group_condition -> group_var
-- On GROUP_CONCAT reduce production group_condition -> group_var
-- On FLOOR reduce production group_condition -> group_var
-- On EXISTS reduce production group_condition -> group_var
-- On EOF reduce production group_condition -> group_var
-- On ENCODE_FOR_URI reduce production group_condition -> group_var
-- On Double_positive reduce production group_condition -> group_var
-- On Double_negative reduce production group_condition -> group_var
-- On Double reduce production group_condition -> group_var
-- On Decimal_positive reduce production group_condition -> group_var
-- On Decimal_negative reduce production group_condition -> group_var
-- On Decimal reduce production group_condition -> group_var
-- On DAY reduce production group_condition -> group_var
-- On DATATYPE reduce production group_condition -> group_var
-- On COUNT reduce production group_condition -> group_var
-- On CONTAINS reduce production group_condition -> group_var
-- On CONCAT reduce production group_condition -> group_var
-- On COALESCE reduce production group_condition -> group_var
-- On CEIL reduce production group_condition -> group_var
-- On Boolean reduce production group_condition -> group_var
-- On BOUND reduce production group_condition -> group_var
-- On BNODE reduce production group_condition -> group_var
-- On BANG reduce production group_condition -> group_var
-- On AVG reduce production group_condition -> group_var
-- On ABS reduce production group_condition -> group_var

State 446:
nonempty_list(group_condition) -> group_condition . [ VALUES RBRACE ORDER OFFSET LIMIT HAVING EOF ]
nonempty_list(group_condition) -> group_condition . nonempty_list(group_condition) [ VALUES RBRACE ORDER OFFSET LIMIT HAVING EOF ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 443
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On nonempty_list(group_condition) shift to state 447
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On group_var shift to state 445
-- On group_condition shift to state 446
-- On function_call shift to state 448
-- On expression shift to state 449
-- On built_in_call shift to state 452
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
-- On VALUES reduce production nonempty_list(group_condition) -> group_condition
-- On RBRACE reduce production nonempty_list(group_condition) -> group_condition
-- On ORDER reduce production nonempty_list(group_condition) -> group_condition
-- On OFFSET reduce production nonempty_list(group_condition) -> group_condition
-- On LIMIT reduce production nonempty_list(group_condition) -> group_condition
-- On HAVING reduce production nonempty_list(group_condition) -> group_condition
-- On EOF reduce production nonempty_list(group_condition) -> group_condition

State 447:
nonempty_list(group_condition) -> group_condition nonempty_list(group_condition) . [ VALUES RBRACE ORDER OFFSET LIMIT HAVING EOF ]
-- On VALUES reduce production nonempty_list(group_condition) -> group_condition nonempty_list(group_condition)
-- On RBRACE reduce production nonempty_list(group_condition) -> group_condition nonempty_list(group_condition)
-- On ORDER reduce production nonempty_list(group_condition) -> group_condition nonempty_list(group_condition)
-- On OFFSET reduce production nonempty_list(group_condition) -> group_condition nonempty_list(group_condition)
-- On LIMIT reduce production nonempty_list(group_condition) -> group_condition nonempty_list(group_condition)
-- On HAVING reduce production nonempty_list(group_condition) -> group_condition nonempty_list(group_condition)
-- On EOF reduce production nonempty_list(group_condition) -> group_condition nonempty_list(group_condition)

State 448:
group_condition -> function_call . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS ORDER OFFSET NOW NOT MONTH MINUTES MINUS MIN MD5 MAX LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IF HOURS HAVING GROUP_CONCAT FLOOR EXISTS EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL Boolean BOUND BNODE BANG AVG ABS ]
iri_or_function -> function_call . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
-- On YEAR reduce production group_condition -> function_call
-- On YEAR reduce production iri_or_function -> function_call
-- On Var2 reduce production group_condition -> function_call
-- On Var2 reduce production iri_or_function -> function_call
-- On Var1 reduce production group_condition -> function_call
-- On Var1 reduce production iri_or_function -> function_call
-- On VALUES reduce production group_condition -> function_call
-- On VALUES reduce production iri_or_function -> function_call
-- On UUID reduce production group_condition -> function_call
-- On UUID reduce production iri_or_function -> function_call
-- On URI reduce production group_condition -> function_call
-- On URI reduce production iri_or_function -> function_call
-- On UCASE reduce production group_condition -> function_call
-- On UCASE reduce production iri_or_function -> function_call
-- On TZ reduce production group_condition -> function_call
-- On TZ reduce production iri_or_function -> function_call
-- On TIMEZONE reduce production group_condition -> function_call
-- On TIMEZONE reduce production iri_or_function -> function_call
-- On String_literal reduce production group_condition -> function_call
-- On String_literal reduce production iri_or_function -> function_call
-- On SUM reduce production group_condition -> function_call
-- On SUM reduce production iri_or_function -> function_call
-- On SUBSTR reduce production group_condition -> function_call
-- On SUBSTR reduce production iri_or_function -> function_call
-- On STRUUID reduce production group_condition -> function_call
-- On STRUUID reduce production iri_or_function -> function_call
-- On STRSTARTS reduce production group_condition -> function_call
-- On STRSTARTS reduce production iri_or_function -> function_call
-- On STRLEN reduce production group_condition -> function_call
-- On STRLEN reduce production iri_or_function -> function_call
-- On STRLANG reduce production group_condition -> function_call
-- On STRLANG reduce production iri_or_function -> function_call
-- On STRENDS reduce production group_condition -> function_call
-- On STRENDS reduce production iri_or_function -> function_call
-- On STRDT reduce production group_condition -> function_call
-- On STRDT reduce production iri_or_function -> function_call
-- On STRBEFORE reduce production group_condition -> function_call
-- On STRBEFORE reduce production iri_or_function -> function_call
-- On STRAFTER reduce production group_condition -> function_call
-- On STRAFTER reduce production iri_or_function -> function_call
-- On STR reduce production group_condition -> function_call
-- On STR reduce production iri_or_function -> function_call
-- On STAR reduce production iri_or_function -> function_call
-- On SLASH reduce production iri_or_function -> function_call
-- On SHA512 reduce production group_condition -> function_call
-- On SHA512 reduce production iri_or_function -> function_call
-- On SHA384 reduce production group_condition -> function_call
-- On SHA384 reduce production iri_or_function -> function_call
-- On SHA256 reduce production group_condition -> function_call
-- On SHA256 reduce production iri_or_function -> function_call
-- On SHA1 reduce production group_condition -> function_call
-- On SHA1 reduce production iri_or_function -> function_call
-- On SECONDS reduce production group_condition -> function_call
-- On SECONDS reduce production iri_or_function -> function_call
-- On SAMPLE reduce production group_condition -> function_call
-- On SAMPLE reduce production iri_or_function -> function_call
-- On SAMETERM reduce production group_condition -> function_call
-- On SAMETERM reduce production iri_or_function -> function_call
-- On ROUND reduce production group_condition -> function_call
-- On ROUND reduce production iri_or_function -> function_call
-- On REPLACE reduce production group_condition -> function_call
-- On REPLACE reduce production iri_or_function -> function_call
-- On REGEX reduce production group_condition -> function_call
-- On REGEX reduce production iri_or_function -> function_call
-- On RBRACE reduce production group_condition -> function_call
-- On RBRACE reduce production iri_or_function -> function_call
-- On RAND reduce production group_condition -> function_call
-- On RAND reduce production iri_or_function -> function_call
-- On Pname_ns reduce production group_condition -> function_call
-- On Pname_ns reduce production iri_or_function -> function_call
-- On Pname_ln reduce production group_condition -> function_call
-- On Pname_ln reduce production iri_or_function -> function_call
-- On PLUS reduce production group_condition -> function_call
-- On PLUS reduce production iri_or_function -> function_call
-- On PIPEPIPE reduce production iri_or_function -> function_call
-- On ORDER reduce production group_condition -> function_call
-- On ORDER reduce production iri_or_function -> function_call
-- On OFFSET reduce production group_condition -> function_call
-- On OFFSET reduce production iri_or_function -> function_call
-- On NOW reduce production group_condition -> function_call
-- On NOW reduce production iri_or_function -> function_call
-- On NOTEQUAL reduce production iri_or_function -> function_call
-- On NOT reduce production group_condition -> function_call
-- On NOT reduce production iri_or_function -> function_call
-- On MONTH reduce production group_condition -> function_call
-- On MONTH reduce production iri_or_function -> function_call
-- On MINUTES reduce production group_condition -> function_call
-- On MINUTES reduce production iri_or_function -> function_call
-- On MINUS reduce production group_condition -> function_call
-- On MINUS reduce production iri_or_function -> function_call
-- On MIN reduce production group_condition -> function_call
-- On MIN reduce production iri_or_function -> function_call
-- On MD5 reduce production group_condition -> function_call
-- On MD5 reduce production iri_or_function -> function_call
-- On MAX reduce production group_condition -> function_call
-- On MAX reduce production iri_or_function -> function_call
-- On LTE reduce production iri_or_function -> function_call
-- On LT reduce production iri_or_function -> function_call
-- On LPAR reduce production group_condition -> function_call
-- On LPAR reduce production iri_or_function -> function_call
-- On LIMIT reduce production group_condition -> function_call
-- On LIMIT reduce production iri_or_function -> function_call
-- On LCASE reduce production group_condition -> function_call
-- On LCASE reduce production iri_or_function -> function_call
-- On LANGMATCHES reduce production group_condition -> function_call
-- On LANGMATCHES reduce production iri_or_function -> function_call
-- On LANG reduce production group_condition -> function_call
-- On LANG reduce production iri_or_function -> function_call
-- On Iriref_ reduce production group_condition -> function_call
-- On Iriref_ reduce production iri_or_function -> function_call
-- On Integer_positive reduce production group_condition -> function_call
-- On Integer_positive reduce production iri_or_function -> function_call
-- On Integer_negative reduce production group_condition -> function_call
-- On Integer_negative reduce production iri_or_function -> function_call
-- On Integer reduce production group_condition -> function_call
-- On Integer reduce production iri_or_function -> function_call
-- On ISURI reduce production group_condition -> function_call
-- On ISURI reduce production iri_or_function -> function_call
-- On ISNUMERIC reduce production group_condition -> function_call
-- On ISNUMERIC reduce production iri_or_function -> function_call
-- On ISLITERAL reduce production group_condition -> function_call
-- On ISLITERAL reduce production iri_or_function -> function_call
-- On ISIRI reduce production group_condition -> function_call
-- On ISIRI reduce production iri_or_function -> function_call
-- On ISBLANK reduce production group_condition -> function_call
-- On ISBLANK reduce production iri_or_function -> function_call
-- On IRI reduce production group_condition -> function_call
-- On IRI reduce production iri_or_function -> function_call
-- On IN reduce production iri_or_function -> function_call
-- On IF reduce production group_condition -> function_call
-- On IF reduce production iri_or_function -> function_call
-- On HOURS reduce production group_condition -> function_call
-- On HOURS reduce production iri_or_function -> function_call
-- On HAVING reduce production group_condition -> function_call
-- On HAVING reduce production iri_or_function -> function_call
-- On GTE reduce production iri_or_function -> function_call
-- On GT reduce production iri_or_function -> function_call
-- On GROUP_CONCAT reduce production group_condition -> function_call
-- On GROUP_CONCAT reduce production iri_or_function -> function_call
-- On FLOOR reduce production group_condition -> function_call
-- On FLOOR reduce production iri_or_function -> function_call
-- On EXISTS reduce production group_condition -> function_call
-- On EXISTS reduce production iri_or_function -> function_call
-- On EQUAL reduce production iri_or_function -> function_call
-- On EOF reduce production group_condition -> function_call
-- On EOF reduce production iri_or_function -> function_call
-- On ENCODE_FOR_URI reduce production group_condition -> function_call
-- On ENCODE_FOR_URI reduce production iri_or_function -> function_call
-- On Double_positive reduce production group_condition -> function_call
-- On Double_positive reduce production iri_or_function -> function_call
-- On Double_negative reduce production group_condition -> function_call
-- On Double_negative reduce production iri_or_function -> function_call
-- On Double reduce production group_condition -> function_call
-- On Double reduce production iri_or_function -> function_call
-- On Decimal_positive reduce production group_condition -> function_call
-- On Decimal_positive reduce production iri_or_function -> function_call
-- On Decimal_negative reduce production group_condition -> function_call
-- On Decimal_negative reduce production iri_or_function -> function_call
-- On Decimal reduce production group_condition -> function_call
-- On Decimal reduce production iri_or_function -> function_call
-- On DAY reduce production group_condition -> function_call
-- On DAY reduce production iri_or_function -> function_call
-- On DATATYPE reduce production group_condition -> function_call
-- On DATATYPE reduce production iri_or_function -> function_call
-- On COUNT reduce production group_condition -> function_call
-- On COUNT reduce production iri_or_function -> function_call
-- On CONTAINS reduce production group_condition -> function_call
-- On CONTAINS reduce production iri_or_function -> function_call
-- On CONCAT reduce production group_condition -> function_call
-- On CONCAT reduce production iri_or_function -> function_call
-- On COALESCE reduce production group_condition -> function_call
-- On COALESCE reduce production iri_or_function -> function_call
-- On CEIL reduce production group_condition -> function_call
-- On CEIL reduce production iri_or_function -> function_call
-- On Boolean reduce production group_condition -> function_call
-- On Boolean reduce production iri_or_function -> function_call
-- On BOUND reduce production group_condition -> function_call
-- On BOUND reduce production iri_or_function -> function_call
-- On BNODE reduce production group_condition -> function_call
-- On BNODE reduce production iri_or_function -> function_call
-- On BANG reduce production group_condition -> function_call
-- On BANG reduce production iri_or_function -> function_call
-- On AVG reduce production group_condition -> function_call
-- On AVG reduce production iri_or_function -> function_call
-- On AS reduce production iri_or_function -> function_call
-- On AMPAMP reduce production iri_or_function -> function_call
-- On ABS reduce production group_condition -> function_call
-- On ABS reduce production iri_or_function -> function_call
** Conflict on YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS ORDER OFFSET NOW NOT MONTH MINUTES MINUS MIN MD5 MAX LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IF HOURS HAVING GROUP_CONCAT FLOOR EXISTS EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL Boolean BOUND BNODE BANG AVG ABS

State 449:
group_var -> expression . AS var [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS ORDER OFFSET NOW NOT MONTH MINUTES MINUS MIN MD5 MAX LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IF HOURS HAVING GROUP_CONCAT FLOOR EXISTS EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL Boolean BOUND BNODE BANG AVG ABS ]
group_var -> expression . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS ORDER OFFSET NOW NOT MONTH MINUTES MINUS MIN MD5 MAX LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IF HOURS HAVING GROUP_CONCAT FLOOR EXISTS EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL Boolean BOUND BNODE BANG AVG ABS ]
numexp -> expression . STAR expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . SLASH expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . PLUS expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . MINUS expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . numeric_literal_positive [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . numeric_literal_negative [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On AS shift to state 450
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
-- On YEAR reduce production group_var -> expression
-- On Var2 reduce production group_var -> expression
-- On Var1 reduce production group_var -> expression
-- On VALUES reduce production group_var -> expression
-- On UUID reduce production group_var -> expression
-- On URI reduce production group_var -> expression
-- On UCASE reduce production group_var -> expression
-- On TZ reduce production group_var -> expression
-- On TIMEZONE reduce production group_var -> expression
-- On String_literal reduce production group_var -> expression
-- On SUM reduce production group_var -> expression
-- On SUBSTR reduce production group_var -> expression
-- On STRUUID reduce production group_var -> expression
-- On STRSTARTS reduce production group_var -> expression
-- On STRLEN reduce production group_var -> expression
-- On STRLANG reduce production group_var -> expression
-- On STRENDS reduce production group_var -> expression
-- On STRDT reduce production group_var -> expression
-- On STRBEFORE reduce production group_var -> expression
-- On STRAFTER reduce production group_var -> expression
-- On STR reduce production group_var -> expression
-- On SHA512 reduce production group_var -> expression
-- On SHA384 reduce production group_var -> expression
-- On SHA256 reduce production group_var -> expression
-- On SHA1 reduce production group_var -> expression
-- On SECONDS reduce production group_var -> expression
-- On SAMPLE reduce production group_var -> expression
-- On SAMETERM reduce production group_var -> expression
-- On ROUND reduce production group_var -> expression
-- On REPLACE reduce production group_var -> expression
-- On REGEX reduce production group_var -> expression
-- On RBRACE reduce production group_var -> expression
-- On RAND reduce production group_var -> expression
-- On Pname_ns reduce production group_var -> expression
-- On Pname_ln reduce production group_var -> expression
-- On PLUS reduce production group_var -> expression
-- On ORDER reduce production group_var -> expression
-- On OFFSET reduce production group_var -> expression
-- On NOW reduce production group_var -> expression
-- On NOT reduce production group_var -> expression
-- On MONTH reduce production group_var -> expression
-- On MINUTES reduce production group_var -> expression
-- On MINUS reduce production group_var -> expression
-- On MIN reduce production group_var -> expression
-- On MD5 reduce production group_var -> expression
-- On MAX reduce production group_var -> expression
-- On LPAR reduce production group_var -> expression
-- On LIMIT reduce production group_var -> expression
-- On LCASE reduce production group_var -> expression
-- On LANGMATCHES reduce production group_var -> expression
-- On LANG reduce production group_var -> expression
-- On Iriref_ reduce production group_var -> expression
-- On Integer_positive reduce production group_var -> expression
-- On Integer_negative reduce production group_var -> expression
-- On Integer reduce production group_var -> expression
-- On ISURI reduce production group_var -> expression
-- On ISNUMERIC reduce production group_var -> expression
-- On ISLITERAL reduce production group_var -> expression
-- On ISIRI reduce production group_var -> expression
-- On ISBLANK reduce production group_var -> expression
-- On IRI reduce production group_var -> expression
-- On IF reduce production group_var -> expression
-- On HOURS reduce production group_var -> expression
-- On HAVING reduce production group_var -> expression
-- On GROUP_CONCAT reduce production group_var -> expression
-- On FLOOR reduce production group_var -> expression
-- On EXISTS reduce production group_var -> expression
-- On EOF reduce production group_var -> expression
-- On ENCODE_FOR_URI reduce production group_var -> expression
-- On Double_positive reduce production group_var -> expression
-- On Double_negative reduce production group_var -> expression
-- On Double reduce production group_var -> expression
-- On Decimal_positive reduce production group_var -> expression
-- On Decimal_negative reduce production group_var -> expression
-- On Decimal reduce production group_var -> expression
-- On DAY reduce production group_var -> expression
-- On DATATYPE reduce production group_var -> expression
-- On COUNT reduce production group_var -> expression
-- On CONTAINS reduce production group_var -> expression
-- On CONCAT reduce production group_var -> expression
-- On COALESCE reduce production group_var -> expression
-- On CEIL reduce production group_var -> expression
-- On Boolean reduce production group_var -> expression
-- On BOUND reduce production group_var -> expression
-- On BNODE reduce production group_var -> expression
-- On BANG reduce production group_var -> expression
-- On AVG reduce production group_var -> expression
-- On ABS reduce production group_var -> expression
** Conflict on PLUS MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative

State 450:
group_var -> expression AS . var [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS ORDER OFFSET NOW NOT MONTH MINUTES MINUS MIN MD5 MAX LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IF HOURS HAVING GROUP_CONCAT FLOOR EXISTS EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL Boolean BOUND BNODE BANG AVG ABS ]
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On var shift to state 451

State 451:
group_var -> expression AS var . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS ORDER OFFSET NOW NOT MONTH MINUTES MINUS MIN MD5 MAX LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IF HOURS HAVING GROUP_CONCAT FLOOR EXISTS EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL Boolean BOUND BNODE BANG AVG ABS ]
-- On YEAR reduce production group_var -> expression AS var
-- On Var2 reduce production group_var -> expression AS var
-- On Var1 reduce production group_var -> expression AS var
-- On VALUES reduce production group_var -> expression AS var
-- On UUID reduce production group_var -> expression AS var
-- On URI reduce production group_var -> expression AS var
-- On UCASE reduce production group_var -> expression AS var
-- On TZ reduce production group_var -> expression AS var
-- On TIMEZONE reduce production group_var -> expression AS var
-- On String_literal reduce production group_var -> expression AS var
-- On SUM reduce production group_var -> expression AS var
-- On SUBSTR reduce production group_var -> expression AS var
-- On STRUUID reduce production group_var -> expression AS var
-- On STRSTARTS reduce production group_var -> expression AS var
-- On STRLEN reduce production group_var -> expression AS var
-- On STRLANG reduce production group_var -> expression AS var
-- On STRENDS reduce production group_var -> expression AS var
-- On STRDT reduce production group_var -> expression AS var
-- On STRBEFORE reduce production group_var -> expression AS var
-- On STRAFTER reduce production group_var -> expression AS var
-- On STR reduce production group_var -> expression AS var
-- On SHA512 reduce production group_var -> expression AS var
-- On SHA384 reduce production group_var -> expression AS var
-- On SHA256 reduce production group_var -> expression AS var
-- On SHA1 reduce production group_var -> expression AS var
-- On SECONDS reduce production group_var -> expression AS var
-- On SAMPLE reduce production group_var -> expression AS var
-- On SAMETERM reduce production group_var -> expression AS var
-- On ROUND reduce production group_var -> expression AS var
-- On REPLACE reduce production group_var -> expression AS var
-- On REGEX reduce production group_var -> expression AS var
-- On RBRACE reduce production group_var -> expression AS var
-- On RAND reduce production group_var -> expression AS var
-- On Pname_ns reduce production group_var -> expression AS var
-- On Pname_ln reduce production group_var -> expression AS var
-- On PLUS reduce production group_var -> expression AS var
-- On ORDER reduce production group_var -> expression AS var
-- On OFFSET reduce production group_var -> expression AS var
-- On NOW reduce production group_var -> expression AS var
-- On NOT reduce production group_var -> expression AS var
-- On MONTH reduce production group_var -> expression AS var
-- On MINUTES reduce production group_var -> expression AS var
-- On MINUS reduce production group_var -> expression AS var
-- On MIN reduce production group_var -> expression AS var
-- On MD5 reduce production group_var -> expression AS var
-- On MAX reduce production group_var -> expression AS var
-- On LPAR reduce production group_var -> expression AS var
-- On LIMIT reduce production group_var -> expression AS var
-- On LCASE reduce production group_var -> expression AS var
-- On LANGMATCHES reduce production group_var -> expression AS var
-- On LANG reduce production group_var -> expression AS var
-- On Iriref_ reduce production group_var -> expression AS var
-- On Integer_positive reduce production group_var -> expression AS var
-- On Integer_negative reduce production group_var -> expression AS var
-- On Integer reduce production group_var -> expression AS var
-- On ISURI reduce production group_var -> expression AS var
-- On ISNUMERIC reduce production group_var -> expression AS var
-- On ISLITERAL reduce production group_var -> expression AS var
-- On ISIRI reduce production group_var -> expression AS var
-- On ISBLANK reduce production group_var -> expression AS var
-- On IRI reduce production group_var -> expression AS var
-- On IF reduce production group_var -> expression AS var
-- On HOURS reduce production group_var -> expression AS var
-- On HAVING reduce production group_var -> expression AS var
-- On GROUP_CONCAT reduce production group_var -> expression AS var
-- On FLOOR reduce production group_var -> expression AS var
-- On EXISTS reduce production group_var -> expression AS var
-- On EOF reduce production group_var -> expression AS var
-- On ENCODE_FOR_URI reduce production group_var -> expression AS var
-- On Double_positive reduce production group_var -> expression AS var
-- On Double_negative reduce production group_var -> expression AS var
-- On Double reduce production group_var -> expression AS var
-- On Decimal_positive reduce production group_var -> expression AS var
-- On Decimal_negative reduce production group_var -> expression AS var
-- On Decimal reduce production group_var -> expression AS var
-- On DAY reduce production group_var -> expression AS var
-- On DATATYPE reduce production group_var -> expression AS var
-- On COUNT reduce production group_var -> expression AS var
-- On CONTAINS reduce production group_var -> expression AS var
-- On CONCAT reduce production group_var -> expression AS var
-- On COALESCE reduce production group_var -> expression AS var
-- On CEIL reduce production group_var -> expression AS var
-- On Boolean reduce production group_var -> expression AS var
-- On BOUND reduce production group_var -> expression AS var
-- On BNODE reduce production group_var -> expression AS var
-- On BANG reduce production group_var -> expression AS var
-- On AVG reduce production group_var -> expression AS var
-- On ABS reduce production group_var -> expression AS var

State 452:
group_condition -> built_in_call . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS ORDER OFFSET NOW NOT MONTH MINUTES MINUS MIN MD5 MAX LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IF HOURS HAVING GROUP_CONCAT FLOOR EXISTS EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL Boolean BOUND BNODE BANG AVG ABS ]
primary_expression -> built_in_call . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
-- On YEAR reduce production group_condition -> built_in_call
-- On YEAR reduce production primary_expression -> built_in_call
-- On Var2 reduce production group_condition -> built_in_call
-- On Var2 reduce production primary_expression -> built_in_call
-- On Var1 reduce production group_condition -> built_in_call
-- On Var1 reduce production primary_expression -> built_in_call
-- On VALUES reduce production group_condition -> built_in_call
-- On VALUES reduce production primary_expression -> built_in_call
-- On UUID reduce production group_condition -> built_in_call
-- On UUID reduce production primary_expression -> built_in_call
-- On URI reduce production group_condition -> built_in_call
-- On URI reduce production primary_expression -> built_in_call
-- On UCASE reduce production group_condition -> built_in_call
-- On UCASE reduce production primary_expression -> built_in_call
-- On TZ reduce production group_condition -> built_in_call
-- On TZ reduce production primary_expression -> built_in_call
-- On TIMEZONE reduce production group_condition -> built_in_call
-- On TIMEZONE reduce production primary_expression -> built_in_call
-- On String_literal reduce production group_condition -> built_in_call
-- On String_literal reduce production primary_expression -> built_in_call
-- On SUM reduce production group_condition -> built_in_call
-- On SUM reduce production primary_expression -> built_in_call
-- On SUBSTR reduce production group_condition -> built_in_call
-- On SUBSTR reduce production primary_expression -> built_in_call
-- On STRUUID reduce production group_condition -> built_in_call
-- On STRUUID reduce production primary_expression -> built_in_call
-- On STRSTARTS reduce production group_condition -> built_in_call
-- On STRSTARTS reduce production primary_expression -> built_in_call
-- On STRLEN reduce production group_condition -> built_in_call
-- On STRLEN reduce production primary_expression -> built_in_call
-- On STRLANG reduce production group_condition -> built_in_call
-- On STRLANG reduce production primary_expression -> built_in_call
-- On STRENDS reduce production group_condition -> built_in_call
-- On STRENDS reduce production primary_expression -> built_in_call
-- On STRDT reduce production group_condition -> built_in_call
-- On STRDT reduce production primary_expression -> built_in_call
-- On STRBEFORE reduce production group_condition -> built_in_call
-- On STRBEFORE reduce production primary_expression -> built_in_call
-- On STRAFTER reduce production group_condition -> built_in_call
-- On STRAFTER reduce production primary_expression -> built_in_call
-- On STR reduce production group_condition -> built_in_call
-- On STR reduce production primary_expression -> built_in_call
-- On STAR reduce production primary_expression -> built_in_call
-- On SLASH reduce production primary_expression -> built_in_call
-- On SHA512 reduce production group_condition -> built_in_call
-- On SHA512 reduce production primary_expression -> built_in_call
-- On SHA384 reduce production group_condition -> built_in_call
-- On SHA384 reduce production primary_expression -> built_in_call
-- On SHA256 reduce production group_condition -> built_in_call
-- On SHA256 reduce production primary_expression -> built_in_call
-- On SHA1 reduce production group_condition -> built_in_call
-- On SHA1 reduce production primary_expression -> built_in_call
-- On SECONDS reduce production group_condition -> built_in_call
-- On SECONDS reduce production primary_expression -> built_in_call
-- On SAMPLE reduce production group_condition -> built_in_call
-- On SAMPLE reduce production primary_expression -> built_in_call
-- On SAMETERM reduce production group_condition -> built_in_call
-- On SAMETERM reduce production primary_expression -> built_in_call
-- On ROUND reduce production group_condition -> built_in_call
-- On ROUND reduce production primary_expression -> built_in_call
-- On REPLACE reduce production group_condition -> built_in_call
-- On REPLACE reduce production primary_expression -> built_in_call
-- On REGEX reduce production group_condition -> built_in_call
-- On REGEX reduce production primary_expression -> built_in_call
-- On RBRACE reduce production group_condition -> built_in_call
-- On RBRACE reduce production primary_expression -> built_in_call
-- On RAND reduce production group_condition -> built_in_call
-- On RAND reduce production primary_expression -> built_in_call
-- On Pname_ns reduce production group_condition -> built_in_call
-- On Pname_ns reduce production primary_expression -> built_in_call
-- On Pname_ln reduce production group_condition -> built_in_call
-- On Pname_ln reduce production primary_expression -> built_in_call
-- On PLUS reduce production group_condition -> built_in_call
-- On PLUS reduce production primary_expression -> built_in_call
-- On PIPEPIPE reduce production primary_expression -> built_in_call
-- On ORDER reduce production group_condition -> built_in_call
-- On ORDER reduce production primary_expression -> built_in_call
-- On OFFSET reduce production group_condition -> built_in_call
-- On OFFSET reduce production primary_expression -> built_in_call
-- On NOW reduce production group_condition -> built_in_call
-- On NOW reduce production primary_expression -> built_in_call
-- On NOTEQUAL reduce production primary_expression -> built_in_call
-- On NOT reduce production group_condition -> built_in_call
-- On NOT reduce production primary_expression -> built_in_call
-- On MONTH reduce production group_condition -> built_in_call
-- On MONTH reduce production primary_expression -> built_in_call
-- On MINUTES reduce production group_condition -> built_in_call
-- On MINUTES reduce production primary_expression -> built_in_call
-- On MINUS reduce production group_condition -> built_in_call
-- On MINUS reduce production primary_expression -> built_in_call
-- On MIN reduce production group_condition -> built_in_call
-- On MIN reduce production primary_expression -> built_in_call
-- On MD5 reduce production group_condition -> built_in_call
-- On MD5 reduce production primary_expression -> built_in_call
-- On MAX reduce production group_condition -> built_in_call
-- On MAX reduce production primary_expression -> built_in_call
-- On LTE reduce production primary_expression -> built_in_call
-- On LT reduce production primary_expression -> built_in_call
-- On LPAR reduce production group_condition -> built_in_call
-- On LPAR reduce production primary_expression -> built_in_call
-- On LIMIT reduce production group_condition -> built_in_call
-- On LIMIT reduce production primary_expression -> built_in_call
-- On LCASE reduce production group_condition -> built_in_call
-- On LCASE reduce production primary_expression -> built_in_call
-- On LANGMATCHES reduce production group_condition -> built_in_call
-- On LANGMATCHES reduce production primary_expression -> built_in_call
-- On LANG reduce production group_condition -> built_in_call
-- On LANG reduce production primary_expression -> built_in_call
-- On Iriref_ reduce production group_condition -> built_in_call
-- On Iriref_ reduce production primary_expression -> built_in_call
-- On Integer_positive reduce production group_condition -> built_in_call
-- On Integer_positive reduce production primary_expression -> built_in_call
-- On Integer_negative reduce production group_condition -> built_in_call
-- On Integer_negative reduce production primary_expression -> built_in_call
-- On Integer reduce production group_condition -> built_in_call
-- On Integer reduce production primary_expression -> built_in_call
-- On ISURI reduce production group_condition -> built_in_call
-- On ISURI reduce production primary_expression -> built_in_call
-- On ISNUMERIC reduce production group_condition -> built_in_call
-- On ISNUMERIC reduce production primary_expression -> built_in_call
-- On ISLITERAL reduce production group_condition -> built_in_call
-- On ISLITERAL reduce production primary_expression -> built_in_call
-- On ISIRI reduce production group_condition -> built_in_call
-- On ISIRI reduce production primary_expression -> built_in_call
-- On ISBLANK reduce production group_condition -> built_in_call
-- On ISBLANK reduce production primary_expression -> built_in_call
-- On IRI reduce production group_condition -> built_in_call
-- On IRI reduce production primary_expression -> built_in_call
-- On IN reduce production primary_expression -> built_in_call
-- On IF reduce production group_condition -> built_in_call
-- On IF reduce production primary_expression -> built_in_call
-- On HOURS reduce production group_condition -> built_in_call
-- On HOURS reduce production primary_expression -> built_in_call
-- On HAVING reduce production group_condition -> built_in_call
-- On HAVING reduce production primary_expression -> built_in_call
-- On GTE reduce production primary_expression -> built_in_call
-- On GT reduce production primary_expression -> built_in_call
-- On GROUP_CONCAT reduce production group_condition -> built_in_call
-- On GROUP_CONCAT reduce production primary_expression -> built_in_call
-- On FLOOR reduce production group_condition -> built_in_call
-- On FLOOR reduce production primary_expression -> built_in_call
-- On EXISTS reduce production group_condition -> built_in_call
-- On EXISTS reduce production primary_expression -> built_in_call
-- On EQUAL reduce production primary_expression -> built_in_call
-- On EOF reduce production group_condition -> built_in_call
-- On EOF reduce production primary_expression -> built_in_call
-- On ENCODE_FOR_URI reduce production group_condition -> built_in_call
-- On ENCODE_FOR_URI reduce production primary_expression -> built_in_call
-- On Double_positive reduce production group_condition -> built_in_call
-- On Double_positive reduce production primary_expression -> built_in_call
-- On Double_negative reduce production group_condition -> built_in_call
-- On Double_negative reduce production primary_expression -> built_in_call
-- On Double reduce production group_condition -> built_in_call
-- On Double reduce production primary_expression -> built_in_call
-- On Decimal_positive reduce production group_condition -> built_in_call
-- On Decimal_positive reduce production primary_expression -> built_in_call
-- On Decimal_negative reduce production group_condition -> built_in_call
-- On Decimal_negative reduce production primary_expression -> built_in_call
-- On Decimal reduce production group_condition -> built_in_call
-- On Decimal reduce production primary_expression -> built_in_call
-- On DAY reduce production group_condition -> built_in_call
-- On DAY reduce production primary_expression -> built_in_call
-- On DATATYPE reduce production group_condition -> built_in_call
-- On DATATYPE reduce production primary_expression -> built_in_call
-- On COUNT reduce production group_condition -> built_in_call
-- On COUNT reduce production primary_expression -> built_in_call
-- On CONTAINS reduce production group_condition -> built_in_call
-- On CONTAINS reduce production primary_expression -> built_in_call
-- On CONCAT reduce production group_condition -> built_in_call
-- On CONCAT reduce production primary_expression -> built_in_call
-- On COALESCE reduce production group_condition -> built_in_call
-- On COALESCE reduce production primary_expression -> built_in_call
-- On CEIL reduce production group_condition -> built_in_call
-- On CEIL reduce production primary_expression -> built_in_call
-- On Boolean reduce production group_condition -> built_in_call
-- On Boolean reduce production primary_expression -> built_in_call
-- On BOUND reduce production group_condition -> built_in_call
-- On BOUND reduce production primary_expression -> built_in_call
-- On BNODE reduce production group_condition -> built_in_call
-- On BNODE reduce production primary_expression -> built_in_call
-- On BANG reduce production group_condition -> built_in_call
-- On BANG reduce production primary_expression -> built_in_call
-- On AVG reduce production group_condition -> built_in_call
-- On AVG reduce production primary_expression -> built_in_call
-- On AS reduce production primary_expression -> built_in_call
-- On AMPAMP reduce production primary_expression -> built_in_call
-- On ABS reduce production group_condition -> built_in_call
-- On ABS reduce production primary_expression -> built_in_call
** Conflict on YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS ORDER OFFSET NOW NOT MONTH MINUTES MINUS MIN MD5 MAX LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IF HOURS HAVING GROUP_CONCAT FLOOR EXISTS EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL Boolean BOUND BNODE BANG AVG ABS

State 453:
subselect -> select_clause where_clause solution_modifier . values_clause [ RBRACE ]
-- On VALUES shift to state 454
-- On values_clause_ shift to state 485
-- On values_clause shift to state 486
-- On option(values_clause_) shift to state 487
-- On RBRACE reduce production option(values_clause_) ->

State 454:
values_clause_ -> VALUES . datablock [ RBRACE EOF ]
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On NIL shift to state 455
-- On LPAR shift to state 456
-- On var shift to state 461
-- On nil_or_var_list shift to state 472
-- On inline_data_one_var shift to state 482
-- On inline_data_full shift to state 483
-- On datablock shift to state 484

State 455:
nil_or_var_list -> NIL . [ LBRACE ]
-- On LBRACE reduce production nil_or_var_list -> NIL

State 456:
nil_or_var_list -> LPAR . list(var) RPAR [ LBRACE ]
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On var shift to state 457
-- On list(var) shift to state 459
-- On RPAR reduce production list(var) ->

State 457:
list(var) -> var . list(var) [ RPAR ]
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On var shift to state 457
-- On list(var) shift to state 458
-- On RPAR reduce production list(var) ->

State 458:
list(var) -> var list(var) . [ RPAR ]
-- On RPAR reduce production list(var) -> var list(var)

State 459:
nil_or_var_list -> LPAR list(var) . RPAR [ LBRACE ]
-- On RPAR shift to state 460

State 460:
nil_or_var_list -> LPAR list(var) RPAR . [ LBRACE ]
-- On LBRACE reduce production nil_or_var_list -> LPAR list(var) RPAR

State 461:
inline_data_one_var -> var . LBRACE list(data_block_value) RBRACE [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER EOF Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
-- On LBRACE shift to state 462

State 462:
inline_data_one_var -> var LBRACE . list(data_block_value) RBRACE [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER EOF Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
-- On UNDEF shift to state 463
-- On String_literal shift to state 31
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On Boolean shift to state 139
-- On string shift to state 145
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 464
-- On prefixed_name shift to state 97
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 465
-- On list(data_block_value) shift to state 466
-- On iri shift to state 468
-- On data_block_value shift to state 469
-- On boolean_literal shift to state 471
-- On RBRACE reduce production list(data_block_value) ->

State 463:
data_block_value -> UNDEF . [ UNDEF String_literal RPAR RBRACE Pname_ns Pname_ln Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean ]
-- On UNDEF reduce production data_block_value -> UNDEF
-- On String_literal reduce production data_block_value -> UNDEF
-- On RPAR reduce production data_block_value -> UNDEF
-- On RBRACE reduce production data_block_value -> UNDEF
-- On Pname_ns reduce production data_block_value -> UNDEF
-- On Pname_ln reduce production data_block_value -> UNDEF
-- On Iriref_ reduce production data_block_value -> UNDEF
-- On Integer_positive reduce production data_block_value -> UNDEF
-- On Integer_negative reduce production data_block_value -> UNDEF
-- On Integer reduce production data_block_value -> UNDEF
-- On Double_positive reduce production data_block_value -> UNDEF
-- On Double_negative reduce production data_block_value -> UNDEF
-- On Double reduce production data_block_value -> UNDEF
-- On Decimal_positive reduce production data_block_value -> UNDEF
-- On Decimal_negative reduce production data_block_value -> UNDEF
-- On Decimal reduce production data_block_value -> UNDEF
-- On Boolean reduce production data_block_value -> UNDEF

State 464:
data_block_value -> rdf_literal . [ UNDEF String_literal RPAR RBRACE Pname_ns Pname_ln Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean ]
-- On UNDEF reduce production data_block_value -> rdf_literal
-- On String_literal reduce production data_block_value -> rdf_literal
-- On RPAR reduce production data_block_value -> rdf_literal
-- On RBRACE reduce production data_block_value -> rdf_literal
-- On Pname_ns reduce production data_block_value -> rdf_literal
-- On Pname_ln reduce production data_block_value -> rdf_literal
-- On Iriref_ reduce production data_block_value -> rdf_literal
-- On Integer_positive reduce production data_block_value -> rdf_literal
-- On Integer_negative reduce production data_block_value -> rdf_literal
-- On Integer reduce production data_block_value -> rdf_literal
-- On Double_positive reduce production data_block_value -> rdf_literal
-- On Double_negative reduce production data_block_value -> rdf_literal
-- On Double reduce production data_block_value -> rdf_literal
-- On Decimal_positive reduce production data_block_value -> rdf_literal
-- On Decimal_negative reduce production data_block_value -> rdf_literal
-- On Decimal reduce production data_block_value -> rdf_literal
-- On Boolean reduce production data_block_value -> rdf_literal

State 465:
data_block_value -> numeric_literal . [ UNDEF String_literal RPAR RBRACE Pname_ns Pname_ln Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean ]
-- On UNDEF reduce production data_block_value -> numeric_literal
-- On String_literal reduce production data_block_value -> numeric_literal
-- On RPAR reduce production data_block_value -> numeric_literal
-- On RBRACE reduce production data_block_value -> numeric_literal
-- On Pname_ns reduce production data_block_value -> numeric_literal
-- On Pname_ln reduce production data_block_value -> numeric_literal
-- On Iriref_ reduce production data_block_value -> numeric_literal
-- On Integer_positive reduce production data_block_value -> numeric_literal
-- On Integer_negative reduce production data_block_value -> numeric_literal
-- On Integer reduce production data_block_value -> numeric_literal
-- On Double_positive reduce production data_block_value -> numeric_literal
-- On Double_negative reduce production data_block_value -> numeric_literal
-- On Double reduce production data_block_value -> numeric_literal
-- On Decimal_positive reduce production data_block_value -> numeric_literal
-- On Decimal_negative reduce production data_block_value -> numeric_literal
-- On Decimal reduce production data_block_value -> numeric_literal
-- On Boolean reduce production data_block_value -> numeric_literal

State 466:
inline_data_one_var -> var LBRACE list(data_block_value) . RBRACE [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER EOF Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
-- On RBRACE shift to state 467

State 467:
inline_data_one_var -> var LBRACE list(data_block_value) RBRACE . [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER EOF Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
-- On Var2 reduce production inline_data_one_var -> var LBRACE list(data_block_value) RBRACE
-- On Var1 reduce production inline_data_one_var -> var LBRACE list(data_block_value) RBRACE
-- On VALUES reduce production inline_data_one_var -> var LBRACE list(data_block_value) RBRACE
-- On String_literal reduce production inline_data_one_var -> var LBRACE list(data_block_value) RBRACE
-- On SERVICE reduce production inline_data_one_var -> var LBRACE list(data_block_value) RBRACE
-- On RBRACE reduce production inline_data_one_var -> var LBRACE list(data_block_value) RBRACE
-- On Pname_ns reduce production inline_data_one_var -> var LBRACE list(data_block_value) RBRACE
-- On Pname_ln reduce production inline_data_one_var -> var LBRACE list(data_block_value) RBRACE
-- On OPTIONAL reduce production inline_data_one_var -> var LBRACE list(data_block_value) RBRACE
-- On NIL reduce production inline_data_one_var -> var LBRACE list(data_block_value) RBRACE
-- On MINUS reduce production inline_data_one_var -> var LBRACE list(data_block_value) RBRACE
-- On LPAR reduce production inline_data_one_var -> var LBRACE list(data_block_value) RBRACE
-- On LBRACKET reduce production inline_data_one_var -> var LBRACE list(data_block_value) RBRACE
-- On LBRACE reduce production inline_data_one_var -> var LBRACE list(data_block_value) RBRACE
-- On Iriref_ reduce production inline_data_one_var -> var LBRACE list(data_block_value) RBRACE
-- On Integer_positive reduce production inline_data_one_var -> var LBRACE list(data_block_value) RBRACE
-- On Integer_negative reduce production inline_data_one_var -> var LBRACE list(data_block_value) RBRACE
-- On Integer reduce production inline_data_one_var -> var LBRACE list(data_block_value) RBRACE
-- On GRAPH reduce production inline_data_one_var -> var LBRACE list(data_block_value) RBRACE
-- On FILTER reduce production inline_data_one_var -> var LBRACE list(data_block_value) RBRACE
-- On EOF reduce production inline_data_one_var -> var LBRACE list(data_block_value) RBRACE
-- On Double_positive reduce production inline_data_one_var -> var LBRACE list(data_block_value) RBRACE
-- On Double_negative reduce production inline_data_one_var -> var LBRACE list(data_block_value) RBRACE
-- On Double reduce production inline_data_one_var -> var LBRACE list(data_block_value) RBRACE
-- On Decimal_positive reduce production inline_data_one_var -> var LBRACE list(data_block_value) RBRACE
-- On Decimal_negative reduce production inline_data_one_var -> var LBRACE list(data_block_value) RBRACE
-- On Decimal reduce production inline_data_one_var -> var LBRACE list(data_block_value) RBRACE
-- On DOT reduce production inline_data_one_var -> var LBRACE list(data_block_value) RBRACE
-- On Boolean reduce production inline_data_one_var -> var LBRACE list(data_block_value) RBRACE
-- On Blank_node_label reduce production inline_data_one_var -> var LBRACE list(data_block_value) RBRACE
-- On BIND reduce production inline_data_one_var -> var LBRACE list(data_block_value) RBRACE
-- On ANON reduce production inline_data_one_var -> var LBRACE list(data_block_value) RBRACE

State 468:
data_block_value -> iri . [ UNDEF String_literal RPAR RBRACE Pname_ns Pname_ln Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean ]
-- On UNDEF reduce production data_block_value -> iri
-- On String_literal reduce production data_block_value -> iri
-- On RPAR reduce production data_block_value -> iri
-- On RBRACE reduce production data_block_value -> iri
-- On Pname_ns reduce production data_block_value -> iri
-- On Pname_ln reduce production data_block_value -> iri
-- On Iriref_ reduce production data_block_value -> iri
-- On Integer_positive reduce production data_block_value -> iri
-- On Integer_negative reduce production data_block_value -> iri
-- On Integer reduce production data_block_value -> iri
-- On Double_positive reduce production data_block_value -> iri
-- On Double_negative reduce production data_block_value -> iri
-- On Double reduce production data_block_value -> iri
-- On Decimal_positive reduce production data_block_value -> iri
-- On Decimal_negative reduce production data_block_value -> iri
-- On Decimal reduce production data_block_value -> iri
-- On Boolean reduce production data_block_value -> iri

State 469:
list(data_block_value) -> data_block_value . list(data_block_value) [ RPAR RBRACE ]
-- On UNDEF shift to state 463
-- On String_literal shift to state 31
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On Boolean shift to state 139
-- On string shift to state 145
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 464
-- On prefixed_name shift to state 97
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 465
-- On list(data_block_value) shift to state 470
-- On iri shift to state 468
-- On data_block_value shift to state 469
-- On boolean_literal shift to state 471
-- On RPAR reduce production list(data_block_value) ->
-- On RBRACE reduce production list(data_block_value) ->

State 470:
list(data_block_value) -> data_block_value list(data_block_value) . [ RPAR RBRACE ]
-- On RPAR reduce production list(data_block_value) -> data_block_value list(data_block_value)
-- On RBRACE reduce production list(data_block_value) -> data_block_value list(data_block_value)

State 471:
data_block_value -> boolean_literal . [ UNDEF String_literal RPAR RBRACE Pname_ns Pname_ln Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean ]
-- On UNDEF reduce production data_block_value -> boolean_literal
-- On String_literal reduce production data_block_value -> boolean_literal
-- On RPAR reduce production data_block_value -> boolean_literal
-- On RBRACE reduce production data_block_value -> boolean_literal
-- On Pname_ns reduce production data_block_value -> boolean_literal
-- On Pname_ln reduce production data_block_value -> boolean_literal
-- On Iriref_ reduce production data_block_value -> boolean_literal
-- On Integer_positive reduce production data_block_value -> boolean_literal
-- On Integer_negative reduce production data_block_value -> boolean_literal
-- On Integer reduce production data_block_value -> boolean_literal
-- On Double_positive reduce production data_block_value -> boolean_literal
-- On Double_negative reduce production data_block_value -> boolean_literal
-- On Double reduce production data_block_value -> boolean_literal
-- On Decimal_positive reduce production data_block_value -> boolean_literal
-- On Decimal_negative reduce production data_block_value -> boolean_literal
-- On Decimal reduce production data_block_value -> boolean_literal
-- On Boolean reduce production data_block_value -> boolean_literal

State 472:
inline_data_full -> nil_or_var_list . LBRACE list(data_block_values_or_nil) RBRACE [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER EOF Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
-- On LBRACE shift to state 473

State 473:
inline_data_full -> nil_or_var_list LBRACE . list(data_block_values_or_nil) RBRACE [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER EOF Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
-- On NIL shift to state 474
-- On LPAR shift to state 475
-- On list(data_block_values_or_nil) shift to state 478
-- On data_block_values_or_nil shift to state 480
-- On RBRACE reduce production list(data_block_values_or_nil) ->

State 474:
data_block_values_or_nil -> NIL . [ RBRACE NIL LPAR ]
-- On RBRACE reduce production data_block_values_or_nil -> NIL
-- On NIL reduce production data_block_values_or_nil -> NIL
-- On LPAR reduce production data_block_values_or_nil -> NIL

State 475:
data_block_values_or_nil -> LPAR . list(data_block_value) RPAR [ RBRACE NIL LPAR ]
-- On UNDEF shift to state 463
-- On String_literal shift to state 31
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On Boolean shift to state 139
-- On string shift to state 145
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 464
-- On prefixed_name shift to state 97
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 465
-- On list(data_block_value) shift to state 476
-- On iri shift to state 468
-- On data_block_value shift to state 469
-- On boolean_literal shift to state 471
-- On RPAR reduce production list(data_block_value) ->

State 476:
data_block_values_or_nil -> LPAR list(data_block_value) . RPAR [ RBRACE NIL LPAR ]
-- On RPAR shift to state 477

State 477:
data_block_values_or_nil -> LPAR list(data_block_value) RPAR . [ RBRACE NIL LPAR ]
-- On RBRACE reduce production data_block_values_or_nil -> LPAR list(data_block_value) RPAR
-- On NIL reduce production data_block_values_or_nil -> LPAR list(data_block_value) RPAR
-- On LPAR reduce production data_block_values_or_nil -> LPAR list(data_block_value) RPAR

State 478:
inline_data_full -> nil_or_var_list LBRACE list(data_block_values_or_nil) . RBRACE [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER EOF Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
-- On RBRACE shift to state 479

State 479:
inline_data_full -> nil_or_var_list LBRACE list(data_block_values_or_nil) RBRACE . [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER EOF Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
-- On Var2 reduce production inline_data_full -> nil_or_var_list LBRACE list(data_block_values_or_nil) RBRACE
-- On Var1 reduce production inline_data_full -> nil_or_var_list LBRACE list(data_block_values_or_nil) RBRACE
-- On VALUES reduce production inline_data_full -> nil_or_var_list LBRACE list(data_block_values_or_nil) RBRACE
-- On String_literal reduce production inline_data_full -> nil_or_var_list LBRACE list(data_block_values_or_nil) RBRACE
-- On SERVICE reduce production inline_data_full -> nil_or_var_list LBRACE list(data_block_values_or_nil) RBRACE
-- On RBRACE reduce production inline_data_full -> nil_or_var_list LBRACE list(data_block_values_or_nil) RBRACE
-- On Pname_ns reduce production inline_data_full -> nil_or_var_list LBRACE list(data_block_values_or_nil) RBRACE
-- On Pname_ln reduce production inline_data_full -> nil_or_var_list LBRACE list(data_block_values_or_nil) RBRACE
-- On OPTIONAL reduce production inline_data_full -> nil_or_var_list LBRACE list(data_block_values_or_nil) RBRACE
-- On NIL reduce production inline_data_full -> nil_or_var_list LBRACE list(data_block_values_or_nil) RBRACE
-- On MINUS reduce production inline_data_full -> nil_or_var_list LBRACE list(data_block_values_or_nil) RBRACE
-- On LPAR reduce production inline_data_full -> nil_or_var_list LBRACE list(data_block_values_or_nil) RBRACE
-- On LBRACKET reduce production inline_data_full -> nil_or_var_list LBRACE list(data_block_values_or_nil) RBRACE
-- On LBRACE reduce production inline_data_full -> nil_or_var_list LBRACE list(data_block_values_or_nil) RBRACE
-- On Iriref_ reduce production inline_data_full -> nil_or_var_list LBRACE list(data_block_values_or_nil) RBRACE
-- On Integer_positive reduce production inline_data_full -> nil_or_var_list LBRACE list(data_block_values_or_nil) RBRACE
-- On Integer_negative reduce production inline_data_full -> nil_or_var_list LBRACE list(data_block_values_or_nil) RBRACE
-- On Integer reduce production inline_data_full -> nil_or_var_list LBRACE list(data_block_values_or_nil) RBRACE
-- On GRAPH reduce production inline_data_full -> nil_or_var_list LBRACE list(data_block_values_or_nil) RBRACE
-- On FILTER reduce production inline_data_full -> nil_or_var_list LBRACE list(data_block_values_or_nil) RBRACE
-- On EOF reduce production inline_data_full -> nil_or_var_list LBRACE list(data_block_values_or_nil) RBRACE
-- On Double_positive reduce production inline_data_full -> nil_or_var_list LBRACE list(data_block_values_or_nil) RBRACE
-- On Double_negative reduce production inline_data_full -> nil_or_var_list LBRACE list(data_block_values_or_nil) RBRACE
-- On Double reduce production inline_data_full -> nil_or_var_list LBRACE list(data_block_values_or_nil) RBRACE
-- On Decimal_positive reduce production inline_data_full -> nil_or_var_list LBRACE list(data_block_values_or_nil) RBRACE
-- On Decimal_negative reduce production inline_data_full -> nil_or_var_list LBRACE list(data_block_values_or_nil) RBRACE
-- On Decimal reduce production inline_data_full -> nil_or_var_list LBRACE list(data_block_values_or_nil) RBRACE
-- On DOT reduce production inline_data_full -> nil_or_var_list LBRACE list(data_block_values_or_nil) RBRACE
-- On Boolean reduce production inline_data_full -> nil_or_var_list LBRACE list(data_block_values_or_nil) RBRACE
-- On Blank_node_label reduce production inline_data_full -> nil_or_var_list LBRACE list(data_block_values_or_nil) RBRACE
-- On BIND reduce production inline_data_full -> nil_or_var_list LBRACE list(data_block_values_or_nil) RBRACE
-- On ANON reduce production inline_data_full -> nil_or_var_list LBRACE list(data_block_values_or_nil) RBRACE

State 480:
list(data_block_values_or_nil) -> data_block_values_or_nil . list(data_block_values_or_nil) [ RBRACE ]
-- On NIL shift to state 474
-- On LPAR shift to state 475
-- On list(data_block_values_or_nil) shift to state 481
-- On data_block_values_or_nil shift to state 480
-- On RBRACE reduce production list(data_block_values_or_nil) ->

State 481:
list(data_block_values_or_nil) -> data_block_values_or_nil list(data_block_values_or_nil) . [ RBRACE ]
-- On RBRACE reduce production list(data_block_values_or_nil) -> data_block_values_or_nil list(data_block_values_or_nil)

State 482:
datablock -> inline_data_one_var . [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER EOF Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
-- On Var2 reduce production datablock -> inline_data_one_var
-- On Var1 reduce production datablock -> inline_data_one_var
-- On VALUES reduce production datablock -> inline_data_one_var
-- On String_literal reduce production datablock -> inline_data_one_var
-- On SERVICE reduce production datablock -> inline_data_one_var
-- On RBRACE reduce production datablock -> inline_data_one_var
-- On Pname_ns reduce production datablock -> inline_data_one_var
-- On Pname_ln reduce production datablock -> inline_data_one_var
-- On OPTIONAL reduce production datablock -> inline_data_one_var
-- On NIL reduce production datablock -> inline_data_one_var
-- On MINUS reduce production datablock -> inline_data_one_var
-- On LPAR reduce production datablock -> inline_data_one_var
-- On LBRACKET reduce production datablock -> inline_data_one_var
-- On LBRACE reduce production datablock -> inline_data_one_var
-- On Iriref_ reduce production datablock -> inline_data_one_var
-- On Integer_positive reduce production datablock -> inline_data_one_var
-- On Integer_negative reduce production datablock -> inline_data_one_var
-- On Integer reduce production datablock -> inline_data_one_var
-- On GRAPH reduce production datablock -> inline_data_one_var
-- On FILTER reduce production datablock -> inline_data_one_var
-- On EOF reduce production datablock -> inline_data_one_var
-- On Double_positive reduce production datablock -> inline_data_one_var
-- On Double_negative reduce production datablock -> inline_data_one_var
-- On Double reduce production datablock -> inline_data_one_var
-- On Decimal_positive reduce production datablock -> inline_data_one_var
-- On Decimal_negative reduce production datablock -> inline_data_one_var
-- On Decimal reduce production datablock -> inline_data_one_var
-- On DOT reduce production datablock -> inline_data_one_var
-- On Boolean reduce production datablock -> inline_data_one_var
-- On Blank_node_label reduce production datablock -> inline_data_one_var
-- On BIND reduce production datablock -> inline_data_one_var
-- On ANON reduce production datablock -> inline_data_one_var

State 483:
datablock -> inline_data_full . [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER EOF Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
-- On Var2 reduce production datablock -> inline_data_full
-- On Var1 reduce production datablock -> inline_data_full
-- On VALUES reduce production datablock -> inline_data_full
-- On String_literal reduce production datablock -> inline_data_full
-- On SERVICE reduce production datablock -> inline_data_full
-- On RBRACE reduce production datablock -> inline_data_full
-- On Pname_ns reduce production datablock -> inline_data_full
-- On Pname_ln reduce production datablock -> inline_data_full
-- On OPTIONAL reduce production datablock -> inline_data_full
-- On NIL reduce production datablock -> inline_data_full
-- On MINUS reduce production datablock -> inline_data_full
-- On LPAR reduce production datablock -> inline_data_full
-- On LBRACKET reduce production datablock -> inline_data_full
-- On LBRACE reduce production datablock -> inline_data_full
-- On Iriref_ reduce production datablock -> inline_data_full
-- On Integer_positive reduce production datablock -> inline_data_full
-- On Integer_negative reduce production datablock -> inline_data_full
-- On Integer reduce production datablock -> inline_data_full
-- On GRAPH reduce production datablock -> inline_data_full
-- On FILTER reduce production datablock -> inline_data_full
-- On EOF reduce production datablock -> inline_data_full
-- On Double_positive reduce production datablock -> inline_data_full
-- On Double_negative reduce production datablock -> inline_data_full
-- On Double reduce production datablock -> inline_data_full
-- On Decimal_positive reduce production datablock -> inline_data_full
-- On Decimal_negative reduce production datablock -> inline_data_full
-- On Decimal reduce production datablock -> inline_data_full
-- On DOT reduce production datablock -> inline_data_full
-- On Boolean reduce production datablock -> inline_data_full
-- On Blank_node_label reduce production datablock -> inline_data_full
-- On BIND reduce production datablock -> inline_data_full
-- On ANON reduce production datablock -> inline_data_full

State 484:
values_clause_ -> VALUES datablock . [ RBRACE EOF ]
-- On RBRACE reduce production values_clause_ -> VALUES datablock
-- On EOF reduce production values_clause_ -> VALUES datablock

State 485:
option(values_clause_) -> values_clause_ . [ RBRACE EOF ]
-- On RBRACE reduce production option(values_clause_) -> values_clause_
-- On EOF reduce production option(values_clause_) -> values_clause_

State 486:
subselect -> select_clause where_clause solution_modifier values_clause . [ RBRACE ]
-- On RBRACE reduce production subselect -> select_clause where_clause solution_modifier values_clause

State 487:
values_clause -> option(values_clause_) . [ RBRACE EOF ]
-- On RBRACE reduce production values_clause -> option(values_clause_)
-- On EOF reduce production values_clause -> option(values_clause_)

State 488:
solution_modifier -> option(group_clause) . option(having_clause) option(order_clause) option(limit_offset_clause) [ VALUES RBRACE EOF ]
-- On HAVING shift to state 489
-- On option(having_clause) shift to state 498
-- On having_clause shift to state 524
-- On VALUES reduce production option(having_clause) ->
-- On RBRACE reduce production option(having_clause) ->
-- On ORDER reduce production option(having_clause) ->
-- On OFFSET reduce production option(having_clause) ->
-- On LIMIT reduce production option(having_clause) ->
-- On EOF reduce production option(having_clause) ->

State 489:
having_clause -> HAVING . nonempty_list(having_condition) [ VALUES RBRACE ORDER OFFSET LIMIT EOF ]
-- On YEAR shift to state 19
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On substring_expression shift to state 315
-- On str_replace_expression shift to state 316
-- On regexp_expression shift to state 318
-- On prefixed_name shift to state 97
-- On nonempty_list(having_condition) shift to state 490
-- On iri shift to state 491
-- On having_condition shift to state 492
-- On function_call shift to state 494
-- On constraint_ shift to state 495
-- On built_in_call shift to state 496
-- On bracketted_expression shift to state 497
-- On aggregate shift to state 341

State 490:
having_clause -> HAVING nonempty_list(having_condition) . [ VALUES RBRACE ORDER OFFSET LIMIT EOF ]
-- On VALUES reduce production having_clause -> HAVING nonempty_list(having_condition)
-- On RBRACE reduce production having_clause -> HAVING nonempty_list(having_condition)
-- On ORDER reduce production having_clause -> HAVING nonempty_list(having_condition)
-- On OFFSET reduce production having_clause -> HAVING nonempty_list(having_condition)
-- On LIMIT reduce production having_clause -> HAVING nonempty_list(having_condition)
-- On EOF reduce production having_clause -> HAVING nonempty_list(having_condition)

State 491:
function_call -> iri . arg_list [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR SHA512 SHA384 SHA256 SHA1 SERVICE SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln ORDER OPTIONAL OFFSET NOW NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IF HOURS GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND AVG ASC ANON ABS ]
-- On NIL shift to state 327
-- On LPAR shift to state 328
-- On arg_list shift to state 350

State 492:
nonempty_list(having_condition) -> having_condition . [ VALUES RBRACE ORDER OFFSET LIMIT EOF ]
nonempty_list(having_condition) -> having_condition . nonempty_list(having_condition) [ VALUES RBRACE ORDER OFFSET LIMIT EOF ]
-- On YEAR shift to state 19
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On substring_expression shift to state 315
-- On str_replace_expression shift to state 316
-- On regexp_expression shift to state 318
-- On prefixed_name shift to state 97
-- On nonempty_list(having_condition) shift to state 493
-- On iri shift to state 491
-- On having_condition shift to state 492
-- On function_call shift to state 494
-- On constraint_ shift to state 495
-- On built_in_call shift to state 496
-- On bracketted_expression shift to state 497
-- On aggregate shift to state 341
-- On VALUES reduce production nonempty_list(having_condition) -> having_condition
-- On RBRACE reduce production nonempty_list(having_condition) -> having_condition
-- On ORDER reduce production nonempty_list(having_condition) -> having_condition
-- On OFFSET reduce production nonempty_list(having_condition) -> having_condition
-- On LIMIT reduce production nonempty_list(having_condition) -> having_condition
-- On EOF reduce production nonempty_list(having_condition) -> having_condition

State 493:
nonempty_list(having_condition) -> having_condition nonempty_list(having_condition) . [ VALUES RBRACE ORDER OFFSET LIMIT EOF ]
-- On VALUES reduce production nonempty_list(having_condition) -> having_condition nonempty_list(having_condition)
-- On RBRACE reduce production nonempty_list(having_condition) -> having_condition nonempty_list(having_condition)
-- On ORDER reduce production nonempty_list(having_condition) -> having_condition nonempty_list(having_condition)
-- On OFFSET reduce production nonempty_list(having_condition) -> having_condition nonempty_list(having_condition)
-- On LIMIT reduce production nonempty_list(having_condition) -> having_condition nonempty_list(having_condition)
-- On EOF reduce production nonempty_list(having_condition) -> having_condition nonempty_list(having_condition)

State 494:
constraint_ -> function_call . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR SHA512 SHA384 SHA256 SHA1 SERVICE SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln ORDER OPTIONAL OFFSET NOW NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IF HOURS GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND AVG ASC ANON ABS ]
-- On YEAR reduce production constraint_ -> function_call
-- On Var2 reduce production constraint_ -> function_call
-- On Var1 reduce production constraint_ -> function_call
-- On VALUES reduce production constraint_ -> function_call
-- On UUID reduce production constraint_ -> function_call
-- On URI reduce production constraint_ -> function_call
-- On UCASE reduce production constraint_ -> function_call
-- On TZ reduce production constraint_ -> function_call
-- On TIMEZONE reduce production constraint_ -> function_call
-- On String_literal reduce production constraint_ -> function_call
-- On SUM reduce production constraint_ -> function_call
-- On SUBSTR reduce production constraint_ -> function_call
-- On STRUUID reduce production constraint_ -> function_call
-- On STRSTARTS reduce production constraint_ -> function_call
-- On STRLEN reduce production constraint_ -> function_call
-- On STRLANG reduce production constraint_ -> function_call
-- On STRENDS reduce production constraint_ -> function_call
-- On STRDT reduce production constraint_ -> function_call
-- On STRBEFORE reduce production constraint_ -> function_call
-- On STRAFTER reduce production constraint_ -> function_call
-- On STR reduce production constraint_ -> function_call
-- On SHA512 reduce production constraint_ -> function_call
-- On SHA384 reduce production constraint_ -> function_call
-- On SHA256 reduce production constraint_ -> function_call
-- On SHA1 reduce production constraint_ -> function_call
-- On SERVICE reduce production constraint_ -> function_call
-- On SECONDS reduce production constraint_ -> function_call
-- On SAMPLE reduce production constraint_ -> function_call
-- On SAMETERM reduce production constraint_ -> function_call
-- On ROUND reduce production constraint_ -> function_call
-- On REPLACE reduce production constraint_ -> function_call
-- On REGEX reduce production constraint_ -> function_call
-- On RBRACE reduce production constraint_ -> function_call
-- On RAND reduce production constraint_ -> function_call
-- On Pname_ns reduce production constraint_ -> function_call
-- On Pname_ln reduce production constraint_ -> function_call
-- On ORDER reduce production constraint_ -> function_call
-- On OPTIONAL reduce production constraint_ -> function_call
-- On OFFSET reduce production constraint_ -> function_call
-- On NOW reduce production constraint_ -> function_call
-- On NOT reduce production constraint_ -> function_call
-- On NIL reduce production constraint_ -> function_call
-- On MONTH reduce production constraint_ -> function_call
-- On MINUTES reduce production constraint_ -> function_call
-- On MINUS reduce production constraint_ -> function_call
-- On MIN reduce production constraint_ -> function_call
-- On MD5 reduce production constraint_ -> function_call
-- On MAX reduce production constraint_ -> function_call
-- On LPAR reduce production constraint_ -> function_call
-- On LIMIT reduce production constraint_ -> function_call
-- On LCASE reduce production constraint_ -> function_call
-- On LBRACKET reduce production constraint_ -> function_call
-- On LBRACE reduce production constraint_ -> function_call
-- On LANGMATCHES reduce production constraint_ -> function_call
-- On LANG reduce production constraint_ -> function_call
-- On Iriref_ reduce production constraint_ -> function_call
-- On Integer_positive reduce production constraint_ -> function_call
-- On Integer_negative reduce production constraint_ -> function_call
-- On Integer reduce production constraint_ -> function_call
-- On ISURI reduce production constraint_ -> function_call
-- On ISNUMERIC reduce production constraint_ -> function_call
-- On ISLITERAL reduce production constraint_ -> function_call
-- On ISIRI reduce production constraint_ -> function_call
-- On ISBLANK reduce production constraint_ -> function_call
-- On IRI reduce production constraint_ -> function_call
-- On IF reduce production constraint_ -> function_call
-- On HOURS reduce production constraint_ -> function_call
-- On GROUP_CONCAT reduce production constraint_ -> function_call
-- On GRAPH reduce production constraint_ -> function_call
-- On FLOOR reduce production constraint_ -> function_call
-- On FILTER reduce production constraint_ -> function_call
-- On EXISTS reduce production constraint_ -> function_call
-- On EOF reduce production constraint_ -> function_call
-- On ENCODE_FOR_URI reduce production constraint_ -> function_call
-- On Double_positive reduce production constraint_ -> function_call
-- On Double_negative reduce production constraint_ -> function_call
-- On Double reduce production constraint_ -> function_call
-- On Decimal_positive reduce production constraint_ -> function_call
-- On Decimal_negative reduce production constraint_ -> function_call
-- On Decimal reduce production constraint_ -> function_call
-- On DOT reduce production constraint_ -> function_call
-- On DESC reduce production constraint_ -> function_call
-- On DAY reduce production constraint_ -> function_call
-- On DATATYPE reduce production constraint_ -> function_call
-- On COUNT reduce production constraint_ -> function_call
-- On CONTAINS reduce production constraint_ -> function_call
-- On CONCAT reduce production constraint_ -> function_call
-- On COALESCE reduce production constraint_ -> function_call
-- On CEIL reduce production constraint_ -> function_call
-- On Boolean reduce production constraint_ -> function_call
-- On Blank_node_label reduce production constraint_ -> function_call
-- On BOUND reduce production constraint_ -> function_call
-- On BNODE reduce production constraint_ -> function_call
-- On BIND reduce production constraint_ -> function_call
-- On AVG reduce production constraint_ -> function_call
-- On ASC reduce production constraint_ -> function_call
-- On ANON reduce production constraint_ -> function_call
-- On ABS reduce production constraint_ -> function_call

State 495:
having_condition -> constraint_ . [ YEAR VALUES UUID URI UCASE TZ TIMEZONE SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln ORDER OFFSET NOW NOT MONTH MINUTES MIN MD5 MAX LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IF HOURS GROUP_CONCAT FLOOR EXISTS EOF ENCODE_FOR_URI DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL BOUND BNODE AVG ABS ]
-- On YEAR reduce production having_condition -> constraint_
-- On VALUES reduce production having_condition -> constraint_
-- On UUID reduce production having_condition -> constraint_
-- On URI reduce production having_condition -> constraint_
-- On UCASE reduce production having_condition -> constraint_
-- On TZ reduce production having_condition -> constraint_
-- On TIMEZONE reduce production having_condition -> constraint_
-- On SUM reduce production having_condition -> constraint_
-- On SUBSTR reduce production having_condition -> constraint_
-- On STRUUID reduce production having_condition -> constraint_
-- On STRSTARTS reduce production having_condition -> constraint_
-- On STRLEN reduce production having_condition -> constraint_
-- On STRLANG reduce production having_condition -> constraint_
-- On STRENDS reduce production having_condition -> constraint_
-- On STRDT reduce production having_condition -> constraint_
-- On STRBEFORE reduce production having_condition -> constraint_
-- On STRAFTER reduce production having_condition -> constraint_
-- On STR reduce production having_condition -> constraint_
-- On SHA512 reduce production having_condition -> constraint_
-- On SHA384 reduce production having_condition -> constraint_
-- On SHA256 reduce production having_condition -> constraint_
-- On SHA1 reduce production having_condition -> constraint_
-- On SECONDS reduce production having_condition -> constraint_
-- On SAMPLE reduce production having_condition -> constraint_
-- On SAMETERM reduce production having_condition -> constraint_
-- On ROUND reduce production having_condition -> constraint_
-- On REPLACE reduce production having_condition -> constraint_
-- On REGEX reduce production having_condition -> constraint_
-- On RBRACE reduce production having_condition -> constraint_
-- On RAND reduce production having_condition -> constraint_
-- On Pname_ns reduce production having_condition -> constraint_
-- On Pname_ln reduce production having_condition -> constraint_
-- On ORDER reduce production having_condition -> constraint_
-- On OFFSET reduce production having_condition -> constraint_
-- On NOW reduce production having_condition -> constraint_
-- On NOT reduce production having_condition -> constraint_
-- On MONTH reduce production having_condition -> constraint_
-- On MINUTES reduce production having_condition -> constraint_
-- On MIN reduce production having_condition -> constraint_
-- On MD5 reduce production having_condition -> constraint_
-- On MAX reduce production having_condition -> constraint_
-- On LPAR reduce production having_condition -> constraint_
-- On LIMIT reduce production having_condition -> constraint_
-- On LCASE reduce production having_condition -> constraint_
-- On LANGMATCHES reduce production having_condition -> constraint_
-- On LANG reduce production having_condition -> constraint_
-- On Iriref_ reduce production having_condition -> constraint_
-- On ISURI reduce production having_condition -> constraint_
-- On ISNUMERIC reduce production having_condition -> constraint_
-- On ISLITERAL reduce production having_condition -> constraint_
-- On ISIRI reduce production having_condition -> constraint_
-- On ISBLANK reduce production having_condition -> constraint_
-- On IRI reduce production having_condition -> constraint_
-- On IF reduce production having_condition -> constraint_
-- On HOURS reduce production having_condition -> constraint_
-- On GROUP_CONCAT reduce production having_condition -> constraint_
-- On FLOOR reduce production having_condition -> constraint_
-- On EXISTS reduce production having_condition -> constraint_
-- On EOF reduce production having_condition -> constraint_
-- On ENCODE_FOR_URI reduce production having_condition -> constraint_
-- On DAY reduce production having_condition -> constraint_
-- On DATATYPE reduce production having_condition -> constraint_
-- On COUNT reduce production having_condition -> constraint_
-- On CONTAINS reduce production having_condition -> constraint_
-- On CONCAT reduce production having_condition -> constraint_
-- On COALESCE reduce production having_condition -> constraint_
-- On CEIL reduce production having_condition -> constraint_
-- On BOUND reduce production having_condition -> constraint_
-- On BNODE reduce production having_condition -> constraint_
-- On AVG reduce production having_condition -> constraint_
-- On ABS reduce production having_condition -> constraint_

State 496:
constraint_ -> built_in_call . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR SHA512 SHA384 SHA256 SHA1 SERVICE SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln ORDER OPTIONAL OFFSET NOW NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IF HOURS GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND AVG ASC ANON ABS ]
-- On YEAR reduce production constraint_ -> built_in_call
-- On Var2 reduce production constraint_ -> built_in_call
-- On Var1 reduce production constraint_ -> built_in_call
-- On VALUES reduce production constraint_ -> built_in_call
-- On UUID reduce production constraint_ -> built_in_call
-- On URI reduce production constraint_ -> built_in_call
-- On UCASE reduce production constraint_ -> built_in_call
-- On TZ reduce production constraint_ -> built_in_call
-- On TIMEZONE reduce production constraint_ -> built_in_call
-- On String_literal reduce production constraint_ -> built_in_call
-- On SUM reduce production constraint_ -> built_in_call
-- On SUBSTR reduce production constraint_ -> built_in_call
-- On STRUUID reduce production constraint_ -> built_in_call
-- On STRSTARTS reduce production constraint_ -> built_in_call
-- On STRLEN reduce production constraint_ -> built_in_call
-- On STRLANG reduce production constraint_ -> built_in_call
-- On STRENDS reduce production constraint_ -> built_in_call
-- On STRDT reduce production constraint_ -> built_in_call
-- On STRBEFORE reduce production constraint_ -> built_in_call
-- On STRAFTER reduce production constraint_ -> built_in_call
-- On STR reduce production constraint_ -> built_in_call
-- On SHA512 reduce production constraint_ -> built_in_call
-- On SHA384 reduce production constraint_ -> built_in_call
-- On SHA256 reduce production constraint_ -> built_in_call
-- On SHA1 reduce production constraint_ -> built_in_call
-- On SERVICE reduce production constraint_ -> built_in_call
-- On SECONDS reduce production constraint_ -> built_in_call
-- On SAMPLE reduce production constraint_ -> built_in_call
-- On SAMETERM reduce production constraint_ -> built_in_call
-- On ROUND reduce production constraint_ -> built_in_call
-- On REPLACE reduce production constraint_ -> built_in_call
-- On REGEX reduce production constraint_ -> built_in_call
-- On RBRACE reduce production constraint_ -> built_in_call
-- On RAND reduce production constraint_ -> built_in_call
-- On Pname_ns reduce production constraint_ -> built_in_call
-- On Pname_ln reduce production constraint_ -> built_in_call
-- On ORDER reduce production constraint_ -> built_in_call
-- On OPTIONAL reduce production constraint_ -> built_in_call
-- On OFFSET reduce production constraint_ -> built_in_call
-- On NOW reduce production constraint_ -> built_in_call
-- On NOT reduce production constraint_ -> built_in_call
-- On NIL reduce production constraint_ -> built_in_call
-- On MONTH reduce production constraint_ -> built_in_call
-- On MINUTES reduce production constraint_ -> built_in_call
-- On MINUS reduce production constraint_ -> built_in_call
-- On MIN reduce production constraint_ -> built_in_call
-- On MD5 reduce production constraint_ -> built_in_call
-- On MAX reduce production constraint_ -> built_in_call
-- On LPAR reduce production constraint_ -> built_in_call
-- On LIMIT reduce production constraint_ -> built_in_call
-- On LCASE reduce production constraint_ -> built_in_call
-- On LBRACKET reduce production constraint_ -> built_in_call
-- On LBRACE reduce production constraint_ -> built_in_call
-- On LANGMATCHES reduce production constraint_ -> built_in_call
-- On LANG reduce production constraint_ -> built_in_call
-- On Iriref_ reduce production constraint_ -> built_in_call
-- On Integer_positive reduce production constraint_ -> built_in_call
-- On Integer_negative reduce production constraint_ -> built_in_call
-- On Integer reduce production constraint_ -> built_in_call
-- On ISURI reduce production constraint_ -> built_in_call
-- On ISNUMERIC reduce production constraint_ -> built_in_call
-- On ISLITERAL reduce production constraint_ -> built_in_call
-- On ISIRI reduce production constraint_ -> built_in_call
-- On ISBLANK reduce production constraint_ -> built_in_call
-- On IRI reduce production constraint_ -> built_in_call
-- On IF reduce production constraint_ -> built_in_call
-- On HOURS reduce production constraint_ -> built_in_call
-- On GROUP_CONCAT reduce production constraint_ -> built_in_call
-- On GRAPH reduce production constraint_ -> built_in_call
-- On FLOOR reduce production constraint_ -> built_in_call
-- On FILTER reduce production constraint_ -> built_in_call
-- On EXISTS reduce production constraint_ -> built_in_call
-- On EOF reduce production constraint_ -> built_in_call
-- On ENCODE_FOR_URI reduce production constraint_ -> built_in_call
-- On Double_positive reduce production constraint_ -> built_in_call
-- On Double_negative reduce production constraint_ -> built_in_call
-- On Double reduce production constraint_ -> built_in_call
-- On Decimal_positive reduce production constraint_ -> built_in_call
-- On Decimal_negative reduce production constraint_ -> built_in_call
-- On Decimal reduce production constraint_ -> built_in_call
-- On DOT reduce production constraint_ -> built_in_call
-- On DESC reduce production constraint_ -> built_in_call
-- On DAY reduce production constraint_ -> built_in_call
-- On DATATYPE reduce production constraint_ -> built_in_call
-- On COUNT reduce production constraint_ -> built_in_call
-- On CONTAINS reduce production constraint_ -> built_in_call
-- On CONCAT reduce production constraint_ -> built_in_call
-- On COALESCE reduce production constraint_ -> built_in_call
-- On CEIL reduce production constraint_ -> built_in_call
-- On Boolean reduce production constraint_ -> built_in_call
-- On Blank_node_label reduce production constraint_ -> built_in_call
-- On BOUND reduce production constraint_ -> built_in_call
-- On BNODE reduce production constraint_ -> built_in_call
-- On BIND reduce production constraint_ -> built_in_call
-- On AVG reduce production constraint_ -> built_in_call
-- On ASC reduce production constraint_ -> built_in_call
-- On ANON reduce production constraint_ -> built_in_call
-- On ABS reduce production constraint_ -> built_in_call

State 497:
constraint_ -> bracketted_expression . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR SHA512 SHA384 SHA256 SHA1 SERVICE SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln ORDER OPTIONAL OFFSET NOW NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IF HOURS GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND AVG ASC ANON ABS ]
-- On YEAR reduce production constraint_ -> bracketted_expression
-- On Var2 reduce production constraint_ -> bracketted_expression
-- On Var1 reduce production constraint_ -> bracketted_expression
-- On VALUES reduce production constraint_ -> bracketted_expression
-- On UUID reduce production constraint_ -> bracketted_expression
-- On URI reduce production constraint_ -> bracketted_expression
-- On UCASE reduce production constraint_ -> bracketted_expression
-- On TZ reduce production constraint_ -> bracketted_expression
-- On TIMEZONE reduce production constraint_ -> bracketted_expression
-- On String_literal reduce production constraint_ -> bracketted_expression
-- On SUM reduce production constraint_ -> bracketted_expression
-- On SUBSTR reduce production constraint_ -> bracketted_expression
-- On STRUUID reduce production constraint_ -> bracketted_expression
-- On STRSTARTS reduce production constraint_ -> bracketted_expression
-- On STRLEN reduce production constraint_ -> bracketted_expression
-- On STRLANG reduce production constraint_ -> bracketted_expression
-- On STRENDS reduce production constraint_ -> bracketted_expression
-- On STRDT reduce production constraint_ -> bracketted_expression
-- On STRBEFORE reduce production constraint_ -> bracketted_expression
-- On STRAFTER reduce production constraint_ -> bracketted_expression
-- On STR reduce production constraint_ -> bracketted_expression
-- On SHA512 reduce production constraint_ -> bracketted_expression
-- On SHA384 reduce production constraint_ -> bracketted_expression
-- On SHA256 reduce production constraint_ -> bracketted_expression
-- On SHA1 reduce production constraint_ -> bracketted_expression
-- On SERVICE reduce production constraint_ -> bracketted_expression
-- On SECONDS reduce production constraint_ -> bracketted_expression
-- On SAMPLE reduce production constraint_ -> bracketted_expression
-- On SAMETERM reduce production constraint_ -> bracketted_expression
-- On ROUND reduce production constraint_ -> bracketted_expression
-- On REPLACE reduce production constraint_ -> bracketted_expression
-- On REGEX reduce production constraint_ -> bracketted_expression
-- On RBRACE reduce production constraint_ -> bracketted_expression
-- On RAND reduce production constraint_ -> bracketted_expression
-- On Pname_ns reduce production constraint_ -> bracketted_expression
-- On Pname_ln reduce production constraint_ -> bracketted_expression
-- On ORDER reduce production constraint_ -> bracketted_expression
-- On OPTIONAL reduce production constraint_ -> bracketted_expression
-- On OFFSET reduce production constraint_ -> bracketted_expression
-- On NOW reduce production constraint_ -> bracketted_expression
-- On NOT reduce production constraint_ -> bracketted_expression
-- On NIL reduce production constraint_ -> bracketted_expression
-- On MONTH reduce production constraint_ -> bracketted_expression
-- On MINUTES reduce production constraint_ -> bracketted_expression
-- On MINUS reduce production constraint_ -> bracketted_expression
-- On MIN reduce production constraint_ -> bracketted_expression
-- On MD5 reduce production constraint_ -> bracketted_expression
-- On MAX reduce production constraint_ -> bracketted_expression
-- On LPAR reduce production constraint_ -> bracketted_expression
-- On LIMIT reduce production constraint_ -> bracketted_expression
-- On LCASE reduce production constraint_ -> bracketted_expression
-- On LBRACKET reduce production constraint_ -> bracketted_expression
-- On LBRACE reduce production constraint_ -> bracketted_expression
-- On LANGMATCHES reduce production constraint_ -> bracketted_expression
-- On LANG reduce production constraint_ -> bracketted_expression
-- On Iriref_ reduce production constraint_ -> bracketted_expression
-- On Integer_positive reduce production constraint_ -> bracketted_expression
-- On Integer_negative reduce production constraint_ -> bracketted_expression
-- On Integer reduce production constraint_ -> bracketted_expression
-- On ISURI reduce production constraint_ -> bracketted_expression
-- On ISNUMERIC reduce production constraint_ -> bracketted_expression
-- On ISLITERAL reduce production constraint_ -> bracketted_expression
-- On ISIRI reduce production constraint_ -> bracketted_expression
-- On ISBLANK reduce production constraint_ -> bracketted_expression
-- On IRI reduce production constraint_ -> bracketted_expression
-- On IF reduce production constraint_ -> bracketted_expression
-- On HOURS reduce production constraint_ -> bracketted_expression
-- On GROUP_CONCAT reduce production constraint_ -> bracketted_expression
-- On GRAPH reduce production constraint_ -> bracketted_expression
-- On FLOOR reduce production constraint_ -> bracketted_expression
-- On FILTER reduce production constraint_ -> bracketted_expression
-- On EXISTS reduce production constraint_ -> bracketted_expression
-- On EOF reduce production constraint_ -> bracketted_expression
-- On ENCODE_FOR_URI reduce production constraint_ -> bracketted_expression
-- On Double_positive reduce production constraint_ -> bracketted_expression
-- On Double_negative reduce production constraint_ -> bracketted_expression
-- On Double reduce production constraint_ -> bracketted_expression
-- On Decimal_positive reduce production constraint_ -> bracketted_expression
-- On Decimal_negative reduce production constraint_ -> bracketted_expression
-- On Decimal reduce production constraint_ -> bracketted_expression
-- On DOT reduce production constraint_ -> bracketted_expression
-- On DESC reduce production constraint_ -> bracketted_expression
-- On DAY reduce production constraint_ -> bracketted_expression
-- On DATATYPE reduce production constraint_ -> bracketted_expression
-- On COUNT reduce production constraint_ -> bracketted_expression
-- On CONTAINS reduce production constraint_ -> bracketted_expression
-- On CONCAT reduce production constraint_ -> bracketted_expression
-- On COALESCE reduce production constraint_ -> bracketted_expression
-- On CEIL reduce production constraint_ -> bracketted_expression
-- On Boolean reduce production constraint_ -> bracketted_expression
-- On Blank_node_label reduce production constraint_ -> bracketted_expression
-- On BOUND reduce production constraint_ -> bracketted_expression
-- On BNODE reduce production constraint_ -> bracketted_expression
-- On BIND reduce production constraint_ -> bracketted_expression
-- On AVG reduce production constraint_ -> bracketted_expression
-- On ASC reduce production constraint_ -> bracketted_expression
-- On ANON reduce production constraint_ -> bracketted_expression
-- On ABS reduce production constraint_ -> bracketted_expression

State 498:
solution_modifier -> option(group_clause) option(having_clause) . option(order_clause) option(limit_offset_clause) [ VALUES RBRACE EOF ]
-- On ORDER shift to state 499
-- On order_clause shift to state 510
-- On option(order_clause) shift to state 511
-- On VALUES reduce production option(order_clause) ->
-- On RBRACE reduce production option(order_clause) ->
-- On OFFSET reduce production option(order_clause) ->
-- On LIMIT reduce production option(order_clause) ->
-- On EOF reduce production option(order_clause) ->

State 499:
order_clause -> ORDER . BY nonempty_list(order_condition) [ VALUES RBRACE OFFSET LIMIT EOF ]
-- On BY shift to state 500

State 500:
order_clause -> ORDER BY . nonempty_list(order_condition) [ VALUES RBRACE OFFSET LIMIT EOF ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On DESC shift to state 501
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On AVG shift to state 306
-- On ASC shift to state 503
-- On ABS shift to state 309
-- On var shift to state 505
-- On substring_expression shift to state 315
-- On str_replace_expression shift to state 316
-- On regexp_expression shift to state 318
-- On prefixed_name shift to state 97
-- On order_condition shift to state 506
-- On nonempty_list(order_condition) shift to state 509
-- On iri shift to state 491
-- On function_call shift to state 494
-- On constraint_ shift to state 508
-- On built_in_call shift to state 496
-- On bracketted_expression shift to state 497
-- On aggregate shift to state 341

State 501:
order_condition -> DESC . bracketted_expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln OFFSET NOW NOT MONTH MINUTES MIN MD5 MAX LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IF HOURS GROUP_CONCAT FLOOR EXISTS EOF ENCODE_FOR_URI DESC DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL BOUND BNODE AVG ASC ABS ]
-- On LPAR shift to state 248
-- On bracketted_expression shift to state 502

State 502:
order_condition -> DESC bracketted_expression . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln OFFSET NOW NOT MONTH MINUTES MIN MD5 MAX LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IF HOURS GROUP_CONCAT FLOOR EXISTS EOF ENCODE_FOR_URI DESC DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL BOUND BNODE AVG ASC ABS ]
-- On YEAR reduce production order_condition -> DESC bracketted_expression
-- On Var2 reduce production order_condition -> DESC bracketted_expression
-- On Var1 reduce production order_condition -> DESC bracketted_expression
-- On VALUES reduce production order_condition -> DESC bracketted_expression
-- On UUID reduce production order_condition -> DESC bracketted_expression
-- On URI reduce production order_condition -> DESC bracketted_expression
-- On UCASE reduce production order_condition -> DESC bracketted_expression
-- On TZ reduce production order_condition -> DESC bracketted_expression
-- On TIMEZONE reduce production order_condition -> DESC bracketted_expression
-- On SUM reduce production order_condition -> DESC bracketted_expression
-- On SUBSTR reduce production order_condition -> DESC bracketted_expression
-- On STRUUID reduce production order_condition -> DESC bracketted_expression
-- On STRSTARTS reduce production order_condition -> DESC bracketted_expression
-- On STRLEN reduce production order_condition -> DESC bracketted_expression
-- On STRLANG reduce production order_condition -> DESC bracketted_expression
-- On STRENDS reduce production order_condition -> DESC bracketted_expression
-- On STRDT reduce production order_condition -> DESC bracketted_expression
-- On STRBEFORE reduce production order_condition -> DESC bracketted_expression
-- On STRAFTER reduce production order_condition -> DESC bracketted_expression
-- On STR reduce production order_condition -> DESC bracketted_expression
-- On SHA512 reduce production order_condition -> DESC bracketted_expression
-- On SHA384 reduce production order_condition -> DESC bracketted_expression
-- On SHA256 reduce production order_condition -> DESC bracketted_expression
-- On SHA1 reduce production order_condition -> DESC bracketted_expression
-- On SECONDS reduce production order_condition -> DESC bracketted_expression
-- On SAMPLE reduce production order_condition -> DESC bracketted_expression
-- On SAMETERM reduce production order_condition -> DESC bracketted_expression
-- On ROUND reduce production order_condition -> DESC bracketted_expression
-- On REPLACE reduce production order_condition -> DESC bracketted_expression
-- On REGEX reduce production order_condition -> DESC bracketted_expression
-- On RBRACE reduce production order_condition -> DESC bracketted_expression
-- On RAND reduce production order_condition -> DESC bracketted_expression
-- On Pname_ns reduce production order_condition -> DESC bracketted_expression
-- On Pname_ln reduce production order_condition -> DESC bracketted_expression
-- On OFFSET reduce production order_condition -> DESC bracketted_expression
-- On NOW reduce production order_condition -> DESC bracketted_expression
-- On NOT reduce production order_condition -> DESC bracketted_expression
-- On MONTH reduce production order_condition -> DESC bracketted_expression
-- On MINUTES reduce production order_condition -> DESC bracketted_expression
-- On MIN reduce production order_condition -> DESC bracketted_expression
-- On MD5 reduce production order_condition -> DESC bracketted_expression
-- On MAX reduce production order_condition -> DESC bracketted_expression
-- On LPAR reduce production order_condition -> DESC bracketted_expression
-- On LIMIT reduce production order_condition -> DESC bracketted_expression
-- On LCASE reduce production order_condition -> DESC bracketted_expression
-- On LANGMATCHES reduce production order_condition -> DESC bracketted_expression
-- On LANG reduce production order_condition -> DESC bracketted_expression
-- On Iriref_ reduce production order_condition -> DESC bracketted_expression
-- On ISURI reduce production order_condition -> DESC bracketted_expression
-- On ISNUMERIC reduce production order_condition -> DESC bracketted_expression
-- On ISLITERAL reduce production order_condition -> DESC bracketted_expression
-- On ISIRI reduce production order_condition -> DESC bracketted_expression
-- On ISBLANK reduce production order_condition -> DESC bracketted_expression
-- On IRI reduce production order_condition -> DESC bracketted_expression
-- On IF reduce production order_condition -> DESC bracketted_expression
-- On HOURS reduce production order_condition -> DESC bracketted_expression
-- On GROUP_CONCAT reduce production order_condition -> DESC bracketted_expression
-- On FLOOR reduce production order_condition -> DESC bracketted_expression
-- On EXISTS reduce production order_condition -> DESC bracketted_expression
-- On EOF reduce production order_condition -> DESC bracketted_expression
-- On ENCODE_FOR_URI reduce production order_condition -> DESC bracketted_expression
-- On DESC reduce production order_condition -> DESC bracketted_expression
-- On DAY reduce production order_condition -> DESC bracketted_expression
-- On DATATYPE reduce production order_condition -> DESC bracketted_expression
-- On COUNT reduce production order_condition -> DESC bracketted_expression
-- On CONTAINS reduce production order_condition -> DESC bracketted_expression
-- On CONCAT reduce production order_condition -> DESC bracketted_expression
-- On COALESCE reduce production order_condition -> DESC bracketted_expression
-- On CEIL reduce production order_condition -> DESC bracketted_expression
-- On BOUND reduce production order_condition -> DESC bracketted_expression
-- On BNODE reduce production order_condition -> DESC bracketted_expression
-- On AVG reduce production order_condition -> DESC bracketted_expression
-- On ASC reduce production order_condition -> DESC bracketted_expression
-- On ABS reduce production order_condition -> DESC bracketted_expression

State 503:
order_condition -> ASC . bracketted_expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln OFFSET NOW NOT MONTH MINUTES MIN MD5 MAX LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IF HOURS GROUP_CONCAT FLOOR EXISTS EOF ENCODE_FOR_URI DESC DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL BOUND BNODE AVG ASC ABS ]
-- On LPAR shift to state 248
-- On bracketted_expression shift to state 504

State 504:
order_condition -> ASC bracketted_expression . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln OFFSET NOW NOT MONTH MINUTES MIN MD5 MAX LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IF HOURS GROUP_CONCAT FLOOR EXISTS EOF ENCODE_FOR_URI DESC DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL BOUND BNODE AVG ASC ABS ]
-- On YEAR reduce production order_condition -> ASC bracketted_expression
-- On Var2 reduce production order_condition -> ASC bracketted_expression
-- On Var1 reduce production order_condition -> ASC bracketted_expression
-- On VALUES reduce production order_condition -> ASC bracketted_expression
-- On UUID reduce production order_condition -> ASC bracketted_expression
-- On URI reduce production order_condition -> ASC bracketted_expression
-- On UCASE reduce production order_condition -> ASC bracketted_expression
-- On TZ reduce production order_condition -> ASC bracketted_expression
-- On TIMEZONE reduce production order_condition -> ASC bracketted_expression
-- On SUM reduce production order_condition -> ASC bracketted_expression
-- On SUBSTR reduce production order_condition -> ASC bracketted_expression
-- On STRUUID reduce production order_condition -> ASC bracketted_expression
-- On STRSTARTS reduce production order_condition -> ASC bracketted_expression
-- On STRLEN reduce production order_condition -> ASC bracketted_expression
-- On STRLANG reduce production order_condition -> ASC bracketted_expression
-- On STRENDS reduce production order_condition -> ASC bracketted_expression
-- On STRDT reduce production order_condition -> ASC bracketted_expression
-- On STRBEFORE reduce production order_condition -> ASC bracketted_expression
-- On STRAFTER reduce production order_condition -> ASC bracketted_expression
-- On STR reduce production order_condition -> ASC bracketted_expression
-- On SHA512 reduce production order_condition -> ASC bracketted_expression
-- On SHA384 reduce production order_condition -> ASC bracketted_expression
-- On SHA256 reduce production order_condition -> ASC bracketted_expression
-- On SHA1 reduce production order_condition -> ASC bracketted_expression
-- On SECONDS reduce production order_condition -> ASC bracketted_expression
-- On SAMPLE reduce production order_condition -> ASC bracketted_expression
-- On SAMETERM reduce production order_condition -> ASC bracketted_expression
-- On ROUND reduce production order_condition -> ASC bracketted_expression
-- On REPLACE reduce production order_condition -> ASC bracketted_expression
-- On REGEX reduce production order_condition -> ASC bracketted_expression
-- On RBRACE reduce production order_condition -> ASC bracketted_expression
-- On RAND reduce production order_condition -> ASC bracketted_expression
-- On Pname_ns reduce production order_condition -> ASC bracketted_expression
-- On Pname_ln reduce production order_condition -> ASC bracketted_expression
-- On OFFSET reduce production order_condition -> ASC bracketted_expression
-- On NOW reduce production order_condition -> ASC bracketted_expression
-- On NOT reduce production order_condition -> ASC bracketted_expression
-- On MONTH reduce production order_condition -> ASC bracketted_expression
-- On MINUTES reduce production order_condition -> ASC bracketted_expression
-- On MIN reduce production order_condition -> ASC bracketted_expression
-- On MD5 reduce production order_condition -> ASC bracketted_expression
-- On MAX reduce production order_condition -> ASC bracketted_expression
-- On LPAR reduce production order_condition -> ASC bracketted_expression
-- On LIMIT reduce production order_condition -> ASC bracketted_expression
-- On LCASE reduce production order_condition -> ASC bracketted_expression
-- On LANGMATCHES reduce production order_condition -> ASC bracketted_expression
-- On LANG reduce production order_condition -> ASC bracketted_expression
-- On Iriref_ reduce production order_condition -> ASC bracketted_expression
-- On ISURI reduce production order_condition -> ASC bracketted_expression
-- On ISNUMERIC reduce production order_condition -> ASC bracketted_expression
-- On ISLITERAL reduce production order_condition -> ASC bracketted_expression
-- On ISIRI reduce production order_condition -> ASC bracketted_expression
-- On ISBLANK reduce production order_condition -> ASC bracketted_expression
-- On IRI reduce production order_condition -> ASC bracketted_expression
-- On IF reduce production order_condition -> ASC bracketted_expression
-- On HOURS reduce production order_condition -> ASC bracketted_expression
-- On GROUP_CONCAT reduce production order_condition -> ASC bracketted_expression
-- On FLOOR reduce production order_condition -> ASC bracketted_expression
-- On EXISTS reduce production order_condition -> ASC bracketted_expression
-- On EOF reduce production order_condition -> ASC bracketted_expression
-- On ENCODE_FOR_URI reduce production order_condition -> ASC bracketted_expression
-- On DESC reduce production order_condition -> ASC bracketted_expression
-- On DAY reduce production order_condition -> ASC bracketted_expression
-- On DATATYPE reduce production order_condition -> ASC bracketted_expression
-- On COUNT reduce production order_condition -> ASC bracketted_expression
-- On CONTAINS reduce production order_condition -> ASC bracketted_expression
-- On CONCAT reduce production order_condition -> ASC bracketted_expression
-- On COALESCE reduce production order_condition -> ASC bracketted_expression
-- On CEIL reduce production order_condition -> ASC bracketted_expression
-- On BOUND reduce production order_condition -> ASC bracketted_expression
-- On BNODE reduce production order_condition -> ASC bracketted_expression
-- On AVG reduce production order_condition -> ASC bracketted_expression
-- On ASC reduce production order_condition -> ASC bracketted_expression
-- On ABS reduce production order_condition -> ASC bracketted_expression

State 505:
order_condition -> var . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln OFFSET NOW NOT MONTH MINUTES MIN MD5 MAX LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IF HOURS GROUP_CONCAT FLOOR EXISTS EOF ENCODE_FOR_URI DESC DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL BOUND BNODE AVG ASC ABS ]
-- On YEAR reduce production order_condition -> var
-- On Var2 reduce production order_condition -> var
-- On Var1 reduce production order_condition -> var
-- On VALUES reduce production order_condition -> var
-- On UUID reduce production order_condition -> var
-- On URI reduce production order_condition -> var
-- On UCASE reduce production order_condition -> var
-- On TZ reduce production order_condition -> var
-- On TIMEZONE reduce production order_condition -> var
-- On SUM reduce production order_condition -> var
-- On SUBSTR reduce production order_condition -> var
-- On STRUUID reduce production order_condition -> var
-- On STRSTARTS reduce production order_condition -> var
-- On STRLEN reduce production order_condition -> var
-- On STRLANG reduce production order_condition -> var
-- On STRENDS reduce production order_condition -> var
-- On STRDT reduce production order_condition -> var
-- On STRBEFORE reduce production order_condition -> var
-- On STRAFTER reduce production order_condition -> var
-- On STR reduce production order_condition -> var
-- On SHA512 reduce production order_condition -> var
-- On SHA384 reduce production order_condition -> var
-- On SHA256 reduce production order_condition -> var
-- On SHA1 reduce production order_condition -> var
-- On SECONDS reduce production order_condition -> var
-- On SAMPLE reduce production order_condition -> var
-- On SAMETERM reduce production order_condition -> var
-- On ROUND reduce production order_condition -> var
-- On REPLACE reduce production order_condition -> var
-- On REGEX reduce production order_condition -> var
-- On RBRACE reduce production order_condition -> var
-- On RAND reduce production order_condition -> var
-- On Pname_ns reduce production order_condition -> var
-- On Pname_ln reduce production order_condition -> var
-- On OFFSET reduce production order_condition -> var
-- On NOW reduce production order_condition -> var
-- On NOT reduce production order_condition -> var
-- On MONTH reduce production order_condition -> var
-- On MINUTES reduce production order_condition -> var
-- On MIN reduce production order_condition -> var
-- On MD5 reduce production order_condition -> var
-- On MAX reduce production order_condition -> var
-- On LPAR reduce production order_condition -> var
-- On LIMIT reduce production order_condition -> var
-- On LCASE reduce production order_condition -> var
-- On LANGMATCHES reduce production order_condition -> var
-- On LANG reduce production order_condition -> var
-- On Iriref_ reduce production order_condition -> var
-- On ISURI reduce production order_condition -> var
-- On ISNUMERIC reduce production order_condition -> var
-- On ISLITERAL reduce production order_condition -> var
-- On ISIRI reduce production order_condition -> var
-- On ISBLANK reduce production order_condition -> var
-- On IRI reduce production order_condition -> var
-- On IF reduce production order_condition -> var
-- On HOURS reduce production order_condition -> var
-- On GROUP_CONCAT reduce production order_condition -> var
-- On FLOOR reduce production order_condition -> var
-- On EXISTS reduce production order_condition -> var
-- On EOF reduce production order_condition -> var
-- On ENCODE_FOR_URI reduce production order_condition -> var
-- On DESC reduce production order_condition -> var
-- On DAY reduce production order_condition -> var
-- On DATATYPE reduce production order_condition -> var
-- On COUNT reduce production order_condition -> var
-- On CONTAINS reduce production order_condition -> var
-- On CONCAT reduce production order_condition -> var
-- On COALESCE reduce production order_condition -> var
-- On CEIL reduce production order_condition -> var
-- On BOUND reduce production order_condition -> var
-- On BNODE reduce production order_condition -> var
-- On AVG reduce production order_condition -> var
-- On ASC reduce production order_condition -> var
-- On ABS reduce production order_condition -> var

State 506:
nonempty_list(order_condition) -> order_condition . [ VALUES RBRACE OFFSET LIMIT EOF ]
nonempty_list(order_condition) -> order_condition . nonempty_list(order_condition) [ VALUES RBRACE OFFSET LIMIT EOF ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On DESC shift to state 501
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On AVG shift to state 306
-- On ASC shift to state 503
-- On ABS shift to state 309
-- On var shift to state 505
-- On substring_expression shift to state 315
-- On str_replace_expression shift to state 316
-- On regexp_expression shift to state 318
-- On prefixed_name shift to state 97
-- On order_condition shift to state 506
-- On nonempty_list(order_condition) shift to state 507
-- On iri shift to state 491
-- On function_call shift to state 494
-- On constraint_ shift to state 508
-- On built_in_call shift to state 496
-- On bracketted_expression shift to state 497
-- On aggregate shift to state 341
-- On VALUES reduce production nonempty_list(order_condition) -> order_condition
-- On RBRACE reduce production nonempty_list(order_condition) -> order_condition
-- On OFFSET reduce production nonempty_list(order_condition) -> order_condition
-- On LIMIT reduce production nonempty_list(order_condition) -> order_condition
-- On EOF reduce production nonempty_list(order_condition) -> order_condition

State 507:
nonempty_list(order_condition) -> order_condition nonempty_list(order_condition) . [ VALUES RBRACE OFFSET LIMIT EOF ]
-- On VALUES reduce production nonempty_list(order_condition) -> order_condition nonempty_list(order_condition)
-- On RBRACE reduce production nonempty_list(order_condition) -> order_condition nonempty_list(order_condition)
-- On OFFSET reduce production nonempty_list(order_condition) -> order_condition nonempty_list(order_condition)
-- On LIMIT reduce production nonempty_list(order_condition) -> order_condition nonempty_list(order_condition)
-- On EOF reduce production nonempty_list(order_condition) -> order_condition nonempty_list(order_condition)

State 508:
order_condition -> constraint_ . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln OFFSET NOW NOT MONTH MINUTES MIN MD5 MAX LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IF HOURS GROUP_CONCAT FLOOR EXISTS EOF ENCODE_FOR_URI DESC DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL BOUND BNODE AVG ASC ABS ]
-- On YEAR reduce production order_condition -> constraint_
-- On Var2 reduce production order_condition -> constraint_
-- On Var1 reduce production order_condition -> constraint_
-- On VALUES reduce production order_condition -> constraint_
-- On UUID reduce production order_condition -> constraint_
-- On URI reduce production order_condition -> constraint_
-- On UCASE reduce production order_condition -> constraint_
-- On TZ reduce production order_condition -> constraint_
-- On TIMEZONE reduce production order_condition -> constraint_
-- On SUM reduce production order_condition -> constraint_
-- On SUBSTR reduce production order_condition -> constraint_
-- On STRUUID reduce production order_condition -> constraint_
-- On STRSTARTS reduce production order_condition -> constraint_
-- On STRLEN reduce production order_condition -> constraint_
-- On STRLANG reduce production order_condition -> constraint_
-- On STRENDS reduce production order_condition -> constraint_
-- On STRDT reduce production order_condition -> constraint_
-- On STRBEFORE reduce production order_condition -> constraint_
-- On STRAFTER reduce production order_condition -> constraint_
-- On STR reduce production order_condition -> constraint_
-- On SHA512 reduce production order_condition -> constraint_
-- On SHA384 reduce production order_condition -> constraint_
-- On SHA256 reduce production order_condition -> constraint_
-- On SHA1 reduce production order_condition -> constraint_
-- On SECONDS reduce production order_condition -> constraint_
-- On SAMPLE reduce production order_condition -> constraint_
-- On SAMETERM reduce production order_condition -> constraint_
-- On ROUND reduce production order_condition -> constraint_
-- On REPLACE reduce production order_condition -> constraint_
-- On REGEX reduce production order_condition -> constraint_
-- On RBRACE reduce production order_condition -> constraint_
-- On RAND reduce production order_condition -> constraint_
-- On Pname_ns reduce production order_condition -> constraint_
-- On Pname_ln reduce production order_condition -> constraint_
-- On OFFSET reduce production order_condition -> constraint_
-- On NOW reduce production order_condition -> constraint_
-- On NOT reduce production order_condition -> constraint_
-- On MONTH reduce production order_condition -> constraint_
-- On MINUTES reduce production order_condition -> constraint_
-- On MIN reduce production order_condition -> constraint_
-- On MD5 reduce production order_condition -> constraint_
-- On MAX reduce production order_condition -> constraint_
-- On LPAR reduce production order_condition -> constraint_
-- On LIMIT reduce production order_condition -> constraint_
-- On LCASE reduce production order_condition -> constraint_
-- On LANGMATCHES reduce production order_condition -> constraint_
-- On LANG reduce production order_condition -> constraint_
-- On Iriref_ reduce production order_condition -> constraint_
-- On ISURI reduce production order_condition -> constraint_
-- On ISNUMERIC reduce production order_condition -> constraint_
-- On ISLITERAL reduce production order_condition -> constraint_
-- On ISIRI reduce production order_condition -> constraint_
-- On ISBLANK reduce production order_condition -> constraint_
-- On IRI reduce production order_condition -> constraint_
-- On IF reduce production order_condition -> constraint_
-- On HOURS reduce production order_condition -> constraint_
-- On GROUP_CONCAT reduce production order_condition -> constraint_
-- On FLOOR reduce production order_condition -> constraint_
-- On EXISTS reduce production order_condition -> constraint_
-- On EOF reduce production order_condition -> constraint_
-- On ENCODE_FOR_URI reduce production order_condition -> constraint_
-- On DESC reduce production order_condition -> constraint_
-- On DAY reduce production order_condition -> constraint_
-- On DATATYPE reduce production order_condition -> constraint_
-- On COUNT reduce production order_condition -> constraint_
-- On CONTAINS reduce production order_condition -> constraint_
-- On CONCAT reduce production order_condition -> constraint_
-- On COALESCE reduce production order_condition -> constraint_
-- On CEIL reduce production order_condition -> constraint_
-- On BOUND reduce production order_condition -> constraint_
-- On BNODE reduce production order_condition -> constraint_
-- On AVG reduce production order_condition -> constraint_
-- On ASC reduce production order_condition -> constraint_
-- On ABS reduce production order_condition -> constraint_

State 509:
order_clause -> ORDER BY nonempty_list(order_condition) . [ VALUES RBRACE OFFSET LIMIT EOF ]
-- On VALUES reduce production order_clause -> ORDER BY nonempty_list(order_condition)
-- On RBRACE reduce production order_clause -> ORDER BY nonempty_list(order_condition)
-- On OFFSET reduce production order_clause -> ORDER BY nonempty_list(order_condition)
-- On LIMIT reduce production order_clause -> ORDER BY nonempty_list(order_condition)
-- On EOF reduce production order_clause -> ORDER BY nonempty_list(order_condition)

State 510:
option(order_clause) -> order_clause . [ VALUES RBRACE OFFSET LIMIT EOF ]
-- On VALUES reduce production option(order_clause) -> order_clause
-- On RBRACE reduce production option(order_clause) -> order_clause
-- On OFFSET reduce production option(order_clause) -> order_clause
-- On LIMIT reduce production option(order_clause) -> order_clause
-- On EOF reduce production option(order_clause) -> order_clause

State 511:
solution_modifier -> option(group_clause) option(having_clause) option(order_clause) . option(limit_offset_clause) [ VALUES RBRACE EOF ]
-- On OFFSET shift to state 512
-- On LIMIT shift to state 514
-- On option(limit_offset_clause) shift to state 516
-- On offset_clause shift to state 517
-- On limit_offset_clause shift to state 520
-- On limit_clause shift to state 521
-- On VALUES reduce production option(limit_offset_clause) ->
-- On RBRACE reduce production option(limit_offset_clause) ->
-- On EOF reduce production option(limit_offset_clause) ->

State 512:
offset_clause -> OFFSET . Integer [ VALUES RBRACE LIMIT EOF ]
-- On Integer shift to state 513

State 513:
offset_clause -> OFFSET Integer . [ VALUES RBRACE LIMIT EOF ]
-- On VALUES reduce production offset_clause -> OFFSET Integer
-- On RBRACE reduce production offset_clause -> OFFSET Integer
-- On LIMIT reduce production offset_clause -> OFFSET Integer
-- On EOF reduce production offset_clause -> OFFSET Integer

State 514:
limit_clause -> LIMIT . Integer [ VALUES RBRACE OFFSET EOF ]
-- On Integer shift to state 515

State 515:
limit_clause -> LIMIT Integer . [ VALUES RBRACE OFFSET EOF ]
-- On VALUES reduce production limit_clause -> LIMIT Integer
-- On RBRACE reduce production limit_clause -> LIMIT Integer
-- On OFFSET reduce production limit_clause -> LIMIT Integer
-- On EOF reduce production limit_clause -> LIMIT Integer

State 516:
solution_modifier -> option(group_clause) option(having_clause) option(order_clause) option(limit_offset_clause) . [ VALUES RBRACE EOF ]
-- On VALUES reduce production solution_modifier -> option(group_clause) option(having_clause) option(order_clause) option(limit_offset_clause)
-- On RBRACE reduce production solution_modifier -> option(group_clause) option(having_clause) option(order_clause) option(limit_offset_clause)
-- On EOF reduce production solution_modifier -> option(group_clause) option(having_clause) option(order_clause) option(limit_offset_clause)

State 517:
limit_offset_clause -> offset_clause . option(limit_clause) [ VALUES RBRACE EOF ]
-- On LIMIT shift to state 514
-- On option(limit_clause) shift to state 518
-- On limit_clause shift to state 519
-- On VALUES reduce production option(limit_clause) ->
-- On RBRACE reduce production option(limit_clause) ->
-- On EOF reduce production option(limit_clause) ->

State 518:
limit_offset_clause -> offset_clause option(limit_clause) . [ VALUES RBRACE EOF ]
-- On VALUES reduce production limit_offset_clause -> offset_clause option(limit_clause)
-- On RBRACE reduce production limit_offset_clause -> offset_clause option(limit_clause)
-- On EOF reduce production limit_offset_clause -> offset_clause option(limit_clause)

State 519:
option(limit_clause) -> limit_clause . [ VALUES RBRACE EOF ]
-- On VALUES reduce production option(limit_clause) -> limit_clause
-- On RBRACE reduce production option(limit_clause) -> limit_clause
-- On EOF reduce production option(limit_clause) -> limit_clause

State 520:
option(limit_offset_clause) -> limit_offset_clause . [ VALUES RBRACE EOF ]
-- On VALUES reduce production option(limit_offset_clause) -> limit_offset_clause
-- On RBRACE reduce production option(limit_offset_clause) -> limit_offset_clause
-- On EOF reduce production option(limit_offset_clause) -> limit_offset_clause

State 521:
limit_offset_clause -> limit_clause . option(offset_clause) [ VALUES RBRACE EOF ]
-- On OFFSET shift to state 512
-- On option(offset_clause) shift to state 522
-- On offset_clause shift to state 523
-- On VALUES reduce production option(offset_clause) ->
-- On RBRACE reduce production option(offset_clause) ->
-- On EOF reduce production option(offset_clause) ->

State 522:
limit_offset_clause -> limit_clause option(offset_clause) . [ VALUES RBRACE EOF ]
-- On VALUES reduce production limit_offset_clause -> limit_clause option(offset_clause)
-- On RBRACE reduce production limit_offset_clause -> limit_clause option(offset_clause)
-- On EOF reduce production limit_offset_clause -> limit_clause option(offset_clause)

State 523:
option(offset_clause) -> offset_clause . [ VALUES RBRACE EOF ]
-- On VALUES reduce production option(offset_clause) -> offset_clause
-- On RBRACE reduce production option(offset_clause) -> offset_clause
-- On EOF reduce production option(offset_clause) -> offset_clause

State 524:
option(having_clause) -> having_clause . [ VALUES RBRACE ORDER OFFSET LIMIT EOF ]
-- On VALUES reduce production option(having_clause) -> having_clause
-- On RBRACE reduce production option(having_clause) -> having_clause
-- On ORDER reduce production option(having_clause) -> having_clause
-- On OFFSET reduce production option(having_clause) -> having_clause
-- On LIMIT reduce production option(having_clause) -> having_clause
-- On EOF reduce production option(having_clause) -> having_clause

State 525:
option(group_clause) -> group_clause . [ VALUES RBRACE ORDER OFFSET LIMIT HAVING EOF ]
-- On VALUES reduce production option(group_clause) -> group_clause
-- On RBRACE reduce production option(group_clause) -> group_clause
-- On ORDER reduce production option(group_clause) -> group_clause
-- On OFFSET reduce production option(group_clause) -> group_clause
-- On LIMIT reduce production option(group_clause) -> group_clause
-- On HAVING reduce production option(group_clause) -> group_clause
-- On EOF reduce production option(group_clause) -> group_clause

State 526:
where_clause -> option(WHERE) . group_graph_pattern [ VALUES RBRACE ORDER OFFSET LIMIT HAVING GROUP EOF ]
-- On LBRACE shift to state 86
-- On group_graph_pattern shift to state 527

State 527:
where_clause -> option(WHERE) group_graph_pattern . [ VALUES RBRACE ORDER OFFSET LIMIT HAVING GROUP EOF ]
-- On VALUES reduce production where_clause -> option(WHERE) group_graph_pattern
-- On RBRACE reduce production where_clause -> option(WHERE) group_graph_pattern
-- On ORDER reduce production where_clause -> option(WHERE) group_graph_pattern
-- On OFFSET reduce production where_clause -> option(WHERE) group_graph_pattern
-- On LIMIT reduce production where_clause -> option(WHERE) group_graph_pattern
-- On HAVING reduce production where_clause -> option(WHERE) group_graph_pattern
-- On GROUP reduce production where_clause -> option(WHERE) group_graph_pattern
-- On EOF reduce production where_clause -> option(WHERE) group_graph_pattern

State 528:
group_graph_pattern_sub -> option(triples_block) . list(gp_triples) [ RBRACE ]
-- On VALUES shift to state 529
-- On SERVICE shift to state 531
-- On OPTIONAL shift to state 536
-- On MINUS shift to state 538
-- On LBRACE shift to state 86
-- On GRAPH shift to state 540
-- On FILTER shift to state 543
-- On BIND shift to state 545
-- On service_graph_pattern shift to state 551
-- On separated_nonempty_list(UNION,group_graph_pattern) shift to state 552
-- On optional_graph_pattern shift to state 553
-- On minus_graph_pattern shift to state 554
-- On list(gp_triples) shift to state 555
-- On inline_data shift to state 556
-- On group_of_union_graph_pattern shift to state 557
-- On group_graph_pattern shift to state 558
-- On graph_pattern_not_triples shift to state 561
-- On graph_graph_pattern shift to state 565
-- On gp_triples shift to state 566
-- On filter shift to state 568
-- On bind shift to state 569
-- On RBRACE reduce production list(gp_triples) ->

State 529:
inline_data -> VALUES . datablock [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On NIL shift to state 455
-- On LPAR shift to state 456
-- On var shift to state 461
-- On nil_or_var_list shift to state 472
-- On inline_data_one_var shift to state 482
-- On inline_data_full shift to state 483
-- On datablock shift to state 530

State 530:
inline_data -> VALUES datablock . [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
-- On Var2 reduce production inline_data -> VALUES datablock
-- On Var1 reduce production inline_data -> VALUES datablock
-- On VALUES reduce production inline_data -> VALUES datablock
-- On String_literal reduce production inline_data -> VALUES datablock
-- On SERVICE reduce production inline_data -> VALUES datablock
-- On RBRACE reduce production inline_data -> VALUES datablock
-- On Pname_ns reduce production inline_data -> VALUES datablock
-- On Pname_ln reduce production inline_data -> VALUES datablock
-- On OPTIONAL reduce production inline_data -> VALUES datablock
-- On NIL reduce production inline_data -> VALUES datablock
-- On MINUS reduce production inline_data -> VALUES datablock
-- On LPAR reduce production inline_data -> VALUES datablock
-- On LBRACKET reduce production inline_data -> VALUES datablock
-- On LBRACE reduce production inline_data -> VALUES datablock
-- On Iriref_ reduce production inline_data -> VALUES datablock
-- On Integer_positive reduce production inline_data -> VALUES datablock
-- On Integer_negative reduce production inline_data -> VALUES datablock
-- On Integer reduce production inline_data -> VALUES datablock
-- On GRAPH reduce production inline_data -> VALUES datablock
-- On FILTER reduce production inline_data -> VALUES datablock
-- On Double_positive reduce production inline_data -> VALUES datablock
-- On Double_negative reduce production inline_data -> VALUES datablock
-- On Double reduce production inline_data -> VALUES datablock
-- On Decimal_positive reduce production inline_data -> VALUES datablock
-- On Decimal_negative reduce production inline_data -> VALUES datablock
-- On Decimal reduce production inline_data -> VALUES datablock
-- On DOT reduce production inline_data -> VALUES datablock
-- On Boolean reduce production inline_data -> VALUES datablock
-- On Blank_node_label reduce production inline_data -> VALUES datablock
-- On BIND reduce production inline_data -> VALUES datablock
-- On ANON reduce production inline_data -> VALUES datablock

State 531:
service_graph_pattern -> SERVICE . option(SILENT) var_or_iri group_graph_pattern [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
-- On SILENT shift to state 532
-- On option(SILENT) shift to state 533
-- On Var2 reduce production option(SILENT) ->
-- On Var1 reduce production option(SILENT) ->
-- On Pname_ns reduce production option(SILENT) ->
-- On Pname_ln reduce production option(SILENT) ->
-- On Iriref_ reduce production option(SILENT) ->

State 532:
option(SILENT) -> SILENT . [ Var2 Var1 Pname_ns Pname_ln Iriref_ ]
-- On Var2 reduce production option(SILENT) -> SILENT
-- On Var1 reduce production option(SILENT) -> SILENT
-- On Pname_ns reduce production option(SILENT) -> SILENT
-- On Pname_ln reduce production option(SILENT) -> SILENT
-- On Iriref_ reduce production option(SILENT) -> SILENT

State 533:
service_graph_pattern -> SERVICE option(SILENT) . var_or_iri group_graph_pattern [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On Iriref_ shift to state 91
-- On var_or_iri shift to state 534
-- On var shift to state 189
-- On prefixed_name shift to state 97
-- On iri shift to state 191

State 534:
service_graph_pattern -> SERVICE option(SILENT) var_or_iri . group_graph_pattern [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
-- On LBRACE shift to state 86
-- On group_graph_pattern shift to state 535

State 535:
service_graph_pattern -> SERVICE option(SILENT) var_or_iri group_graph_pattern . [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
-- On Var2 reduce production service_graph_pattern -> SERVICE option(SILENT) var_or_iri group_graph_pattern
-- On Var1 reduce production service_graph_pattern -> SERVICE option(SILENT) var_or_iri group_graph_pattern
-- On VALUES reduce production service_graph_pattern -> SERVICE option(SILENT) var_or_iri group_graph_pattern
-- On String_literal reduce production service_graph_pattern -> SERVICE option(SILENT) var_or_iri group_graph_pattern
-- On SERVICE reduce production service_graph_pattern -> SERVICE option(SILENT) var_or_iri group_graph_pattern
-- On RBRACE reduce production service_graph_pattern -> SERVICE option(SILENT) var_or_iri group_graph_pattern
-- On Pname_ns reduce production service_graph_pattern -> SERVICE option(SILENT) var_or_iri group_graph_pattern
-- On Pname_ln reduce production service_graph_pattern -> SERVICE option(SILENT) var_or_iri group_graph_pattern
-- On OPTIONAL reduce production service_graph_pattern -> SERVICE option(SILENT) var_or_iri group_graph_pattern
-- On NIL reduce production service_graph_pattern -> SERVICE option(SILENT) var_or_iri group_graph_pattern
-- On MINUS reduce production service_graph_pattern -> SERVICE option(SILENT) var_or_iri group_graph_pattern
-- On LPAR reduce production service_graph_pattern -> SERVICE option(SILENT) var_or_iri group_graph_pattern
-- On LBRACKET reduce production service_graph_pattern -> SERVICE option(SILENT) var_or_iri group_graph_pattern
-- On LBRACE reduce production service_graph_pattern -> SERVICE option(SILENT) var_or_iri group_graph_pattern
-- On Iriref_ reduce production service_graph_pattern -> SERVICE option(SILENT) var_or_iri group_graph_pattern
-- On Integer_positive reduce production service_graph_pattern -> SERVICE option(SILENT) var_or_iri group_graph_pattern
-- On Integer_negative reduce production service_graph_pattern -> SERVICE option(SILENT) var_or_iri group_graph_pattern
-- On Integer reduce production service_graph_pattern -> SERVICE option(SILENT) var_or_iri group_graph_pattern
-- On GRAPH reduce production service_graph_pattern -> SERVICE option(SILENT) var_or_iri group_graph_pattern
-- On FILTER reduce production service_graph_pattern -> SERVICE option(SILENT) var_or_iri group_graph_pattern
-- On Double_positive reduce production service_graph_pattern -> SERVICE option(SILENT) var_or_iri group_graph_pattern
-- On Double_negative reduce production service_graph_pattern -> SERVICE option(SILENT) var_or_iri group_graph_pattern
-- On Double reduce production service_graph_pattern -> SERVICE option(SILENT) var_or_iri group_graph_pattern
-- On Decimal_positive reduce production service_graph_pattern -> SERVICE option(SILENT) var_or_iri group_graph_pattern
-- On Decimal_negative reduce production service_graph_pattern -> SERVICE option(SILENT) var_or_iri group_graph_pattern
-- On Decimal reduce production service_graph_pattern -> SERVICE option(SILENT) var_or_iri group_graph_pattern
-- On DOT reduce production service_graph_pattern -> SERVICE option(SILENT) var_or_iri group_graph_pattern
-- On Boolean reduce production service_graph_pattern -> SERVICE option(SILENT) var_or_iri group_graph_pattern
-- On Blank_node_label reduce production service_graph_pattern -> SERVICE option(SILENT) var_or_iri group_graph_pattern
-- On BIND reduce production service_graph_pattern -> SERVICE option(SILENT) var_or_iri group_graph_pattern
-- On ANON reduce production service_graph_pattern -> SERVICE option(SILENT) var_or_iri group_graph_pattern

State 536:
optional_graph_pattern -> OPTIONAL . group_graph_pattern [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
-- On LBRACE shift to state 86
-- On group_graph_pattern shift to state 537

State 537:
optional_graph_pattern -> OPTIONAL group_graph_pattern . [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
-- On Var2 reduce production optional_graph_pattern -> OPTIONAL group_graph_pattern
-- On Var1 reduce production optional_graph_pattern -> OPTIONAL group_graph_pattern
-- On VALUES reduce production optional_graph_pattern -> OPTIONAL group_graph_pattern
-- On String_literal reduce production optional_graph_pattern -> OPTIONAL group_graph_pattern
-- On SERVICE reduce production optional_graph_pattern -> OPTIONAL group_graph_pattern
-- On RBRACE reduce production optional_graph_pattern -> OPTIONAL group_graph_pattern
-- On Pname_ns reduce production optional_graph_pattern -> OPTIONAL group_graph_pattern
-- On Pname_ln reduce production optional_graph_pattern -> OPTIONAL group_graph_pattern
-- On OPTIONAL reduce production optional_graph_pattern -> OPTIONAL group_graph_pattern
-- On NIL reduce production optional_graph_pattern -> OPTIONAL group_graph_pattern
-- On MINUS reduce production optional_graph_pattern -> OPTIONAL group_graph_pattern
-- On LPAR reduce production optional_graph_pattern -> OPTIONAL group_graph_pattern
-- On LBRACKET reduce production optional_graph_pattern -> OPTIONAL group_graph_pattern
-- On LBRACE reduce production optional_graph_pattern -> OPTIONAL group_graph_pattern
-- On Iriref_ reduce production optional_graph_pattern -> OPTIONAL group_graph_pattern
-- On Integer_positive reduce production optional_graph_pattern -> OPTIONAL group_graph_pattern
-- On Integer_negative reduce production optional_graph_pattern -> OPTIONAL group_graph_pattern
-- On Integer reduce production optional_graph_pattern -> OPTIONAL group_graph_pattern
-- On GRAPH reduce production optional_graph_pattern -> OPTIONAL group_graph_pattern
-- On FILTER reduce production optional_graph_pattern -> OPTIONAL group_graph_pattern
-- On Double_positive reduce production optional_graph_pattern -> OPTIONAL group_graph_pattern
-- On Double_negative reduce production optional_graph_pattern -> OPTIONAL group_graph_pattern
-- On Double reduce production optional_graph_pattern -> OPTIONAL group_graph_pattern
-- On Decimal_positive reduce production optional_graph_pattern -> OPTIONAL group_graph_pattern
-- On Decimal_negative reduce production optional_graph_pattern -> OPTIONAL group_graph_pattern
-- On Decimal reduce production optional_graph_pattern -> OPTIONAL group_graph_pattern
-- On DOT reduce production optional_graph_pattern -> OPTIONAL group_graph_pattern
-- On Boolean reduce production optional_graph_pattern -> OPTIONAL group_graph_pattern
-- On Blank_node_label reduce production optional_graph_pattern -> OPTIONAL group_graph_pattern
-- On BIND reduce production optional_graph_pattern -> OPTIONAL group_graph_pattern
-- On ANON reduce production optional_graph_pattern -> OPTIONAL group_graph_pattern

State 538:
minus_graph_pattern -> MINUS . group_graph_pattern [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
-- On LBRACE shift to state 86
-- On group_graph_pattern shift to state 539

State 539:
minus_graph_pattern -> MINUS group_graph_pattern . [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
-- On Var2 reduce production minus_graph_pattern -> MINUS group_graph_pattern
-- On Var1 reduce production minus_graph_pattern -> MINUS group_graph_pattern
-- On VALUES reduce production minus_graph_pattern -> MINUS group_graph_pattern
-- On String_literal reduce production minus_graph_pattern -> MINUS group_graph_pattern
-- On SERVICE reduce production minus_graph_pattern -> MINUS group_graph_pattern
-- On RBRACE reduce production minus_graph_pattern -> MINUS group_graph_pattern
-- On Pname_ns reduce production minus_graph_pattern -> MINUS group_graph_pattern
-- On Pname_ln reduce production minus_graph_pattern -> MINUS group_graph_pattern
-- On OPTIONAL reduce production minus_graph_pattern -> MINUS group_graph_pattern
-- On NIL reduce production minus_graph_pattern -> MINUS group_graph_pattern
-- On MINUS reduce production minus_graph_pattern -> MINUS group_graph_pattern
-- On LPAR reduce production minus_graph_pattern -> MINUS group_graph_pattern
-- On LBRACKET reduce production minus_graph_pattern -> MINUS group_graph_pattern
-- On LBRACE reduce production minus_graph_pattern -> MINUS group_graph_pattern
-- On Iriref_ reduce production minus_graph_pattern -> MINUS group_graph_pattern
-- On Integer_positive reduce production minus_graph_pattern -> MINUS group_graph_pattern
-- On Integer_negative reduce production minus_graph_pattern -> MINUS group_graph_pattern
-- On Integer reduce production minus_graph_pattern -> MINUS group_graph_pattern
-- On GRAPH reduce production minus_graph_pattern -> MINUS group_graph_pattern
-- On FILTER reduce production minus_graph_pattern -> MINUS group_graph_pattern
-- On Double_positive reduce production minus_graph_pattern -> MINUS group_graph_pattern
-- On Double_negative reduce production minus_graph_pattern -> MINUS group_graph_pattern
-- On Double reduce production minus_graph_pattern -> MINUS group_graph_pattern
-- On Decimal_positive reduce production minus_graph_pattern -> MINUS group_graph_pattern
-- On Decimal_negative reduce production minus_graph_pattern -> MINUS group_graph_pattern
-- On Decimal reduce production minus_graph_pattern -> MINUS group_graph_pattern
-- On DOT reduce production minus_graph_pattern -> MINUS group_graph_pattern
-- On Boolean reduce production minus_graph_pattern -> MINUS group_graph_pattern
-- On Blank_node_label reduce production minus_graph_pattern -> MINUS group_graph_pattern
-- On BIND reduce production minus_graph_pattern -> MINUS group_graph_pattern
-- On ANON reduce production minus_graph_pattern -> MINUS group_graph_pattern

State 540:
graph_graph_pattern -> GRAPH . var_or_iri group_graph_pattern [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On Iriref_ shift to state 91
-- On var_or_iri shift to state 541
-- On var shift to state 189
-- On prefixed_name shift to state 97
-- On iri shift to state 191

State 541:
graph_graph_pattern -> GRAPH var_or_iri . group_graph_pattern [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
-- On LBRACE shift to state 86
-- On group_graph_pattern shift to state 542

State 542:
graph_graph_pattern -> GRAPH var_or_iri group_graph_pattern . [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
-- On Var2 reduce production graph_graph_pattern -> GRAPH var_or_iri group_graph_pattern
-- On Var1 reduce production graph_graph_pattern -> GRAPH var_or_iri group_graph_pattern
-- On VALUES reduce production graph_graph_pattern -> GRAPH var_or_iri group_graph_pattern
-- On String_literal reduce production graph_graph_pattern -> GRAPH var_or_iri group_graph_pattern
-- On SERVICE reduce production graph_graph_pattern -> GRAPH var_or_iri group_graph_pattern
-- On RBRACE reduce production graph_graph_pattern -> GRAPH var_or_iri group_graph_pattern
-- On Pname_ns reduce production graph_graph_pattern -> GRAPH var_or_iri group_graph_pattern
-- On Pname_ln reduce production graph_graph_pattern -> GRAPH var_or_iri group_graph_pattern
-- On OPTIONAL reduce production graph_graph_pattern -> GRAPH var_or_iri group_graph_pattern
-- On NIL reduce production graph_graph_pattern -> GRAPH var_or_iri group_graph_pattern
-- On MINUS reduce production graph_graph_pattern -> GRAPH var_or_iri group_graph_pattern
-- On LPAR reduce production graph_graph_pattern -> GRAPH var_or_iri group_graph_pattern
-- On LBRACKET reduce production graph_graph_pattern -> GRAPH var_or_iri group_graph_pattern
-- On LBRACE reduce production graph_graph_pattern -> GRAPH var_or_iri group_graph_pattern
-- On Iriref_ reduce production graph_graph_pattern -> GRAPH var_or_iri group_graph_pattern
-- On Integer_positive reduce production graph_graph_pattern -> GRAPH var_or_iri group_graph_pattern
-- On Integer_negative reduce production graph_graph_pattern -> GRAPH var_or_iri group_graph_pattern
-- On Integer reduce production graph_graph_pattern -> GRAPH var_or_iri group_graph_pattern
-- On GRAPH reduce production graph_graph_pattern -> GRAPH var_or_iri group_graph_pattern
-- On FILTER reduce production graph_graph_pattern -> GRAPH var_or_iri group_graph_pattern
-- On Double_positive reduce production graph_graph_pattern -> GRAPH var_or_iri group_graph_pattern
-- On Double_negative reduce production graph_graph_pattern -> GRAPH var_or_iri group_graph_pattern
-- On Double reduce production graph_graph_pattern -> GRAPH var_or_iri group_graph_pattern
-- On Decimal_positive reduce production graph_graph_pattern -> GRAPH var_or_iri group_graph_pattern
-- On Decimal_negative reduce production graph_graph_pattern -> GRAPH var_or_iri group_graph_pattern
-- On Decimal reduce production graph_graph_pattern -> GRAPH var_or_iri group_graph_pattern
-- On DOT reduce production graph_graph_pattern -> GRAPH var_or_iri group_graph_pattern
-- On Boolean reduce production graph_graph_pattern -> GRAPH var_or_iri group_graph_pattern
-- On Blank_node_label reduce production graph_graph_pattern -> GRAPH var_or_iri group_graph_pattern
-- On BIND reduce production graph_graph_pattern -> GRAPH var_or_iri group_graph_pattern
-- On ANON reduce production graph_graph_pattern -> GRAPH var_or_iri group_graph_pattern

State 543:
filter -> FILTER . constraint_ [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
-- On YEAR shift to state 19
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On substring_expression shift to state 315
-- On str_replace_expression shift to state 316
-- On regexp_expression shift to state 318
-- On prefixed_name shift to state 97
-- On iri shift to state 491
-- On function_call shift to state 494
-- On constraint_ shift to state 544
-- On built_in_call shift to state 496
-- On bracketted_expression shift to state 497
-- On aggregate shift to state 341

State 544:
filter -> FILTER constraint_ . [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
-- On Var2 reduce production filter -> FILTER constraint_
-- On Var1 reduce production filter -> FILTER constraint_
-- On VALUES reduce production filter -> FILTER constraint_
-- On String_literal reduce production filter -> FILTER constraint_
-- On SERVICE reduce production filter -> FILTER constraint_
-- On RBRACE reduce production filter -> FILTER constraint_
-- On Pname_ns reduce production filter -> FILTER constraint_
-- On Pname_ln reduce production filter -> FILTER constraint_
-- On OPTIONAL reduce production filter -> FILTER constraint_
-- On NIL reduce production filter -> FILTER constraint_
-- On MINUS reduce production filter -> FILTER constraint_
-- On LPAR reduce production filter -> FILTER constraint_
-- On LBRACKET reduce production filter -> FILTER constraint_
-- On LBRACE reduce production filter -> FILTER constraint_
-- On Iriref_ reduce production filter -> FILTER constraint_
-- On Integer_positive reduce production filter -> FILTER constraint_
-- On Integer_negative reduce production filter -> FILTER constraint_
-- On Integer reduce production filter -> FILTER constraint_
-- On GRAPH reduce production filter -> FILTER constraint_
-- On FILTER reduce production filter -> FILTER constraint_
-- On Double_positive reduce production filter -> FILTER constraint_
-- On Double_negative reduce production filter -> FILTER constraint_
-- On Double reduce production filter -> FILTER constraint_
-- On Decimal_positive reduce production filter -> FILTER constraint_
-- On Decimal_negative reduce production filter -> FILTER constraint_
-- On Decimal reduce production filter -> FILTER constraint_
-- On DOT reduce production filter -> FILTER constraint_
-- On Boolean reduce production filter -> FILTER constraint_
-- On Blank_node_label reduce production filter -> FILTER constraint_
-- On BIND reduce production filter -> FILTER constraint_
-- On ANON reduce production filter -> FILTER constraint_

State 545:
bind -> BIND . LPAR expression AS var RPAR [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
-- On LPAR shift to state 546

State 546:
bind -> BIND LPAR . expression AS var RPAR [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 547
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 547:
bind -> BIND LPAR expression . AS var RPAR [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
numexp -> expression . STAR expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AS AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AS AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AS AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AS AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AS AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AS AMPAMP ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On AS shift to state 548
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 548:
bind -> BIND LPAR expression AS . var RPAR [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On var shift to state 549

State 549:
bind -> BIND LPAR expression AS var . RPAR [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
-- On RPAR shift to state 550

State 550:
bind -> BIND LPAR expression AS var RPAR . [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
-- On Var2 reduce production bind -> BIND LPAR expression AS var RPAR
-- On Var1 reduce production bind -> BIND LPAR expression AS var RPAR
-- On VALUES reduce production bind -> BIND LPAR expression AS var RPAR
-- On String_literal reduce production bind -> BIND LPAR expression AS var RPAR
-- On SERVICE reduce production bind -> BIND LPAR expression AS var RPAR
-- On RBRACE reduce production bind -> BIND LPAR expression AS var RPAR
-- On Pname_ns reduce production bind -> BIND LPAR expression AS var RPAR
-- On Pname_ln reduce production bind -> BIND LPAR expression AS var RPAR
-- On OPTIONAL reduce production bind -> BIND LPAR expression AS var RPAR
-- On NIL reduce production bind -> BIND LPAR expression AS var RPAR
-- On MINUS reduce production bind -> BIND LPAR expression AS var RPAR
-- On LPAR reduce production bind -> BIND LPAR expression AS var RPAR
-- On LBRACKET reduce production bind -> BIND LPAR expression AS var RPAR
-- On LBRACE reduce production bind -> BIND LPAR expression AS var RPAR
-- On Iriref_ reduce production bind -> BIND LPAR expression AS var RPAR
-- On Integer_positive reduce production bind -> BIND LPAR expression AS var RPAR
-- On Integer_negative reduce production bind -> BIND LPAR expression AS var RPAR
-- On Integer reduce production bind -> BIND LPAR expression AS var RPAR
-- On GRAPH reduce production bind -> BIND LPAR expression AS var RPAR
-- On FILTER reduce production bind -> BIND LPAR expression AS var RPAR
-- On Double_positive reduce production bind -> BIND LPAR expression AS var RPAR
-- On Double_negative reduce production bind -> BIND LPAR expression AS var RPAR
-- On Double reduce production bind -> BIND LPAR expression AS var RPAR
-- On Decimal_positive reduce production bind -> BIND LPAR expression AS var RPAR
-- On Decimal_negative reduce production bind -> BIND LPAR expression AS var RPAR
-- On Decimal reduce production bind -> BIND LPAR expression AS var RPAR
-- On DOT reduce production bind -> BIND LPAR expression AS var RPAR
-- On Boolean reduce production bind -> BIND LPAR expression AS var RPAR
-- On Blank_node_label reduce production bind -> BIND LPAR expression AS var RPAR
-- On BIND reduce production bind -> BIND LPAR expression AS var RPAR
-- On ANON reduce production bind -> BIND LPAR expression AS var RPAR

State 551:
graph_pattern_not_triples -> service_graph_pattern . [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
-- On Var2 reduce production graph_pattern_not_triples -> service_graph_pattern
-- On Var1 reduce production graph_pattern_not_triples -> service_graph_pattern
-- On VALUES reduce production graph_pattern_not_triples -> service_graph_pattern
-- On String_literal reduce production graph_pattern_not_triples -> service_graph_pattern
-- On SERVICE reduce production graph_pattern_not_triples -> service_graph_pattern
-- On RBRACE reduce production graph_pattern_not_triples -> service_graph_pattern
-- On Pname_ns reduce production graph_pattern_not_triples -> service_graph_pattern
-- On Pname_ln reduce production graph_pattern_not_triples -> service_graph_pattern
-- On OPTIONAL reduce production graph_pattern_not_triples -> service_graph_pattern
-- On NIL reduce production graph_pattern_not_triples -> service_graph_pattern
-- On MINUS reduce production graph_pattern_not_triples -> service_graph_pattern
-- On LPAR reduce production graph_pattern_not_triples -> service_graph_pattern
-- On LBRACKET reduce production graph_pattern_not_triples -> service_graph_pattern
-- On LBRACE reduce production graph_pattern_not_triples -> service_graph_pattern
-- On Iriref_ reduce production graph_pattern_not_triples -> service_graph_pattern
-- On Integer_positive reduce production graph_pattern_not_triples -> service_graph_pattern
-- On Integer_negative reduce production graph_pattern_not_triples -> service_graph_pattern
-- On Integer reduce production graph_pattern_not_triples -> service_graph_pattern
-- On GRAPH reduce production graph_pattern_not_triples -> service_graph_pattern
-- On FILTER reduce production graph_pattern_not_triples -> service_graph_pattern
-- On Double_positive reduce production graph_pattern_not_triples -> service_graph_pattern
-- On Double_negative reduce production graph_pattern_not_triples -> service_graph_pattern
-- On Double reduce production graph_pattern_not_triples -> service_graph_pattern
-- On Decimal_positive reduce production graph_pattern_not_triples -> service_graph_pattern
-- On Decimal_negative reduce production graph_pattern_not_triples -> service_graph_pattern
-- On Decimal reduce production graph_pattern_not_triples -> service_graph_pattern
-- On DOT reduce production graph_pattern_not_triples -> service_graph_pattern
-- On Boolean reduce production graph_pattern_not_triples -> service_graph_pattern
-- On Blank_node_label reduce production graph_pattern_not_triples -> service_graph_pattern
-- On BIND reduce production graph_pattern_not_triples -> service_graph_pattern
-- On ANON reduce production graph_pattern_not_triples -> service_graph_pattern

State 552:
group_of_union_graph_pattern -> separated_nonempty_list(UNION,group_graph_pattern) . [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
-- On Var2 reduce production group_of_union_graph_pattern -> separated_nonempty_list(UNION,group_graph_pattern)
-- On Var1 reduce production group_of_union_graph_pattern -> separated_nonempty_list(UNION,group_graph_pattern)
-- On VALUES reduce production group_of_union_graph_pattern -> separated_nonempty_list(UNION,group_graph_pattern)
-- On String_literal reduce production group_of_union_graph_pattern -> separated_nonempty_list(UNION,group_graph_pattern)
-- On SERVICE reduce production group_of_union_graph_pattern -> separated_nonempty_list(UNION,group_graph_pattern)
-- On RBRACE reduce production group_of_union_graph_pattern -> separated_nonempty_list(UNION,group_graph_pattern)
-- On Pname_ns reduce production group_of_union_graph_pattern -> separated_nonempty_list(UNION,group_graph_pattern)
-- On Pname_ln reduce production group_of_union_graph_pattern -> separated_nonempty_list(UNION,group_graph_pattern)
-- On OPTIONAL reduce production group_of_union_graph_pattern -> separated_nonempty_list(UNION,group_graph_pattern)
-- On NIL reduce production group_of_union_graph_pattern -> separated_nonempty_list(UNION,group_graph_pattern)
-- On MINUS reduce production group_of_union_graph_pattern -> separated_nonempty_list(UNION,group_graph_pattern)
-- On LPAR reduce production group_of_union_graph_pattern -> separated_nonempty_list(UNION,group_graph_pattern)
-- On LBRACKET reduce production group_of_union_graph_pattern -> separated_nonempty_list(UNION,group_graph_pattern)
-- On LBRACE reduce production group_of_union_graph_pattern -> separated_nonempty_list(UNION,group_graph_pattern)
-- On Iriref_ reduce production group_of_union_graph_pattern -> separated_nonempty_list(UNION,group_graph_pattern)
-- On Integer_positive reduce production group_of_union_graph_pattern -> separated_nonempty_list(UNION,group_graph_pattern)
-- On Integer_negative reduce production group_of_union_graph_pattern -> separated_nonempty_list(UNION,group_graph_pattern)
-- On Integer reduce production group_of_union_graph_pattern -> separated_nonempty_list(UNION,group_graph_pattern)
-- On GRAPH reduce production group_of_union_graph_pattern -> separated_nonempty_list(UNION,group_graph_pattern)
-- On FILTER reduce production group_of_union_graph_pattern -> separated_nonempty_list(UNION,group_graph_pattern)
-- On Double_positive reduce production group_of_union_graph_pattern -> separated_nonempty_list(UNION,group_graph_pattern)
-- On Double_negative reduce production group_of_union_graph_pattern -> separated_nonempty_list(UNION,group_graph_pattern)
-- On Double reduce production group_of_union_graph_pattern -> separated_nonempty_list(UNION,group_graph_pattern)
-- On Decimal_positive reduce production group_of_union_graph_pattern -> separated_nonempty_list(UNION,group_graph_pattern)
-- On Decimal_negative reduce production group_of_union_graph_pattern -> separated_nonempty_list(UNION,group_graph_pattern)
-- On Decimal reduce production group_of_union_graph_pattern -> separated_nonempty_list(UNION,group_graph_pattern)
-- On DOT reduce production group_of_union_graph_pattern -> separated_nonempty_list(UNION,group_graph_pattern)
-- On Boolean reduce production group_of_union_graph_pattern -> separated_nonempty_list(UNION,group_graph_pattern)
-- On Blank_node_label reduce production group_of_union_graph_pattern -> separated_nonempty_list(UNION,group_graph_pattern)
-- On BIND reduce production group_of_union_graph_pattern -> separated_nonempty_list(UNION,group_graph_pattern)
-- On ANON reduce production group_of_union_graph_pattern -> separated_nonempty_list(UNION,group_graph_pattern)

State 553:
graph_pattern_not_triples -> optional_graph_pattern . [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
-- On Var2 reduce production graph_pattern_not_triples -> optional_graph_pattern
-- On Var1 reduce production graph_pattern_not_triples -> optional_graph_pattern
-- On VALUES reduce production graph_pattern_not_triples -> optional_graph_pattern
-- On String_literal reduce production graph_pattern_not_triples -> optional_graph_pattern
-- On SERVICE reduce production graph_pattern_not_triples -> optional_graph_pattern
-- On RBRACE reduce production graph_pattern_not_triples -> optional_graph_pattern
-- On Pname_ns reduce production graph_pattern_not_triples -> optional_graph_pattern
-- On Pname_ln reduce production graph_pattern_not_triples -> optional_graph_pattern
-- On OPTIONAL reduce production graph_pattern_not_triples -> optional_graph_pattern
-- On NIL reduce production graph_pattern_not_triples -> optional_graph_pattern
-- On MINUS reduce production graph_pattern_not_triples -> optional_graph_pattern
-- On LPAR reduce production graph_pattern_not_triples -> optional_graph_pattern
-- On LBRACKET reduce production graph_pattern_not_triples -> optional_graph_pattern
-- On LBRACE reduce production graph_pattern_not_triples -> optional_graph_pattern
-- On Iriref_ reduce production graph_pattern_not_triples -> optional_graph_pattern
-- On Integer_positive reduce production graph_pattern_not_triples -> optional_graph_pattern
-- On Integer_negative reduce production graph_pattern_not_triples -> optional_graph_pattern
-- On Integer reduce production graph_pattern_not_triples -> optional_graph_pattern
-- On GRAPH reduce production graph_pattern_not_triples -> optional_graph_pattern
-- On FILTER reduce production graph_pattern_not_triples -> optional_graph_pattern
-- On Double_positive reduce production graph_pattern_not_triples -> optional_graph_pattern
-- On Double_negative reduce production graph_pattern_not_triples -> optional_graph_pattern
-- On Double reduce production graph_pattern_not_triples -> optional_graph_pattern
-- On Decimal_positive reduce production graph_pattern_not_triples -> optional_graph_pattern
-- On Decimal_negative reduce production graph_pattern_not_triples -> optional_graph_pattern
-- On Decimal reduce production graph_pattern_not_triples -> optional_graph_pattern
-- On DOT reduce production graph_pattern_not_triples -> optional_graph_pattern
-- On Boolean reduce production graph_pattern_not_triples -> optional_graph_pattern
-- On Blank_node_label reduce production graph_pattern_not_triples -> optional_graph_pattern
-- On BIND reduce production graph_pattern_not_triples -> optional_graph_pattern
-- On ANON reduce production graph_pattern_not_triples -> optional_graph_pattern

State 554:
graph_pattern_not_triples -> minus_graph_pattern . [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
-- On Var2 reduce production graph_pattern_not_triples -> minus_graph_pattern
-- On Var1 reduce production graph_pattern_not_triples -> minus_graph_pattern
-- On VALUES reduce production graph_pattern_not_triples -> minus_graph_pattern
-- On String_literal reduce production graph_pattern_not_triples -> minus_graph_pattern
-- On SERVICE reduce production graph_pattern_not_triples -> minus_graph_pattern
-- On RBRACE reduce production graph_pattern_not_triples -> minus_graph_pattern
-- On Pname_ns reduce production graph_pattern_not_triples -> minus_graph_pattern
-- On Pname_ln reduce production graph_pattern_not_triples -> minus_graph_pattern
-- On OPTIONAL reduce production graph_pattern_not_triples -> minus_graph_pattern
-- On NIL reduce production graph_pattern_not_triples -> minus_graph_pattern
-- On MINUS reduce production graph_pattern_not_triples -> minus_graph_pattern
-- On LPAR reduce production graph_pattern_not_triples -> minus_graph_pattern
-- On LBRACKET reduce production graph_pattern_not_triples -> minus_graph_pattern
-- On LBRACE reduce production graph_pattern_not_triples -> minus_graph_pattern
-- On Iriref_ reduce production graph_pattern_not_triples -> minus_graph_pattern
-- On Integer_positive reduce production graph_pattern_not_triples -> minus_graph_pattern
-- On Integer_negative reduce production graph_pattern_not_triples -> minus_graph_pattern
-- On Integer reduce production graph_pattern_not_triples -> minus_graph_pattern
-- On GRAPH reduce production graph_pattern_not_triples -> minus_graph_pattern
-- On FILTER reduce production graph_pattern_not_triples -> minus_graph_pattern
-- On Double_positive reduce production graph_pattern_not_triples -> minus_graph_pattern
-- On Double_negative reduce production graph_pattern_not_triples -> minus_graph_pattern
-- On Double reduce production graph_pattern_not_triples -> minus_graph_pattern
-- On Decimal_positive reduce production graph_pattern_not_triples -> minus_graph_pattern
-- On Decimal_negative reduce production graph_pattern_not_triples -> minus_graph_pattern
-- On Decimal reduce production graph_pattern_not_triples -> minus_graph_pattern
-- On DOT reduce production graph_pattern_not_triples -> minus_graph_pattern
-- On Boolean reduce production graph_pattern_not_triples -> minus_graph_pattern
-- On Blank_node_label reduce production graph_pattern_not_triples -> minus_graph_pattern
-- On BIND reduce production graph_pattern_not_triples -> minus_graph_pattern
-- On ANON reduce production graph_pattern_not_triples -> minus_graph_pattern

State 555:
group_graph_pattern_sub -> option(triples_block) list(gp_triples) . [ RBRACE ]
-- On RBRACE reduce production group_graph_pattern_sub -> option(triples_block) list(gp_triples)

State 556:
graph_pattern_not_triples -> inline_data . [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
-- On Var2 reduce production graph_pattern_not_triples -> inline_data
-- On Var1 reduce production graph_pattern_not_triples -> inline_data
-- On VALUES reduce production graph_pattern_not_triples -> inline_data
-- On String_literal reduce production graph_pattern_not_triples -> inline_data
-- On SERVICE reduce production graph_pattern_not_triples -> inline_data
-- On RBRACE reduce production graph_pattern_not_triples -> inline_data
-- On Pname_ns reduce production graph_pattern_not_triples -> inline_data
-- On Pname_ln reduce production graph_pattern_not_triples -> inline_data
-- On OPTIONAL reduce production graph_pattern_not_triples -> inline_data
-- On NIL reduce production graph_pattern_not_triples -> inline_data
-- On MINUS reduce production graph_pattern_not_triples -> inline_data
-- On LPAR reduce production graph_pattern_not_triples -> inline_data
-- On LBRACKET reduce production graph_pattern_not_triples -> inline_data
-- On LBRACE reduce production graph_pattern_not_triples -> inline_data
-- On Iriref_ reduce production graph_pattern_not_triples -> inline_data
-- On Integer_positive reduce production graph_pattern_not_triples -> inline_data
-- On Integer_negative reduce production graph_pattern_not_triples -> inline_data
-- On Integer reduce production graph_pattern_not_triples -> inline_data
-- On GRAPH reduce production graph_pattern_not_triples -> inline_data
-- On FILTER reduce production graph_pattern_not_triples -> inline_data
-- On Double_positive reduce production graph_pattern_not_triples -> inline_data
-- On Double_negative reduce production graph_pattern_not_triples -> inline_data
-- On Double reduce production graph_pattern_not_triples -> inline_data
-- On Decimal_positive reduce production graph_pattern_not_triples -> inline_data
-- On Decimal_negative reduce production graph_pattern_not_triples -> inline_data
-- On Decimal reduce production graph_pattern_not_triples -> inline_data
-- On DOT reduce production graph_pattern_not_triples -> inline_data
-- On Boolean reduce production graph_pattern_not_triples -> inline_data
-- On Blank_node_label reduce production graph_pattern_not_triples -> inline_data
-- On BIND reduce production graph_pattern_not_triples -> inline_data
-- On ANON reduce production graph_pattern_not_triples -> inline_data

State 557:
graph_pattern_not_triples -> group_of_union_graph_pattern . [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
-- On Var2 reduce production graph_pattern_not_triples -> group_of_union_graph_pattern
-- On Var1 reduce production graph_pattern_not_triples -> group_of_union_graph_pattern
-- On VALUES reduce production graph_pattern_not_triples -> group_of_union_graph_pattern
-- On String_literal reduce production graph_pattern_not_triples -> group_of_union_graph_pattern
-- On SERVICE reduce production graph_pattern_not_triples -> group_of_union_graph_pattern
-- On RBRACE reduce production graph_pattern_not_triples -> group_of_union_graph_pattern
-- On Pname_ns reduce production graph_pattern_not_triples -> group_of_union_graph_pattern
-- On Pname_ln reduce production graph_pattern_not_triples -> group_of_union_graph_pattern
-- On OPTIONAL reduce production graph_pattern_not_triples -> group_of_union_graph_pattern
-- On NIL reduce production graph_pattern_not_triples -> group_of_union_graph_pattern
-- On MINUS reduce production graph_pattern_not_triples -> group_of_union_graph_pattern
-- On LPAR reduce production graph_pattern_not_triples -> group_of_union_graph_pattern
-- On LBRACKET reduce production graph_pattern_not_triples -> group_of_union_graph_pattern
-- On LBRACE reduce production graph_pattern_not_triples -> group_of_union_graph_pattern
-- On Iriref_ reduce production graph_pattern_not_triples -> group_of_union_graph_pattern
-- On Integer_positive reduce production graph_pattern_not_triples -> group_of_union_graph_pattern
-- On Integer_negative reduce production graph_pattern_not_triples -> group_of_union_graph_pattern
-- On Integer reduce production graph_pattern_not_triples -> group_of_union_graph_pattern
-- On GRAPH reduce production graph_pattern_not_triples -> group_of_union_graph_pattern
-- On FILTER reduce production graph_pattern_not_triples -> group_of_union_graph_pattern
-- On Double_positive reduce production graph_pattern_not_triples -> group_of_union_graph_pattern
-- On Double_negative reduce production graph_pattern_not_triples -> group_of_union_graph_pattern
-- On Double reduce production graph_pattern_not_triples -> group_of_union_graph_pattern
-- On Decimal_positive reduce production graph_pattern_not_triples -> group_of_union_graph_pattern
-- On Decimal_negative reduce production graph_pattern_not_triples -> group_of_union_graph_pattern
-- On Decimal reduce production graph_pattern_not_triples -> group_of_union_graph_pattern
-- On DOT reduce production graph_pattern_not_triples -> group_of_union_graph_pattern
-- On Boolean reduce production graph_pattern_not_triples -> group_of_union_graph_pattern
-- On Blank_node_label reduce production graph_pattern_not_triples -> group_of_union_graph_pattern
-- On BIND reduce production graph_pattern_not_triples -> group_of_union_graph_pattern
-- On ANON reduce production graph_pattern_not_triples -> group_of_union_graph_pattern

State 558:
separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern . [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern . UNION separated_nonempty_list(UNION,group_graph_pattern) [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
-- On UNION shift to state 559
-- On Var2 reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern
-- On Var1 reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern
-- On VALUES reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern
-- On String_literal reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern
-- On SERVICE reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern
-- On RBRACE reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern
-- On Pname_ns reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern
-- On Pname_ln reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern
-- On OPTIONAL reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern
-- On NIL reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern
-- On MINUS reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern
-- On LPAR reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern
-- On LBRACKET reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern
-- On LBRACE reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern
-- On Iriref_ reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern
-- On Integer_positive reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern
-- On Integer_negative reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern
-- On Integer reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern
-- On GRAPH reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern
-- On FILTER reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern
-- On Double_positive reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern
-- On Double_negative reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern
-- On Double reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern
-- On Decimal_positive reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern
-- On Decimal_negative reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern
-- On Decimal reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern
-- On DOT reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern
-- On Boolean reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern
-- On Blank_node_label reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern
-- On BIND reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern
-- On ANON reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern

State 559:
separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern UNION . separated_nonempty_list(UNION,group_graph_pattern) [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
-- On LBRACE shift to state 86
-- On separated_nonempty_list(UNION,group_graph_pattern) shift to state 560
-- On group_graph_pattern shift to state 558

State 560:
separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern UNION separated_nonempty_list(UNION,group_graph_pattern) . [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
-- On Var2 reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern UNION separated_nonempty_list(UNION,group_graph_pattern)
-- On Var1 reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern UNION separated_nonempty_list(UNION,group_graph_pattern)
-- On VALUES reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern UNION separated_nonempty_list(UNION,group_graph_pattern)
-- On String_literal reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern UNION separated_nonempty_list(UNION,group_graph_pattern)
-- On SERVICE reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern UNION separated_nonempty_list(UNION,group_graph_pattern)
-- On RBRACE reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern UNION separated_nonempty_list(UNION,group_graph_pattern)
-- On Pname_ns reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern UNION separated_nonempty_list(UNION,group_graph_pattern)
-- On Pname_ln reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern UNION separated_nonempty_list(UNION,group_graph_pattern)
-- On OPTIONAL reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern UNION separated_nonempty_list(UNION,group_graph_pattern)
-- On NIL reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern UNION separated_nonempty_list(UNION,group_graph_pattern)
-- On MINUS reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern UNION separated_nonempty_list(UNION,group_graph_pattern)
-- On LPAR reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern UNION separated_nonempty_list(UNION,group_graph_pattern)
-- On LBRACKET reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern UNION separated_nonempty_list(UNION,group_graph_pattern)
-- On LBRACE reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern UNION separated_nonempty_list(UNION,group_graph_pattern)
-- On Iriref_ reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern UNION separated_nonempty_list(UNION,group_graph_pattern)
-- On Integer_positive reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern UNION separated_nonempty_list(UNION,group_graph_pattern)
-- On Integer_negative reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern UNION separated_nonempty_list(UNION,group_graph_pattern)
-- On Integer reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern UNION separated_nonempty_list(UNION,group_graph_pattern)
-- On GRAPH reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern UNION separated_nonempty_list(UNION,group_graph_pattern)
-- On FILTER reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern UNION separated_nonempty_list(UNION,group_graph_pattern)
-- On Double_positive reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern UNION separated_nonempty_list(UNION,group_graph_pattern)
-- On Double_negative reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern UNION separated_nonempty_list(UNION,group_graph_pattern)
-- On Double reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern UNION separated_nonempty_list(UNION,group_graph_pattern)
-- On Decimal_positive reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern UNION separated_nonempty_list(UNION,group_graph_pattern)
-- On Decimal_negative reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern UNION separated_nonempty_list(UNION,group_graph_pattern)
-- On Decimal reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern UNION separated_nonempty_list(UNION,group_graph_pattern)
-- On DOT reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern UNION separated_nonempty_list(UNION,group_graph_pattern)
-- On Boolean reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern UNION separated_nonempty_list(UNION,group_graph_pattern)
-- On Blank_node_label reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern UNION separated_nonempty_list(UNION,group_graph_pattern)
-- On BIND reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern UNION separated_nonempty_list(UNION,group_graph_pattern)
-- On ANON reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern UNION separated_nonempty_list(UNION,group_graph_pattern)

State 561:
gp_triples -> graph_pattern_not_triples . option(DOT) option(triples_block) [ VALUES SERVICE RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER BIND ]
-- On DOT shift to state 562
-- On option(DOT) shift to state 563
-- On Var2 reduce production option(DOT) ->
-- On Var1 reduce production option(DOT) ->
-- On VALUES reduce production option(DOT) ->
-- On String_literal reduce production option(DOT) ->
-- On SERVICE reduce production option(DOT) ->
-- On RBRACE reduce production option(DOT) ->
-- On Pname_ns reduce production option(DOT) ->
-- On Pname_ln reduce production option(DOT) ->
-- On OPTIONAL reduce production option(DOT) ->
-- On NIL reduce production option(DOT) ->
-- On MINUS reduce production option(DOT) ->
-- On LPAR reduce production option(DOT) ->
-- On LBRACKET reduce production option(DOT) ->
-- On LBRACE reduce production option(DOT) ->
-- On Iriref_ reduce production option(DOT) ->
-- On Integer_positive reduce production option(DOT) ->
-- On Integer_negative reduce production option(DOT) ->
-- On Integer reduce production option(DOT) ->
-- On GRAPH reduce production option(DOT) ->
-- On FILTER reduce production option(DOT) ->
-- On Double_positive reduce production option(DOT) ->
-- On Double_negative reduce production option(DOT) ->
-- On Double reduce production option(DOT) ->
-- On Decimal_positive reduce production option(DOT) ->
-- On Decimal_negative reduce production option(DOT) ->
-- On Decimal reduce production option(DOT) ->
-- On Boolean reduce production option(DOT) ->
-- On Blank_node_label reduce production option(DOT) ->
-- On BIND reduce production option(DOT) ->
-- On ANON reduce production option(DOT) ->

State 562:
option(DOT) -> DOT . [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label BIND ANON ]
-- On Var2 reduce production option(DOT) -> DOT
-- On Var1 reduce production option(DOT) -> DOT
-- On VALUES reduce production option(DOT) -> DOT
-- On String_literal reduce production option(DOT) -> DOT
-- On SERVICE reduce production option(DOT) -> DOT
-- On RBRACE reduce production option(DOT) -> DOT
-- On Pname_ns reduce production option(DOT) -> DOT
-- On Pname_ln reduce production option(DOT) -> DOT
-- On OPTIONAL reduce production option(DOT) -> DOT
-- On NIL reduce production option(DOT) -> DOT
-- On MINUS reduce production option(DOT) -> DOT
-- On LPAR reduce production option(DOT) -> DOT
-- On LBRACKET reduce production option(DOT) -> DOT
-- On LBRACE reduce production option(DOT) -> DOT
-- On Iriref_ reduce production option(DOT) -> DOT
-- On Integer_positive reduce production option(DOT) -> DOT
-- On Integer_negative reduce production option(DOT) -> DOT
-- On Integer reduce production option(DOT) -> DOT
-- On GRAPH reduce production option(DOT) -> DOT
-- On FILTER reduce production option(DOT) -> DOT
-- On Double_positive reduce production option(DOT) -> DOT
-- On Double_negative reduce production option(DOT) -> DOT
-- On Double reduce production option(DOT) -> DOT
-- On Decimal_positive reduce production option(DOT) -> DOT
-- On Decimal_negative reduce production option(DOT) -> DOT
-- On Decimal reduce production option(DOT) -> DOT
-- On Boolean reduce production option(DOT) -> DOT
-- On Blank_node_label reduce production option(DOT) -> DOT
-- On BIND reduce production option(DOT) -> DOT
-- On ANON reduce production option(DOT) -> DOT

State 563:
gp_triples -> graph_pattern_not_triples option(DOT) . option(triples_block) [ VALUES SERVICE RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER BIND ]
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On String_literal shift to state 31
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On NIL shift to state 87
-- On LPAR shift to state 88
-- On LBRACKET shift to state 89
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On Boolean shift to state 139
-- On Blank_node_label shift to state 140
-- On ANON shift to state 141
-- On var_or_term shift to state 214
-- On var shift to state 143
-- On triples_same_subject_path shift to state 216
-- On triples_node_path shift to state 218
-- On triples_block_details shift to state 226
-- On triples_block shift to state 227
-- On string shift to state 145
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 151
-- On prefixed_name shift to state 97
-- On option(triples_block) shift to state 564
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 159
-- On iri shift to state 160
-- On graph_term shift to state 161
-- On collection_path shift to state 163
-- On boolean_literal shift to state 164
-- On blank_node_property_list_path shift to state 165
-- On blank_node shift to state 166
-- On VALUES reduce production option(triples_block) ->
-- On SERVICE reduce production option(triples_block) ->
-- On RBRACE reduce production option(triples_block) ->
-- On OPTIONAL reduce production option(triples_block) ->
-- On MINUS reduce production option(triples_block) ->
-- On LBRACE reduce production option(triples_block) ->
-- On GRAPH reduce production option(triples_block) ->
-- On FILTER reduce production option(triples_block) ->
-- On BIND reduce production option(triples_block) ->

State 564:
gp_triples -> graph_pattern_not_triples option(DOT) option(triples_block) . [ VALUES SERVICE RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER BIND ]
-- On VALUES reduce production gp_triples -> graph_pattern_not_triples option(DOT) option(triples_block)
-- On SERVICE reduce production gp_triples -> graph_pattern_not_triples option(DOT) option(triples_block)
-- On RBRACE reduce production gp_triples -> graph_pattern_not_triples option(DOT) option(triples_block)
-- On OPTIONAL reduce production gp_triples -> graph_pattern_not_triples option(DOT) option(triples_block)
-- On MINUS reduce production gp_triples -> graph_pattern_not_triples option(DOT) option(triples_block)
-- On LBRACE reduce production gp_triples -> graph_pattern_not_triples option(DOT) option(triples_block)
-- On GRAPH reduce production gp_triples -> graph_pattern_not_triples option(DOT) option(triples_block)
-- On FILTER reduce production gp_triples -> graph_pattern_not_triples option(DOT) option(triples_block)
-- On BIND reduce production gp_triples -> graph_pattern_not_triples option(DOT) option(triples_block)

State 565:
graph_pattern_not_triples -> graph_graph_pattern . [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
-- On Var2 reduce production graph_pattern_not_triples -> graph_graph_pattern
-- On Var1 reduce production graph_pattern_not_triples -> graph_graph_pattern
-- On VALUES reduce production graph_pattern_not_triples -> graph_graph_pattern
-- On String_literal reduce production graph_pattern_not_triples -> graph_graph_pattern
-- On SERVICE reduce production graph_pattern_not_triples -> graph_graph_pattern
-- On RBRACE reduce production graph_pattern_not_triples -> graph_graph_pattern
-- On Pname_ns reduce production graph_pattern_not_triples -> graph_graph_pattern
-- On Pname_ln reduce production graph_pattern_not_triples -> graph_graph_pattern
-- On OPTIONAL reduce production graph_pattern_not_triples -> graph_graph_pattern
-- On NIL reduce production graph_pattern_not_triples -> graph_graph_pattern
-- On MINUS reduce production graph_pattern_not_triples -> graph_graph_pattern
-- On LPAR reduce production graph_pattern_not_triples -> graph_graph_pattern
-- On LBRACKET reduce production graph_pattern_not_triples -> graph_graph_pattern
-- On LBRACE reduce production graph_pattern_not_triples -> graph_graph_pattern
-- On Iriref_ reduce production graph_pattern_not_triples -> graph_graph_pattern
-- On Integer_positive reduce production graph_pattern_not_triples -> graph_graph_pattern
-- On Integer_negative reduce production graph_pattern_not_triples -> graph_graph_pattern
-- On Integer reduce production graph_pattern_not_triples -> graph_graph_pattern
-- On GRAPH reduce production graph_pattern_not_triples -> graph_graph_pattern
-- On FILTER reduce production graph_pattern_not_triples -> graph_graph_pattern
-- On Double_positive reduce production graph_pattern_not_triples -> graph_graph_pattern
-- On Double_negative reduce production graph_pattern_not_triples -> graph_graph_pattern
-- On Double reduce production graph_pattern_not_triples -> graph_graph_pattern
-- On Decimal_positive reduce production graph_pattern_not_triples -> graph_graph_pattern
-- On Decimal_negative reduce production graph_pattern_not_triples -> graph_graph_pattern
-- On Decimal reduce production graph_pattern_not_triples -> graph_graph_pattern
-- On DOT reduce production graph_pattern_not_triples -> graph_graph_pattern
-- On Boolean reduce production graph_pattern_not_triples -> graph_graph_pattern
-- On Blank_node_label reduce production graph_pattern_not_triples -> graph_graph_pattern
-- On BIND reduce production graph_pattern_not_triples -> graph_graph_pattern
-- On ANON reduce production graph_pattern_not_triples -> graph_graph_pattern

State 566:
list(gp_triples) -> gp_triples . list(gp_triples) [ RBRACE ]
-- On VALUES shift to state 529
-- On SERVICE shift to state 531
-- On OPTIONAL shift to state 536
-- On MINUS shift to state 538
-- On LBRACE shift to state 86
-- On GRAPH shift to state 540
-- On FILTER shift to state 543
-- On BIND shift to state 545
-- On service_graph_pattern shift to state 551
-- On separated_nonempty_list(UNION,group_graph_pattern) shift to state 552
-- On optional_graph_pattern shift to state 553
-- On minus_graph_pattern shift to state 554
-- On list(gp_triples) shift to state 567
-- On inline_data shift to state 556
-- On group_of_union_graph_pattern shift to state 557
-- On group_graph_pattern shift to state 558
-- On graph_pattern_not_triples shift to state 561
-- On graph_graph_pattern shift to state 565
-- On gp_triples shift to state 566
-- On filter shift to state 568
-- On bind shift to state 569
-- On RBRACE reduce production list(gp_triples) ->

State 567:
list(gp_triples) -> gp_triples list(gp_triples) . [ RBRACE ]
-- On RBRACE reduce production list(gp_triples) -> gp_triples list(gp_triples)

State 568:
graph_pattern_not_triples -> filter . [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
-- On Var2 reduce production graph_pattern_not_triples -> filter
-- On Var1 reduce production graph_pattern_not_triples -> filter
-- On VALUES reduce production graph_pattern_not_triples -> filter
-- On String_literal reduce production graph_pattern_not_triples -> filter
-- On SERVICE reduce production graph_pattern_not_triples -> filter
-- On RBRACE reduce production graph_pattern_not_triples -> filter
-- On Pname_ns reduce production graph_pattern_not_triples -> filter
-- On Pname_ln reduce production graph_pattern_not_triples -> filter
-- On OPTIONAL reduce production graph_pattern_not_triples -> filter
-- On NIL reduce production graph_pattern_not_triples -> filter
-- On MINUS reduce production graph_pattern_not_triples -> filter
-- On LPAR reduce production graph_pattern_not_triples -> filter
-- On LBRACKET reduce production graph_pattern_not_triples -> filter
-- On LBRACE reduce production graph_pattern_not_triples -> filter
-- On Iriref_ reduce production graph_pattern_not_triples -> filter
-- On Integer_positive reduce production graph_pattern_not_triples -> filter
-- On Integer_negative reduce production graph_pattern_not_triples -> filter
-- On Integer reduce production graph_pattern_not_triples -> filter
-- On GRAPH reduce production graph_pattern_not_triples -> filter
-- On FILTER reduce production graph_pattern_not_triples -> filter
-- On Double_positive reduce production graph_pattern_not_triples -> filter
-- On Double_negative reduce production graph_pattern_not_triples -> filter
-- On Double reduce production graph_pattern_not_triples -> filter
-- On Decimal_positive reduce production graph_pattern_not_triples -> filter
-- On Decimal_negative reduce production graph_pattern_not_triples -> filter
-- On Decimal reduce production graph_pattern_not_triples -> filter
-- On DOT reduce production graph_pattern_not_triples -> filter
-- On Boolean reduce production graph_pattern_not_triples -> filter
-- On Blank_node_label reduce production graph_pattern_not_triples -> filter
-- On BIND reduce production graph_pattern_not_triples -> filter
-- On ANON reduce production graph_pattern_not_triples -> filter

State 569:
graph_pattern_not_triples -> bind . [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
-- On Var2 reduce production graph_pattern_not_triples -> bind
-- On Var1 reduce production graph_pattern_not_triples -> bind
-- On VALUES reduce production graph_pattern_not_triples -> bind
-- On String_literal reduce production graph_pattern_not_triples -> bind
-- On SERVICE reduce production graph_pattern_not_triples -> bind
-- On RBRACE reduce production graph_pattern_not_triples -> bind
-- On Pname_ns reduce production graph_pattern_not_triples -> bind
-- On Pname_ln reduce production graph_pattern_not_triples -> bind
-- On OPTIONAL reduce production graph_pattern_not_triples -> bind
-- On NIL reduce production graph_pattern_not_triples -> bind
-- On MINUS reduce production graph_pattern_not_triples -> bind
-- On LPAR reduce production graph_pattern_not_triples -> bind
-- On LBRACKET reduce production graph_pattern_not_triples -> bind
-- On LBRACE reduce production graph_pattern_not_triples -> bind
-- On Iriref_ reduce production graph_pattern_not_triples -> bind
-- On Integer_positive reduce production graph_pattern_not_triples -> bind
-- On Integer_negative reduce production graph_pattern_not_triples -> bind
-- On Integer reduce production graph_pattern_not_triples -> bind
-- On GRAPH reduce production graph_pattern_not_triples -> bind
-- On FILTER reduce production graph_pattern_not_triples -> bind
-- On Double_positive reduce production graph_pattern_not_triples -> bind
-- On Double_negative reduce production graph_pattern_not_triples -> bind
-- On Double reduce production graph_pattern_not_triples -> bind
-- On Decimal_positive reduce production graph_pattern_not_triples -> bind
-- On Decimal_negative reduce production graph_pattern_not_triples -> bind
-- On Decimal reduce production graph_pattern_not_triples -> bind
-- On DOT reduce production graph_pattern_not_triples -> bind
-- On Boolean reduce production graph_pattern_not_triples -> bind
-- On Blank_node_label reduce production graph_pattern_not_triples -> bind
-- On BIND reduce production graph_pattern_not_triples -> bind
-- On ANON reduce production graph_pattern_not_triples -> bind

State 570:
group_graph_pattern -> LBRACE group_graph_pattern_sub . RBRACE [ YEAR Var2 Var1 VALUES UUID URI UNION UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GROUP GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On RBRACE shift to state 571

State 571:
group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE . [ YEAR Var2 Var1 VALUES UUID URI UNION UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GROUP GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On Var2 reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On Var1 reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On VALUES reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On UUID reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On URI reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On UNION reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On UCASE reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On TZ reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On TIMEZONE reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On String_literal reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On SUM reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On SUBSTR reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On STRUUID reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On STRSTARTS reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On STRLEN reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On STRLANG reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On STRENDS reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On STRDT reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On STRBEFORE reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On STRAFTER reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On STR reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On STAR reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On SLASH reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On SHA512 reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On SHA384 reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On SHA256 reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On SHA1 reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On SERVICE reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On SEMICOLON reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On SECONDS reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On SAMPLE reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On SAMETERM reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On RPAR reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On ROUND reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On REPLACE reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On REGEX reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On RBRACE reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On RAND reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On Pname_ns reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On Pname_ln reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On PLUS reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On PIPEPIPE reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On ORDER reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On OPTIONAL reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On OFFSET reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On NOW reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On NOTEQUAL reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On NOT reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On NIL reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On MONTH reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On MINUTES reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On MINUS reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On MIN reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On MD5 reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On MAX reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On LTE reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On LT reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On LPAR reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On LIMIT reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On LCASE reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On LBRACKET reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On LBRACE reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On LANGMATCHES reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On LANG reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On Iriref_ reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On Integer_positive reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On Integer_negative reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On Integer reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On ISURI reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On ISNUMERIC reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On ISLITERAL reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On ISIRI reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On ISBLANK reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On IRI reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On IN reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On IF reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On HOURS reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On HAVING reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On GTE reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On GT reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On GROUP_CONCAT reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On GROUP reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On GRAPH reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On FLOOR reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On FILTER reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On EXISTS reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On EQUAL reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On EOF reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On ENCODE_FOR_URI reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On Double_positive reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On Double_negative reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On Double reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On Decimal_positive reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On Decimal_negative reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On Decimal reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On DOT reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On DESC reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On DAY reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On DATATYPE reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On COUNT reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On CONTAINS reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On CONCAT reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On COMMA reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On COALESCE reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On CEIL reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On Boolean reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On Blank_node_label reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On BOUND reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On BNODE reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On BIND reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On BANG reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On AVG reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On ASC reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On AS reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On ANON reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On AMPAMP reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE
-- On ABS reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE

State 572:
built_in_call -> NOT EXISTS group_graph_pattern . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On Var2 reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On Var1 reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On VALUES reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On UUID reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On URI reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On UCASE reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On TZ reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On TIMEZONE reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On String_literal reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On SUM reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On SUBSTR reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On STRUUID reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On STRSTARTS reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On STRLEN reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On STRLANG reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On STRENDS reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On STRDT reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On STRBEFORE reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On STRAFTER reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On STR reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On STAR reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On SLASH reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On SHA512 reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On SHA384 reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On SHA256 reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On SHA1 reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On SERVICE reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On SEMICOLON reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On SECONDS reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On SAMPLE reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On SAMETERM reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On RPAR reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On ROUND reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On REPLACE reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On REGEX reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On RBRACE reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On RAND reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On Pname_ns reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On Pname_ln reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On PLUS reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On PIPEPIPE reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On ORDER reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On OPTIONAL reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On OFFSET reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On NOW reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On NOTEQUAL reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On NOT reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On NIL reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On MONTH reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On MINUTES reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On MINUS reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On MIN reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On MD5 reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On MAX reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On LTE reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On LT reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On LPAR reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On LIMIT reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On LCASE reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On LBRACKET reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On LBRACE reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On LANGMATCHES reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On LANG reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On Iriref_ reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On Integer_positive reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On Integer_negative reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On Integer reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On ISURI reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On ISNUMERIC reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On ISLITERAL reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On ISIRI reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On ISBLANK reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On IRI reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On IN reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On IF reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On HOURS reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On HAVING reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On GTE reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On GT reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On GROUP_CONCAT reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On GRAPH reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On FLOOR reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On FILTER reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On EXISTS reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On EQUAL reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On EOF reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On ENCODE_FOR_URI reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On Double_positive reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On Double_negative reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On Double reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On Decimal_positive reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On Decimal_negative reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On Decimal reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On DOT reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On DESC reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On DAY reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On DATATYPE reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On COUNT reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On CONTAINS reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On CONCAT reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On COMMA reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On COALESCE reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On CEIL reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On Boolean reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On Blank_node_label reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On BOUND reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On BNODE reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On BIND reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On BANG reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On AVG reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On ASC reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On AS reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On ANON reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On AMPAMP reduce production built_in_call -> NOT EXISTS group_graph_pattern
-- On ABS reduce production built_in_call -> NOT EXISTS group_graph_pattern

State 573:
numexp -> expression . STAR expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . SLASH expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . PLUS expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . MINUS expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . numeric_literal_positive [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . numeric_literal_negative [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> PLUS expression . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
-- On YEAR reduce production numexp -> PLUS expression
-- On Var2 reduce production numexp -> PLUS expression
-- On Var1 reduce production numexp -> PLUS expression
-- On VALUES reduce production numexp -> PLUS expression
-- On UUID reduce production numexp -> PLUS expression
-- On URI reduce production numexp -> PLUS expression
-- On UCASE reduce production numexp -> PLUS expression
-- On TZ reduce production numexp -> PLUS expression
-- On TIMEZONE reduce production numexp -> PLUS expression
-- On String_literal reduce production numexp -> PLUS expression
-- On SUM reduce production numexp -> PLUS expression
-- On SUBSTR reduce production numexp -> PLUS expression
-- On STRUUID reduce production numexp -> PLUS expression
-- On STRSTARTS reduce production numexp -> PLUS expression
-- On STRLEN reduce production numexp -> PLUS expression
-- On STRLANG reduce production numexp -> PLUS expression
-- On STRENDS reduce production numexp -> PLUS expression
-- On STRDT reduce production numexp -> PLUS expression
-- On STRBEFORE reduce production numexp -> PLUS expression
-- On STRAFTER reduce production numexp -> PLUS expression
-- On STR reduce production numexp -> PLUS expression
-- On SHA512 reduce production numexp -> PLUS expression
-- On SHA384 reduce production numexp -> PLUS expression
-- On SHA256 reduce production numexp -> PLUS expression
-- On SHA1 reduce production numexp -> PLUS expression
-- On SEMICOLON reduce production numexp -> PLUS expression
-- On SECONDS reduce production numexp -> PLUS expression
-- On SAMPLE reduce production numexp -> PLUS expression
-- On SAMETERM reduce production numexp -> PLUS expression
-- On RPAR reduce production numexp -> PLUS expression
-- On ROUND reduce production numexp -> PLUS expression
-- On REPLACE reduce production numexp -> PLUS expression
-- On REGEX reduce production numexp -> PLUS expression
-- On RBRACE reduce production numexp -> PLUS expression
-- On RAND reduce production numexp -> PLUS expression
-- On Pname_ns reduce production numexp -> PLUS expression
-- On Pname_ln reduce production numexp -> PLUS expression
-- On PLUS reduce production numexp -> PLUS expression
-- On PIPEPIPE reduce production numexp -> PLUS expression
-- On ORDER reduce production numexp -> PLUS expression
-- On OFFSET reduce production numexp -> PLUS expression
-- On NOW reduce production numexp -> PLUS expression
-- On NOTEQUAL reduce production numexp -> PLUS expression
-- On NOT reduce production numexp -> PLUS expression
-- On MONTH reduce production numexp -> PLUS expression
-- On MINUTES reduce production numexp -> PLUS expression
-- On MINUS reduce production numexp -> PLUS expression
-- On MIN reduce production numexp -> PLUS expression
-- On MD5 reduce production numexp -> PLUS expression
-- On MAX reduce production numexp -> PLUS expression
-- On LTE reduce production numexp -> PLUS expression
-- On LT reduce production numexp -> PLUS expression
-- On LPAR reduce production numexp -> PLUS expression
-- On LIMIT reduce production numexp -> PLUS expression
-- On LCASE reduce production numexp -> PLUS expression
-- On LANGMATCHES reduce production numexp -> PLUS expression
-- On LANG reduce production numexp -> PLUS expression
-- On Iriref_ reduce production numexp -> PLUS expression
-- On Integer_positive reduce production numexp -> PLUS expression
-- On Integer_negative reduce production numexp -> PLUS expression
-- On Integer reduce production numexp -> PLUS expression
-- On ISURI reduce production numexp -> PLUS expression
-- On ISNUMERIC reduce production numexp -> PLUS expression
-- On ISLITERAL reduce production numexp -> PLUS expression
-- On ISIRI reduce production numexp -> PLUS expression
-- On ISBLANK reduce production numexp -> PLUS expression
-- On IRI reduce production numexp -> PLUS expression
-- On IN reduce production numexp -> PLUS expression
-- On IF reduce production numexp -> PLUS expression
-- On HOURS reduce production numexp -> PLUS expression
-- On HAVING reduce production numexp -> PLUS expression
-- On GTE reduce production numexp -> PLUS expression
-- On GT reduce production numexp -> PLUS expression
-- On GROUP_CONCAT reduce production numexp -> PLUS expression
-- On FLOOR reduce production numexp -> PLUS expression
-- On EXISTS reduce production numexp -> PLUS expression
-- On EQUAL reduce production numexp -> PLUS expression
-- On EOF reduce production numexp -> PLUS expression
-- On ENCODE_FOR_URI reduce production numexp -> PLUS expression
-- On Double_positive reduce production numexp -> PLUS expression
-- On Double_negative reduce production numexp -> PLUS expression
-- On Double reduce production numexp -> PLUS expression
-- On Decimal_positive reduce production numexp -> PLUS expression
-- On Decimal_negative reduce production numexp -> PLUS expression
-- On Decimal reduce production numexp -> PLUS expression
-- On DAY reduce production numexp -> PLUS expression
-- On DATATYPE reduce production numexp -> PLUS expression
-- On COUNT reduce production numexp -> PLUS expression
-- On CONTAINS reduce production numexp -> PLUS expression
-- On CONCAT reduce production numexp -> PLUS expression
-- On COMMA reduce production numexp -> PLUS expression
-- On COALESCE reduce production numexp -> PLUS expression
-- On CEIL reduce production numexp -> PLUS expression
-- On Boolean reduce production numexp -> PLUS expression
-- On BOUND reduce production numexp -> PLUS expression
-- On BNODE reduce production numexp -> PLUS expression
-- On BANG reduce production numexp -> PLUS expression
-- On AVG reduce production numexp -> PLUS expression
-- On AS reduce production numexp -> PLUS expression
-- On AMPAMP reduce production numexp -> PLUS expression
-- On ABS reduce production numexp -> PLUS expression
** Conflict on Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative

State 574:
numexp -> expression . STAR expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
regexp_expression -> REGEX LPAR expression . COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
regexp_expression -> REGEX LPAR expression . COMMA expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On COMMA shift to state 575
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 575:
regexp_expression -> REGEX LPAR expression COMMA . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
regexp_expression -> REGEX LPAR expression COMMA . expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 576
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 576:
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
regexp_expression -> REGEX LPAR expression COMMA expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
regexp_expression -> REGEX LPAR expression COMMA expression . COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 577
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On COMMA shift to state 578
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 577:
regexp_expression -> REGEX LPAR expression COMMA expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On Var2 reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On Var1 reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On VALUES reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On UUID reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On URI reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On UCASE reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On TZ reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On TIMEZONE reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On String_literal reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On SUM reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On SUBSTR reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On STRUUID reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On STRSTARTS reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On STRLEN reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On STRLANG reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On STRENDS reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On STRDT reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On STRBEFORE reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On STRAFTER reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On STR reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On STAR reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On SLASH reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On SHA512 reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On SHA384 reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On SHA256 reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On SHA1 reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On SERVICE reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On SEMICOLON reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On SECONDS reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On SAMPLE reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On SAMETERM reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On RPAR reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On ROUND reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On REPLACE reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On REGEX reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On RBRACE reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On RAND reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On Pname_ns reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On Pname_ln reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On PLUS reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On PIPEPIPE reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On ORDER reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On OPTIONAL reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On OFFSET reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On NOW reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On NOTEQUAL reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On NOT reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On NIL reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On MONTH reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On MINUTES reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On MINUS reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On MIN reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On MD5 reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On MAX reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On LTE reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On LT reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On LPAR reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On LIMIT reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On LCASE reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On LBRACKET reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On LBRACE reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On LANGMATCHES reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On LANG reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On Iriref_ reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On Integer_positive reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On Integer_negative reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On Integer reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On ISURI reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On ISNUMERIC reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On ISLITERAL reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On ISIRI reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On ISBLANK reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On IRI reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On IN reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On IF reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On HOURS reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On HAVING reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On GTE reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On GT reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On GROUP_CONCAT reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On GRAPH reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On FLOOR reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On FILTER reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On EXISTS reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On EQUAL reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On EOF reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On ENCODE_FOR_URI reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On Double_positive reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On Double_negative reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On Double reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On Decimal_positive reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On Decimal_negative reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On Decimal reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On DOT reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On DESC reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On DAY reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On DATATYPE reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On COUNT reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On CONTAINS reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On CONCAT reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On COMMA reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On COALESCE reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On CEIL reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On Boolean reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On Blank_node_label reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On BOUND reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On BNODE reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On BIND reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On BANG reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On AVG reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On ASC reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On AS reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On ANON reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On AMPAMP reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR
-- On ABS reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR

State 578:
regexp_expression -> REGEX LPAR expression COMMA expression COMMA . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 579
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 579:
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 580
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 580:
regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On Var2 reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On Var1 reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On VALUES reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On UUID reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On URI reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On UCASE reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On TZ reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On TIMEZONE reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On String_literal reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On SUM reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On SUBSTR reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On STRUUID reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On STRSTARTS reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On STRLEN reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On STRLANG reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On STRENDS reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On STRDT reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On STRBEFORE reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On STRAFTER reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On STR reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On STAR reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On SLASH reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On SHA512 reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On SHA384 reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On SHA256 reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On SHA1 reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On SERVICE reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On SEMICOLON reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On SECONDS reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On SAMPLE reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On SAMETERM reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On RPAR reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On ROUND reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On REPLACE reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On REGEX reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On RBRACE reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On RAND reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On Pname_ns reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On Pname_ln reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On PLUS reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On PIPEPIPE reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On ORDER reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On OPTIONAL reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On OFFSET reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On NOW reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On NOTEQUAL reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On NOT reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On NIL reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On MONTH reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On MINUTES reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On MINUS reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On MIN reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On MD5 reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On MAX reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On LTE reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On LT reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On LPAR reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On LIMIT reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On LCASE reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On LBRACKET reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On LBRACE reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On LANGMATCHES reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On LANG reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On Iriref_ reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On Integer_positive reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On Integer_negative reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On Integer reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On ISURI reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On ISNUMERIC reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On ISLITERAL reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On ISIRI reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On ISBLANK reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On IRI reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On IN reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On IF reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On HOURS reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On HAVING reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On GTE reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On GT reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On GROUP_CONCAT reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On GRAPH reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On FLOOR reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On FILTER reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On EXISTS reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On EQUAL reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On EOF reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On ENCODE_FOR_URI reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On Double_positive reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On Double_negative reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On Double reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On Decimal_positive reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On Decimal_negative reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On Decimal reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On DOT reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On DESC reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On DAY reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On DATATYPE reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On COUNT reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On CONTAINS reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On CONCAT reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On COMMA reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On COALESCE reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On CEIL reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On Boolean reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On Blank_node_label reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On BOUND reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On BNODE reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On BIND reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On BANG reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On AVG reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On ASC reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On AS reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On ANON reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On AMPAMP reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR
-- On ABS reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR

State 581:
numexp -> expression . STAR expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
str_replace_expression -> REPLACE LPAR expression . COMMA expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
str_replace_expression -> REPLACE LPAR expression . COMMA expression COMMA expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On COMMA shift to state 582
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 582:
str_replace_expression -> REPLACE LPAR expression COMMA . expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
str_replace_expression -> REPLACE LPAR expression COMMA . expression COMMA expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 583
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 583:
numexp -> expression . STAR expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
str_replace_expression -> REPLACE LPAR expression COMMA expression . COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
str_replace_expression -> REPLACE LPAR expression COMMA expression . COMMA expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On COMMA shift to state 584
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 584:
str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA . expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 585
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 585:
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression . COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 586
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On COMMA shift to state 587
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 586:
str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On Var2 reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On Var1 reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On VALUES reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On UUID reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On URI reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On UCASE reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On TZ reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On TIMEZONE reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On String_literal reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On SUM reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On SUBSTR reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On STRUUID reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On STRSTARTS reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On STRLEN reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On STRLANG reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On STRENDS reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On STRDT reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On STRBEFORE reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On STRAFTER reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On STR reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On STAR reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On SLASH reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On SHA512 reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On SHA384 reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On SHA256 reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On SHA1 reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On SERVICE reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On SEMICOLON reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On SECONDS reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On SAMPLE reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On SAMETERM reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On RPAR reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On ROUND reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On REPLACE reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On REGEX reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On RBRACE reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On RAND reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On Pname_ns reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On Pname_ln reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On PLUS reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On PIPEPIPE reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On ORDER reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On OPTIONAL reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On OFFSET reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On NOW reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On NOTEQUAL reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On NOT reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On NIL reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On MONTH reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On MINUTES reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On MINUS reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On MIN reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On MD5 reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On MAX reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On LTE reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On LT reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On LPAR reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On LIMIT reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On LCASE reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On LBRACKET reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On LBRACE reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On LANGMATCHES reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On LANG reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On Iriref_ reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On Integer_positive reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On Integer_negative reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On Integer reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On ISURI reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On ISNUMERIC reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On ISLITERAL reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On ISIRI reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On ISBLANK reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On IRI reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On IN reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On IF reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On HOURS reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On HAVING reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On GTE reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On GT reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On GROUP_CONCAT reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On GRAPH reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On FLOOR reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On FILTER reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On EXISTS reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On EQUAL reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On EOF reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On ENCODE_FOR_URI reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On Double_positive reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On Double_negative reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On Double reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On Decimal_positive reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On Decimal_negative reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On Decimal reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On DOT reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On DESC reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On DAY reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On DATATYPE reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On COUNT reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On CONTAINS reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On CONCAT reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On COMMA reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On COALESCE reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On CEIL reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On Boolean reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On Blank_node_label reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On BOUND reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On BNODE reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On BIND reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On BANG reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On AVG reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On ASC reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On AS reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On ANON reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On AMPAMP reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR
-- On ABS reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR

State 587:
str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 588
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 588:
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 589
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 589:
str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On Var2 reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On Var1 reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On VALUES reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On UUID reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On URI reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On UCASE reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On TZ reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On TIMEZONE reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On String_literal reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On SUM reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On SUBSTR reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On STRUUID reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On STRSTARTS reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On STRLEN reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On STRLANG reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On STRENDS reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On STRDT reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On STRBEFORE reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On STRAFTER reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On STR reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On STAR reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On SLASH reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On SHA512 reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On SHA384 reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On SHA256 reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On SHA1 reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On SERVICE reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On SEMICOLON reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On SECONDS reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On SAMPLE reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On SAMETERM reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On RPAR reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On ROUND reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On REPLACE reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On REGEX reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On RBRACE reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On RAND reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On Pname_ns reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On Pname_ln reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On PLUS reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On PIPEPIPE reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On ORDER reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On OPTIONAL reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On OFFSET reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On NOW reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On NOTEQUAL reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On NOT reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On NIL reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On MONTH reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On MINUTES reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On MINUS reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On MIN reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On MD5 reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On MAX reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On LTE reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On LT reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On LPAR reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On LIMIT reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On LCASE reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On LBRACKET reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On LBRACE reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On LANGMATCHES reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On LANG reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On Iriref_ reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On Integer_positive reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On Integer_negative reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On Integer reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On ISURI reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On ISNUMERIC reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On ISLITERAL reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On ISIRI reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On ISBLANK reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On IRI reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On IN reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On IF reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On HOURS reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On HAVING reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On GTE reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On GT reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On GROUP_CONCAT reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On GRAPH reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On FLOOR reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On FILTER reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On EXISTS reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On EQUAL reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On EOF reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On ENCODE_FOR_URI reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On Double_positive reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On Double_negative reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On Double reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On Decimal_positive reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On Decimal_negative reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On Decimal reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On DOT reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On DESC reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On DAY reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On DATATYPE reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On COUNT reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On CONTAINS reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On CONCAT reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On COMMA reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On COALESCE reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On CEIL reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On Boolean reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On Blank_node_label reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On BOUND reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On BNODE reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On BIND reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On BANG reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On AVG reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On ASC reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On AS reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On ANON reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On AMPAMP reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
-- On ABS reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR

State 590:
built_in_call -> ROUND LPAR expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 591
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 591:
built_in_call -> ROUND LPAR expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production built_in_call -> ROUND LPAR expression RPAR
-- On Var2 reduce production built_in_call -> ROUND LPAR expression RPAR
-- On Var1 reduce production built_in_call -> ROUND LPAR expression RPAR
-- On VALUES reduce production built_in_call -> ROUND LPAR expression RPAR
-- On UUID reduce production built_in_call -> ROUND LPAR expression RPAR
-- On URI reduce production built_in_call -> ROUND LPAR expression RPAR
-- On UCASE reduce production built_in_call -> ROUND LPAR expression RPAR
-- On TZ reduce production built_in_call -> ROUND LPAR expression RPAR
-- On TIMEZONE reduce production built_in_call -> ROUND LPAR expression RPAR
-- On String_literal reduce production built_in_call -> ROUND LPAR expression RPAR
-- On SUM reduce production built_in_call -> ROUND LPAR expression RPAR
-- On SUBSTR reduce production built_in_call -> ROUND LPAR expression RPAR
-- On STRUUID reduce production built_in_call -> ROUND LPAR expression RPAR
-- On STRSTARTS reduce production built_in_call -> ROUND LPAR expression RPAR
-- On STRLEN reduce production built_in_call -> ROUND LPAR expression RPAR
-- On STRLANG reduce production built_in_call -> ROUND LPAR expression RPAR
-- On STRENDS reduce production built_in_call -> ROUND LPAR expression RPAR
-- On STRDT reduce production built_in_call -> ROUND LPAR expression RPAR
-- On STRBEFORE reduce production built_in_call -> ROUND LPAR expression RPAR
-- On STRAFTER reduce production built_in_call -> ROUND LPAR expression RPAR
-- On STR reduce production built_in_call -> ROUND LPAR expression RPAR
-- On STAR reduce production built_in_call -> ROUND LPAR expression RPAR
-- On SLASH reduce production built_in_call -> ROUND LPAR expression RPAR
-- On SHA512 reduce production built_in_call -> ROUND LPAR expression RPAR
-- On SHA384 reduce production built_in_call -> ROUND LPAR expression RPAR
-- On SHA256 reduce production built_in_call -> ROUND LPAR expression RPAR
-- On SHA1 reduce production built_in_call -> ROUND LPAR expression RPAR
-- On SERVICE reduce production built_in_call -> ROUND LPAR expression RPAR
-- On SEMICOLON reduce production built_in_call -> ROUND LPAR expression RPAR
-- On SECONDS reduce production built_in_call -> ROUND LPAR expression RPAR
-- On SAMPLE reduce production built_in_call -> ROUND LPAR expression RPAR
-- On SAMETERM reduce production built_in_call -> ROUND LPAR expression RPAR
-- On RPAR reduce production built_in_call -> ROUND LPAR expression RPAR
-- On ROUND reduce production built_in_call -> ROUND LPAR expression RPAR
-- On REPLACE reduce production built_in_call -> ROUND LPAR expression RPAR
-- On REGEX reduce production built_in_call -> ROUND LPAR expression RPAR
-- On RBRACE reduce production built_in_call -> ROUND LPAR expression RPAR
-- On RAND reduce production built_in_call -> ROUND LPAR expression RPAR
-- On Pname_ns reduce production built_in_call -> ROUND LPAR expression RPAR
-- On Pname_ln reduce production built_in_call -> ROUND LPAR expression RPAR
-- On PLUS reduce production built_in_call -> ROUND LPAR expression RPAR
-- On PIPEPIPE reduce production built_in_call -> ROUND LPAR expression RPAR
-- On ORDER reduce production built_in_call -> ROUND LPAR expression RPAR
-- On OPTIONAL reduce production built_in_call -> ROUND LPAR expression RPAR
-- On OFFSET reduce production built_in_call -> ROUND LPAR expression RPAR
-- On NOW reduce production built_in_call -> ROUND LPAR expression RPAR
-- On NOTEQUAL reduce production built_in_call -> ROUND LPAR expression RPAR
-- On NOT reduce production built_in_call -> ROUND LPAR expression RPAR
-- On NIL reduce production built_in_call -> ROUND LPAR expression RPAR
-- On MONTH reduce production built_in_call -> ROUND LPAR expression RPAR
-- On MINUTES reduce production built_in_call -> ROUND LPAR expression RPAR
-- On MINUS reduce production built_in_call -> ROUND LPAR expression RPAR
-- On MIN reduce production built_in_call -> ROUND LPAR expression RPAR
-- On MD5 reduce production built_in_call -> ROUND LPAR expression RPAR
-- On MAX reduce production built_in_call -> ROUND LPAR expression RPAR
-- On LTE reduce production built_in_call -> ROUND LPAR expression RPAR
-- On LT reduce production built_in_call -> ROUND LPAR expression RPAR
-- On LPAR reduce production built_in_call -> ROUND LPAR expression RPAR
-- On LIMIT reduce production built_in_call -> ROUND LPAR expression RPAR
-- On LCASE reduce production built_in_call -> ROUND LPAR expression RPAR
-- On LBRACKET reduce production built_in_call -> ROUND LPAR expression RPAR
-- On LBRACE reduce production built_in_call -> ROUND LPAR expression RPAR
-- On LANGMATCHES reduce production built_in_call -> ROUND LPAR expression RPAR
-- On LANG reduce production built_in_call -> ROUND LPAR expression RPAR
-- On Iriref_ reduce production built_in_call -> ROUND LPAR expression RPAR
-- On Integer_positive reduce production built_in_call -> ROUND LPAR expression RPAR
-- On Integer_negative reduce production built_in_call -> ROUND LPAR expression RPAR
-- On Integer reduce production built_in_call -> ROUND LPAR expression RPAR
-- On ISURI reduce production built_in_call -> ROUND LPAR expression RPAR
-- On ISNUMERIC reduce production built_in_call -> ROUND LPAR expression RPAR
-- On ISLITERAL reduce production built_in_call -> ROUND LPAR expression RPAR
-- On ISIRI reduce production built_in_call -> ROUND LPAR expression RPAR
-- On ISBLANK reduce production built_in_call -> ROUND LPAR expression RPAR
-- On IRI reduce production built_in_call -> ROUND LPAR expression RPAR
-- On IN reduce production built_in_call -> ROUND LPAR expression RPAR
-- On IF reduce production built_in_call -> ROUND LPAR expression RPAR
-- On HOURS reduce production built_in_call -> ROUND LPAR expression RPAR
-- On HAVING reduce production built_in_call -> ROUND LPAR expression RPAR
-- On GTE reduce production built_in_call -> ROUND LPAR expression RPAR
-- On GT reduce production built_in_call -> ROUND LPAR expression RPAR
-- On GROUP_CONCAT reduce production built_in_call -> ROUND LPAR expression RPAR
-- On GRAPH reduce production built_in_call -> ROUND LPAR expression RPAR
-- On FLOOR reduce production built_in_call -> ROUND LPAR expression RPAR
-- On FILTER reduce production built_in_call -> ROUND LPAR expression RPAR
-- On EXISTS reduce production built_in_call -> ROUND LPAR expression RPAR
-- On EQUAL reduce production built_in_call -> ROUND LPAR expression RPAR
-- On EOF reduce production built_in_call -> ROUND LPAR expression RPAR
-- On ENCODE_FOR_URI reduce production built_in_call -> ROUND LPAR expression RPAR
-- On Double_positive reduce production built_in_call -> ROUND LPAR expression RPAR
-- On Double_negative reduce production built_in_call -> ROUND LPAR expression RPAR
-- On Double reduce production built_in_call -> ROUND LPAR expression RPAR
-- On Decimal_positive reduce production built_in_call -> ROUND LPAR expression RPAR
-- On Decimal_negative reduce production built_in_call -> ROUND LPAR expression RPAR
-- On Decimal reduce production built_in_call -> ROUND LPAR expression RPAR
-- On DOT reduce production built_in_call -> ROUND LPAR expression RPAR
-- On DESC reduce production built_in_call -> ROUND LPAR expression RPAR
-- On DAY reduce production built_in_call -> ROUND LPAR expression RPAR
-- On DATATYPE reduce production built_in_call -> ROUND LPAR expression RPAR
-- On COUNT reduce production built_in_call -> ROUND LPAR expression RPAR
-- On CONTAINS reduce production built_in_call -> ROUND LPAR expression RPAR
-- On CONCAT reduce production built_in_call -> ROUND LPAR expression RPAR
-- On COMMA reduce production built_in_call -> ROUND LPAR expression RPAR
-- On COALESCE reduce production built_in_call -> ROUND LPAR expression RPAR
-- On CEIL reduce production built_in_call -> ROUND LPAR expression RPAR
-- On Boolean reduce production built_in_call -> ROUND LPAR expression RPAR
-- On Blank_node_label reduce production built_in_call -> ROUND LPAR expression RPAR
-- On BOUND reduce production built_in_call -> ROUND LPAR expression RPAR
-- On BNODE reduce production built_in_call -> ROUND LPAR expression RPAR
-- On BIND reduce production built_in_call -> ROUND LPAR expression RPAR
-- On BANG reduce production built_in_call -> ROUND LPAR expression RPAR
-- On AVG reduce production built_in_call -> ROUND LPAR expression RPAR
-- On ASC reduce production built_in_call -> ROUND LPAR expression RPAR
-- On AS reduce production built_in_call -> ROUND LPAR expression RPAR
-- On ANON reduce production built_in_call -> ROUND LPAR expression RPAR
-- On AMPAMP reduce production built_in_call -> ROUND LPAR expression RPAR
-- On ABS reduce production built_in_call -> ROUND LPAR expression RPAR

State 592:
built_in_call -> SAMETERM LPAR expression . COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On COMMA shift to state 593
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 593:
built_in_call -> SAMETERM LPAR expression COMMA . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 594
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 594:
built_in_call -> SAMETERM LPAR expression COMMA expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 595
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 595:
built_in_call -> SAMETERM LPAR expression COMMA expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On Var2 reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On Var1 reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On VALUES reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On UUID reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On URI reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On UCASE reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On TZ reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On TIMEZONE reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On String_literal reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On SUM reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On SUBSTR reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On STRUUID reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On STRSTARTS reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On STRLEN reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On STRLANG reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On STRENDS reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On STRDT reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On STRBEFORE reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On STRAFTER reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On STR reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On STAR reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On SLASH reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On SHA512 reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On SHA384 reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On SHA256 reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On SHA1 reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On SERVICE reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On SEMICOLON reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On SECONDS reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On SAMPLE reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On SAMETERM reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On RPAR reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On ROUND reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On REPLACE reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On REGEX reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On RBRACE reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On RAND reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On Pname_ns reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On Pname_ln reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On PLUS reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On PIPEPIPE reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On ORDER reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On OPTIONAL reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On OFFSET reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On NOW reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On NOTEQUAL reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On NOT reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On NIL reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On MONTH reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On MINUTES reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On MINUS reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On MIN reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On MD5 reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On MAX reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On LTE reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On LT reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On LPAR reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On LIMIT reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On LCASE reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On LBRACKET reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On LBRACE reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On LANGMATCHES reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On LANG reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On Iriref_ reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On Integer_positive reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On Integer_negative reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On Integer reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On ISURI reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On ISNUMERIC reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On ISLITERAL reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On ISIRI reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On ISBLANK reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On IRI reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On IN reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On IF reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On HOURS reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On HAVING reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On GTE reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On GT reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On GROUP_CONCAT reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On GRAPH reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On FLOOR reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On FILTER reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On EXISTS reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On EQUAL reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On EOF reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On ENCODE_FOR_URI reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On Double_positive reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On Double_negative reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On Double reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On Decimal_positive reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On Decimal_negative reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On Decimal reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On DOT reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On DESC reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On DAY reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On DATATYPE reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On COUNT reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On CONTAINS reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On CONCAT reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On COMMA reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On COALESCE reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On CEIL reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On Boolean reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On Blank_node_label reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On BOUND reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On BNODE reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On BIND reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On BANG reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On AVG reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On ASC reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On AS reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On ANON reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On AMPAMP reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR
-- On ABS reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR

State 596:
aggregate -> SAMPLE LPAR option(DISTINCT) expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 597
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 597:
aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On Var2 reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On Var1 reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On VALUES reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On UUID reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On URI reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On UCASE reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On TZ reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On TIMEZONE reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On String_literal reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On SUM reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On SUBSTR reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On STRUUID reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On STRSTARTS reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On STRLEN reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On STRLANG reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On STRENDS reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On STRDT reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On STRBEFORE reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On STRAFTER reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On STR reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On STAR reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On SLASH reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On SHA512 reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On SHA384 reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On SHA256 reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On SHA1 reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On SERVICE reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On SEMICOLON reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On SECONDS reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On SAMPLE reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On SAMETERM reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On RPAR reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On ROUND reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On REPLACE reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On REGEX reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On RBRACE reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On RAND reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On Pname_ns reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On Pname_ln reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On PLUS reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On PIPEPIPE reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On ORDER reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On OPTIONAL reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On OFFSET reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On NOW reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On NOTEQUAL reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On NOT reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On NIL reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On MONTH reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On MINUTES reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On MINUS reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On MIN reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On MD5 reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On MAX reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On LTE reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On LT reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On LPAR reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On LIMIT reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On LCASE reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On LBRACKET reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On LBRACE reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On LANGMATCHES reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On LANG reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On Iriref_ reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On Integer_positive reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On Integer_negative reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On Integer reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On ISURI reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On ISNUMERIC reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On ISLITERAL reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On ISIRI reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On ISBLANK reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On IRI reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On IN reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On IF reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On HOURS reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On HAVING reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On GTE reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On GT reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On GROUP_CONCAT reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On GRAPH reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On FLOOR reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On FILTER reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On EXISTS reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On EQUAL reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On EOF reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On ENCODE_FOR_URI reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On Double_positive reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On Double_negative reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On Double reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On Decimal_positive reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On Decimal_negative reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On Decimal reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On DOT reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On DESC reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On DAY reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On DATATYPE reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On COUNT reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On CONTAINS reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On CONCAT reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On COMMA reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On COALESCE reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On CEIL reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On Boolean reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On Blank_node_label reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On BOUND reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On BNODE reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On BIND reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On BANG reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On AVG reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On ASC reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On AS reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On ANON reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On AMPAMP reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR
-- On ABS reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR

State 598:
built_in_call -> SECONDS LPAR expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 599
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 599:
built_in_call -> SECONDS LPAR expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On Var2 reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On Var1 reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On VALUES reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On UUID reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On URI reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On UCASE reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On TZ reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On TIMEZONE reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On String_literal reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On SUM reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On SUBSTR reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On STRUUID reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On STRSTARTS reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On STRLEN reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On STRLANG reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On STRENDS reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On STRDT reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On STRBEFORE reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On STRAFTER reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On STR reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On STAR reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On SLASH reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On SHA512 reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On SHA384 reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On SHA256 reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On SHA1 reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On SERVICE reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On SEMICOLON reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On SECONDS reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On SAMPLE reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On SAMETERM reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On RPAR reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On ROUND reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On REPLACE reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On REGEX reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On RBRACE reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On RAND reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On Pname_ns reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On Pname_ln reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On PLUS reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On PIPEPIPE reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On ORDER reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On OPTIONAL reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On OFFSET reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On NOW reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On NOTEQUAL reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On NOT reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On NIL reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On MONTH reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On MINUTES reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On MINUS reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On MIN reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On MD5 reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On MAX reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On LTE reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On LT reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On LPAR reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On LIMIT reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On LCASE reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On LBRACKET reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On LBRACE reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On LANGMATCHES reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On LANG reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On Iriref_ reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On Integer_positive reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On Integer_negative reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On Integer reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On ISURI reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On ISNUMERIC reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On ISLITERAL reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On ISIRI reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On ISBLANK reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On IRI reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On IN reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On IF reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On HOURS reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On HAVING reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On GTE reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On GT reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On GROUP_CONCAT reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On GRAPH reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On FLOOR reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On FILTER reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On EXISTS reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On EQUAL reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On EOF reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On ENCODE_FOR_URI reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On Double_positive reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On Double_negative reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On Double reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On Decimal_positive reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On Decimal_negative reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On Decimal reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On DOT reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On DESC reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On DAY reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On DATATYPE reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On COUNT reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On CONTAINS reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On CONCAT reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On COMMA reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On COALESCE reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On CEIL reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On Boolean reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On Blank_node_label reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On BOUND reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On BNODE reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On BIND reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On BANG reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On AVG reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On ASC reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On AS reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On ANON reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On AMPAMP reduce production built_in_call -> SECONDS LPAR expression RPAR
-- On ABS reduce production built_in_call -> SECONDS LPAR expression RPAR

State 600:
built_in_call -> SHA1 LPAR expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 601
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 601:
built_in_call -> SHA1 LPAR expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On Var2 reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On Var1 reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On VALUES reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On UUID reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On URI reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On UCASE reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On TZ reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On TIMEZONE reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On String_literal reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On SUM reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On SUBSTR reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On STRUUID reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On STRSTARTS reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On STRLEN reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On STRLANG reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On STRENDS reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On STRDT reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On STRBEFORE reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On STRAFTER reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On STR reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On STAR reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On SLASH reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On SHA512 reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On SHA384 reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On SHA256 reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On SHA1 reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On SERVICE reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On SEMICOLON reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On SECONDS reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On SAMPLE reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On SAMETERM reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On RPAR reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On ROUND reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On REPLACE reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On REGEX reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On RBRACE reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On RAND reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On Pname_ns reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On Pname_ln reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On PLUS reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On PIPEPIPE reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On ORDER reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On OPTIONAL reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On OFFSET reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On NOW reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On NOTEQUAL reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On NOT reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On NIL reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On MONTH reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On MINUTES reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On MINUS reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On MIN reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On MD5 reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On MAX reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On LTE reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On LT reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On LPAR reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On LIMIT reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On LCASE reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On LBRACKET reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On LBRACE reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On LANGMATCHES reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On LANG reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On Iriref_ reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On Integer_positive reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On Integer_negative reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On Integer reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On ISURI reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On ISNUMERIC reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On ISLITERAL reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On ISIRI reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On ISBLANK reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On IRI reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On IN reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On IF reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On HOURS reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On HAVING reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On GTE reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On GT reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On GROUP_CONCAT reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On GRAPH reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On FLOOR reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On FILTER reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On EXISTS reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On EQUAL reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On EOF reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On ENCODE_FOR_URI reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On Double_positive reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On Double_negative reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On Double reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On Decimal_positive reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On Decimal_negative reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On Decimal reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On DOT reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On DESC reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On DAY reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On DATATYPE reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On COUNT reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On CONTAINS reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On CONCAT reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On COMMA reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On COALESCE reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On CEIL reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On Boolean reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On Blank_node_label reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On BOUND reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On BNODE reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On BIND reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On BANG reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On AVG reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On ASC reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On AS reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On ANON reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On AMPAMP reduce production built_in_call -> SHA1 LPAR expression RPAR
-- On ABS reduce production built_in_call -> SHA1 LPAR expression RPAR

State 602:
built_in_call -> SHA256 LPAR expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 603
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 603:
built_in_call -> SHA256 LPAR expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On Var2 reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On Var1 reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On VALUES reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On UUID reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On URI reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On UCASE reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On TZ reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On TIMEZONE reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On String_literal reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On SUM reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On SUBSTR reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On STRUUID reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On STRSTARTS reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On STRLEN reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On STRLANG reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On STRENDS reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On STRDT reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On STRBEFORE reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On STRAFTER reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On STR reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On STAR reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On SLASH reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On SHA512 reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On SHA384 reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On SHA256 reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On SHA1 reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On SERVICE reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On SEMICOLON reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On SECONDS reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On SAMPLE reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On SAMETERM reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On RPAR reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On ROUND reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On REPLACE reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On REGEX reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On RBRACE reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On RAND reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On Pname_ns reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On Pname_ln reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On PLUS reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On PIPEPIPE reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On ORDER reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On OPTIONAL reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On OFFSET reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On NOW reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On NOTEQUAL reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On NOT reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On NIL reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On MONTH reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On MINUTES reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On MINUS reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On MIN reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On MD5 reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On MAX reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On LTE reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On LT reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On LPAR reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On LIMIT reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On LCASE reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On LBRACKET reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On LBRACE reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On LANGMATCHES reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On LANG reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On Iriref_ reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On Integer_positive reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On Integer_negative reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On Integer reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On ISURI reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On ISNUMERIC reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On ISLITERAL reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On ISIRI reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On ISBLANK reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On IRI reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On IN reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On IF reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On HOURS reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On HAVING reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On GTE reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On GT reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On GROUP_CONCAT reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On GRAPH reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On FLOOR reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On FILTER reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On EXISTS reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On EQUAL reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On EOF reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On ENCODE_FOR_URI reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On Double_positive reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On Double_negative reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On Double reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On Decimal_positive reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On Decimal_negative reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On Decimal reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On DOT reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On DESC reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On DAY reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On DATATYPE reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On COUNT reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On CONTAINS reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On CONCAT reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On COMMA reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On COALESCE reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On CEIL reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On Boolean reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On Blank_node_label reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On BOUND reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On BNODE reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On BIND reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On BANG reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On AVG reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On ASC reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On AS reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On ANON reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On AMPAMP reduce production built_in_call -> SHA256 LPAR expression RPAR
-- On ABS reduce production built_in_call -> SHA256 LPAR expression RPAR

State 604:
built_in_call -> SHA384 LPAR expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 605
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 605:
built_in_call -> SHA384 LPAR expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On Var2 reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On Var1 reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On VALUES reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On UUID reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On URI reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On UCASE reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On TZ reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On TIMEZONE reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On String_literal reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On SUM reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On SUBSTR reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On STRUUID reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On STRSTARTS reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On STRLEN reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On STRLANG reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On STRENDS reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On STRDT reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On STRBEFORE reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On STRAFTER reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On STR reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On STAR reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On SLASH reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On SHA512 reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On SHA384 reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On SHA256 reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On SHA1 reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On SERVICE reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On SEMICOLON reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On SECONDS reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On SAMPLE reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On SAMETERM reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On RPAR reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On ROUND reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On REPLACE reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On REGEX reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On RBRACE reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On RAND reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On Pname_ns reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On Pname_ln reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On PLUS reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On PIPEPIPE reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On ORDER reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On OPTIONAL reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On OFFSET reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On NOW reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On NOTEQUAL reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On NOT reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On NIL reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On MONTH reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On MINUTES reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On MINUS reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On MIN reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On MD5 reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On MAX reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On LTE reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On LT reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On LPAR reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On LIMIT reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On LCASE reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On LBRACKET reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On LBRACE reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On LANGMATCHES reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On LANG reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On Iriref_ reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On Integer_positive reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On Integer_negative reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On Integer reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On ISURI reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On ISNUMERIC reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On ISLITERAL reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On ISIRI reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On ISBLANK reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On IRI reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On IN reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On IF reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On HOURS reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On HAVING reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On GTE reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On GT reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On GROUP_CONCAT reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On GRAPH reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On FLOOR reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On FILTER reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On EXISTS reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On EQUAL reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On EOF reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On ENCODE_FOR_URI reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On Double_positive reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On Double_negative reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On Double reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On Decimal_positive reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On Decimal_negative reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On Decimal reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On DOT reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On DESC reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On DAY reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On DATATYPE reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On COUNT reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On CONTAINS reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On CONCAT reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On COMMA reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On COALESCE reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On CEIL reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On Boolean reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On Blank_node_label reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On BOUND reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On BNODE reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On BIND reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On BANG reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On AVG reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On ASC reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On AS reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On ANON reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On AMPAMP reduce production built_in_call -> SHA384 LPAR expression RPAR
-- On ABS reduce production built_in_call -> SHA384 LPAR expression RPAR

State 606:
built_in_call -> SHA512 LPAR expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 607
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 607:
built_in_call -> SHA512 LPAR expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On Var2 reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On Var1 reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On VALUES reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On UUID reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On URI reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On UCASE reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On TZ reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On TIMEZONE reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On String_literal reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On SUM reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On SUBSTR reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On STRUUID reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On STRSTARTS reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On STRLEN reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On STRLANG reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On STRENDS reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On STRDT reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On STRBEFORE reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On STRAFTER reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On STR reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On STAR reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On SLASH reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On SHA512 reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On SHA384 reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On SHA256 reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On SHA1 reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On SERVICE reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On SEMICOLON reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On SECONDS reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On SAMPLE reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On SAMETERM reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On RPAR reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On ROUND reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On REPLACE reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On REGEX reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On RBRACE reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On RAND reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On Pname_ns reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On Pname_ln reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On PLUS reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On PIPEPIPE reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On ORDER reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On OPTIONAL reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On OFFSET reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On NOW reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On NOTEQUAL reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On NOT reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On NIL reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On MONTH reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On MINUTES reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On MINUS reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On MIN reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On MD5 reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On MAX reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On LTE reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On LT reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On LPAR reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On LIMIT reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On LCASE reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On LBRACKET reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On LBRACE reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On LANGMATCHES reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On LANG reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On Iriref_ reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On Integer_positive reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On Integer_negative reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On Integer reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On ISURI reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On ISNUMERIC reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On ISLITERAL reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On ISIRI reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On ISBLANK reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On IRI reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On IN reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On IF reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On HOURS reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On HAVING reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On GTE reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On GT reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On GROUP_CONCAT reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On GRAPH reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On FLOOR reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On FILTER reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On EXISTS reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On EQUAL reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On EOF reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On ENCODE_FOR_URI reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On Double_positive reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On Double_negative reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On Double reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On Decimal_positive reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On Decimal_negative reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On Decimal reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On DOT reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On DESC reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On DAY reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On DATATYPE reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On COUNT reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On CONTAINS reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On CONCAT reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On COMMA reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On COALESCE reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On CEIL reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On Boolean reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On Blank_node_label reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On BOUND reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On BNODE reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On BIND reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On BANG reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On AVG reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On ASC reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On AS reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On ANON reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On AMPAMP reduce production built_in_call -> SHA512 LPAR expression RPAR
-- On ABS reduce production built_in_call -> SHA512 LPAR expression RPAR

State 608:
built_in_call -> STR LPAR expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 609
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 609:
built_in_call -> STR LPAR expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production built_in_call -> STR LPAR expression RPAR
-- On Var2 reduce production built_in_call -> STR LPAR expression RPAR
-- On Var1 reduce production built_in_call -> STR LPAR expression RPAR
-- On VALUES reduce production built_in_call -> STR LPAR expression RPAR
-- On UUID reduce production built_in_call -> STR LPAR expression RPAR
-- On URI reduce production built_in_call -> STR LPAR expression RPAR
-- On UCASE reduce production built_in_call -> STR LPAR expression RPAR
-- On TZ reduce production built_in_call -> STR LPAR expression RPAR
-- On TIMEZONE reduce production built_in_call -> STR LPAR expression RPAR
-- On String_literal reduce production built_in_call -> STR LPAR expression RPAR
-- On SUM reduce production built_in_call -> STR LPAR expression RPAR
-- On SUBSTR reduce production built_in_call -> STR LPAR expression RPAR
-- On STRUUID reduce production built_in_call -> STR LPAR expression RPAR
-- On STRSTARTS reduce production built_in_call -> STR LPAR expression RPAR
-- On STRLEN reduce production built_in_call -> STR LPAR expression RPAR
-- On STRLANG reduce production built_in_call -> STR LPAR expression RPAR
-- On STRENDS reduce production built_in_call -> STR LPAR expression RPAR
-- On STRDT reduce production built_in_call -> STR LPAR expression RPAR
-- On STRBEFORE reduce production built_in_call -> STR LPAR expression RPAR
-- On STRAFTER reduce production built_in_call -> STR LPAR expression RPAR
-- On STR reduce production built_in_call -> STR LPAR expression RPAR
-- On STAR reduce production built_in_call -> STR LPAR expression RPAR
-- On SLASH reduce production built_in_call -> STR LPAR expression RPAR
-- On SHA512 reduce production built_in_call -> STR LPAR expression RPAR
-- On SHA384 reduce production built_in_call -> STR LPAR expression RPAR
-- On SHA256 reduce production built_in_call -> STR LPAR expression RPAR
-- On SHA1 reduce production built_in_call -> STR LPAR expression RPAR
-- On SERVICE reduce production built_in_call -> STR LPAR expression RPAR
-- On SEMICOLON reduce production built_in_call -> STR LPAR expression RPAR
-- On SECONDS reduce production built_in_call -> STR LPAR expression RPAR
-- On SAMPLE reduce production built_in_call -> STR LPAR expression RPAR
-- On SAMETERM reduce production built_in_call -> STR LPAR expression RPAR
-- On RPAR reduce production built_in_call -> STR LPAR expression RPAR
-- On ROUND reduce production built_in_call -> STR LPAR expression RPAR
-- On REPLACE reduce production built_in_call -> STR LPAR expression RPAR
-- On REGEX reduce production built_in_call -> STR LPAR expression RPAR
-- On RBRACE reduce production built_in_call -> STR LPAR expression RPAR
-- On RAND reduce production built_in_call -> STR LPAR expression RPAR
-- On Pname_ns reduce production built_in_call -> STR LPAR expression RPAR
-- On Pname_ln reduce production built_in_call -> STR LPAR expression RPAR
-- On PLUS reduce production built_in_call -> STR LPAR expression RPAR
-- On PIPEPIPE reduce production built_in_call -> STR LPAR expression RPAR
-- On ORDER reduce production built_in_call -> STR LPAR expression RPAR
-- On OPTIONAL reduce production built_in_call -> STR LPAR expression RPAR
-- On OFFSET reduce production built_in_call -> STR LPAR expression RPAR
-- On NOW reduce production built_in_call -> STR LPAR expression RPAR
-- On NOTEQUAL reduce production built_in_call -> STR LPAR expression RPAR
-- On NOT reduce production built_in_call -> STR LPAR expression RPAR
-- On NIL reduce production built_in_call -> STR LPAR expression RPAR
-- On MONTH reduce production built_in_call -> STR LPAR expression RPAR
-- On MINUTES reduce production built_in_call -> STR LPAR expression RPAR
-- On MINUS reduce production built_in_call -> STR LPAR expression RPAR
-- On MIN reduce production built_in_call -> STR LPAR expression RPAR
-- On MD5 reduce production built_in_call -> STR LPAR expression RPAR
-- On MAX reduce production built_in_call -> STR LPAR expression RPAR
-- On LTE reduce production built_in_call -> STR LPAR expression RPAR
-- On LT reduce production built_in_call -> STR LPAR expression RPAR
-- On LPAR reduce production built_in_call -> STR LPAR expression RPAR
-- On LIMIT reduce production built_in_call -> STR LPAR expression RPAR
-- On LCASE reduce production built_in_call -> STR LPAR expression RPAR
-- On LBRACKET reduce production built_in_call -> STR LPAR expression RPAR
-- On LBRACE reduce production built_in_call -> STR LPAR expression RPAR
-- On LANGMATCHES reduce production built_in_call -> STR LPAR expression RPAR
-- On LANG reduce production built_in_call -> STR LPAR expression RPAR
-- On Iriref_ reduce production built_in_call -> STR LPAR expression RPAR
-- On Integer_positive reduce production built_in_call -> STR LPAR expression RPAR
-- On Integer_negative reduce production built_in_call -> STR LPAR expression RPAR
-- On Integer reduce production built_in_call -> STR LPAR expression RPAR
-- On ISURI reduce production built_in_call -> STR LPAR expression RPAR
-- On ISNUMERIC reduce production built_in_call -> STR LPAR expression RPAR
-- On ISLITERAL reduce production built_in_call -> STR LPAR expression RPAR
-- On ISIRI reduce production built_in_call -> STR LPAR expression RPAR
-- On ISBLANK reduce production built_in_call -> STR LPAR expression RPAR
-- On IRI reduce production built_in_call -> STR LPAR expression RPAR
-- On IN reduce production built_in_call -> STR LPAR expression RPAR
-- On IF reduce production built_in_call -> STR LPAR expression RPAR
-- On HOURS reduce production built_in_call -> STR LPAR expression RPAR
-- On HAVING reduce production built_in_call -> STR LPAR expression RPAR
-- On GTE reduce production built_in_call -> STR LPAR expression RPAR
-- On GT reduce production built_in_call -> STR LPAR expression RPAR
-- On GROUP_CONCAT reduce production built_in_call -> STR LPAR expression RPAR
-- On GRAPH reduce production built_in_call -> STR LPAR expression RPAR
-- On FLOOR reduce production built_in_call -> STR LPAR expression RPAR
-- On FILTER reduce production built_in_call -> STR LPAR expression RPAR
-- On EXISTS reduce production built_in_call -> STR LPAR expression RPAR
-- On EQUAL reduce production built_in_call -> STR LPAR expression RPAR
-- On EOF reduce production built_in_call -> STR LPAR expression RPAR
-- On ENCODE_FOR_URI reduce production built_in_call -> STR LPAR expression RPAR
-- On Double_positive reduce production built_in_call -> STR LPAR expression RPAR
-- On Double_negative reduce production built_in_call -> STR LPAR expression RPAR
-- On Double reduce production built_in_call -> STR LPAR expression RPAR
-- On Decimal_positive reduce production built_in_call -> STR LPAR expression RPAR
-- On Decimal_negative reduce production built_in_call -> STR LPAR expression RPAR
-- On Decimal reduce production built_in_call -> STR LPAR expression RPAR
-- On DOT reduce production built_in_call -> STR LPAR expression RPAR
-- On DESC reduce production built_in_call -> STR LPAR expression RPAR
-- On DAY reduce production built_in_call -> STR LPAR expression RPAR
-- On DATATYPE reduce production built_in_call -> STR LPAR expression RPAR
-- On COUNT reduce production built_in_call -> STR LPAR expression RPAR
-- On CONTAINS reduce production built_in_call -> STR LPAR expression RPAR
-- On CONCAT reduce production built_in_call -> STR LPAR expression RPAR
-- On COMMA reduce production built_in_call -> STR LPAR expression RPAR
-- On COALESCE reduce production built_in_call -> STR LPAR expression RPAR
-- On CEIL reduce production built_in_call -> STR LPAR expression RPAR
-- On Boolean reduce production built_in_call -> STR LPAR expression RPAR
-- On Blank_node_label reduce production built_in_call -> STR LPAR expression RPAR
-- On BOUND reduce production built_in_call -> STR LPAR expression RPAR
-- On BNODE reduce production built_in_call -> STR LPAR expression RPAR
-- On BIND reduce production built_in_call -> STR LPAR expression RPAR
-- On BANG reduce production built_in_call -> STR LPAR expression RPAR
-- On AVG reduce production built_in_call -> STR LPAR expression RPAR
-- On ASC reduce production built_in_call -> STR LPAR expression RPAR
-- On AS reduce production built_in_call -> STR LPAR expression RPAR
-- On ANON reduce production built_in_call -> STR LPAR expression RPAR
-- On AMPAMP reduce production built_in_call -> STR LPAR expression RPAR
-- On ABS reduce production built_in_call -> STR LPAR expression RPAR

State 610:
built_in_call -> STRAFTER LPAR expression . COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On COMMA shift to state 611
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 611:
built_in_call -> STRAFTER LPAR expression COMMA . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 612
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 612:
built_in_call -> STRAFTER LPAR expression COMMA expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 613
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 613:
built_in_call -> STRAFTER LPAR expression COMMA expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On Var2 reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On Var1 reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On VALUES reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On UUID reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On URI reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On UCASE reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On TZ reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On TIMEZONE reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On String_literal reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On SUM reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On SUBSTR reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On STRUUID reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On STRSTARTS reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On STRLEN reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On STRLANG reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On STRENDS reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On STRDT reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On STRBEFORE reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On STRAFTER reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On STR reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On STAR reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On SLASH reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On SHA512 reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On SHA384 reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On SHA256 reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On SHA1 reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On SERVICE reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On SEMICOLON reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On SECONDS reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On SAMPLE reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On SAMETERM reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On RPAR reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On ROUND reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On REPLACE reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On REGEX reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On RBRACE reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On RAND reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On Pname_ns reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On Pname_ln reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On PLUS reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On PIPEPIPE reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On ORDER reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On OPTIONAL reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On OFFSET reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On NOW reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On NOTEQUAL reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On NOT reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On NIL reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On MONTH reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On MINUTES reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On MINUS reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On MIN reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On MD5 reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On MAX reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On LTE reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On LT reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On LPAR reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On LIMIT reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On LCASE reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On LBRACKET reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On LBRACE reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On LANGMATCHES reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On LANG reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On Iriref_ reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On Integer_positive reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On Integer_negative reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On Integer reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On ISURI reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On ISNUMERIC reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On ISLITERAL reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On ISIRI reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On ISBLANK reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On IRI reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On IN reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On IF reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On HOURS reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On HAVING reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On GTE reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On GT reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On GROUP_CONCAT reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On GRAPH reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On FLOOR reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On FILTER reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On EXISTS reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On EQUAL reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On EOF reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On ENCODE_FOR_URI reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On Double_positive reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On Double_negative reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On Double reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On Decimal_positive reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On Decimal_negative reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On Decimal reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On DOT reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On DESC reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On DAY reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On DATATYPE reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On COUNT reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On CONTAINS reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On CONCAT reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On COMMA reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On COALESCE reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On CEIL reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On Boolean reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On Blank_node_label reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On BOUND reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On BNODE reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On BIND reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On BANG reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On AVG reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On ASC reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On AS reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On ANON reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On AMPAMP reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR
-- On ABS reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR

State 614:
built_in_call -> STRBEFORE LPAR expression . COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On COMMA shift to state 615
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 615:
built_in_call -> STRBEFORE LPAR expression COMMA . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 616
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 616:
built_in_call -> STRBEFORE LPAR expression COMMA expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 617
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 617:
built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On Var2 reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On Var1 reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On VALUES reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On UUID reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On URI reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On UCASE reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On TZ reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On TIMEZONE reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On String_literal reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On SUM reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On SUBSTR reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On STRUUID reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On STRSTARTS reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On STRLEN reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On STRLANG reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On STRENDS reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On STRDT reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On STRBEFORE reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On STRAFTER reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On STR reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On STAR reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On SLASH reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On SHA512 reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On SHA384 reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On SHA256 reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On SHA1 reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On SERVICE reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On SEMICOLON reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On SECONDS reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On SAMPLE reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On SAMETERM reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On RPAR reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On ROUND reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On REPLACE reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On REGEX reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On RBRACE reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On RAND reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On Pname_ns reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On Pname_ln reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On PLUS reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On PIPEPIPE reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On ORDER reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On OPTIONAL reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On OFFSET reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On NOW reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On NOTEQUAL reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On NOT reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On NIL reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On MONTH reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On MINUTES reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On MINUS reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On MIN reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On MD5 reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On MAX reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On LTE reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On LT reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On LPAR reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On LIMIT reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On LCASE reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On LBRACKET reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On LBRACE reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On LANGMATCHES reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On LANG reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On Iriref_ reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On Integer_positive reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On Integer_negative reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On Integer reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On ISURI reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On ISNUMERIC reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On ISLITERAL reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On ISIRI reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On ISBLANK reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On IRI reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On IN reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On IF reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On HOURS reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On HAVING reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On GTE reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On GT reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On GROUP_CONCAT reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On GRAPH reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On FLOOR reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On FILTER reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On EXISTS reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On EQUAL reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On EOF reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On ENCODE_FOR_URI reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On Double_positive reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On Double_negative reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On Double reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On Decimal_positive reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On Decimal_negative reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On Decimal reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On DOT reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On DESC reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On DAY reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On DATATYPE reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On COUNT reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On CONTAINS reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On CONCAT reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On COMMA reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On COALESCE reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On CEIL reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On Boolean reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On Blank_node_label reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On BOUND reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On BNODE reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On BIND reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On BANG reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On AVG reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On ASC reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On AS reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On ANON reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On AMPAMP reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR
-- On ABS reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR

State 618:
built_in_call -> STRDT LPAR expression . COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On COMMA shift to state 619
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 619:
built_in_call -> STRDT LPAR expression COMMA . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 620
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 620:
built_in_call -> STRDT LPAR expression COMMA expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 621
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 621:
built_in_call -> STRDT LPAR expression COMMA expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On Var2 reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On Var1 reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On VALUES reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On UUID reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On URI reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On UCASE reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On TZ reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On TIMEZONE reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On String_literal reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On SUM reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On SUBSTR reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On STRUUID reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On STRSTARTS reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On STRLEN reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On STRLANG reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On STRENDS reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On STRDT reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On STRBEFORE reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On STRAFTER reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On STR reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On STAR reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On SLASH reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On SHA512 reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On SHA384 reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On SHA256 reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On SHA1 reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On SERVICE reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On SEMICOLON reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On SECONDS reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On SAMPLE reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On SAMETERM reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On RPAR reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On ROUND reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On REPLACE reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On REGEX reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On RBRACE reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On RAND reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On Pname_ns reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On Pname_ln reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On PLUS reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On PIPEPIPE reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On ORDER reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On OPTIONAL reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On OFFSET reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On NOW reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On NOTEQUAL reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On NOT reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On NIL reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On MONTH reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On MINUTES reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On MINUS reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On MIN reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On MD5 reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On MAX reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On LTE reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On LT reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On LPAR reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On LIMIT reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On LCASE reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On LBRACKET reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On LBRACE reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On LANGMATCHES reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On LANG reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On Iriref_ reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On Integer_positive reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On Integer_negative reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On Integer reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On ISURI reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On ISNUMERIC reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On ISLITERAL reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On ISIRI reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On ISBLANK reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On IRI reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On IN reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On IF reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On HOURS reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On HAVING reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On GTE reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On GT reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On GROUP_CONCAT reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On GRAPH reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On FLOOR reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On FILTER reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On EXISTS reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On EQUAL reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On EOF reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On ENCODE_FOR_URI reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On Double_positive reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On Double_negative reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On Double reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On Decimal_positive reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On Decimal_negative reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On Decimal reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On DOT reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On DESC reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On DAY reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On DATATYPE reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On COUNT reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On CONTAINS reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On CONCAT reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On COMMA reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On COALESCE reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On CEIL reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On Boolean reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On Blank_node_label reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On BOUND reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On BNODE reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On BIND reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On BANG reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On AVG reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On ASC reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On AS reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On ANON reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On AMPAMP reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR
-- On ABS reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR

State 622:
built_in_call -> STRENDS LPAR expression . COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On COMMA shift to state 623
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 623:
built_in_call -> STRENDS LPAR expression COMMA . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 624
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 624:
built_in_call -> STRENDS LPAR expression COMMA expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 625
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 625:
built_in_call -> STRENDS LPAR expression COMMA expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On Var2 reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On Var1 reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On VALUES reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On UUID reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On URI reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On UCASE reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On TZ reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On TIMEZONE reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On String_literal reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On SUM reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On SUBSTR reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On STRUUID reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On STRSTARTS reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On STRLEN reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On STRLANG reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On STRENDS reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On STRDT reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On STRBEFORE reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On STRAFTER reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On STR reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On STAR reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On SLASH reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On SHA512 reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On SHA384 reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On SHA256 reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On SHA1 reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On SERVICE reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On SEMICOLON reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On SECONDS reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On SAMPLE reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On SAMETERM reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On RPAR reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On ROUND reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On REPLACE reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On REGEX reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On RBRACE reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On RAND reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On Pname_ns reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On Pname_ln reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On PLUS reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On PIPEPIPE reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On ORDER reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On OPTIONAL reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On OFFSET reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On NOW reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On NOTEQUAL reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On NOT reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On NIL reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On MONTH reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On MINUTES reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On MINUS reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On MIN reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On MD5 reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On MAX reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On LTE reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On LT reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On LPAR reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On LIMIT reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On LCASE reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On LBRACKET reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On LBRACE reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On LANGMATCHES reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On LANG reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On Iriref_ reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On Integer_positive reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On Integer_negative reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On Integer reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On ISURI reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On ISNUMERIC reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On ISLITERAL reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On ISIRI reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On ISBLANK reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On IRI reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On IN reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On IF reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On HOURS reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On HAVING reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On GTE reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On GT reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On GROUP_CONCAT reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On GRAPH reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On FLOOR reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On FILTER reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On EXISTS reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On EQUAL reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On EOF reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On ENCODE_FOR_URI reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On Double_positive reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On Double_negative reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On Double reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On Decimal_positive reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On Decimal_negative reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On Decimal reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On DOT reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On DESC reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On DAY reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On DATATYPE reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On COUNT reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On CONTAINS reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On CONCAT reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On COMMA reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On COALESCE reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On CEIL reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On Boolean reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On Blank_node_label reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On BOUND reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On BNODE reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On BIND reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On BANG reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On AVG reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On ASC reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On AS reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On ANON reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On AMPAMP reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR
-- On ABS reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR

State 626:
built_in_call -> STRLANG LPAR expression . COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On COMMA shift to state 627
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 627:
built_in_call -> STRLANG LPAR expression COMMA . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 628
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 628:
built_in_call -> STRLANG LPAR expression COMMA expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 629
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 629:
built_in_call -> STRLANG LPAR expression COMMA expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On Var2 reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On Var1 reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On VALUES reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On UUID reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On URI reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On UCASE reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On TZ reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On TIMEZONE reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On String_literal reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On SUM reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On SUBSTR reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On STRUUID reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On STRSTARTS reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On STRLEN reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On STRLANG reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On STRENDS reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On STRDT reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On STRBEFORE reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On STRAFTER reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On STR reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On STAR reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On SLASH reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On SHA512 reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On SHA384 reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On SHA256 reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On SHA1 reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On SERVICE reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On SEMICOLON reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On SECONDS reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On SAMPLE reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On SAMETERM reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On RPAR reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On ROUND reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On REPLACE reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On REGEX reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On RBRACE reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On RAND reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On Pname_ns reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On Pname_ln reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On PLUS reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On PIPEPIPE reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On ORDER reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On OPTIONAL reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On OFFSET reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On NOW reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On NOTEQUAL reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On NOT reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On NIL reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On MONTH reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On MINUTES reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On MINUS reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On MIN reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On MD5 reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On MAX reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On LTE reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On LT reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On LPAR reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On LIMIT reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On LCASE reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On LBRACKET reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On LBRACE reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On LANGMATCHES reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On LANG reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On Iriref_ reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On Integer_positive reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On Integer_negative reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On Integer reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On ISURI reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On ISNUMERIC reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On ISLITERAL reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On ISIRI reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On ISBLANK reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On IRI reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On IN reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On IF reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On HOURS reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On HAVING reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On GTE reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On GT reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On GROUP_CONCAT reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On GRAPH reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On FLOOR reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On FILTER reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On EXISTS reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On EQUAL reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On EOF reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On ENCODE_FOR_URI reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On Double_positive reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On Double_negative reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On Double reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On Decimal_positive reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On Decimal_negative reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On Decimal reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On DOT reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On DESC reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On DAY reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On DATATYPE reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On COUNT reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On CONTAINS reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On CONCAT reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On COMMA reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On COALESCE reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On CEIL reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On Boolean reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On Blank_node_label reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On BOUND reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On BNODE reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On BIND reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On BANG reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On AVG reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On ASC reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On AS reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On ANON reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On AMPAMP reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR
-- On ABS reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR

State 630:
built_in_call -> STRLEN LPAR expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 631
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 631:
built_in_call -> STRLEN LPAR expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On Var2 reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On Var1 reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On VALUES reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On UUID reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On URI reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On UCASE reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On TZ reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On TIMEZONE reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On String_literal reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On SUM reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On SUBSTR reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On STRUUID reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On STRSTARTS reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On STRLEN reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On STRLANG reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On STRENDS reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On STRDT reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On STRBEFORE reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On STRAFTER reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On STR reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On STAR reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On SLASH reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On SHA512 reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On SHA384 reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On SHA256 reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On SHA1 reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On SERVICE reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On SEMICOLON reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On SECONDS reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On SAMPLE reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On SAMETERM reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On RPAR reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On ROUND reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On REPLACE reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On REGEX reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On RBRACE reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On RAND reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On Pname_ns reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On Pname_ln reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On PLUS reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On PIPEPIPE reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On ORDER reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On OPTIONAL reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On OFFSET reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On NOW reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On NOTEQUAL reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On NOT reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On NIL reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On MONTH reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On MINUTES reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On MINUS reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On MIN reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On MD5 reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On MAX reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On LTE reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On LT reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On LPAR reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On LIMIT reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On LCASE reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On LBRACKET reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On LBRACE reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On LANGMATCHES reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On LANG reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On Iriref_ reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On Integer_positive reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On Integer_negative reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On Integer reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On ISURI reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On ISNUMERIC reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On ISLITERAL reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On ISIRI reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On ISBLANK reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On IRI reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On IN reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On IF reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On HOURS reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On HAVING reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On GTE reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On GT reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On GROUP_CONCAT reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On GRAPH reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On FLOOR reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On FILTER reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On EXISTS reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On EQUAL reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On EOF reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On ENCODE_FOR_URI reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On Double_positive reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On Double_negative reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On Double reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On Decimal_positive reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On Decimal_negative reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On Decimal reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On DOT reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On DESC reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On DAY reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On DATATYPE reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On COUNT reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On CONTAINS reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On CONCAT reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On COMMA reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On COALESCE reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On CEIL reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On Boolean reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On Blank_node_label reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On BOUND reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On BNODE reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On BIND reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On BANG reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On AVG reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On ASC reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On AS reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On ANON reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On AMPAMP reduce production built_in_call -> STRLEN LPAR expression RPAR
-- On ABS reduce production built_in_call -> STRLEN LPAR expression RPAR

State 632:
built_in_call -> STRSTARTS LPAR expression . COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On COMMA shift to state 633
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 633:
built_in_call -> STRSTARTS LPAR expression COMMA . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 634
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 634:
built_in_call -> STRSTARTS LPAR expression COMMA expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 635
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 635:
built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On Var2 reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On Var1 reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On VALUES reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On UUID reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On URI reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On UCASE reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On TZ reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On TIMEZONE reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On String_literal reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On SUM reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On SUBSTR reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On STRUUID reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On STRSTARTS reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On STRLEN reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On STRLANG reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On STRENDS reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On STRDT reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On STRBEFORE reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On STRAFTER reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On STR reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On STAR reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On SLASH reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On SHA512 reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On SHA384 reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On SHA256 reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On SHA1 reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On SERVICE reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On SEMICOLON reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On SECONDS reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On SAMPLE reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On SAMETERM reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On RPAR reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On ROUND reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On REPLACE reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On REGEX reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On RBRACE reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On RAND reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On Pname_ns reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On Pname_ln reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On PLUS reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On PIPEPIPE reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On ORDER reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On OPTIONAL reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On OFFSET reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On NOW reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On NOTEQUAL reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On NOT reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On NIL reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On MONTH reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On MINUTES reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On MINUS reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On MIN reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On MD5 reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On MAX reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On LTE reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On LT reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On LPAR reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On LIMIT reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On LCASE reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On LBRACKET reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On LBRACE reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On LANGMATCHES reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On LANG reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On Iriref_ reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On Integer_positive reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On Integer_negative reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On Integer reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On ISURI reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On ISNUMERIC reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On ISLITERAL reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On ISIRI reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On ISBLANK reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On IRI reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On IN reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On IF reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On HOURS reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On HAVING reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On GTE reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On GT reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On GROUP_CONCAT reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On GRAPH reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On FLOOR reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On FILTER reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On EXISTS reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On EQUAL reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On EOF reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On ENCODE_FOR_URI reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On Double_positive reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On Double_negative reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On Double reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On Decimal_positive reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On Decimal_negative reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On Decimal reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On DOT reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On DESC reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On DAY reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On DATATYPE reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On COUNT reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On CONTAINS reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On CONCAT reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On COMMA reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On COALESCE reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On CEIL reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On Boolean reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On Blank_node_label reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On BOUND reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On BNODE reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On BIND reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On BANG reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On AVG reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On ASC reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On AS reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On ANON reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On AMPAMP reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR
-- On ABS reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR

State 636:
numexp -> expression . STAR expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
substring_expression -> SUBSTR LPAR expression . COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
substring_expression -> SUBSTR LPAR expression . COMMA expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On COMMA shift to state 637
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 637:
substring_expression -> SUBSTR LPAR expression COMMA . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
substring_expression -> SUBSTR LPAR expression COMMA . expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 638
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 638:
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
substring_expression -> SUBSTR LPAR expression COMMA expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
substring_expression -> SUBSTR LPAR expression COMMA expression . COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 639
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On COMMA shift to state 640
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 639:
substring_expression -> SUBSTR LPAR expression COMMA expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On Var2 reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On Var1 reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On VALUES reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On UUID reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On URI reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On UCASE reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On TZ reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On TIMEZONE reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On String_literal reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On SUM reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On SUBSTR reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On STRUUID reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On STRSTARTS reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On STRLEN reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On STRLANG reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On STRENDS reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On STRDT reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On STRBEFORE reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On STRAFTER reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On STR reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On STAR reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On SLASH reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On SHA512 reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On SHA384 reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On SHA256 reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On SHA1 reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On SERVICE reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On SEMICOLON reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On SECONDS reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On SAMPLE reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On SAMETERM reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On RPAR reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On ROUND reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On REPLACE reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On REGEX reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On RBRACE reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On RAND reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On Pname_ns reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On Pname_ln reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On PLUS reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On PIPEPIPE reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On ORDER reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On OPTIONAL reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On OFFSET reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On NOW reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On NOTEQUAL reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On NOT reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On NIL reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On MONTH reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On MINUTES reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On MINUS reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On MIN reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On MD5 reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On MAX reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On LTE reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On LT reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On LPAR reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On LIMIT reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On LCASE reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On LBRACKET reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On LBRACE reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On LANGMATCHES reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On LANG reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On Iriref_ reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On Integer_positive reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On Integer_negative reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On Integer reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On ISURI reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On ISNUMERIC reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On ISLITERAL reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On ISIRI reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On ISBLANK reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On IRI reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On IN reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On IF reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On HOURS reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On HAVING reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On GTE reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On GT reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On GROUP_CONCAT reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On GRAPH reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On FLOOR reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On FILTER reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On EXISTS reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On EQUAL reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On EOF reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On ENCODE_FOR_URI reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On Double_positive reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On Double_negative reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On Double reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On Decimal_positive reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On Decimal_negative reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On Decimal reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On DOT reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On DESC reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On DAY reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On DATATYPE reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On COUNT reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On CONTAINS reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On CONCAT reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On COMMA reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On COALESCE reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On CEIL reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On Boolean reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On Blank_node_label reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On BOUND reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On BNODE reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On BIND reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On BANG reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On AVG reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On ASC reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On AS reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On ANON reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On AMPAMP reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR
-- On ABS reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR

State 640:
substring_expression -> SUBSTR LPAR expression COMMA expression COMMA . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 641
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341

State 641:
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 642
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 642:
substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On Var2 reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On Var1 reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On VALUES reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On UUID reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On URI reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On UCASE reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On TZ reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On TIMEZONE reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On String_literal reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On SUM reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On SUBSTR reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On STRUUID reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On STRSTARTS reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On STRLEN reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On STRLANG reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On STRENDS reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On STRDT reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On STRBEFORE reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On STRAFTER reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On STR reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On STAR reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On SLASH reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On SHA512 reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On SHA384 reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On SHA256 reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On SHA1 reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On SERVICE reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On SEMICOLON reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On SECONDS reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On SAMPLE reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On SAMETERM reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On RPAR reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On ROUND reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On REPLACE reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On REGEX reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On RBRACE reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On RAND reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On Pname_ns reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On Pname_ln reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On PLUS reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On PIPEPIPE reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On ORDER reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On OPTIONAL reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On OFFSET reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On NOW reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On NOTEQUAL reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On NOT reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On NIL reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On MONTH reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On MINUTES reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On MINUS reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On MIN reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On MD5 reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On MAX reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On LTE reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On LT reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On LPAR reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On LIMIT reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On LCASE reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On LBRACKET reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On LBRACE reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On LANGMATCHES reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On LANG reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On Iriref_ reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On Integer_positive reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On Integer_negative reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On Integer reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On ISURI reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On ISNUMERIC reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On ISLITERAL reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On ISIRI reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On ISBLANK reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On IRI reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On IN reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On IF reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On HOURS reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On HAVING reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On GTE reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On GT reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On GROUP_CONCAT reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On GRAPH reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On FLOOR reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On FILTER reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On EXISTS reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On EQUAL reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On EOF reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On ENCODE_FOR_URI reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On Double_positive reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On Double_negative reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On Double reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On Decimal_positive reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On Decimal_negative reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On Decimal reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On DOT reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On DESC reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On DAY reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On DATATYPE reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On COUNT reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On CONTAINS reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On CONCAT reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On COMMA reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On COALESCE reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On CEIL reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On Boolean reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On Blank_node_label reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On BOUND reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On BNODE reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On BIND reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On BANG reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On AVG reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On ASC reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On AS reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On ANON reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On AMPAMP reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR
-- On ABS reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR

State 643:
aggregate -> SUM LPAR option(DISTINCT) expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 644
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 644:
aggregate -> SUM LPAR option(DISTINCT) expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On Var2 reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On Var1 reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On VALUES reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On UUID reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On URI reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On UCASE reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On TZ reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On TIMEZONE reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On String_literal reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On SUM reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On SUBSTR reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On STRUUID reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On STRSTARTS reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On STRLEN reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On STRLANG reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On STRENDS reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On STRDT reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On STRBEFORE reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On STRAFTER reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On STR reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On STAR reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On SLASH reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On SHA512 reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On SHA384 reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On SHA256 reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On SHA1 reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On SERVICE reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On SEMICOLON reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On SECONDS reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On SAMPLE reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On SAMETERM reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On RPAR reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On ROUND reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On REPLACE reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On REGEX reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On RBRACE reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On RAND reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On Pname_ns reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On Pname_ln reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On PLUS reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On PIPEPIPE reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On ORDER reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On OPTIONAL reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On OFFSET reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On NOW reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On NOTEQUAL reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On NOT reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On NIL reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On MONTH reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On MINUTES reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On MINUS reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On MIN reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On MD5 reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On MAX reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On LTE reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On LT reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On LPAR reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On LIMIT reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On LCASE reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On LBRACKET reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On LBRACE reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On LANGMATCHES reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On LANG reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On Iriref_ reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On Integer_positive reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On Integer_negative reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On Integer reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On ISURI reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On ISNUMERIC reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On ISLITERAL reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On ISIRI reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On ISBLANK reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On IRI reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On IN reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On IF reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On HOURS reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On HAVING reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On GTE reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On GT reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On GROUP_CONCAT reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On GRAPH reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On FLOOR reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On FILTER reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On EXISTS reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On EQUAL reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On EOF reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On ENCODE_FOR_URI reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On Double_positive reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On Double_negative reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On Double reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On Decimal_positive reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On Decimal_negative reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On Decimal reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On DOT reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On DESC reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On DAY reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On DATATYPE reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On COUNT reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On CONTAINS reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On CONCAT reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On COMMA reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On COALESCE reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On CEIL reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On Boolean reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On Blank_node_label reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On BOUND reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On BNODE reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On BIND reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On BANG reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On AVG reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On ASC reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On AS reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On ANON reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On AMPAMP reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR
-- On ABS reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR

State 645:
built_in_call -> TIMEZONE LPAR expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 646
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 646:
built_in_call -> TIMEZONE LPAR expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On Var2 reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On Var1 reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On VALUES reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On UUID reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On URI reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On UCASE reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On TZ reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On TIMEZONE reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On String_literal reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On SUM reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On SUBSTR reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On STRUUID reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On STRSTARTS reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On STRLEN reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On STRLANG reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On STRENDS reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On STRDT reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On STRBEFORE reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On STRAFTER reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On STR reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On STAR reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On SLASH reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On SHA512 reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On SHA384 reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On SHA256 reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On SHA1 reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On SERVICE reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On SEMICOLON reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On SECONDS reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On SAMPLE reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On SAMETERM reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On RPAR reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On ROUND reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On REPLACE reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On REGEX reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On RBRACE reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On RAND reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On Pname_ns reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On Pname_ln reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On PLUS reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On PIPEPIPE reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On ORDER reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On OPTIONAL reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On OFFSET reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On NOW reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On NOTEQUAL reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On NOT reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On NIL reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On MONTH reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On MINUTES reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On MINUS reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On MIN reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On MD5 reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On MAX reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On LTE reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On LT reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On LPAR reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On LIMIT reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On LCASE reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On LBRACKET reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On LBRACE reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On LANGMATCHES reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On LANG reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On Iriref_ reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On Integer_positive reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On Integer_negative reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On Integer reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On ISURI reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On ISNUMERIC reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On ISLITERAL reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On ISIRI reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On ISBLANK reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On IRI reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On IN reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On IF reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On HOURS reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On HAVING reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On GTE reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On GT reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On GROUP_CONCAT reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On GRAPH reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On FLOOR reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On FILTER reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On EXISTS reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On EQUAL reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On EOF reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On ENCODE_FOR_URI reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On Double_positive reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On Double_negative reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On Double reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On Decimal_positive reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On Decimal_negative reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On Decimal reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On DOT reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On DESC reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On DAY reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On DATATYPE reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On COUNT reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On CONTAINS reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On CONCAT reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On COMMA reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On COALESCE reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On CEIL reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On Boolean reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On Blank_node_label reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On BOUND reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On BNODE reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On BIND reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On BANG reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On AVG reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On ASC reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On AS reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On ANON reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On AMPAMP reduce production built_in_call -> TIMEZONE LPAR expression RPAR
-- On ABS reduce production built_in_call -> TIMEZONE LPAR expression RPAR

State 647:
built_in_call -> TZ LPAR expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 648
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 648:
built_in_call -> TZ LPAR expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production built_in_call -> TZ LPAR expression RPAR
-- On Var2 reduce production built_in_call -> TZ LPAR expression RPAR
-- On Var1 reduce production built_in_call -> TZ LPAR expression RPAR
-- On VALUES reduce production built_in_call -> TZ LPAR expression RPAR
-- On UUID reduce production built_in_call -> TZ LPAR expression RPAR
-- On URI reduce production built_in_call -> TZ LPAR expression RPAR
-- On UCASE reduce production built_in_call -> TZ LPAR expression RPAR
-- On TZ reduce production built_in_call -> TZ LPAR expression RPAR
-- On TIMEZONE reduce production built_in_call -> TZ LPAR expression RPAR
-- On String_literal reduce production built_in_call -> TZ LPAR expression RPAR
-- On SUM reduce production built_in_call -> TZ LPAR expression RPAR
-- On SUBSTR reduce production built_in_call -> TZ LPAR expression RPAR
-- On STRUUID reduce production built_in_call -> TZ LPAR expression RPAR
-- On STRSTARTS reduce production built_in_call -> TZ LPAR expression RPAR
-- On STRLEN reduce production built_in_call -> TZ LPAR expression RPAR
-- On STRLANG reduce production built_in_call -> TZ LPAR expression RPAR
-- On STRENDS reduce production built_in_call -> TZ LPAR expression RPAR
-- On STRDT reduce production built_in_call -> TZ LPAR expression RPAR
-- On STRBEFORE reduce production built_in_call -> TZ LPAR expression RPAR
-- On STRAFTER reduce production built_in_call -> TZ LPAR expression RPAR
-- On STR reduce production built_in_call -> TZ LPAR expression RPAR
-- On STAR reduce production built_in_call -> TZ LPAR expression RPAR
-- On SLASH reduce production built_in_call -> TZ LPAR expression RPAR
-- On SHA512 reduce production built_in_call -> TZ LPAR expression RPAR
-- On SHA384 reduce production built_in_call -> TZ LPAR expression RPAR
-- On SHA256 reduce production built_in_call -> TZ LPAR expression RPAR
-- On SHA1 reduce production built_in_call -> TZ LPAR expression RPAR
-- On SERVICE reduce production built_in_call -> TZ LPAR expression RPAR
-- On SEMICOLON reduce production built_in_call -> TZ LPAR expression RPAR
-- On SECONDS reduce production built_in_call -> TZ LPAR expression RPAR
-- On SAMPLE reduce production built_in_call -> TZ LPAR expression RPAR
-- On SAMETERM reduce production built_in_call -> TZ LPAR expression RPAR
-- On RPAR reduce production built_in_call -> TZ LPAR expression RPAR
-- On ROUND reduce production built_in_call -> TZ LPAR expression RPAR
-- On REPLACE reduce production built_in_call -> TZ LPAR expression RPAR
-- On REGEX reduce production built_in_call -> TZ LPAR expression RPAR
-- On RBRACE reduce production built_in_call -> TZ LPAR expression RPAR
-- On RAND reduce production built_in_call -> TZ LPAR expression RPAR
-- On Pname_ns reduce production built_in_call -> TZ LPAR expression RPAR
-- On Pname_ln reduce production built_in_call -> TZ LPAR expression RPAR
-- On PLUS reduce production built_in_call -> TZ LPAR expression RPAR
-- On PIPEPIPE reduce production built_in_call -> TZ LPAR expression RPAR
-- On ORDER reduce production built_in_call -> TZ LPAR expression RPAR
-- On OPTIONAL reduce production built_in_call -> TZ LPAR expression RPAR
-- On OFFSET reduce production built_in_call -> TZ LPAR expression RPAR
-- On NOW reduce production built_in_call -> TZ LPAR expression RPAR
-- On NOTEQUAL reduce production built_in_call -> TZ LPAR expression RPAR
-- On NOT reduce production built_in_call -> TZ LPAR expression RPAR
-- On NIL reduce production built_in_call -> TZ LPAR expression RPAR
-- On MONTH reduce production built_in_call -> TZ LPAR expression RPAR
-- On MINUTES reduce production built_in_call -> TZ LPAR expression RPAR
-- On MINUS reduce production built_in_call -> TZ LPAR expression RPAR
-- On MIN reduce production built_in_call -> TZ LPAR expression RPAR
-- On MD5 reduce production built_in_call -> TZ LPAR expression RPAR
-- On MAX reduce production built_in_call -> TZ LPAR expression RPAR
-- On LTE reduce production built_in_call -> TZ LPAR expression RPAR
-- On LT reduce production built_in_call -> TZ LPAR expression RPAR
-- On LPAR reduce production built_in_call -> TZ LPAR expression RPAR
-- On LIMIT reduce production built_in_call -> TZ LPAR expression RPAR
-- On LCASE reduce production built_in_call -> TZ LPAR expression RPAR
-- On LBRACKET reduce production built_in_call -> TZ LPAR expression RPAR
-- On LBRACE reduce production built_in_call -> TZ LPAR expression RPAR
-- On LANGMATCHES reduce production built_in_call -> TZ LPAR expression RPAR
-- On LANG reduce production built_in_call -> TZ LPAR expression RPAR
-- On Iriref_ reduce production built_in_call -> TZ LPAR expression RPAR
-- On Integer_positive reduce production built_in_call -> TZ LPAR expression RPAR
-- On Integer_negative reduce production built_in_call -> TZ LPAR expression RPAR
-- On Integer reduce production built_in_call -> TZ LPAR expression RPAR
-- On ISURI reduce production built_in_call -> TZ LPAR expression RPAR
-- On ISNUMERIC reduce production built_in_call -> TZ LPAR expression RPAR
-- On ISLITERAL reduce production built_in_call -> TZ LPAR expression RPAR
-- On ISIRI reduce production built_in_call -> TZ LPAR expression RPAR
-- On ISBLANK reduce production built_in_call -> TZ LPAR expression RPAR
-- On IRI reduce production built_in_call -> TZ LPAR expression RPAR
-- On IN reduce production built_in_call -> TZ LPAR expression RPAR
-- On IF reduce production built_in_call -> TZ LPAR expression RPAR
-- On HOURS reduce production built_in_call -> TZ LPAR expression RPAR
-- On HAVING reduce production built_in_call -> TZ LPAR expression RPAR
-- On GTE reduce production built_in_call -> TZ LPAR expression RPAR
-- On GT reduce production built_in_call -> TZ LPAR expression RPAR
-- On GROUP_CONCAT reduce production built_in_call -> TZ LPAR expression RPAR
-- On GRAPH reduce production built_in_call -> TZ LPAR expression RPAR
-- On FLOOR reduce production built_in_call -> TZ LPAR expression RPAR
-- On FILTER reduce production built_in_call -> TZ LPAR expression RPAR
-- On EXISTS reduce production built_in_call -> TZ LPAR expression RPAR
-- On EQUAL reduce production built_in_call -> TZ LPAR expression RPAR
-- On EOF reduce production built_in_call -> TZ LPAR expression RPAR
-- On ENCODE_FOR_URI reduce production built_in_call -> TZ LPAR expression RPAR
-- On Double_positive reduce production built_in_call -> TZ LPAR expression RPAR
-- On Double_negative reduce production built_in_call -> TZ LPAR expression RPAR
-- On Double reduce production built_in_call -> TZ LPAR expression RPAR
-- On Decimal_positive reduce production built_in_call -> TZ LPAR expression RPAR
-- On Decimal_negative reduce production built_in_call -> TZ LPAR expression RPAR
-- On Decimal reduce production built_in_call -> TZ LPAR expression RPAR
-- On DOT reduce production built_in_call -> TZ LPAR expression RPAR
-- On DESC reduce production built_in_call -> TZ LPAR expression RPAR
-- On DAY reduce production built_in_call -> TZ LPAR expression RPAR
-- On DATATYPE reduce production built_in_call -> TZ LPAR expression RPAR
-- On COUNT reduce production built_in_call -> TZ LPAR expression RPAR
-- On CONTAINS reduce production built_in_call -> TZ LPAR expression RPAR
-- On CONCAT reduce production built_in_call -> TZ LPAR expression RPAR
-- On COMMA reduce production built_in_call -> TZ LPAR expression RPAR
-- On COALESCE reduce production built_in_call -> TZ LPAR expression RPAR
-- On CEIL reduce production built_in_call -> TZ LPAR expression RPAR
-- On Boolean reduce production built_in_call -> TZ LPAR expression RPAR
-- On Blank_node_label reduce production built_in_call -> TZ LPAR expression RPAR
-- On BOUND reduce production built_in_call -> TZ LPAR expression RPAR
-- On BNODE reduce production built_in_call -> TZ LPAR expression RPAR
-- On BIND reduce production built_in_call -> TZ LPAR expression RPAR
-- On BANG reduce production built_in_call -> TZ LPAR expression RPAR
-- On AVG reduce production built_in_call -> TZ LPAR expression RPAR
-- On ASC reduce production built_in_call -> TZ LPAR expression RPAR
-- On AS reduce production built_in_call -> TZ LPAR expression RPAR
-- On ANON reduce production built_in_call -> TZ LPAR expression RPAR
-- On AMPAMP reduce production built_in_call -> TZ LPAR expression RPAR
-- On ABS reduce production built_in_call -> TZ LPAR expression RPAR

State 649:
built_in_call -> UCASE LPAR expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 650
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 650:
built_in_call -> UCASE LPAR expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production built_in_call -> UCASE LPAR expression RPAR
-- On Var2 reduce production built_in_call -> UCASE LPAR expression RPAR
-- On Var1 reduce production built_in_call -> UCASE LPAR expression RPAR
-- On VALUES reduce production built_in_call -> UCASE LPAR expression RPAR
-- On UUID reduce production built_in_call -> UCASE LPAR expression RPAR
-- On URI reduce production built_in_call -> UCASE LPAR expression RPAR
-- On UCASE reduce production built_in_call -> UCASE LPAR expression RPAR
-- On TZ reduce production built_in_call -> UCASE LPAR expression RPAR
-- On TIMEZONE reduce production built_in_call -> UCASE LPAR expression RPAR
-- On String_literal reduce production built_in_call -> UCASE LPAR expression RPAR
-- On SUM reduce production built_in_call -> UCASE LPAR expression RPAR
-- On SUBSTR reduce production built_in_call -> UCASE LPAR expression RPAR
-- On STRUUID reduce production built_in_call -> UCASE LPAR expression RPAR
-- On STRSTARTS reduce production built_in_call -> UCASE LPAR expression RPAR
-- On STRLEN reduce production built_in_call -> UCASE LPAR expression RPAR
-- On STRLANG reduce production built_in_call -> UCASE LPAR expression RPAR
-- On STRENDS reduce production built_in_call -> UCASE LPAR expression RPAR
-- On STRDT reduce production built_in_call -> UCASE LPAR expression RPAR
-- On STRBEFORE reduce production built_in_call -> UCASE LPAR expression RPAR
-- On STRAFTER reduce production built_in_call -> UCASE LPAR expression RPAR
-- On STR reduce production built_in_call -> UCASE LPAR expression RPAR
-- On STAR reduce production built_in_call -> UCASE LPAR expression RPAR
-- On SLASH reduce production built_in_call -> UCASE LPAR expression RPAR
-- On SHA512 reduce production built_in_call -> UCASE LPAR expression RPAR
-- On SHA384 reduce production built_in_call -> UCASE LPAR expression RPAR
-- On SHA256 reduce production built_in_call -> UCASE LPAR expression RPAR
-- On SHA1 reduce production built_in_call -> UCASE LPAR expression RPAR
-- On SERVICE reduce production built_in_call -> UCASE LPAR expression RPAR
-- On SEMICOLON reduce production built_in_call -> UCASE LPAR expression RPAR
-- On SECONDS reduce production built_in_call -> UCASE LPAR expression RPAR
-- On SAMPLE reduce production built_in_call -> UCASE LPAR expression RPAR
-- On SAMETERM reduce production built_in_call -> UCASE LPAR expression RPAR
-- On RPAR reduce production built_in_call -> UCASE LPAR expression RPAR
-- On ROUND reduce production built_in_call -> UCASE LPAR expression RPAR
-- On REPLACE reduce production built_in_call -> UCASE LPAR expression RPAR
-- On REGEX reduce production built_in_call -> UCASE LPAR expression RPAR
-- On RBRACE reduce production built_in_call -> UCASE LPAR expression RPAR
-- On RAND reduce production built_in_call -> UCASE LPAR expression RPAR
-- On Pname_ns reduce production built_in_call -> UCASE LPAR expression RPAR
-- On Pname_ln reduce production built_in_call -> UCASE LPAR expression RPAR
-- On PLUS reduce production built_in_call -> UCASE LPAR expression RPAR
-- On PIPEPIPE reduce production built_in_call -> UCASE LPAR expression RPAR
-- On ORDER reduce production built_in_call -> UCASE LPAR expression RPAR
-- On OPTIONAL reduce production built_in_call -> UCASE LPAR expression RPAR
-- On OFFSET reduce production built_in_call -> UCASE LPAR expression RPAR
-- On NOW reduce production built_in_call -> UCASE LPAR expression RPAR
-- On NOTEQUAL reduce production built_in_call -> UCASE LPAR expression RPAR
-- On NOT reduce production built_in_call -> UCASE LPAR expression RPAR
-- On NIL reduce production built_in_call -> UCASE LPAR expression RPAR
-- On MONTH reduce production built_in_call -> UCASE LPAR expression RPAR
-- On MINUTES reduce production built_in_call -> UCASE LPAR expression RPAR
-- On MINUS reduce production built_in_call -> UCASE LPAR expression RPAR
-- On MIN reduce production built_in_call -> UCASE LPAR expression RPAR
-- On MD5 reduce production built_in_call -> UCASE LPAR expression RPAR
-- On MAX reduce production built_in_call -> UCASE LPAR expression RPAR
-- On LTE reduce production built_in_call -> UCASE LPAR expression RPAR
-- On LT reduce production built_in_call -> UCASE LPAR expression RPAR
-- On LPAR reduce production built_in_call -> UCASE LPAR expression RPAR
-- On LIMIT reduce production built_in_call -> UCASE LPAR expression RPAR
-- On LCASE reduce production built_in_call -> UCASE LPAR expression RPAR
-- On LBRACKET reduce production built_in_call -> UCASE LPAR expression RPAR
-- On LBRACE reduce production built_in_call -> UCASE LPAR expression RPAR
-- On LANGMATCHES reduce production built_in_call -> UCASE LPAR expression RPAR
-- On LANG reduce production built_in_call -> UCASE LPAR expression RPAR
-- On Iriref_ reduce production built_in_call -> UCASE LPAR expression RPAR
-- On Integer_positive reduce production built_in_call -> UCASE LPAR expression RPAR
-- On Integer_negative reduce production built_in_call -> UCASE LPAR expression RPAR
-- On Integer reduce production built_in_call -> UCASE LPAR expression RPAR
-- On ISURI reduce production built_in_call -> UCASE LPAR expression RPAR
-- On ISNUMERIC reduce production built_in_call -> UCASE LPAR expression RPAR
-- On ISLITERAL reduce production built_in_call -> UCASE LPAR expression RPAR
-- On ISIRI reduce production built_in_call -> UCASE LPAR expression RPAR
-- On ISBLANK reduce production built_in_call -> UCASE LPAR expression RPAR
-- On IRI reduce production built_in_call -> UCASE LPAR expression RPAR
-- On IN reduce production built_in_call -> UCASE LPAR expression RPAR
-- On IF reduce production built_in_call -> UCASE LPAR expression RPAR
-- On HOURS reduce production built_in_call -> UCASE LPAR expression RPAR
-- On HAVING reduce production built_in_call -> UCASE LPAR expression RPAR
-- On GTE reduce production built_in_call -> UCASE LPAR expression RPAR
-- On GT reduce production built_in_call -> UCASE LPAR expression RPAR
-- On GROUP_CONCAT reduce production built_in_call -> UCASE LPAR expression RPAR
-- On GRAPH reduce production built_in_call -> UCASE LPAR expression RPAR
-- On FLOOR reduce production built_in_call -> UCASE LPAR expression RPAR
-- On FILTER reduce production built_in_call -> UCASE LPAR expression RPAR
-- On EXISTS reduce production built_in_call -> UCASE LPAR expression RPAR
-- On EQUAL reduce production built_in_call -> UCASE LPAR expression RPAR
-- On EOF reduce production built_in_call -> UCASE LPAR expression RPAR
-- On ENCODE_FOR_URI reduce production built_in_call -> UCASE LPAR expression RPAR
-- On Double_positive reduce production built_in_call -> UCASE LPAR expression RPAR
-- On Double_negative reduce production built_in_call -> UCASE LPAR expression RPAR
-- On Double reduce production built_in_call -> UCASE LPAR expression RPAR
-- On Decimal_positive reduce production built_in_call -> UCASE LPAR expression RPAR
-- On Decimal_negative reduce production built_in_call -> UCASE LPAR expression RPAR
-- On Decimal reduce production built_in_call -> UCASE LPAR expression RPAR
-- On DOT reduce production built_in_call -> UCASE LPAR expression RPAR
-- On DESC reduce production built_in_call -> UCASE LPAR expression RPAR
-- On DAY reduce production built_in_call -> UCASE LPAR expression RPAR
-- On DATATYPE reduce production built_in_call -> UCASE LPAR expression RPAR
-- On COUNT reduce production built_in_call -> UCASE LPAR expression RPAR
-- On CONTAINS reduce production built_in_call -> UCASE LPAR expression RPAR
-- On CONCAT reduce production built_in_call -> UCASE LPAR expression RPAR
-- On COMMA reduce production built_in_call -> UCASE LPAR expression RPAR
-- On COALESCE reduce production built_in_call -> UCASE LPAR expression RPAR
-- On CEIL reduce production built_in_call -> UCASE LPAR expression RPAR
-- On Boolean reduce production built_in_call -> UCASE LPAR expression RPAR
-- On Blank_node_label reduce production built_in_call -> UCASE LPAR expression RPAR
-- On BOUND reduce production built_in_call -> UCASE LPAR expression RPAR
-- On BNODE reduce production built_in_call -> UCASE LPAR expression RPAR
-- On BIND reduce production built_in_call -> UCASE LPAR expression RPAR
-- On BANG reduce production built_in_call -> UCASE LPAR expression RPAR
-- On AVG reduce production built_in_call -> UCASE LPAR expression RPAR
-- On ASC reduce production built_in_call -> UCASE LPAR expression RPAR
-- On AS reduce production built_in_call -> UCASE LPAR expression RPAR
-- On ANON reduce production built_in_call -> UCASE LPAR expression RPAR
-- On AMPAMP reduce production built_in_call -> UCASE LPAR expression RPAR
-- On ABS reduce production built_in_call -> UCASE LPAR expression RPAR

State 651:
built_in_call -> URI LPAR expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 652
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 652:
built_in_call -> URI LPAR expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production built_in_call -> URI LPAR expression RPAR
-- On Var2 reduce production built_in_call -> URI LPAR expression RPAR
-- On Var1 reduce production built_in_call -> URI LPAR expression RPAR
-- On VALUES reduce production built_in_call -> URI LPAR expression RPAR
-- On UUID reduce production built_in_call -> URI LPAR expression RPAR
-- On URI reduce production built_in_call -> URI LPAR expression RPAR
-- On UCASE reduce production built_in_call -> URI LPAR expression RPAR
-- On TZ reduce production built_in_call -> URI LPAR expression RPAR
-- On TIMEZONE reduce production built_in_call -> URI LPAR expression RPAR
-- On String_literal reduce production built_in_call -> URI LPAR expression RPAR
-- On SUM reduce production built_in_call -> URI LPAR expression RPAR
-- On SUBSTR reduce production built_in_call -> URI LPAR expression RPAR
-- On STRUUID reduce production built_in_call -> URI LPAR expression RPAR
-- On STRSTARTS reduce production built_in_call -> URI LPAR expression RPAR
-- On STRLEN reduce production built_in_call -> URI LPAR expression RPAR
-- On STRLANG reduce production built_in_call -> URI LPAR expression RPAR
-- On STRENDS reduce production built_in_call -> URI LPAR expression RPAR
-- On STRDT reduce production built_in_call -> URI LPAR expression RPAR
-- On STRBEFORE reduce production built_in_call -> URI LPAR expression RPAR
-- On STRAFTER reduce production built_in_call -> URI LPAR expression RPAR
-- On STR reduce production built_in_call -> URI LPAR expression RPAR
-- On STAR reduce production built_in_call -> URI LPAR expression RPAR
-- On SLASH reduce production built_in_call -> URI LPAR expression RPAR
-- On SHA512 reduce production built_in_call -> URI LPAR expression RPAR
-- On SHA384 reduce production built_in_call -> URI LPAR expression RPAR
-- On SHA256 reduce production built_in_call -> URI LPAR expression RPAR
-- On SHA1 reduce production built_in_call -> URI LPAR expression RPAR
-- On SERVICE reduce production built_in_call -> URI LPAR expression RPAR
-- On SEMICOLON reduce production built_in_call -> URI LPAR expression RPAR
-- On SECONDS reduce production built_in_call -> URI LPAR expression RPAR
-- On SAMPLE reduce production built_in_call -> URI LPAR expression RPAR
-- On SAMETERM reduce production built_in_call -> URI LPAR expression RPAR
-- On RPAR reduce production built_in_call -> URI LPAR expression RPAR
-- On ROUND reduce production built_in_call -> URI LPAR expression RPAR
-- On REPLACE reduce production built_in_call -> URI LPAR expression RPAR
-- On REGEX reduce production built_in_call -> URI LPAR expression RPAR
-- On RBRACE reduce production built_in_call -> URI LPAR expression RPAR
-- On RAND reduce production built_in_call -> URI LPAR expression RPAR
-- On Pname_ns reduce production built_in_call -> URI LPAR expression RPAR
-- On Pname_ln reduce production built_in_call -> URI LPAR expression RPAR
-- On PLUS reduce production built_in_call -> URI LPAR expression RPAR
-- On PIPEPIPE reduce production built_in_call -> URI LPAR expression RPAR
-- On ORDER reduce production built_in_call -> URI LPAR expression RPAR
-- On OPTIONAL reduce production built_in_call -> URI LPAR expression RPAR
-- On OFFSET reduce production built_in_call -> URI LPAR expression RPAR
-- On NOW reduce production built_in_call -> URI LPAR expression RPAR
-- On NOTEQUAL reduce production built_in_call -> URI LPAR expression RPAR
-- On NOT reduce production built_in_call -> URI LPAR expression RPAR
-- On NIL reduce production built_in_call -> URI LPAR expression RPAR
-- On MONTH reduce production built_in_call -> URI LPAR expression RPAR
-- On MINUTES reduce production built_in_call -> URI LPAR expression RPAR
-- On MINUS reduce production built_in_call -> URI LPAR expression RPAR
-- On MIN reduce production built_in_call -> URI LPAR expression RPAR
-- On MD5 reduce production built_in_call -> URI LPAR expression RPAR
-- On MAX reduce production built_in_call -> URI LPAR expression RPAR
-- On LTE reduce production built_in_call -> URI LPAR expression RPAR
-- On LT reduce production built_in_call -> URI LPAR expression RPAR
-- On LPAR reduce production built_in_call -> URI LPAR expression RPAR
-- On LIMIT reduce production built_in_call -> URI LPAR expression RPAR
-- On LCASE reduce production built_in_call -> URI LPAR expression RPAR
-- On LBRACKET reduce production built_in_call -> URI LPAR expression RPAR
-- On LBRACE reduce production built_in_call -> URI LPAR expression RPAR
-- On LANGMATCHES reduce production built_in_call -> URI LPAR expression RPAR
-- On LANG reduce production built_in_call -> URI LPAR expression RPAR
-- On Iriref_ reduce production built_in_call -> URI LPAR expression RPAR
-- On Integer_positive reduce production built_in_call -> URI LPAR expression RPAR
-- On Integer_negative reduce production built_in_call -> URI LPAR expression RPAR
-- On Integer reduce production built_in_call -> URI LPAR expression RPAR
-- On ISURI reduce production built_in_call -> URI LPAR expression RPAR
-- On ISNUMERIC reduce production built_in_call -> URI LPAR expression RPAR
-- On ISLITERAL reduce production built_in_call -> URI LPAR expression RPAR
-- On ISIRI reduce production built_in_call -> URI LPAR expression RPAR
-- On ISBLANK reduce production built_in_call -> URI LPAR expression RPAR
-- On IRI reduce production built_in_call -> URI LPAR expression RPAR
-- On IN reduce production built_in_call -> URI LPAR expression RPAR
-- On IF reduce production built_in_call -> URI LPAR expression RPAR
-- On HOURS reduce production built_in_call -> URI LPAR expression RPAR
-- On HAVING reduce production built_in_call -> URI LPAR expression RPAR
-- On GTE reduce production built_in_call -> URI LPAR expression RPAR
-- On GT reduce production built_in_call -> URI LPAR expression RPAR
-- On GROUP_CONCAT reduce production built_in_call -> URI LPAR expression RPAR
-- On GRAPH reduce production built_in_call -> URI LPAR expression RPAR
-- On FLOOR reduce production built_in_call -> URI LPAR expression RPAR
-- On FILTER reduce production built_in_call -> URI LPAR expression RPAR
-- On EXISTS reduce production built_in_call -> URI LPAR expression RPAR
-- On EQUAL reduce production built_in_call -> URI LPAR expression RPAR
-- On EOF reduce production built_in_call -> URI LPAR expression RPAR
-- On ENCODE_FOR_URI reduce production built_in_call -> URI LPAR expression RPAR
-- On Double_positive reduce production built_in_call -> URI LPAR expression RPAR
-- On Double_negative reduce production built_in_call -> URI LPAR expression RPAR
-- On Double reduce production built_in_call -> URI LPAR expression RPAR
-- On Decimal_positive reduce production built_in_call -> URI LPAR expression RPAR
-- On Decimal_negative reduce production built_in_call -> URI LPAR expression RPAR
-- On Decimal reduce production built_in_call -> URI LPAR expression RPAR
-- On DOT reduce production built_in_call -> URI LPAR expression RPAR
-- On DESC reduce production built_in_call -> URI LPAR expression RPAR
-- On DAY reduce production built_in_call -> URI LPAR expression RPAR
-- On DATATYPE reduce production built_in_call -> URI LPAR expression RPAR
-- On COUNT reduce production built_in_call -> URI LPAR expression RPAR
-- On CONTAINS reduce production built_in_call -> URI LPAR expression RPAR
-- On CONCAT reduce production built_in_call -> URI LPAR expression RPAR
-- On COMMA reduce production built_in_call -> URI LPAR expression RPAR
-- On COALESCE reduce production built_in_call -> URI LPAR expression RPAR
-- On CEIL reduce production built_in_call -> URI LPAR expression RPAR
-- On Boolean reduce production built_in_call -> URI LPAR expression RPAR
-- On Blank_node_label reduce production built_in_call -> URI LPAR expression RPAR
-- On BOUND reduce production built_in_call -> URI LPAR expression RPAR
-- On BNODE reduce production built_in_call -> URI LPAR expression RPAR
-- On BIND reduce production built_in_call -> URI LPAR expression RPAR
-- On BANG reduce production built_in_call -> URI LPAR expression RPAR
-- On AVG reduce production built_in_call -> URI LPAR expression RPAR
-- On ASC reduce production built_in_call -> URI LPAR expression RPAR
-- On AS reduce production built_in_call -> URI LPAR expression RPAR
-- On ANON reduce production built_in_call -> URI LPAR expression RPAR
-- On AMPAMP reduce production built_in_call -> URI LPAR expression RPAR
-- On ABS reduce production built_in_call -> URI LPAR expression RPAR

State 653:
built_in_call -> YEAR LPAR expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 654
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 654:
built_in_call -> YEAR LPAR expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
-- On YEAR reduce production built_in_call -> YEAR LPAR expression RPAR
-- On Var2 reduce production built_in_call -> YEAR LPAR expression RPAR
-- On Var1 reduce production built_in_call -> YEAR LPAR expression RPAR
-- On VALUES reduce production built_in_call -> YEAR LPAR expression RPAR
-- On UUID reduce production built_in_call -> YEAR LPAR expression RPAR
-- On URI reduce production built_in_call -> YEAR LPAR expression RPAR
-- On UCASE reduce production built_in_call -> YEAR LPAR expression RPAR
-- On TZ reduce production built_in_call -> YEAR LPAR expression RPAR
-- On TIMEZONE reduce production built_in_call -> YEAR LPAR expression RPAR
-- On String_literal reduce production built_in_call -> YEAR LPAR expression RPAR
-- On SUM reduce production built_in_call -> YEAR LPAR expression RPAR
-- On SUBSTR reduce production built_in_call -> YEAR LPAR expression RPAR
-- On STRUUID reduce production built_in_call -> YEAR LPAR expression RPAR
-- On STRSTARTS reduce production built_in_call -> YEAR LPAR expression RPAR
-- On STRLEN reduce production built_in_call -> YEAR LPAR expression RPAR
-- On STRLANG reduce production built_in_call -> YEAR LPAR expression RPAR
-- On STRENDS reduce production built_in_call -> YEAR LPAR expression RPAR
-- On STRDT reduce production built_in_call -> YEAR LPAR expression RPAR
-- On STRBEFORE reduce production built_in_call -> YEAR LPAR expression RPAR
-- On STRAFTER reduce production built_in_call -> YEAR LPAR expression RPAR
-- On STR reduce production built_in_call -> YEAR LPAR expression RPAR
-- On STAR reduce production built_in_call -> YEAR LPAR expression RPAR
-- On SLASH reduce production built_in_call -> YEAR LPAR expression RPAR
-- On SHA512 reduce production built_in_call -> YEAR LPAR expression RPAR
-- On SHA384 reduce production built_in_call -> YEAR LPAR expression RPAR
-- On SHA256 reduce production built_in_call -> YEAR LPAR expression RPAR
-- On SHA1 reduce production built_in_call -> YEAR LPAR expression RPAR
-- On SERVICE reduce production built_in_call -> YEAR LPAR expression RPAR
-- On SEMICOLON reduce production built_in_call -> YEAR LPAR expression RPAR
-- On SECONDS reduce production built_in_call -> YEAR LPAR expression RPAR
-- On SAMPLE reduce production built_in_call -> YEAR LPAR expression RPAR
-- On SAMETERM reduce production built_in_call -> YEAR LPAR expression RPAR
-- On RPAR reduce production built_in_call -> YEAR LPAR expression RPAR
-- On ROUND reduce production built_in_call -> YEAR LPAR expression RPAR
-- On REPLACE reduce production built_in_call -> YEAR LPAR expression RPAR
-- On REGEX reduce production built_in_call -> YEAR LPAR expression RPAR
-- On RBRACE reduce production built_in_call -> YEAR LPAR expression RPAR
-- On RAND reduce production built_in_call -> YEAR LPAR expression RPAR
-- On Pname_ns reduce production built_in_call -> YEAR LPAR expression RPAR
-- On Pname_ln reduce production built_in_call -> YEAR LPAR expression RPAR
-- On PLUS reduce production built_in_call -> YEAR LPAR expression RPAR
-- On PIPEPIPE reduce production built_in_call -> YEAR LPAR expression RPAR
-- On ORDER reduce production built_in_call -> YEAR LPAR expression RPAR
-- On OPTIONAL reduce production built_in_call -> YEAR LPAR expression RPAR
-- On OFFSET reduce production built_in_call -> YEAR LPAR expression RPAR
-- On NOW reduce production built_in_call -> YEAR LPAR expression RPAR
-- On NOTEQUAL reduce production built_in_call -> YEAR LPAR expression RPAR
-- On NOT reduce production built_in_call -> YEAR LPAR expression RPAR
-- On NIL reduce production built_in_call -> YEAR LPAR expression RPAR
-- On MONTH reduce production built_in_call -> YEAR LPAR expression RPAR
-- On MINUTES reduce production built_in_call -> YEAR LPAR expression RPAR
-- On MINUS reduce production built_in_call -> YEAR LPAR expression RPAR
-- On MIN reduce production built_in_call -> YEAR LPAR expression RPAR
-- On MD5 reduce production built_in_call -> YEAR LPAR expression RPAR
-- On MAX reduce production built_in_call -> YEAR LPAR expression RPAR
-- On LTE reduce production built_in_call -> YEAR LPAR expression RPAR
-- On LT reduce production built_in_call -> YEAR LPAR expression RPAR
-- On LPAR reduce production built_in_call -> YEAR LPAR expression RPAR
-- On LIMIT reduce production built_in_call -> YEAR LPAR expression RPAR
-- On LCASE reduce production built_in_call -> YEAR LPAR expression RPAR
-- On LBRACKET reduce production built_in_call -> YEAR LPAR expression RPAR
-- On LBRACE reduce production built_in_call -> YEAR LPAR expression RPAR
-- On LANGMATCHES reduce production built_in_call -> YEAR LPAR expression RPAR
-- On LANG reduce production built_in_call -> YEAR LPAR expression RPAR
-- On Iriref_ reduce production built_in_call -> YEAR LPAR expression RPAR
-- On Integer_positive reduce production built_in_call -> YEAR LPAR expression RPAR
-- On Integer_negative reduce production built_in_call -> YEAR LPAR expression RPAR
-- On Integer reduce production built_in_call -> YEAR LPAR expression RPAR
-- On ISURI reduce production built_in_call -> YEAR LPAR expression RPAR
-- On ISNUMERIC reduce production built_in_call -> YEAR LPAR expression RPAR
-- On ISLITERAL reduce production built_in_call -> YEAR LPAR expression RPAR
-- On ISIRI reduce production built_in_call -> YEAR LPAR expression RPAR
-- On ISBLANK reduce production built_in_call -> YEAR LPAR expression RPAR
-- On IRI reduce production built_in_call -> YEAR LPAR expression RPAR
-- On IN reduce production built_in_call -> YEAR LPAR expression RPAR
-- On IF reduce production built_in_call -> YEAR LPAR expression RPAR
-- On HOURS reduce production built_in_call -> YEAR LPAR expression RPAR
-- On HAVING reduce production built_in_call -> YEAR LPAR expression RPAR
-- On GTE reduce production built_in_call -> YEAR LPAR expression RPAR
-- On GT reduce production built_in_call -> YEAR LPAR expression RPAR
-- On GROUP_CONCAT reduce production built_in_call -> YEAR LPAR expression RPAR
-- On GRAPH reduce production built_in_call -> YEAR LPAR expression RPAR
-- On FLOOR reduce production built_in_call -> YEAR LPAR expression RPAR
-- On FILTER reduce production built_in_call -> YEAR LPAR expression RPAR
-- On EXISTS reduce production built_in_call -> YEAR LPAR expression RPAR
-- On EQUAL reduce production built_in_call -> YEAR LPAR expression RPAR
-- On EOF reduce production built_in_call -> YEAR LPAR expression RPAR
-- On ENCODE_FOR_URI reduce production built_in_call -> YEAR LPAR expression RPAR
-- On Double_positive reduce production built_in_call -> YEAR LPAR expression RPAR
-- On Double_negative reduce production built_in_call -> YEAR LPAR expression RPAR
-- On Double reduce production built_in_call -> YEAR LPAR expression RPAR
-- On Decimal_positive reduce production built_in_call -> YEAR LPAR expression RPAR
-- On Decimal_negative reduce production built_in_call -> YEAR LPAR expression RPAR
-- On Decimal reduce production built_in_call -> YEAR LPAR expression RPAR
-- On DOT reduce production built_in_call -> YEAR LPAR expression RPAR
-- On DESC reduce production built_in_call -> YEAR LPAR expression RPAR
-- On DAY reduce production built_in_call -> YEAR LPAR expression RPAR
-- On DATATYPE reduce production built_in_call -> YEAR LPAR expression RPAR
-- On COUNT reduce production built_in_call -> YEAR LPAR expression RPAR
-- On CONTAINS reduce production built_in_call -> YEAR LPAR expression RPAR
-- On CONCAT reduce production built_in_call -> YEAR LPAR expression RPAR
-- On COMMA reduce production built_in_call -> YEAR LPAR expression RPAR
-- On COALESCE reduce production built_in_call -> YEAR LPAR expression RPAR
-- On CEIL reduce production built_in_call -> YEAR LPAR expression RPAR
-- On Boolean reduce production built_in_call -> YEAR LPAR expression RPAR
-- On Blank_node_label reduce production built_in_call -> YEAR LPAR expression RPAR
-- On BOUND reduce production built_in_call -> YEAR LPAR expression RPAR
-- On BNODE reduce production built_in_call -> YEAR LPAR expression RPAR
-- On BIND reduce production built_in_call -> YEAR LPAR expression RPAR
-- On BANG reduce production built_in_call -> YEAR LPAR expression RPAR
-- On AVG reduce production built_in_call -> YEAR LPAR expression RPAR
-- On ASC reduce production built_in_call -> YEAR LPAR expression RPAR
-- On AS reduce production built_in_call -> YEAR LPAR expression RPAR
-- On ANON reduce production built_in_call -> YEAR LPAR expression RPAR
-- On AMPAMP reduce production built_in_call -> YEAR LPAR expression RPAR
-- On ABS reduce production built_in_call -> YEAR LPAR expression RPAR

State 655:
numexp -> expression . STAR expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AS AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AS AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AS AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AS AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AS AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AS AMPAMP ]
select_var -> LPAR expression . AS var RPAR [ WHERE Var2 Var1 LPAR LBRACE FROM ]
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On AS shift to state 656
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337

State 656:
select_var -> LPAR expression AS . var RPAR [ WHERE Var2 Var1 LPAR LBRACE FROM ]
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On var shift to state 657

State 657:
select_var -> LPAR expression AS var . RPAR [ WHERE Var2 Var1 LPAR LBRACE FROM ]
-- On RPAR shift to state 658

State 658:
select_var -> LPAR expression AS var RPAR . [ WHERE Var2 Var1 LPAR LBRACE FROM ]
-- On WHERE reduce production select_var -> LPAR expression AS var RPAR
-- On Var2 reduce production select_var -> LPAR expression AS var RPAR
-- On Var1 reduce production select_var -> LPAR expression AS var RPAR
-- On LPAR reduce production select_var -> LPAR expression AS var RPAR
-- On LBRACE reduce production select_var -> LPAR expression AS var RPAR
-- On FROM reduce production select_var -> LPAR expression AS var RPAR

State 659:
select_var -> var . [ WHERE Var2 Var1 LPAR LBRACE FROM ]
-- On WHERE reduce production select_var -> var
-- On Var2 reduce production select_var -> var
-- On Var1 reduce production select_var -> var
-- On LPAR reduce production select_var -> var
-- On LBRACE reduce production select_var -> var
-- On FROM reduce production select_var -> var

State 660:
select_clause -> SELECT option(select_flag) select_vars . [ WHERE LBRACE FROM ]
-- On WHERE reduce production select_clause -> SELECT option(select_flag) select_vars
-- On LBRACE reduce production select_clause -> SELECT option(select_flag) select_vars
-- On FROM reduce production select_clause -> SELECT option(select_flag) select_vars

State 661:
nonempty_list(select_var) -> select_var . [ WHERE LBRACE FROM ]
nonempty_list(select_var) -> select_var . nonempty_list(select_var) [ WHERE LBRACE FROM ]
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On LPAR shift to state 18
-- On var shift to state 659
-- On select_var shift to state 661
-- On nonempty_list(select_var) shift to state 662
-- On WHERE reduce production nonempty_list(select_var) -> select_var
-- On LBRACE reduce production nonempty_list(select_var) -> select_var
-- On FROM reduce production nonempty_list(select_var) -> select_var

State 662:
nonempty_list(select_var) -> select_var nonempty_list(select_var) . [ WHERE LBRACE FROM ]
-- On WHERE reduce production nonempty_list(select_var) -> select_var nonempty_list(select_var)
-- On LBRACE reduce production nonempty_list(select_var) -> select_var nonempty_list(select_var)
-- On FROM reduce production nonempty_list(select_var) -> select_var nonempty_list(select_var)

State 663:
select_vars -> nonempty_list(select_var) . [ WHERE LBRACE FROM ]
-- On WHERE reduce production select_vars -> nonempty_list(select_var)
-- On LBRACE reduce production select_vars -> nonempty_list(select_var)
-- On FROM reduce production select_vars -> nonempty_list(select_var)

State 664:
query_kind -> DESCRIBE . nonempty_list(var_or_iri) list(dataset_clause) option(where_clause) solution_modifier [ VALUES EOF ]
query_kind -> DESCRIBE . STAR list(dataset_clause) option(where_clause) solution_modifier [ VALUES EOF ]
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On STAR shift to state 665
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On Iriref_ shift to state 91
-- On var_or_iri shift to state 677
-- On var shift to state 189
-- On prefixed_name shift to state 97
-- On nonempty_list(var_or_iri) shift to state 679
-- On iri shift to state 191

State 665:
query_kind -> DESCRIBE STAR . list(dataset_clause) option(where_clause) solution_modifier [ VALUES EOF ]
-- On FROM shift to state 666
-- On list(dataset_clause) shift to state 671
-- On dataset_clause shift to state 675
-- On WHERE reduce production list(dataset_clause) ->
-- On VALUES reduce production list(dataset_clause) ->
-- On ORDER reduce production list(dataset_clause) ->
-- On OFFSET reduce production list(dataset_clause) ->
-- On LIMIT reduce production list(dataset_clause) ->
-- On LBRACE reduce production list(dataset_clause) ->
-- On HAVING reduce production list(dataset_clause) ->
-- On GROUP reduce production list(dataset_clause) ->
-- On EOF reduce production list(dataset_clause) ->

State 666:
dataset_clause -> FROM . source_selector [ WHERE VALUES ORDER OFFSET LIMIT LBRACE HAVING GROUP FROM EOF ]
dataset_clause -> FROM . NAMED source_selector [ WHERE VALUES ORDER OFFSET LIMIT LBRACE HAVING GROUP FROM EOF ]
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On NAMED shift to state 667
-- On Iriref_ shift to state 91
-- On source_selector shift to state 670
-- On prefixed_name shift to state 97
-- On iri shift to state 669

State 667:
dataset_clause -> FROM NAMED . source_selector [ WHERE VALUES ORDER OFFSET LIMIT LBRACE HAVING GROUP FROM EOF ]
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On Iriref_ shift to state 91
-- On source_selector shift to state 668
-- On prefixed_name shift to state 97
-- On iri shift to state 669

State 668:
dataset_clause -> FROM NAMED source_selector . [ WHERE VALUES ORDER OFFSET LIMIT LBRACE HAVING GROUP FROM EOF ]
-- On WHERE reduce production dataset_clause -> FROM NAMED source_selector
-- On VALUES reduce production dataset_clause -> FROM NAMED source_selector
-- On ORDER reduce production dataset_clause -> FROM NAMED source_selector
-- On OFFSET reduce production dataset_clause -> FROM NAMED source_selector
-- On LIMIT reduce production dataset_clause -> FROM NAMED source_selector
-- On LBRACE reduce production dataset_clause -> FROM NAMED source_selector
-- On HAVING reduce production dataset_clause -> FROM NAMED source_selector
-- On GROUP reduce production dataset_clause -> FROM NAMED source_selector
-- On FROM reduce production dataset_clause -> FROM NAMED source_selector
-- On EOF reduce production dataset_clause -> FROM NAMED source_selector

State 669:
source_selector -> iri . [ WHERE VALUES ORDER OFFSET LIMIT LBRACE HAVING GROUP FROM EOF ]
-- On WHERE reduce production source_selector -> iri
-- On VALUES reduce production source_selector -> iri
-- On ORDER reduce production source_selector -> iri
-- On OFFSET reduce production source_selector -> iri
-- On LIMIT reduce production source_selector -> iri
-- On LBRACE reduce production source_selector -> iri
-- On HAVING reduce production source_selector -> iri
-- On GROUP reduce production source_selector -> iri
-- On FROM reduce production source_selector -> iri
-- On EOF reduce production source_selector -> iri

State 670:
dataset_clause -> FROM source_selector . [ WHERE VALUES ORDER OFFSET LIMIT LBRACE HAVING GROUP FROM EOF ]
-- On WHERE reduce production dataset_clause -> FROM source_selector
-- On VALUES reduce production dataset_clause -> FROM source_selector
-- On ORDER reduce production dataset_clause -> FROM source_selector
-- On OFFSET reduce production dataset_clause -> FROM source_selector
-- On LIMIT reduce production dataset_clause -> FROM source_selector
-- On LBRACE reduce production dataset_clause -> FROM source_selector
-- On HAVING reduce production dataset_clause -> FROM source_selector
-- On GROUP reduce production dataset_clause -> FROM source_selector
-- On FROM reduce production dataset_clause -> FROM source_selector
-- On EOF reduce production dataset_clause -> FROM source_selector

State 671:
query_kind -> DESCRIBE STAR list(dataset_clause) . option(where_clause) solution_modifier [ VALUES EOF ]
-- On WHERE shift to state 231
-- On where_clause shift to state 672
-- On option(where_clause) shift to state 673
-- On option(WHERE) shift to state 526
-- On VALUES reduce production option(where_clause) ->
-- On ORDER reduce production option(where_clause) ->
-- On OFFSET reduce production option(where_clause) ->
-- On LIMIT reduce production option(where_clause) ->
-- On LBRACE reduce production option(WHERE) ->
-- On HAVING reduce production option(where_clause) ->
-- On GROUP reduce production option(where_clause) ->
-- On EOF reduce production option(where_clause) ->

State 672:
option(where_clause) -> where_clause . [ VALUES ORDER OFFSET LIMIT HAVING GROUP EOF ]
-- On VALUES reduce production option(where_clause) -> where_clause
-- On ORDER reduce production option(where_clause) -> where_clause
-- On OFFSET reduce production option(where_clause) -> where_clause
-- On LIMIT reduce production option(where_clause) -> where_clause
-- On HAVING reduce production option(where_clause) -> where_clause
-- On GROUP reduce production option(where_clause) -> where_clause
-- On EOF reduce production option(where_clause) -> where_clause

State 673:
query_kind -> DESCRIBE STAR list(dataset_clause) option(where_clause) . solution_modifier [ VALUES EOF ]
-- On GROUP shift to state 233
-- On solution_modifier shift to state 674
-- On option(group_clause) shift to state 488
-- On group_clause shift to state 525
-- On VALUES reduce production option(group_clause) ->
-- On ORDER reduce production option(group_clause) ->
-- On OFFSET reduce production option(group_clause) ->
-- On LIMIT reduce production option(group_clause) ->
-- On HAVING reduce production option(group_clause) ->
-- On EOF reduce production option(group_clause) ->

State 674:
query_kind -> DESCRIBE STAR list(dataset_clause) option(where_clause) solution_modifier . [ VALUES EOF ]
-- On VALUES reduce production query_kind -> DESCRIBE STAR list(dataset_clause) option(where_clause) solution_modifier
-- On EOF reduce production query_kind -> DESCRIBE STAR list(dataset_clause) option(where_clause) solution_modifier

State 675:
list(dataset_clause) -> dataset_clause . list(dataset_clause) [ WHERE VALUES ORDER OFFSET LIMIT LBRACE HAVING GROUP EOF ]
-- On FROM shift to state 666
-- On list(dataset_clause) shift to state 676
-- On dataset_clause shift to state 675
-- On WHERE reduce production list(dataset_clause) ->
-- On VALUES reduce production list(dataset_clause) ->
-- On ORDER reduce production list(dataset_clause) ->
-- On OFFSET reduce production list(dataset_clause) ->
-- On LIMIT reduce production list(dataset_clause) ->
-- On LBRACE reduce production list(dataset_clause) ->
-- On HAVING reduce production list(dataset_clause) ->
-- On GROUP reduce production list(dataset_clause) ->
-- On EOF reduce production list(dataset_clause) ->

State 676:
list(dataset_clause) -> dataset_clause list(dataset_clause) . [ WHERE VALUES ORDER OFFSET LIMIT LBRACE HAVING GROUP EOF ]
-- On WHERE reduce production list(dataset_clause) -> dataset_clause list(dataset_clause)
-- On VALUES reduce production list(dataset_clause) -> dataset_clause list(dataset_clause)
-- On ORDER reduce production list(dataset_clause) -> dataset_clause list(dataset_clause)
-- On OFFSET reduce production list(dataset_clause) -> dataset_clause list(dataset_clause)
-- On LIMIT reduce production list(dataset_clause) -> dataset_clause list(dataset_clause)
-- On LBRACE reduce production list(dataset_clause) -> dataset_clause list(dataset_clause)
-- On HAVING reduce production list(dataset_clause) -> dataset_clause list(dataset_clause)
-- On GROUP reduce production list(dataset_clause) -> dataset_clause list(dataset_clause)
-- On EOF reduce production list(dataset_clause) -> dataset_clause list(dataset_clause)

State 677:
nonempty_list(var_or_iri) -> var_or_iri . [ WHERE VALUES ORDER OFFSET LIMIT LBRACE HAVING GROUP FROM EOF ]
nonempty_list(var_or_iri) -> var_or_iri . nonempty_list(var_or_iri) [ WHERE VALUES ORDER OFFSET LIMIT LBRACE HAVING GROUP FROM EOF ]
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On Iriref_ shift to state 91
-- On var_or_iri shift to state 677
-- On var shift to state 189
-- On prefixed_name shift to state 97
-- On nonempty_list(var_or_iri) shift to state 678
-- On iri shift to state 191
-- On WHERE reduce production nonempty_list(var_or_iri) -> var_or_iri
-- On VALUES reduce production nonempty_list(var_or_iri) -> var_or_iri
-- On ORDER reduce production nonempty_list(var_or_iri) -> var_or_iri
-- On OFFSET reduce production nonempty_list(var_or_iri) -> var_or_iri
-- On LIMIT reduce production nonempty_list(var_or_iri) -> var_or_iri
-- On LBRACE reduce production nonempty_list(var_or_iri) -> var_or_iri
-- On HAVING reduce production nonempty_list(var_or_iri) -> var_or_iri
-- On GROUP reduce production nonempty_list(var_or_iri) -> var_or_iri
-- On FROM reduce production nonempty_list(var_or_iri) -> var_or_iri
-- On EOF reduce production nonempty_list(var_or_iri) -> var_or_iri

State 678:
nonempty_list(var_or_iri) -> var_or_iri nonempty_list(var_or_iri) . [ WHERE VALUES ORDER OFFSET LIMIT LBRACE HAVING GROUP FROM EOF ]
-- On WHERE reduce production nonempty_list(var_or_iri) -> var_or_iri nonempty_list(var_or_iri)
-- On VALUES reduce production nonempty_list(var_or_iri) -> var_or_iri nonempty_list(var_or_iri)
-- On ORDER reduce production nonempty_list(var_or_iri) -> var_or_iri nonempty_list(var_or_iri)
-- On OFFSET reduce production nonempty_list(var_or_iri) -> var_or_iri nonempty_list(var_or_iri)
-- On LIMIT reduce production nonempty_list(var_or_iri) -> var_or_iri nonempty_list(var_or_iri)
-- On LBRACE reduce production nonempty_list(var_or_iri) -> var_or_iri nonempty_list(var_or_iri)
-- On HAVING reduce production nonempty_list(var_or_iri) -> var_or_iri nonempty_list(var_or_iri)
-- On GROUP reduce production nonempty_list(var_or_iri) -> var_or_iri nonempty_list(var_or_iri)
-- On FROM reduce production nonempty_list(var_or_iri) -> var_or_iri nonempty_list(var_or_iri)
-- On EOF reduce production nonempty_list(var_or_iri) -> var_or_iri nonempty_list(var_or_iri)

State 679:
query_kind -> DESCRIBE nonempty_list(var_or_iri) . list(dataset_clause) option(where_clause) solution_modifier [ VALUES EOF ]
-- On FROM shift to state 666
-- On list(dataset_clause) shift to state 680
-- On dataset_clause shift to state 675
-- On WHERE reduce production list(dataset_clause) ->
-- On VALUES reduce production list(dataset_clause) ->
-- On ORDER reduce production list(dataset_clause) ->
-- On OFFSET reduce production list(dataset_clause) ->
-- On LIMIT reduce production list(dataset_clause) ->
-- On LBRACE reduce production list(dataset_clause) ->
-- On HAVING reduce production list(dataset_clause) ->
-- On GROUP reduce production list(dataset_clause) ->
-- On EOF reduce production list(dataset_clause) ->

State 680:
query_kind -> DESCRIBE nonempty_list(var_or_iri) list(dataset_clause) . option(where_clause) solution_modifier [ VALUES EOF ]
-- On WHERE shift to state 231
-- On where_clause shift to state 672
-- On option(where_clause) shift to state 681
-- On option(WHERE) shift to state 526
-- On VALUES reduce production option(where_clause) ->
-- On ORDER reduce production option(where_clause) ->
-- On OFFSET reduce production option(where_clause) ->
-- On LIMIT reduce production option(where_clause) ->
-- On LBRACE reduce production option(WHERE) ->
-- On HAVING reduce production option(where_clause) ->
-- On GROUP reduce production option(where_clause) ->
-- On EOF reduce production option(where_clause) ->

State 681:
query_kind -> DESCRIBE nonempty_list(var_or_iri) list(dataset_clause) option(where_clause) . solution_modifier [ VALUES EOF ]
-- On GROUP shift to state 233
-- On solution_modifier shift to state 682
-- On option(group_clause) shift to state 488
-- On group_clause shift to state 525
-- On VALUES reduce production option(group_clause) ->
-- On ORDER reduce production option(group_clause) ->
-- On OFFSET reduce production option(group_clause) ->
-- On LIMIT reduce production option(group_clause) ->
-- On HAVING reduce production option(group_clause) ->
-- On EOF reduce production option(group_clause) ->

State 682:
query_kind -> DESCRIBE nonempty_list(var_or_iri) list(dataset_clause) option(where_clause) solution_modifier . [ VALUES EOF ]
-- On VALUES reduce production query_kind -> DESCRIBE nonempty_list(var_or_iri) list(dataset_clause) option(where_clause) solution_modifier
-- On EOF reduce production query_kind -> DESCRIBE nonempty_list(var_or_iri) list(dataset_clause) option(where_clause) solution_modifier

State 683:
query_kind -> CONSTRUCT . construct_template list(dataset_clause) where_clause solution_modifier [ VALUES EOF ]
query_kind -> CONSTRUCT . list(dataset_clause) WHERE LBRACE triples_template RBRACE solution_modifier [ VALUES EOF ]
-- On LBRACE shift to state 684
-- On FROM shift to state 666
-- On list(dataset_clause) shift to state 697
-- On dataset_clause shift to state 675
-- On construct_template shift to state 704
-- On WHERE reduce production list(dataset_clause) ->

State 684:
construct_template -> LBRACE . option(construct_triples) RBRACE [ WHERE LBRACE FROM ]
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On String_literal shift to state 31
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On NIL shift to state 87
-- On LPAR shift to state 171
-- On LBRACKET shift to state 172
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On Boolean shift to state 139
-- On Blank_node_label shift to state 140
-- On ANON shift to state 141
-- On var_or_term shift to state 685
-- On var shift to state 143
-- On triples_same_subject shift to state 687
-- On triples_node shift to state 689
-- On string shift to state 145
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 151
-- On prefixed_name shift to state 97
-- On option(construct_triples) shift to state 694
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 159
-- On iri shift to state 160
-- On graph_term shift to state 161
-- On construct_triples shift to state 696
-- On collection shift to state 186
-- On boolean_literal shift to state 164
-- On blank_node_property_list shift to state 187
-- On blank_node shift to state 166
-- On RBRACE reduce production option(construct_triples) ->

State 685:
triples_same_subject -> var_or_term . property_list_not_empty [ RBRACE DOT ]
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On Iriref_ shift to state 91
-- On A shift to state 173
-- On verb_object_list shift to state 174
-- On verb shift to state 177
-- On var_or_iri shift to state 188
-- On var shift to state 189
-- On property_list_not_empty shift to state 686
-- On prefixed_name shift to state 97
-- On iri shift to state 191

State 686:
triples_same_subject -> var_or_term property_list_not_empty . [ RBRACE DOT ]
-- On RBRACE reduce production triples_same_subject -> var_or_term property_list_not_empty
-- On DOT reduce production triples_same_subject -> var_or_term property_list_not_empty

State 687:
construct_triples -> triples_same_subject . [ RBRACE ]
construct_triples -> triples_same_subject . DOT [ RBRACE ]
construct_triples -> triples_same_subject . DOT construct_triples [ RBRACE ]
-- On DOT shift to state 688
-- On RBRACE reduce production construct_triples -> triples_same_subject

State 688:
construct_triples -> triples_same_subject DOT . [ RBRACE ]
construct_triples -> triples_same_subject DOT . construct_triples [ RBRACE ]
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On String_literal shift to state 31
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On NIL shift to state 87
-- On LPAR shift to state 171
-- On LBRACKET shift to state 172
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On Boolean shift to state 139
-- On Blank_node_label shift to state 140
-- On ANON shift to state 141
-- On var_or_term shift to state 685
-- On var shift to state 143
-- On triples_same_subject shift to state 687
-- On triples_node shift to state 689
-- On string shift to state 145
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 151
-- On prefixed_name shift to state 97
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 159
-- On iri shift to state 160
-- On graph_term shift to state 161
-- On construct_triples shift to state 693
-- On collection shift to state 186
-- On boolean_literal shift to state 164
-- On blank_node_property_list shift to state 187
-- On blank_node shift to state 166
-- On RBRACE reduce production construct_triples -> triples_same_subject DOT

State 689:
triples_same_subject -> triples_node . property_list [ RBRACE DOT ]
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On Iriref_ shift to state 91
-- On A shift to state 173
-- On verb_object_list shift to state 174
-- On verb shift to state 177
-- On var_or_iri shift to state 188
-- On var shift to state 189
-- On property_list_not_empty shift to state 690
-- On property_list shift to state 691
-- On prefixed_name shift to state 97
-- On option(property_list_not_empty) shift to state 692
-- On iri shift to state 191
-- On RBRACE reduce production option(property_list_not_empty) ->
-- On DOT reduce production option(property_list_not_empty) ->

State 690:
option(property_list_not_empty) -> property_list_not_empty . [ RBRACE DOT ]
-- On RBRACE reduce production option(property_list_not_empty) -> property_list_not_empty
-- On DOT reduce production option(property_list_not_empty) -> property_list_not_empty

State 691:
triples_same_subject -> triples_node property_list . [ RBRACE DOT ]
-- On RBRACE reduce production triples_same_subject -> triples_node property_list
-- On DOT reduce production triples_same_subject -> triples_node property_list

State 692:
property_list -> option(property_list_not_empty) . [ RBRACE DOT ]
-- On RBRACE reduce production property_list -> option(property_list_not_empty)
-- On DOT reduce production property_list -> option(property_list_not_empty)

State 693:
construct_triples -> triples_same_subject DOT construct_triples . [ RBRACE ]
-- On RBRACE reduce production construct_triples -> triples_same_subject DOT construct_triples

State 694:
construct_template -> LBRACE option(construct_triples) . RBRACE [ WHERE LBRACE FROM ]
-- On RBRACE shift to state 695

State 695:
construct_template -> LBRACE option(construct_triples) RBRACE . [ WHERE LBRACE FROM ]
-- On WHERE reduce production construct_template -> LBRACE option(construct_triples) RBRACE
-- On LBRACE reduce production construct_template -> LBRACE option(construct_triples) RBRACE
-- On FROM reduce production construct_template -> LBRACE option(construct_triples) RBRACE

State 696:
option(construct_triples) -> construct_triples . [ RBRACE ]
-- On RBRACE reduce production option(construct_triples) -> construct_triples

State 697:
query_kind -> CONSTRUCT list(dataset_clause) . WHERE LBRACE triples_template RBRACE solution_modifier [ VALUES EOF ]
-- On WHERE shift to state 698

State 698:
query_kind -> CONSTRUCT list(dataset_clause) WHERE . LBRACE triples_template RBRACE solution_modifier [ VALUES EOF ]
-- On LBRACE shift to state 699

State 699:
query_kind -> CONSTRUCT list(dataset_clause) WHERE LBRACE . triples_template RBRACE solution_modifier [ VALUES EOF ]
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On String_literal shift to state 31
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On NIL shift to state 87
-- On LPAR shift to state 171
-- On LBRACKET shift to state 172
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On Boolean shift to state 139
-- On Blank_node_label shift to state 140
-- On ANON shift to state 141
-- On var_or_term shift to state 685
-- On var shift to state 143
-- On triples_template shift to state 700
-- On triples_same_subject shift to state 687
-- On triples_node shift to state 689
-- On string shift to state 145
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 151
-- On prefixed_name shift to state 97
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 159
-- On iri shift to state 160
-- On graph_term shift to state 161
-- On construct_triples shift to state 703
-- On collection shift to state 186
-- On boolean_literal shift to state 164
-- On blank_node_property_list shift to state 187
-- On blank_node shift to state 166

State 700:
query_kind -> CONSTRUCT list(dataset_clause) WHERE LBRACE triples_template . RBRACE solution_modifier [ VALUES EOF ]
-- On RBRACE shift to state 701

State 701:
query_kind -> CONSTRUCT list(dataset_clause) WHERE LBRACE triples_template RBRACE . solution_modifier [ VALUES EOF ]
-- On GROUP shift to state 233
-- On solution_modifier shift to state 702
-- On option(group_clause) shift to state 488
-- On group_clause shift to state 525
-- On VALUES reduce production option(group_clause) ->
-- On ORDER reduce production option(group_clause) ->
-- On OFFSET reduce production option(group_clause) ->
-- On LIMIT reduce production option(group_clause) ->
-- On HAVING reduce production option(group_clause) ->
-- On EOF reduce production option(group_clause) ->

State 702:
query_kind -> CONSTRUCT list(dataset_clause) WHERE LBRACE triples_template RBRACE solution_modifier . [ VALUES EOF ]
-- On VALUES reduce production query_kind -> CONSTRUCT list(dataset_clause) WHERE LBRACE triples_template RBRACE solution_modifier
-- On EOF reduce production query_kind -> CONSTRUCT list(dataset_clause) WHERE LBRACE triples_template RBRACE solution_modifier

State 703:
triples_template -> construct_triples . [ RBRACE ]
-- On RBRACE reduce production triples_template -> construct_triples

State 704:
query_kind -> CONSTRUCT construct_template . list(dataset_clause) where_clause solution_modifier [ VALUES EOF ]
-- On FROM shift to state 666
-- On list(dataset_clause) shift to state 705
-- On dataset_clause shift to state 675
-- On WHERE reduce production list(dataset_clause) ->
-- On LBRACE reduce production list(dataset_clause) ->

State 705:
query_kind -> CONSTRUCT construct_template list(dataset_clause) . where_clause solution_modifier [ VALUES EOF ]
-- On WHERE shift to state 231
-- On where_clause shift to state 706
-- On option(WHERE) shift to state 526
-- On LBRACE reduce production option(WHERE) ->

State 706:
query_kind -> CONSTRUCT construct_template list(dataset_clause) where_clause . solution_modifier [ VALUES EOF ]
-- On GROUP shift to state 233
-- On solution_modifier shift to state 707
-- On option(group_clause) shift to state 488
-- On group_clause shift to state 525
-- On VALUES reduce production option(group_clause) ->
-- On ORDER reduce production option(group_clause) ->
-- On OFFSET reduce production option(group_clause) ->
-- On LIMIT reduce production option(group_clause) ->
-- On HAVING reduce production option(group_clause) ->
-- On EOF reduce production option(group_clause) ->

State 707:
query_kind -> CONSTRUCT construct_template list(dataset_clause) where_clause solution_modifier . [ VALUES EOF ]
-- On VALUES reduce production query_kind -> CONSTRUCT construct_template list(dataset_clause) where_clause solution_modifier
-- On EOF reduce production query_kind -> CONSTRUCT construct_template list(dataset_clause) where_clause solution_modifier

State 708:
query_kind -> ASK . list(dataset_clause) where_clause solution_modifier [ VALUES EOF ]
-- On FROM shift to state 666
-- On list(dataset_clause) shift to state 709
-- On dataset_clause shift to state 675
-- On WHERE reduce production list(dataset_clause) ->
-- On LBRACE reduce production list(dataset_clause) ->

State 709:
query_kind -> ASK list(dataset_clause) . where_clause solution_modifier [ VALUES EOF ]
-- On WHERE shift to state 231
-- On where_clause shift to state 710
-- On option(WHERE) shift to state 526
-- On LBRACE reduce production option(WHERE) ->

State 710:
query_kind -> ASK list(dataset_clause) where_clause . solution_modifier [ VALUES EOF ]
-- On GROUP shift to state 233
-- On solution_modifier shift to state 711
-- On option(group_clause) shift to state 488
-- On group_clause shift to state 525
-- On VALUES reduce production option(group_clause) ->
-- On ORDER reduce production option(group_clause) ->
-- On OFFSET reduce production option(group_clause) ->
-- On LIMIT reduce production option(group_clause) ->
-- On HAVING reduce production option(group_clause) ->
-- On EOF reduce production option(group_clause) ->

State 711:
query_kind -> ASK list(dataset_clause) where_clause solution_modifier . [ VALUES EOF ]
-- On VALUES reduce production query_kind -> ASK list(dataset_clause) where_clause solution_modifier
-- On EOF reduce production query_kind -> ASK list(dataset_clause) where_clause solution_modifier

State 712:
query_kind -> select_clause . list(dataset_clause) where_clause solution_modifier [ VALUES EOF ]
-- On FROM shift to state 666
-- On list(dataset_clause) shift to state 713
-- On dataset_clause shift to state 675
-- On WHERE reduce production list(dataset_clause) ->
-- On LBRACE reduce production list(dataset_clause) ->

State 713:
query_kind -> select_clause list(dataset_clause) . where_clause solution_modifier [ VALUES EOF ]
-- On WHERE shift to state 231
-- On where_clause shift to state 714
-- On option(WHERE) shift to state 526
-- On LBRACE reduce production option(WHERE) ->

State 714:
query_kind -> select_clause list(dataset_clause) where_clause . solution_modifier [ VALUES EOF ]
-- On GROUP shift to state 233
-- On solution_modifier shift to state 715
-- On option(group_clause) shift to state 488
-- On group_clause shift to state 525
-- On VALUES reduce production option(group_clause) ->
-- On ORDER reduce production option(group_clause) ->
-- On OFFSET reduce production option(group_clause) ->
-- On LIMIT reduce production option(group_clause) ->
-- On HAVING reduce production option(group_clause) ->
-- On EOF reduce production option(group_clause) ->

State 715:
query_kind -> select_clause list(dataset_clause) where_clause solution_modifier . [ VALUES EOF ]
-- On VALUES reduce production query_kind -> select_clause list(dataset_clause) where_clause solution_modifier
-- On EOF reduce production query_kind -> select_clause list(dataset_clause) where_clause solution_modifier

State 716:
query -> prologue query_kind . values_clause EOF [ # ]
-- On VALUES shift to state 454
-- On values_clause_ shift to state 485
-- On values_clause shift to state 717
-- On option(values_clause_) shift to state 487
-- On EOF reduce production option(values_clause_) ->

State 717:
query -> prologue query_kind values_clause . EOF [ # ]
-- On EOF shift to state 718

State 718:
query -> prologue query_kind values_clause EOF . [ # ]
-- On # reduce production query -> prologue query_kind values_clause EOF

State 719:
prologue -> list(prologue_item) . [ SELECT DESCRIBE CONSTRUCT ASK ]
-- On SELECT reduce production prologue -> list(prologue_item)
-- On DESCRIBE reduce production prologue -> list(prologue_item)
-- On CONSTRUCT reduce production prologue -> list(prologue_item)
-- On ASK reduce production prologue -> list(prologue_item)

