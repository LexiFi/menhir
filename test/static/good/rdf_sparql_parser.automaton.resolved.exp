State 0:
## Known stack suffix:
##
## LR(1) items:
query' -> . query [ # ]
## Transitions:
-- On PREFIX shift to state 1
-- On BASE shift to state 4
-- On query shift to state 6
-- On prologue_item shift to state 7
-- On prologue shift to state 9
-- On list(prologue_item) shift to state 719
## Reductions:
-- On SELECT reduce production list(prologue_item) ->
-- On DESCRIBE reduce production list(prologue_item) ->
-- On CONSTRUCT reduce production list(prologue_item) ->
-- On ASK reduce production list(prologue_item) ->

State 1:
## Known stack suffix:
## PREFIX
## LR(1) items:
prologue_item -> PREFIX . Pname_ns Iriref_ [ SELECT PREFIX DESCRIBE CONSTRUCT BASE ASK ]
## Transitions:
-- On Pname_ns shift to state 2
## Reductions:

State 2:
## Known stack suffix:
## PREFIX Pname_ns
## LR(1) items:
prologue_item -> PREFIX Pname_ns . Iriref_ [ SELECT PREFIX DESCRIBE CONSTRUCT BASE ASK ]
## Transitions:
-- On Iriref_ shift to state 3
## Reductions:

State 3:
## Known stack suffix:
## PREFIX Pname_ns Iriref_
## LR(1) items:
prologue_item -> PREFIX Pname_ns Iriref_ . [ SELECT PREFIX DESCRIBE CONSTRUCT BASE ASK ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production prologue_item -> PREFIX Pname_ns Iriref_

State 4:
## Known stack suffix:
## BASE
## LR(1) items:
prologue_item -> BASE . Iriref_ [ SELECT PREFIX DESCRIBE CONSTRUCT BASE ASK ]
## Transitions:
-- On Iriref_ shift to state 5
## Reductions:

State 5:
## Known stack suffix:
## BASE Iriref_
## LR(1) items:
prologue_item -> BASE Iriref_ . [ SELECT PREFIX DESCRIBE CONSTRUCT BASE ASK ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production prologue_item -> BASE Iriref_

State 6:
## Known stack suffix:
## query
## LR(1) items:
query' -> query . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept query

State 7:
## Known stack suffix:
## prologue_item
## LR(1) items:
list(prologue_item) -> prologue_item . list(prologue_item) [ SELECT DESCRIBE CONSTRUCT ASK ]
## Transitions:
-- On PREFIX shift to state 1
-- On BASE shift to state 4
-- On prologue_item shift to state 7
-- On list(prologue_item) shift to state 8
## Reductions:
-- On SELECT reduce production list(prologue_item) ->
-- On DESCRIBE reduce production list(prologue_item) ->
-- On CONSTRUCT reduce production list(prologue_item) ->
-- On ASK reduce production list(prologue_item) ->

State 8:
## Known stack suffix:
## prologue_item list(prologue_item)
## LR(1) items:
list(prologue_item) -> prologue_item list(prologue_item) . [ SELECT DESCRIBE CONSTRUCT ASK ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list(prologue_item) -> prologue_item list(prologue_item)

State 9:
## Known stack suffix:
## prologue
## LR(1) items:
query -> prologue . query_kind values_clause EOF [ # ]
## Transitions:
-- On SELECT shift to state 10
-- On DESCRIBE shift to state 664
-- On CONSTRUCT shift to state 683
-- On ASK shift to state 708
-- On select_clause shift to state 712
-- On query_kind shift to state 716
## Reductions:

State 10:
## Known stack suffix:
## SELECT
## LR(1) items:
select_clause -> SELECT . option(select_flag) select_vars [ WHERE LBRACE FROM ]
## Transitions:
-- On REDUCED shift to state 11
-- On DISTINCT shift to state 12
-- On select_flag shift to state 13
-- On option(select_flag) shift to state 14
## Reductions:
-- On Var2 reduce production option(select_flag) ->
-- On Var1 reduce production option(select_flag) ->
-- On STAR reduce production option(select_flag) ->
-- On LPAR reduce production option(select_flag) ->

State 11:
## Known stack suffix:
## REDUCED
## LR(1) items:
select_flag -> REDUCED . [ Var2 Var1 STAR LPAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production select_flag -> REDUCED

State 12:
## Known stack suffix:
## DISTINCT
## LR(1) items:
select_flag -> DISTINCT . [ Var2 Var1 STAR LPAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production select_flag -> DISTINCT

State 13:
## Known stack suffix:
## select_flag
## LR(1) items:
option(select_flag) -> select_flag . [ Var2 Var1 STAR LPAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(select_flag) -> select_flag

State 14:
## Known stack suffix:
## SELECT option(select_flag)
## LR(1) items:
select_clause -> SELECT option(select_flag) . select_vars [ WHERE LBRACE FROM ]
## Transitions:
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On STAR shift to state 17
-- On LPAR shift to state 18
-- On var shift to state 659
-- On select_vars shift to state 660
-- On select_var shift to state 661
-- On nonempty_list(select_var) shift to state 663
## Reductions:

State 15:
## Known stack suffix:
## Var2
## LR(1) items:
var -> Var2 . [ YEAR WHERE Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACKET RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING HAT GTE GT GROUP_CONCAT GROUP GRAPH FROM FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS A ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production var -> Var2

State 16:
## Known stack suffix:
## Var1
## LR(1) items:
var -> Var1 . [ YEAR WHERE Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACKET RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING HAT GTE GT GROUP_CONCAT GROUP GRAPH FROM FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS A ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production var -> Var1

State 17:
## Known stack suffix:
## STAR
## LR(1) items:
select_vars -> STAR . [ WHERE LBRACE FROM ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production select_vars -> STAR

State 18:
## Known stack suffix:
## LPAR
## LR(1) items:
select_var -> LPAR . expression AS var RPAR [ WHERE Var2 Var1 LPAR LBRACE FROM ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 655
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 19:
## Known stack suffix:
## YEAR
## LR(1) items:
built_in_call -> YEAR . LPAR expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On LPAR shift to state 20
## Reductions:

State 20:
## Known stack suffix:
## YEAR LPAR
## LR(1) items:
built_in_call -> YEAR LPAR . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 653
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 21:
## Known stack suffix:
## UUID
## LR(1) items:
built_in_call -> UUID . NIL [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On NIL shift to state 22
## Reductions:

State 22:
## Known stack suffix:
## UUID NIL
## LR(1) items:
built_in_call -> UUID NIL . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production built_in_call -> UUID NIL

State 23:
## Known stack suffix:
## URI
## LR(1) items:
built_in_call -> URI . LPAR expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On LPAR shift to state 24
## Reductions:

State 24:
## Known stack suffix:
## URI LPAR
## LR(1) items:
built_in_call -> URI LPAR . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 651
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 25:
## Known stack suffix:
## UCASE
## LR(1) items:
built_in_call -> UCASE . LPAR expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On LPAR shift to state 26
## Reductions:

State 26:
## Known stack suffix:
## UCASE LPAR
## LR(1) items:
built_in_call -> UCASE LPAR . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 649
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 27:
## Known stack suffix:
## TZ
## LR(1) items:
built_in_call -> TZ . LPAR expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On LPAR shift to state 28
## Reductions:

State 28:
## Known stack suffix:
## TZ LPAR
## LR(1) items:
built_in_call -> TZ LPAR . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 647
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 29:
## Known stack suffix:
## TIMEZONE
## LR(1) items:
built_in_call -> TIMEZONE . LPAR expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On LPAR shift to state 30
## Reductions:

State 30:
## Known stack suffix:
## TIMEZONE LPAR
## LR(1) items:
built_in_call -> TIMEZONE LPAR . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 645
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 31:
## Known stack suffix:
## String_literal
## LR(1) items:
string -> String_literal . [ YEAR Var2 Var1 VALUES UUID URI UNDEF UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACKET RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX Langtag LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING HATHAT HAT GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG AS ANON AMPAMP ABS A ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production string -> String_literal

State 32:
## Known stack suffix:
## SUM
## LR(1) items:
aggregate -> SUM . LPAR option(DISTINCT) expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On LPAR shift to state 33
## Reductions:

State 33:
## Known stack suffix:
## SUM LPAR
## LR(1) items:
aggregate -> SUM LPAR . option(DISTINCT) expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On DISTINCT shift to state 34
-- On option(DISTINCT) shift to state 35
## Reductions:
-- On YEAR reduce production option(DISTINCT) ->
-- On Var2 reduce production option(DISTINCT) ->
-- On Var1 reduce production option(DISTINCT) ->
-- On UUID reduce production option(DISTINCT) ->
-- On URI reduce production option(DISTINCT) ->
-- On UCASE reduce production option(DISTINCT) ->
-- On TZ reduce production option(DISTINCT) ->
-- On TIMEZONE reduce production option(DISTINCT) ->
-- On String_literal reduce production option(DISTINCT) ->
-- On SUM reduce production option(DISTINCT) ->
-- On SUBSTR reduce production option(DISTINCT) ->
-- On STRUUID reduce production option(DISTINCT) ->
-- On STRSTARTS reduce production option(DISTINCT) ->
-- On STRLEN reduce production option(DISTINCT) ->
-- On STRLANG reduce production option(DISTINCT) ->
-- On STRENDS reduce production option(DISTINCT) ->
-- On STRDT reduce production option(DISTINCT) ->
-- On STRBEFORE reduce production option(DISTINCT) ->
-- On STRAFTER reduce production option(DISTINCT) ->
-- On STR reduce production option(DISTINCT) ->
-- On SHA512 reduce production option(DISTINCT) ->
-- On SHA384 reduce production option(DISTINCT) ->
-- On SHA256 reduce production option(DISTINCT) ->
-- On SHA1 reduce production option(DISTINCT) ->
-- On SECONDS reduce production option(DISTINCT) ->
-- On SAMPLE reduce production option(DISTINCT) ->
-- On SAMETERM reduce production option(DISTINCT) ->
-- On ROUND reduce production option(DISTINCT) ->
-- On REPLACE reduce production option(DISTINCT) ->
-- On REGEX reduce production option(DISTINCT) ->
-- On RAND reduce production option(DISTINCT) ->
-- On Pname_ns reduce production option(DISTINCT) ->
-- On Pname_ln reduce production option(DISTINCT) ->
-- On PLUS reduce production option(DISTINCT) ->
-- On NOW reduce production option(DISTINCT) ->
-- On NOT reduce production option(DISTINCT) ->
-- On MONTH reduce production option(DISTINCT) ->
-- On MINUTES reduce production option(DISTINCT) ->
-- On MINUS reduce production option(DISTINCT) ->
-- On MIN reduce production option(DISTINCT) ->
-- On MD5 reduce production option(DISTINCT) ->
-- On MAX reduce production option(DISTINCT) ->
-- On LPAR reduce production option(DISTINCT) ->
-- On LCASE reduce production option(DISTINCT) ->
-- On LANGMATCHES reduce production option(DISTINCT) ->
-- On LANG reduce production option(DISTINCT) ->
-- On Iriref_ reduce production option(DISTINCT) ->
-- On Integer_positive reduce production option(DISTINCT) ->
-- On Integer_negative reduce production option(DISTINCT) ->
-- On Integer reduce production option(DISTINCT) ->
-- On ISURI reduce production option(DISTINCT) ->
-- On ISNUMERIC reduce production option(DISTINCT) ->
-- On ISLITERAL reduce production option(DISTINCT) ->
-- On ISIRI reduce production option(DISTINCT) ->
-- On ISBLANK reduce production option(DISTINCT) ->
-- On IRI reduce production option(DISTINCT) ->
-- On IF reduce production option(DISTINCT) ->
-- On HOURS reduce production option(DISTINCT) ->
-- On GROUP_CONCAT reduce production option(DISTINCT) ->
-- On FLOOR reduce production option(DISTINCT) ->
-- On EXISTS reduce production option(DISTINCT) ->
-- On ENCODE_FOR_URI reduce production option(DISTINCT) ->
-- On Double_positive reduce production option(DISTINCT) ->
-- On Double_negative reduce production option(DISTINCT) ->
-- On Double reduce production option(DISTINCT) ->
-- On Decimal_positive reduce production option(DISTINCT) ->
-- On Decimal_negative reduce production option(DISTINCT) ->
-- On Decimal reduce production option(DISTINCT) ->
-- On DAY reduce production option(DISTINCT) ->
-- On DATATYPE reduce production option(DISTINCT) ->
-- On COUNT reduce production option(DISTINCT) ->
-- On CONTAINS reduce production option(DISTINCT) ->
-- On CONCAT reduce production option(DISTINCT) ->
-- On COALESCE reduce production option(DISTINCT) ->
-- On CEIL reduce production option(DISTINCT) ->
-- On Boolean reduce production option(DISTINCT) ->
-- On BOUND reduce production option(DISTINCT) ->
-- On BNODE reduce production option(DISTINCT) ->
-- On BANG reduce production option(DISTINCT) ->
-- On AVG reduce production option(DISTINCT) ->
-- On ABS reduce production option(DISTINCT) ->

State 34:
## Known stack suffix:
## DISTINCT
## LR(1) items:
option(DISTINCT) -> DISTINCT . [ YEAR Var2 Var1 UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RAND Pname_ns Pname_ln PLUS NOW NOT MONTH MINUTES MINUS MIN MD5 MAX LPAR LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IF HOURS GROUP_CONCAT FLOOR EXISTS ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL Boolean BOUND BNODE BANG AVG ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(DISTINCT) -> DISTINCT

State 35:
## Known stack suffix:
## SUM LPAR option(DISTINCT)
## LR(1) items:
aggregate -> SUM LPAR option(DISTINCT) . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 643
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 36:
## Known stack suffix:
## SUBSTR
## LR(1) items:
substring_expression -> SUBSTR . LPAR expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
substring_expression -> SUBSTR . LPAR expression COMMA expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On LPAR shift to state 37
## Reductions:

State 37:
## Known stack suffix:
## SUBSTR LPAR
## LR(1) items:
substring_expression -> SUBSTR LPAR . expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
substring_expression -> SUBSTR LPAR . expression COMMA expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 636
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 38:
## Known stack suffix:
## STRUUID
## LR(1) items:
built_in_call -> STRUUID . NIL [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On NIL shift to state 39
## Reductions:

State 39:
## Known stack suffix:
## STRUUID NIL
## LR(1) items:
built_in_call -> STRUUID NIL . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production built_in_call -> STRUUID NIL

State 40:
## Known stack suffix:
## STRSTARTS
## LR(1) items:
built_in_call -> STRSTARTS . LPAR expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On LPAR shift to state 41
## Reductions:

State 41:
## Known stack suffix:
## STRSTARTS LPAR
## LR(1) items:
built_in_call -> STRSTARTS LPAR . expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 632
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 42:
## Known stack suffix:
## STRLEN
## LR(1) items:
built_in_call -> STRLEN . LPAR expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On LPAR shift to state 43
## Reductions:

State 43:
## Known stack suffix:
## STRLEN LPAR
## LR(1) items:
built_in_call -> STRLEN LPAR . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 630
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 44:
## Known stack suffix:
## STRLANG
## LR(1) items:
built_in_call -> STRLANG . LPAR expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On LPAR shift to state 45
## Reductions:

State 45:
## Known stack suffix:
## STRLANG LPAR
## LR(1) items:
built_in_call -> STRLANG LPAR . expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 626
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 46:
## Known stack suffix:
## STRENDS
## LR(1) items:
built_in_call -> STRENDS . LPAR expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On LPAR shift to state 47
## Reductions:

State 47:
## Known stack suffix:
## STRENDS LPAR
## LR(1) items:
built_in_call -> STRENDS LPAR . expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 622
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 48:
## Known stack suffix:
## STRDT
## LR(1) items:
built_in_call -> STRDT . LPAR expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On LPAR shift to state 49
## Reductions:

State 49:
## Known stack suffix:
## STRDT LPAR
## LR(1) items:
built_in_call -> STRDT LPAR . expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 618
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 50:
## Known stack suffix:
## STRBEFORE
## LR(1) items:
built_in_call -> STRBEFORE . LPAR expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On LPAR shift to state 51
## Reductions:

State 51:
## Known stack suffix:
## STRBEFORE LPAR
## LR(1) items:
built_in_call -> STRBEFORE LPAR . expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 614
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 52:
## Known stack suffix:
## STRAFTER
## LR(1) items:
built_in_call -> STRAFTER . LPAR expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On LPAR shift to state 53
## Reductions:

State 53:
## Known stack suffix:
## STRAFTER LPAR
## LR(1) items:
built_in_call -> STRAFTER LPAR . expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 610
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 54:
## Known stack suffix:
## STR
## LR(1) items:
built_in_call -> STR . LPAR expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On LPAR shift to state 55
## Reductions:

State 55:
## Known stack suffix:
## STR LPAR
## LR(1) items:
built_in_call -> STR LPAR . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 608
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 56:
## Known stack suffix:
## SHA512
## LR(1) items:
built_in_call -> SHA512 . LPAR expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On LPAR shift to state 57
## Reductions:

State 57:
## Known stack suffix:
## SHA512 LPAR
## LR(1) items:
built_in_call -> SHA512 LPAR . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 606
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 58:
## Known stack suffix:
## SHA384
## LR(1) items:
built_in_call -> SHA384 . LPAR expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On LPAR shift to state 59
## Reductions:

State 59:
## Known stack suffix:
## SHA384 LPAR
## LR(1) items:
built_in_call -> SHA384 LPAR . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 604
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 60:
## Known stack suffix:
## SHA256
## LR(1) items:
built_in_call -> SHA256 . LPAR expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On LPAR shift to state 61
## Reductions:

State 61:
## Known stack suffix:
## SHA256 LPAR
## LR(1) items:
built_in_call -> SHA256 LPAR . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 602
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 62:
## Known stack suffix:
## SHA1
## LR(1) items:
built_in_call -> SHA1 . LPAR expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On LPAR shift to state 63
## Reductions:

State 63:
## Known stack suffix:
## SHA1 LPAR
## LR(1) items:
built_in_call -> SHA1 LPAR . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 600
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 64:
## Known stack suffix:
## SECONDS
## LR(1) items:
built_in_call -> SECONDS . LPAR expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On LPAR shift to state 65
## Reductions:

State 65:
## Known stack suffix:
## SECONDS LPAR
## LR(1) items:
built_in_call -> SECONDS LPAR . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 598
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 66:
## Known stack suffix:
## SAMPLE
## LR(1) items:
aggregate -> SAMPLE . LPAR option(DISTINCT) expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On LPAR shift to state 67
## Reductions:

State 67:
## Known stack suffix:
## SAMPLE LPAR
## LR(1) items:
aggregate -> SAMPLE LPAR . option(DISTINCT) expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On DISTINCT shift to state 34
-- On option(DISTINCT) shift to state 68
## Reductions:
-- On YEAR reduce production option(DISTINCT) ->
-- On Var2 reduce production option(DISTINCT) ->
-- On Var1 reduce production option(DISTINCT) ->
-- On UUID reduce production option(DISTINCT) ->
-- On URI reduce production option(DISTINCT) ->
-- On UCASE reduce production option(DISTINCT) ->
-- On TZ reduce production option(DISTINCT) ->
-- On TIMEZONE reduce production option(DISTINCT) ->
-- On String_literal reduce production option(DISTINCT) ->
-- On SUM reduce production option(DISTINCT) ->
-- On SUBSTR reduce production option(DISTINCT) ->
-- On STRUUID reduce production option(DISTINCT) ->
-- On STRSTARTS reduce production option(DISTINCT) ->
-- On STRLEN reduce production option(DISTINCT) ->
-- On STRLANG reduce production option(DISTINCT) ->
-- On STRENDS reduce production option(DISTINCT) ->
-- On STRDT reduce production option(DISTINCT) ->
-- On STRBEFORE reduce production option(DISTINCT) ->
-- On STRAFTER reduce production option(DISTINCT) ->
-- On STR reduce production option(DISTINCT) ->
-- On SHA512 reduce production option(DISTINCT) ->
-- On SHA384 reduce production option(DISTINCT) ->
-- On SHA256 reduce production option(DISTINCT) ->
-- On SHA1 reduce production option(DISTINCT) ->
-- On SECONDS reduce production option(DISTINCT) ->
-- On SAMPLE reduce production option(DISTINCT) ->
-- On SAMETERM reduce production option(DISTINCT) ->
-- On ROUND reduce production option(DISTINCT) ->
-- On REPLACE reduce production option(DISTINCT) ->
-- On REGEX reduce production option(DISTINCT) ->
-- On RAND reduce production option(DISTINCT) ->
-- On Pname_ns reduce production option(DISTINCT) ->
-- On Pname_ln reduce production option(DISTINCT) ->
-- On PLUS reduce production option(DISTINCT) ->
-- On NOW reduce production option(DISTINCT) ->
-- On NOT reduce production option(DISTINCT) ->
-- On MONTH reduce production option(DISTINCT) ->
-- On MINUTES reduce production option(DISTINCT) ->
-- On MINUS reduce production option(DISTINCT) ->
-- On MIN reduce production option(DISTINCT) ->
-- On MD5 reduce production option(DISTINCT) ->
-- On MAX reduce production option(DISTINCT) ->
-- On LPAR reduce production option(DISTINCT) ->
-- On LCASE reduce production option(DISTINCT) ->
-- On LANGMATCHES reduce production option(DISTINCT) ->
-- On LANG reduce production option(DISTINCT) ->
-- On Iriref_ reduce production option(DISTINCT) ->
-- On Integer_positive reduce production option(DISTINCT) ->
-- On Integer_negative reduce production option(DISTINCT) ->
-- On Integer reduce production option(DISTINCT) ->
-- On ISURI reduce production option(DISTINCT) ->
-- On ISNUMERIC reduce production option(DISTINCT) ->
-- On ISLITERAL reduce production option(DISTINCT) ->
-- On ISIRI reduce production option(DISTINCT) ->
-- On ISBLANK reduce production option(DISTINCT) ->
-- On IRI reduce production option(DISTINCT) ->
-- On IF reduce production option(DISTINCT) ->
-- On HOURS reduce production option(DISTINCT) ->
-- On GROUP_CONCAT reduce production option(DISTINCT) ->
-- On FLOOR reduce production option(DISTINCT) ->
-- On EXISTS reduce production option(DISTINCT) ->
-- On ENCODE_FOR_URI reduce production option(DISTINCT) ->
-- On Double_positive reduce production option(DISTINCT) ->
-- On Double_negative reduce production option(DISTINCT) ->
-- On Double reduce production option(DISTINCT) ->
-- On Decimal_positive reduce production option(DISTINCT) ->
-- On Decimal_negative reduce production option(DISTINCT) ->
-- On Decimal reduce production option(DISTINCT) ->
-- On DAY reduce production option(DISTINCT) ->
-- On DATATYPE reduce production option(DISTINCT) ->
-- On COUNT reduce production option(DISTINCT) ->
-- On CONTAINS reduce production option(DISTINCT) ->
-- On CONCAT reduce production option(DISTINCT) ->
-- On COALESCE reduce production option(DISTINCT) ->
-- On CEIL reduce production option(DISTINCT) ->
-- On Boolean reduce production option(DISTINCT) ->
-- On BOUND reduce production option(DISTINCT) ->
-- On BNODE reduce production option(DISTINCT) ->
-- On BANG reduce production option(DISTINCT) ->
-- On AVG reduce production option(DISTINCT) ->
-- On ABS reduce production option(DISTINCT) ->

State 68:
## Known stack suffix:
## SAMPLE LPAR option(DISTINCT)
## LR(1) items:
aggregate -> SAMPLE LPAR option(DISTINCT) . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 596
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 69:
## Known stack suffix:
## SAMETERM
## LR(1) items:
built_in_call -> SAMETERM . LPAR expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On LPAR shift to state 70
## Reductions:

State 70:
## Known stack suffix:
## SAMETERM LPAR
## LR(1) items:
built_in_call -> SAMETERM LPAR . expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 592
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 71:
## Known stack suffix:
## ROUND
## LR(1) items:
built_in_call -> ROUND . LPAR expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On LPAR shift to state 72
## Reductions:

State 72:
## Known stack suffix:
## ROUND LPAR
## LR(1) items:
built_in_call -> ROUND LPAR . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 590
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 73:
## Known stack suffix:
## REPLACE
## LR(1) items:
str_replace_expression -> REPLACE . LPAR expression COMMA expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
str_replace_expression -> REPLACE . LPAR expression COMMA expression COMMA expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On LPAR shift to state 74
## Reductions:

State 74:
## Known stack suffix:
## REPLACE LPAR
## LR(1) items:
str_replace_expression -> REPLACE LPAR . expression COMMA expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
str_replace_expression -> REPLACE LPAR . expression COMMA expression COMMA expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 581
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 75:
## Known stack suffix:
## REGEX
## LR(1) items:
regexp_expression -> REGEX . LPAR expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
regexp_expression -> REGEX . LPAR expression COMMA expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On LPAR shift to state 76
## Reductions:

State 76:
## Known stack suffix:
## REGEX LPAR
## LR(1) items:
regexp_expression -> REGEX LPAR . expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
regexp_expression -> REGEX LPAR . expression COMMA expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 574
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 77:
## Known stack suffix:
## RAND
## LR(1) items:
built_in_call -> RAND . NIL [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On NIL shift to state 78
## Reductions:

State 78:
## Known stack suffix:
## RAND NIL
## LR(1) items:
built_in_call -> RAND NIL . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production built_in_call -> RAND NIL

State 79:
## Known stack suffix:
## Pname_ns
## LR(1) items:
prefixed_name -> Pname_ns . [ YEAR WHERE Var2 Var1 VALUES UUID URI UNDEF UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACKET RBRACE RAND QM Pname_ns Pname_ln PLUS PIPEPIPE PIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING HAT GTE GT GROUP_CONCAT GROUP GRAPH FROM FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG AS ANON AMPAMP ABS A ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production prefixed_name -> Pname_ns

State 80:
## Known stack suffix:
## Pname_ln
## LR(1) items:
prefixed_name -> Pname_ln . [ YEAR WHERE Var2 Var1 VALUES UUID URI UNDEF UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACKET RBRACE RAND QM Pname_ns Pname_ln PLUS PIPEPIPE PIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING HAT GTE GT GROUP_CONCAT GROUP GRAPH FROM FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG AS ANON AMPAMP ABS A ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production prefixed_name -> Pname_ln

State 81:
## Known stack suffix:
## PLUS
## LR(1) items:
numexp -> PLUS . expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 573
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 82:
## Known stack suffix:
## NOW
## LR(1) items:
built_in_call -> NOW . NIL [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On NIL shift to state 83
## Reductions:

State 83:
## Known stack suffix:
## NOW NIL
## LR(1) items:
built_in_call -> NOW NIL . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production built_in_call -> NOW NIL

State 84:
## Known stack suffix:
## NOT
## LR(1) items:
built_in_call -> NOT . EXISTS group_graph_pattern [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On EXISTS shift to state 85
## Reductions:

State 85:
## Known stack suffix:
## NOT EXISTS
## LR(1) items:
built_in_call -> NOT EXISTS . group_graph_pattern [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On LBRACE shift to state 86
-- On group_graph_pattern shift to state 572
## Reductions:

State 86:
## Known stack suffix:
## LBRACE
## LR(1) items:
group_graph_pattern -> LBRACE . subselect RBRACE [ YEAR Var2 Var1 VALUES UUID URI UNION UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GROUP GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
group_graph_pattern -> LBRACE . group_graph_pattern_sub RBRACE [ YEAR Var2 Var1 VALUES UUID URI UNION UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GROUP GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On String_literal shift to state 31
-- On SELECT shift to state 10
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On NIL shift to state 87
-- On LPAR shift to state 88
-- On LBRACKET shift to state 89
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On Boolean shift to state 139
-- On Blank_node_label shift to state 140
-- On ANON shift to state 141
-- On var_or_term shift to state 214
-- On var shift to state 143
-- On triples_same_subject_path shift to state 216
-- On triples_node_path shift to state 218
-- On triples_block_details shift to state 226
-- On triples_block shift to state 227
-- On subselect shift to state 228
-- On string shift to state 145
-- On select_clause shift to state 230
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 151
-- On prefixed_name shift to state 97
-- On option(triples_block) shift to state 528
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 159
-- On iri shift to state 160
-- On group_graph_pattern_sub shift to state 570
-- On graph_term shift to state 161
-- On collection_path shift to state 163
-- On boolean_literal shift to state 164
-- On blank_node_property_list_path shift to state 165
-- On blank_node shift to state 166
## Reductions:
-- On VALUES reduce production option(triples_block) ->
-- On SERVICE reduce production option(triples_block) ->
-- On RBRACE reduce production option(triples_block) ->
-- On OPTIONAL reduce production option(triples_block) ->
-- On MINUS reduce production option(triples_block) ->
-- On LBRACE reduce production option(triples_block) ->
-- On GRAPH reduce production option(triples_block) ->
-- On FILTER reduce production option(triples_block) ->
-- On BIND reduce production option(triples_block) ->

State 87:
## Known stack suffix:
## NIL
## LR(1) items:
graph_term -> NIL . [ Var2 Var1 VALUES String_literal SERVICE SEMICOLON RPAR RBRACKET RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer HAT GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT COMMA Boolean Blank_node_label BIND BANG ANON A ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production graph_term -> NIL

State 88:
## Known stack suffix:
## LPAR
## LR(1) items:
collection_path -> LPAR . nonempty_list(graph_node_path) RPAR [ Var2 Var1 VALUES String_literal SERVICE SEMICOLON RPAR RBRACKET RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer HAT GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT COMMA Boolean Blank_node_label BIND BANG ANON A ]
## Transitions:
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On String_literal shift to state 31
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On NIL shift to state 87
-- On LPAR shift to state 88
-- On LBRACKET shift to state 89
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On Boolean shift to state 139
-- On Blank_node_label shift to state 140
-- On ANON shift to state 141
-- On var_or_term shift to state 142
-- On var shift to state 143
-- On triples_node_path shift to state 144
-- On string shift to state 145
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 151
-- On prefixed_name shift to state 97
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 159
-- On nonempty_list(graph_node_path) shift to state 210
-- On iri shift to state 160
-- On graph_term shift to state 161
-- On graph_node_path shift to state 212
-- On collection_path shift to state 163
-- On boolean_literal shift to state 164
-- On blank_node_property_list_path shift to state 165
-- On blank_node shift to state 166
## Reductions:

State 89:
## Known stack suffix:
## LBRACKET
## LR(1) items:
blank_node_property_list_path -> LBRACKET . property_list_path_not_empty RBRACKET [ Var2 Var1 VALUES String_literal SERVICE SEMICOLON RPAR RBRACKET RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer HAT GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT COMMA Boolean Blank_node_label BIND BANG ANON A ]
## Transitions:
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On LPAR shift to state 90
-- On Iriref_ shift to state 91
-- On HAT shift to state 92
-- On BANG shift to state 93
-- On A shift to state 108
-- On verb_path_or_simple shift to state 129
-- On var shift to state 202
-- On separated_nonempty_list(SLASH,path_elt_or_inverse) shift to state 117
-- On separated_nonempty_list(PIPE,path_sequence) shift to state 118
-- On property_list_path_not_empty shift to state 208
-- On prefixed_name shift to state 97
-- On path_sequence shift to state 119
-- On path_primary shift to state 109
-- On path_elt_or_inverse shift to state 122
-- On path_elt shift to state 125
-- On path_alternative shift to state 126
-- On path shift to state 203
-- On iri shift to state 116
## Reductions:

State 90:
## Known stack suffix:
## LPAR
## LR(1) items:
path_primary -> LPAR . path RPAR [ Var2 Var1 String_literal STAR SLASH RPAR QM Pname_ns Pname_ln PLUS PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
## Transitions:
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On LPAR shift to state 90
-- On Iriref_ shift to state 91
-- On HAT shift to state 92
-- On BANG shift to state 93
-- On A shift to state 108
-- On separated_nonempty_list(SLASH,path_elt_or_inverse) shift to state 117
-- On separated_nonempty_list(PIPE,path_sequence) shift to state 118
-- On prefixed_name shift to state 97
-- On path_sequence shift to state 119
-- On path_primary shift to state 109
-- On path_elt_or_inverse shift to state 122
-- On path_elt shift to state 125
-- On path_alternative shift to state 126
-- On path shift to state 127
-- On iri shift to state 116
## Reductions:

State 91:
## Known stack suffix:
## Iriref_
## LR(1) items:
iri -> Iriref_ . [ YEAR WHERE Var2 Var1 VALUES UUID URI UNDEF UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACKET RBRACE RAND QM Pname_ns Pname_ln PLUS PIPEPIPE PIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING HAT GTE GT GROUP_CONCAT GROUP GRAPH FROM FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG AS ANON AMPAMP ABS A ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production iri -> Iriref_

State 92:
## Known stack suffix:
## HAT
## LR(1) items:
path_elt_or_inverse -> HAT . path_elt [ Var2 Var1 String_literal SLASH RPAR Pname_ns Pname_ln PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
## Transitions:
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On LPAR shift to state 90
-- On Iriref_ shift to state 91
-- On BANG shift to state 93
-- On A shift to state 108
-- On prefixed_name shift to state 97
-- On path_primary shift to state 109
-- On path_elt shift to state 115
-- On iri shift to state 116
## Reductions:

State 93:
## Known stack suffix:
## BANG
## LR(1) items:
path_primary -> BANG . path_negated_property_list [ Var2 Var1 String_literal STAR SLASH RPAR QM Pname_ns Pname_ln PLUS PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
## Transitions:
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On LPAR shift to state 94
-- On Iriref_ shift to state 91
-- On HAT shift to state 95
-- On A shift to state 99
-- On prefixed_name shift to state 97
-- On path_one_in_property_set shift to state 106
-- On path_negated_property_list shift to state 107
-- On iri shift to state 104
## Reductions:

State 94:
## Known stack suffix:
## LPAR
## LR(1) items:
path_negated_property_list -> LPAR . loption(separated_nonempty_list(PIPE,path_one_in_property_set)) [ Var2 Var1 String_literal STAR SLASH RPAR QM Pname_ns Pname_ln PLUS PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
## Transitions:
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On Iriref_ shift to state 91
-- On HAT shift to state 95
-- On A shift to state 99
-- On separated_nonempty_list(PIPE,path_one_in_property_set) shift to state 100
-- On prefixed_name shift to state 97
-- On path_one_in_property_set shift to state 101
-- On loption(separated_nonempty_list(PIPE,path_one_in_property_set)) shift to state 105
-- On iri shift to state 104
## Reductions:
-- On Var2 reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) ->
-- On Var1 reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) ->
-- On String_literal reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) ->
-- On STAR reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) ->
-- On SLASH reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) ->
-- On RPAR reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) ->
-- On QM reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) ->
-- On PLUS reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) ->
-- On PIPE reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) ->
-- On NIL reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) ->
-- On LPAR reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) ->
-- On LBRACKET reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) ->
-- On Integer_positive reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) ->
-- On Integer_negative reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) ->
-- On Integer reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) ->
-- On Double_positive reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) ->
-- On Double_negative reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) ->
-- On Double reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) ->
-- On Decimal_positive reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) ->
-- On Decimal_negative reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) ->
-- On Decimal reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) ->
-- On Boolean reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) ->
-- On Blank_node_label reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) ->
-- On ANON reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) ->

State 95:
## Known stack suffix:
## HAT
## LR(1) items:
path_one_in_property_set -> HAT . iri [ Var2 Var1 String_literal STAR SLASH RPAR QM Pname_ns Pname_ln PLUS PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
path_one_in_property_set -> HAT . A [ Var2 Var1 String_literal STAR SLASH RPAR QM Pname_ns Pname_ln PLUS PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
## Transitions:
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On Iriref_ shift to state 91
-- On A shift to state 96
-- On prefixed_name shift to state 97
-- On iri shift to state 98
## Reductions:

State 96:
## Known stack suffix:
## HAT A
## LR(1) items:
path_one_in_property_set -> HAT A . [ Var2 Var1 String_literal STAR SLASH RPAR QM Pname_ns Pname_ln PLUS PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production path_one_in_property_set -> HAT A

State 97:
## Known stack suffix:
## prefixed_name
## LR(1) items:
iri -> prefixed_name . [ YEAR WHERE Var2 Var1 VALUES UUID URI UNDEF UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACKET RBRACE RAND QM Pname_ns Pname_ln PLUS PIPEPIPE PIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING HAT GTE GT GROUP_CONCAT GROUP GRAPH FROM FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG AS ANON AMPAMP ABS A ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production iri -> prefixed_name

State 98:
## Known stack suffix:
## HAT iri
## LR(1) items:
path_one_in_property_set -> HAT iri . [ Var2 Var1 String_literal STAR SLASH RPAR QM Pname_ns Pname_ln PLUS PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production path_one_in_property_set -> HAT iri

State 99:
## Known stack suffix:
## A
## LR(1) items:
path_one_in_property_set -> A . [ Var2 Var1 String_literal STAR SLASH RPAR QM Pname_ns Pname_ln PLUS PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production path_one_in_property_set -> A

State 100:
## Known stack suffix:
## separated_nonempty_list(PIPE,path_one_in_property_set)
## LR(1) items:
loption(separated_nonempty_list(PIPE,path_one_in_property_set)) -> separated_nonempty_list(PIPE,path_one_in_property_set) . [ Var2 Var1 String_literal STAR SLASH RPAR QM Pname_ns Pname_ln PLUS PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production loption(separated_nonempty_list(PIPE,path_one_in_property_set)) -> separated_nonempty_list(PIPE,path_one_in_property_set)

State 101:
## Known stack suffix:
## path_one_in_property_set
## LR(1) items:
separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set . [ Var2 Var1 String_literal STAR SLASH RPAR QM Pname_ns Pname_ln PLUS PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set . PIPE separated_nonempty_list(PIPE,path_one_in_property_set) [ Var2 Var1 String_literal STAR SLASH RPAR QM Pname_ns Pname_ln PLUS PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
## Transitions:
-- On PIPE shift to state 102
## Reductions:
-- On Var2 reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set
-- On Var1 reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set
-- On String_literal reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set
-- On STAR reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set
-- On SLASH reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set
-- On RPAR reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set
-- On QM reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set
-- On Pname_ns reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set
-- On Pname_ln reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set
-- On PLUS reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set
-- On NIL reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set
-- On LPAR reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set
-- On LBRACKET reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set
-- On Iriref_ reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set
-- On Integer_positive reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set
-- On Integer_negative reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set
-- On Integer reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set
-- On Double_positive reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set
-- On Double_negative reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set
-- On Double reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set
-- On Decimal_positive reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set
-- On Decimal_negative reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set
-- On Decimal reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set
-- On Boolean reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set
-- On Blank_node_label reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set
-- On ANON reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set

State 102:
## Known stack suffix:
## path_one_in_property_set PIPE
## LR(1) items:
separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set PIPE . separated_nonempty_list(PIPE,path_one_in_property_set) [ Var2 Var1 String_literal STAR SLASH RPAR QM Pname_ns Pname_ln PLUS PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
## Transitions:
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On Iriref_ shift to state 91
-- On HAT shift to state 95
-- On A shift to state 99
-- On separated_nonempty_list(PIPE,path_one_in_property_set) shift to state 103
-- On prefixed_name shift to state 97
-- On path_one_in_property_set shift to state 101
-- On iri shift to state 104
## Reductions:

State 103:
## Known stack suffix:
## path_one_in_property_set PIPE separated_nonempty_list(PIPE,path_one_in_property_set)
## LR(1) items:
separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set PIPE separated_nonempty_list(PIPE,path_one_in_property_set) . [ Var2 Var1 String_literal STAR SLASH RPAR QM Pname_ns Pname_ln PLUS PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production separated_nonempty_list(PIPE,path_one_in_property_set) -> path_one_in_property_set PIPE separated_nonempty_list(PIPE,path_one_in_property_set)

State 104:
## Known stack suffix:
## iri
## LR(1) items:
path_one_in_property_set -> iri . [ Var2 Var1 String_literal STAR SLASH RPAR QM Pname_ns Pname_ln PLUS PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production path_one_in_property_set -> iri

State 105:
## Known stack suffix:
## LPAR loption(separated_nonempty_list(PIPE,path_one_in_property_set))
## LR(1) items:
path_negated_property_list -> LPAR loption(separated_nonempty_list(PIPE,path_one_in_property_set)) . [ Var2 Var1 String_literal STAR SLASH RPAR QM Pname_ns Pname_ln PLUS PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production path_negated_property_list -> LPAR loption(separated_nonempty_list(PIPE,path_one_in_property_set))

State 106:
## Known stack suffix:
## path_one_in_property_set
## LR(1) items:
path_negated_property_list -> path_one_in_property_set . [ Var2 Var1 String_literal STAR SLASH RPAR QM Pname_ns Pname_ln PLUS PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production path_negated_property_list -> path_one_in_property_set

State 107:
## Known stack suffix:
## BANG path_negated_property_list
## LR(1) items:
path_primary -> BANG path_negated_property_list . [ Var2 Var1 String_literal STAR SLASH RPAR QM Pname_ns Pname_ln PLUS PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production path_primary -> BANG path_negated_property_list

State 108:
## Known stack suffix:
## A
## LR(1) items:
path_primary -> A . [ Var2 Var1 String_literal STAR SLASH RPAR QM Pname_ns Pname_ln PLUS PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production path_primary -> A

State 109:
## Known stack suffix:
## path_primary
## LR(1) items:
path_elt -> path_primary . option(path_mod) [ Var2 Var1 String_literal SLASH RPAR Pname_ns Pname_ln PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
## Transitions:
-- On STAR shift to state 110
-- On QM shift to state 111
-- On PLUS shift to state 112
-- On path_mod shift to state 113
-- On option(path_mod) shift to state 114
## Reductions:
-- On Var2 reduce production option(path_mod) ->
-- On Var1 reduce production option(path_mod) ->
-- On String_literal reduce production option(path_mod) ->
-- On SLASH reduce production option(path_mod) ->
-- On RPAR reduce production option(path_mod) ->
-- On Pname_ns reduce production option(path_mod) ->
-- On Pname_ln reduce production option(path_mod) ->
-- On PIPE reduce production option(path_mod) ->
-- On NIL reduce production option(path_mod) ->
-- On LPAR reduce production option(path_mod) ->
-- On LBRACKET reduce production option(path_mod) ->
-- On Iriref_ reduce production option(path_mod) ->
-- On Integer_positive reduce production option(path_mod) ->
-- On Integer_negative reduce production option(path_mod) ->
-- On Integer reduce production option(path_mod) ->
-- On Double_positive reduce production option(path_mod) ->
-- On Double_negative reduce production option(path_mod) ->
-- On Double reduce production option(path_mod) ->
-- On Decimal_positive reduce production option(path_mod) ->
-- On Decimal_negative reduce production option(path_mod) ->
-- On Decimal reduce production option(path_mod) ->
-- On Boolean reduce production option(path_mod) ->
-- On Blank_node_label reduce production option(path_mod) ->
-- On ANON reduce production option(path_mod) ->

State 110:
## Known stack suffix:
## STAR
## LR(1) items:
path_mod -> STAR . [ Var2 Var1 String_literal SLASH RPAR Pname_ns Pname_ln PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production path_mod -> STAR

State 111:
## Known stack suffix:
## QM
## LR(1) items:
path_mod -> QM . [ Var2 Var1 String_literal SLASH RPAR Pname_ns Pname_ln PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production path_mod -> QM

State 112:
## Known stack suffix:
## PLUS
## LR(1) items:
path_mod -> PLUS . [ Var2 Var1 String_literal SLASH RPAR Pname_ns Pname_ln PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production path_mod -> PLUS

State 113:
## Known stack suffix:
## path_mod
## LR(1) items:
option(path_mod) -> path_mod . [ Var2 Var1 String_literal SLASH RPAR Pname_ns Pname_ln PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(path_mod) -> path_mod

State 114:
## Known stack suffix:
## path_primary option(path_mod)
## LR(1) items:
path_elt -> path_primary option(path_mod) . [ Var2 Var1 String_literal SLASH RPAR Pname_ns Pname_ln PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production path_elt -> path_primary option(path_mod)

State 115:
## Known stack suffix:
## HAT path_elt
## LR(1) items:
path_elt_or_inverse -> HAT path_elt . [ Var2 Var1 String_literal SLASH RPAR Pname_ns Pname_ln PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production path_elt_or_inverse -> HAT path_elt

State 116:
## Known stack suffix:
## iri
## LR(1) items:
path_primary -> iri . [ Var2 Var1 String_literal STAR SLASH RPAR QM Pname_ns Pname_ln PLUS PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production path_primary -> iri

State 117:
## Known stack suffix:
## separated_nonempty_list(SLASH,path_elt_or_inverse)
## LR(1) items:
path_sequence -> separated_nonempty_list(SLASH,path_elt_or_inverse) . [ Var2 Var1 String_literal RPAR Pname_ns Pname_ln PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production path_sequence -> separated_nonempty_list(SLASH,path_elt_or_inverse)

State 118:
## Known stack suffix:
## separated_nonempty_list(PIPE,path_sequence)
## LR(1) items:
path_alternative -> separated_nonempty_list(PIPE,path_sequence) . [ Var2 Var1 String_literal RPAR Pname_ns Pname_ln NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production path_alternative -> separated_nonempty_list(PIPE,path_sequence)

State 119:
## Known stack suffix:
## path_sequence
## LR(1) items:
separated_nonempty_list(PIPE,path_sequence) -> path_sequence . [ Var2 Var1 String_literal RPAR Pname_ns Pname_ln NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
separated_nonempty_list(PIPE,path_sequence) -> path_sequence . PIPE separated_nonempty_list(PIPE,path_sequence) [ Var2 Var1 String_literal RPAR Pname_ns Pname_ln NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
## Transitions:
-- On PIPE shift to state 120
## Reductions:
-- On Var2 reduce production separated_nonempty_list(PIPE,path_sequence) -> path_sequence
-- On Var1 reduce production separated_nonempty_list(PIPE,path_sequence) -> path_sequence
-- On String_literal reduce production separated_nonempty_list(PIPE,path_sequence) -> path_sequence
-- On RPAR reduce production separated_nonempty_list(PIPE,path_sequence) -> path_sequence
-- On Pname_ns reduce production separated_nonempty_list(PIPE,path_sequence) -> path_sequence
-- On Pname_ln reduce production separated_nonempty_list(PIPE,path_sequence) -> path_sequence
-- On NIL reduce production separated_nonempty_list(PIPE,path_sequence) -> path_sequence
-- On LPAR reduce production separated_nonempty_list(PIPE,path_sequence) -> path_sequence
-- On LBRACKET reduce production separated_nonempty_list(PIPE,path_sequence) -> path_sequence
-- On Iriref_ reduce production separated_nonempty_list(PIPE,path_sequence) -> path_sequence
-- On Integer_positive reduce production separated_nonempty_list(PIPE,path_sequence) -> path_sequence
-- On Integer_negative reduce production separated_nonempty_list(PIPE,path_sequence) -> path_sequence
-- On Integer reduce production separated_nonempty_list(PIPE,path_sequence) -> path_sequence
-- On Double_positive reduce production separated_nonempty_list(PIPE,path_sequence) -> path_sequence
-- On Double_negative reduce production separated_nonempty_list(PIPE,path_sequence) -> path_sequence
-- On Double reduce production separated_nonempty_list(PIPE,path_sequence) -> path_sequence
-- On Decimal_positive reduce production separated_nonempty_list(PIPE,path_sequence) -> path_sequence
-- On Decimal_negative reduce production separated_nonempty_list(PIPE,path_sequence) -> path_sequence
-- On Decimal reduce production separated_nonempty_list(PIPE,path_sequence) -> path_sequence
-- On Boolean reduce production separated_nonempty_list(PIPE,path_sequence) -> path_sequence
-- On Blank_node_label reduce production separated_nonempty_list(PIPE,path_sequence) -> path_sequence
-- On ANON reduce production separated_nonempty_list(PIPE,path_sequence) -> path_sequence

State 120:
## Known stack suffix:
## path_sequence PIPE
## LR(1) items:
separated_nonempty_list(PIPE,path_sequence) -> path_sequence PIPE . separated_nonempty_list(PIPE,path_sequence) [ Var2 Var1 String_literal RPAR Pname_ns Pname_ln NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
## Transitions:
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On LPAR shift to state 90
-- On Iriref_ shift to state 91
-- On HAT shift to state 92
-- On BANG shift to state 93
-- On A shift to state 108
-- On separated_nonempty_list(SLASH,path_elt_or_inverse) shift to state 117
-- On separated_nonempty_list(PIPE,path_sequence) shift to state 121
-- On prefixed_name shift to state 97
-- On path_sequence shift to state 119
-- On path_primary shift to state 109
-- On path_elt_or_inverse shift to state 122
-- On path_elt shift to state 125
-- On iri shift to state 116
## Reductions:

State 121:
## Known stack suffix:
## path_sequence PIPE separated_nonempty_list(PIPE,path_sequence)
## LR(1) items:
separated_nonempty_list(PIPE,path_sequence) -> path_sequence PIPE separated_nonempty_list(PIPE,path_sequence) . [ Var2 Var1 String_literal RPAR Pname_ns Pname_ln NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production separated_nonempty_list(PIPE,path_sequence) -> path_sequence PIPE separated_nonempty_list(PIPE,path_sequence)

State 122:
## Known stack suffix:
## path_elt_or_inverse
## LR(1) items:
separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse . [ Var2 Var1 String_literal RPAR Pname_ns Pname_ln PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse . SLASH separated_nonempty_list(SLASH,path_elt_or_inverse) [ Var2 Var1 String_literal RPAR Pname_ns Pname_ln PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
## Transitions:
-- On SLASH shift to state 123
## Reductions:
-- On Var2 reduce production separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse
-- On Var1 reduce production separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse
-- On String_literal reduce production separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse
-- On RPAR reduce production separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse
-- On Pname_ns reduce production separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse
-- On Pname_ln reduce production separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse
-- On PIPE reduce production separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse
-- On NIL reduce production separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse
-- On LPAR reduce production separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse
-- On LBRACKET reduce production separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse
-- On Iriref_ reduce production separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse
-- On Integer_positive reduce production separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse
-- On Integer_negative reduce production separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse
-- On Integer reduce production separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse
-- On Double_positive reduce production separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse
-- On Double_negative reduce production separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse
-- On Double reduce production separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse
-- On Decimal_positive reduce production separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse
-- On Decimal_negative reduce production separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse
-- On Decimal reduce production separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse
-- On Boolean reduce production separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse
-- On Blank_node_label reduce production separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse
-- On ANON reduce production separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse

State 123:
## Known stack suffix:
## path_elt_or_inverse SLASH
## LR(1) items:
separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse SLASH . separated_nonempty_list(SLASH,path_elt_or_inverse) [ Var2 Var1 String_literal RPAR Pname_ns Pname_ln PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
## Transitions:
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On LPAR shift to state 90
-- On Iriref_ shift to state 91
-- On HAT shift to state 92
-- On BANG shift to state 93
-- On A shift to state 108
-- On separated_nonempty_list(SLASH,path_elt_or_inverse) shift to state 124
-- On prefixed_name shift to state 97
-- On path_primary shift to state 109
-- On path_elt_or_inverse shift to state 122
-- On path_elt shift to state 125
-- On iri shift to state 116
## Reductions:

State 124:
## Known stack suffix:
## path_elt_or_inverse SLASH separated_nonempty_list(SLASH,path_elt_or_inverse)
## LR(1) items:
separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse SLASH separated_nonempty_list(SLASH,path_elt_or_inverse) . [ Var2 Var1 String_literal RPAR Pname_ns Pname_ln PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production separated_nonempty_list(SLASH,path_elt_or_inverse) -> path_elt_or_inverse SLASH separated_nonempty_list(SLASH,path_elt_or_inverse)

State 125:
## Known stack suffix:
## path_elt
## LR(1) items:
path_elt_or_inverse -> path_elt . [ Var2 Var1 String_literal SLASH RPAR Pname_ns Pname_ln PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production path_elt_or_inverse -> path_elt

State 126:
## Known stack suffix:
## path_alternative
## LR(1) items:
path -> path_alternative . [ Var2 Var1 String_literal RPAR Pname_ns Pname_ln NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production path -> path_alternative

State 127:
## Known stack suffix:
## LPAR path
## LR(1) items:
path_primary -> LPAR path . RPAR [ Var2 Var1 String_literal STAR SLASH RPAR QM Pname_ns Pname_ln PLUS PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
## Transitions:
-- On RPAR shift to state 128
## Reductions:

State 128:
## Known stack suffix:
## LPAR path RPAR
## LR(1) items:
path_primary -> LPAR path RPAR . [ Var2 Var1 String_literal STAR SLASH RPAR QM Pname_ns Pname_ln PLUS PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production path_primary -> LPAR path RPAR

State 129:
## Known stack suffix:
## verb_path_or_simple
## LR(1) items:
property_list_path_not_empty -> verb_path_or_simple . object_list_path list(verbp_object_list_l) [ VALUES SERVICE RBRACKET RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER DOT BIND ]
## Transitions:
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On String_literal shift to state 31
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On NIL shift to state 87
-- On LPAR shift to state 88
-- On LBRACKET shift to state 89
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On Boolean shift to state 139
-- On Blank_node_label shift to state 140
-- On ANON shift to state 141
-- On var_or_term shift to state 142
-- On var shift to state 143
-- On triples_node_path shift to state 144
-- On string shift to state 145
-- On separated_nonempty_list(COMMA,object_path) shift to state 149
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 151
-- On prefixed_name shift to state 97
-- On object_path shift to state 152
-- On object_list_path shift to state 167
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 159
-- On iri shift to state 160
-- On graph_term shift to state 161
-- On graph_node_path shift to state 162
-- On collection_path shift to state 163
-- On boolean_literal shift to state 164
-- On blank_node_property_list_path shift to state 165
-- On blank_node shift to state 166
## Reductions:

State 130:
## Known stack suffix:
## Integer_positive
## LR(1) items:
numeric_literal_positive -> Integer_positive . [ YEAR Var2 Var1 VALUES UUID URI UNDEF UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACKET RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING HAT GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG AS ANON AMPAMP ABS A ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production numeric_literal_positive -> Integer_positive

State 131:
## Known stack suffix:
## Integer_negative
## LR(1) items:
numeric_literal_negative -> Integer_negative . [ YEAR Var2 Var1 VALUES UUID URI UNDEF UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACKET RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING HAT GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG AS ANON AMPAMP ABS A ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production numeric_literal_negative -> Integer_negative

State 132:
## Known stack suffix:
## Integer
## LR(1) items:
numeric_literal_unsigned -> Integer . [ YEAR Var2 Var1 VALUES UUID URI UNDEF UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACKET RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING HAT GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG AS ANON AMPAMP ABS A ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production numeric_literal_unsigned -> Integer

State 133:
## Known stack suffix:
## Double_positive
## LR(1) items:
numeric_literal_positive -> Double_positive . [ YEAR Var2 Var1 VALUES UUID URI UNDEF UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACKET RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING HAT GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG AS ANON AMPAMP ABS A ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production numeric_literal_positive -> Double_positive

State 134:
## Known stack suffix:
## Double_negative
## LR(1) items:
numeric_literal_negative -> Double_negative . [ YEAR Var2 Var1 VALUES UUID URI UNDEF UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACKET RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING HAT GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG AS ANON AMPAMP ABS A ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production numeric_literal_negative -> Double_negative

State 135:
## Known stack suffix:
## Double
## LR(1) items:
numeric_literal_unsigned -> Double . [ YEAR Var2 Var1 VALUES UUID URI UNDEF UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACKET RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING HAT GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG AS ANON AMPAMP ABS A ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production numeric_literal_unsigned -> Double

State 136:
## Known stack suffix:
## Decimal_positive
## LR(1) items:
numeric_literal_positive -> Decimal_positive . [ YEAR Var2 Var1 VALUES UUID URI UNDEF UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACKET RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING HAT GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG AS ANON AMPAMP ABS A ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production numeric_literal_positive -> Decimal_positive

State 137:
## Known stack suffix:
## Decimal_negative
## LR(1) items:
numeric_literal_negative -> Decimal_negative . [ YEAR Var2 Var1 VALUES UUID URI UNDEF UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACKET RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING HAT GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG AS ANON AMPAMP ABS A ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production numeric_literal_negative -> Decimal_negative

State 138:
## Known stack suffix:
## Decimal
## LR(1) items:
numeric_literal_unsigned -> Decimal . [ YEAR Var2 Var1 VALUES UUID URI UNDEF UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACKET RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING HAT GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG AS ANON AMPAMP ABS A ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production numeric_literal_unsigned -> Decimal

State 139:
## Known stack suffix:
## Boolean
## LR(1) items:
boolean_literal -> Boolean . [ YEAR Var2 Var1 VALUES UUID URI UNDEF UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACKET RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING HAT GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG AS ANON AMPAMP ABS A ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production boolean_literal -> Boolean

State 140:
## Known stack suffix:
## Blank_node_label
## LR(1) items:
blank_node -> Blank_node_label . [ Var2 Var1 VALUES String_literal SERVICE SEMICOLON RPAR RBRACKET RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer HAT GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT COMMA Boolean Blank_node_label BIND BANG ANON A ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production blank_node -> Blank_node_label

State 141:
## Known stack suffix:
## ANON
## LR(1) items:
blank_node -> ANON . [ Var2 Var1 VALUES String_literal SERVICE SEMICOLON RPAR RBRACKET RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer HAT GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT COMMA Boolean Blank_node_label BIND BANG ANON A ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production blank_node -> ANON

State 142:
## Known stack suffix:
## var_or_term
## LR(1) items:
graph_node_path -> var_or_term . [ Var2 Var1 VALUES String_literal SERVICE SEMICOLON RPAR RBRACKET RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT COMMA Boolean Blank_node_label BIND ANON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production graph_node_path -> var_or_term

State 143:
## Known stack suffix:
## var
## LR(1) items:
var_or_term -> var . [ Var2 Var1 VALUES String_literal SERVICE SEMICOLON RPAR RBRACKET RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer HAT GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT COMMA Boolean Blank_node_label BIND BANG ANON A ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production var_or_term -> var

State 144:
## Known stack suffix:
## triples_node_path
## LR(1) items:
graph_node_path -> triples_node_path . [ Var2 Var1 VALUES String_literal SERVICE SEMICOLON RPAR RBRACKET RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT COMMA Boolean Blank_node_label BIND ANON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production graph_node_path -> triples_node_path

State 145:
## Known stack suffix:
## string
## LR(1) items:
rdf_literal_ -> string . [ YEAR Var2 Var1 VALUES UUID URI UNDEF UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACKET RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING HAT GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG AS ANON AMPAMP ABS A ]
rdf_literal_ -> string . HATHAT iri [ YEAR Var2 Var1 VALUES UUID URI UNDEF UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACKET RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING HAT GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG AS ANON AMPAMP ABS A ]
rdf_literal_ -> string . Langtag [ YEAR Var2 Var1 VALUES UUID URI UNDEF UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACKET RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING HAT GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG AS ANON AMPAMP ABS A ]
## Transitions:
-- On Langtag shift to state 146
-- On HATHAT shift to state 147
## Reductions:
-- On YEAR reduce production rdf_literal_ -> string
-- On Var2 reduce production rdf_literal_ -> string
-- On Var1 reduce production rdf_literal_ -> string
-- On VALUES reduce production rdf_literal_ -> string
-- On UUID reduce production rdf_literal_ -> string
-- On URI reduce production rdf_literal_ -> string
-- On UNDEF reduce production rdf_literal_ -> string
-- On UCASE reduce production rdf_literal_ -> string
-- On TZ reduce production rdf_literal_ -> string
-- On TIMEZONE reduce production rdf_literal_ -> string
-- On String_literal reduce production rdf_literal_ -> string
-- On SUM reduce production rdf_literal_ -> string
-- On SUBSTR reduce production rdf_literal_ -> string
-- On STRUUID reduce production rdf_literal_ -> string
-- On STRSTARTS reduce production rdf_literal_ -> string
-- On STRLEN reduce production rdf_literal_ -> string
-- On STRLANG reduce production rdf_literal_ -> string
-- On STRENDS reduce production rdf_literal_ -> string
-- On STRDT reduce production rdf_literal_ -> string
-- On STRBEFORE reduce production rdf_literal_ -> string
-- On STRAFTER reduce production rdf_literal_ -> string
-- On STR reduce production rdf_literal_ -> string
-- On STAR reduce production rdf_literal_ -> string
-- On SLASH reduce production rdf_literal_ -> string
-- On SHA512 reduce production rdf_literal_ -> string
-- On SHA384 reduce production rdf_literal_ -> string
-- On SHA256 reduce production rdf_literal_ -> string
-- On SHA1 reduce production rdf_literal_ -> string
-- On SERVICE reduce production rdf_literal_ -> string
-- On SEMICOLON reduce production rdf_literal_ -> string
-- On SECONDS reduce production rdf_literal_ -> string
-- On SAMPLE reduce production rdf_literal_ -> string
-- On SAMETERM reduce production rdf_literal_ -> string
-- On RPAR reduce production rdf_literal_ -> string
-- On ROUND reduce production rdf_literal_ -> string
-- On REPLACE reduce production rdf_literal_ -> string
-- On REGEX reduce production rdf_literal_ -> string
-- On RBRACKET reduce production rdf_literal_ -> string
-- On RBRACE reduce production rdf_literal_ -> string
-- On RAND reduce production rdf_literal_ -> string
-- On Pname_ns reduce production rdf_literal_ -> string
-- On Pname_ln reduce production rdf_literal_ -> string
-- On PLUS reduce production rdf_literal_ -> string
-- On PIPEPIPE reduce production rdf_literal_ -> string
-- On ORDER reduce production rdf_literal_ -> string
-- On OPTIONAL reduce production rdf_literal_ -> string
-- On OFFSET reduce production rdf_literal_ -> string
-- On NOW reduce production rdf_literal_ -> string
-- On NOTEQUAL reduce production rdf_literal_ -> string
-- On NOT reduce production rdf_literal_ -> string
-- On NIL reduce production rdf_literal_ -> string
-- On MONTH reduce production rdf_literal_ -> string
-- On MINUTES reduce production rdf_literal_ -> string
-- On MINUS reduce production rdf_literal_ -> string
-- On MIN reduce production rdf_literal_ -> string
-- On MD5 reduce production rdf_literal_ -> string
-- On MAX reduce production rdf_literal_ -> string
-- On LTE reduce production rdf_literal_ -> string
-- On LT reduce production rdf_literal_ -> string
-- On LPAR reduce production rdf_literal_ -> string
-- On LIMIT reduce production rdf_literal_ -> string
-- On LCASE reduce production rdf_literal_ -> string
-- On LBRACKET reduce production rdf_literal_ -> string
-- On LBRACE reduce production rdf_literal_ -> string
-- On LANGMATCHES reduce production rdf_literal_ -> string
-- On LANG reduce production rdf_literal_ -> string
-- On Iriref_ reduce production rdf_literal_ -> string
-- On Integer_positive reduce production rdf_literal_ -> string
-- On Integer_negative reduce production rdf_literal_ -> string
-- On Integer reduce production rdf_literal_ -> string
-- On ISURI reduce production rdf_literal_ -> string
-- On ISNUMERIC reduce production rdf_literal_ -> string
-- On ISLITERAL reduce production rdf_literal_ -> string
-- On ISIRI reduce production rdf_literal_ -> string
-- On ISBLANK reduce production rdf_literal_ -> string
-- On IRI reduce production rdf_literal_ -> string
-- On IN reduce production rdf_literal_ -> string
-- On IF reduce production rdf_literal_ -> string
-- On HOURS reduce production rdf_literal_ -> string
-- On HAVING reduce production rdf_literal_ -> string
-- On HAT reduce production rdf_literal_ -> string
-- On GTE reduce production rdf_literal_ -> string
-- On GT reduce production rdf_literal_ -> string
-- On GROUP_CONCAT reduce production rdf_literal_ -> string
-- On GRAPH reduce production rdf_literal_ -> string
-- On FLOOR reduce production rdf_literal_ -> string
-- On FILTER reduce production rdf_literal_ -> string
-- On EXISTS reduce production rdf_literal_ -> string
-- On EQUAL reduce production rdf_literal_ -> string
-- On EOF reduce production rdf_literal_ -> string
-- On ENCODE_FOR_URI reduce production rdf_literal_ -> string
-- On Double_positive reduce production rdf_literal_ -> string
-- On Double_negative reduce production rdf_literal_ -> string
-- On Double reduce production rdf_literal_ -> string
-- On Decimal_positive reduce production rdf_literal_ -> string
-- On Decimal_negative reduce production rdf_literal_ -> string
-- On Decimal reduce production rdf_literal_ -> string
-- On DOT reduce production rdf_literal_ -> string
-- On DAY reduce production rdf_literal_ -> string
-- On DATATYPE reduce production rdf_literal_ -> string
-- On COUNT reduce production rdf_literal_ -> string
-- On CONTAINS reduce production rdf_literal_ -> string
-- On CONCAT reduce production rdf_literal_ -> string
-- On COMMA reduce production rdf_literal_ -> string
-- On COALESCE reduce production rdf_literal_ -> string
-- On CEIL reduce production rdf_literal_ -> string
-- On Boolean reduce production rdf_literal_ -> string
-- On Blank_node_label reduce production rdf_literal_ -> string
-- On BOUND reduce production rdf_literal_ -> string
-- On BNODE reduce production rdf_literal_ -> string
-- On BIND reduce production rdf_literal_ -> string
-- On BANG reduce production rdf_literal_ -> string
-- On AVG reduce production rdf_literal_ -> string
-- On AS reduce production rdf_literal_ -> string
-- On ANON reduce production rdf_literal_ -> string
-- On AMPAMP reduce production rdf_literal_ -> string
-- On ABS reduce production rdf_literal_ -> string
-- On A reduce production rdf_literal_ -> string

State 146:
## Known stack suffix:
## string Langtag
## LR(1) items:
rdf_literal_ -> string Langtag . [ YEAR Var2 Var1 VALUES UUID URI UNDEF UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACKET RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING HAT GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG AS ANON AMPAMP ABS A ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production rdf_literal_ -> string Langtag

State 147:
## Known stack suffix:
## string HATHAT
## LR(1) items:
rdf_literal_ -> string HATHAT . iri [ YEAR Var2 Var1 VALUES UUID URI UNDEF UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACKET RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING HAT GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG AS ANON AMPAMP ABS A ]
## Transitions:
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On Iriref_ shift to state 91
-- On prefixed_name shift to state 97
-- On iri shift to state 148
## Reductions:

State 148:
## Known stack suffix:
## string HATHAT iri
## LR(1) items:
rdf_literal_ -> string HATHAT iri . [ YEAR Var2 Var1 VALUES UUID URI UNDEF UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACKET RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING HAT GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG AS ANON AMPAMP ABS A ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production rdf_literal_ -> string HATHAT iri

State 149:
## Known stack suffix:
## separated_nonempty_list(COMMA,object_path)
## LR(1) items:
object_list_path -> separated_nonempty_list(COMMA,object_path) . [ VALUES SERVICE SEMICOLON RBRACKET RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER DOT BIND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production object_list_path -> separated_nonempty_list(COMMA,object_path)

State 150:
## Known stack suffix:
## rdf_literal_
## LR(1) items:
rdf_literal -> rdf_literal_ . [ YEAR Var2 Var1 VALUES UUID URI UNDEF UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACKET RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING HAT GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG AS ANON AMPAMP ABS A ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production rdf_literal -> rdf_literal_

State 151:
## Known stack suffix:
## rdf_literal
## LR(1) items:
graph_term -> rdf_literal . [ Var2 Var1 VALUES String_literal SERVICE SEMICOLON RPAR RBRACKET RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer HAT GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT COMMA Boolean Blank_node_label BIND BANG ANON A ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production graph_term -> rdf_literal

State 152:
## Known stack suffix:
## object_path
## LR(1) items:
separated_nonempty_list(COMMA,object_path) -> object_path . [ VALUES SERVICE SEMICOLON RBRACKET RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER DOT BIND ]
separated_nonempty_list(COMMA,object_path) -> object_path . COMMA separated_nonempty_list(COMMA,object_path) [ VALUES SERVICE SEMICOLON RBRACKET RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER DOT BIND ]
## Transitions:
-- On COMMA shift to state 153
## Reductions:
-- On VALUES reduce production separated_nonempty_list(COMMA,object_path) -> object_path
-- On SERVICE reduce production separated_nonempty_list(COMMA,object_path) -> object_path
-- On SEMICOLON reduce production separated_nonempty_list(COMMA,object_path) -> object_path
-- On RBRACKET reduce production separated_nonempty_list(COMMA,object_path) -> object_path
-- On RBRACE reduce production separated_nonempty_list(COMMA,object_path) -> object_path
-- On OPTIONAL reduce production separated_nonempty_list(COMMA,object_path) -> object_path
-- On MINUS reduce production separated_nonempty_list(COMMA,object_path) -> object_path
-- On LBRACE reduce production separated_nonempty_list(COMMA,object_path) -> object_path
-- On GRAPH reduce production separated_nonempty_list(COMMA,object_path) -> object_path
-- On FILTER reduce production separated_nonempty_list(COMMA,object_path) -> object_path
-- On DOT reduce production separated_nonempty_list(COMMA,object_path) -> object_path
-- On BIND reduce production separated_nonempty_list(COMMA,object_path) -> object_path

State 153:
## Known stack suffix:
## object_path COMMA
## LR(1) items:
separated_nonempty_list(COMMA,object_path) -> object_path COMMA . separated_nonempty_list(COMMA,object_path) [ VALUES SERVICE SEMICOLON RBRACKET RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER DOT BIND ]
## Transitions:
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On String_literal shift to state 31
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On NIL shift to state 87
-- On LPAR shift to state 88
-- On LBRACKET shift to state 89
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On Boolean shift to state 139
-- On Blank_node_label shift to state 140
-- On ANON shift to state 141
-- On var_or_term shift to state 142
-- On var shift to state 143
-- On triples_node_path shift to state 144
-- On string shift to state 145
-- On separated_nonempty_list(COMMA,object_path) shift to state 154
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 151
-- On prefixed_name shift to state 97
-- On object_path shift to state 152
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 159
-- On iri shift to state 160
-- On graph_term shift to state 161
-- On graph_node_path shift to state 162
-- On collection_path shift to state 163
-- On boolean_literal shift to state 164
-- On blank_node_property_list_path shift to state 165
-- On blank_node shift to state 166
## Reductions:

State 154:
## Known stack suffix:
## object_path COMMA separated_nonempty_list(COMMA,object_path)
## LR(1) items:
separated_nonempty_list(COMMA,object_path) -> object_path COMMA separated_nonempty_list(COMMA,object_path) . [ VALUES SERVICE SEMICOLON RBRACKET RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER DOT BIND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production separated_nonempty_list(COMMA,object_path) -> object_path COMMA separated_nonempty_list(COMMA,object_path)

State 155:
## Known stack suffix:
## numeric_literal_unsigned
## LR(1) items:
numeric_literal_ -> numeric_literal_unsigned . [ YEAR Var2 Var1 VALUES UUID URI UNDEF UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACKET RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING HAT GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG AS ANON AMPAMP ABS A ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production numeric_literal_ -> numeric_literal_unsigned

State 156:
## Known stack suffix:
## numeric_literal_positive
## LR(1) items:
numeric_literal_ -> numeric_literal_positive . [ YEAR Var2 Var1 VALUES UUID URI UNDEF UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACKET RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING HAT GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG AS ANON AMPAMP ABS A ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production numeric_literal_ -> numeric_literal_positive

State 157:
## Known stack suffix:
## numeric_literal_negative
## LR(1) items:
numeric_literal_ -> numeric_literal_negative . [ YEAR Var2 Var1 VALUES UUID URI UNDEF UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACKET RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING HAT GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG AS ANON AMPAMP ABS A ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production numeric_literal_ -> numeric_literal_negative

State 158:
## Known stack suffix:
## numeric_literal_
## LR(1) items:
numeric_literal -> numeric_literal_ . [ YEAR Var2 Var1 VALUES UUID URI UNDEF UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACKET RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING HAT GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG AS ANON AMPAMP ABS A ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production numeric_literal -> numeric_literal_

State 159:
## Known stack suffix:
## numeric_literal
## LR(1) items:
graph_term -> numeric_literal . [ Var2 Var1 VALUES String_literal SERVICE SEMICOLON RPAR RBRACKET RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer HAT GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT COMMA Boolean Blank_node_label BIND BANG ANON A ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production graph_term -> numeric_literal

State 160:
## Known stack suffix:
## iri
## LR(1) items:
graph_term -> iri . [ Var2 Var1 VALUES String_literal SERVICE SEMICOLON RPAR RBRACKET RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer HAT GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT COMMA Boolean Blank_node_label BIND BANG ANON A ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production graph_term -> iri

State 161:
## Known stack suffix:
## graph_term
## LR(1) items:
var_or_term -> graph_term . [ Var2 Var1 VALUES String_literal SERVICE SEMICOLON RPAR RBRACKET RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer HAT GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT COMMA Boolean Blank_node_label BIND BANG ANON A ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production var_or_term -> graph_term

State 162:
## Known stack suffix:
## graph_node_path
## LR(1) items:
object_path -> graph_node_path . [ VALUES SERVICE SEMICOLON RBRACKET RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER DOT COMMA BIND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production object_path -> graph_node_path

State 163:
## Known stack suffix:
## collection_path
## LR(1) items:
triples_node_path -> collection_path . [ Var2 Var1 VALUES String_literal SERVICE SEMICOLON RPAR RBRACKET RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer HAT GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT COMMA Boolean Blank_node_label BIND BANG ANON A ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production triples_node_path -> collection_path

State 164:
## Known stack suffix:
## boolean_literal
## LR(1) items:
graph_term -> boolean_literal . [ Var2 Var1 VALUES String_literal SERVICE SEMICOLON RPAR RBRACKET RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer HAT GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT COMMA Boolean Blank_node_label BIND BANG ANON A ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production graph_term -> boolean_literal

State 165:
## Known stack suffix:
## blank_node_property_list_path
## LR(1) items:
triples_node_path -> blank_node_property_list_path . [ Var2 Var1 VALUES String_literal SERVICE SEMICOLON RPAR RBRACKET RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer HAT GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT COMMA Boolean Blank_node_label BIND BANG ANON A ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production triples_node_path -> blank_node_property_list_path

State 166:
## Known stack suffix:
## blank_node
## LR(1) items:
graph_term -> blank_node . [ Var2 Var1 VALUES String_literal SERVICE SEMICOLON RPAR RBRACKET RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer HAT GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT COMMA Boolean Blank_node_label BIND BANG ANON A ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production graph_term -> blank_node

State 167:
## Known stack suffix:
## verb_path_or_simple object_list_path
## LR(1) items:
property_list_path_not_empty -> verb_path_or_simple object_list_path . list(verbp_object_list_l) [ VALUES SERVICE RBRACKET RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER DOT BIND ]
## Transitions:
-- On SEMICOLON shift to state 168
-- On verbp_object_list_l shift to state 205
-- On list(verbp_object_list_l) shift to state 207
## Reductions:
-- On VALUES reduce production list(verbp_object_list_l) ->
-- On SERVICE reduce production list(verbp_object_list_l) ->
-- On RBRACKET reduce production list(verbp_object_list_l) ->
-- On RBRACE reduce production list(verbp_object_list_l) ->
-- On OPTIONAL reduce production list(verbp_object_list_l) ->
-- On MINUS reduce production list(verbp_object_list_l) ->
-- On LBRACE reduce production list(verbp_object_list_l) ->
-- On GRAPH reduce production list(verbp_object_list_l) ->
-- On FILTER reduce production list(verbp_object_list_l) ->
-- On DOT reduce production list(verbp_object_list_l) ->
-- On BIND reduce production list(verbp_object_list_l) ->

State 168:
## Known stack suffix:
## SEMICOLON
## LR(1) items:
verbp_object_list_l -> SEMICOLON . option(verbp_object_list) [ VALUES SERVICE SEMICOLON RBRACKET RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER DOT BIND ]
## Transitions:
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On LPAR shift to state 90
-- On Iriref_ shift to state 91
-- On HAT shift to state 92
-- On BANG shift to state 93
-- On A shift to state 108
-- On verbp_object_list shift to state 169
-- On verb_path_or_simple shift to state 170
-- On var shift to state 202
-- On separated_nonempty_list(SLASH,path_elt_or_inverse) shift to state 117
-- On separated_nonempty_list(PIPE,path_sequence) shift to state 118
-- On prefixed_name shift to state 97
-- On path_sequence shift to state 119
-- On path_primary shift to state 109
-- On path_elt_or_inverse shift to state 122
-- On path_elt shift to state 125
-- On path_alternative shift to state 126
-- On path shift to state 203
-- On option(verbp_object_list) shift to state 204
-- On iri shift to state 116
## Reductions:
-- On VALUES reduce production option(verbp_object_list) ->
-- On SERVICE reduce production option(verbp_object_list) ->
-- On SEMICOLON reduce production option(verbp_object_list) ->
-- On RBRACKET reduce production option(verbp_object_list) ->
-- On RBRACE reduce production option(verbp_object_list) ->
-- On OPTIONAL reduce production option(verbp_object_list) ->
-- On MINUS reduce production option(verbp_object_list) ->
-- On LBRACE reduce production option(verbp_object_list) ->
-- On GRAPH reduce production option(verbp_object_list) ->
-- On FILTER reduce production option(verbp_object_list) ->
-- On DOT reduce production option(verbp_object_list) ->
-- On BIND reduce production option(verbp_object_list) ->

State 169:
## Known stack suffix:
## verbp_object_list
## LR(1) items:
option(verbp_object_list) -> verbp_object_list . [ VALUES SERVICE SEMICOLON RBRACKET RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER DOT BIND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(verbp_object_list) -> verbp_object_list

State 170:
## Known stack suffix:
## verb_path_or_simple
## LR(1) items:
verbp_object_list -> verb_path_or_simple . object_list [ VALUES SERVICE SEMICOLON RBRACKET RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER DOT BIND ]
## Transitions:
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On String_literal shift to state 31
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On NIL shift to state 87
-- On LPAR shift to state 171
-- On LBRACKET shift to state 172
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On Boolean shift to state 139
-- On Blank_node_label shift to state 140
-- On ANON shift to state 141
-- On var_or_term shift to state 178
-- On var shift to state 143
-- On triples_node shift to state 179
-- On string shift to state 145
-- On separated_nonempty_list(COMMA,object_) shift to state 180
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 151
-- On prefixed_name shift to state 97
-- On object_list shift to state 201
-- On object_ shift to state 182
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 159
-- On iri shift to state 160
-- On graph_term shift to state 161
-- On graph_node shift to state 185
-- On collection shift to state 186
-- On boolean_literal shift to state 164
-- On blank_node_property_list shift to state 187
-- On blank_node shift to state 166
## Reductions:

State 171:
## Known stack suffix:
## LPAR
## LR(1) items:
collection -> LPAR . nonempty_list(graph_node) RPAR [ Var2 Var1 VALUES String_literal SERVICE SEMICOLON RPAR RBRACKET RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT COMMA Boolean Blank_node_label BIND ANON A ]
## Transitions:
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On String_literal shift to state 31
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On NIL shift to state 87
-- On LPAR shift to state 171
-- On LBRACKET shift to state 172
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On Boolean shift to state 139
-- On Blank_node_label shift to state 140
-- On ANON shift to state 141
-- On var_or_term shift to state 178
-- On var shift to state 143
-- On triples_node shift to state 179
-- On string shift to state 145
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 151
-- On prefixed_name shift to state 97
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 159
-- On nonempty_list(graph_node) shift to state 197
-- On iri shift to state 160
-- On graph_term shift to state 161
-- On graph_node shift to state 199
-- On collection shift to state 186
-- On boolean_literal shift to state 164
-- On blank_node_property_list shift to state 187
-- On blank_node shift to state 166
## Reductions:

State 172:
## Known stack suffix:
## LBRACKET
## LR(1) items:
blank_node_property_list -> LBRACKET . property_list_not_empty RBRACKET [ Var2 Var1 VALUES String_literal SERVICE SEMICOLON RPAR RBRACKET RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT COMMA Boolean Blank_node_label BIND ANON A ]
## Transitions:
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On Iriref_ shift to state 91
-- On A shift to state 173
-- On verb_object_list shift to state 174
-- On verb shift to state 177
-- On var_or_iri shift to state 188
-- On var shift to state 189
-- On property_list_not_empty shift to state 195
-- On prefixed_name shift to state 97
-- On iri shift to state 191
## Reductions:

State 173:
## Known stack suffix:
## A
## LR(1) items:
verb -> A . [ Var2 Var1 String_literal Pname_ns Pname_ln NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production verb -> A

State 174:
## Known stack suffix:
## verb_object_list
## LR(1) items:
property_list_not_empty -> verb_object_list . list(verb_object_list_l) [ RBRACKET RBRACE DOT ]
## Transitions:
-- On SEMICOLON shift to state 175
-- On verb_object_list_l shift to state 192
-- On list(verb_object_list_l) shift to state 194
## Reductions:
-- On RBRACKET reduce production list(verb_object_list_l) ->
-- On RBRACE reduce production list(verb_object_list_l) ->
-- On DOT reduce production list(verb_object_list_l) ->

State 175:
## Known stack suffix:
## SEMICOLON
## LR(1) items:
verb_object_list_l -> SEMICOLON . option(verb_object_list) [ SEMICOLON RBRACKET RBRACE DOT ]
## Transitions:
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On Iriref_ shift to state 91
-- On A shift to state 173
-- On verb_object_list shift to state 176
-- On verb shift to state 177
-- On var_or_iri shift to state 188
-- On var shift to state 189
-- On prefixed_name shift to state 97
-- On option(verb_object_list) shift to state 190
-- On iri shift to state 191
## Reductions:
-- On SEMICOLON reduce production option(verb_object_list) ->
-- On RBRACKET reduce production option(verb_object_list) ->
-- On RBRACE reduce production option(verb_object_list) ->
-- On DOT reduce production option(verb_object_list) ->

State 176:
## Known stack suffix:
## verb_object_list
## LR(1) items:
option(verb_object_list) -> verb_object_list . [ SEMICOLON RBRACKET RBRACE DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(verb_object_list) -> verb_object_list

State 177:
## Known stack suffix:
## verb
## LR(1) items:
verb_object_list -> verb . object_list [ SEMICOLON RBRACKET RBRACE DOT ]
## Transitions:
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On String_literal shift to state 31
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On NIL shift to state 87
-- On LPAR shift to state 171
-- On LBRACKET shift to state 172
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On Boolean shift to state 139
-- On Blank_node_label shift to state 140
-- On ANON shift to state 141
-- On var_or_term shift to state 178
-- On var shift to state 143
-- On triples_node shift to state 179
-- On string shift to state 145
-- On separated_nonempty_list(COMMA,object_) shift to state 180
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 151
-- On prefixed_name shift to state 97
-- On object_list shift to state 181
-- On object_ shift to state 182
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 159
-- On iri shift to state 160
-- On graph_term shift to state 161
-- On graph_node shift to state 185
-- On collection shift to state 186
-- On boolean_literal shift to state 164
-- On blank_node_property_list shift to state 187
-- On blank_node shift to state 166
## Reductions:

State 178:
## Known stack suffix:
## var_or_term
## LR(1) items:
graph_node -> var_or_term . [ Var2 Var1 VALUES String_literal SERVICE SEMICOLON RPAR RBRACKET RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT COMMA Boolean Blank_node_label BIND ANON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production graph_node -> var_or_term

State 179:
## Known stack suffix:
## triples_node
## LR(1) items:
graph_node -> triples_node . [ Var2 Var1 VALUES String_literal SERVICE SEMICOLON RPAR RBRACKET RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT COMMA Boolean Blank_node_label BIND ANON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production graph_node -> triples_node

State 180:
## Known stack suffix:
## separated_nonempty_list(COMMA,object_)
## LR(1) items:
object_list -> separated_nonempty_list(COMMA,object_) . [ VALUES SERVICE SEMICOLON RBRACKET RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER DOT BIND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production object_list -> separated_nonempty_list(COMMA,object_)

State 181:
## Known stack suffix:
## verb object_list
## LR(1) items:
verb_object_list -> verb object_list . [ SEMICOLON RBRACKET RBRACE DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production verb_object_list -> verb object_list

State 182:
## Known stack suffix:
## object_
## LR(1) items:
separated_nonempty_list(COMMA,object_) -> object_ . [ VALUES SERVICE SEMICOLON RBRACKET RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER DOT BIND ]
separated_nonempty_list(COMMA,object_) -> object_ . COMMA separated_nonempty_list(COMMA,object_) [ VALUES SERVICE SEMICOLON RBRACKET RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER DOT BIND ]
## Transitions:
-- On COMMA shift to state 183
## Reductions:
-- On VALUES reduce production separated_nonempty_list(COMMA,object_) -> object_
-- On SERVICE reduce production separated_nonempty_list(COMMA,object_) -> object_
-- On SEMICOLON reduce production separated_nonempty_list(COMMA,object_) -> object_
-- On RBRACKET reduce production separated_nonempty_list(COMMA,object_) -> object_
-- On RBRACE reduce production separated_nonempty_list(COMMA,object_) -> object_
-- On OPTIONAL reduce production separated_nonempty_list(COMMA,object_) -> object_
-- On MINUS reduce production separated_nonempty_list(COMMA,object_) -> object_
-- On LBRACE reduce production separated_nonempty_list(COMMA,object_) -> object_
-- On GRAPH reduce production separated_nonempty_list(COMMA,object_) -> object_
-- On FILTER reduce production separated_nonempty_list(COMMA,object_) -> object_
-- On DOT reduce production separated_nonempty_list(COMMA,object_) -> object_
-- On BIND reduce production separated_nonempty_list(COMMA,object_) -> object_

State 183:
## Known stack suffix:
## object_ COMMA
## LR(1) items:
separated_nonempty_list(COMMA,object_) -> object_ COMMA . separated_nonempty_list(COMMA,object_) [ VALUES SERVICE SEMICOLON RBRACKET RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER DOT BIND ]
## Transitions:
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On String_literal shift to state 31
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On NIL shift to state 87
-- On LPAR shift to state 171
-- On LBRACKET shift to state 172
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On Boolean shift to state 139
-- On Blank_node_label shift to state 140
-- On ANON shift to state 141
-- On var_or_term shift to state 178
-- On var shift to state 143
-- On triples_node shift to state 179
-- On string shift to state 145
-- On separated_nonempty_list(COMMA,object_) shift to state 184
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 151
-- On prefixed_name shift to state 97
-- On object_ shift to state 182
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 159
-- On iri shift to state 160
-- On graph_term shift to state 161
-- On graph_node shift to state 185
-- On collection shift to state 186
-- On boolean_literal shift to state 164
-- On blank_node_property_list shift to state 187
-- On blank_node shift to state 166
## Reductions:

State 184:
## Known stack suffix:
## object_ COMMA separated_nonempty_list(COMMA,object_)
## LR(1) items:
separated_nonempty_list(COMMA,object_) -> object_ COMMA separated_nonempty_list(COMMA,object_) . [ VALUES SERVICE SEMICOLON RBRACKET RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER DOT BIND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production separated_nonempty_list(COMMA,object_) -> object_ COMMA separated_nonempty_list(COMMA,object_)

State 185:
## Known stack suffix:
## graph_node
## LR(1) items:
object_ -> graph_node . [ VALUES SERVICE SEMICOLON RBRACKET RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER DOT COMMA BIND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production object_ -> graph_node

State 186:
## Known stack suffix:
## collection
## LR(1) items:
triples_node -> collection . [ Var2 Var1 VALUES String_literal SERVICE SEMICOLON RPAR RBRACKET RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT COMMA Boolean Blank_node_label BIND ANON A ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production triples_node -> collection

State 187:
## Known stack suffix:
## blank_node_property_list
## LR(1) items:
triples_node -> blank_node_property_list . [ Var2 Var1 VALUES String_literal SERVICE SEMICOLON RPAR RBRACKET RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT COMMA Boolean Blank_node_label BIND ANON A ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production triples_node -> blank_node_property_list

State 188:
## Known stack suffix:
## var_or_iri
## LR(1) items:
verb -> var_or_iri . [ Var2 Var1 String_literal Pname_ns Pname_ln NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production verb -> var_or_iri

State 189:
## Known stack suffix:
## var
## LR(1) items:
var_or_iri -> var . [ WHERE Var2 Var1 VALUES String_literal Pname_ns Pname_ln ORDER OFFSET NIL LPAR LIMIT LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer HAVING GROUP FROM EOF Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production var_or_iri -> var

State 190:
## Known stack suffix:
## SEMICOLON option(verb_object_list)
## LR(1) items:
verb_object_list_l -> SEMICOLON option(verb_object_list) . [ SEMICOLON RBRACKET RBRACE DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production verb_object_list_l -> SEMICOLON option(verb_object_list)

State 191:
## Known stack suffix:
## iri
## LR(1) items:
var_or_iri -> iri . [ WHERE Var2 Var1 VALUES String_literal Pname_ns Pname_ln ORDER OFFSET NIL LPAR LIMIT LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer HAVING GROUP FROM EOF Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production var_or_iri -> iri

State 192:
## Known stack suffix:
## verb_object_list_l
## LR(1) items:
list(verb_object_list_l) -> verb_object_list_l . list(verb_object_list_l) [ RBRACKET RBRACE DOT ]
## Transitions:
-- On SEMICOLON shift to state 175
-- On verb_object_list_l shift to state 192
-- On list(verb_object_list_l) shift to state 193
## Reductions:
-- On RBRACKET reduce production list(verb_object_list_l) ->
-- On RBRACE reduce production list(verb_object_list_l) ->
-- On DOT reduce production list(verb_object_list_l) ->

State 193:
## Known stack suffix:
## verb_object_list_l list(verb_object_list_l)
## LR(1) items:
list(verb_object_list_l) -> verb_object_list_l list(verb_object_list_l) . [ RBRACKET RBRACE DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list(verb_object_list_l) -> verb_object_list_l list(verb_object_list_l)

State 194:
## Known stack suffix:
## verb_object_list list(verb_object_list_l)
## LR(1) items:
property_list_not_empty -> verb_object_list list(verb_object_list_l) . [ RBRACKET RBRACE DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production property_list_not_empty -> verb_object_list list(verb_object_list_l)

State 195:
## Known stack suffix:
## LBRACKET property_list_not_empty
## LR(1) items:
blank_node_property_list -> LBRACKET property_list_not_empty . RBRACKET [ Var2 Var1 VALUES String_literal SERVICE SEMICOLON RPAR RBRACKET RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT COMMA Boolean Blank_node_label BIND ANON A ]
## Transitions:
-- On RBRACKET shift to state 196
## Reductions:

State 196:
## Known stack suffix:
## LBRACKET property_list_not_empty RBRACKET
## LR(1) items:
blank_node_property_list -> LBRACKET property_list_not_empty RBRACKET . [ Var2 Var1 VALUES String_literal SERVICE SEMICOLON RPAR RBRACKET RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT COMMA Boolean Blank_node_label BIND ANON A ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production blank_node_property_list -> LBRACKET property_list_not_empty RBRACKET

State 197:
## Known stack suffix:
## LPAR nonempty_list(graph_node)
## LR(1) items:
collection -> LPAR nonempty_list(graph_node) . RPAR [ Var2 Var1 VALUES String_literal SERVICE SEMICOLON RPAR RBRACKET RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT COMMA Boolean Blank_node_label BIND ANON A ]
## Transitions:
-- On RPAR shift to state 198
## Reductions:

State 198:
## Known stack suffix:
## LPAR nonempty_list(graph_node) RPAR
## LR(1) items:
collection -> LPAR nonempty_list(graph_node) RPAR . [ Var2 Var1 VALUES String_literal SERVICE SEMICOLON RPAR RBRACKET RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT COMMA Boolean Blank_node_label BIND ANON A ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production collection -> LPAR nonempty_list(graph_node) RPAR

State 199:
## Known stack suffix:
## graph_node
## LR(1) items:
nonempty_list(graph_node) -> graph_node . [ RPAR ]
nonempty_list(graph_node) -> graph_node . nonempty_list(graph_node) [ RPAR ]
## Transitions:
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On String_literal shift to state 31
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On NIL shift to state 87
-- On LPAR shift to state 171
-- On LBRACKET shift to state 172
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On Boolean shift to state 139
-- On Blank_node_label shift to state 140
-- On ANON shift to state 141
-- On var_or_term shift to state 178
-- On var shift to state 143
-- On triples_node shift to state 179
-- On string shift to state 145
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 151
-- On prefixed_name shift to state 97
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 159
-- On nonempty_list(graph_node) shift to state 200
-- On iri shift to state 160
-- On graph_term shift to state 161
-- On graph_node shift to state 199
-- On collection shift to state 186
-- On boolean_literal shift to state 164
-- On blank_node_property_list shift to state 187
-- On blank_node shift to state 166
## Reductions:
-- On RPAR reduce production nonempty_list(graph_node) -> graph_node

State 200:
## Known stack suffix:
## graph_node nonempty_list(graph_node)
## LR(1) items:
nonempty_list(graph_node) -> graph_node nonempty_list(graph_node) . [ RPAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nonempty_list(graph_node) -> graph_node nonempty_list(graph_node)

State 201:
## Known stack suffix:
## verb_path_or_simple object_list
## LR(1) items:
verbp_object_list -> verb_path_or_simple object_list . [ VALUES SERVICE SEMICOLON RBRACKET RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER DOT BIND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production verbp_object_list -> verb_path_or_simple object_list

State 202:
## Known stack suffix:
## var
## LR(1) items:
verb_path_or_simple -> var . [ Var2 Var1 String_literal Pname_ns Pname_ln NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production verb_path_or_simple -> var

State 203:
## Known stack suffix:
## path
## LR(1) items:
verb_path_or_simple -> path . [ Var2 Var1 String_literal Pname_ns Pname_ln NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production verb_path_or_simple -> path

State 204:
## Known stack suffix:
## SEMICOLON option(verbp_object_list)
## LR(1) items:
verbp_object_list_l -> SEMICOLON option(verbp_object_list) . [ VALUES SERVICE SEMICOLON RBRACKET RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER DOT BIND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production verbp_object_list_l -> SEMICOLON option(verbp_object_list)

State 205:
## Known stack suffix:
## verbp_object_list_l
## LR(1) items:
list(verbp_object_list_l) -> verbp_object_list_l . list(verbp_object_list_l) [ VALUES SERVICE RBRACKET RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER DOT BIND ]
## Transitions:
-- On SEMICOLON shift to state 168
-- On verbp_object_list_l shift to state 205
-- On list(verbp_object_list_l) shift to state 206
## Reductions:
-- On VALUES reduce production list(verbp_object_list_l) ->
-- On SERVICE reduce production list(verbp_object_list_l) ->
-- On RBRACKET reduce production list(verbp_object_list_l) ->
-- On RBRACE reduce production list(verbp_object_list_l) ->
-- On OPTIONAL reduce production list(verbp_object_list_l) ->
-- On MINUS reduce production list(verbp_object_list_l) ->
-- On LBRACE reduce production list(verbp_object_list_l) ->
-- On GRAPH reduce production list(verbp_object_list_l) ->
-- On FILTER reduce production list(verbp_object_list_l) ->
-- On DOT reduce production list(verbp_object_list_l) ->
-- On BIND reduce production list(verbp_object_list_l) ->

State 206:
## Known stack suffix:
## verbp_object_list_l list(verbp_object_list_l)
## LR(1) items:
list(verbp_object_list_l) -> verbp_object_list_l list(verbp_object_list_l) . [ VALUES SERVICE RBRACKET RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER DOT BIND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list(verbp_object_list_l) -> verbp_object_list_l list(verbp_object_list_l)

State 207:
## Known stack suffix:
## verb_path_or_simple object_list_path list(verbp_object_list_l)
## LR(1) items:
property_list_path_not_empty -> verb_path_or_simple object_list_path list(verbp_object_list_l) . [ VALUES SERVICE RBRACKET RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER DOT BIND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production property_list_path_not_empty -> verb_path_or_simple object_list_path list(verbp_object_list_l)

State 208:
## Known stack suffix:
## LBRACKET property_list_path_not_empty
## LR(1) items:
blank_node_property_list_path -> LBRACKET property_list_path_not_empty . RBRACKET [ Var2 Var1 VALUES String_literal SERVICE SEMICOLON RPAR RBRACKET RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer HAT GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT COMMA Boolean Blank_node_label BIND BANG ANON A ]
## Transitions:
-- On RBRACKET shift to state 209
## Reductions:

State 209:
## Known stack suffix:
## LBRACKET property_list_path_not_empty RBRACKET
## LR(1) items:
blank_node_property_list_path -> LBRACKET property_list_path_not_empty RBRACKET . [ Var2 Var1 VALUES String_literal SERVICE SEMICOLON RPAR RBRACKET RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer HAT GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT COMMA Boolean Blank_node_label BIND BANG ANON A ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production blank_node_property_list_path -> LBRACKET property_list_path_not_empty RBRACKET

State 210:
## Known stack suffix:
## LPAR nonempty_list(graph_node_path)
## LR(1) items:
collection_path -> LPAR nonempty_list(graph_node_path) . RPAR [ Var2 Var1 VALUES String_literal SERVICE SEMICOLON RPAR RBRACKET RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer HAT GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT COMMA Boolean Blank_node_label BIND BANG ANON A ]
## Transitions:
-- On RPAR shift to state 211
## Reductions:

State 211:
## Known stack suffix:
## LPAR nonempty_list(graph_node_path) RPAR
## LR(1) items:
collection_path -> LPAR nonempty_list(graph_node_path) RPAR . [ Var2 Var1 VALUES String_literal SERVICE SEMICOLON RPAR RBRACKET RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer HAT GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT COMMA Boolean Blank_node_label BIND BANG ANON A ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production collection_path -> LPAR nonempty_list(graph_node_path) RPAR

State 212:
## Known stack suffix:
## graph_node_path
## LR(1) items:
nonempty_list(graph_node_path) -> graph_node_path . [ RPAR ]
nonempty_list(graph_node_path) -> graph_node_path . nonempty_list(graph_node_path) [ RPAR ]
## Transitions:
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On String_literal shift to state 31
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On NIL shift to state 87
-- On LPAR shift to state 88
-- On LBRACKET shift to state 89
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On Boolean shift to state 139
-- On Blank_node_label shift to state 140
-- On ANON shift to state 141
-- On var_or_term shift to state 142
-- On var shift to state 143
-- On triples_node_path shift to state 144
-- On string shift to state 145
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 151
-- On prefixed_name shift to state 97
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 159
-- On nonempty_list(graph_node_path) shift to state 213
-- On iri shift to state 160
-- On graph_term shift to state 161
-- On graph_node_path shift to state 212
-- On collection_path shift to state 163
-- On boolean_literal shift to state 164
-- On blank_node_property_list_path shift to state 165
-- On blank_node shift to state 166
## Reductions:
-- On RPAR reduce production nonempty_list(graph_node_path) -> graph_node_path

State 213:
## Known stack suffix:
## graph_node_path nonempty_list(graph_node_path)
## LR(1) items:
nonempty_list(graph_node_path) -> graph_node_path nonempty_list(graph_node_path) . [ RPAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nonempty_list(graph_node_path) -> graph_node_path nonempty_list(graph_node_path)

State 214:
## Known stack suffix:
## var_or_term
## LR(1) items:
triples_same_subject_path -> var_or_term . property_list_path_not_empty [ VALUES SERVICE RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER DOT BIND ]
## Transitions:
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On LPAR shift to state 90
-- On Iriref_ shift to state 91
-- On HAT shift to state 92
-- On BANG shift to state 93
-- On A shift to state 108
-- On verb_path_or_simple shift to state 129
-- On var shift to state 202
-- On separated_nonempty_list(SLASH,path_elt_or_inverse) shift to state 117
-- On separated_nonempty_list(PIPE,path_sequence) shift to state 118
-- On property_list_path_not_empty shift to state 215
-- On prefixed_name shift to state 97
-- On path_sequence shift to state 119
-- On path_primary shift to state 109
-- On path_elt_or_inverse shift to state 122
-- On path_elt shift to state 125
-- On path_alternative shift to state 126
-- On path shift to state 203
-- On iri shift to state 116
## Reductions:

State 215:
## Known stack suffix:
## var_or_term property_list_path_not_empty
## LR(1) items:
triples_same_subject_path -> var_or_term property_list_path_not_empty . [ VALUES SERVICE RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER DOT BIND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production triples_same_subject_path -> var_or_term property_list_path_not_empty

State 216:
## Known stack suffix:
## triples_same_subject_path
## LR(1) items:
triples_block_details -> triples_same_subject_path . option(triples_block_details2) [ VALUES SERVICE RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER BIND ]
## Transitions:
-- On DOT shift to state 217
-- On triples_block_details2 shift to state 224
-- On option(triples_block_details2) shift to state 225
## Reductions:
-- On VALUES reduce production option(triples_block_details2) ->
-- On SERVICE reduce production option(triples_block_details2) ->
-- On RBRACE reduce production option(triples_block_details2) ->
-- On OPTIONAL reduce production option(triples_block_details2) ->
-- On MINUS reduce production option(triples_block_details2) ->
-- On LBRACE reduce production option(triples_block_details2) ->
-- On GRAPH reduce production option(triples_block_details2) ->
-- On FILTER reduce production option(triples_block_details2) ->
-- On BIND reduce production option(triples_block_details2) ->

State 217:
## Known stack suffix:
## DOT
## LR(1) items:
triples_block_details2 -> DOT . option(triples_block_details) [ VALUES SERVICE RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER BIND ]
## Transitions:
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On String_literal shift to state 31
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On NIL shift to state 87
-- On LPAR shift to state 88
-- On LBRACKET shift to state 89
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On Boolean shift to state 139
-- On Blank_node_label shift to state 140
-- On ANON shift to state 141
-- On var_or_term shift to state 214
-- On var shift to state 143
-- On triples_same_subject_path shift to state 216
-- On triples_node_path shift to state 218
-- On triples_block_details shift to state 222
-- On string shift to state 145
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 151
-- On prefixed_name shift to state 97
-- On option(triples_block_details) shift to state 223
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 159
-- On iri shift to state 160
-- On graph_term shift to state 161
-- On collection_path shift to state 163
-- On boolean_literal shift to state 164
-- On blank_node_property_list_path shift to state 165
-- On blank_node shift to state 166
## Reductions:
-- On VALUES reduce production option(triples_block_details) ->
-- On SERVICE reduce production option(triples_block_details) ->
-- On RBRACE reduce production option(triples_block_details) ->
-- On OPTIONAL reduce production option(triples_block_details) ->
-- On MINUS reduce production option(triples_block_details) ->
-- On LBRACE reduce production option(triples_block_details) ->
-- On GRAPH reduce production option(triples_block_details) ->
-- On FILTER reduce production option(triples_block_details) ->
-- On BIND reduce production option(triples_block_details) ->

State 218:
## Known stack suffix:
## triples_node_path
## LR(1) items:
triples_same_subject_path -> triples_node_path . property_list_path [ VALUES SERVICE RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER DOT BIND ]
## Transitions:
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On LPAR shift to state 90
-- On Iriref_ shift to state 91
-- On HAT shift to state 92
-- On BANG shift to state 93
-- On A shift to state 108
-- On verb_path_or_simple shift to state 129
-- On var shift to state 202
-- On separated_nonempty_list(SLASH,path_elt_or_inverse) shift to state 117
-- On separated_nonempty_list(PIPE,path_sequence) shift to state 118
-- On property_list_path_not_empty shift to state 219
-- On property_list_path shift to state 220
-- On prefixed_name shift to state 97
-- On path_sequence shift to state 119
-- On path_primary shift to state 109
-- On path_elt_or_inverse shift to state 122
-- On path_elt shift to state 125
-- On path_alternative shift to state 126
-- On path shift to state 203
-- On option(property_list_path_not_empty) shift to state 221
-- On iri shift to state 116
## Reductions:
-- On VALUES reduce production option(property_list_path_not_empty) ->
-- On SERVICE reduce production option(property_list_path_not_empty) ->
-- On RBRACE reduce production option(property_list_path_not_empty) ->
-- On OPTIONAL reduce production option(property_list_path_not_empty) ->
-- On MINUS reduce production option(property_list_path_not_empty) ->
-- On LBRACE reduce production option(property_list_path_not_empty) ->
-- On GRAPH reduce production option(property_list_path_not_empty) ->
-- On FILTER reduce production option(property_list_path_not_empty) ->
-- On DOT reduce production option(property_list_path_not_empty) ->
-- On BIND reduce production option(property_list_path_not_empty) ->

State 219:
## Known stack suffix:
## property_list_path_not_empty
## LR(1) items:
option(property_list_path_not_empty) -> property_list_path_not_empty . [ VALUES SERVICE RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER DOT BIND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(property_list_path_not_empty) -> property_list_path_not_empty

State 220:
## Known stack suffix:
## triples_node_path property_list_path
## LR(1) items:
triples_same_subject_path -> triples_node_path property_list_path . [ VALUES SERVICE RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER DOT BIND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production triples_same_subject_path -> triples_node_path property_list_path

State 221:
## Known stack suffix:
## option(property_list_path_not_empty)
## LR(1) items:
property_list_path -> option(property_list_path_not_empty) . [ VALUES SERVICE RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER DOT BIND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production property_list_path -> option(property_list_path_not_empty)

State 222:
## Known stack suffix:
## triples_block_details
## LR(1) items:
option(triples_block_details) -> triples_block_details . [ VALUES SERVICE RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER BIND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(triples_block_details) -> triples_block_details

State 223:
## Known stack suffix:
## DOT option(triples_block_details)
## LR(1) items:
triples_block_details2 -> DOT option(triples_block_details) . [ VALUES SERVICE RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER BIND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production triples_block_details2 -> DOT option(triples_block_details)

State 224:
## Known stack suffix:
## triples_block_details2
## LR(1) items:
option(triples_block_details2) -> triples_block_details2 . [ VALUES SERVICE RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER BIND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(triples_block_details2) -> triples_block_details2

State 225:
## Known stack suffix:
## triples_same_subject_path option(triples_block_details2)
## LR(1) items:
triples_block_details -> triples_same_subject_path option(triples_block_details2) . [ VALUES SERVICE RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER BIND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production triples_block_details -> triples_same_subject_path option(triples_block_details2)

State 226:
## Known stack suffix:
## triples_block_details
## LR(1) items:
triples_block -> triples_block_details . [ VALUES SERVICE RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER BIND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production triples_block -> triples_block_details

State 227:
## Known stack suffix:
## triples_block
## LR(1) items:
option(triples_block) -> triples_block . [ VALUES SERVICE RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER BIND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(triples_block) -> triples_block

State 228:
## Known stack suffix:
## LBRACE subselect
## LR(1) items:
group_graph_pattern -> LBRACE subselect . RBRACE [ YEAR Var2 Var1 VALUES UUID URI UNION UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GROUP GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On RBRACE shift to state 229
## Reductions:

State 229:
## Known stack suffix:
## LBRACE subselect RBRACE
## LR(1) items:
group_graph_pattern -> LBRACE subselect RBRACE . [ YEAR Var2 Var1 VALUES UUID URI UNION UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GROUP GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production group_graph_pattern -> LBRACE subselect RBRACE

State 230:
## Known stack suffix:
## select_clause
## LR(1) items:
subselect -> select_clause . where_clause solution_modifier values_clause [ RBRACE ]
## Transitions:
-- On WHERE shift to state 231
-- On where_clause shift to state 232
-- On option(WHERE) shift to state 526
## Reductions:
-- On LBRACE reduce production option(WHERE) ->

State 231:
## Known stack suffix:
## WHERE
## LR(1) items:
option(WHERE) -> WHERE . [ LBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(WHERE) -> WHERE

State 232:
## Known stack suffix:
## select_clause where_clause
## LR(1) items:
subselect -> select_clause where_clause . solution_modifier values_clause [ RBRACE ]
## Transitions:
-- On GROUP shift to state 233
-- On solution_modifier shift to state 453
-- On option(group_clause) shift to state 488
-- On group_clause shift to state 525
## Reductions:
-- On VALUES reduce production option(group_clause) ->
-- On RBRACE reduce production option(group_clause) ->
-- On ORDER reduce production option(group_clause) ->
-- On OFFSET reduce production option(group_clause) ->
-- On LIMIT reduce production option(group_clause) ->
-- On HAVING reduce production option(group_clause) ->

State 233:
## Known stack suffix:
## GROUP
## LR(1) items:
group_clause -> GROUP . BY nonempty_list(group_condition) [ VALUES RBRACE ORDER OFFSET LIMIT HAVING EOF ]
## Transitions:
-- On BY shift to state 234
## Reductions:

State 234:
## Known stack suffix:
## GROUP BY
## LR(1) items:
group_clause -> GROUP BY . nonempty_list(group_condition) [ VALUES RBRACE ORDER OFFSET LIMIT HAVING EOF ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 443
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On nonempty_list(group_condition) shift to state 444
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On group_var shift to state 445
-- On group_condition shift to state 446
-- On function_call shift to state 448
-- On expression shift to state 449
-- On built_in_call shift to state 452
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 235:
## Known stack suffix:
## MONTH
## LR(1) items:
built_in_call -> MONTH . LPAR expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On LPAR shift to state 236
## Reductions:

State 236:
## Known stack suffix:
## MONTH LPAR
## LR(1) items:
built_in_call -> MONTH LPAR . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 441
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 237:
## Known stack suffix:
## MINUTES
## LR(1) items:
built_in_call -> MINUTES . LPAR expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On LPAR shift to state 238
## Reductions:

State 238:
## Known stack suffix:
## MINUTES LPAR
## LR(1) items:
built_in_call -> MINUTES LPAR . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 439
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 239:
## Known stack suffix:
## MINUS
## LR(1) items:
numexp -> MINUS . expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 438
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 240:
## Known stack suffix:
## MIN
## LR(1) items:
aggregate -> MIN . LPAR option(DISTINCT) expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On LPAR shift to state 241
## Reductions:

State 241:
## Known stack suffix:
## MIN LPAR
## LR(1) items:
aggregate -> MIN LPAR . option(DISTINCT) expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On DISTINCT shift to state 34
-- On option(DISTINCT) shift to state 242
## Reductions:
-- On YEAR reduce production option(DISTINCT) ->
-- On Var2 reduce production option(DISTINCT) ->
-- On Var1 reduce production option(DISTINCT) ->
-- On UUID reduce production option(DISTINCT) ->
-- On URI reduce production option(DISTINCT) ->
-- On UCASE reduce production option(DISTINCT) ->
-- On TZ reduce production option(DISTINCT) ->
-- On TIMEZONE reduce production option(DISTINCT) ->
-- On String_literal reduce production option(DISTINCT) ->
-- On SUM reduce production option(DISTINCT) ->
-- On SUBSTR reduce production option(DISTINCT) ->
-- On STRUUID reduce production option(DISTINCT) ->
-- On STRSTARTS reduce production option(DISTINCT) ->
-- On STRLEN reduce production option(DISTINCT) ->
-- On STRLANG reduce production option(DISTINCT) ->
-- On STRENDS reduce production option(DISTINCT) ->
-- On STRDT reduce production option(DISTINCT) ->
-- On STRBEFORE reduce production option(DISTINCT) ->
-- On STRAFTER reduce production option(DISTINCT) ->
-- On STR reduce production option(DISTINCT) ->
-- On SHA512 reduce production option(DISTINCT) ->
-- On SHA384 reduce production option(DISTINCT) ->
-- On SHA256 reduce production option(DISTINCT) ->
-- On SHA1 reduce production option(DISTINCT) ->
-- On SECONDS reduce production option(DISTINCT) ->
-- On SAMPLE reduce production option(DISTINCT) ->
-- On SAMETERM reduce production option(DISTINCT) ->
-- On ROUND reduce production option(DISTINCT) ->
-- On REPLACE reduce production option(DISTINCT) ->
-- On REGEX reduce production option(DISTINCT) ->
-- On RAND reduce production option(DISTINCT) ->
-- On Pname_ns reduce production option(DISTINCT) ->
-- On Pname_ln reduce production option(DISTINCT) ->
-- On PLUS reduce production option(DISTINCT) ->
-- On NOW reduce production option(DISTINCT) ->
-- On NOT reduce production option(DISTINCT) ->
-- On MONTH reduce production option(DISTINCT) ->
-- On MINUTES reduce production option(DISTINCT) ->
-- On MINUS reduce production option(DISTINCT) ->
-- On MIN reduce production option(DISTINCT) ->
-- On MD5 reduce production option(DISTINCT) ->
-- On MAX reduce production option(DISTINCT) ->
-- On LPAR reduce production option(DISTINCT) ->
-- On LCASE reduce production option(DISTINCT) ->
-- On LANGMATCHES reduce production option(DISTINCT) ->
-- On LANG reduce production option(DISTINCT) ->
-- On Iriref_ reduce production option(DISTINCT) ->
-- On Integer_positive reduce production option(DISTINCT) ->
-- On Integer_negative reduce production option(DISTINCT) ->
-- On Integer reduce production option(DISTINCT) ->
-- On ISURI reduce production option(DISTINCT) ->
-- On ISNUMERIC reduce production option(DISTINCT) ->
-- On ISLITERAL reduce production option(DISTINCT) ->
-- On ISIRI reduce production option(DISTINCT) ->
-- On ISBLANK reduce production option(DISTINCT) ->
-- On IRI reduce production option(DISTINCT) ->
-- On IF reduce production option(DISTINCT) ->
-- On HOURS reduce production option(DISTINCT) ->
-- On GROUP_CONCAT reduce production option(DISTINCT) ->
-- On FLOOR reduce production option(DISTINCT) ->
-- On EXISTS reduce production option(DISTINCT) ->
-- On ENCODE_FOR_URI reduce production option(DISTINCT) ->
-- On Double_positive reduce production option(DISTINCT) ->
-- On Double_negative reduce production option(DISTINCT) ->
-- On Double reduce production option(DISTINCT) ->
-- On Decimal_positive reduce production option(DISTINCT) ->
-- On Decimal_negative reduce production option(DISTINCT) ->
-- On Decimal reduce production option(DISTINCT) ->
-- On DAY reduce production option(DISTINCT) ->
-- On DATATYPE reduce production option(DISTINCT) ->
-- On COUNT reduce production option(DISTINCT) ->
-- On CONTAINS reduce production option(DISTINCT) ->
-- On CONCAT reduce production option(DISTINCT) ->
-- On COALESCE reduce production option(DISTINCT) ->
-- On CEIL reduce production option(DISTINCT) ->
-- On Boolean reduce production option(DISTINCT) ->
-- On BOUND reduce production option(DISTINCT) ->
-- On BNODE reduce production option(DISTINCT) ->
-- On BANG reduce production option(DISTINCT) ->
-- On AVG reduce production option(DISTINCT) ->
-- On ABS reduce production option(DISTINCT) ->

State 242:
## Known stack suffix:
## MIN LPAR option(DISTINCT)
## LR(1) items:
aggregate -> MIN LPAR option(DISTINCT) . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 436
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 243:
## Known stack suffix:
## MD5
## LR(1) items:
built_in_call -> MD5 . LPAR expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On LPAR shift to state 244
## Reductions:

State 244:
## Known stack suffix:
## MD5 LPAR
## LR(1) items:
built_in_call -> MD5 LPAR . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 434
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 245:
## Known stack suffix:
## MAX
## LR(1) items:
aggregate -> MAX . LPAR option(DISTINCT) expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On LPAR shift to state 246
## Reductions:

State 246:
## Known stack suffix:
## MAX LPAR
## LR(1) items:
aggregate -> MAX LPAR . option(DISTINCT) expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On DISTINCT shift to state 34
-- On option(DISTINCT) shift to state 247
## Reductions:
-- On YEAR reduce production option(DISTINCT) ->
-- On Var2 reduce production option(DISTINCT) ->
-- On Var1 reduce production option(DISTINCT) ->
-- On UUID reduce production option(DISTINCT) ->
-- On URI reduce production option(DISTINCT) ->
-- On UCASE reduce production option(DISTINCT) ->
-- On TZ reduce production option(DISTINCT) ->
-- On TIMEZONE reduce production option(DISTINCT) ->
-- On String_literal reduce production option(DISTINCT) ->
-- On SUM reduce production option(DISTINCT) ->
-- On SUBSTR reduce production option(DISTINCT) ->
-- On STRUUID reduce production option(DISTINCT) ->
-- On STRSTARTS reduce production option(DISTINCT) ->
-- On STRLEN reduce production option(DISTINCT) ->
-- On STRLANG reduce production option(DISTINCT) ->
-- On STRENDS reduce production option(DISTINCT) ->
-- On STRDT reduce production option(DISTINCT) ->
-- On STRBEFORE reduce production option(DISTINCT) ->
-- On STRAFTER reduce production option(DISTINCT) ->
-- On STR reduce production option(DISTINCT) ->
-- On SHA512 reduce production option(DISTINCT) ->
-- On SHA384 reduce production option(DISTINCT) ->
-- On SHA256 reduce production option(DISTINCT) ->
-- On SHA1 reduce production option(DISTINCT) ->
-- On SECONDS reduce production option(DISTINCT) ->
-- On SAMPLE reduce production option(DISTINCT) ->
-- On SAMETERM reduce production option(DISTINCT) ->
-- On ROUND reduce production option(DISTINCT) ->
-- On REPLACE reduce production option(DISTINCT) ->
-- On REGEX reduce production option(DISTINCT) ->
-- On RAND reduce production option(DISTINCT) ->
-- On Pname_ns reduce production option(DISTINCT) ->
-- On Pname_ln reduce production option(DISTINCT) ->
-- On PLUS reduce production option(DISTINCT) ->
-- On NOW reduce production option(DISTINCT) ->
-- On NOT reduce production option(DISTINCT) ->
-- On MONTH reduce production option(DISTINCT) ->
-- On MINUTES reduce production option(DISTINCT) ->
-- On MINUS reduce production option(DISTINCT) ->
-- On MIN reduce production option(DISTINCT) ->
-- On MD5 reduce production option(DISTINCT) ->
-- On MAX reduce production option(DISTINCT) ->
-- On LPAR reduce production option(DISTINCT) ->
-- On LCASE reduce production option(DISTINCT) ->
-- On LANGMATCHES reduce production option(DISTINCT) ->
-- On LANG reduce production option(DISTINCT) ->
-- On Iriref_ reduce production option(DISTINCT) ->
-- On Integer_positive reduce production option(DISTINCT) ->
-- On Integer_negative reduce production option(DISTINCT) ->
-- On Integer reduce production option(DISTINCT) ->
-- On ISURI reduce production option(DISTINCT) ->
-- On ISNUMERIC reduce production option(DISTINCT) ->
-- On ISLITERAL reduce production option(DISTINCT) ->
-- On ISIRI reduce production option(DISTINCT) ->
-- On ISBLANK reduce production option(DISTINCT) ->
-- On IRI reduce production option(DISTINCT) ->
-- On IF reduce production option(DISTINCT) ->
-- On HOURS reduce production option(DISTINCT) ->
-- On GROUP_CONCAT reduce production option(DISTINCT) ->
-- On FLOOR reduce production option(DISTINCT) ->
-- On EXISTS reduce production option(DISTINCT) ->
-- On ENCODE_FOR_URI reduce production option(DISTINCT) ->
-- On Double_positive reduce production option(DISTINCT) ->
-- On Double_negative reduce production option(DISTINCT) ->
-- On Double reduce production option(DISTINCT) ->
-- On Decimal_positive reduce production option(DISTINCT) ->
-- On Decimal_negative reduce production option(DISTINCT) ->
-- On Decimal reduce production option(DISTINCT) ->
-- On DAY reduce production option(DISTINCT) ->
-- On DATATYPE reduce production option(DISTINCT) ->
-- On COUNT reduce production option(DISTINCT) ->
-- On CONTAINS reduce production option(DISTINCT) ->
-- On CONCAT reduce production option(DISTINCT) ->
-- On COALESCE reduce production option(DISTINCT) ->
-- On CEIL reduce production option(DISTINCT) ->
-- On Boolean reduce production option(DISTINCT) ->
-- On BOUND reduce production option(DISTINCT) ->
-- On BNODE reduce production option(DISTINCT) ->
-- On BANG reduce production option(DISTINCT) ->
-- On AVG reduce production option(DISTINCT) ->
-- On ABS reduce production option(DISTINCT) ->

State 247:
## Known stack suffix:
## MAX LPAR option(DISTINCT)
## LR(1) items:
aggregate -> MAX LPAR option(DISTINCT) . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 432
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 248:
## Known stack suffix:
## LPAR
## LR(1) items:
bracketted_expression -> LPAR . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 430
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 249:
## Known stack suffix:
## LCASE
## LR(1) items:
built_in_call -> LCASE . LPAR expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On LPAR shift to state 250
## Reductions:

State 250:
## Known stack suffix:
## LCASE LPAR
## LR(1) items:
built_in_call -> LCASE LPAR . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 428
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 251:
## Known stack suffix:
## LANGMATCHES
## LR(1) items:
built_in_call -> LANGMATCHES . LPAR expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On LPAR shift to state 252
## Reductions:

State 252:
## Known stack suffix:
## LANGMATCHES LPAR
## LR(1) items:
built_in_call -> LANGMATCHES LPAR . expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 424
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 253:
## Known stack suffix:
## LANG
## LR(1) items:
built_in_call -> LANG . LPAR expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On LPAR shift to state 254
## Reductions:

State 254:
## Known stack suffix:
## LANG LPAR
## LR(1) items:
built_in_call -> LANG LPAR . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 422
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 255:
## Known stack suffix:
## ISURI
## LR(1) items:
built_in_call -> ISURI . LPAR expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On LPAR shift to state 256
## Reductions:

State 256:
## Known stack suffix:
## ISURI LPAR
## LR(1) items:
built_in_call -> ISURI LPAR . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 420
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 257:
## Known stack suffix:
## ISNUMERIC
## LR(1) items:
built_in_call -> ISNUMERIC . LPAR expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On LPAR shift to state 258
## Reductions:

State 258:
## Known stack suffix:
## ISNUMERIC LPAR
## LR(1) items:
built_in_call -> ISNUMERIC LPAR . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 418
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 259:
## Known stack suffix:
## ISLITERAL
## LR(1) items:
built_in_call -> ISLITERAL . LPAR expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On LPAR shift to state 260
## Reductions:

State 260:
## Known stack suffix:
## ISLITERAL LPAR
## LR(1) items:
built_in_call -> ISLITERAL LPAR . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 416
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 261:
## Known stack suffix:
## ISIRI
## LR(1) items:
built_in_call -> ISIRI . LPAR expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On LPAR shift to state 262
## Reductions:

State 262:
## Known stack suffix:
## ISIRI LPAR
## LR(1) items:
built_in_call -> ISIRI LPAR . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 414
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 263:
## Known stack suffix:
## ISBLANK
## LR(1) items:
built_in_call -> ISBLANK . LPAR expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On LPAR shift to state 264
## Reductions:

State 264:
## Known stack suffix:
## ISBLANK LPAR
## LR(1) items:
built_in_call -> ISBLANK LPAR . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 412
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 265:
## Known stack suffix:
## IRI
## LR(1) items:
built_in_call -> IRI . LPAR expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On LPAR shift to state 266
## Reductions:

State 266:
## Known stack suffix:
## IRI LPAR
## LR(1) items:
built_in_call -> IRI LPAR . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 410
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 267:
## Known stack suffix:
## IF
## LR(1) items:
built_in_call -> IF . LPAR expression COMMA expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On LPAR shift to state 268
## Reductions:

State 268:
## Known stack suffix:
## IF LPAR
## LR(1) items:
built_in_call -> IF LPAR . expression COMMA expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 404
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 269:
## Known stack suffix:
## HOURS
## LR(1) items:
built_in_call -> HOURS . LPAR expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On LPAR shift to state 270
## Reductions:

State 270:
## Known stack suffix:
## HOURS LPAR
## LR(1) items:
built_in_call -> HOURS LPAR . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 402
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 271:
## Known stack suffix:
## GROUP_CONCAT
## LR(1) items:
aggregate -> GROUP_CONCAT . LPAR option(DISTINCT) expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
aggregate -> GROUP_CONCAT . LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On LPAR shift to state 272
## Reductions:

State 272:
## Known stack suffix:
## GROUP_CONCAT LPAR
## LR(1) items:
aggregate -> GROUP_CONCAT LPAR . option(DISTINCT) expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
aggregate -> GROUP_CONCAT LPAR . option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On DISTINCT shift to state 34
-- On option(DISTINCT) shift to state 273
## Reductions:
-- On YEAR reduce production option(DISTINCT) ->
-- On Var2 reduce production option(DISTINCT) ->
-- On Var1 reduce production option(DISTINCT) ->
-- On UUID reduce production option(DISTINCT) ->
-- On URI reduce production option(DISTINCT) ->
-- On UCASE reduce production option(DISTINCT) ->
-- On TZ reduce production option(DISTINCT) ->
-- On TIMEZONE reduce production option(DISTINCT) ->
-- On String_literal reduce production option(DISTINCT) ->
-- On SUM reduce production option(DISTINCT) ->
-- On SUBSTR reduce production option(DISTINCT) ->
-- On STRUUID reduce production option(DISTINCT) ->
-- On STRSTARTS reduce production option(DISTINCT) ->
-- On STRLEN reduce production option(DISTINCT) ->
-- On STRLANG reduce production option(DISTINCT) ->
-- On STRENDS reduce production option(DISTINCT) ->
-- On STRDT reduce production option(DISTINCT) ->
-- On STRBEFORE reduce production option(DISTINCT) ->
-- On STRAFTER reduce production option(DISTINCT) ->
-- On STR reduce production option(DISTINCT) ->
-- On SHA512 reduce production option(DISTINCT) ->
-- On SHA384 reduce production option(DISTINCT) ->
-- On SHA256 reduce production option(DISTINCT) ->
-- On SHA1 reduce production option(DISTINCT) ->
-- On SECONDS reduce production option(DISTINCT) ->
-- On SAMPLE reduce production option(DISTINCT) ->
-- On SAMETERM reduce production option(DISTINCT) ->
-- On ROUND reduce production option(DISTINCT) ->
-- On REPLACE reduce production option(DISTINCT) ->
-- On REGEX reduce production option(DISTINCT) ->
-- On RAND reduce production option(DISTINCT) ->
-- On Pname_ns reduce production option(DISTINCT) ->
-- On Pname_ln reduce production option(DISTINCT) ->
-- On PLUS reduce production option(DISTINCT) ->
-- On NOW reduce production option(DISTINCT) ->
-- On NOT reduce production option(DISTINCT) ->
-- On MONTH reduce production option(DISTINCT) ->
-- On MINUTES reduce production option(DISTINCT) ->
-- On MINUS reduce production option(DISTINCT) ->
-- On MIN reduce production option(DISTINCT) ->
-- On MD5 reduce production option(DISTINCT) ->
-- On MAX reduce production option(DISTINCT) ->
-- On LPAR reduce production option(DISTINCT) ->
-- On LCASE reduce production option(DISTINCT) ->
-- On LANGMATCHES reduce production option(DISTINCT) ->
-- On LANG reduce production option(DISTINCT) ->
-- On Iriref_ reduce production option(DISTINCT) ->
-- On Integer_positive reduce production option(DISTINCT) ->
-- On Integer_negative reduce production option(DISTINCT) ->
-- On Integer reduce production option(DISTINCT) ->
-- On ISURI reduce production option(DISTINCT) ->
-- On ISNUMERIC reduce production option(DISTINCT) ->
-- On ISLITERAL reduce production option(DISTINCT) ->
-- On ISIRI reduce production option(DISTINCT) ->
-- On ISBLANK reduce production option(DISTINCT) ->
-- On IRI reduce production option(DISTINCT) ->
-- On IF reduce production option(DISTINCT) ->
-- On HOURS reduce production option(DISTINCT) ->
-- On GROUP_CONCAT reduce production option(DISTINCT) ->
-- On FLOOR reduce production option(DISTINCT) ->
-- On EXISTS reduce production option(DISTINCT) ->
-- On ENCODE_FOR_URI reduce production option(DISTINCT) ->
-- On Double_positive reduce production option(DISTINCT) ->
-- On Double_negative reduce production option(DISTINCT) ->
-- On Double reduce production option(DISTINCT) ->
-- On Decimal_positive reduce production option(DISTINCT) ->
-- On Decimal_negative reduce production option(DISTINCT) ->
-- On Decimal reduce production option(DISTINCT) ->
-- On DAY reduce production option(DISTINCT) ->
-- On DATATYPE reduce production option(DISTINCT) ->
-- On COUNT reduce production option(DISTINCT) ->
-- On CONTAINS reduce production option(DISTINCT) ->
-- On CONCAT reduce production option(DISTINCT) ->
-- On COALESCE reduce production option(DISTINCT) ->
-- On CEIL reduce production option(DISTINCT) ->
-- On Boolean reduce production option(DISTINCT) ->
-- On BOUND reduce production option(DISTINCT) ->
-- On BNODE reduce production option(DISTINCT) ->
-- On BANG reduce production option(DISTINCT) ->
-- On AVG reduce production option(DISTINCT) ->
-- On ABS reduce production option(DISTINCT) ->

State 273:
## Known stack suffix:
## GROUP_CONCAT LPAR option(DISTINCT)
## LR(1) items:
aggregate -> GROUP_CONCAT LPAR option(DISTINCT) . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
aggregate -> GROUP_CONCAT LPAR option(DISTINCT) . expression SEMICOLON SEPARATOR EQUAL string RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 395
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 274:
## Known stack suffix:
## FLOOR
## LR(1) items:
built_in_call -> FLOOR . LPAR expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On LPAR shift to state 275
## Reductions:

State 275:
## Known stack suffix:
## FLOOR LPAR
## LR(1) items:
built_in_call -> FLOOR LPAR . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 393
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 276:
## Known stack suffix:
## EXISTS
## LR(1) items:
built_in_call -> EXISTS . group_graph_pattern [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On LBRACE shift to state 86
-- On group_graph_pattern shift to state 277
## Reductions:

State 277:
## Known stack suffix:
## EXISTS group_graph_pattern
## LR(1) items:
built_in_call -> EXISTS group_graph_pattern . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production built_in_call -> EXISTS group_graph_pattern

State 278:
## Known stack suffix:
## ENCODE_FOR_URI
## LR(1) items:
built_in_call -> ENCODE_FOR_URI . LPAR expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On LPAR shift to state 279
## Reductions:

State 279:
## Known stack suffix:
## ENCODE_FOR_URI LPAR
## LR(1) items:
built_in_call -> ENCODE_FOR_URI LPAR . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 391
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 280:
## Known stack suffix:
## DAY
## LR(1) items:
built_in_call -> DAY . LPAR expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On LPAR shift to state 281
## Reductions:

State 281:
## Known stack suffix:
## DAY LPAR
## LR(1) items:
built_in_call -> DAY LPAR . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 389
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 282:
## Known stack suffix:
## DATATYPE
## LR(1) items:
built_in_call -> DATATYPE . LPAR expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On LPAR shift to state 283
## Reductions:

State 283:
## Known stack suffix:
## DATATYPE LPAR
## LR(1) items:
built_in_call -> DATATYPE LPAR . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 387
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 284:
## Known stack suffix:
## COUNT
## LR(1) items:
aggregate -> COUNT . LPAR option(DISTINCT) STAR RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
aggregate -> COUNT . LPAR option(DISTINCT) expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On LPAR shift to state 285
## Reductions:

State 285:
## Known stack suffix:
## COUNT LPAR
## LR(1) items:
aggregate -> COUNT LPAR . option(DISTINCT) STAR RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
aggregate -> COUNT LPAR . option(DISTINCT) expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On DISTINCT shift to state 34
-- On option(DISTINCT) shift to state 286
## Reductions:
-- On YEAR reduce production option(DISTINCT) ->
-- On Var2 reduce production option(DISTINCT) ->
-- On Var1 reduce production option(DISTINCT) ->
-- On UUID reduce production option(DISTINCT) ->
-- On URI reduce production option(DISTINCT) ->
-- On UCASE reduce production option(DISTINCT) ->
-- On TZ reduce production option(DISTINCT) ->
-- On TIMEZONE reduce production option(DISTINCT) ->
-- On String_literal reduce production option(DISTINCT) ->
-- On SUM reduce production option(DISTINCT) ->
-- On SUBSTR reduce production option(DISTINCT) ->
-- On STRUUID reduce production option(DISTINCT) ->
-- On STRSTARTS reduce production option(DISTINCT) ->
-- On STRLEN reduce production option(DISTINCT) ->
-- On STRLANG reduce production option(DISTINCT) ->
-- On STRENDS reduce production option(DISTINCT) ->
-- On STRDT reduce production option(DISTINCT) ->
-- On STRBEFORE reduce production option(DISTINCT) ->
-- On STRAFTER reduce production option(DISTINCT) ->
-- On STR reduce production option(DISTINCT) ->
-- On STAR reduce production option(DISTINCT) ->
-- On SHA512 reduce production option(DISTINCT) ->
-- On SHA384 reduce production option(DISTINCT) ->
-- On SHA256 reduce production option(DISTINCT) ->
-- On SHA1 reduce production option(DISTINCT) ->
-- On SECONDS reduce production option(DISTINCT) ->
-- On SAMPLE reduce production option(DISTINCT) ->
-- On SAMETERM reduce production option(DISTINCT) ->
-- On ROUND reduce production option(DISTINCT) ->
-- On REPLACE reduce production option(DISTINCT) ->
-- On REGEX reduce production option(DISTINCT) ->
-- On RAND reduce production option(DISTINCT) ->
-- On Pname_ns reduce production option(DISTINCT) ->
-- On Pname_ln reduce production option(DISTINCT) ->
-- On PLUS reduce production option(DISTINCT) ->
-- On NOW reduce production option(DISTINCT) ->
-- On NOT reduce production option(DISTINCT) ->
-- On MONTH reduce production option(DISTINCT) ->
-- On MINUTES reduce production option(DISTINCT) ->
-- On MINUS reduce production option(DISTINCT) ->
-- On MIN reduce production option(DISTINCT) ->
-- On MD5 reduce production option(DISTINCT) ->
-- On MAX reduce production option(DISTINCT) ->
-- On LPAR reduce production option(DISTINCT) ->
-- On LCASE reduce production option(DISTINCT) ->
-- On LANGMATCHES reduce production option(DISTINCT) ->
-- On LANG reduce production option(DISTINCT) ->
-- On Iriref_ reduce production option(DISTINCT) ->
-- On Integer_positive reduce production option(DISTINCT) ->
-- On Integer_negative reduce production option(DISTINCT) ->
-- On Integer reduce production option(DISTINCT) ->
-- On ISURI reduce production option(DISTINCT) ->
-- On ISNUMERIC reduce production option(DISTINCT) ->
-- On ISLITERAL reduce production option(DISTINCT) ->
-- On ISIRI reduce production option(DISTINCT) ->
-- On ISBLANK reduce production option(DISTINCT) ->
-- On IRI reduce production option(DISTINCT) ->
-- On IF reduce production option(DISTINCT) ->
-- On HOURS reduce production option(DISTINCT) ->
-- On GROUP_CONCAT reduce production option(DISTINCT) ->
-- On FLOOR reduce production option(DISTINCT) ->
-- On EXISTS reduce production option(DISTINCT) ->
-- On ENCODE_FOR_URI reduce production option(DISTINCT) ->
-- On Double_positive reduce production option(DISTINCT) ->
-- On Double_negative reduce production option(DISTINCT) ->
-- On Double reduce production option(DISTINCT) ->
-- On Decimal_positive reduce production option(DISTINCT) ->
-- On Decimal_negative reduce production option(DISTINCT) ->
-- On Decimal reduce production option(DISTINCT) ->
-- On DAY reduce production option(DISTINCT) ->
-- On DATATYPE reduce production option(DISTINCT) ->
-- On COUNT reduce production option(DISTINCT) ->
-- On CONTAINS reduce production option(DISTINCT) ->
-- On CONCAT reduce production option(DISTINCT) ->
-- On COALESCE reduce production option(DISTINCT) ->
-- On CEIL reduce production option(DISTINCT) ->
-- On Boolean reduce production option(DISTINCT) ->
-- On BOUND reduce production option(DISTINCT) ->
-- On BNODE reduce production option(DISTINCT) ->
-- On BANG reduce production option(DISTINCT) ->
-- On AVG reduce production option(DISTINCT) ->
-- On ABS reduce production option(DISTINCT) ->

State 286:
## Known stack suffix:
## COUNT LPAR option(DISTINCT)
## LR(1) items:
aggregate -> COUNT LPAR option(DISTINCT) . STAR RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
aggregate -> COUNT LPAR option(DISTINCT) . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On STAR shift to state 287
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 385
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 287:
## Known stack suffix:
## COUNT LPAR option(DISTINCT) STAR
## LR(1) items:
aggregate -> COUNT LPAR option(DISTINCT) STAR . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On RPAR shift to state 288
## Reductions:

State 288:
## Known stack suffix:
## COUNT LPAR option(DISTINCT) STAR RPAR
## LR(1) items:
aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production aggregate -> COUNT LPAR option(DISTINCT) STAR RPAR

State 289:
## Known stack suffix:
## CONTAINS
## LR(1) items:
built_in_call -> CONTAINS . LPAR expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On LPAR shift to state 290
## Reductions:

State 290:
## Known stack suffix:
## CONTAINS LPAR
## LR(1) items:
built_in_call -> CONTAINS LPAR . expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 381
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 291:
## Known stack suffix:
## CONCAT
## LR(1) items:
built_in_call -> CONCAT . expression_list [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On NIL shift to state 292
-- On LPAR shift to state 293
-- On expression_list shift to state 380
## Reductions:

State 292:
## Known stack suffix:
## NIL
## LR(1) items:
expression_list -> NIL . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expression_list -> NIL

State 293:
## Known stack suffix:
## LPAR
## LR(1) items:
expression_list -> LPAR . separated_nonempty_list(COMMA,expression) RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On separated_nonempty_list(COMMA,expression) shift to state 378
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 333
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 294:
## Known stack suffix:
## COALESCE
## LR(1) items:
built_in_call -> COALESCE . expression_list [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On NIL shift to state 292
-- On LPAR shift to state 293
-- On expression_list shift to state 295
## Reductions:

State 295:
## Known stack suffix:
## COALESCE expression_list
## LR(1) items:
built_in_call -> COALESCE expression_list . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production built_in_call -> COALESCE expression_list

State 296:
## Known stack suffix:
## CEIL
## LR(1) items:
built_in_call -> CEIL . LPAR expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On LPAR shift to state 297
## Reductions:

State 297:
## Known stack suffix:
## CEIL LPAR
## LR(1) items:
built_in_call -> CEIL LPAR . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 376
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 298:
## Known stack suffix:
## BOUND
## LR(1) items:
built_in_call -> BOUND . LPAR var RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On LPAR shift to state 299
## Reductions:

State 299:
## Known stack suffix:
## BOUND LPAR
## LR(1) items:
built_in_call -> BOUND LPAR . var RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On var shift to state 300
## Reductions:

State 300:
## Known stack suffix:
## BOUND LPAR var
## LR(1) items:
built_in_call -> BOUND LPAR var . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On RPAR shift to state 301
## Reductions:

State 301:
## Known stack suffix:
## BOUND LPAR var RPAR
## LR(1) items:
built_in_call -> BOUND LPAR var RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production built_in_call -> BOUND LPAR var RPAR

State 302:
## Known stack suffix:
## BNODE
## LR(1) items:
built_in_call -> BNODE . LPAR expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
built_in_call -> BNODE . NIL [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On NIL shift to state 303
-- On LPAR shift to state 304
## Reductions:

State 303:
## Known stack suffix:
## BNODE NIL
## LR(1) items:
built_in_call -> BNODE NIL . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production built_in_call -> BNODE NIL

State 304:
## Known stack suffix:
## BNODE LPAR
## LR(1) items:
built_in_call -> BNODE LPAR . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 374
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 305:
## Known stack suffix:
## BANG
## LR(1) items:
numexp -> BANG . expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 373
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 306:
## Known stack suffix:
## AVG
## LR(1) items:
aggregate -> AVG . LPAR option(DISTINCT) expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On LPAR shift to state 307
## Reductions:

State 307:
## Known stack suffix:
## AVG LPAR
## LR(1) items:
aggregate -> AVG LPAR . option(DISTINCT) expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On DISTINCT shift to state 34
-- On option(DISTINCT) shift to state 308
## Reductions:
-- On YEAR reduce production option(DISTINCT) ->
-- On Var2 reduce production option(DISTINCT) ->
-- On Var1 reduce production option(DISTINCT) ->
-- On UUID reduce production option(DISTINCT) ->
-- On URI reduce production option(DISTINCT) ->
-- On UCASE reduce production option(DISTINCT) ->
-- On TZ reduce production option(DISTINCT) ->
-- On TIMEZONE reduce production option(DISTINCT) ->
-- On String_literal reduce production option(DISTINCT) ->
-- On SUM reduce production option(DISTINCT) ->
-- On SUBSTR reduce production option(DISTINCT) ->
-- On STRUUID reduce production option(DISTINCT) ->
-- On STRSTARTS reduce production option(DISTINCT) ->
-- On STRLEN reduce production option(DISTINCT) ->
-- On STRLANG reduce production option(DISTINCT) ->
-- On STRENDS reduce production option(DISTINCT) ->
-- On STRDT reduce production option(DISTINCT) ->
-- On STRBEFORE reduce production option(DISTINCT) ->
-- On STRAFTER reduce production option(DISTINCT) ->
-- On STR reduce production option(DISTINCT) ->
-- On SHA512 reduce production option(DISTINCT) ->
-- On SHA384 reduce production option(DISTINCT) ->
-- On SHA256 reduce production option(DISTINCT) ->
-- On SHA1 reduce production option(DISTINCT) ->
-- On SECONDS reduce production option(DISTINCT) ->
-- On SAMPLE reduce production option(DISTINCT) ->
-- On SAMETERM reduce production option(DISTINCT) ->
-- On ROUND reduce production option(DISTINCT) ->
-- On REPLACE reduce production option(DISTINCT) ->
-- On REGEX reduce production option(DISTINCT) ->
-- On RAND reduce production option(DISTINCT) ->
-- On Pname_ns reduce production option(DISTINCT) ->
-- On Pname_ln reduce production option(DISTINCT) ->
-- On PLUS reduce production option(DISTINCT) ->
-- On NOW reduce production option(DISTINCT) ->
-- On NOT reduce production option(DISTINCT) ->
-- On MONTH reduce production option(DISTINCT) ->
-- On MINUTES reduce production option(DISTINCT) ->
-- On MINUS reduce production option(DISTINCT) ->
-- On MIN reduce production option(DISTINCT) ->
-- On MD5 reduce production option(DISTINCT) ->
-- On MAX reduce production option(DISTINCT) ->
-- On LPAR reduce production option(DISTINCT) ->
-- On LCASE reduce production option(DISTINCT) ->
-- On LANGMATCHES reduce production option(DISTINCT) ->
-- On LANG reduce production option(DISTINCT) ->
-- On Iriref_ reduce production option(DISTINCT) ->
-- On Integer_positive reduce production option(DISTINCT) ->
-- On Integer_negative reduce production option(DISTINCT) ->
-- On Integer reduce production option(DISTINCT) ->
-- On ISURI reduce production option(DISTINCT) ->
-- On ISNUMERIC reduce production option(DISTINCT) ->
-- On ISLITERAL reduce production option(DISTINCT) ->
-- On ISIRI reduce production option(DISTINCT) ->
-- On ISBLANK reduce production option(DISTINCT) ->
-- On IRI reduce production option(DISTINCT) ->
-- On IF reduce production option(DISTINCT) ->
-- On HOURS reduce production option(DISTINCT) ->
-- On GROUP_CONCAT reduce production option(DISTINCT) ->
-- On FLOOR reduce production option(DISTINCT) ->
-- On EXISTS reduce production option(DISTINCT) ->
-- On ENCODE_FOR_URI reduce production option(DISTINCT) ->
-- On Double_positive reduce production option(DISTINCT) ->
-- On Double_negative reduce production option(DISTINCT) ->
-- On Double reduce production option(DISTINCT) ->
-- On Decimal_positive reduce production option(DISTINCT) ->
-- On Decimal_negative reduce production option(DISTINCT) ->
-- On Decimal reduce production option(DISTINCT) ->
-- On DAY reduce production option(DISTINCT) ->
-- On DATATYPE reduce production option(DISTINCT) ->
-- On COUNT reduce production option(DISTINCT) ->
-- On CONTAINS reduce production option(DISTINCT) ->
-- On CONCAT reduce production option(DISTINCT) ->
-- On COALESCE reduce production option(DISTINCT) ->
-- On CEIL reduce production option(DISTINCT) ->
-- On Boolean reduce production option(DISTINCT) ->
-- On BOUND reduce production option(DISTINCT) ->
-- On BNODE reduce production option(DISTINCT) ->
-- On BANG reduce production option(DISTINCT) ->
-- On AVG reduce production option(DISTINCT) ->
-- On ABS reduce production option(DISTINCT) ->

State 308:
## Known stack suffix:
## AVG LPAR option(DISTINCT)
## LR(1) items:
aggregate -> AVG LPAR option(DISTINCT) . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 371
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 309:
## Known stack suffix:
## ABS
## LR(1) items:
built_in_call -> ABS . LPAR expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On LPAR shift to state 310
## Reductions:

State 310:
## Known stack suffix:
## ABS LPAR
## LR(1) items:
built_in_call -> ABS LPAR . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 369
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 311:
## Known stack suffix:
## var
## LR(1) items:
primary_expression -> var . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expression -> var

State 312:
## Known stack suffix:
## value_logical
## LR(1) items:
expression -> value_logical . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
value_logical -> value_logical . AMPAMP value_logical [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
value_logical -> value_logical . PIPEPIPE value_logical [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
## Transitions:
-- On PIPEPIPE shift to state 313
-- On AMPAMP shift to state 367
## Reductions:
-- On YEAR reduce production expression -> value_logical
-- On Var2 reduce production expression -> value_logical
-- On Var1 reduce production expression -> value_logical
-- On VALUES reduce production expression -> value_logical
-- On UUID reduce production expression -> value_logical
-- On URI reduce production expression -> value_logical
-- On UCASE reduce production expression -> value_logical
-- On TZ reduce production expression -> value_logical
-- On TIMEZONE reduce production expression -> value_logical
-- On String_literal reduce production expression -> value_logical
-- On SUM reduce production expression -> value_logical
-- On SUBSTR reduce production expression -> value_logical
-- On STRUUID reduce production expression -> value_logical
-- On STRSTARTS reduce production expression -> value_logical
-- On STRLEN reduce production expression -> value_logical
-- On STRLANG reduce production expression -> value_logical
-- On STRENDS reduce production expression -> value_logical
-- On STRDT reduce production expression -> value_logical
-- On STRBEFORE reduce production expression -> value_logical
-- On STRAFTER reduce production expression -> value_logical
-- On STR reduce production expression -> value_logical
-- On STAR reduce production expression -> value_logical
-- On SLASH reduce production expression -> value_logical
-- On SHA512 reduce production expression -> value_logical
-- On SHA384 reduce production expression -> value_logical
-- On SHA256 reduce production expression -> value_logical
-- On SHA1 reduce production expression -> value_logical
-- On SEMICOLON reduce production expression -> value_logical
-- On SECONDS reduce production expression -> value_logical
-- On SAMPLE reduce production expression -> value_logical
-- On SAMETERM reduce production expression -> value_logical
-- On RPAR reduce production expression -> value_logical
-- On ROUND reduce production expression -> value_logical
-- On REPLACE reduce production expression -> value_logical
-- On REGEX reduce production expression -> value_logical
-- On RBRACE reduce production expression -> value_logical
-- On RAND reduce production expression -> value_logical
-- On Pname_ns reduce production expression -> value_logical
-- On Pname_ln reduce production expression -> value_logical
-- On PLUS reduce production expression -> value_logical
-- On ORDER reduce production expression -> value_logical
-- On OFFSET reduce production expression -> value_logical
-- On NOW reduce production expression -> value_logical
-- On NOTEQUAL reduce production expression -> value_logical
-- On NOT reduce production expression -> value_logical
-- On MONTH reduce production expression -> value_logical
-- On MINUTES reduce production expression -> value_logical
-- On MINUS reduce production expression -> value_logical
-- On MIN reduce production expression -> value_logical
-- On MD5 reduce production expression -> value_logical
-- On MAX reduce production expression -> value_logical
-- On LTE reduce production expression -> value_logical
-- On LT reduce production expression -> value_logical
-- On LPAR reduce production expression -> value_logical
-- On LIMIT reduce production expression -> value_logical
-- On LCASE reduce production expression -> value_logical
-- On LANGMATCHES reduce production expression -> value_logical
-- On LANG reduce production expression -> value_logical
-- On Iriref_ reduce production expression -> value_logical
-- On Integer_positive reduce production expression -> value_logical
-- On Integer_negative reduce production expression -> value_logical
-- On Integer reduce production expression -> value_logical
-- On ISURI reduce production expression -> value_logical
-- On ISNUMERIC reduce production expression -> value_logical
-- On ISLITERAL reduce production expression -> value_logical
-- On ISIRI reduce production expression -> value_logical
-- On ISBLANK reduce production expression -> value_logical
-- On IRI reduce production expression -> value_logical
-- On IN reduce production expression -> value_logical
-- On IF reduce production expression -> value_logical
-- On HOURS reduce production expression -> value_logical
-- On HAVING reduce production expression -> value_logical
-- On GTE reduce production expression -> value_logical
-- On GT reduce production expression -> value_logical
-- On GROUP_CONCAT reduce production expression -> value_logical
-- On FLOOR reduce production expression -> value_logical
-- On EXISTS reduce production expression -> value_logical
-- On EQUAL reduce production expression -> value_logical
-- On EOF reduce production expression -> value_logical
-- On ENCODE_FOR_URI reduce production expression -> value_logical
-- On Double_positive reduce production expression -> value_logical
-- On Double_negative reduce production expression -> value_logical
-- On Double reduce production expression -> value_logical
-- On Decimal_positive reduce production expression -> value_logical
-- On Decimal_negative reduce production expression -> value_logical
-- On Decimal reduce production expression -> value_logical
-- On DAY reduce production expression -> value_logical
-- On DATATYPE reduce production expression -> value_logical
-- On COUNT reduce production expression -> value_logical
-- On CONTAINS reduce production expression -> value_logical
-- On CONCAT reduce production expression -> value_logical
-- On COMMA reduce production expression -> value_logical
-- On COALESCE reduce production expression -> value_logical
-- On CEIL reduce production expression -> value_logical
-- On Boolean reduce production expression -> value_logical
-- On BOUND reduce production expression -> value_logical
-- On BNODE reduce production expression -> value_logical
-- On BANG reduce production expression -> value_logical
-- On AVG reduce production expression -> value_logical
-- On AS reduce production expression -> value_logical
-- On ABS reduce production expression -> value_logical

State 313:
## Known stack suffix:
## value_logical PIPEPIPE
## LR(1) items:
value_logical -> value_logical PIPEPIPE . value_logical [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 314
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 351
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 314:
## Known stack suffix:
## value_logical PIPEPIPE value_logical
## LR(1) items:
expression -> value_logical . [ STAR SLASH PLUS MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative ]
value_logical -> value_logical . AMPAMP value_logical [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
value_logical -> value_logical . PIPEPIPE value_logical [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
value_logical -> value_logical PIPEPIPE value_logical . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
## Transitions:
## Reductions:
-- On YEAR reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On Var2 reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On Var1 reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On VALUES reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On UUID reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On URI reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On UCASE reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On TZ reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On TIMEZONE reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On String_literal reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On SUM reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On SUBSTR reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On STRUUID reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On STRSTARTS reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On STRLEN reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On STRLANG reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On STRENDS reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On STRDT reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On STRBEFORE reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On STRAFTER reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On STR reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On STAR reduce production expression -> value_logical
-- On SLASH reduce production expression -> value_logical
-- On SHA512 reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On SHA384 reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On SHA256 reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On SHA1 reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On SEMICOLON reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On SECONDS reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On SAMPLE reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On SAMETERM reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On RPAR reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On ROUND reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On REPLACE reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On REGEX reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On RBRACE reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On RAND reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On Pname_ns reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On Pname_ln reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On PLUS reduce production expression -> value_logical
-- On PIPEPIPE reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On ORDER reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On OFFSET reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On NOW reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On NOTEQUAL reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On NOT reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On MONTH reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On MINUTES reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On MINUS reduce production expression -> value_logical
-- On MIN reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On MD5 reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On MAX reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On LTE reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On LT reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On LPAR reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On LIMIT reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On LCASE reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On LANGMATCHES reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On LANG reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On Iriref_ reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On Integer_positive reduce production expression -> value_logical
-- On Integer_negative reduce production expression -> value_logical
-- On Integer reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On ISURI reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On ISNUMERIC reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On ISLITERAL reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On ISIRI reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On ISBLANK reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On IRI reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On IN reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On IF reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On HOURS reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On HAVING reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On GTE reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On GT reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On GROUP_CONCAT reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On FLOOR reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On EXISTS reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On EQUAL reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On EOF reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On ENCODE_FOR_URI reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On Double_positive reduce production expression -> value_logical
-- On Double_negative reduce production expression -> value_logical
-- On Double reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On Decimal_positive reduce production expression -> value_logical
-- On Decimal_negative reduce production expression -> value_logical
-- On Decimal reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On DAY reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On DATATYPE reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On COUNT reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On CONTAINS reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On CONCAT reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On COMMA reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On COALESCE reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On CEIL reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On Boolean reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On BOUND reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On BNODE reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On BANG reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On AVG reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On AS reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On AMPAMP reduce production value_logical -> value_logical PIPEPIPE value_logical
-- On ABS reduce production value_logical -> value_logical PIPEPIPE value_logical

State 315:
## Known stack suffix:
## substring_expression
## LR(1) items:
built_in_call -> substring_expression . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production built_in_call -> substring_expression

State 316:
## Known stack suffix:
## str_replace_expression
## LR(1) items:
built_in_call -> str_replace_expression . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production built_in_call -> str_replace_expression

State 317:
## Known stack suffix:
## relational_expression
## LR(1) items:
value_logical -> relational_expression . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production value_logical -> relational_expression

State 318:
## Known stack suffix:
## regexp_expression
## LR(1) items:
built_in_call -> regexp_expression . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production built_in_call -> regexp_expression

State 319:
## Known stack suffix:
## rdf_literal
## LR(1) items:
primary_expression -> rdf_literal . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expression -> rdf_literal

State 320:
## Known stack suffix:
## primary_expression
## LR(1) items:
numexp -> primary_expression . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production numexp -> primary_expression

State 321:
## Known stack suffix:
## numexp
## LR(1) items:
relational_expression -> numexp . EQUAL numexp [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
relational_expression -> numexp . NOTEQUAL numexp [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
relational_expression -> numexp . LT numexp [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
relational_expression -> numexp . GT numexp [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
relational_expression -> numexp . LTE numexp [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
relational_expression -> numexp . GTE numexp [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
relational_expression -> numexp . IN expression_list [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
relational_expression -> numexp . NOT IN expression_list [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
relational_expression -> numexp . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
## Transitions:
-- On NOTEQUAL shift to state 322
-- On NOT shift to state 352
-- On LTE shift to state 355
-- On LT shift to state 357
-- On IN shift to state 359
-- On GTE shift to state 361
-- On GT shift to state 363
-- On EQUAL shift to state 365
## Reductions:
-- On YEAR reduce production relational_expression -> numexp
-- On Var2 reduce production relational_expression -> numexp
-- On Var1 reduce production relational_expression -> numexp
-- On VALUES reduce production relational_expression -> numexp
-- On UUID reduce production relational_expression -> numexp
-- On URI reduce production relational_expression -> numexp
-- On UCASE reduce production relational_expression -> numexp
-- On TZ reduce production relational_expression -> numexp
-- On TIMEZONE reduce production relational_expression -> numexp
-- On String_literal reduce production relational_expression -> numexp
-- On SUM reduce production relational_expression -> numexp
-- On SUBSTR reduce production relational_expression -> numexp
-- On STRUUID reduce production relational_expression -> numexp
-- On STRSTARTS reduce production relational_expression -> numexp
-- On STRLEN reduce production relational_expression -> numexp
-- On STRLANG reduce production relational_expression -> numexp
-- On STRENDS reduce production relational_expression -> numexp
-- On STRDT reduce production relational_expression -> numexp
-- On STRBEFORE reduce production relational_expression -> numexp
-- On STRAFTER reduce production relational_expression -> numexp
-- On STR reduce production relational_expression -> numexp
-- On STAR reduce production relational_expression -> numexp
-- On SLASH reduce production relational_expression -> numexp
-- On SHA512 reduce production relational_expression -> numexp
-- On SHA384 reduce production relational_expression -> numexp
-- On SHA256 reduce production relational_expression -> numexp
-- On SHA1 reduce production relational_expression -> numexp
-- On SEMICOLON reduce production relational_expression -> numexp
-- On SECONDS reduce production relational_expression -> numexp
-- On SAMPLE reduce production relational_expression -> numexp
-- On SAMETERM reduce production relational_expression -> numexp
-- On RPAR reduce production relational_expression -> numexp
-- On ROUND reduce production relational_expression -> numexp
-- On REPLACE reduce production relational_expression -> numexp
-- On REGEX reduce production relational_expression -> numexp
-- On RBRACE reduce production relational_expression -> numexp
-- On RAND reduce production relational_expression -> numexp
-- On Pname_ns reduce production relational_expression -> numexp
-- On Pname_ln reduce production relational_expression -> numexp
-- On PLUS reduce production relational_expression -> numexp
-- On PIPEPIPE reduce production relational_expression -> numexp
-- On ORDER reduce production relational_expression -> numexp
-- On OFFSET reduce production relational_expression -> numexp
-- On NOW reduce production relational_expression -> numexp
-- On MONTH reduce production relational_expression -> numexp
-- On MINUTES reduce production relational_expression -> numexp
-- On MINUS reduce production relational_expression -> numexp
-- On MIN reduce production relational_expression -> numexp
-- On MD5 reduce production relational_expression -> numexp
-- On MAX reduce production relational_expression -> numexp
-- On LPAR reduce production relational_expression -> numexp
-- On LIMIT reduce production relational_expression -> numexp
-- On LCASE reduce production relational_expression -> numexp
-- On LANGMATCHES reduce production relational_expression -> numexp
-- On LANG reduce production relational_expression -> numexp
-- On Iriref_ reduce production relational_expression -> numexp
-- On Integer_positive reduce production relational_expression -> numexp
-- On Integer_negative reduce production relational_expression -> numexp
-- On Integer reduce production relational_expression -> numexp
-- On ISURI reduce production relational_expression -> numexp
-- On ISNUMERIC reduce production relational_expression -> numexp
-- On ISLITERAL reduce production relational_expression -> numexp
-- On ISIRI reduce production relational_expression -> numexp
-- On ISBLANK reduce production relational_expression -> numexp
-- On IRI reduce production relational_expression -> numexp
-- On IF reduce production relational_expression -> numexp
-- On HOURS reduce production relational_expression -> numexp
-- On HAVING reduce production relational_expression -> numexp
-- On GROUP_CONCAT reduce production relational_expression -> numexp
-- On FLOOR reduce production relational_expression -> numexp
-- On EXISTS reduce production relational_expression -> numexp
-- On EOF reduce production relational_expression -> numexp
-- On ENCODE_FOR_URI reduce production relational_expression -> numexp
-- On Double_positive reduce production relational_expression -> numexp
-- On Double_negative reduce production relational_expression -> numexp
-- On Double reduce production relational_expression -> numexp
-- On Decimal_positive reduce production relational_expression -> numexp
-- On Decimal_negative reduce production relational_expression -> numexp
-- On Decimal reduce production relational_expression -> numexp
-- On DAY reduce production relational_expression -> numexp
-- On DATATYPE reduce production relational_expression -> numexp
-- On COUNT reduce production relational_expression -> numexp
-- On CONTAINS reduce production relational_expression -> numexp
-- On CONCAT reduce production relational_expression -> numexp
-- On COMMA reduce production relational_expression -> numexp
-- On COALESCE reduce production relational_expression -> numexp
-- On CEIL reduce production relational_expression -> numexp
-- On Boolean reduce production relational_expression -> numexp
-- On BOUND reduce production relational_expression -> numexp
-- On BNODE reduce production relational_expression -> numexp
-- On BANG reduce production relational_expression -> numexp
-- On AVG reduce production relational_expression -> numexp
-- On AS reduce production relational_expression -> numexp
-- On AMPAMP reduce production relational_expression -> numexp
-- On ABS reduce production relational_expression -> numexp

State 322:
## Known stack suffix:
## numexp NOTEQUAL
## LR(1) items:
relational_expression -> numexp NOTEQUAL . numexp [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 323
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 351
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 323:
## Known stack suffix:
## numexp NOTEQUAL numexp
## LR(1) items:
relational_expression -> numexp . EQUAL numexp [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . NOTEQUAL numexp [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp NOTEQUAL numexp . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
relational_expression -> numexp . LT numexp [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . GT numexp [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . LTE numexp [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . GTE numexp [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . IN expression_list [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . NOT IN expression_list [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
## Transitions:
## Reductions:
-- On YEAR reduce production relational_expression -> numexp NOTEQUAL numexp
-- On Var2 reduce production relational_expression -> numexp NOTEQUAL numexp
-- On Var1 reduce production relational_expression -> numexp NOTEQUAL numexp
-- On VALUES reduce production relational_expression -> numexp NOTEQUAL numexp
-- On UUID reduce production relational_expression -> numexp NOTEQUAL numexp
-- On URI reduce production relational_expression -> numexp NOTEQUAL numexp
-- On UCASE reduce production relational_expression -> numexp NOTEQUAL numexp
-- On TZ reduce production relational_expression -> numexp NOTEQUAL numexp
-- On TIMEZONE reduce production relational_expression -> numexp NOTEQUAL numexp
-- On String_literal reduce production relational_expression -> numexp NOTEQUAL numexp
-- On SUM reduce production relational_expression -> numexp NOTEQUAL numexp
-- On SUBSTR reduce production relational_expression -> numexp NOTEQUAL numexp
-- On STRUUID reduce production relational_expression -> numexp NOTEQUAL numexp
-- On STRSTARTS reduce production relational_expression -> numexp NOTEQUAL numexp
-- On STRLEN reduce production relational_expression -> numexp NOTEQUAL numexp
-- On STRLANG reduce production relational_expression -> numexp NOTEQUAL numexp
-- On STRENDS reduce production relational_expression -> numexp NOTEQUAL numexp
-- On STRDT reduce production relational_expression -> numexp NOTEQUAL numexp
-- On STRBEFORE reduce production relational_expression -> numexp NOTEQUAL numexp
-- On STRAFTER reduce production relational_expression -> numexp NOTEQUAL numexp
-- On STR reduce production relational_expression -> numexp NOTEQUAL numexp
-- On STAR reduce production relational_expression -> numexp NOTEQUAL numexp
-- On SLASH reduce production relational_expression -> numexp NOTEQUAL numexp
-- On SHA512 reduce production relational_expression -> numexp NOTEQUAL numexp
-- On SHA384 reduce production relational_expression -> numexp NOTEQUAL numexp
-- On SHA256 reduce production relational_expression -> numexp NOTEQUAL numexp
-- On SHA1 reduce production relational_expression -> numexp NOTEQUAL numexp
-- On SEMICOLON reduce production relational_expression -> numexp NOTEQUAL numexp
-- On SECONDS reduce production relational_expression -> numexp NOTEQUAL numexp
-- On SAMPLE reduce production relational_expression -> numexp NOTEQUAL numexp
-- On SAMETERM reduce production relational_expression -> numexp NOTEQUAL numexp
-- On RPAR reduce production relational_expression -> numexp NOTEQUAL numexp
-- On ROUND reduce production relational_expression -> numexp NOTEQUAL numexp
-- On REPLACE reduce production relational_expression -> numexp NOTEQUAL numexp
-- On REGEX reduce production relational_expression -> numexp NOTEQUAL numexp
-- On RBRACE reduce production relational_expression -> numexp NOTEQUAL numexp
-- On RAND reduce production relational_expression -> numexp NOTEQUAL numexp
-- On Pname_ns reduce production relational_expression -> numexp NOTEQUAL numexp
-- On Pname_ln reduce production relational_expression -> numexp NOTEQUAL numexp
-- On PLUS reduce production relational_expression -> numexp NOTEQUAL numexp
-- On PIPEPIPE reduce production relational_expression -> numexp NOTEQUAL numexp
-- On ORDER reduce production relational_expression -> numexp NOTEQUAL numexp
-- On OFFSET reduce production relational_expression -> numexp NOTEQUAL numexp
-- On NOW reduce production relational_expression -> numexp NOTEQUAL numexp
-- On MONTH reduce production relational_expression -> numexp NOTEQUAL numexp
-- On MINUTES reduce production relational_expression -> numexp NOTEQUAL numexp
-- On MINUS reduce production relational_expression -> numexp NOTEQUAL numexp
-- On MIN reduce production relational_expression -> numexp NOTEQUAL numexp
-- On MD5 reduce production relational_expression -> numexp NOTEQUAL numexp
-- On MAX reduce production relational_expression -> numexp NOTEQUAL numexp
-- On LPAR reduce production relational_expression -> numexp NOTEQUAL numexp
-- On LIMIT reduce production relational_expression -> numexp NOTEQUAL numexp
-- On LCASE reduce production relational_expression -> numexp NOTEQUAL numexp
-- On LANGMATCHES reduce production relational_expression -> numexp NOTEQUAL numexp
-- On LANG reduce production relational_expression -> numexp NOTEQUAL numexp
-- On Iriref_ reduce production relational_expression -> numexp NOTEQUAL numexp
-- On Integer_positive reduce production relational_expression -> numexp NOTEQUAL numexp
-- On Integer_negative reduce production relational_expression -> numexp NOTEQUAL numexp
-- On Integer reduce production relational_expression -> numexp NOTEQUAL numexp
-- On ISURI reduce production relational_expression -> numexp NOTEQUAL numexp
-- On ISNUMERIC reduce production relational_expression -> numexp NOTEQUAL numexp
-- On ISLITERAL reduce production relational_expression -> numexp NOTEQUAL numexp
-- On ISIRI reduce production relational_expression -> numexp NOTEQUAL numexp
-- On ISBLANK reduce production relational_expression -> numexp NOTEQUAL numexp
-- On IRI reduce production relational_expression -> numexp NOTEQUAL numexp
-- On IF reduce production relational_expression -> numexp NOTEQUAL numexp
-- On HOURS reduce production relational_expression -> numexp NOTEQUAL numexp
-- On HAVING reduce production relational_expression -> numexp NOTEQUAL numexp
-- On GROUP_CONCAT reduce production relational_expression -> numexp NOTEQUAL numexp
-- On FLOOR reduce production relational_expression -> numexp NOTEQUAL numexp
-- On EXISTS reduce production relational_expression -> numexp NOTEQUAL numexp
-- On EOF reduce production relational_expression -> numexp NOTEQUAL numexp
-- On ENCODE_FOR_URI reduce production relational_expression -> numexp NOTEQUAL numexp
-- On Double_positive reduce production relational_expression -> numexp NOTEQUAL numexp
-- On Double_negative reduce production relational_expression -> numexp NOTEQUAL numexp
-- On Double reduce production relational_expression -> numexp NOTEQUAL numexp
-- On Decimal_positive reduce production relational_expression -> numexp NOTEQUAL numexp
-- On Decimal_negative reduce production relational_expression -> numexp NOTEQUAL numexp
-- On Decimal reduce production relational_expression -> numexp NOTEQUAL numexp
-- On DAY reduce production relational_expression -> numexp NOTEQUAL numexp
-- On DATATYPE reduce production relational_expression -> numexp NOTEQUAL numexp
-- On COUNT reduce production relational_expression -> numexp NOTEQUAL numexp
-- On CONTAINS reduce production relational_expression -> numexp NOTEQUAL numexp
-- On CONCAT reduce production relational_expression -> numexp NOTEQUAL numexp
-- On COMMA reduce production relational_expression -> numexp NOTEQUAL numexp
-- On COALESCE reduce production relational_expression -> numexp NOTEQUAL numexp
-- On CEIL reduce production relational_expression -> numexp NOTEQUAL numexp
-- On Boolean reduce production relational_expression -> numexp NOTEQUAL numexp
-- On BOUND reduce production relational_expression -> numexp NOTEQUAL numexp
-- On BNODE reduce production relational_expression -> numexp NOTEQUAL numexp
-- On BANG reduce production relational_expression -> numexp NOTEQUAL numexp
-- On AVG reduce production relational_expression -> numexp NOTEQUAL numexp
-- On AS reduce production relational_expression -> numexp NOTEQUAL numexp
-- On AMPAMP reduce production relational_expression -> numexp NOTEQUAL numexp
-- On ABS reduce production relational_expression -> numexp NOTEQUAL numexp

State 324:
## Known stack suffix:
## numeric_literal
## LR(1) items:
primary_expression -> numeric_literal . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expression -> numeric_literal

State 325:
## Known stack suffix:
## iri_or_function
## LR(1) items:
primary_expression -> iri_or_function . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expression -> iri_or_function

State 326:
## Known stack suffix:
## iri
## LR(1) items:
function_call -> iri . arg_list [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
iri_or_function -> iri . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
## Transitions:
-- On NIL shift to state 327
-- On LPAR shift to state 328
-- On arg_list shift to state 350
## Reductions:
-- On YEAR reduce production iri_or_function -> iri
-- On Var2 reduce production iri_or_function -> iri
-- On Var1 reduce production iri_or_function -> iri
-- On VALUES reduce production iri_or_function -> iri
-- On UUID reduce production iri_or_function -> iri
-- On URI reduce production iri_or_function -> iri
-- On UCASE reduce production iri_or_function -> iri
-- On TZ reduce production iri_or_function -> iri
-- On TIMEZONE reduce production iri_or_function -> iri
-- On String_literal reduce production iri_or_function -> iri
-- On SUM reduce production iri_or_function -> iri
-- On SUBSTR reduce production iri_or_function -> iri
-- On STRUUID reduce production iri_or_function -> iri
-- On STRSTARTS reduce production iri_or_function -> iri
-- On STRLEN reduce production iri_or_function -> iri
-- On STRLANG reduce production iri_or_function -> iri
-- On STRENDS reduce production iri_or_function -> iri
-- On STRDT reduce production iri_or_function -> iri
-- On STRBEFORE reduce production iri_or_function -> iri
-- On STRAFTER reduce production iri_or_function -> iri
-- On STR reduce production iri_or_function -> iri
-- On STAR reduce production iri_or_function -> iri
-- On SLASH reduce production iri_or_function -> iri
-- On SHA512 reduce production iri_or_function -> iri
-- On SHA384 reduce production iri_or_function -> iri
-- On SHA256 reduce production iri_or_function -> iri
-- On SHA1 reduce production iri_or_function -> iri
-- On SEMICOLON reduce production iri_or_function -> iri
-- On SECONDS reduce production iri_or_function -> iri
-- On SAMPLE reduce production iri_or_function -> iri
-- On SAMETERM reduce production iri_or_function -> iri
-- On RPAR reduce production iri_or_function -> iri
-- On ROUND reduce production iri_or_function -> iri
-- On REPLACE reduce production iri_or_function -> iri
-- On REGEX reduce production iri_or_function -> iri
-- On RBRACE reduce production iri_or_function -> iri
-- On RAND reduce production iri_or_function -> iri
-- On Pname_ns reduce production iri_or_function -> iri
-- On Pname_ln reduce production iri_or_function -> iri
-- On PLUS reduce production iri_or_function -> iri
-- On PIPEPIPE reduce production iri_or_function -> iri
-- On ORDER reduce production iri_or_function -> iri
-- On OFFSET reduce production iri_or_function -> iri
-- On NOW reduce production iri_or_function -> iri
-- On NOTEQUAL reduce production iri_or_function -> iri
-- On NOT reduce production iri_or_function -> iri
-- On MONTH reduce production iri_or_function -> iri
-- On MINUTES reduce production iri_or_function -> iri
-- On MINUS reduce production iri_or_function -> iri
-- On MIN reduce production iri_or_function -> iri
-- On MD5 reduce production iri_or_function -> iri
-- On MAX reduce production iri_or_function -> iri
-- On LTE reduce production iri_or_function -> iri
-- On LT reduce production iri_or_function -> iri
-- On LIMIT reduce production iri_or_function -> iri
-- On LCASE reduce production iri_or_function -> iri
-- On LANGMATCHES reduce production iri_or_function -> iri
-- On LANG reduce production iri_or_function -> iri
-- On Iriref_ reduce production iri_or_function -> iri
-- On Integer_positive reduce production iri_or_function -> iri
-- On Integer_negative reduce production iri_or_function -> iri
-- On Integer reduce production iri_or_function -> iri
-- On ISURI reduce production iri_or_function -> iri
-- On ISNUMERIC reduce production iri_or_function -> iri
-- On ISLITERAL reduce production iri_or_function -> iri
-- On ISIRI reduce production iri_or_function -> iri
-- On ISBLANK reduce production iri_or_function -> iri
-- On IRI reduce production iri_or_function -> iri
-- On IN reduce production iri_or_function -> iri
-- On IF reduce production iri_or_function -> iri
-- On HOURS reduce production iri_or_function -> iri
-- On HAVING reduce production iri_or_function -> iri
-- On GTE reduce production iri_or_function -> iri
-- On GT reduce production iri_or_function -> iri
-- On GROUP_CONCAT reduce production iri_or_function -> iri
-- On FLOOR reduce production iri_or_function -> iri
-- On EXISTS reduce production iri_or_function -> iri
-- On EQUAL reduce production iri_or_function -> iri
-- On EOF reduce production iri_or_function -> iri
-- On ENCODE_FOR_URI reduce production iri_or_function -> iri
-- On Double_positive reduce production iri_or_function -> iri
-- On Double_negative reduce production iri_or_function -> iri
-- On Double reduce production iri_or_function -> iri
-- On Decimal_positive reduce production iri_or_function -> iri
-- On Decimal_negative reduce production iri_or_function -> iri
-- On Decimal reduce production iri_or_function -> iri
-- On DAY reduce production iri_or_function -> iri
-- On DATATYPE reduce production iri_or_function -> iri
-- On COUNT reduce production iri_or_function -> iri
-- On CONTAINS reduce production iri_or_function -> iri
-- On CONCAT reduce production iri_or_function -> iri
-- On COMMA reduce production iri_or_function -> iri
-- On COALESCE reduce production iri_or_function -> iri
-- On CEIL reduce production iri_or_function -> iri
-- On Boolean reduce production iri_or_function -> iri
-- On BOUND reduce production iri_or_function -> iri
-- On BNODE reduce production iri_or_function -> iri
-- On BANG reduce production iri_or_function -> iri
-- On AVG reduce production iri_or_function -> iri
-- On AS reduce production iri_or_function -> iri
-- On AMPAMP reduce production iri_or_function -> iri
-- On ABS reduce production iri_or_function -> iri

State 327:
## Known stack suffix:
## NIL
## LR(1) items:
arg_list -> NIL . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production arg_list -> NIL

State 328:
## Known stack suffix:
## LPAR
## LR(1) items:
arg_list -> LPAR . option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On DISTINCT shift to state 34
-- On option(DISTINCT) shift to state 329
## Reductions:
-- On YEAR reduce production option(DISTINCT) ->
-- On Var2 reduce production option(DISTINCT) ->
-- On Var1 reduce production option(DISTINCT) ->
-- On UUID reduce production option(DISTINCT) ->
-- On URI reduce production option(DISTINCT) ->
-- On UCASE reduce production option(DISTINCT) ->
-- On TZ reduce production option(DISTINCT) ->
-- On TIMEZONE reduce production option(DISTINCT) ->
-- On String_literal reduce production option(DISTINCT) ->
-- On SUM reduce production option(DISTINCT) ->
-- On SUBSTR reduce production option(DISTINCT) ->
-- On STRUUID reduce production option(DISTINCT) ->
-- On STRSTARTS reduce production option(DISTINCT) ->
-- On STRLEN reduce production option(DISTINCT) ->
-- On STRLANG reduce production option(DISTINCT) ->
-- On STRENDS reduce production option(DISTINCT) ->
-- On STRDT reduce production option(DISTINCT) ->
-- On STRBEFORE reduce production option(DISTINCT) ->
-- On STRAFTER reduce production option(DISTINCT) ->
-- On STR reduce production option(DISTINCT) ->
-- On SHA512 reduce production option(DISTINCT) ->
-- On SHA384 reduce production option(DISTINCT) ->
-- On SHA256 reduce production option(DISTINCT) ->
-- On SHA1 reduce production option(DISTINCT) ->
-- On SECONDS reduce production option(DISTINCT) ->
-- On SAMPLE reduce production option(DISTINCT) ->
-- On SAMETERM reduce production option(DISTINCT) ->
-- On ROUND reduce production option(DISTINCT) ->
-- On REPLACE reduce production option(DISTINCT) ->
-- On REGEX reduce production option(DISTINCT) ->
-- On RAND reduce production option(DISTINCT) ->
-- On Pname_ns reduce production option(DISTINCT) ->
-- On Pname_ln reduce production option(DISTINCT) ->
-- On PLUS reduce production option(DISTINCT) ->
-- On NOW reduce production option(DISTINCT) ->
-- On NOT reduce production option(DISTINCT) ->
-- On MONTH reduce production option(DISTINCT) ->
-- On MINUTES reduce production option(DISTINCT) ->
-- On MINUS reduce production option(DISTINCT) ->
-- On MIN reduce production option(DISTINCT) ->
-- On MD5 reduce production option(DISTINCT) ->
-- On MAX reduce production option(DISTINCT) ->
-- On LPAR reduce production option(DISTINCT) ->
-- On LCASE reduce production option(DISTINCT) ->
-- On LANGMATCHES reduce production option(DISTINCT) ->
-- On LANG reduce production option(DISTINCT) ->
-- On Iriref_ reduce production option(DISTINCT) ->
-- On Integer_positive reduce production option(DISTINCT) ->
-- On Integer_negative reduce production option(DISTINCT) ->
-- On Integer reduce production option(DISTINCT) ->
-- On ISURI reduce production option(DISTINCT) ->
-- On ISNUMERIC reduce production option(DISTINCT) ->
-- On ISLITERAL reduce production option(DISTINCT) ->
-- On ISIRI reduce production option(DISTINCT) ->
-- On ISBLANK reduce production option(DISTINCT) ->
-- On IRI reduce production option(DISTINCT) ->
-- On IF reduce production option(DISTINCT) ->
-- On HOURS reduce production option(DISTINCT) ->
-- On GROUP_CONCAT reduce production option(DISTINCT) ->
-- On FLOOR reduce production option(DISTINCT) ->
-- On EXISTS reduce production option(DISTINCT) ->
-- On ENCODE_FOR_URI reduce production option(DISTINCT) ->
-- On Double_positive reduce production option(DISTINCT) ->
-- On Double_negative reduce production option(DISTINCT) ->
-- On Double reduce production option(DISTINCT) ->
-- On Decimal_positive reduce production option(DISTINCT) ->
-- On Decimal_negative reduce production option(DISTINCT) ->
-- On Decimal reduce production option(DISTINCT) ->
-- On DAY reduce production option(DISTINCT) ->
-- On DATATYPE reduce production option(DISTINCT) ->
-- On COUNT reduce production option(DISTINCT) ->
-- On CONTAINS reduce production option(DISTINCT) ->
-- On CONCAT reduce production option(DISTINCT) ->
-- On COALESCE reduce production option(DISTINCT) ->
-- On CEIL reduce production option(DISTINCT) ->
-- On Boolean reduce production option(DISTINCT) ->
-- On BOUND reduce production option(DISTINCT) ->
-- On BNODE reduce production option(DISTINCT) ->
-- On BANG reduce production option(DISTINCT) ->
-- On AVG reduce production option(DISTINCT) ->
-- On ABS reduce production option(DISTINCT) ->

State 329:
## Known stack suffix:
## LPAR option(DISTINCT)
## LR(1) items:
arg_list -> LPAR option(DISTINCT) . separated_nonempty_list(COMMA,expression) RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On separated_nonempty_list(COMMA,expression) shift to state 330
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 333
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 330:
## Known stack suffix:
## LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression)
## LR(1) items:
arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On RPAR shift to state 331
## Reductions:

State 331:
## Known stack suffix:
## LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR
## LR(1) items:
arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production arg_list -> LPAR option(DISTINCT) separated_nonempty_list(COMMA,expression) RPAR

State 332:
## Known stack suffix:
## function_call
## LR(1) items:
iri_or_function -> function_call . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production iri_or_function -> function_call

State 333:
## Known stack suffix:
## expression
## LR(1) items:
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
separated_nonempty_list(COMMA,expression) -> expression . [ RPAR ]
separated_nonempty_list(COMMA,expression) -> expression . COMMA separated_nonempty_list(COMMA,expression) [ RPAR ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On COMMA shift to state 348
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:
-- On RPAR reduce production separated_nonempty_list(COMMA,expression) -> expression

State 334:
## Known stack suffix:
## expression STAR
## LR(1) items:
numexp -> expression STAR . expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 335
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 335:
## Known stack suffix:
## expression STAR expression
## LR(1) items:
numexp -> expression . STAR expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression STAR expression . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . SLASH expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . PLUS expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . MINUS expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . numeric_literal_positive [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . numeric_literal_negative [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
## Transitions:
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:
-- On YEAR reduce production numexp -> expression STAR expression
-- On Var2 reduce production numexp -> expression STAR expression
-- On Var1 reduce production numexp -> expression STAR expression
-- On VALUES reduce production numexp -> expression STAR expression
-- On UUID reduce production numexp -> expression STAR expression
-- On URI reduce production numexp -> expression STAR expression
-- On UCASE reduce production numexp -> expression STAR expression
-- On TZ reduce production numexp -> expression STAR expression
-- On TIMEZONE reduce production numexp -> expression STAR expression
-- On String_literal reduce production numexp -> expression STAR expression
-- On SUM reduce production numexp -> expression STAR expression
-- On SUBSTR reduce production numexp -> expression STAR expression
-- On STRUUID reduce production numexp -> expression STAR expression
-- On STRSTARTS reduce production numexp -> expression STAR expression
-- On STRLEN reduce production numexp -> expression STAR expression
-- On STRLANG reduce production numexp -> expression STAR expression
-- On STRENDS reduce production numexp -> expression STAR expression
-- On STRDT reduce production numexp -> expression STAR expression
-- On STRBEFORE reduce production numexp -> expression STAR expression
-- On STRAFTER reduce production numexp -> expression STAR expression
-- On STR reduce production numexp -> expression STAR expression
-- On STAR reduce production numexp -> expression STAR expression
-- On SLASH reduce production numexp -> expression STAR expression
-- On SHA512 reduce production numexp -> expression STAR expression
-- On SHA384 reduce production numexp -> expression STAR expression
-- On SHA256 reduce production numexp -> expression STAR expression
-- On SHA1 reduce production numexp -> expression STAR expression
-- On SEMICOLON reduce production numexp -> expression STAR expression
-- On SECONDS reduce production numexp -> expression STAR expression
-- On SAMPLE reduce production numexp -> expression STAR expression
-- On SAMETERM reduce production numexp -> expression STAR expression
-- On RPAR reduce production numexp -> expression STAR expression
-- On ROUND reduce production numexp -> expression STAR expression
-- On REPLACE reduce production numexp -> expression STAR expression
-- On REGEX reduce production numexp -> expression STAR expression
-- On RBRACE reduce production numexp -> expression STAR expression
-- On RAND reduce production numexp -> expression STAR expression
-- On Pname_ns reduce production numexp -> expression STAR expression
-- On Pname_ln reduce production numexp -> expression STAR expression
-- On PLUS reduce production numexp -> expression STAR expression
-- On PIPEPIPE reduce production numexp -> expression STAR expression
-- On ORDER reduce production numexp -> expression STAR expression
-- On OFFSET reduce production numexp -> expression STAR expression
-- On NOW reduce production numexp -> expression STAR expression
-- On NOTEQUAL reduce production numexp -> expression STAR expression
-- On NOT reduce production numexp -> expression STAR expression
-- On MONTH reduce production numexp -> expression STAR expression
-- On MINUTES reduce production numexp -> expression STAR expression
-- On MINUS reduce production numexp -> expression STAR expression
-- On MIN reduce production numexp -> expression STAR expression
-- On MD5 reduce production numexp -> expression STAR expression
-- On MAX reduce production numexp -> expression STAR expression
-- On LTE reduce production numexp -> expression STAR expression
-- On LT reduce production numexp -> expression STAR expression
-- On LPAR reduce production numexp -> expression STAR expression
-- On LIMIT reduce production numexp -> expression STAR expression
-- On LCASE reduce production numexp -> expression STAR expression
-- On LANGMATCHES reduce production numexp -> expression STAR expression
-- On LANG reduce production numexp -> expression STAR expression
-- On Iriref_ reduce production numexp -> expression STAR expression
-- On Integer reduce production numexp -> expression STAR expression
-- On ISURI reduce production numexp -> expression STAR expression
-- On ISNUMERIC reduce production numexp -> expression STAR expression
-- On ISLITERAL reduce production numexp -> expression STAR expression
-- On ISIRI reduce production numexp -> expression STAR expression
-- On ISBLANK reduce production numexp -> expression STAR expression
-- On IRI reduce production numexp -> expression STAR expression
-- On IN reduce production numexp -> expression STAR expression
-- On IF reduce production numexp -> expression STAR expression
-- On HOURS reduce production numexp -> expression STAR expression
-- On HAVING reduce production numexp -> expression STAR expression
-- On GTE reduce production numexp -> expression STAR expression
-- On GT reduce production numexp -> expression STAR expression
-- On GROUP_CONCAT reduce production numexp -> expression STAR expression
-- On FLOOR reduce production numexp -> expression STAR expression
-- On EXISTS reduce production numexp -> expression STAR expression
-- On EQUAL reduce production numexp -> expression STAR expression
-- On EOF reduce production numexp -> expression STAR expression
-- On ENCODE_FOR_URI reduce production numexp -> expression STAR expression
-- On Double reduce production numexp -> expression STAR expression
-- On Decimal reduce production numexp -> expression STAR expression
-- On DAY reduce production numexp -> expression STAR expression
-- On DATATYPE reduce production numexp -> expression STAR expression
-- On COUNT reduce production numexp -> expression STAR expression
-- On CONTAINS reduce production numexp -> expression STAR expression
-- On CONCAT reduce production numexp -> expression STAR expression
-- On COMMA reduce production numexp -> expression STAR expression
-- On COALESCE reduce production numexp -> expression STAR expression
-- On CEIL reduce production numexp -> expression STAR expression
-- On Boolean reduce production numexp -> expression STAR expression
-- On BOUND reduce production numexp -> expression STAR expression
-- On BNODE reduce production numexp -> expression STAR expression
-- On BANG reduce production numexp -> expression STAR expression
-- On AVG reduce production numexp -> expression STAR expression
-- On AS reduce production numexp -> expression STAR expression
-- On AMPAMP reduce production numexp -> expression STAR expression
-- On ABS reduce production numexp -> expression STAR expression

State 336:
## Known stack suffix:
## expression numeric_literal_positive
## LR(1) items:
numexp -> expression numeric_literal_positive . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production numexp -> expression numeric_literal_positive

State 337:
## Known stack suffix:
## expression numeric_literal_negative
## LR(1) items:
numexp -> expression numeric_literal_negative . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production numexp -> expression numeric_literal_negative

State 338:
## Known stack suffix:
## built_in_call
## LR(1) items:
primary_expression -> built_in_call . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expression -> built_in_call

State 339:
## Known stack suffix:
## bracketted_expression
## LR(1) items:
primary_expression -> bracketted_expression . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expression -> bracketted_expression

State 340:
## Known stack suffix:
## boolean_literal
## LR(1) items:
primary_expression -> boolean_literal . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expression -> boolean_literal

State 341:
## Known stack suffix:
## aggregate
## LR(1) items:
built_in_call -> aggregate . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production built_in_call -> aggregate

State 342:
## Known stack suffix:
## expression SLASH
## LR(1) items:
numexp -> expression SLASH . expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 343
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 343:
## Known stack suffix:
## expression SLASH expression
## LR(1) items:
numexp -> expression . STAR expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . SLASH expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression SLASH expression . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . PLUS expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . MINUS expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . numeric_literal_positive [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . numeric_literal_negative [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
## Transitions:
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:
-- On YEAR reduce production numexp -> expression SLASH expression
-- On Var2 reduce production numexp -> expression SLASH expression
-- On Var1 reduce production numexp -> expression SLASH expression
-- On VALUES reduce production numexp -> expression SLASH expression
-- On UUID reduce production numexp -> expression SLASH expression
-- On URI reduce production numexp -> expression SLASH expression
-- On UCASE reduce production numexp -> expression SLASH expression
-- On TZ reduce production numexp -> expression SLASH expression
-- On TIMEZONE reduce production numexp -> expression SLASH expression
-- On String_literal reduce production numexp -> expression SLASH expression
-- On SUM reduce production numexp -> expression SLASH expression
-- On SUBSTR reduce production numexp -> expression SLASH expression
-- On STRUUID reduce production numexp -> expression SLASH expression
-- On STRSTARTS reduce production numexp -> expression SLASH expression
-- On STRLEN reduce production numexp -> expression SLASH expression
-- On STRLANG reduce production numexp -> expression SLASH expression
-- On STRENDS reduce production numexp -> expression SLASH expression
-- On STRDT reduce production numexp -> expression SLASH expression
-- On STRBEFORE reduce production numexp -> expression SLASH expression
-- On STRAFTER reduce production numexp -> expression SLASH expression
-- On STR reduce production numexp -> expression SLASH expression
-- On STAR reduce production numexp -> expression SLASH expression
-- On SLASH reduce production numexp -> expression SLASH expression
-- On SHA512 reduce production numexp -> expression SLASH expression
-- On SHA384 reduce production numexp -> expression SLASH expression
-- On SHA256 reduce production numexp -> expression SLASH expression
-- On SHA1 reduce production numexp -> expression SLASH expression
-- On SEMICOLON reduce production numexp -> expression SLASH expression
-- On SECONDS reduce production numexp -> expression SLASH expression
-- On SAMPLE reduce production numexp -> expression SLASH expression
-- On SAMETERM reduce production numexp -> expression SLASH expression
-- On RPAR reduce production numexp -> expression SLASH expression
-- On ROUND reduce production numexp -> expression SLASH expression
-- On REPLACE reduce production numexp -> expression SLASH expression
-- On REGEX reduce production numexp -> expression SLASH expression
-- On RBRACE reduce production numexp -> expression SLASH expression
-- On RAND reduce production numexp -> expression SLASH expression
-- On Pname_ns reduce production numexp -> expression SLASH expression
-- On Pname_ln reduce production numexp -> expression SLASH expression
-- On PLUS reduce production numexp -> expression SLASH expression
-- On PIPEPIPE reduce production numexp -> expression SLASH expression
-- On ORDER reduce production numexp -> expression SLASH expression
-- On OFFSET reduce production numexp -> expression SLASH expression
-- On NOW reduce production numexp -> expression SLASH expression
-- On NOTEQUAL reduce production numexp -> expression SLASH expression
-- On NOT reduce production numexp -> expression SLASH expression
-- On MONTH reduce production numexp -> expression SLASH expression
-- On MINUTES reduce production numexp -> expression SLASH expression
-- On MINUS reduce production numexp -> expression SLASH expression
-- On MIN reduce production numexp -> expression SLASH expression
-- On MD5 reduce production numexp -> expression SLASH expression
-- On MAX reduce production numexp -> expression SLASH expression
-- On LTE reduce production numexp -> expression SLASH expression
-- On LT reduce production numexp -> expression SLASH expression
-- On LPAR reduce production numexp -> expression SLASH expression
-- On LIMIT reduce production numexp -> expression SLASH expression
-- On LCASE reduce production numexp -> expression SLASH expression
-- On LANGMATCHES reduce production numexp -> expression SLASH expression
-- On LANG reduce production numexp -> expression SLASH expression
-- On Iriref_ reduce production numexp -> expression SLASH expression
-- On Integer reduce production numexp -> expression SLASH expression
-- On ISURI reduce production numexp -> expression SLASH expression
-- On ISNUMERIC reduce production numexp -> expression SLASH expression
-- On ISLITERAL reduce production numexp -> expression SLASH expression
-- On ISIRI reduce production numexp -> expression SLASH expression
-- On ISBLANK reduce production numexp -> expression SLASH expression
-- On IRI reduce production numexp -> expression SLASH expression
-- On IN reduce production numexp -> expression SLASH expression
-- On IF reduce production numexp -> expression SLASH expression
-- On HOURS reduce production numexp -> expression SLASH expression
-- On HAVING reduce production numexp -> expression SLASH expression
-- On GTE reduce production numexp -> expression SLASH expression
-- On GT reduce production numexp -> expression SLASH expression
-- On GROUP_CONCAT reduce production numexp -> expression SLASH expression
-- On FLOOR reduce production numexp -> expression SLASH expression
-- On EXISTS reduce production numexp -> expression SLASH expression
-- On EQUAL reduce production numexp -> expression SLASH expression
-- On EOF reduce production numexp -> expression SLASH expression
-- On ENCODE_FOR_URI reduce production numexp -> expression SLASH expression
-- On Double reduce production numexp -> expression SLASH expression
-- On Decimal reduce production numexp -> expression SLASH expression
-- On DAY reduce production numexp -> expression SLASH expression
-- On DATATYPE reduce production numexp -> expression SLASH expression
-- On COUNT reduce production numexp -> expression SLASH expression
-- On CONTAINS reduce production numexp -> expression SLASH expression
-- On CONCAT reduce production numexp -> expression SLASH expression
-- On COMMA reduce production numexp -> expression SLASH expression
-- On COALESCE reduce production numexp -> expression SLASH expression
-- On CEIL reduce production numexp -> expression SLASH expression
-- On Boolean reduce production numexp -> expression SLASH expression
-- On BOUND reduce production numexp -> expression SLASH expression
-- On BNODE reduce production numexp -> expression SLASH expression
-- On BANG reduce production numexp -> expression SLASH expression
-- On AVG reduce production numexp -> expression SLASH expression
-- On AS reduce production numexp -> expression SLASH expression
-- On AMPAMP reduce production numexp -> expression SLASH expression
-- On ABS reduce production numexp -> expression SLASH expression

State 344:
## Known stack suffix:
## expression PLUS
## LR(1) items:
numexp -> expression PLUS . expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 345
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 345:
## Known stack suffix:
## expression PLUS expression
## LR(1) items:
numexp -> expression . STAR expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . SLASH expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . PLUS expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression PLUS expression . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . MINUS expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . numeric_literal_positive [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . numeric_literal_negative [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:
-- On YEAR reduce production numexp -> expression PLUS expression
-- On Var2 reduce production numexp -> expression PLUS expression
-- On Var1 reduce production numexp -> expression PLUS expression
-- On VALUES reduce production numexp -> expression PLUS expression
-- On UUID reduce production numexp -> expression PLUS expression
-- On URI reduce production numexp -> expression PLUS expression
-- On UCASE reduce production numexp -> expression PLUS expression
-- On TZ reduce production numexp -> expression PLUS expression
-- On TIMEZONE reduce production numexp -> expression PLUS expression
-- On String_literal reduce production numexp -> expression PLUS expression
-- On SUM reduce production numexp -> expression PLUS expression
-- On SUBSTR reduce production numexp -> expression PLUS expression
-- On STRUUID reduce production numexp -> expression PLUS expression
-- On STRSTARTS reduce production numexp -> expression PLUS expression
-- On STRLEN reduce production numexp -> expression PLUS expression
-- On STRLANG reduce production numexp -> expression PLUS expression
-- On STRENDS reduce production numexp -> expression PLUS expression
-- On STRDT reduce production numexp -> expression PLUS expression
-- On STRBEFORE reduce production numexp -> expression PLUS expression
-- On STRAFTER reduce production numexp -> expression PLUS expression
-- On STR reduce production numexp -> expression PLUS expression
-- On SHA512 reduce production numexp -> expression PLUS expression
-- On SHA384 reduce production numexp -> expression PLUS expression
-- On SHA256 reduce production numexp -> expression PLUS expression
-- On SHA1 reduce production numexp -> expression PLUS expression
-- On SEMICOLON reduce production numexp -> expression PLUS expression
-- On SECONDS reduce production numexp -> expression PLUS expression
-- On SAMPLE reduce production numexp -> expression PLUS expression
-- On SAMETERM reduce production numexp -> expression PLUS expression
-- On RPAR reduce production numexp -> expression PLUS expression
-- On ROUND reduce production numexp -> expression PLUS expression
-- On REPLACE reduce production numexp -> expression PLUS expression
-- On REGEX reduce production numexp -> expression PLUS expression
-- On RBRACE reduce production numexp -> expression PLUS expression
-- On RAND reduce production numexp -> expression PLUS expression
-- On Pname_ns reduce production numexp -> expression PLUS expression
-- On Pname_ln reduce production numexp -> expression PLUS expression
-- On PLUS reduce production numexp -> expression PLUS expression
-- On PIPEPIPE reduce production numexp -> expression PLUS expression
-- On ORDER reduce production numexp -> expression PLUS expression
-- On OFFSET reduce production numexp -> expression PLUS expression
-- On NOW reduce production numexp -> expression PLUS expression
-- On NOTEQUAL reduce production numexp -> expression PLUS expression
-- On NOT reduce production numexp -> expression PLUS expression
-- On MONTH reduce production numexp -> expression PLUS expression
-- On MINUTES reduce production numexp -> expression PLUS expression
-- On MINUS reduce production numexp -> expression PLUS expression
-- On MIN reduce production numexp -> expression PLUS expression
-- On MD5 reduce production numexp -> expression PLUS expression
-- On MAX reduce production numexp -> expression PLUS expression
-- On LTE reduce production numexp -> expression PLUS expression
-- On LT reduce production numexp -> expression PLUS expression
-- On LPAR reduce production numexp -> expression PLUS expression
-- On LIMIT reduce production numexp -> expression PLUS expression
-- On LCASE reduce production numexp -> expression PLUS expression
-- On LANGMATCHES reduce production numexp -> expression PLUS expression
-- On LANG reduce production numexp -> expression PLUS expression
-- On Iriref_ reduce production numexp -> expression PLUS expression
-- On Integer reduce production numexp -> expression PLUS expression
-- On ISURI reduce production numexp -> expression PLUS expression
-- On ISNUMERIC reduce production numexp -> expression PLUS expression
-- On ISLITERAL reduce production numexp -> expression PLUS expression
-- On ISIRI reduce production numexp -> expression PLUS expression
-- On ISBLANK reduce production numexp -> expression PLUS expression
-- On IRI reduce production numexp -> expression PLUS expression
-- On IN reduce production numexp -> expression PLUS expression
-- On IF reduce production numexp -> expression PLUS expression
-- On HOURS reduce production numexp -> expression PLUS expression
-- On HAVING reduce production numexp -> expression PLUS expression
-- On GTE reduce production numexp -> expression PLUS expression
-- On GT reduce production numexp -> expression PLUS expression
-- On GROUP_CONCAT reduce production numexp -> expression PLUS expression
-- On FLOOR reduce production numexp -> expression PLUS expression
-- On EXISTS reduce production numexp -> expression PLUS expression
-- On EQUAL reduce production numexp -> expression PLUS expression
-- On EOF reduce production numexp -> expression PLUS expression
-- On ENCODE_FOR_URI reduce production numexp -> expression PLUS expression
-- On Double reduce production numexp -> expression PLUS expression
-- On Decimal reduce production numexp -> expression PLUS expression
-- On DAY reduce production numexp -> expression PLUS expression
-- On DATATYPE reduce production numexp -> expression PLUS expression
-- On COUNT reduce production numexp -> expression PLUS expression
-- On CONTAINS reduce production numexp -> expression PLUS expression
-- On CONCAT reduce production numexp -> expression PLUS expression
-- On COMMA reduce production numexp -> expression PLUS expression
-- On COALESCE reduce production numexp -> expression PLUS expression
-- On CEIL reduce production numexp -> expression PLUS expression
-- On Boolean reduce production numexp -> expression PLUS expression
-- On BOUND reduce production numexp -> expression PLUS expression
-- On BNODE reduce production numexp -> expression PLUS expression
-- On BANG reduce production numexp -> expression PLUS expression
-- On AVG reduce production numexp -> expression PLUS expression
-- On AS reduce production numexp -> expression PLUS expression
-- On AMPAMP reduce production numexp -> expression PLUS expression
-- On ABS reduce production numexp -> expression PLUS expression

State 346:
## Known stack suffix:
## expression MINUS
## LR(1) items:
numexp -> expression MINUS . expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 347
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 347:
## Known stack suffix:
## expression MINUS expression
## LR(1) items:
numexp -> expression . STAR expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . SLASH expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . PLUS expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . MINUS expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression MINUS expression . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . numeric_literal_positive [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . numeric_literal_negative [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:
-- On YEAR reduce production numexp -> expression MINUS expression
-- On Var2 reduce production numexp -> expression MINUS expression
-- On Var1 reduce production numexp -> expression MINUS expression
-- On VALUES reduce production numexp -> expression MINUS expression
-- On UUID reduce production numexp -> expression MINUS expression
-- On URI reduce production numexp -> expression MINUS expression
-- On UCASE reduce production numexp -> expression MINUS expression
-- On TZ reduce production numexp -> expression MINUS expression
-- On TIMEZONE reduce production numexp -> expression MINUS expression
-- On String_literal reduce production numexp -> expression MINUS expression
-- On SUM reduce production numexp -> expression MINUS expression
-- On SUBSTR reduce production numexp -> expression MINUS expression
-- On STRUUID reduce production numexp -> expression MINUS expression
-- On STRSTARTS reduce production numexp -> expression MINUS expression
-- On STRLEN reduce production numexp -> expression MINUS expression
-- On STRLANG reduce production numexp -> expression MINUS expression
-- On STRENDS reduce production numexp -> expression MINUS expression
-- On STRDT reduce production numexp -> expression MINUS expression
-- On STRBEFORE reduce production numexp -> expression MINUS expression
-- On STRAFTER reduce production numexp -> expression MINUS expression
-- On STR reduce production numexp -> expression MINUS expression
-- On SHA512 reduce production numexp -> expression MINUS expression
-- On SHA384 reduce production numexp -> expression MINUS expression
-- On SHA256 reduce production numexp -> expression MINUS expression
-- On SHA1 reduce production numexp -> expression MINUS expression
-- On SEMICOLON reduce production numexp -> expression MINUS expression
-- On SECONDS reduce production numexp -> expression MINUS expression
-- On SAMPLE reduce production numexp -> expression MINUS expression
-- On SAMETERM reduce production numexp -> expression MINUS expression
-- On RPAR reduce production numexp -> expression MINUS expression
-- On ROUND reduce production numexp -> expression MINUS expression
-- On REPLACE reduce production numexp -> expression MINUS expression
-- On REGEX reduce production numexp -> expression MINUS expression
-- On RBRACE reduce production numexp -> expression MINUS expression
-- On RAND reduce production numexp -> expression MINUS expression
-- On Pname_ns reduce production numexp -> expression MINUS expression
-- On Pname_ln reduce production numexp -> expression MINUS expression
-- On PLUS reduce production numexp -> expression MINUS expression
-- On PIPEPIPE reduce production numexp -> expression MINUS expression
-- On ORDER reduce production numexp -> expression MINUS expression
-- On OFFSET reduce production numexp -> expression MINUS expression
-- On NOW reduce production numexp -> expression MINUS expression
-- On NOTEQUAL reduce production numexp -> expression MINUS expression
-- On NOT reduce production numexp -> expression MINUS expression
-- On MONTH reduce production numexp -> expression MINUS expression
-- On MINUTES reduce production numexp -> expression MINUS expression
-- On MINUS reduce production numexp -> expression MINUS expression
-- On MIN reduce production numexp -> expression MINUS expression
-- On MD5 reduce production numexp -> expression MINUS expression
-- On MAX reduce production numexp -> expression MINUS expression
-- On LTE reduce production numexp -> expression MINUS expression
-- On LT reduce production numexp -> expression MINUS expression
-- On LPAR reduce production numexp -> expression MINUS expression
-- On LIMIT reduce production numexp -> expression MINUS expression
-- On LCASE reduce production numexp -> expression MINUS expression
-- On LANGMATCHES reduce production numexp -> expression MINUS expression
-- On LANG reduce production numexp -> expression MINUS expression
-- On Iriref_ reduce production numexp -> expression MINUS expression
-- On Integer reduce production numexp -> expression MINUS expression
-- On ISURI reduce production numexp -> expression MINUS expression
-- On ISNUMERIC reduce production numexp -> expression MINUS expression
-- On ISLITERAL reduce production numexp -> expression MINUS expression
-- On ISIRI reduce production numexp -> expression MINUS expression
-- On ISBLANK reduce production numexp -> expression MINUS expression
-- On IRI reduce production numexp -> expression MINUS expression
-- On IN reduce production numexp -> expression MINUS expression
-- On IF reduce production numexp -> expression MINUS expression
-- On HOURS reduce production numexp -> expression MINUS expression
-- On HAVING reduce production numexp -> expression MINUS expression
-- On GTE reduce production numexp -> expression MINUS expression
-- On GT reduce production numexp -> expression MINUS expression
-- On GROUP_CONCAT reduce production numexp -> expression MINUS expression
-- On FLOOR reduce production numexp -> expression MINUS expression
-- On EXISTS reduce production numexp -> expression MINUS expression
-- On EQUAL reduce production numexp -> expression MINUS expression
-- On EOF reduce production numexp -> expression MINUS expression
-- On ENCODE_FOR_URI reduce production numexp -> expression MINUS expression
-- On Double reduce production numexp -> expression MINUS expression
-- On Decimal reduce production numexp -> expression MINUS expression
-- On DAY reduce production numexp -> expression MINUS expression
-- On DATATYPE reduce production numexp -> expression MINUS expression
-- On COUNT reduce production numexp -> expression MINUS expression
-- On CONTAINS reduce production numexp -> expression MINUS expression
-- On CONCAT reduce production numexp -> expression MINUS expression
-- On COMMA reduce production numexp -> expression MINUS expression
-- On COALESCE reduce production numexp -> expression MINUS expression
-- On CEIL reduce production numexp -> expression MINUS expression
-- On Boolean reduce production numexp -> expression MINUS expression
-- On BOUND reduce production numexp -> expression MINUS expression
-- On BNODE reduce production numexp -> expression MINUS expression
-- On BANG reduce production numexp -> expression MINUS expression
-- On AVG reduce production numexp -> expression MINUS expression
-- On AS reduce production numexp -> expression MINUS expression
-- On AMPAMP reduce production numexp -> expression MINUS expression
-- On ABS reduce production numexp -> expression MINUS expression

State 348:
## Known stack suffix:
## expression COMMA
## LR(1) items:
separated_nonempty_list(COMMA,expression) -> expression COMMA . separated_nonempty_list(COMMA,expression) [ RPAR ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On separated_nonempty_list(COMMA,expression) shift to state 349
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 333
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 349:
## Known stack suffix:
## expression COMMA separated_nonempty_list(COMMA,expression)
## LR(1) items:
separated_nonempty_list(COMMA,expression) -> expression COMMA separated_nonempty_list(COMMA,expression) . [ RPAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production separated_nonempty_list(COMMA,expression) -> expression COMMA separated_nonempty_list(COMMA,expression)

State 350:
## Known stack suffix:
## iri arg_list
## LR(1) items:
function_call -> iri arg_list . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production function_call -> iri arg_list

State 351:
## Known stack suffix:
## expression
## LR(1) items:
numexp -> expression . STAR expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . SLASH expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . PLUS expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . MINUS expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . numeric_literal_positive [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . numeric_literal_negative [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 352:
## Known stack suffix:
## numexp NOT
## LR(1) items:
relational_expression -> numexp NOT . IN expression_list [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
## Transitions:
-- On IN shift to state 353
## Reductions:

State 353:
## Known stack suffix:
## numexp NOT IN
## LR(1) items:
relational_expression -> numexp NOT IN . expression_list [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
## Transitions:
-- On NIL shift to state 292
-- On LPAR shift to state 293
-- On expression_list shift to state 354
## Reductions:

State 354:
## Known stack suffix:
## numexp NOT IN expression_list
## LR(1) items:
relational_expression -> numexp NOT IN expression_list . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production relational_expression -> numexp NOT IN expression_list

State 355:
## Known stack suffix:
## numexp LTE
## LR(1) items:
relational_expression -> numexp LTE . numexp [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 356
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 351
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 356:
## Known stack suffix:
## numexp LTE numexp
## LR(1) items:
relational_expression -> numexp . EQUAL numexp [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . NOTEQUAL numexp [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . LT numexp [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . GT numexp [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . LTE numexp [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp LTE numexp . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
relational_expression -> numexp . GTE numexp [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . IN expression_list [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . NOT IN expression_list [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
## Transitions:
## Reductions:
-- On YEAR reduce production relational_expression -> numexp LTE numexp
-- On Var2 reduce production relational_expression -> numexp LTE numexp
-- On Var1 reduce production relational_expression -> numexp LTE numexp
-- On VALUES reduce production relational_expression -> numexp LTE numexp
-- On UUID reduce production relational_expression -> numexp LTE numexp
-- On URI reduce production relational_expression -> numexp LTE numexp
-- On UCASE reduce production relational_expression -> numexp LTE numexp
-- On TZ reduce production relational_expression -> numexp LTE numexp
-- On TIMEZONE reduce production relational_expression -> numexp LTE numexp
-- On String_literal reduce production relational_expression -> numexp LTE numexp
-- On SUM reduce production relational_expression -> numexp LTE numexp
-- On SUBSTR reduce production relational_expression -> numexp LTE numexp
-- On STRUUID reduce production relational_expression -> numexp LTE numexp
-- On STRSTARTS reduce production relational_expression -> numexp LTE numexp
-- On STRLEN reduce production relational_expression -> numexp LTE numexp
-- On STRLANG reduce production relational_expression -> numexp LTE numexp
-- On STRENDS reduce production relational_expression -> numexp LTE numexp
-- On STRDT reduce production relational_expression -> numexp LTE numexp
-- On STRBEFORE reduce production relational_expression -> numexp LTE numexp
-- On STRAFTER reduce production relational_expression -> numexp LTE numexp
-- On STR reduce production relational_expression -> numexp LTE numexp
-- On STAR reduce production relational_expression -> numexp LTE numexp
-- On SLASH reduce production relational_expression -> numexp LTE numexp
-- On SHA512 reduce production relational_expression -> numexp LTE numexp
-- On SHA384 reduce production relational_expression -> numexp LTE numexp
-- On SHA256 reduce production relational_expression -> numexp LTE numexp
-- On SHA1 reduce production relational_expression -> numexp LTE numexp
-- On SEMICOLON reduce production relational_expression -> numexp LTE numexp
-- On SECONDS reduce production relational_expression -> numexp LTE numexp
-- On SAMPLE reduce production relational_expression -> numexp LTE numexp
-- On SAMETERM reduce production relational_expression -> numexp LTE numexp
-- On RPAR reduce production relational_expression -> numexp LTE numexp
-- On ROUND reduce production relational_expression -> numexp LTE numexp
-- On REPLACE reduce production relational_expression -> numexp LTE numexp
-- On REGEX reduce production relational_expression -> numexp LTE numexp
-- On RBRACE reduce production relational_expression -> numexp LTE numexp
-- On RAND reduce production relational_expression -> numexp LTE numexp
-- On Pname_ns reduce production relational_expression -> numexp LTE numexp
-- On Pname_ln reduce production relational_expression -> numexp LTE numexp
-- On PLUS reduce production relational_expression -> numexp LTE numexp
-- On PIPEPIPE reduce production relational_expression -> numexp LTE numexp
-- On ORDER reduce production relational_expression -> numexp LTE numexp
-- On OFFSET reduce production relational_expression -> numexp LTE numexp
-- On NOW reduce production relational_expression -> numexp LTE numexp
-- On MONTH reduce production relational_expression -> numexp LTE numexp
-- On MINUTES reduce production relational_expression -> numexp LTE numexp
-- On MINUS reduce production relational_expression -> numexp LTE numexp
-- On MIN reduce production relational_expression -> numexp LTE numexp
-- On MD5 reduce production relational_expression -> numexp LTE numexp
-- On MAX reduce production relational_expression -> numexp LTE numexp
-- On LPAR reduce production relational_expression -> numexp LTE numexp
-- On LIMIT reduce production relational_expression -> numexp LTE numexp
-- On LCASE reduce production relational_expression -> numexp LTE numexp
-- On LANGMATCHES reduce production relational_expression -> numexp LTE numexp
-- On LANG reduce production relational_expression -> numexp LTE numexp
-- On Iriref_ reduce production relational_expression -> numexp LTE numexp
-- On Integer_positive reduce production relational_expression -> numexp LTE numexp
-- On Integer_negative reduce production relational_expression -> numexp LTE numexp
-- On Integer reduce production relational_expression -> numexp LTE numexp
-- On ISURI reduce production relational_expression -> numexp LTE numexp
-- On ISNUMERIC reduce production relational_expression -> numexp LTE numexp
-- On ISLITERAL reduce production relational_expression -> numexp LTE numexp
-- On ISIRI reduce production relational_expression -> numexp LTE numexp
-- On ISBLANK reduce production relational_expression -> numexp LTE numexp
-- On IRI reduce production relational_expression -> numexp LTE numexp
-- On IF reduce production relational_expression -> numexp LTE numexp
-- On HOURS reduce production relational_expression -> numexp LTE numexp
-- On HAVING reduce production relational_expression -> numexp LTE numexp
-- On GROUP_CONCAT reduce production relational_expression -> numexp LTE numexp
-- On FLOOR reduce production relational_expression -> numexp LTE numexp
-- On EXISTS reduce production relational_expression -> numexp LTE numexp
-- On EOF reduce production relational_expression -> numexp LTE numexp
-- On ENCODE_FOR_URI reduce production relational_expression -> numexp LTE numexp
-- On Double_positive reduce production relational_expression -> numexp LTE numexp
-- On Double_negative reduce production relational_expression -> numexp LTE numexp
-- On Double reduce production relational_expression -> numexp LTE numexp
-- On Decimal_positive reduce production relational_expression -> numexp LTE numexp
-- On Decimal_negative reduce production relational_expression -> numexp LTE numexp
-- On Decimal reduce production relational_expression -> numexp LTE numexp
-- On DAY reduce production relational_expression -> numexp LTE numexp
-- On DATATYPE reduce production relational_expression -> numexp LTE numexp
-- On COUNT reduce production relational_expression -> numexp LTE numexp
-- On CONTAINS reduce production relational_expression -> numexp LTE numexp
-- On CONCAT reduce production relational_expression -> numexp LTE numexp
-- On COMMA reduce production relational_expression -> numexp LTE numexp
-- On COALESCE reduce production relational_expression -> numexp LTE numexp
-- On CEIL reduce production relational_expression -> numexp LTE numexp
-- On Boolean reduce production relational_expression -> numexp LTE numexp
-- On BOUND reduce production relational_expression -> numexp LTE numexp
-- On BNODE reduce production relational_expression -> numexp LTE numexp
-- On BANG reduce production relational_expression -> numexp LTE numexp
-- On AVG reduce production relational_expression -> numexp LTE numexp
-- On AS reduce production relational_expression -> numexp LTE numexp
-- On AMPAMP reduce production relational_expression -> numexp LTE numexp
-- On ABS reduce production relational_expression -> numexp LTE numexp

State 357:
## Known stack suffix:
## numexp LT
## LR(1) items:
relational_expression -> numexp LT . numexp [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 358
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 351
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 358:
## Known stack suffix:
## numexp LT numexp
## LR(1) items:
relational_expression -> numexp . EQUAL numexp [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . NOTEQUAL numexp [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . LT numexp [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp LT numexp . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
relational_expression -> numexp . GT numexp [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . LTE numexp [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . GTE numexp [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . IN expression_list [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . NOT IN expression_list [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
## Transitions:
## Reductions:
-- On YEAR reduce production relational_expression -> numexp LT numexp
-- On Var2 reduce production relational_expression -> numexp LT numexp
-- On Var1 reduce production relational_expression -> numexp LT numexp
-- On VALUES reduce production relational_expression -> numexp LT numexp
-- On UUID reduce production relational_expression -> numexp LT numexp
-- On URI reduce production relational_expression -> numexp LT numexp
-- On UCASE reduce production relational_expression -> numexp LT numexp
-- On TZ reduce production relational_expression -> numexp LT numexp
-- On TIMEZONE reduce production relational_expression -> numexp LT numexp
-- On String_literal reduce production relational_expression -> numexp LT numexp
-- On SUM reduce production relational_expression -> numexp LT numexp
-- On SUBSTR reduce production relational_expression -> numexp LT numexp
-- On STRUUID reduce production relational_expression -> numexp LT numexp
-- On STRSTARTS reduce production relational_expression -> numexp LT numexp
-- On STRLEN reduce production relational_expression -> numexp LT numexp
-- On STRLANG reduce production relational_expression -> numexp LT numexp
-- On STRENDS reduce production relational_expression -> numexp LT numexp
-- On STRDT reduce production relational_expression -> numexp LT numexp
-- On STRBEFORE reduce production relational_expression -> numexp LT numexp
-- On STRAFTER reduce production relational_expression -> numexp LT numexp
-- On STR reduce production relational_expression -> numexp LT numexp
-- On STAR reduce production relational_expression -> numexp LT numexp
-- On SLASH reduce production relational_expression -> numexp LT numexp
-- On SHA512 reduce production relational_expression -> numexp LT numexp
-- On SHA384 reduce production relational_expression -> numexp LT numexp
-- On SHA256 reduce production relational_expression -> numexp LT numexp
-- On SHA1 reduce production relational_expression -> numexp LT numexp
-- On SEMICOLON reduce production relational_expression -> numexp LT numexp
-- On SECONDS reduce production relational_expression -> numexp LT numexp
-- On SAMPLE reduce production relational_expression -> numexp LT numexp
-- On SAMETERM reduce production relational_expression -> numexp LT numexp
-- On RPAR reduce production relational_expression -> numexp LT numexp
-- On ROUND reduce production relational_expression -> numexp LT numexp
-- On REPLACE reduce production relational_expression -> numexp LT numexp
-- On REGEX reduce production relational_expression -> numexp LT numexp
-- On RBRACE reduce production relational_expression -> numexp LT numexp
-- On RAND reduce production relational_expression -> numexp LT numexp
-- On Pname_ns reduce production relational_expression -> numexp LT numexp
-- On Pname_ln reduce production relational_expression -> numexp LT numexp
-- On PLUS reduce production relational_expression -> numexp LT numexp
-- On PIPEPIPE reduce production relational_expression -> numexp LT numexp
-- On ORDER reduce production relational_expression -> numexp LT numexp
-- On OFFSET reduce production relational_expression -> numexp LT numexp
-- On NOW reduce production relational_expression -> numexp LT numexp
-- On MONTH reduce production relational_expression -> numexp LT numexp
-- On MINUTES reduce production relational_expression -> numexp LT numexp
-- On MINUS reduce production relational_expression -> numexp LT numexp
-- On MIN reduce production relational_expression -> numexp LT numexp
-- On MD5 reduce production relational_expression -> numexp LT numexp
-- On MAX reduce production relational_expression -> numexp LT numexp
-- On LPAR reduce production relational_expression -> numexp LT numexp
-- On LIMIT reduce production relational_expression -> numexp LT numexp
-- On LCASE reduce production relational_expression -> numexp LT numexp
-- On LANGMATCHES reduce production relational_expression -> numexp LT numexp
-- On LANG reduce production relational_expression -> numexp LT numexp
-- On Iriref_ reduce production relational_expression -> numexp LT numexp
-- On Integer_positive reduce production relational_expression -> numexp LT numexp
-- On Integer_negative reduce production relational_expression -> numexp LT numexp
-- On Integer reduce production relational_expression -> numexp LT numexp
-- On ISURI reduce production relational_expression -> numexp LT numexp
-- On ISNUMERIC reduce production relational_expression -> numexp LT numexp
-- On ISLITERAL reduce production relational_expression -> numexp LT numexp
-- On ISIRI reduce production relational_expression -> numexp LT numexp
-- On ISBLANK reduce production relational_expression -> numexp LT numexp
-- On IRI reduce production relational_expression -> numexp LT numexp
-- On IF reduce production relational_expression -> numexp LT numexp
-- On HOURS reduce production relational_expression -> numexp LT numexp
-- On HAVING reduce production relational_expression -> numexp LT numexp
-- On GROUP_CONCAT reduce production relational_expression -> numexp LT numexp
-- On FLOOR reduce production relational_expression -> numexp LT numexp
-- On EXISTS reduce production relational_expression -> numexp LT numexp
-- On EOF reduce production relational_expression -> numexp LT numexp
-- On ENCODE_FOR_URI reduce production relational_expression -> numexp LT numexp
-- On Double_positive reduce production relational_expression -> numexp LT numexp
-- On Double_negative reduce production relational_expression -> numexp LT numexp
-- On Double reduce production relational_expression -> numexp LT numexp
-- On Decimal_positive reduce production relational_expression -> numexp LT numexp
-- On Decimal_negative reduce production relational_expression -> numexp LT numexp
-- On Decimal reduce production relational_expression -> numexp LT numexp
-- On DAY reduce production relational_expression -> numexp LT numexp
-- On DATATYPE reduce production relational_expression -> numexp LT numexp
-- On COUNT reduce production relational_expression -> numexp LT numexp
-- On CONTAINS reduce production relational_expression -> numexp LT numexp
-- On CONCAT reduce production relational_expression -> numexp LT numexp
-- On COMMA reduce production relational_expression -> numexp LT numexp
-- On COALESCE reduce production relational_expression -> numexp LT numexp
-- On CEIL reduce production relational_expression -> numexp LT numexp
-- On Boolean reduce production relational_expression -> numexp LT numexp
-- On BOUND reduce production relational_expression -> numexp LT numexp
-- On BNODE reduce production relational_expression -> numexp LT numexp
-- On BANG reduce production relational_expression -> numexp LT numexp
-- On AVG reduce production relational_expression -> numexp LT numexp
-- On AS reduce production relational_expression -> numexp LT numexp
-- On AMPAMP reduce production relational_expression -> numexp LT numexp
-- On ABS reduce production relational_expression -> numexp LT numexp

State 359:
## Known stack suffix:
## numexp IN
## LR(1) items:
relational_expression -> numexp IN . expression_list [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
## Transitions:
-- On NIL shift to state 292
-- On LPAR shift to state 293
-- On expression_list shift to state 360
## Reductions:

State 360:
## Known stack suffix:
## numexp IN expression_list
## LR(1) items:
relational_expression -> numexp IN expression_list . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production relational_expression -> numexp IN expression_list

State 361:
## Known stack suffix:
## numexp GTE
## LR(1) items:
relational_expression -> numexp GTE . numexp [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 362
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 351
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 362:
## Known stack suffix:
## numexp GTE numexp
## LR(1) items:
relational_expression -> numexp . EQUAL numexp [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . NOTEQUAL numexp [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . LT numexp [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . GT numexp [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . LTE numexp [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . GTE numexp [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp GTE numexp . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
relational_expression -> numexp . IN expression_list [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . NOT IN expression_list [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
## Transitions:
## Reductions:
-- On YEAR reduce production relational_expression -> numexp GTE numexp
-- On Var2 reduce production relational_expression -> numexp GTE numexp
-- On Var1 reduce production relational_expression -> numexp GTE numexp
-- On VALUES reduce production relational_expression -> numexp GTE numexp
-- On UUID reduce production relational_expression -> numexp GTE numexp
-- On URI reduce production relational_expression -> numexp GTE numexp
-- On UCASE reduce production relational_expression -> numexp GTE numexp
-- On TZ reduce production relational_expression -> numexp GTE numexp
-- On TIMEZONE reduce production relational_expression -> numexp GTE numexp
-- On String_literal reduce production relational_expression -> numexp GTE numexp
-- On SUM reduce production relational_expression -> numexp GTE numexp
-- On SUBSTR reduce production relational_expression -> numexp GTE numexp
-- On STRUUID reduce production relational_expression -> numexp GTE numexp
-- On STRSTARTS reduce production relational_expression -> numexp GTE numexp
-- On STRLEN reduce production relational_expression -> numexp GTE numexp
-- On STRLANG reduce production relational_expression -> numexp GTE numexp
-- On STRENDS reduce production relational_expression -> numexp GTE numexp
-- On STRDT reduce production relational_expression -> numexp GTE numexp
-- On STRBEFORE reduce production relational_expression -> numexp GTE numexp
-- On STRAFTER reduce production relational_expression -> numexp GTE numexp
-- On STR reduce production relational_expression -> numexp GTE numexp
-- On STAR reduce production relational_expression -> numexp GTE numexp
-- On SLASH reduce production relational_expression -> numexp GTE numexp
-- On SHA512 reduce production relational_expression -> numexp GTE numexp
-- On SHA384 reduce production relational_expression -> numexp GTE numexp
-- On SHA256 reduce production relational_expression -> numexp GTE numexp
-- On SHA1 reduce production relational_expression -> numexp GTE numexp
-- On SEMICOLON reduce production relational_expression -> numexp GTE numexp
-- On SECONDS reduce production relational_expression -> numexp GTE numexp
-- On SAMPLE reduce production relational_expression -> numexp GTE numexp
-- On SAMETERM reduce production relational_expression -> numexp GTE numexp
-- On RPAR reduce production relational_expression -> numexp GTE numexp
-- On ROUND reduce production relational_expression -> numexp GTE numexp
-- On REPLACE reduce production relational_expression -> numexp GTE numexp
-- On REGEX reduce production relational_expression -> numexp GTE numexp
-- On RBRACE reduce production relational_expression -> numexp GTE numexp
-- On RAND reduce production relational_expression -> numexp GTE numexp
-- On Pname_ns reduce production relational_expression -> numexp GTE numexp
-- On Pname_ln reduce production relational_expression -> numexp GTE numexp
-- On PLUS reduce production relational_expression -> numexp GTE numexp
-- On PIPEPIPE reduce production relational_expression -> numexp GTE numexp
-- On ORDER reduce production relational_expression -> numexp GTE numexp
-- On OFFSET reduce production relational_expression -> numexp GTE numexp
-- On NOW reduce production relational_expression -> numexp GTE numexp
-- On MONTH reduce production relational_expression -> numexp GTE numexp
-- On MINUTES reduce production relational_expression -> numexp GTE numexp
-- On MINUS reduce production relational_expression -> numexp GTE numexp
-- On MIN reduce production relational_expression -> numexp GTE numexp
-- On MD5 reduce production relational_expression -> numexp GTE numexp
-- On MAX reduce production relational_expression -> numexp GTE numexp
-- On LPAR reduce production relational_expression -> numexp GTE numexp
-- On LIMIT reduce production relational_expression -> numexp GTE numexp
-- On LCASE reduce production relational_expression -> numexp GTE numexp
-- On LANGMATCHES reduce production relational_expression -> numexp GTE numexp
-- On LANG reduce production relational_expression -> numexp GTE numexp
-- On Iriref_ reduce production relational_expression -> numexp GTE numexp
-- On Integer_positive reduce production relational_expression -> numexp GTE numexp
-- On Integer_negative reduce production relational_expression -> numexp GTE numexp
-- On Integer reduce production relational_expression -> numexp GTE numexp
-- On ISURI reduce production relational_expression -> numexp GTE numexp
-- On ISNUMERIC reduce production relational_expression -> numexp GTE numexp
-- On ISLITERAL reduce production relational_expression -> numexp GTE numexp
-- On ISIRI reduce production relational_expression -> numexp GTE numexp
-- On ISBLANK reduce production relational_expression -> numexp GTE numexp
-- On IRI reduce production relational_expression -> numexp GTE numexp
-- On IF reduce production relational_expression -> numexp GTE numexp
-- On HOURS reduce production relational_expression -> numexp GTE numexp
-- On HAVING reduce production relational_expression -> numexp GTE numexp
-- On GROUP_CONCAT reduce production relational_expression -> numexp GTE numexp
-- On FLOOR reduce production relational_expression -> numexp GTE numexp
-- On EXISTS reduce production relational_expression -> numexp GTE numexp
-- On EOF reduce production relational_expression -> numexp GTE numexp
-- On ENCODE_FOR_URI reduce production relational_expression -> numexp GTE numexp
-- On Double_positive reduce production relational_expression -> numexp GTE numexp
-- On Double_negative reduce production relational_expression -> numexp GTE numexp
-- On Double reduce production relational_expression -> numexp GTE numexp
-- On Decimal_positive reduce production relational_expression -> numexp GTE numexp
-- On Decimal_negative reduce production relational_expression -> numexp GTE numexp
-- On Decimal reduce production relational_expression -> numexp GTE numexp
-- On DAY reduce production relational_expression -> numexp GTE numexp
-- On DATATYPE reduce production relational_expression -> numexp GTE numexp
-- On COUNT reduce production relational_expression -> numexp GTE numexp
-- On CONTAINS reduce production relational_expression -> numexp GTE numexp
-- On CONCAT reduce production relational_expression -> numexp GTE numexp
-- On COMMA reduce production relational_expression -> numexp GTE numexp
-- On COALESCE reduce production relational_expression -> numexp GTE numexp
-- On CEIL reduce production relational_expression -> numexp GTE numexp
-- On Boolean reduce production relational_expression -> numexp GTE numexp
-- On BOUND reduce production relational_expression -> numexp GTE numexp
-- On BNODE reduce production relational_expression -> numexp GTE numexp
-- On BANG reduce production relational_expression -> numexp GTE numexp
-- On AVG reduce production relational_expression -> numexp GTE numexp
-- On AS reduce production relational_expression -> numexp GTE numexp
-- On AMPAMP reduce production relational_expression -> numexp GTE numexp
-- On ABS reduce production relational_expression -> numexp GTE numexp

State 363:
## Known stack suffix:
## numexp GT
## LR(1) items:
relational_expression -> numexp GT . numexp [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 364
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 351
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 364:
## Known stack suffix:
## numexp GT numexp
## LR(1) items:
relational_expression -> numexp . EQUAL numexp [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . NOTEQUAL numexp [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . LT numexp [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . GT numexp [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp GT numexp . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
relational_expression -> numexp . LTE numexp [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . GTE numexp [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . IN expression_list [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . NOT IN expression_list [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
## Transitions:
## Reductions:
-- On YEAR reduce production relational_expression -> numexp GT numexp
-- On Var2 reduce production relational_expression -> numexp GT numexp
-- On Var1 reduce production relational_expression -> numexp GT numexp
-- On VALUES reduce production relational_expression -> numexp GT numexp
-- On UUID reduce production relational_expression -> numexp GT numexp
-- On URI reduce production relational_expression -> numexp GT numexp
-- On UCASE reduce production relational_expression -> numexp GT numexp
-- On TZ reduce production relational_expression -> numexp GT numexp
-- On TIMEZONE reduce production relational_expression -> numexp GT numexp
-- On String_literal reduce production relational_expression -> numexp GT numexp
-- On SUM reduce production relational_expression -> numexp GT numexp
-- On SUBSTR reduce production relational_expression -> numexp GT numexp
-- On STRUUID reduce production relational_expression -> numexp GT numexp
-- On STRSTARTS reduce production relational_expression -> numexp GT numexp
-- On STRLEN reduce production relational_expression -> numexp GT numexp
-- On STRLANG reduce production relational_expression -> numexp GT numexp
-- On STRENDS reduce production relational_expression -> numexp GT numexp
-- On STRDT reduce production relational_expression -> numexp GT numexp
-- On STRBEFORE reduce production relational_expression -> numexp GT numexp
-- On STRAFTER reduce production relational_expression -> numexp GT numexp
-- On STR reduce production relational_expression -> numexp GT numexp
-- On STAR reduce production relational_expression -> numexp GT numexp
-- On SLASH reduce production relational_expression -> numexp GT numexp
-- On SHA512 reduce production relational_expression -> numexp GT numexp
-- On SHA384 reduce production relational_expression -> numexp GT numexp
-- On SHA256 reduce production relational_expression -> numexp GT numexp
-- On SHA1 reduce production relational_expression -> numexp GT numexp
-- On SEMICOLON reduce production relational_expression -> numexp GT numexp
-- On SECONDS reduce production relational_expression -> numexp GT numexp
-- On SAMPLE reduce production relational_expression -> numexp GT numexp
-- On SAMETERM reduce production relational_expression -> numexp GT numexp
-- On RPAR reduce production relational_expression -> numexp GT numexp
-- On ROUND reduce production relational_expression -> numexp GT numexp
-- On REPLACE reduce production relational_expression -> numexp GT numexp
-- On REGEX reduce production relational_expression -> numexp GT numexp
-- On RBRACE reduce production relational_expression -> numexp GT numexp
-- On RAND reduce production relational_expression -> numexp GT numexp
-- On Pname_ns reduce production relational_expression -> numexp GT numexp
-- On Pname_ln reduce production relational_expression -> numexp GT numexp
-- On PLUS reduce production relational_expression -> numexp GT numexp
-- On PIPEPIPE reduce production relational_expression -> numexp GT numexp
-- On ORDER reduce production relational_expression -> numexp GT numexp
-- On OFFSET reduce production relational_expression -> numexp GT numexp
-- On NOW reduce production relational_expression -> numexp GT numexp
-- On MONTH reduce production relational_expression -> numexp GT numexp
-- On MINUTES reduce production relational_expression -> numexp GT numexp
-- On MINUS reduce production relational_expression -> numexp GT numexp
-- On MIN reduce production relational_expression -> numexp GT numexp
-- On MD5 reduce production relational_expression -> numexp GT numexp
-- On MAX reduce production relational_expression -> numexp GT numexp
-- On LPAR reduce production relational_expression -> numexp GT numexp
-- On LIMIT reduce production relational_expression -> numexp GT numexp
-- On LCASE reduce production relational_expression -> numexp GT numexp
-- On LANGMATCHES reduce production relational_expression -> numexp GT numexp
-- On LANG reduce production relational_expression -> numexp GT numexp
-- On Iriref_ reduce production relational_expression -> numexp GT numexp
-- On Integer_positive reduce production relational_expression -> numexp GT numexp
-- On Integer_negative reduce production relational_expression -> numexp GT numexp
-- On Integer reduce production relational_expression -> numexp GT numexp
-- On ISURI reduce production relational_expression -> numexp GT numexp
-- On ISNUMERIC reduce production relational_expression -> numexp GT numexp
-- On ISLITERAL reduce production relational_expression -> numexp GT numexp
-- On ISIRI reduce production relational_expression -> numexp GT numexp
-- On ISBLANK reduce production relational_expression -> numexp GT numexp
-- On IRI reduce production relational_expression -> numexp GT numexp
-- On IF reduce production relational_expression -> numexp GT numexp
-- On HOURS reduce production relational_expression -> numexp GT numexp
-- On HAVING reduce production relational_expression -> numexp GT numexp
-- On GROUP_CONCAT reduce production relational_expression -> numexp GT numexp
-- On FLOOR reduce production relational_expression -> numexp GT numexp
-- On EXISTS reduce production relational_expression -> numexp GT numexp
-- On EOF reduce production relational_expression -> numexp GT numexp
-- On ENCODE_FOR_URI reduce production relational_expression -> numexp GT numexp
-- On Double_positive reduce production relational_expression -> numexp GT numexp
-- On Double_negative reduce production relational_expression -> numexp GT numexp
-- On Double reduce production relational_expression -> numexp GT numexp
-- On Decimal_positive reduce production relational_expression -> numexp GT numexp
-- On Decimal_negative reduce production relational_expression -> numexp GT numexp
-- On Decimal reduce production relational_expression -> numexp GT numexp
-- On DAY reduce production relational_expression -> numexp GT numexp
-- On DATATYPE reduce production relational_expression -> numexp GT numexp
-- On COUNT reduce production relational_expression -> numexp GT numexp
-- On CONTAINS reduce production relational_expression -> numexp GT numexp
-- On CONCAT reduce production relational_expression -> numexp GT numexp
-- On COMMA reduce production relational_expression -> numexp GT numexp
-- On COALESCE reduce production relational_expression -> numexp GT numexp
-- On CEIL reduce production relational_expression -> numexp GT numexp
-- On Boolean reduce production relational_expression -> numexp GT numexp
-- On BOUND reduce production relational_expression -> numexp GT numexp
-- On BNODE reduce production relational_expression -> numexp GT numexp
-- On BANG reduce production relational_expression -> numexp GT numexp
-- On AVG reduce production relational_expression -> numexp GT numexp
-- On AS reduce production relational_expression -> numexp GT numexp
-- On AMPAMP reduce production relational_expression -> numexp GT numexp
-- On ABS reduce production relational_expression -> numexp GT numexp

State 365:
## Known stack suffix:
## numexp EQUAL
## LR(1) items:
relational_expression -> numexp EQUAL . numexp [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 366
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 351
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 366:
## Known stack suffix:
## numexp EQUAL numexp
## LR(1) items:
relational_expression -> numexp . EQUAL numexp [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp EQUAL numexp . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
relational_expression -> numexp . NOTEQUAL numexp [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . LT numexp [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . GT numexp [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . LTE numexp [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . GTE numexp [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . IN expression_list [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . NOT IN expression_list [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
relational_expression -> numexp . [ STAR SLASH PLUS PIPEPIPE MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
## Transitions:
## Reductions:
-- On YEAR reduce production relational_expression -> numexp EQUAL numexp
-- On Var2 reduce production relational_expression -> numexp EQUAL numexp
-- On Var1 reduce production relational_expression -> numexp EQUAL numexp
-- On VALUES reduce production relational_expression -> numexp EQUAL numexp
-- On UUID reduce production relational_expression -> numexp EQUAL numexp
-- On URI reduce production relational_expression -> numexp EQUAL numexp
-- On UCASE reduce production relational_expression -> numexp EQUAL numexp
-- On TZ reduce production relational_expression -> numexp EQUAL numexp
-- On TIMEZONE reduce production relational_expression -> numexp EQUAL numexp
-- On String_literal reduce production relational_expression -> numexp EQUAL numexp
-- On SUM reduce production relational_expression -> numexp EQUAL numexp
-- On SUBSTR reduce production relational_expression -> numexp EQUAL numexp
-- On STRUUID reduce production relational_expression -> numexp EQUAL numexp
-- On STRSTARTS reduce production relational_expression -> numexp EQUAL numexp
-- On STRLEN reduce production relational_expression -> numexp EQUAL numexp
-- On STRLANG reduce production relational_expression -> numexp EQUAL numexp
-- On STRENDS reduce production relational_expression -> numexp EQUAL numexp
-- On STRDT reduce production relational_expression -> numexp EQUAL numexp
-- On STRBEFORE reduce production relational_expression -> numexp EQUAL numexp
-- On STRAFTER reduce production relational_expression -> numexp EQUAL numexp
-- On STR reduce production relational_expression -> numexp EQUAL numexp
-- On STAR reduce production relational_expression -> numexp EQUAL numexp
-- On SLASH reduce production relational_expression -> numexp EQUAL numexp
-- On SHA512 reduce production relational_expression -> numexp EQUAL numexp
-- On SHA384 reduce production relational_expression -> numexp EQUAL numexp
-- On SHA256 reduce production relational_expression -> numexp EQUAL numexp
-- On SHA1 reduce production relational_expression -> numexp EQUAL numexp
-- On SEMICOLON reduce production relational_expression -> numexp EQUAL numexp
-- On SECONDS reduce production relational_expression -> numexp EQUAL numexp
-- On SAMPLE reduce production relational_expression -> numexp EQUAL numexp
-- On SAMETERM reduce production relational_expression -> numexp EQUAL numexp
-- On RPAR reduce production relational_expression -> numexp EQUAL numexp
-- On ROUND reduce production relational_expression -> numexp EQUAL numexp
-- On REPLACE reduce production relational_expression -> numexp EQUAL numexp
-- On REGEX reduce production relational_expression -> numexp EQUAL numexp
-- On RBRACE reduce production relational_expression -> numexp EQUAL numexp
-- On RAND reduce production relational_expression -> numexp EQUAL numexp
-- On Pname_ns reduce production relational_expression -> numexp EQUAL numexp
-- On Pname_ln reduce production relational_expression -> numexp EQUAL numexp
-- On PLUS reduce production relational_expression -> numexp EQUAL numexp
-- On PIPEPIPE reduce production relational_expression -> numexp EQUAL numexp
-- On ORDER reduce production relational_expression -> numexp EQUAL numexp
-- On OFFSET reduce production relational_expression -> numexp EQUAL numexp
-- On NOW reduce production relational_expression -> numexp EQUAL numexp
-- On MONTH reduce production relational_expression -> numexp EQUAL numexp
-- On MINUTES reduce production relational_expression -> numexp EQUAL numexp
-- On MINUS reduce production relational_expression -> numexp EQUAL numexp
-- On MIN reduce production relational_expression -> numexp EQUAL numexp
-- On MD5 reduce production relational_expression -> numexp EQUAL numexp
-- On MAX reduce production relational_expression -> numexp EQUAL numexp
-- On LPAR reduce production relational_expression -> numexp EQUAL numexp
-- On LIMIT reduce production relational_expression -> numexp EQUAL numexp
-- On LCASE reduce production relational_expression -> numexp EQUAL numexp
-- On LANGMATCHES reduce production relational_expression -> numexp EQUAL numexp
-- On LANG reduce production relational_expression -> numexp EQUAL numexp
-- On Iriref_ reduce production relational_expression -> numexp EQUAL numexp
-- On Integer_positive reduce production relational_expression -> numexp EQUAL numexp
-- On Integer_negative reduce production relational_expression -> numexp EQUAL numexp
-- On Integer reduce production relational_expression -> numexp EQUAL numexp
-- On ISURI reduce production relational_expression -> numexp EQUAL numexp
-- On ISNUMERIC reduce production relational_expression -> numexp EQUAL numexp
-- On ISLITERAL reduce production relational_expression -> numexp EQUAL numexp
-- On ISIRI reduce production relational_expression -> numexp EQUAL numexp
-- On ISBLANK reduce production relational_expression -> numexp EQUAL numexp
-- On IRI reduce production relational_expression -> numexp EQUAL numexp
-- On IF reduce production relational_expression -> numexp EQUAL numexp
-- On HOURS reduce production relational_expression -> numexp EQUAL numexp
-- On HAVING reduce production relational_expression -> numexp EQUAL numexp
-- On GROUP_CONCAT reduce production relational_expression -> numexp EQUAL numexp
-- On FLOOR reduce production relational_expression -> numexp EQUAL numexp
-- On EXISTS reduce production relational_expression -> numexp EQUAL numexp
-- On EOF reduce production relational_expression -> numexp EQUAL numexp
-- On ENCODE_FOR_URI reduce production relational_expression -> numexp EQUAL numexp
-- On Double_positive reduce production relational_expression -> numexp EQUAL numexp
-- On Double_negative reduce production relational_expression -> numexp EQUAL numexp
-- On Double reduce production relational_expression -> numexp EQUAL numexp
-- On Decimal_positive reduce production relational_expression -> numexp EQUAL numexp
-- On Decimal_negative reduce production relational_expression -> numexp EQUAL numexp
-- On Decimal reduce production relational_expression -> numexp EQUAL numexp
-- On DAY reduce production relational_expression -> numexp EQUAL numexp
-- On DATATYPE reduce production relational_expression -> numexp EQUAL numexp
-- On COUNT reduce production relational_expression -> numexp EQUAL numexp
-- On CONTAINS reduce production relational_expression -> numexp EQUAL numexp
-- On CONCAT reduce production relational_expression -> numexp EQUAL numexp
-- On COMMA reduce production relational_expression -> numexp EQUAL numexp
-- On COALESCE reduce production relational_expression -> numexp EQUAL numexp
-- On CEIL reduce production relational_expression -> numexp EQUAL numexp
-- On Boolean reduce production relational_expression -> numexp EQUAL numexp
-- On BOUND reduce production relational_expression -> numexp EQUAL numexp
-- On BNODE reduce production relational_expression -> numexp EQUAL numexp
-- On BANG reduce production relational_expression -> numexp EQUAL numexp
-- On AVG reduce production relational_expression -> numexp EQUAL numexp
-- On AS reduce production relational_expression -> numexp EQUAL numexp
-- On AMPAMP reduce production relational_expression -> numexp EQUAL numexp
-- On ABS reduce production relational_expression -> numexp EQUAL numexp

State 367:
## Known stack suffix:
## value_logical AMPAMP
## LR(1) items:
value_logical -> value_logical AMPAMP . value_logical [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 368
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 351
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 368:
## Known stack suffix:
## value_logical AMPAMP value_logical
## LR(1) items:
expression -> value_logical . [ STAR SLASH PLUS MINUS Integer_positive Integer_negative Double_positive Double_negative Decimal_positive Decimal_negative ]
value_logical -> value_logical . AMPAMP value_logical [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
value_logical -> value_logical AMPAMP value_logical . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
value_logical -> value_logical . PIPEPIPE value_logical [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
## Transitions:
-- On PIPEPIPE shift to state 313
## Reductions:
-- On YEAR reduce production value_logical -> value_logical AMPAMP value_logical
-- On Var2 reduce production value_logical -> value_logical AMPAMP value_logical
-- On Var1 reduce production value_logical -> value_logical AMPAMP value_logical
-- On VALUES reduce production value_logical -> value_logical AMPAMP value_logical
-- On UUID reduce production value_logical -> value_logical AMPAMP value_logical
-- On URI reduce production value_logical -> value_logical AMPAMP value_logical
-- On UCASE reduce production value_logical -> value_logical AMPAMP value_logical
-- On TZ reduce production value_logical -> value_logical AMPAMP value_logical
-- On TIMEZONE reduce production value_logical -> value_logical AMPAMP value_logical
-- On String_literal reduce production value_logical -> value_logical AMPAMP value_logical
-- On SUM reduce production value_logical -> value_logical AMPAMP value_logical
-- On SUBSTR reduce production value_logical -> value_logical AMPAMP value_logical
-- On STRUUID reduce production value_logical -> value_logical AMPAMP value_logical
-- On STRSTARTS reduce production value_logical -> value_logical AMPAMP value_logical
-- On STRLEN reduce production value_logical -> value_logical AMPAMP value_logical
-- On STRLANG reduce production value_logical -> value_logical AMPAMP value_logical
-- On STRENDS reduce production value_logical -> value_logical AMPAMP value_logical
-- On STRDT reduce production value_logical -> value_logical AMPAMP value_logical
-- On STRBEFORE reduce production value_logical -> value_logical AMPAMP value_logical
-- On STRAFTER reduce production value_logical -> value_logical AMPAMP value_logical
-- On STR reduce production value_logical -> value_logical AMPAMP value_logical
-- On STAR reduce production expression -> value_logical
-- On SLASH reduce production expression -> value_logical
-- On SHA512 reduce production value_logical -> value_logical AMPAMP value_logical
-- On SHA384 reduce production value_logical -> value_logical AMPAMP value_logical
-- On SHA256 reduce production value_logical -> value_logical AMPAMP value_logical
-- On SHA1 reduce production value_logical -> value_logical AMPAMP value_logical
-- On SEMICOLON reduce production value_logical -> value_logical AMPAMP value_logical
-- On SECONDS reduce production value_logical -> value_logical AMPAMP value_logical
-- On SAMPLE reduce production value_logical -> value_logical AMPAMP value_logical
-- On SAMETERM reduce production value_logical -> value_logical AMPAMP value_logical
-- On RPAR reduce production value_logical -> value_logical AMPAMP value_logical
-- On ROUND reduce production value_logical -> value_logical AMPAMP value_logical
-- On REPLACE reduce production value_logical -> value_logical AMPAMP value_logical
-- On REGEX reduce production value_logical -> value_logical AMPAMP value_logical
-- On RBRACE reduce production value_logical -> value_logical AMPAMP value_logical
-- On RAND reduce production value_logical -> value_logical AMPAMP value_logical
-- On Pname_ns reduce production value_logical -> value_logical AMPAMP value_logical
-- On Pname_ln reduce production value_logical -> value_logical AMPAMP value_logical
-- On PLUS reduce production expression -> value_logical
-- On ORDER reduce production value_logical -> value_logical AMPAMP value_logical
-- On OFFSET reduce production value_logical -> value_logical AMPAMP value_logical
-- On NOW reduce production value_logical -> value_logical AMPAMP value_logical
-- On NOTEQUAL reduce production value_logical -> value_logical AMPAMP value_logical
-- On NOT reduce production value_logical -> value_logical AMPAMP value_logical
-- On MONTH reduce production value_logical -> value_logical AMPAMP value_logical
-- On MINUTES reduce production value_logical -> value_logical AMPAMP value_logical
-- On MINUS reduce production expression -> value_logical
-- On MIN reduce production value_logical -> value_logical AMPAMP value_logical
-- On MD5 reduce production value_logical -> value_logical AMPAMP value_logical
-- On MAX reduce production value_logical -> value_logical AMPAMP value_logical
-- On LTE reduce production value_logical -> value_logical AMPAMP value_logical
-- On LT reduce production value_logical -> value_logical AMPAMP value_logical
-- On LPAR reduce production value_logical -> value_logical AMPAMP value_logical
-- On LIMIT reduce production value_logical -> value_logical AMPAMP value_logical
-- On LCASE reduce production value_logical -> value_logical AMPAMP value_logical
-- On LANGMATCHES reduce production value_logical -> value_logical AMPAMP value_logical
-- On LANG reduce production value_logical -> value_logical AMPAMP value_logical
-- On Iriref_ reduce production value_logical -> value_logical AMPAMP value_logical
-- On Integer_positive reduce production expression -> value_logical
-- On Integer_negative reduce production expression -> value_logical
-- On Integer reduce production value_logical -> value_logical AMPAMP value_logical
-- On ISURI reduce production value_logical -> value_logical AMPAMP value_logical
-- On ISNUMERIC reduce production value_logical -> value_logical AMPAMP value_logical
-- On ISLITERAL reduce production value_logical -> value_logical AMPAMP value_logical
-- On ISIRI reduce production value_logical -> value_logical AMPAMP value_logical
-- On ISBLANK reduce production value_logical -> value_logical AMPAMP value_logical
-- On IRI reduce production value_logical -> value_logical AMPAMP value_logical
-- On IN reduce production value_logical -> value_logical AMPAMP value_logical
-- On IF reduce production value_logical -> value_logical AMPAMP value_logical
-- On HOURS reduce production value_logical -> value_logical AMPAMP value_logical
-- On HAVING reduce production value_logical -> value_logical AMPAMP value_logical
-- On GTE reduce production value_logical -> value_logical AMPAMP value_logical
-- On GT reduce production value_logical -> value_logical AMPAMP value_logical
-- On GROUP_CONCAT reduce production value_logical -> value_logical AMPAMP value_logical
-- On FLOOR reduce production value_logical -> value_logical AMPAMP value_logical
-- On EXISTS reduce production value_logical -> value_logical AMPAMP value_logical
-- On EQUAL reduce production value_logical -> value_logical AMPAMP value_logical
-- On EOF reduce production value_logical -> value_logical AMPAMP value_logical
-- On ENCODE_FOR_URI reduce production value_logical -> value_logical AMPAMP value_logical
-- On Double_positive reduce production expression -> value_logical
-- On Double_negative reduce production expression -> value_logical
-- On Double reduce production value_logical -> value_logical AMPAMP value_logical
-- On Decimal_positive reduce production expression -> value_logical
-- On Decimal_negative reduce production expression -> value_logical
-- On Decimal reduce production value_logical -> value_logical AMPAMP value_logical
-- On DAY reduce production value_logical -> value_logical AMPAMP value_logical
-- On DATATYPE reduce production value_logical -> value_logical AMPAMP value_logical
-- On COUNT reduce production value_logical -> value_logical AMPAMP value_logical
-- On CONTAINS reduce production value_logical -> value_logical AMPAMP value_logical
-- On CONCAT reduce production value_logical -> value_logical AMPAMP value_logical
-- On COMMA reduce production value_logical -> value_logical AMPAMP value_logical
-- On COALESCE reduce production value_logical -> value_logical AMPAMP value_logical
-- On CEIL reduce production value_logical -> value_logical AMPAMP value_logical
-- On Boolean reduce production value_logical -> value_logical AMPAMP value_logical
-- On BOUND reduce production value_logical -> value_logical AMPAMP value_logical
-- On BNODE reduce production value_logical -> value_logical AMPAMP value_logical
-- On BANG reduce production value_logical -> value_logical AMPAMP value_logical
-- On AVG reduce production value_logical -> value_logical AMPAMP value_logical
-- On AS reduce production value_logical -> value_logical AMPAMP value_logical
-- On AMPAMP reduce production value_logical -> value_logical AMPAMP value_logical
-- On ABS reduce production value_logical -> value_logical AMPAMP value_logical

State 369:
## Known stack suffix:
## ABS LPAR expression
## LR(1) items:
built_in_call -> ABS LPAR expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 370
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 370:
## Known stack suffix:
## ABS LPAR expression RPAR
## LR(1) items:
built_in_call -> ABS LPAR expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production built_in_call -> ABS LPAR expression RPAR

State 371:
## Known stack suffix:
## AVG LPAR option(DISTINCT) expression
## LR(1) items:
aggregate -> AVG LPAR option(DISTINCT) expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 372
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 372:
## Known stack suffix:
## AVG LPAR option(DISTINCT) expression RPAR
## LR(1) items:
aggregate -> AVG LPAR option(DISTINCT) expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production aggregate -> AVG LPAR option(DISTINCT) expression RPAR

State 373:
## Known stack suffix:
## BANG expression
## LR(1) items:
numexp -> expression . STAR expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . SLASH expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . PLUS expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . MINUS expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . numeric_literal_positive [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . numeric_literal_negative [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> BANG expression . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
## Transitions:
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:
-- On YEAR reduce production numexp -> BANG expression
-- On Var2 reduce production numexp -> BANG expression
-- On Var1 reduce production numexp -> BANG expression
-- On VALUES reduce production numexp -> BANG expression
-- On UUID reduce production numexp -> BANG expression
-- On URI reduce production numexp -> BANG expression
-- On UCASE reduce production numexp -> BANG expression
-- On TZ reduce production numexp -> BANG expression
-- On TIMEZONE reduce production numexp -> BANG expression
-- On String_literal reduce production numexp -> BANG expression
-- On SUM reduce production numexp -> BANG expression
-- On SUBSTR reduce production numexp -> BANG expression
-- On STRUUID reduce production numexp -> BANG expression
-- On STRSTARTS reduce production numexp -> BANG expression
-- On STRLEN reduce production numexp -> BANG expression
-- On STRLANG reduce production numexp -> BANG expression
-- On STRENDS reduce production numexp -> BANG expression
-- On STRDT reduce production numexp -> BANG expression
-- On STRBEFORE reduce production numexp -> BANG expression
-- On STRAFTER reduce production numexp -> BANG expression
-- On STR reduce production numexp -> BANG expression
-- On STAR reduce production numexp -> BANG expression
-- On SLASH reduce production numexp -> BANG expression
-- On SHA512 reduce production numexp -> BANG expression
-- On SHA384 reduce production numexp -> BANG expression
-- On SHA256 reduce production numexp -> BANG expression
-- On SHA1 reduce production numexp -> BANG expression
-- On SEMICOLON reduce production numexp -> BANG expression
-- On SECONDS reduce production numexp -> BANG expression
-- On SAMPLE reduce production numexp -> BANG expression
-- On SAMETERM reduce production numexp -> BANG expression
-- On RPAR reduce production numexp -> BANG expression
-- On ROUND reduce production numexp -> BANG expression
-- On REPLACE reduce production numexp -> BANG expression
-- On REGEX reduce production numexp -> BANG expression
-- On RBRACE reduce production numexp -> BANG expression
-- On RAND reduce production numexp -> BANG expression
-- On Pname_ns reduce production numexp -> BANG expression
-- On Pname_ln reduce production numexp -> BANG expression
-- On PLUS reduce production numexp -> BANG expression
-- On PIPEPIPE reduce production numexp -> BANG expression
-- On ORDER reduce production numexp -> BANG expression
-- On OFFSET reduce production numexp -> BANG expression
-- On NOW reduce production numexp -> BANG expression
-- On NOTEQUAL reduce production numexp -> BANG expression
-- On NOT reduce production numexp -> BANG expression
-- On MONTH reduce production numexp -> BANG expression
-- On MINUTES reduce production numexp -> BANG expression
-- On MINUS reduce production numexp -> BANG expression
-- On MIN reduce production numexp -> BANG expression
-- On MD5 reduce production numexp -> BANG expression
-- On MAX reduce production numexp -> BANG expression
-- On LTE reduce production numexp -> BANG expression
-- On LT reduce production numexp -> BANG expression
-- On LPAR reduce production numexp -> BANG expression
-- On LIMIT reduce production numexp -> BANG expression
-- On LCASE reduce production numexp -> BANG expression
-- On LANGMATCHES reduce production numexp -> BANG expression
-- On LANG reduce production numexp -> BANG expression
-- On Iriref_ reduce production numexp -> BANG expression
-- On Integer reduce production numexp -> BANG expression
-- On ISURI reduce production numexp -> BANG expression
-- On ISNUMERIC reduce production numexp -> BANG expression
-- On ISLITERAL reduce production numexp -> BANG expression
-- On ISIRI reduce production numexp -> BANG expression
-- On ISBLANK reduce production numexp -> BANG expression
-- On IRI reduce production numexp -> BANG expression
-- On IN reduce production numexp -> BANG expression
-- On IF reduce production numexp -> BANG expression
-- On HOURS reduce production numexp -> BANG expression
-- On HAVING reduce production numexp -> BANG expression
-- On GTE reduce production numexp -> BANG expression
-- On GT reduce production numexp -> BANG expression
-- On GROUP_CONCAT reduce production numexp -> BANG expression
-- On FLOOR reduce production numexp -> BANG expression
-- On EXISTS reduce production numexp -> BANG expression
-- On EQUAL reduce production numexp -> BANG expression
-- On EOF reduce production numexp -> BANG expression
-- On ENCODE_FOR_URI reduce production numexp -> BANG expression
-- On Double reduce production numexp -> BANG expression
-- On Decimal reduce production numexp -> BANG expression
-- On DAY reduce production numexp -> BANG expression
-- On DATATYPE reduce production numexp -> BANG expression
-- On COUNT reduce production numexp -> BANG expression
-- On CONTAINS reduce production numexp -> BANG expression
-- On CONCAT reduce production numexp -> BANG expression
-- On COMMA reduce production numexp -> BANG expression
-- On COALESCE reduce production numexp -> BANG expression
-- On CEIL reduce production numexp -> BANG expression
-- On Boolean reduce production numexp -> BANG expression
-- On BOUND reduce production numexp -> BANG expression
-- On BNODE reduce production numexp -> BANG expression
-- On BANG reduce production numexp -> BANG expression
-- On AVG reduce production numexp -> BANG expression
-- On AS reduce production numexp -> BANG expression
-- On AMPAMP reduce production numexp -> BANG expression
-- On ABS reduce production numexp -> BANG expression

State 374:
## Known stack suffix:
## BNODE LPAR expression
## LR(1) items:
built_in_call -> BNODE LPAR expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 375
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 375:
## Known stack suffix:
## BNODE LPAR expression RPAR
## LR(1) items:
built_in_call -> BNODE LPAR expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production built_in_call -> BNODE LPAR expression RPAR

State 376:
## Known stack suffix:
## CEIL LPAR expression
## LR(1) items:
built_in_call -> CEIL LPAR expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 377
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 377:
## Known stack suffix:
## CEIL LPAR expression RPAR
## LR(1) items:
built_in_call -> CEIL LPAR expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production built_in_call -> CEIL LPAR expression RPAR

State 378:
## Known stack suffix:
## LPAR separated_nonempty_list(COMMA,expression)
## LR(1) items:
expression_list -> LPAR separated_nonempty_list(COMMA,expression) . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On RPAR shift to state 379
## Reductions:

State 379:
## Known stack suffix:
## LPAR separated_nonempty_list(COMMA,expression) RPAR
## LR(1) items:
expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expression_list -> LPAR separated_nonempty_list(COMMA,expression) RPAR

State 380:
## Known stack suffix:
## CONCAT expression_list
## LR(1) items:
built_in_call -> CONCAT expression_list . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production built_in_call -> CONCAT expression_list

State 381:
## Known stack suffix:
## CONTAINS LPAR expression
## LR(1) items:
built_in_call -> CONTAINS LPAR expression . COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On COMMA shift to state 382
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 382:
## Known stack suffix:
## CONTAINS LPAR expression COMMA
## LR(1) items:
built_in_call -> CONTAINS LPAR expression COMMA . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 383
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 383:
## Known stack suffix:
## CONTAINS LPAR expression COMMA expression
## LR(1) items:
built_in_call -> CONTAINS LPAR expression COMMA expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 384
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 384:
## Known stack suffix:
## CONTAINS LPAR expression COMMA expression RPAR
## LR(1) items:
built_in_call -> CONTAINS LPAR expression COMMA expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production built_in_call -> CONTAINS LPAR expression COMMA expression RPAR

State 385:
## Known stack suffix:
## COUNT LPAR option(DISTINCT) expression
## LR(1) items:
aggregate -> COUNT LPAR option(DISTINCT) expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 386
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 386:
## Known stack suffix:
## COUNT LPAR option(DISTINCT) expression RPAR
## LR(1) items:
aggregate -> COUNT LPAR option(DISTINCT) expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production aggregate -> COUNT LPAR option(DISTINCT) expression RPAR

State 387:
## Known stack suffix:
## DATATYPE LPAR expression
## LR(1) items:
built_in_call -> DATATYPE LPAR expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 388
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 388:
## Known stack suffix:
## DATATYPE LPAR expression RPAR
## LR(1) items:
built_in_call -> DATATYPE LPAR expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production built_in_call -> DATATYPE LPAR expression RPAR

State 389:
## Known stack suffix:
## DAY LPAR expression
## LR(1) items:
built_in_call -> DAY LPAR expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 390
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 390:
## Known stack suffix:
## DAY LPAR expression RPAR
## LR(1) items:
built_in_call -> DAY LPAR expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production built_in_call -> DAY LPAR expression RPAR

State 391:
## Known stack suffix:
## ENCODE_FOR_URI LPAR expression
## LR(1) items:
built_in_call -> ENCODE_FOR_URI LPAR expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 392
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 392:
## Known stack suffix:
## ENCODE_FOR_URI LPAR expression RPAR
## LR(1) items:
built_in_call -> ENCODE_FOR_URI LPAR expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production built_in_call -> ENCODE_FOR_URI LPAR expression RPAR

State 393:
## Known stack suffix:
## FLOOR LPAR expression
## LR(1) items:
built_in_call -> FLOOR LPAR expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 394
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 394:
## Known stack suffix:
## FLOOR LPAR expression RPAR
## LR(1) items:
built_in_call -> FLOOR LPAR expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production built_in_call -> FLOOR LPAR expression RPAR

State 395:
## Known stack suffix:
## GROUP_CONCAT LPAR option(DISTINCT) expression
## LR(1) items:
aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression . SEMICOLON SEPARATOR EQUAL string RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH SEMICOLON RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH SEMICOLON RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH SEMICOLON RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH SEMICOLON RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH SEMICOLON RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH SEMICOLON RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On SEMICOLON shift to state 396
-- On RPAR shift to state 401
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 396:
## Known stack suffix:
## GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON
## LR(1) items:
aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON . SEPARATOR EQUAL string RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On SEPARATOR shift to state 397
## Reductions:

State 397:
## Known stack suffix:
## GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR
## LR(1) items:
aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR . EQUAL string RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On EQUAL shift to state 398
## Reductions:

State 398:
## Known stack suffix:
## GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL
## LR(1) items:
aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL . string RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On String_literal shift to state 31
-- On string shift to state 399
## Reductions:

State 399:
## Known stack suffix:
## GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string
## LR(1) items:
aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On RPAR shift to state 400
## Reductions:

State 400:
## Known stack suffix:
## GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR
## LR(1) items:
aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression SEMICOLON SEPARATOR EQUAL string RPAR

State 401:
## Known stack suffix:
## GROUP_CONCAT LPAR option(DISTINCT) expression RPAR
## LR(1) items:
aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production aggregate -> GROUP_CONCAT LPAR option(DISTINCT) expression RPAR

State 402:
## Known stack suffix:
## HOURS LPAR expression
## LR(1) items:
built_in_call -> HOURS LPAR expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 403
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 403:
## Known stack suffix:
## HOURS LPAR expression RPAR
## LR(1) items:
built_in_call -> HOURS LPAR expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production built_in_call -> HOURS LPAR expression RPAR

State 404:
## Known stack suffix:
## IF LPAR expression
## LR(1) items:
built_in_call -> IF LPAR expression . COMMA expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On COMMA shift to state 405
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 405:
## Known stack suffix:
## IF LPAR expression COMMA
## LR(1) items:
built_in_call -> IF LPAR expression COMMA . expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 406
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 406:
## Known stack suffix:
## IF LPAR expression COMMA expression
## LR(1) items:
built_in_call -> IF LPAR expression COMMA expression . COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On COMMA shift to state 407
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 407:
## Known stack suffix:
## IF LPAR expression COMMA expression COMMA
## LR(1) items:
built_in_call -> IF LPAR expression COMMA expression COMMA . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 408
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 408:
## Known stack suffix:
## IF LPAR expression COMMA expression COMMA expression
## LR(1) items:
built_in_call -> IF LPAR expression COMMA expression COMMA expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 409
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 409:
## Known stack suffix:
## IF LPAR expression COMMA expression COMMA expression RPAR
## LR(1) items:
built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production built_in_call -> IF LPAR expression COMMA expression COMMA expression RPAR

State 410:
## Known stack suffix:
## IRI LPAR expression
## LR(1) items:
built_in_call -> IRI LPAR expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 411
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 411:
## Known stack suffix:
## IRI LPAR expression RPAR
## LR(1) items:
built_in_call -> IRI LPAR expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production built_in_call -> IRI LPAR expression RPAR

State 412:
## Known stack suffix:
## ISBLANK LPAR expression
## LR(1) items:
built_in_call -> ISBLANK LPAR expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 413
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 413:
## Known stack suffix:
## ISBLANK LPAR expression RPAR
## LR(1) items:
built_in_call -> ISBLANK LPAR expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production built_in_call -> ISBLANK LPAR expression RPAR

State 414:
## Known stack suffix:
## ISIRI LPAR expression
## LR(1) items:
built_in_call -> ISIRI LPAR expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 415
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 415:
## Known stack suffix:
## ISIRI LPAR expression RPAR
## LR(1) items:
built_in_call -> ISIRI LPAR expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production built_in_call -> ISIRI LPAR expression RPAR

State 416:
## Known stack suffix:
## ISLITERAL LPAR expression
## LR(1) items:
built_in_call -> ISLITERAL LPAR expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 417
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 417:
## Known stack suffix:
## ISLITERAL LPAR expression RPAR
## LR(1) items:
built_in_call -> ISLITERAL LPAR expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production built_in_call -> ISLITERAL LPAR expression RPAR

State 418:
## Known stack suffix:
## ISNUMERIC LPAR expression
## LR(1) items:
built_in_call -> ISNUMERIC LPAR expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 419
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 419:
## Known stack suffix:
## ISNUMERIC LPAR expression RPAR
## LR(1) items:
built_in_call -> ISNUMERIC LPAR expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production built_in_call -> ISNUMERIC LPAR expression RPAR

State 420:
## Known stack suffix:
## ISURI LPAR expression
## LR(1) items:
built_in_call -> ISURI LPAR expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 421
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 421:
## Known stack suffix:
## ISURI LPAR expression RPAR
## LR(1) items:
built_in_call -> ISURI LPAR expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production built_in_call -> ISURI LPAR expression RPAR

State 422:
## Known stack suffix:
## LANG LPAR expression
## LR(1) items:
built_in_call -> LANG LPAR expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 423
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 423:
## Known stack suffix:
## LANG LPAR expression RPAR
## LR(1) items:
built_in_call -> LANG LPAR expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production built_in_call -> LANG LPAR expression RPAR

State 424:
## Known stack suffix:
## LANGMATCHES LPAR expression
## LR(1) items:
built_in_call -> LANGMATCHES LPAR expression . COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On COMMA shift to state 425
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 425:
## Known stack suffix:
## LANGMATCHES LPAR expression COMMA
## LR(1) items:
built_in_call -> LANGMATCHES LPAR expression COMMA . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 426
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 426:
## Known stack suffix:
## LANGMATCHES LPAR expression COMMA expression
## LR(1) items:
built_in_call -> LANGMATCHES LPAR expression COMMA expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 427
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 427:
## Known stack suffix:
## LANGMATCHES LPAR expression COMMA expression RPAR
## LR(1) items:
built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production built_in_call -> LANGMATCHES LPAR expression COMMA expression RPAR

State 428:
## Known stack suffix:
## LCASE LPAR expression
## LR(1) items:
built_in_call -> LCASE LPAR expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 429
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 429:
## Known stack suffix:
## LCASE LPAR expression RPAR
## LR(1) items:
built_in_call -> LCASE LPAR expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production built_in_call -> LCASE LPAR expression RPAR

State 430:
## Known stack suffix:
## LPAR expression
## LR(1) items:
bracketted_expression -> LPAR expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 431
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 431:
## Known stack suffix:
## LPAR expression RPAR
## LR(1) items:
bracketted_expression -> LPAR expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production bracketted_expression -> LPAR expression RPAR

State 432:
## Known stack suffix:
## MAX LPAR option(DISTINCT) expression
## LR(1) items:
aggregate -> MAX LPAR option(DISTINCT) expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 433
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 433:
## Known stack suffix:
## MAX LPAR option(DISTINCT) expression RPAR
## LR(1) items:
aggregate -> MAX LPAR option(DISTINCT) expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production aggregate -> MAX LPAR option(DISTINCT) expression RPAR

State 434:
## Known stack suffix:
## MD5 LPAR expression
## LR(1) items:
built_in_call -> MD5 LPAR expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 435
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 435:
## Known stack suffix:
## MD5 LPAR expression RPAR
## LR(1) items:
built_in_call -> MD5 LPAR expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production built_in_call -> MD5 LPAR expression RPAR

State 436:
## Known stack suffix:
## MIN LPAR option(DISTINCT) expression
## LR(1) items:
aggregate -> MIN LPAR option(DISTINCT) expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 437
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 437:
## Known stack suffix:
## MIN LPAR option(DISTINCT) expression RPAR
## LR(1) items:
aggregate -> MIN LPAR option(DISTINCT) expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production aggregate -> MIN LPAR option(DISTINCT) expression RPAR

State 438:
## Known stack suffix:
## MINUS expression
## LR(1) items:
numexp -> expression . STAR expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . SLASH expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . PLUS expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . MINUS expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . numeric_literal_positive [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . numeric_literal_negative [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> MINUS expression . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
## Transitions:
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:
-- On YEAR reduce production numexp -> MINUS expression
-- On Var2 reduce production numexp -> MINUS expression
-- On Var1 reduce production numexp -> MINUS expression
-- On VALUES reduce production numexp -> MINUS expression
-- On UUID reduce production numexp -> MINUS expression
-- On URI reduce production numexp -> MINUS expression
-- On UCASE reduce production numexp -> MINUS expression
-- On TZ reduce production numexp -> MINUS expression
-- On TIMEZONE reduce production numexp -> MINUS expression
-- On String_literal reduce production numexp -> MINUS expression
-- On SUM reduce production numexp -> MINUS expression
-- On SUBSTR reduce production numexp -> MINUS expression
-- On STRUUID reduce production numexp -> MINUS expression
-- On STRSTARTS reduce production numexp -> MINUS expression
-- On STRLEN reduce production numexp -> MINUS expression
-- On STRLANG reduce production numexp -> MINUS expression
-- On STRENDS reduce production numexp -> MINUS expression
-- On STRDT reduce production numexp -> MINUS expression
-- On STRBEFORE reduce production numexp -> MINUS expression
-- On STRAFTER reduce production numexp -> MINUS expression
-- On STR reduce production numexp -> MINUS expression
-- On STAR reduce production numexp -> MINUS expression
-- On SLASH reduce production numexp -> MINUS expression
-- On SHA512 reduce production numexp -> MINUS expression
-- On SHA384 reduce production numexp -> MINUS expression
-- On SHA256 reduce production numexp -> MINUS expression
-- On SHA1 reduce production numexp -> MINUS expression
-- On SEMICOLON reduce production numexp -> MINUS expression
-- On SECONDS reduce production numexp -> MINUS expression
-- On SAMPLE reduce production numexp -> MINUS expression
-- On SAMETERM reduce production numexp -> MINUS expression
-- On RPAR reduce production numexp -> MINUS expression
-- On ROUND reduce production numexp -> MINUS expression
-- On REPLACE reduce production numexp -> MINUS expression
-- On REGEX reduce production numexp -> MINUS expression
-- On RBRACE reduce production numexp -> MINUS expression
-- On RAND reduce production numexp -> MINUS expression
-- On Pname_ns reduce production numexp -> MINUS expression
-- On Pname_ln reduce production numexp -> MINUS expression
-- On PLUS reduce production numexp -> MINUS expression
-- On PIPEPIPE reduce production numexp -> MINUS expression
-- On ORDER reduce production numexp -> MINUS expression
-- On OFFSET reduce production numexp -> MINUS expression
-- On NOW reduce production numexp -> MINUS expression
-- On NOTEQUAL reduce production numexp -> MINUS expression
-- On NOT reduce production numexp -> MINUS expression
-- On MONTH reduce production numexp -> MINUS expression
-- On MINUTES reduce production numexp -> MINUS expression
-- On MINUS reduce production numexp -> MINUS expression
-- On MIN reduce production numexp -> MINUS expression
-- On MD5 reduce production numexp -> MINUS expression
-- On MAX reduce production numexp -> MINUS expression
-- On LTE reduce production numexp -> MINUS expression
-- On LT reduce production numexp -> MINUS expression
-- On LPAR reduce production numexp -> MINUS expression
-- On LIMIT reduce production numexp -> MINUS expression
-- On LCASE reduce production numexp -> MINUS expression
-- On LANGMATCHES reduce production numexp -> MINUS expression
-- On LANG reduce production numexp -> MINUS expression
-- On Iriref_ reduce production numexp -> MINUS expression
-- On Integer reduce production numexp -> MINUS expression
-- On ISURI reduce production numexp -> MINUS expression
-- On ISNUMERIC reduce production numexp -> MINUS expression
-- On ISLITERAL reduce production numexp -> MINUS expression
-- On ISIRI reduce production numexp -> MINUS expression
-- On ISBLANK reduce production numexp -> MINUS expression
-- On IRI reduce production numexp -> MINUS expression
-- On IN reduce production numexp -> MINUS expression
-- On IF reduce production numexp -> MINUS expression
-- On HOURS reduce production numexp -> MINUS expression
-- On HAVING reduce production numexp -> MINUS expression
-- On GTE reduce production numexp -> MINUS expression
-- On GT reduce production numexp -> MINUS expression
-- On GROUP_CONCAT reduce production numexp -> MINUS expression
-- On FLOOR reduce production numexp -> MINUS expression
-- On EXISTS reduce production numexp -> MINUS expression
-- On EQUAL reduce production numexp -> MINUS expression
-- On EOF reduce production numexp -> MINUS expression
-- On ENCODE_FOR_URI reduce production numexp -> MINUS expression
-- On Double reduce production numexp -> MINUS expression
-- On Decimal reduce production numexp -> MINUS expression
-- On DAY reduce production numexp -> MINUS expression
-- On DATATYPE reduce production numexp -> MINUS expression
-- On COUNT reduce production numexp -> MINUS expression
-- On CONTAINS reduce production numexp -> MINUS expression
-- On CONCAT reduce production numexp -> MINUS expression
-- On COMMA reduce production numexp -> MINUS expression
-- On COALESCE reduce production numexp -> MINUS expression
-- On CEIL reduce production numexp -> MINUS expression
-- On Boolean reduce production numexp -> MINUS expression
-- On BOUND reduce production numexp -> MINUS expression
-- On BNODE reduce production numexp -> MINUS expression
-- On BANG reduce production numexp -> MINUS expression
-- On AVG reduce production numexp -> MINUS expression
-- On AS reduce production numexp -> MINUS expression
-- On AMPAMP reduce production numexp -> MINUS expression
-- On ABS reduce production numexp -> MINUS expression

State 439:
## Known stack suffix:
## MINUTES LPAR expression
## LR(1) items:
built_in_call -> MINUTES LPAR expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 440
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 440:
## Known stack suffix:
## MINUTES LPAR expression RPAR
## LR(1) items:
built_in_call -> MINUTES LPAR expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production built_in_call -> MINUTES LPAR expression RPAR

State 441:
## Known stack suffix:
## MONTH LPAR expression
## LR(1) items:
built_in_call -> MONTH LPAR expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 442
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 442:
## Known stack suffix:
## MONTH LPAR expression RPAR
## LR(1) items:
built_in_call -> MONTH LPAR expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production built_in_call -> MONTH LPAR expression RPAR

State 443:
## Known stack suffix:
## var
## LR(1) items:
group_var -> var . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS ORDER OFFSET NOW NOT MONTH MINUTES MINUS MIN MD5 MAX LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IF HOURS HAVING GROUP_CONCAT FLOOR EXISTS EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL Boolean BOUND BNODE BANG AVG ABS ]
primary_expression -> var . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
## Transitions:
## Reductions:
-- On YEAR reduce production group_var -> var
-- On Var2 reduce production group_var -> var
-- On Var1 reduce production group_var -> var
-- On VALUES reduce production group_var -> var
-- On UUID reduce production group_var -> var
-- On URI reduce production group_var -> var
-- On UCASE reduce production group_var -> var
-- On TZ reduce production group_var -> var
-- On TIMEZONE reduce production group_var -> var
-- On String_literal reduce production group_var -> var
-- On SUM reduce production group_var -> var
-- On SUBSTR reduce production group_var -> var
-- On STRUUID reduce production group_var -> var
-- On STRSTARTS reduce production group_var -> var
-- On STRLEN reduce production group_var -> var
-- On STRLANG reduce production group_var -> var
-- On STRENDS reduce production group_var -> var
-- On STRDT reduce production group_var -> var
-- On STRBEFORE reduce production group_var -> var
-- On STRAFTER reduce production group_var -> var
-- On STR reduce production group_var -> var
-- On STAR reduce production primary_expression -> var
-- On SLASH reduce production primary_expression -> var
-- On SHA512 reduce production group_var -> var
-- On SHA384 reduce production group_var -> var
-- On SHA256 reduce production group_var -> var
-- On SHA1 reduce production group_var -> var
-- On SECONDS reduce production group_var -> var
-- On SAMPLE reduce production group_var -> var
-- On SAMETERM reduce production group_var -> var
-- On ROUND reduce production group_var -> var
-- On REPLACE reduce production group_var -> var
-- On REGEX reduce production group_var -> var
-- On RBRACE reduce production group_var -> var
-- On RAND reduce production group_var -> var
-- On Pname_ns reduce production group_var -> var
-- On Pname_ln reduce production group_var -> var
-- On PLUS reduce production group_var -> var
-- On PIPEPIPE reduce production primary_expression -> var
-- On ORDER reduce production group_var -> var
-- On OFFSET reduce production group_var -> var
-- On NOW reduce production group_var -> var
-- On NOTEQUAL reduce production primary_expression -> var
-- On NOT reduce production group_var -> var
-- On MONTH reduce production group_var -> var
-- On MINUTES reduce production group_var -> var
-- On MINUS reduce production group_var -> var
-- On MIN reduce production group_var -> var
-- On MD5 reduce production group_var -> var
-- On MAX reduce production group_var -> var
-- On LTE reduce production primary_expression -> var
-- On LT reduce production primary_expression -> var
-- On LPAR reduce production group_var -> var
-- On LIMIT reduce production group_var -> var
-- On LCASE reduce production group_var -> var
-- On LANGMATCHES reduce production group_var -> var
-- On LANG reduce production group_var -> var
-- On Iriref_ reduce production group_var -> var
-- On Integer_positive reduce production group_var -> var
-- On Integer_negative reduce production group_var -> var
-- On Integer reduce production group_var -> var
-- On ISURI reduce production group_var -> var
-- On ISNUMERIC reduce production group_var -> var
-- On ISLITERAL reduce production group_var -> var
-- On ISIRI reduce production group_var -> var
-- On ISBLANK reduce production group_var -> var
-- On IRI reduce production group_var -> var
-- On IN reduce production primary_expression -> var
-- On IF reduce production group_var -> var
-- On HOURS reduce production group_var -> var
-- On HAVING reduce production group_var -> var
-- On GTE reduce production primary_expression -> var
-- On GT reduce production primary_expression -> var
-- On GROUP_CONCAT reduce production group_var -> var
-- On FLOOR reduce production group_var -> var
-- On EXISTS reduce production group_var -> var
-- On EQUAL reduce production primary_expression -> var
-- On EOF reduce production group_var -> var
-- On ENCODE_FOR_URI reduce production group_var -> var
-- On Double_positive reduce production group_var -> var
-- On Double_negative reduce production group_var -> var
-- On Double reduce production group_var -> var
-- On Decimal_positive reduce production group_var -> var
-- On Decimal_negative reduce production group_var -> var
-- On Decimal reduce production group_var -> var
-- On DAY reduce production group_var -> var
-- On DATATYPE reduce production group_var -> var
-- On COUNT reduce production group_var -> var
-- On CONTAINS reduce production group_var -> var
-- On CONCAT reduce production group_var -> var
-- On COALESCE reduce production group_var -> var
-- On CEIL reduce production group_var -> var
-- On Boolean reduce production group_var -> var
-- On BOUND reduce production group_var -> var
-- On BNODE reduce production group_var -> var
-- On BANG reduce production group_var -> var
-- On AVG reduce production group_var -> var
-- On AS reduce production primary_expression -> var
-- On AMPAMP reduce production primary_expression -> var
-- On ABS reduce production group_var -> var

State 444:
## Known stack suffix:
## GROUP BY nonempty_list(group_condition)
## LR(1) items:
group_clause -> GROUP BY nonempty_list(group_condition) . [ VALUES RBRACE ORDER OFFSET LIMIT HAVING EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production group_clause -> GROUP BY nonempty_list(group_condition)

State 445:
## Known stack suffix:
## group_var
## LR(1) items:
group_condition -> group_var . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS ORDER OFFSET NOW NOT MONTH MINUTES MINUS MIN MD5 MAX LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IF HOURS HAVING GROUP_CONCAT FLOOR EXISTS EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL Boolean BOUND BNODE BANG AVG ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production group_condition -> group_var

State 446:
## Known stack suffix:
## group_condition
## LR(1) items:
nonempty_list(group_condition) -> group_condition . [ VALUES RBRACE ORDER OFFSET LIMIT HAVING EOF ]
nonempty_list(group_condition) -> group_condition . nonempty_list(group_condition) [ VALUES RBRACE ORDER OFFSET LIMIT HAVING EOF ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 443
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On nonempty_list(group_condition) shift to state 447
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On group_var shift to state 445
-- On group_condition shift to state 446
-- On function_call shift to state 448
-- On expression shift to state 449
-- On built_in_call shift to state 452
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:
-- On VALUES reduce production nonempty_list(group_condition) -> group_condition
-- On RBRACE reduce production nonempty_list(group_condition) -> group_condition
-- On ORDER reduce production nonempty_list(group_condition) -> group_condition
-- On OFFSET reduce production nonempty_list(group_condition) -> group_condition
-- On LIMIT reduce production nonempty_list(group_condition) -> group_condition
-- On HAVING reduce production nonempty_list(group_condition) -> group_condition
-- On EOF reduce production nonempty_list(group_condition) -> group_condition

State 447:
## Known stack suffix:
## group_condition nonempty_list(group_condition)
## LR(1) items:
nonempty_list(group_condition) -> group_condition nonempty_list(group_condition) . [ VALUES RBRACE ORDER OFFSET LIMIT HAVING EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nonempty_list(group_condition) -> group_condition nonempty_list(group_condition)

State 448:
## Known stack suffix:
## function_call
## LR(1) items:
group_condition -> function_call . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS ORDER OFFSET NOW NOT MONTH MINUTES MINUS MIN MD5 MAX LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IF HOURS HAVING GROUP_CONCAT FLOOR EXISTS EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL Boolean BOUND BNODE BANG AVG ABS ]
iri_or_function -> function_call . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
## Transitions:
## Reductions:
-- On YEAR reduce production group_condition -> function_call
-- On Var2 reduce production group_condition -> function_call
-- On Var1 reduce production group_condition -> function_call
-- On VALUES reduce production group_condition -> function_call
-- On UUID reduce production group_condition -> function_call
-- On URI reduce production group_condition -> function_call
-- On UCASE reduce production group_condition -> function_call
-- On TZ reduce production group_condition -> function_call
-- On TIMEZONE reduce production group_condition -> function_call
-- On String_literal reduce production group_condition -> function_call
-- On SUM reduce production group_condition -> function_call
-- On SUBSTR reduce production group_condition -> function_call
-- On STRUUID reduce production group_condition -> function_call
-- On STRSTARTS reduce production group_condition -> function_call
-- On STRLEN reduce production group_condition -> function_call
-- On STRLANG reduce production group_condition -> function_call
-- On STRENDS reduce production group_condition -> function_call
-- On STRDT reduce production group_condition -> function_call
-- On STRBEFORE reduce production group_condition -> function_call
-- On STRAFTER reduce production group_condition -> function_call
-- On STR reduce production group_condition -> function_call
-- On STAR reduce production iri_or_function -> function_call
-- On SLASH reduce production iri_or_function -> function_call
-- On SHA512 reduce production group_condition -> function_call
-- On SHA384 reduce production group_condition -> function_call
-- On SHA256 reduce production group_condition -> function_call
-- On SHA1 reduce production group_condition -> function_call
-- On SECONDS reduce production group_condition -> function_call
-- On SAMPLE reduce production group_condition -> function_call
-- On SAMETERM reduce production group_condition -> function_call
-- On ROUND reduce production group_condition -> function_call
-- On REPLACE reduce production group_condition -> function_call
-- On REGEX reduce production group_condition -> function_call
-- On RBRACE reduce production group_condition -> function_call
-- On RAND reduce production group_condition -> function_call
-- On Pname_ns reduce production group_condition -> function_call
-- On Pname_ln reduce production group_condition -> function_call
-- On PLUS reduce production group_condition -> function_call
-- On PIPEPIPE reduce production iri_or_function -> function_call
-- On ORDER reduce production group_condition -> function_call
-- On OFFSET reduce production group_condition -> function_call
-- On NOW reduce production group_condition -> function_call
-- On NOTEQUAL reduce production iri_or_function -> function_call
-- On NOT reduce production group_condition -> function_call
-- On MONTH reduce production group_condition -> function_call
-- On MINUTES reduce production group_condition -> function_call
-- On MINUS reduce production group_condition -> function_call
-- On MIN reduce production group_condition -> function_call
-- On MD5 reduce production group_condition -> function_call
-- On MAX reduce production group_condition -> function_call
-- On LTE reduce production iri_or_function -> function_call
-- On LT reduce production iri_or_function -> function_call
-- On LPAR reduce production group_condition -> function_call
-- On LIMIT reduce production group_condition -> function_call
-- On LCASE reduce production group_condition -> function_call
-- On LANGMATCHES reduce production group_condition -> function_call
-- On LANG reduce production group_condition -> function_call
-- On Iriref_ reduce production group_condition -> function_call
-- On Integer_positive reduce production group_condition -> function_call
-- On Integer_negative reduce production group_condition -> function_call
-- On Integer reduce production group_condition -> function_call
-- On ISURI reduce production group_condition -> function_call
-- On ISNUMERIC reduce production group_condition -> function_call
-- On ISLITERAL reduce production group_condition -> function_call
-- On ISIRI reduce production group_condition -> function_call
-- On ISBLANK reduce production group_condition -> function_call
-- On IRI reduce production group_condition -> function_call
-- On IN reduce production iri_or_function -> function_call
-- On IF reduce production group_condition -> function_call
-- On HOURS reduce production group_condition -> function_call
-- On HAVING reduce production group_condition -> function_call
-- On GTE reduce production iri_or_function -> function_call
-- On GT reduce production iri_or_function -> function_call
-- On GROUP_CONCAT reduce production group_condition -> function_call
-- On FLOOR reduce production group_condition -> function_call
-- On EXISTS reduce production group_condition -> function_call
-- On EQUAL reduce production iri_or_function -> function_call
-- On EOF reduce production group_condition -> function_call
-- On ENCODE_FOR_URI reduce production group_condition -> function_call
-- On Double_positive reduce production group_condition -> function_call
-- On Double_negative reduce production group_condition -> function_call
-- On Double reduce production group_condition -> function_call
-- On Decimal_positive reduce production group_condition -> function_call
-- On Decimal_negative reduce production group_condition -> function_call
-- On Decimal reduce production group_condition -> function_call
-- On DAY reduce production group_condition -> function_call
-- On DATATYPE reduce production group_condition -> function_call
-- On COUNT reduce production group_condition -> function_call
-- On CONTAINS reduce production group_condition -> function_call
-- On CONCAT reduce production group_condition -> function_call
-- On COALESCE reduce production group_condition -> function_call
-- On CEIL reduce production group_condition -> function_call
-- On Boolean reduce production group_condition -> function_call
-- On BOUND reduce production group_condition -> function_call
-- On BNODE reduce production group_condition -> function_call
-- On BANG reduce production group_condition -> function_call
-- On AVG reduce production group_condition -> function_call
-- On AS reduce production iri_or_function -> function_call
-- On AMPAMP reduce production iri_or_function -> function_call
-- On ABS reduce production group_condition -> function_call

State 449:
## Known stack suffix:
## expression
## LR(1) items:
group_var -> expression . AS var [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS ORDER OFFSET NOW NOT MONTH MINUTES MINUS MIN MD5 MAX LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IF HOURS HAVING GROUP_CONCAT FLOOR EXISTS EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL Boolean BOUND BNODE BANG AVG ABS ]
group_var -> expression . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS ORDER OFFSET NOW NOT MONTH MINUTES MINUS MIN MD5 MAX LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IF HOURS HAVING GROUP_CONCAT FLOOR EXISTS EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL Boolean BOUND BNODE BANG AVG ABS ]
numexp -> expression . STAR expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . SLASH expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . PLUS expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . MINUS expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . numeric_literal_positive [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . numeric_literal_negative [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On AS shift to state 450
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:
-- On YEAR reduce production group_var -> expression
-- On Var2 reduce production group_var -> expression
-- On Var1 reduce production group_var -> expression
-- On VALUES reduce production group_var -> expression
-- On UUID reduce production group_var -> expression
-- On URI reduce production group_var -> expression
-- On UCASE reduce production group_var -> expression
-- On TZ reduce production group_var -> expression
-- On TIMEZONE reduce production group_var -> expression
-- On String_literal reduce production group_var -> expression
-- On SUM reduce production group_var -> expression
-- On SUBSTR reduce production group_var -> expression
-- On STRUUID reduce production group_var -> expression
-- On STRSTARTS reduce production group_var -> expression
-- On STRLEN reduce production group_var -> expression
-- On STRLANG reduce production group_var -> expression
-- On STRENDS reduce production group_var -> expression
-- On STRDT reduce production group_var -> expression
-- On STRBEFORE reduce production group_var -> expression
-- On STRAFTER reduce production group_var -> expression
-- On STR reduce production group_var -> expression
-- On SHA512 reduce production group_var -> expression
-- On SHA384 reduce production group_var -> expression
-- On SHA256 reduce production group_var -> expression
-- On SHA1 reduce production group_var -> expression
-- On SECONDS reduce production group_var -> expression
-- On SAMPLE reduce production group_var -> expression
-- On SAMETERM reduce production group_var -> expression
-- On ROUND reduce production group_var -> expression
-- On REPLACE reduce production group_var -> expression
-- On REGEX reduce production group_var -> expression
-- On RBRACE reduce production group_var -> expression
-- On RAND reduce production group_var -> expression
-- On Pname_ns reduce production group_var -> expression
-- On Pname_ln reduce production group_var -> expression
-- On ORDER reduce production group_var -> expression
-- On OFFSET reduce production group_var -> expression
-- On NOW reduce production group_var -> expression
-- On NOT reduce production group_var -> expression
-- On MONTH reduce production group_var -> expression
-- On MINUTES reduce production group_var -> expression
-- On MIN reduce production group_var -> expression
-- On MD5 reduce production group_var -> expression
-- On MAX reduce production group_var -> expression
-- On LPAR reduce production group_var -> expression
-- On LIMIT reduce production group_var -> expression
-- On LCASE reduce production group_var -> expression
-- On LANGMATCHES reduce production group_var -> expression
-- On LANG reduce production group_var -> expression
-- On Iriref_ reduce production group_var -> expression
-- On Integer reduce production group_var -> expression
-- On ISURI reduce production group_var -> expression
-- On ISNUMERIC reduce production group_var -> expression
-- On ISLITERAL reduce production group_var -> expression
-- On ISIRI reduce production group_var -> expression
-- On ISBLANK reduce production group_var -> expression
-- On IRI reduce production group_var -> expression
-- On IF reduce production group_var -> expression
-- On HOURS reduce production group_var -> expression
-- On HAVING reduce production group_var -> expression
-- On GROUP_CONCAT reduce production group_var -> expression
-- On FLOOR reduce production group_var -> expression
-- On EXISTS reduce production group_var -> expression
-- On EOF reduce production group_var -> expression
-- On ENCODE_FOR_URI reduce production group_var -> expression
-- On Double reduce production group_var -> expression
-- On Decimal reduce production group_var -> expression
-- On DAY reduce production group_var -> expression
-- On DATATYPE reduce production group_var -> expression
-- On COUNT reduce production group_var -> expression
-- On CONTAINS reduce production group_var -> expression
-- On CONCAT reduce production group_var -> expression
-- On COALESCE reduce production group_var -> expression
-- On CEIL reduce production group_var -> expression
-- On Boolean reduce production group_var -> expression
-- On BOUND reduce production group_var -> expression
-- On BNODE reduce production group_var -> expression
-- On BANG reduce production group_var -> expression
-- On AVG reduce production group_var -> expression
-- On ABS reduce production group_var -> expression

State 450:
## Known stack suffix:
## expression AS
## LR(1) items:
group_var -> expression AS . var [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS ORDER OFFSET NOW NOT MONTH MINUTES MINUS MIN MD5 MAX LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IF HOURS HAVING GROUP_CONCAT FLOOR EXISTS EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL Boolean BOUND BNODE BANG AVG ABS ]
## Transitions:
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On var shift to state 451
## Reductions:

State 451:
## Known stack suffix:
## expression AS var
## LR(1) items:
group_var -> expression AS var . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS ORDER OFFSET NOW NOT MONTH MINUTES MINUS MIN MD5 MAX LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IF HOURS HAVING GROUP_CONCAT FLOOR EXISTS EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL Boolean BOUND BNODE BANG AVG ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production group_var -> expression AS var

State 452:
## Known stack suffix:
## built_in_call
## LR(1) items:
group_condition -> built_in_call . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS ORDER OFFSET NOW NOT MONTH MINUTES MINUS MIN MD5 MAX LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IF HOURS HAVING GROUP_CONCAT FLOOR EXISTS EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL Boolean BOUND BNODE BANG AVG ABS ]
primary_expression -> built_in_call . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
## Transitions:
## Reductions:
-- On YEAR reduce production group_condition -> built_in_call
-- On Var2 reduce production group_condition -> built_in_call
-- On Var1 reduce production group_condition -> built_in_call
-- On VALUES reduce production group_condition -> built_in_call
-- On UUID reduce production group_condition -> built_in_call
-- On URI reduce production group_condition -> built_in_call
-- On UCASE reduce production group_condition -> built_in_call
-- On TZ reduce production group_condition -> built_in_call
-- On TIMEZONE reduce production group_condition -> built_in_call
-- On String_literal reduce production group_condition -> built_in_call
-- On SUM reduce production group_condition -> built_in_call
-- On SUBSTR reduce production group_condition -> built_in_call
-- On STRUUID reduce production group_condition -> built_in_call
-- On STRSTARTS reduce production group_condition -> built_in_call
-- On STRLEN reduce production group_condition -> built_in_call
-- On STRLANG reduce production group_condition -> built_in_call
-- On STRENDS reduce production group_condition -> built_in_call
-- On STRDT reduce production group_condition -> built_in_call
-- On STRBEFORE reduce production group_condition -> built_in_call
-- On STRAFTER reduce production group_condition -> built_in_call
-- On STR reduce production group_condition -> built_in_call
-- On STAR reduce production primary_expression -> built_in_call
-- On SLASH reduce production primary_expression -> built_in_call
-- On SHA512 reduce production group_condition -> built_in_call
-- On SHA384 reduce production group_condition -> built_in_call
-- On SHA256 reduce production group_condition -> built_in_call
-- On SHA1 reduce production group_condition -> built_in_call
-- On SECONDS reduce production group_condition -> built_in_call
-- On SAMPLE reduce production group_condition -> built_in_call
-- On SAMETERM reduce production group_condition -> built_in_call
-- On ROUND reduce production group_condition -> built_in_call
-- On REPLACE reduce production group_condition -> built_in_call
-- On REGEX reduce production group_condition -> built_in_call
-- On RBRACE reduce production group_condition -> built_in_call
-- On RAND reduce production group_condition -> built_in_call
-- On Pname_ns reduce production group_condition -> built_in_call
-- On Pname_ln reduce production group_condition -> built_in_call
-- On PLUS reduce production group_condition -> built_in_call
-- On PIPEPIPE reduce production primary_expression -> built_in_call
-- On ORDER reduce production group_condition -> built_in_call
-- On OFFSET reduce production group_condition -> built_in_call
-- On NOW reduce production group_condition -> built_in_call
-- On NOTEQUAL reduce production primary_expression -> built_in_call
-- On NOT reduce production group_condition -> built_in_call
-- On MONTH reduce production group_condition -> built_in_call
-- On MINUTES reduce production group_condition -> built_in_call
-- On MINUS reduce production group_condition -> built_in_call
-- On MIN reduce production group_condition -> built_in_call
-- On MD5 reduce production group_condition -> built_in_call
-- On MAX reduce production group_condition -> built_in_call
-- On LTE reduce production primary_expression -> built_in_call
-- On LT reduce production primary_expression -> built_in_call
-- On LPAR reduce production group_condition -> built_in_call
-- On LIMIT reduce production group_condition -> built_in_call
-- On LCASE reduce production group_condition -> built_in_call
-- On LANGMATCHES reduce production group_condition -> built_in_call
-- On LANG reduce production group_condition -> built_in_call
-- On Iriref_ reduce production group_condition -> built_in_call
-- On Integer_positive reduce production group_condition -> built_in_call
-- On Integer_negative reduce production group_condition -> built_in_call
-- On Integer reduce production group_condition -> built_in_call
-- On ISURI reduce production group_condition -> built_in_call
-- On ISNUMERIC reduce production group_condition -> built_in_call
-- On ISLITERAL reduce production group_condition -> built_in_call
-- On ISIRI reduce production group_condition -> built_in_call
-- On ISBLANK reduce production group_condition -> built_in_call
-- On IRI reduce production group_condition -> built_in_call
-- On IN reduce production primary_expression -> built_in_call
-- On IF reduce production group_condition -> built_in_call
-- On HOURS reduce production group_condition -> built_in_call
-- On HAVING reduce production group_condition -> built_in_call
-- On GTE reduce production primary_expression -> built_in_call
-- On GT reduce production primary_expression -> built_in_call
-- On GROUP_CONCAT reduce production group_condition -> built_in_call
-- On FLOOR reduce production group_condition -> built_in_call
-- On EXISTS reduce production group_condition -> built_in_call
-- On EQUAL reduce production primary_expression -> built_in_call
-- On EOF reduce production group_condition -> built_in_call
-- On ENCODE_FOR_URI reduce production group_condition -> built_in_call
-- On Double_positive reduce production group_condition -> built_in_call
-- On Double_negative reduce production group_condition -> built_in_call
-- On Double reduce production group_condition -> built_in_call
-- On Decimal_positive reduce production group_condition -> built_in_call
-- On Decimal_negative reduce production group_condition -> built_in_call
-- On Decimal reduce production group_condition -> built_in_call
-- On DAY reduce production group_condition -> built_in_call
-- On DATATYPE reduce production group_condition -> built_in_call
-- On COUNT reduce production group_condition -> built_in_call
-- On CONTAINS reduce production group_condition -> built_in_call
-- On CONCAT reduce production group_condition -> built_in_call
-- On COALESCE reduce production group_condition -> built_in_call
-- On CEIL reduce production group_condition -> built_in_call
-- On Boolean reduce production group_condition -> built_in_call
-- On BOUND reduce production group_condition -> built_in_call
-- On BNODE reduce production group_condition -> built_in_call
-- On BANG reduce production group_condition -> built_in_call
-- On AVG reduce production group_condition -> built_in_call
-- On AS reduce production primary_expression -> built_in_call
-- On AMPAMP reduce production primary_expression -> built_in_call
-- On ABS reduce production group_condition -> built_in_call

State 453:
## Known stack suffix:
## select_clause where_clause solution_modifier
## LR(1) items:
subselect -> select_clause where_clause solution_modifier . values_clause [ RBRACE ]
## Transitions:
-- On VALUES shift to state 454
-- On values_clause_ shift to state 485
-- On values_clause shift to state 486
-- On option(values_clause_) shift to state 487
## Reductions:
-- On RBRACE reduce production option(values_clause_) ->

State 454:
## Known stack suffix:
## VALUES
## LR(1) items:
values_clause_ -> VALUES . datablock [ RBRACE EOF ]
## Transitions:
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On NIL shift to state 455
-- On LPAR shift to state 456
-- On var shift to state 461
-- On nil_or_var_list shift to state 472
-- On inline_data_one_var shift to state 482
-- On inline_data_full shift to state 483
-- On datablock shift to state 484
## Reductions:

State 455:
## Known stack suffix:
## NIL
## LR(1) items:
nil_or_var_list -> NIL . [ LBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nil_or_var_list -> NIL

State 456:
## Known stack suffix:
## LPAR
## LR(1) items:
nil_or_var_list -> LPAR . list(var) RPAR [ LBRACE ]
## Transitions:
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On var shift to state 457
-- On list(var) shift to state 459
## Reductions:
-- On RPAR reduce production list(var) ->

State 457:
## Known stack suffix:
## var
## LR(1) items:
list(var) -> var . list(var) [ RPAR ]
## Transitions:
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On var shift to state 457
-- On list(var) shift to state 458
## Reductions:
-- On RPAR reduce production list(var) ->

State 458:
## Known stack suffix:
## var list(var)
## LR(1) items:
list(var) -> var list(var) . [ RPAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list(var) -> var list(var)

State 459:
## Known stack suffix:
## LPAR list(var)
## LR(1) items:
nil_or_var_list -> LPAR list(var) . RPAR [ LBRACE ]
## Transitions:
-- On RPAR shift to state 460
## Reductions:

State 460:
## Known stack suffix:
## LPAR list(var) RPAR
## LR(1) items:
nil_or_var_list -> LPAR list(var) RPAR . [ LBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nil_or_var_list -> LPAR list(var) RPAR

State 461:
## Known stack suffix:
## var
## LR(1) items:
inline_data_one_var -> var . LBRACE list(data_block_value) RBRACE [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER EOF Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
## Transitions:
-- On LBRACE shift to state 462
## Reductions:

State 462:
## Known stack suffix:
## var LBRACE
## LR(1) items:
inline_data_one_var -> var LBRACE . list(data_block_value) RBRACE [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER EOF Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
## Transitions:
-- On UNDEF shift to state 463
-- On String_literal shift to state 31
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On Boolean shift to state 139
-- On string shift to state 145
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 464
-- On prefixed_name shift to state 97
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 465
-- On list(data_block_value) shift to state 466
-- On iri shift to state 468
-- On data_block_value shift to state 469
-- On boolean_literal shift to state 471
## Reductions:
-- On RBRACE reduce production list(data_block_value) ->

State 463:
## Known stack suffix:
## UNDEF
## LR(1) items:
data_block_value -> UNDEF . [ UNDEF String_literal RPAR RBRACE Pname_ns Pname_ln Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production data_block_value -> UNDEF

State 464:
## Known stack suffix:
## rdf_literal
## LR(1) items:
data_block_value -> rdf_literal . [ UNDEF String_literal RPAR RBRACE Pname_ns Pname_ln Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production data_block_value -> rdf_literal

State 465:
## Known stack suffix:
## numeric_literal
## LR(1) items:
data_block_value -> numeric_literal . [ UNDEF String_literal RPAR RBRACE Pname_ns Pname_ln Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production data_block_value -> numeric_literal

State 466:
## Known stack suffix:
## var LBRACE list(data_block_value)
## LR(1) items:
inline_data_one_var -> var LBRACE list(data_block_value) . RBRACE [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER EOF Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
## Transitions:
-- On RBRACE shift to state 467
## Reductions:

State 467:
## Known stack suffix:
## var LBRACE list(data_block_value) RBRACE
## LR(1) items:
inline_data_one_var -> var LBRACE list(data_block_value) RBRACE . [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER EOF Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production inline_data_one_var -> var LBRACE list(data_block_value) RBRACE

State 468:
## Known stack suffix:
## iri
## LR(1) items:
data_block_value -> iri . [ UNDEF String_literal RPAR RBRACE Pname_ns Pname_ln Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production data_block_value -> iri

State 469:
## Known stack suffix:
## data_block_value
## LR(1) items:
list(data_block_value) -> data_block_value . list(data_block_value) [ RPAR RBRACE ]
## Transitions:
-- On UNDEF shift to state 463
-- On String_literal shift to state 31
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On Boolean shift to state 139
-- On string shift to state 145
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 464
-- On prefixed_name shift to state 97
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 465
-- On list(data_block_value) shift to state 470
-- On iri shift to state 468
-- On data_block_value shift to state 469
-- On boolean_literal shift to state 471
## Reductions:
-- On RPAR reduce production list(data_block_value) ->
-- On RBRACE reduce production list(data_block_value) ->

State 470:
## Known stack suffix:
## data_block_value list(data_block_value)
## LR(1) items:
list(data_block_value) -> data_block_value list(data_block_value) . [ RPAR RBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list(data_block_value) -> data_block_value list(data_block_value)

State 471:
## Known stack suffix:
## boolean_literal
## LR(1) items:
data_block_value -> boolean_literal . [ UNDEF String_literal RPAR RBRACE Pname_ns Pname_ln Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production data_block_value -> boolean_literal

State 472:
## Known stack suffix:
## nil_or_var_list
## LR(1) items:
inline_data_full -> nil_or_var_list . LBRACE list(data_block_values_or_nil) RBRACE [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER EOF Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
## Transitions:
-- On LBRACE shift to state 473
## Reductions:

State 473:
## Known stack suffix:
## nil_or_var_list LBRACE
## LR(1) items:
inline_data_full -> nil_or_var_list LBRACE . list(data_block_values_or_nil) RBRACE [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER EOF Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
## Transitions:
-- On NIL shift to state 474
-- On LPAR shift to state 475
-- On list(data_block_values_or_nil) shift to state 478
-- On data_block_values_or_nil shift to state 480
## Reductions:
-- On RBRACE reduce production list(data_block_values_or_nil) ->

State 474:
## Known stack suffix:
## NIL
## LR(1) items:
data_block_values_or_nil -> NIL . [ RBRACE NIL LPAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production data_block_values_or_nil -> NIL

State 475:
## Known stack suffix:
## LPAR
## LR(1) items:
data_block_values_or_nil -> LPAR . list(data_block_value) RPAR [ RBRACE NIL LPAR ]
## Transitions:
-- On UNDEF shift to state 463
-- On String_literal shift to state 31
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On Boolean shift to state 139
-- On string shift to state 145
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 464
-- On prefixed_name shift to state 97
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 465
-- On list(data_block_value) shift to state 476
-- On iri shift to state 468
-- On data_block_value shift to state 469
-- On boolean_literal shift to state 471
## Reductions:
-- On RPAR reduce production list(data_block_value) ->

State 476:
## Known stack suffix:
## LPAR list(data_block_value)
## LR(1) items:
data_block_values_or_nil -> LPAR list(data_block_value) . RPAR [ RBRACE NIL LPAR ]
## Transitions:
-- On RPAR shift to state 477
## Reductions:

State 477:
## Known stack suffix:
## LPAR list(data_block_value) RPAR
## LR(1) items:
data_block_values_or_nil -> LPAR list(data_block_value) RPAR . [ RBRACE NIL LPAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production data_block_values_or_nil -> LPAR list(data_block_value) RPAR

State 478:
## Known stack suffix:
## nil_or_var_list LBRACE list(data_block_values_or_nil)
## LR(1) items:
inline_data_full -> nil_or_var_list LBRACE list(data_block_values_or_nil) . RBRACE [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER EOF Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
## Transitions:
-- On RBRACE shift to state 479
## Reductions:

State 479:
## Known stack suffix:
## nil_or_var_list LBRACE list(data_block_values_or_nil) RBRACE
## LR(1) items:
inline_data_full -> nil_or_var_list LBRACE list(data_block_values_or_nil) RBRACE . [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER EOF Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production inline_data_full -> nil_or_var_list LBRACE list(data_block_values_or_nil) RBRACE

State 480:
## Known stack suffix:
## data_block_values_or_nil
## LR(1) items:
list(data_block_values_or_nil) -> data_block_values_or_nil . list(data_block_values_or_nil) [ RBRACE ]
## Transitions:
-- On NIL shift to state 474
-- On LPAR shift to state 475
-- On list(data_block_values_or_nil) shift to state 481
-- On data_block_values_or_nil shift to state 480
## Reductions:
-- On RBRACE reduce production list(data_block_values_or_nil) ->

State 481:
## Known stack suffix:
## data_block_values_or_nil list(data_block_values_or_nil)
## LR(1) items:
list(data_block_values_or_nil) -> data_block_values_or_nil list(data_block_values_or_nil) . [ RBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list(data_block_values_or_nil) -> data_block_values_or_nil list(data_block_values_or_nil)

State 482:
## Known stack suffix:
## inline_data_one_var
## LR(1) items:
datablock -> inline_data_one_var . [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER EOF Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production datablock -> inline_data_one_var

State 483:
## Known stack suffix:
## inline_data_full
## LR(1) items:
datablock -> inline_data_full . [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER EOF Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production datablock -> inline_data_full

State 484:
## Known stack suffix:
## VALUES datablock
## LR(1) items:
values_clause_ -> VALUES datablock . [ RBRACE EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production values_clause_ -> VALUES datablock

State 485:
## Known stack suffix:
## values_clause_
## LR(1) items:
option(values_clause_) -> values_clause_ . [ RBRACE EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(values_clause_) -> values_clause_

State 486:
## Known stack suffix:
## select_clause where_clause solution_modifier values_clause
## LR(1) items:
subselect -> select_clause where_clause solution_modifier values_clause . [ RBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production subselect -> select_clause where_clause solution_modifier values_clause

State 487:
## Known stack suffix:
## option(values_clause_)
## LR(1) items:
values_clause -> option(values_clause_) . [ RBRACE EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production values_clause -> option(values_clause_)

State 488:
## Known stack suffix:
## option(group_clause)
## LR(1) items:
solution_modifier -> option(group_clause) . option(having_clause) option(order_clause) option(limit_offset_clause) [ VALUES RBRACE EOF ]
## Transitions:
-- On HAVING shift to state 489
-- On option(having_clause) shift to state 498
-- On having_clause shift to state 524
## Reductions:
-- On VALUES reduce production option(having_clause) ->
-- On RBRACE reduce production option(having_clause) ->
-- On ORDER reduce production option(having_clause) ->
-- On OFFSET reduce production option(having_clause) ->
-- On LIMIT reduce production option(having_clause) ->
-- On EOF reduce production option(having_clause) ->

State 489:
## Known stack suffix:
## HAVING
## LR(1) items:
having_clause -> HAVING . nonempty_list(having_condition) [ VALUES RBRACE ORDER OFFSET LIMIT EOF ]
## Transitions:
-- On YEAR shift to state 19
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On substring_expression shift to state 315
-- On str_replace_expression shift to state 316
-- On regexp_expression shift to state 318
-- On prefixed_name shift to state 97
-- On nonempty_list(having_condition) shift to state 490
-- On iri shift to state 491
-- On having_condition shift to state 492
-- On function_call shift to state 494
-- On constraint_ shift to state 495
-- On built_in_call shift to state 496
-- On bracketted_expression shift to state 497
-- On aggregate shift to state 341
## Reductions:

State 490:
## Known stack suffix:
## HAVING nonempty_list(having_condition)
## LR(1) items:
having_clause -> HAVING nonempty_list(having_condition) . [ VALUES RBRACE ORDER OFFSET LIMIT EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production having_clause -> HAVING nonempty_list(having_condition)

State 491:
## Known stack suffix:
## iri
## LR(1) items:
function_call -> iri . arg_list [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR SHA512 SHA384 SHA256 SHA1 SERVICE SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln ORDER OPTIONAL OFFSET NOW NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IF HOURS GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND AVG ASC ANON ABS ]
## Transitions:
-- On NIL shift to state 327
-- On LPAR shift to state 328
-- On arg_list shift to state 350
## Reductions:

State 492:
## Known stack suffix:
## having_condition
## LR(1) items:
nonempty_list(having_condition) -> having_condition . [ VALUES RBRACE ORDER OFFSET LIMIT EOF ]
nonempty_list(having_condition) -> having_condition . nonempty_list(having_condition) [ VALUES RBRACE ORDER OFFSET LIMIT EOF ]
## Transitions:
-- On YEAR shift to state 19
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On substring_expression shift to state 315
-- On str_replace_expression shift to state 316
-- On regexp_expression shift to state 318
-- On prefixed_name shift to state 97
-- On nonempty_list(having_condition) shift to state 493
-- On iri shift to state 491
-- On having_condition shift to state 492
-- On function_call shift to state 494
-- On constraint_ shift to state 495
-- On built_in_call shift to state 496
-- On bracketted_expression shift to state 497
-- On aggregate shift to state 341
## Reductions:
-- On VALUES reduce production nonempty_list(having_condition) -> having_condition
-- On RBRACE reduce production nonempty_list(having_condition) -> having_condition
-- On ORDER reduce production nonempty_list(having_condition) -> having_condition
-- On OFFSET reduce production nonempty_list(having_condition) -> having_condition
-- On LIMIT reduce production nonempty_list(having_condition) -> having_condition
-- On EOF reduce production nonempty_list(having_condition) -> having_condition

State 493:
## Known stack suffix:
## having_condition nonempty_list(having_condition)
## LR(1) items:
nonempty_list(having_condition) -> having_condition nonempty_list(having_condition) . [ VALUES RBRACE ORDER OFFSET LIMIT EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nonempty_list(having_condition) -> having_condition nonempty_list(having_condition)

State 494:
## Known stack suffix:
## function_call
## LR(1) items:
constraint_ -> function_call . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR SHA512 SHA384 SHA256 SHA1 SERVICE SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln ORDER OPTIONAL OFFSET NOW NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IF HOURS GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND AVG ASC ANON ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constraint_ -> function_call

State 495:
## Known stack suffix:
## constraint_
## LR(1) items:
having_condition -> constraint_ . [ YEAR VALUES UUID URI UCASE TZ TIMEZONE SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln ORDER OFFSET NOW NOT MONTH MINUTES MIN MD5 MAX LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IF HOURS GROUP_CONCAT FLOOR EXISTS EOF ENCODE_FOR_URI DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL BOUND BNODE AVG ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production having_condition -> constraint_

State 496:
## Known stack suffix:
## built_in_call
## LR(1) items:
constraint_ -> built_in_call . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR SHA512 SHA384 SHA256 SHA1 SERVICE SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln ORDER OPTIONAL OFFSET NOW NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IF HOURS GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND AVG ASC ANON ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constraint_ -> built_in_call

State 497:
## Known stack suffix:
## bracketted_expression
## LR(1) items:
constraint_ -> bracketted_expression . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR SHA512 SHA384 SHA256 SHA1 SERVICE SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln ORDER OPTIONAL OFFSET NOW NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IF HOURS GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND AVG ASC ANON ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constraint_ -> bracketted_expression

State 498:
## Known stack suffix:
## option(group_clause) option(having_clause)
## LR(1) items:
solution_modifier -> option(group_clause) option(having_clause) . option(order_clause) option(limit_offset_clause) [ VALUES RBRACE EOF ]
## Transitions:
-- On ORDER shift to state 499
-- On order_clause shift to state 510
-- On option(order_clause) shift to state 511
## Reductions:
-- On VALUES reduce production option(order_clause) ->
-- On RBRACE reduce production option(order_clause) ->
-- On OFFSET reduce production option(order_clause) ->
-- On LIMIT reduce production option(order_clause) ->
-- On EOF reduce production option(order_clause) ->

State 499:
## Known stack suffix:
## ORDER
## LR(1) items:
order_clause -> ORDER . BY nonempty_list(order_condition) [ VALUES RBRACE OFFSET LIMIT EOF ]
## Transitions:
-- On BY shift to state 500
## Reductions:

State 500:
## Known stack suffix:
## ORDER BY
## LR(1) items:
order_clause -> ORDER BY . nonempty_list(order_condition) [ VALUES RBRACE OFFSET LIMIT EOF ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On DESC shift to state 501
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On AVG shift to state 306
-- On ASC shift to state 503
-- On ABS shift to state 309
-- On var shift to state 505
-- On substring_expression shift to state 315
-- On str_replace_expression shift to state 316
-- On regexp_expression shift to state 318
-- On prefixed_name shift to state 97
-- On order_condition shift to state 506
-- On nonempty_list(order_condition) shift to state 509
-- On iri shift to state 491
-- On function_call shift to state 494
-- On constraint_ shift to state 508
-- On built_in_call shift to state 496
-- On bracketted_expression shift to state 497
-- On aggregate shift to state 341
## Reductions:

State 501:
## Known stack suffix:
## DESC
## LR(1) items:
order_condition -> DESC . bracketted_expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln OFFSET NOW NOT MONTH MINUTES MIN MD5 MAX LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IF HOURS GROUP_CONCAT FLOOR EXISTS EOF ENCODE_FOR_URI DESC DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL BOUND BNODE AVG ASC ABS ]
## Transitions:
-- On LPAR shift to state 248
-- On bracketted_expression shift to state 502
## Reductions:

State 502:
## Known stack suffix:
## DESC bracketted_expression
## LR(1) items:
order_condition -> DESC bracketted_expression . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln OFFSET NOW NOT MONTH MINUTES MIN MD5 MAX LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IF HOURS GROUP_CONCAT FLOOR EXISTS EOF ENCODE_FOR_URI DESC DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL BOUND BNODE AVG ASC ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production order_condition -> DESC bracketted_expression

State 503:
## Known stack suffix:
## ASC
## LR(1) items:
order_condition -> ASC . bracketted_expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln OFFSET NOW NOT MONTH MINUTES MIN MD5 MAX LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IF HOURS GROUP_CONCAT FLOOR EXISTS EOF ENCODE_FOR_URI DESC DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL BOUND BNODE AVG ASC ABS ]
## Transitions:
-- On LPAR shift to state 248
-- On bracketted_expression shift to state 504
## Reductions:

State 504:
## Known stack suffix:
## ASC bracketted_expression
## LR(1) items:
order_condition -> ASC bracketted_expression . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln OFFSET NOW NOT MONTH MINUTES MIN MD5 MAX LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IF HOURS GROUP_CONCAT FLOOR EXISTS EOF ENCODE_FOR_URI DESC DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL BOUND BNODE AVG ASC ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production order_condition -> ASC bracketted_expression

State 505:
## Known stack suffix:
## var
## LR(1) items:
order_condition -> var . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln OFFSET NOW NOT MONTH MINUTES MIN MD5 MAX LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IF HOURS GROUP_CONCAT FLOOR EXISTS EOF ENCODE_FOR_URI DESC DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL BOUND BNODE AVG ASC ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production order_condition -> var

State 506:
## Known stack suffix:
## order_condition
## LR(1) items:
nonempty_list(order_condition) -> order_condition . [ VALUES RBRACE OFFSET LIMIT EOF ]
nonempty_list(order_condition) -> order_condition . nonempty_list(order_condition) [ VALUES RBRACE OFFSET LIMIT EOF ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On DESC shift to state 501
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On AVG shift to state 306
-- On ASC shift to state 503
-- On ABS shift to state 309
-- On var shift to state 505
-- On substring_expression shift to state 315
-- On str_replace_expression shift to state 316
-- On regexp_expression shift to state 318
-- On prefixed_name shift to state 97
-- On order_condition shift to state 506
-- On nonempty_list(order_condition) shift to state 507
-- On iri shift to state 491
-- On function_call shift to state 494
-- On constraint_ shift to state 508
-- On built_in_call shift to state 496
-- On bracketted_expression shift to state 497
-- On aggregate shift to state 341
## Reductions:
-- On VALUES reduce production nonempty_list(order_condition) -> order_condition
-- On RBRACE reduce production nonempty_list(order_condition) -> order_condition
-- On OFFSET reduce production nonempty_list(order_condition) -> order_condition
-- On LIMIT reduce production nonempty_list(order_condition) -> order_condition
-- On EOF reduce production nonempty_list(order_condition) -> order_condition

State 507:
## Known stack suffix:
## order_condition nonempty_list(order_condition)
## LR(1) items:
nonempty_list(order_condition) -> order_condition nonempty_list(order_condition) . [ VALUES RBRACE OFFSET LIMIT EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nonempty_list(order_condition) -> order_condition nonempty_list(order_condition)

State 508:
## Known stack suffix:
## constraint_
## LR(1) items:
order_condition -> constraint_ . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln OFFSET NOW NOT MONTH MINUTES MIN MD5 MAX LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IF HOURS GROUP_CONCAT FLOOR EXISTS EOF ENCODE_FOR_URI DESC DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL BOUND BNODE AVG ASC ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production order_condition -> constraint_

State 509:
## Known stack suffix:
## ORDER BY nonempty_list(order_condition)
## LR(1) items:
order_clause -> ORDER BY nonempty_list(order_condition) . [ VALUES RBRACE OFFSET LIMIT EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production order_clause -> ORDER BY nonempty_list(order_condition)

State 510:
## Known stack suffix:
## order_clause
## LR(1) items:
option(order_clause) -> order_clause . [ VALUES RBRACE OFFSET LIMIT EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(order_clause) -> order_clause

State 511:
## Known stack suffix:
## option(group_clause) option(having_clause) option(order_clause)
## LR(1) items:
solution_modifier -> option(group_clause) option(having_clause) option(order_clause) . option(limit_offset_clause) [ VALUES RBRACE EOF ]
## Transitions:
-- On OFFSET shift to state 512
-- On LIMIT shift to state 514
-- On option(limit_offset_clause) shift to state 516
-- On offset_clause shift to state 517
-- On limit_offset_clause shift to state 520
-- On limit_clause shift to state 521
## Reductions:
-- On VALUES reduce production option(limit_offset_clause) ->
-- On RBRACE reduce production option(limit_offset_clause) ->
-- On EOF reduce production option(limit_offset_clause) ->

State 512:
## Known stack suffix:
## OFFSET
## LR(1) items:
offset_clause -> OFFSET . Integer [ VALUES RBRACE LIMIT EOF ]
## Transitions:
-- On Integer shift to state 513
## Reductions:

State 513:
## Known stack suffix:
## OFFSET Integer
## LR(1) items:
offset_clause -> OFFSET Integer . [ VALUES RBRACE LIMIT EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production offset_clause -> OFFSET Integer

State 514:
## Known stack suffix:
## LIMIT
## LR(1) items:
limit_clause -> LIMIT . Integer [ VALUES RBRACE OFFSET EOF ]
## Transitions:
-- On Integer shift to state 515
## Reductions:

State 515:
## Known stack suffix:
## LIMIT Integer
## LR(1) items:
limit_clause -> LIMIT Integer . [ VALUES RBRACE OFFSET EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production limit_clause -> LIMIT Integer

State 516:
## Known stack suffix:
## option(group_clause) option(having_clause) option(order_clause) option(limit_offset_clause)
## LR(1) items:
solution_modifier -> option(group_clause) option(having_clause) option(order_clause) option(limit_offset_clause) . [ VALUES RBRACE EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production solution_modifier -> option(group_clause) option(having_clause) option(order_clause) option(limit_offset_clause)

State 517:
## Known stack suffix:
## offset_clause
## LR(1) items:
limit_offset_clause -> offset_clause . option(limit_clause) [ VALUES RBRACE EOF ]
## Transitions:
-- On LIMIT shift to state 514
-- On option(limit_clause) shift to state 518
-- On limit_clause shift to state 519
## Reductions:
-- On VALUES reduce production option(limit_clause) ->
-- On RBRACE reduce production option(limit_clause) ->
-- On EOF reduce production option(limit_clause) ->

State 518:
## Known stack suffix:
## offset_clause option(limit_clause)
## LR(1) items:
limit_offset_clause -> offset_clause option(limit_clause) . [ VALUES RBRACE EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production limit_offset_clause -> offset_clause option(limit_clause)

State 519:
## Known stack suffix:
## limit_clause
## LR(1) items:
option(limit_clause) -> limit_clause . [ VALUES RBRACE EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(limit_clause) -> limit_clause

State 520:
## Known stack suffix:
## limit_offset_clause
## LR(1) items:
option(limit_offset_clause) -> limit_offset_clause . [ VALUES RBRACE EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(limit_offset_clause) -> limit_offset_clause

State 521:
## Known stack suffix:
## limit_clause
## LR(1) items:
limit_offset_clause -> limit_clause . option(offset_clause) [ VALUES RBRACE EOF ]
## Transitions:
-- On OFFSET shift to state 512
-- On option(offset_clause) shift to state 522
-- On offset_clause shift to state 523
## Reductions:
-- On VALUES reduce production option(offset_clause) ->
-- On RBRACE reduce production option(offset_clause) ->
-- On EOF reduce production option(offset_clause) ->

State 522:
## Known stack suffix:
## limit_clause option(offset_clause)
## LR(1) items:
limit_offset_clause -> limit_clause option(offset_clause) . [ VALUES RBRACE EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production limit_offset_clause -> limit_clause option(offset_clause)

State 523:
## Known stack suffix:
## offset_clause
## LR(1) items:
option(offset_clause) -> offset_clause . [ VALUES RBRACE EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(offset_clause) -> offset_clause

State 524:
## Known stack suffix:
## having_clause
## LR(1) items:
option(having_clause) -> having_clause . [ VALUES RBRACE ORDER OFFSET LIMIT EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(having_clause) -> having_clause

State 525:
## Known stack suffix:
## group_clause
## LR(1) items:
option(group_clause) -> group_clause . [ VALUES RBRACE ORDER OFFSET LIMIT HAVING EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(group_clause) -> group_clause

State 526:
## Known stack suffix:
## option(WHERE)
## LR(1) items:
where_clause -> option(WHERE) . group_graph_pattern [ VALUES RBRACE ORDER OFFSET LIMIT HAVING GROUP EOF ]
## Transitions:
-- On LBRACE shift to state 86
-- On group_graph_pattern shift to state 527
## Reductions:

State 527:
## Known stack suffix:
## option(WHERE) group_graph_pattern
## LR(1) items:
where_clause -> option(WHERE) group_graph_pattern . [ VALUES RBRACE ORDER OFFSET LIMIT HAVING GROUP EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production where_clause -> option(WHERE) group_graph_pattern

State 528:
## Known stack suffix:
## option(triples_block)
## LR(1) items:
group_graph_pattern_sub -> option(triples_block) . list(gp_triples) [ RBRACE ]
## Transitions:
-- On VALUES shift to state 529
-- On SERVICE shift to state 531
-- On OPTIONAL shift to state 536
-- On MINUS shift to state 538
-- On LBRACE shift to state 86
-- On GRAPH shift to state 540
-- On FILTER shift to state 543
-- On BIND shift to state 545
-- On service_graph_pattern shift to state 551
-- On separated_nonempty_list(UNION,group_graph_pattern) shift to state 552
-- On optional_graph_pattern shift to state 553
-- On minus_graph_pattern shift to state 554
-- On list(gp_triples) shift to state 555
-- On inline_data shift to state 556
-- On group_of_union_graph_pattern shift to state 557
-- On group_graph_pattern shift to state 558
-- On graph_pattern_not_triples shift to state 561
-- On graph_graph_pattern shift to state 565
-- On gp_triples shift to state 566
-- On filter shift to state 568
-- On bind shift to state 569
## Reductions:
-- On RBRACE reduce production list(gp_triples) ->

State 529:
## Known stack suffix:
## VALUES
## LR(1) items:
inline_data -> VALUES . datablock [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
## Transitions:
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On NIL shift to state 455
-- On LPAR shift to state 456
-- On var shift to state 461
-- On nil_or_var_list shift to state 472
-- On inline_data_one_var shift to state 482
-- On inline_data_full shift to state 483
-- On datablock shift to state 530
## Reductions:

State 530:
## Known stack suffix:
## VALUES datablock
## LR(1) items:
inline_data -> VALUES datablock . [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production inline_data -> VALUES datablock

State 531:
## Known stack suffix:
## SERVICE
## LR(1) items:
service_graph_pattern -> SERVICE . option(SILENT) var_or_iri group_graph_pattern [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
## Transitions:
-- On SILENT shift to state 532
-- On option(SILENT) shift to state 533
## Reductions:
-- On Var2 reduce production option(SILENT) ->
-- On Var1 reduce production option(SILENT) ->
-- On Pname_ns reduce production option(SILENT) ->
-- On Pname_ln reduce production option(SILENT) ->
-- On Iriref_ reduce production option(SILENT) ->

State 532:
## Known stack suffix:
## SILENT
## LR(1) items:
option(SILENT) -> SILENT . [ Var2 Var1 Pname_ns Pname_ln Iriref_ ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(SILENT) -> SILENT

State 533:
## Known stack suffix:
## SERVICE option(SILENT)
## LR(1) items:
service_graph_pattern -> SERVICE option(SILENT) . var_or_iri group_graph_pattern [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
## Transitions:
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On Iriref_ shift to state 91
-- On var_or_iri shift to state 534
-- On var shift to state 189
-- On prefixed_name shift to state 97
-- On iri shift to state 191
## Reductions:

State 534:
## Known stack suffix:
## SERVICE option(SILENT) var_or_iri
## LR(1) items:
service_graph_pattern -> SERVICE option(SILENT) var_or_iri . group_graph_pattern [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
## Transitions:
-- On LBRACE shift to state 86
-- On group_graph_pattern shift to state 535
## Reductions:

State 535:
## Known stack suffix:
## SERVICE option(SILENT) var_or_iri group_graph_pattern
## LR(1) items:
service_graph_pattern -> SERVICE option(SILENT) var_or_iri group_graph_pattern . [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production service_graph_pattern -> SERVICE option(SILENT) var_or_iri group_graph_pattern

State 536:
## Known stack suffix:
## OPTIONAL
## LR(1) items:
optional_graph_pattern -> OPTIONAL . group_graph_pattern [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
## Transitions:
-- On LBRACE shift to state 86
-- On group_graph_pattern shift to state 537
## Reductions:

State 537:
## Known stack suffix:
## OPTIONAL group_graph_pattern
## LR(1) items:
optional_graph_pattern -> OPTIONAL group_graph_pattern . [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production optional_graph_pattern -> OPTIONAL group_graph_pattern

State 538:
## Known stack suffix:
## MINUS
## LR(1) items:
minus_graph_pattern -> MINUS . group_graph_pattern [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
## Transitions:
-- On LBRACE shift to state 86
-- On group_graph_pattern shift to state 539
## Reductions:

State 539:
## Known stack suffix:
## MINUS group_graph_pattern
## LR(1) items:
minus_graph_pattern -> MINUS group_graph_pattern . [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production minus_graph_pattern -> MINUS group_graph_pattern

State 540:
## Known stack suffix:
## GRAPH
## LR(1) items:
graph_graph_pattern -> GRAPH . var_or_iri group_graph_pattern [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
## Transitions:
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On Iriref_ shift to state 91
-- On var_or_iri shift to state 541
-- On var shift to state 189
-- On prefixed_name shift to state 97
-- On iri shift to state 191
## Reductions:

State 541:
## Known stack suffix:
## GRAPH var_or_iri
## LR(1) items:
graph_graph_pattern -> GRAPH var_or_iri . group_graph_pattern [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
## Transitions:
-- On LBRACE shift to state 86
-- On group_graph_pattern shift to state 542
## Reductions:

State 542:
## Known stack suffix:
## GRAPH var_or_iri group_graph_pattern
## LR(1) items:
graph_graph_pattern -> GRAPH var_or_iri group_graph_pattern . [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production graph_graph_pattern -> GRAPH var_or_iri group_graph_pattern

State 543:
## Known stack suffix:
## FILTER
## LR(1) items:
filter -> FILTER . constraint_ [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
## Transitions:
-- On YEAR shift to state 19
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On substring_expression shift to state 315
-- On str_replace_expression shift to state 316
-- On regexp_expression shift to state 318
-- On prefixed_name shift to state 97
-- On iri shift to state 491
-- On function_call shift to state 494
-- On constraint_ shift to state 544
-- On built_in_call shift to state 496
-- On bracketted_expression shift to state 497
-- On aggregate shift to state 341
## Reductions:

State 544:
## Known stack suffix:
## FILTER constraint_
## LR(1) items:
filter -> FILTER constraint_ . [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production filter -> FILTER constraint_

State 545:
## Known stack suffix:
## BIND
## LR(1) items:
bind -> BIND . LPAR expression AS var RPAR [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
## Transitions:
-- On LPAR shift to state 546
## Reductions:

State 546:
## Known stack suffix:
## BIND LPAR
## LR(1) items:
bind -> BIND LPAR . expression AS var RPAR [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 547
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 547:
## Known stack suffix:
## BIND LPAR expression
## LR(1) items:
bind -> BIND LPAR expression . AS var RPAR [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
numexp -> expression . STAR expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AS AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AS AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AS AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AS AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AS AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AS AMPAMP ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On AS shift to state 548
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 548:
## Known stack suffix:
## BIND LPAR expression AS
## LR(1) items:
bind -> BIND LPAR expression AS . var RPAR [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
## Transitions:
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On var shift to state 549
## Reductions:

State 549:
## Known stack suffix:
## BIND LPAR expression AS var
## LR(1) items:
bind -> BIND LPAR expression AS var . RPAR [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
## Transitions:
-- On RPAR shift to state 550
## Reductions:

State 550:
## Known stack suffix:
## BIND LPAR expression AS var RPAR
## LR(1) items:
bind -> BIND LPAR expression AS var RPAR . [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production bind -> BIND LPAR expression AS var RPAR

State 551:
## Known stack suffix:
## service_graph_pattern
## LR(1) items:
graph_pattern_not_triples -> service_graph_pattern . [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production graph_pattern_not_triples -> service_graph_pattern

State 552:
## Known stack suffix:
## separated_nonempty_list(UNION,group_graph_pattern)
## LR(1) items:
group_of_union_graph_pattern -> separated_nonempty_list(UNION,group_graph_pattern) . [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production group_of_union_graph_pattern -> separated_nonempty_list(UNION,group_graph_pattern)

State 553:
## Known stack suffix:
## optional_graph_pattern
## LR(1) items:
graph_pattern_not_triples -> optional_graph_pattern . [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production graph_pattern_not_triples -> optional_graph_pattern

State 554:
## Known stack suffix:
## minus_graph_pattern
## LR(1) items:
graph_pattern_not_triples -> minus_graph_pattern . [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production graph_pattern_not_triples -> minus_graph_pattern

State 555:
## Known stack suffix:
## option(triples_block) list(gp_triples)
## LR(1) items:
group_graph_pattern_sub -> option(triples_block) list(gp_triples) . [ RBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production group_graph_pattern_sub -> option(triples_block) list(gp_triples)

State 556:
## Known stack suffix:
## inline_data
## LR(1) items:
graph_pattern_not_triples -> inline_data . [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production graph_pattern_not_triples -> inline_data

State 557:
## Known stack suffix:
## group_of_union_graph_pattern
## LR(1) items:
graph_pattern_not_triples -> group_of_union_graph_pattern . [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production graph_pattern_not_triples -> group_of_union_graph_pattern

State 558:
## Known stack suffix:
## group_graph_pattern
## LR(1) items:
separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern . [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern . UNION separated_nonempty_list(UNION,group_graph_pattern) [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
## Transitions:
-- On UNION shift to state 559
## Reductions:
-- On Var2 reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern
-- On Var1 reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern
-- On VALUES reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern
-- On String_literal reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern
-- On SERVICE reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern
-- On RBRACE reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern
-- On Pname_ns reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern
-- On Pname_ln reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern
-- On OPTIONAL reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern
-- On NIL reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern
-- On MINUS reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern
-- On LPAR reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern
-- On LBRACKET reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern
-- On LBRACE reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern
-- On Iriref_ reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern
-- On Integer_positive reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern
-- On Integer_negative reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern
-- On Integer reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern
-- On GRAPH reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern
-- On FILTER reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern
-- On Double_positive reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern
-- On Double_negative reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern
-- On Double reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern
-- On Decimal_positive reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern
-- On Decimal_negative reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern
-- On Decimal reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern
-- On DOT reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern
-- On Boolean reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern
-- On Blank_node_label reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern
-- On BIND reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern
-- On ANON reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern

State 559:
## Known stack suffix:
## group_graph_pattern UNION
## LR(1) items:
separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern UNION . separated_nonempty_list(UNION,group_graph_pattern) [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
## Transitions:
-- On LBRACE shift to state 86
-- On separated_nonempty_list(UNION,group_graph_pattern) shift to state 560
-- On group_graph_pattern shift to state 558
## Reductions:

State 560:
## Known stack suffix:
## group_graph_pattern UNION separated_nonempty_list(UNION,group_graph_pattern)
## LR(1) items:
separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern UNION separated_nonempty_list(UNION,group_graph_pattern) . [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production separated_nonempty_list(UNION,group_graph_pattern) -> group_graph_pattern UNION separated_nonempty_list(UNION,group_graph_pattern)

State 561:
## Known stack suffix:
## graph_pattern_not_triples
## LR(1) items:
gp_triples -> graph_pattern_not_triples . option(DOT) option(triples_block) [ VALUES SERVICE RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER BIND ]
## Transitions:
-- On DOT shift to state 562
-- On option(DOT) shift to state 563
## Reductions:
-- On Var2 reduce production option(DOT) ->
-- On Var1 reduce production option(DOT) ->
-- On VALUES reduce production option(DOT) ->
-- On String_literal reduce production option(DOT) ->
-- On SERVICE reduce production option(DOT) ->
-- On RBRACE reduce production option(DOT) ->
-- On Pname_ns reduce production option(DOT) ->
-- On Pname_ln reduce production option(DOT) ->
-- On OPTIONAL reduce production option(DOT) ->
-- On NIL reduce production option(DOT) ->
-- On MINUS reduce production option(DOT) ->
-- On LPAR reduce production option(DOT) ->
-- On LBRACKET reduce production option(DOT) ->
-- On LBRACE reduce production option(DOT) ->
-- On Iriref_ reduce production option(DOT) ->
-- On Integer_positive reduce production option(DOT) ->
-- On Integer_negative reduce production option(DOT) ->
-- On Integer reduce production option(DOT) ->
-- On GRAPH reduce production option(DOT) ->
-- On FILTER reduce production option(DOT) ->
-- On Double_positive reduce production option(DOT) ->
-- On Double_negative reduce production option(DOT) ->
-- On Double reduce production option(DOT) ->
-- On Decimal_positive reduce production option(DOT) ->
-- On Decimal_negative reduce production option(DOT) ->
-- On Decimal reduce production option(DOT) ->
-- On Boolean reduce production option(DOT) ->
-- On Blank_node_label reduce production option(DOT) ->
-- On BIND reduce production option(DOT) ->
-- On ANON reduce production option(DOT) ->

State 562:
## Known stack suffix:
## DOT
## LR(1) items:
option(DOT) -> DOT . [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label BIND ANON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(DOT) -> DOT

State 563:
## Known stack suffix:
## graph_pattern_not_triples option(DOT)
## LR(1) items:
gp_triples -> graph_pattern_not_triples option(DOT) . option(triples_block) [ VALUES SERVICE RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER BIND ]
## Transitions:
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On String_literal shift to state 31
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On NIL shift to state 87
-- On LPAR shift to state 88
-- On LBRACKET shift to state 89
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On Boolean shift to state 139
-- On Blank_node_label shift to state 140
-- On ANON shift to state 141
-- On var_or_term shift to state 214
-- On var shift to state 143
-- On triples_same_subject_path shift to state 216
-- On triples_node_path shift to state 218
-- On triples_block_details shift to state 226
-- On triples_block shift to state 227
-- On string shift to state 145
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 151
-- On prefixed_name shift to state 97
-- On option(triples_block) shift to state 564
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 159
-- On iri shift to state 160
-- On graph_term shift to state 161
-- On collection_path shift to state 163
-- On boolean_literal shift to state 164
-- On blank_node_property_list_path shift to state 165
-- On blank_node shift to state 166
## Reductions:
-- On VALUES reduce production option(triples_block) ->
-- On SERVICE reduce production option(triples_block) ->
-- On RBRACE reduce production option(triples_block) ->
-- On OPTIONAL reduce production option(triples_block) ->
-- On MINUS reduce production option(triples_block) ->
-- On LBRACE reduce production option(triples_block) ->
-- On GRAPH reduce production option(triples_block) ->
-- On FILTER reduce production option(triples_block) ->
-- On BIND reduce production option(triples_block) ->

State 564:
## Known stack suffix:
## graph_pattern_not_triples option(DOT) option(triples_block)
## LR(1) items:
gp_triples -> graph_pattern_not_triples option(DOT) option(triples_block) . [ VALUES SERVICE RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER BIND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production gp_triples -> graph_pattern_not_triples option(DOT) option(triples_block)

State 565:
## Known stack suffix:
## graph_graph_pattern
## LR(1) items:
graph_pattern_not_triples -> graph_graph_pattern . [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production graph_pattern_not_triples -> graph_graph_pattern

State 566:
## Known stack suffix:
## gp_triples
## LR(1) items:
list(gp_triples) -> gp_triples . list(gp_triples) [ RBRACE ]
## Transitions:
-- On VALUES shift to state 529
-- On SERVICE shift to state 531
-- On OPTIONAL shift to state 536
-- On MINUS shift to state 538
-- On LBRACE shift to state 86
-- On GRAPH shift to state 540
-- On FILTER shift to state 543
-- On BIND shift to state 545
-- On service_graph_pattern shift to state 551
-- On separated_nonempty_list(UNION,group_graph_pattern) shift to state 552
-- On optional_graph_pattern shift to state 553
-- On minus_graph_pattern shift to state 554
-- On list(gp_triples) shift to state 567
-- On inline_data shift to state 556
-- On group_of_union_graph_pattern shift to state 557
-- On group_graph_pattern shift to state 558
-- On graph_pattern_not_triples shift to state 561
-- On graph_graph_pattern shift to state 565
-- On gp_triples shift to state 566
-- On filter shift to state 568
-- On bind shift to state 569
## Reductions:
-- On RBRACE reduce production list(gp_triples) ->

State 567:
## Known stack suffix:
## gp_triples list(gp_triples)
## LR(1) items:
list(gp_triples) -> gp_triples list(gp_triples) . [ RBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list(gp_triples) -> gp_triples list(gp_triples)

State 568:
## Known stack suffix:
## filter
## LR(1) items:
graph_pattern_not_triples -> filter . [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production graph_pattern_not_triples -> filter

State 569:
## Known stack suffix:
## bind
## LR(1) items:
graph_pattern_not_triples -> bind . [ Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production graph_pattern_not_triples -> bind

State 570:
## Known stack suffix:
## LBRACE group_graph_pattern_sub
## LR(1) items:
group_graph_pattern -> LBRACE group_graph_pattern_sub . RBRACE [ YEAR Var2 Var1 VALUES UUID URI UNION UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GROUP GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On RBRACE shift to state 571
## Reductions:

State 571:
## Known stack suffix:
## LBRACE group_graph_pattern_sub RBRACE
## LR(1) items:
group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE . [ YEAR Var2 Var1 VALUES UUID URI UNION UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GROUP GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production group_graph_pattern -> LBRACE group_graph_pattern_sub RBRACE

State 572:
## Known stack suffix:
## NOT EXISTS group_graph_pattern
## LR(1) items:
built_in_call -> NOT EXISTS group_graph_pattern . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production built_in_call -> NOT EXISTS group_graph_pattern

State 573:
## Known stack suffix:
## PLUS expression
## LR(1) items:
numexp -> expression . STAR expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . SLASH expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . PLUS expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . MINUS expression [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . numeric_literal_positive [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> expression . numeric_literal_negative [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
numexp -> PLUS expression . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:
-- On YEAR reduce production numexp -> PLUS expression
-- On Var2 reduce production numexp -> PLUS expression
-- On Var1 reduce production numexp -> PLUS expression
-- On VALUES reduce production numexp -> PLUS expression
-- On UUID reduce production numexp -> PLUS expression
-- On URI reduce production numexp -> PLUS expression
-- On UCASE reduce production numexp -> PLUS expression
-- On TZ reduce production numexp -> PLUS expression
-- On TIMEZONE reduce production numexp -> PLUS expression
-- On String_literal reduce production numexp -> PLUS expression
-- On SUM reduce production numexp -> PLUS expression
-- On SUBSTR reduce production numexp -> PLUS expression
-- On STRUUID reduce production numexp -> PLUS expression
-- On STRSTARTS reduce production numexp -> PLUS expression
-- On STRLEN reduce production numexp -> PLUS expression
-- On STRLANG reduce production numexp -> PLUS expression
-- On STRENDS reduce production numexp -> PLUS expression
-- On STRDT reduce production numexp -> PLUS expression
-- On STRBEFORE reduce production numexp -> PLUS expression
-- On STRAFTER reduce production numexp -> PLUS expression
-- On STR reduce production numexp -> PLUS expression
-- On SHA512 reduce production numexp -> PLUS expression
-- On SHA384 reduce production numexp -> PLUS expression
-- On SHA256 reduce production numexp -> PLUS expression
-- On SHA1 reduce production numexp -> PLUS expression
-- On SEMICOLON reduce production numexp -> PLUS expression
-- On SECONDS reduce production numexp -> PLUS expression
-- On SAMPLE reduce production numexp -> PLUS expression
-- On SAMETERM reduce production numexp -> PLUS expression
-- On RPAR reduce production numexp -> PLUS expression
-- On ROUND reduce production numexp -> PLUS expression
-- On REPLACE reduce production numexp -> PLUS expression
-- On REGEX reduce production numexp -> PLUS expression
-- On RBRACE reduce production numexp -> PLUS expression
-- On RAND reduce production numexp -> PLUS expression
-- On Pname_ns reduce production numexp -> PLUS expression
-- On Pname_ln reduce production numexp -> PLUS expression
-- On PLUS reduce production numexp -> PLUS expression
-- On PIPEPIPE reduce production numexp -> PLUS expression
-- On ORDER reduce production numexp -> PLUS expression
-- On OFFSET reduce production numexp -> PLUS expression
-- On NOW reduce production numexp -> PLUS expression
-- On NOTEQUAL reduce production numexp -> PLUS expression
-- On NOT reduce production numexp -> PLUS expression
-- On MONTH reduce production numexp -> PLUS expression
-- On MINUTES reduce production numexp -> PLUS expression
-- On MINUS reduce production numexp -> PLUS expression
-- On MIN reduce production numexp -> PLUS expression
-- On MD5 reduce production numexp -> PLUS expression
-- On MAX reduce production numexp -> PLUS expression
-- On LTE reduce production numexp -> PLUS expression
-- On LT reduce production numexp -> PLUS expression
-- On LPAR reduce production numexp -> PLUS expression
-- On LIMIT reduce production numexp -> PLUS expression
-- On LCASE reduce production numexp -> PLUS expression
-- On LANGMATCHES reduce production numexp -> PLUS expression
-- On LANG reduce production numexp -> PLUS expression
-- On Iriref_ reduce production numexp -> PLUS expression
-- On Integer reduce production numexp -> PLUS expression
-- On ISURI reduce production numexp -> PLUS expression
-- On ISNUMERIC reduce production numexp -> PLUS expression
-- On ISLITERAL reduce production numexp -> PLUS expression
-- On ISIRI reduce production numexp -> PLUS expression
-- On ISBLANK reduce production numexp -> PLUS expression
-- On IRI reduce production numexp -> PLUS expression
-- On IN reduce production numexp -> PLUS expression
-- On IF reduce production numexp -> PLUS expression
-- On HOURS reduce production numexp -> PLUS expression
-- On HAVING reduce production numexp -> PLUS expression
-- On GTE reduce production numexp -> PLUS expression
-- On GT reduce production numexp -> PLUS expression
-- On GROUP_CONCAT reduce production numexp -> PLUS expression
-- On FLOOR reduce production numexp -> PLUS expression
-- On EXISTS reduce production numexp -> PLUS expression
-- On EQUAL reduce production numexp -> PLUS expression
-- On EOF reduce production numexp -> PLUS expression
-- On ENCODE_FOR_URI reduce production numexp -> PLUS expression
-- On Double reduce production numexp -> PLUS expression
-- On Decimal reduce production numexp -> PLUS expression
-- On DAY reduce production numexp -> PLUS expression
-- On DATATYPE reduce production numexp -> PLUS expression
-- On COUNT reduce production numexp -> PLUS expression
-- On CONTAINS reduce production numexp -> PLUS expression
-- On CONCAT reduce production numexp -> PLUS expression
-- On COMMA reduce production numexp -> PLUS expression
-- On COALESCE reduce production numexp -> PLUS expression
-- On CEIL reduce production numexp -> PLUS expression
-- On Boolean reduce production numexp -> PLUS expression
-- On BOUND reduce production numexp -> PLUS expression
-- On BNODE reduce production numexp -> PLUS expression
-- On BANG reduce production numexp -> PLUS expression
-- On AVG reduce production numexp -> PLUS expression
-- On AS reduce production numexp -> PLUS expression
-- On AMPAMP reduce production numexp -> PLUS expression
-- On ABS reduce production numexp -> PLUS expression

State 574:
## Known stack suffix:
## REGEX LPAR expression
## LR(1) items:
numexp -> expression . STAR expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
regexp_expression -> REGEX LPAR expression . COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
regexp_expression -> REGEX LPAR expression . COMMA expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On COMMA shift to state 575
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 575:
## Known stack suffix:
## REGEX LPAR expression COMMA
## LR(1) items:
regexp_expression -> REGEX LPAR expression COMMA . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
regexp_expression -> REGEX LPAR expression COMMA . expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 576
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 576:
## Known stack suffix:
## REGEX LPAR expression COMMA expression
## LR(1) items:
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
regexp_expression -> REGEX LPAR expression COMMA expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
regexp_expression -> REGEX LPAR expression COMMA expression . COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 577
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On COMMA shift to state 578
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 577:
## Known stack suffix:
## REGEX LPAR expression COMMA expression RPAR
## LR(1) items:
regexp_expression -> REGEX LPAR expression COMMA expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production regexp_expression -> REGEX LPAR expression COMMA expression RPAR

State 578:
## Known stack suffix:
## REGEX LPAR expression COMMA expression COMMA
## LR(1) items:
regexp_expression -> REGEX LPAR expression COMMA expression COMMA . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 579
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 579:
## Known stack suffix:
## REGEX LPAR expression COMMA expression COMMA expression
## LR(1) items:
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 580
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 580:
## Known stack suffix:
## REGEX LPAR expression COMMA expression COMMA expression RPAR
## LR(1) items:
regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production regexp_expression -> REGEX LPAR expression COMMA expression COMMA expression RPAR

State 581:
## Known stack suffix:
## REPLACE LPAR expression
## LR(1) items:
numexp -> expression . STAR expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
str_replace_expression -> REPLACE LPAR expression . COMMA expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
str_replace_expression -> REPLACE LPAR expression . COMMA expression COMMA expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On COMMA shift to state 582
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 582:
## Known stack suffix:
## REPLACE LPAR expression COMMA
## LR(1) items:
str_replace_expression -> REPLACE LPAR expression COMMA . expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
str_replace_expression -> REPLACE LPAR expression COMMA . expression COMMA expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 583
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 583:
## Known stack suffix:
## REPLACE LPAR expression COMMA expression
## LR(1) items:
numexp -> expression . STAR expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
str_replace_expression -> REPLACE LPAR expression COMMA expression . COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
str_replace_expression -> REPLACE LPAR expression COMMA expression . COMMA expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On COMMA shift to state 584
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 584:
## Known stack suffix:
## REPLACE LPAR expression COMMA expression COMMA
## LR(1) items:
str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA . expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 585
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 585:
## Known stack suffix:
## REPLACE LPAR expression COMMA expression COMMA expression
## LR(1) items:
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression . COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 586
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On COMMA shift to state 587
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 586:
## Known stack suffix:
## REPLACE LPAR expression COMMA expression COMMA expression RPAR
## LR(1) items:
str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression RPAR

State 587:
## Known stack suffix:
## REPLACE LPAR expression COMMA expression COMMA expression COMMA
## LR(1) items:
str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 588
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 588:
## Known stack suffix:
## REPLACE LPAR expression COMMA expression COMMA expression COMMA expression
## LR(1) items:
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 589
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 589:
## Known stack suffix:
## REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR
## LR(1) items:
str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production str_replace_expression -> REPLACE LPAR expression COMMA expression COMMA expression COMMA expression RPAR

State 590:
## Known stack suffix:
## ROUND LPAR expression
## LR(1) items:
built_in_call -> ROUND LPAR expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 591
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 591:
## Known stack suffix:
## ROUND LPAR expression RPAR
## LR(1) items:
built_in_call -> ROUND LPAR expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production built_in_call -> ROUND LPAR expression RPAR

State 592:
## Known stack suffix:
## SAMETERM LPAR expression
## LR(1) items:
built_in_call -> SAMETERM LPAR expression . COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On COMMA shift to state 593
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 593:
## Known stack suffix:
## SAMETERM LPAR expression COMMA
## LR(1) items:
built_in_call -> SAMETERM LPAR expression COMMA . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 594
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 594:
## Known stack suffix:
## SAMETERM LPAR expression COMMA expression
## LR(1) items:
built_in_call -> SAMETERM LPAR expression COMMA expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 595
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 595:
## Known stack suffix:
## SAMETERM LPAR expression COMMA expression RPAR
## LR(1) items:
built_in_call -> SAMETERM LPAR expression COMMA expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production built_in_call -> SAMETERM LPAR expression COMMA expression RPAR

State 596:
## Known stack suffix:
## SAMPLE LPAR option(DISTINCT) expression
## LR(1) items:
aggregate -> SAMPLE LPAR option(DISTINCT) expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 597
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 597:
## Known stack suffix:
## SAMPLE LPAR option(DISTINCT) expression RPAR
## LR(1) items:
aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production aggregate -> SAMPLE LPAR option(DISTINCT) expression RPAR

State 598:
## Known stack suffix:
## SECONDS LPAR expression
## LR(1) items:
built_in_call -> SECONDS LPAR expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 599
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 599:
## Known stack suffix:
## SECONDS LPAR expression RPAR
## LR(1) items:
built_in_call -> SECONDS LPAR expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production built_in_call -> SECONDS LPAR expression RPAR

State 600:
## Known stack suffix:
## SHA1 LPAR expression
## LR(1) items:
built_in_call -> SHA1 LPAR expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 601
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 601:
## Known stack suffix:
## SHA1 LPAR expression RPAR
## LR(1) items:
built_in_call -> SHA1 LPAR expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production built_in_call -> SHA1 LPAR expression RPAR

State 602:
## Known stack suffix:
## SHA256 LPAR expression
## LR(1) items:
built_in_call -> SHA256 LPAR expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 603
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 603:
## Known stack suffix:
## SHA256 LPAR expression RPAR
## LR(1) items:
built_in_call -> SHA256 LPAR expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production built_in_call -> SHA256 LPAR expression RPAR

State 604:
## Known stack suffix:
## SHA384 LPAR expression
## LR(1) items:
built_in_call -> SHA384 LPAR expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 605
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 605:
## Known stack suffix:
## SHA384 LPAR expression RPAR
## LR(1) items:
built_in_call -> SHA384 LPAR expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production built_in_call -> SHA384 LPAR expression RPAR

State 606:
## Known stack suffix:
## SHA512 LPAR expression
## LR(1) items:
built_in_call -> SHA512 LPAR expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 607
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 607:
## Known stack suffix:
## SHA512 LPAR expression RPAR
## LR(1) items:
built_in_call -> SHA512 LPAR expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production built_in_call -> SHA512 LPAR expression RPAR

State 608:
## Known stack suffix:
## STR LPAR expression
## LR(1) items:
built_in_call -> STR LPAR expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 609
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 609:
## Known stack suffix:
## STR LPAR expression RPAR
## LR(1) items:
built_in_call -> STR LPAR expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production built_in_call -> STR LPAR expression RPAR

State 610:
## Known stack suffix:
## STRAFTER LPAR expression
## LR(1) items:
built_in_call -> STRAFTER LPAR expression . COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On COMMA shift to state 611
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 611:
## Known stack suffix:
## STRAFTER LPAR expression COMMA
## LR(1) items:
built_in_call -> STRAFTER LPAR expression COMMA . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 612
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 612:
## Known stack suffix:
## STRAFTER LPAR expression COMMA expression
## LR(1) items:
built_in_call -> STRAFTER LPAR expression COMMA expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 613
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 613:
## Known stack suffix:
## STRAFTER LPAR expression COMMA expression RPAR
## LR(1) items:
built_in_call -> STRAFTER LPAR expression COMMA expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production built_in_call -> STRAFTER LPAR expression COMMA expression RPAR

State 614:
## Known stack suffix:
## STRBEFORE LPAR expression
## LR(1) items:
built_in_call -> STRBEFORE LPAR expression . COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On COMMA shift to state 615
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 615:
## Known stack suffix:
## STRBEFORE LPAR expression COMMA
## LR(1) items:
built_in_call -> STRBEFORE LPAR expression COMMA . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 616
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 616:
## Known stack suffix:
## STRBEFORE LPAR expression COMMA expression
## LR(1) items:
built_in_call -> STRBEFORE LPAR expression COMMA expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 617
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 617:
## Known stack suffix:
## STRBEFORE LPAR expression COMMA expression RPAR
## LR(1) items:
built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production built_in_call -> STRBEFORE LPAR expression COMMA expression RPAR

State 618:
## Known stack suffix:
## STRDT LPAR expression
## LR(1) items:
built_in_call -> STRDT LPAR expression . COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On COMMA shift to state 619
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 619:
## Known stack suffix:
## STRDT LPAR expression COMMA
## LR(1) items:
built_in_call -> STRDT LPAR expression COMMA . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 620
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 620:
## Known stack suffix:
## STRDT LPAR expression COMMA expression
## LR(1) items:
built_in_call -> STRDT LPAR expression COMMA expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 621
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 621:
## Known stack suffix:
## STRDT LPAR expression COMMA expression RPAR
## LR(1) items:
built_in_call -> STRDT LPAR expression COMMA expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production built_in_call -> STRDT LPAR expression COMMA expression RPAR

State 622:
## Known stack suffix:
## STRENDS LPAR expression
## LR(1) items:
built_in_call -> STRENDS LPAR expression . COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On COMMA shift to state 623
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 623:
## Known stack suffix:
## STRENDS LPAR expression COMMA
## LR(1) items:
built_in_call -> STRENDS LPAR expression COMMA . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 624
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 624:
## Known stack suffix:
## STRENDS LPAR expression COMMA expression
## LR(1) items:
built_in_call -> STRENDS LPAR expression COMMA expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 625
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 625:
## Known stack suffix:
## STRENDS LPAR expression COMMA expression RPAR
## LR(1) items:
built_in_call -> STRENDS LPAR expression COMMA expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production built_in_call -> STRENDS LPAR expression COMMA expression RPAR

State 626:
## Known stack suffix:
## STRLANG LPAR expression
## LR(1) items:
built_in_call -> STRLANG LPAR expression . COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On COMMA shift to state 627
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 627:
## Known stack suffix:
## STRLANG LPAR expression COMMA
## LR(1) items:
built_in_call -> STRLANG LPAR expression COMMA . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 628
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 628:
## Known stack suffix:
## STRLANG LPAR expression COMMA expression
## LR(1) items:
built_in_call -> STRLANG LPAR expression COMMA expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 629
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 629:
## Known stack suffix:
## STRLANG LPAR expression COMMA expression RPAR
## LR(1) items:
built_in_call -> STRLANG LPAR expression COMMA expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production built_in_call -> STRLANG LPAR expression COMMA expression RPAR

State 630:
## Known stack suffix:
## STRLEN LPAR expression
## LR(1) items:
built_in_call -> STRLEN LPAR expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 631
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 631:
## Known stack suffix:
## STRLEN LPAR expression RPAR
## LR(1) items:
built_in_call -> STRLEN LPAR expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production built_in_call -> STRLEN LPAR expression RPAR

State 632:
## Known stack suffix:
## STRSTARTS LPAR expression
## LR(1) items:
built_in_call -> STRSTARTS LPAR expression . COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On COMMA shift to state 633
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 633:
## Known stack suffix:
## STRSTARTS LPAR expression COMMA
## LR(1) items:
built_in_call -> STRSTARTS LPAR expression COMMA . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 634
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 634:
## Known stack suffix:
## STRSTARTS LPAR expression COMMA expression
## LR(1) items:
built_in_call -> STRSTARTS LPAR expression COMMA expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 635
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 635:
## Known stack suffix:
## STRSTARTS LPAR expression COMMA expression RPAR
## LR(1) items:
built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production built_in_call -> STRSTARTS LPAR expression COMMA expression RPAR

State 636:
## Known stack suffix:
## SUBSTR LPAR expression
## LR(1) items:
numexp -> expression . STAR expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
substring_expression -> SUBSTR LPAR expression . COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
substring_expression -> SUBSTR LPAR expression . COMMA expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On COMMA shift to state 637
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 637:
## Known stack suffix:
## SUBSTR LPAR expression COMMA
## LR(1) items:
substring_expression -> SUBSTR LPAR expression COMMA . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
substring_expression -> SUBSTR LPAR expression COMMA . expression COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 638
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 638:
## Known stack suffix:
## SUBSTR LPAR expression COMMA expression
## LR(1) items:
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative COMMA AMPAMP ]
substring_expression -> SUBSTR LPAR expression COMMA expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
substring_expression -> SUBSTR LPAR expression COMMA expression . COMMA expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 639
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On COMMA shift to state 640
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 639:
## Known stack suffix:
## SUBSTR LPAR expression COMMA expression RPAR
## LR(1) items:
substring_expression -> SUBSTR LPAR expression COMMA expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production substring_expression -> SUBSTR LPAR expression COMMA expression RPAR

State 640:
## Known stack suffix:
## SUBSTR LPAR expression COMMA expression COMMA
## LR(1) items:
substring_expression -> SUBSTR LPAR expression COMMA expression COMMA . expression RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On YEAR shift to state 19
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On UUID shift to state 21
-- On URI shift to state 23
-- On UCASE shift to state 25
-- On TZ shift to state 27
-- On TIMEZONE shift to state 29
-- On String_literal shift to state 31
-- On SUM shift to state 32
-- On SUBSTR shift to state 36
-- On STRUUID shift to state 38
-- On STRSTARTS shift to state 40
-- On STRLEN shift to state 42
-- On STRLANG shift to state 44
-- On STRENDS shift to state 46
-- On STRDT shift to state 48
-- On STRBEFORE shift to state 50
-- On STRAFTER shift to state 52
-- On STR shift to state 54
-- On SHA512 shift to state 56
-- On SHA384 shift to state 58
-- On SHA256 shift to state 60
-- On SHA1 shift to state 62
-- On SECONDS shift to state 64
-- On SAMPLE shift to state 66
-- On SAMETERM shift to state 69
-- On ROUND shift to state 71
-- On REPLACE shift to state 73
-- On REGEX shift to state 75
-- On RAND shift to state 77
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On PLUS shift to state 81
-- On NOW shift to state 82
-- On NOT shift to state 84
-- On MONTH shift to state 235
-- On MINUTES shift to state 237
-- On MINUS shift to state 239
-- On MIN shift to state 240
-- On MD5 shift to state 243
-- On MAX shift to state 245
-- On LPAR shift to state 248
-- On LCASE shift to state 249
-- On LANGMATCHES shift to state 251
-- On LANG shift to state 253
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On ISURI shift to state 255
-- On ISNUMERIC shift to state 257
-- On ISLITERAL shift to state 259
-- On ISIRI shift to state 261
-- On ISBLANK shift to state 263
-- On IRI shift to state 265
-- On IF shift to state 267
-- On HOURS shift to state 269
-- On GROUP_CONCAT shift to state 271
-- On FLOOR shift to state 274
-- On EXISTS shift to state 276
-- On ENCODE_FOR_URI shift to state 278
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On DAY shift to state 280
-- On DATATYPE shift to state 282
-- On COUNT shift to state 284
-- On CONTAINS shift to state 289
-- On CONCAT shift to state 291
-- On COALESCE shift to state 294
-- On CEIL shift to state 296
-- On Boolean shift to state 139
-- On BOUND shift to state 298
-- On BNODE shift to state 302
-- On BANG shift to state 305
-- On AVG shift to state 306
-- On ABS shift to state 309
-- On var shift to state 311
-- On value_logical shift to state 312
-- On substring_expression shift to state 315
-- On string shift to state 145
-- On str_replace_expression shift to state 316
-- On relational_expression shift to state 317
-- On regexp_expression shift to state 318
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 319
-- On primary_expression shift to state 320
-- On prefixed_name shift to state 97
-- On numexp shift to state 321
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 324
-- On iri_or_function shift to state 325
-- On iri shift to state 326
-- On function_call shift to state 332
-- On expression shift to state 641
-- On built_in_call shift to state 338
-- On bracketted_expression shift to state 339
-- On boolean_literal shift to state 340
-- On aggregate shift to state 341
## Reductions:

State 641:
## Known stack suffix:
## SUBSTR LPAR expression COMMA expression COMMA expression
## LR(1) items:
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 642
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 642:
## Known stack suffix:
## SUBSTR LPAR expression COMMA expression COMMA expression RPAR
## LR(1) items:
substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production substring_expression -> SUBSTR LPAR expression COMMA expression COMMA expression RPAR

State 643:
## Known stack suffix:
## SUM LPAR option(DISTINCT) expression
## LR(1) items:
aggregate -> SUM LPAR option(DISTINCT) expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 644
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 644:
## Known stack suffix:
## SUM LPAR option(DISTINCT) expression RPAR
## LR(1) items:
aggregate -> SUM LPAR option(DISTINCT) expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production aggregate -> SUM LPAR option(DISTINCT) expression RPAR

State 645:
## Known stack suffix:
## TIMEZONE LPAR expression
## LR(1) items:
built_in_call -> TIMEZONE LPAR expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 646
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 646:
## Known stack suffix:
## TIMEZONE LPAR expression RPAR
## LR(1) items:
built_in_call -> TIMEZONE LPAR expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production built_in_call -> TIMEZONE LPAR expression RPAR

State 647:
## Known stack suffix:
## TZ LPAR expression
## LR(1) items:
built_in_call -> TZ LPAR expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 648
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 648:
## Known stack suffix:
## TZ LPAR expression RPAR
## LR(1) items:
built_in_call -> TZ LPAR expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production built_in_call -> TZ LPAR expression RPAR

State 649:
## Known stack suffix:
## UCASE LPAR expression
## LR(1) items:
built_in_call -> UCASE LPAR expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 650
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 650:
## Known stack suffix:
## UCASE LPAR expression RPAR
## LR(1) items:
built_in_call -> UCASE LPAR expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production built_in_call -> UCASE LPAR expression RPAR

State 651:
## Known stack suffix:
## URI LPAR expression
## LR(1) items:
built_in_call -> URI LPAR expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 652
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 652:
## Known stack suffix:
## URI LPAR expression RPAR
## LR(1) items:
built_in_call -> URI LPAR expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production built_in_call -> URI LPAR expression RPAR

State 653:
## Known stack suffix:
## YEAR LPAR expression
## LR(1) items:
built_in_call -> YEAR LPAR expression . RPAR [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
numexp -> expression . STAR expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH RPAR PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AMPAMP ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On RPAR shift to state 654
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 654:
## Known stack suffix:
## YEAR LPAR expression RPAR
## LR(1) items:
built_in_call -> YEAR LPAR expression RPAR . [ YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production built_in_call -> YEAR LPAR expression RPAR

State 655:
## Known stack suffix:
## LPAR expression
## LR(1) items:
numexp -> expression . STAR expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AS AMPAMP ]
numexp -> expression . SLASH expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AS AMPAMP ]
numexp -> expression . PLUS expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AS AMPAMP ]
numexp -> expression . MINUS expression [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AS AMPAMP ]
numexp -> expression . numeric_literal_positive [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AS AMPAMP ]
numexp -> expression . numeric_literal_negative [ STAR SLASH PLUS PIPEPIPE NOTEQUAL NOT MINUS LTE LT Integer_positive Integer_negative IN GTE GT EQUAL Double_positive Double_negative Decimal_positive Decimal_negative AS AMPAMP ]
select_var -> LPAR expression . AS var RPAR [ WHERE Var2 Var1 LPAR LBRACE FROM ]
## Transitions:
-- On STAR shift to state 334
-- On SLASH shift to state 342
-- On PLUS shift to state 344
-- On MINUS shift to state 346
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On AS shift to state 656
-- On numeric_literal_positive shift to state 336
-- On numeric_literal_negative shift to state 337
## Reductions:

State 656:
## Known stack suffix:
## LPAR expression AS
## LR(1) items:
select_var -> LPAR expression AS . var RPAR [ WHERE Var2 Var1 LPAR LBRACE FROM ]
## Transitions:
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On var shift to state 657
## Reductions:

State 657:
## Known stack suffix:
## LPAR expression AS var
## LR(1) items:
select_var -> LPAR expression AS var . RPAR [ WHERE Var2 Var1 LPAR LBRACE FROM ]
## Transitions:
-- On RPAR shift to state 658
## Reductions:

State 658:
## Known stack suffix:
## LPAR expression AS var RPAR
## LR(1) items:
select_var -> LPAR expression AS var RPAR . [ WHERE Var2 Var1 LPAR LBRACE FROM ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production select_var -> LPAR expression AS var RPAR

State 659:
## Known stack suffix:
## var
## LR(1) items:
select_var -> var . [ WHERE Var2 Var1 LPAR LBRACE FROM ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production select_var -> var

State 660:
## Known stack suffix:
## SELECT option(select_flag) select_vars
## LR(1) items:
select_clause -> SELECT option(select_flag) select_vars . [ WHERE LBRACE FROM ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production select_clause -> SELECT option(select_flag) select_vars

State 661:
## Known stack suffix:
## select_var
## LR(1) items:
nonempty_list(select_var) -> select_var . [ WHERE LBRACE FROM ]
nonempty_list(select_var) -> select_var . nonempty_list(select_var) [ WHERE LBRACE FROM ]
## Transitions:
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On LPAR shift to state 18
-- On var shift to state 659
-- On select_var shift to state 661
-- On nonempty_list(select_var) shift to state 662
## Reductions:
-- On WHERE reduce production nonempty_list(select_var) -> select_var
-- On LBRACE reduce production nonempty_list(select_var) -> select_var
-- On FROM reduce production nonempty_list(select_var) -> select_var

State 662:
## Known stack suffix:
## select_var nonempty_list(select_var)
## LR(1) items:
nonempty_list(select_var) -> select_var nonempty_list(select_var) . [ WHERE LBRACE FROM ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nonempty_list(select_var) -> select_var nonempty_list(select_var)

State 663:
## Known stack suffix:
## nonempty_list(select_var)
## LR(1) items:
select_vars -> nonempty_list(select_var) . [ WHERE LBRACE FROM ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production select_vars -> nonempty_list(select_var)

State 664:
## Known stack suffix:
## DESCRIBE
## LR(1) items:
query_kind -> DESCRIBE . nonempty_list(var_or_iri) list(dataset_clause) option(where_clause) solution_modifier [ VALUES EOF ]
query_kind -> DESCRIBE . STAR list(dataset_clause) option(where_clause) solution_modifier [ VALUES EOF ]
## Transitions:
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On STAR shift to state 665
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On Iriref_ shift to state 91
-- On var_or_iri shift to state 677
-- On var shift to state 189
-- On prefixed_name shift to state 97
-- On nonempty_list(var_or_iri) shift to state 679
-- On iri shift to state 191
## Reductions:

State 665:
## Known stack suffix:
## DESCRIBE STAR
## LR(1) items:
query_kind -> DESCRIBE STAR . list(dataset_clause) option(where_clause) solution_modifier [ VALUES EOF ]
## Transitions:
-- On FROM shift to state 666
-- On list(dataset_clause) shift to state 671
-- On dataset_clause shift to state 675
## Reductions:
-- On WHERE reduce production list(dataset_clause) ->
-- On VALUES reduce production list(dataset_clause) ->
-- On ORDER reduce production list(dataset_clause) ->
-- On OFFSET reduce production list(dataset_clause) ->
-- On LIMIT reduce production list(dataset_clause) ->
-- On LBRACE reduce production list(dataset_clause) ->
-- On HAVING reduce production list(dataset_clause) ->
-- On GROUP reduce production list(dataset_clause) ->
-- On EOF reduce production list(dataset_clause) ->

State 666:
## Known stack suffix:
## FROM
## LR(1) items:
dataset_clause -> FROM . source_selector [ WHERE VALUES ORDER OFFSET LIMIT LBRACE HAVING GROUP FROM EOF ]
dataset_clause -> FROM . NAMED source_selector [ WHERE VALUES ORDER OFFSET LIMIT LBRACE HAVING GROUP FROM EOF ]
## Transitions:
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On NAMED shift to state 667
-- On Iriref_ shift to state 91
-- On source_selector shift to state 670
-- On prefixed_name shift to state 97
-- On iri shift to state 669
## Reductions:

State 667:
## Known stack suffix:
## FROM NAMED
## LR(1) items:
dataset_clause -> FROM NAMED . source_selector [ WHERE VALUES ORDER OFFSET LIMIT LBRACE HAVING GROUP FROM EOF ]
## Transitions:
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On Iriref_ shift to state 91
-- On source_selector shift to state 668
-- On prefixed_name shift to state 97
-- On iri shift to state 669
## Reductions:

State 668:
## Known stack suffix:
## FROM NAMED source_selector
## LR(1) items:
dataset_clause -> FROM NAMED source_selector . [ WHERE VALUES ORDER OFFSET LIMIT LBRACE HAVING GROUP FROM EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dataset_clause -> FROM NAMED source_selector

State 669:
## Known stack suffix:
## iri
## LR(1) items:
source_selector -> iri . [ WHERE VALUES ORDER OFFSET LIMIT LBRACE HAVING GROUP FROM EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production source_selector -> iri

State 670:
## Known stack suffix:
## FROM source_selector
## LR(1) items:
dataset_clause -> FROM source_selector . [ WHERE VALUES ORDER OFFSET LIMIT LBRACE HAVING GROUP FROM EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dataset_clause -> FROM source_selector

State 671:
## Known stack suffix:
## DESCRIBE STAR list(dataset_clause)
## LR(1) items:
query_kind -> DESCRIBE STAR list(dataset_clause) . option(where_clause) solution_modifier [ VALUES EOF ]
## Transitions:
-- On WHERE shift to state 231
-- On where_clause shift to state 672
-- On option(where_clause) shift to state 673
-- On option(WHERE) shift to state 526
## Reductions:
-- On VALUES reduce production option(where_clause) ->
-- On ORDER reduce production option(where_clause) ->
-- On OFFSET reduce production option(where_clause) ->
-- On LIMIT reduce production option(where_clause) ->
-- On LBRACE reduce production option(WHERE) ->
-- On HAVING reduce production option(where_clause) ->
-- On GROUP reduce production option(where_clause) ->
-- On EOF reduce production option(where_clause) ->

State 672:
## Known stack suffix:
## where_clause
## LR(1) items:
option(where_clause) -> where_clause . [ VALUES ORDER OFFSET LIMIT HAVING GROUP EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(where_clause) -> where_clause

State 673:
## Known stack suffix:
## DESCRIBE STAR list(dataset_clause) option(where_clause)
## LR(1) items:
query_kind -> DESCRIBE STAR list(dataset_clause) option(where_clause) . solution_modifier [ VALUES EOF ]
## Transitions:
-- On GROUP shift to state 233
-- On solution_modifier shift to state 674
-- On option(group_clause) shift to state 488
-- On group_clause shift to state 525
## Reductions:
-- On VALUES reduce production option(group_clause) ->
-- On ORDER reduce production option(group_clause) ->
-- On OFFSET reduce production option(group_clause) ->
-- On LIMIT reduce production option(group_clause) ->
-- On HAVING reduce production option(group_clause) ->
-- On EOF reduce production option(group_clause) ->

State 674:
## Known stack suffix:
## DESCRIBE STAR list(dataset_clause) option(where_clause) solution_modifier
## LR(1) items:
query_kind -> DESCRIBE STAR list(dataset_clause) option(where_clause) solution_modifier . [ VALUES EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production query_kind -> DESCRIBE STAR list(dataset_clause) option(where_clause) solution_modifier

State 675:
## Known stack suffix:
## dataset_clause
## LR(1) items:
list(dataset_clause) -> dataset_clause . list(dataset_clause) [ WHERE VALUES ORDER OFFSET LIMIT LBRACE HAVING GROUP EOF ]
## Transitions:
-- On FROM shift to state 666
-- On list(dataset_clause) shift to state 676
-- On dataset_clause shift to state 675
## Reductions:
-- On WHERE reduce production list(dataset_clause) ->
-- On VALUES reduce production list(dataset_clause) ->
-- On ORDER reduce production list(dataset_clause) ->
-- On OFFSET reduce production list(dataset_clause) ->
-- On LIMIT reduce production list(dataset_clause) ->
-- On LBRACE reduce production list(dataset_clause) ->
-- On HAVING reduce production list(dataset_clause) ->
-- On GROUP reduce production list(dataset_clause) ->
-- On EOF reduce production list(dataset_clause) ->

State 676:
## Known stack suffix:
## dataset_clause list(dataset_clause)
## LR(1) items:
list(dataset_clause) -> dataset_clause list(dataset_clause) . [ WHERE VALUES ORDER OFFSET LIMIT LBRACE HAVING GROUP EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list(dataset_clause) -> dataset_clause list(dataset_clause)

State 677:
## Known stack suffix:
## var_or_iri
## LR(1) items:
nonempty_list(var_or_iri) -> var_or_iri . [ WHERE VALUES ORDER OFFSET LIMIT LBRACE HAVING GROUP FROM EOF ]
nonempty_list(var_or_iri) -> var_or_iri . nonempty_list(var_or_iri) [ WHERE VALUES ORDER OFFSET LIMIT LBRACE HAVING GROUP FROM EOF ]
## Transitions:
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On Iriref_ shift to state 91
-- On var_or_iri shift to state 677
-- On var shift to state 189
-- On prefixed_name shift to state 97
-- On nonempty_list(var_or_iri) shift to state 678
-- On iri shift to state 191
## Reductions:
-- On WHERE reduce production nonempty_list(var_or_iri) -> var_or_iri
-- On VALUES reduce production nonempty_list(var_or_iri) -> var_or_iri
-- On ORDER reduce production nonempty_list(var_or_iri) -> var_or_iri
-- On OFFSET reduce production nonempty_list(var_or_iri) -> var_or_iri
-- On LIMIT reduce production nonempty_list(var_or_iri) -> var_or_iri
-- On LBRACE reduce production nonempty_list(var_or_iri) -> var_or_iri
-- On HAVING reduce production nonempty_list(var_or_iri) -> var_or_iri
-- On GROUP reduce production nonempty_list(var_or_iri) -> var_or_iri
-- On FROM reduce production nonempty_list(var_or_iri) -> var_or_iri
-- On EOF reduce production nonempty_list(var_or_iri) -> var_or_iri

State 678:
## Known stack suffix:
## var_or_iri nonempty_list(var_or_iri)
## LR(1) items:
nonempty_list(var_or_iri) -> var_or_iri nonempty_list(var_or_iri) . [ WHERE VALUES ORDER OFFSET LIMIT LBRACE HAVING GROUP FROM EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nonempty_list(var_or_iri) -> var_or_iri nonempty_list(var_or_iri)

State 679:
## Known stack suffix:
## DESCRIBE nonempty_list(var_or_iri)
## LR(1) items:
query_kind -> DESCRIBE nonempty_list(var_or_iri) . list(dataset_clause) option(where_clause) solution_modifier [ VALUES EOF ]
## Transitions:
-- On FROM shift to state 666
-- On list(dataset_clause) shift to state 680
-- On dataset_clause shift to state 675
## Reductions:
-- On WHERE reduce production list(dataset_clause) ->
-- On VALUES reduce production list(dataset_clause) ->
-- On ORDER reduce production list(dataset_clause) ->
-- On OFFSET reduce production list(dataset_clause) ->
-- On LIMIT reduce production list(dataset_clause) ->
-- On LBRACE reduce production list(dataset_clause) ->
-- On HAVING reduce production list(dataset_clause) ->
-- On GROUP reduce production list(dataset_clause) ->
-- On EOF reduce production list(dataset_clause) ->

State 680:
## Known stack suffix:
## DESCRIBE nonempty_list(var_or_iri) list(dataset_clause)
## LR(1) items:
query_kind -> DESCRIBE nonempty_list(var_or_iri) list(dataset_clause) . option(where_clause) solution_modifier [ VALUES EOF ]
## Transitions:
-- On WHERE shift to state 231
-- On where_clause shift to state 672
-- On option(where_clause) shift to state 681
-- On option(WHERE) shift to state 526
## Reductions:
-- On VALUES reduce production option(where_clause) ->
-- On ORDER reduce production option(where_clause) ->
-- On OFFSET reduce production option(where_clause) ->
-- On LIMIT reduce production option(where_clause) ->
-- On LBRACE reduce production option(WHERE) ->
-- On HAVING reduce production option(where_clause) ->
-- On GROUP reduce production option(where_clause) ->
-- On EOF reduce production option(where_clause) ->

State 681:
## Known stack suffix:
## DESCRIBE nonempty_list(var_or_iri) list(dataset_clause) option(where_clause)
## LR(1) items:
query_kind -> DESCRIBE nonempty_list(var_or_iri) list(dataset_clause) option(where_clause) . solution_modifier [ VALUES EOF ]
## Transitions:
-- On GROUP shift to state 233
-- On solution_modifier shift to state 682
-- On option(group_clause) shift to state 488
-- On group_clause shift to state 525
## Reductions:
-- On VALUES reduce production option(group_clause) ->
-- On ORDER reduce production option(group_clause) ->
-- On OFFSET reduce production option(group_clause) ->
-- On LIMIT reduce production option(group_clause) ->
-- On HAVING reduce production option(group_clause) ->
-- On EOF reduce production option(group_clause) ->

State 682:
## Known stack suffix:
## DESCRIBE nonempty_list(var_or_iri) list(dataset_clause) option(where_clause) solution_modifier
## LR(1) items:
query_kind -> DESCRIBE nonempty_list(var_or_iri) list(dataset_clause) option(where_clause) solution_modifier . [ VALUES EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production query_kind -> DESCRIBE nonempty_list(var_or_iri) list(dataset_clause) option(where_clause) solution_modifier

State 683:
## Known stack suffix:
## CONSTRUCT
## LR(1) items:
query_kind -> CONSTRUCT . construct_template list(dataset_clause) where_clause solution_modifier [ VALUES EOF ]
query_kind -> CONSTRUCT . list(dataset_clause) WHERE LBRACE triples_template RBRACE solution_modifier [ VALUES EOF ]
## Transitions:
-- On LBRACE shift to state 684
-- On FROM shift to state 666
-- On list(dataset_clause) shift to state 697
-- On dataset_clause shift to state 675
-- On construct_template shift to state 704
## Reductions:
-- On WHERE reduce production list(dataset_clause) ->

State 684:
## Known stack suffix:
## LBRACE
## LR(1) items:
construct_template -> LBRACE . option(construct_triples) RBRACE [ WHERE LBRACE FROM ]
## Transitions:
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On String_literal shift to state 31
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On NIL shift to state 87
-- On LPAR shift to state 171
-- On LBRACKET shift to state 172
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On Boolean shift to state 139
-- On Blank_node_label shift to state 140
-- On ANON shift to state 141
-- On var_or_term shift to state 685
-- On var shift to state 143
-- On triples_same_subject shift to state 687
-- On triples_node shift to state 689
-- On string shift to state 145
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 151
-- On prefixed_name shift to state 97
-- On option(construct_triples) shift to state 694
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 159
-- On iri shift to state 160
-- On graph_term shift to state 161
-- On construct_triples shift to state 696
-- On collection shift to state 186
-- On boolean_literal shift to state 164
-- On blank_node_property_list shift to state 187
-- On blank_node shift to state 166
## Reductions:
-- On RBRACE reduce production option(construct_triples) ->

State 685:
## Known stack suffix:
## var_or_term
## LR(1) items:
triples_same_subject -> var_or_term . property_list_not_empty [ RBRACE DOT ]
## Transitions:
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On Iriref_ shift to state 91
-- On A shift to state 173
-- On verb_object_list shift to state 174
-- On verb shift to state 177
-- On var_or_iri shift to state 188
-- On var shift to state 189
-- On property_list_not_empty shift to state 686
-- On prefixed_name shift to state 97
-- On iri shift to state 191
## Reductions:

State 686:
## Known stack suffix:
## var_or_term property_list_not_empty
## LR(1) items:
triples_same_subject -> var_or_term property_list_not_empty . [ RBRACE DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production triples_same_subject -> var_or_term property_list_not_empty

State 687:
## Known stack suffix:
## triples_same_subject
## LR(1) items:
construct_triples -> triples_same_subject . [ RBRACE ]
construct_triples -> triples_same_subject . DOT [ RBRACE ]
construct_triples -> triples_same_subject . DOT construct_triples [ RBRACE ]
## Transitions:
-- On DOT shift to state 688
## Reductions:
-- On RBRACE reduce production construct_triples -> triples_same_subject

State 688:
## Known stack suffix:
## triples_same_subject DOT
## LR(1) items:
construct_triples -> triples_same_subject DOT . [ RBRACE ]
construct_triples -> triples_same_subject DOT . construct_triples [ RBRACE ]
## Transitions:
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On String_literal shift to state 31
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On NIL shift to state 87
-- On LPAR shift to state 171
-- On LBRACKET shift to state 172
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On Boolean shift to state 139
-- On Blank_node_label shift to state 140
-- On ANON shift to state 141
-- On var_or_term shift to state 685
-- On var shift to state 143
-- On triples_same_subject shift to state 687
-- On triples_node shift to state 689
-- On string shift to state 145
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 151
-- On prefixed_name shift to state 97
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 159
-- On iri shift to state 160
-- On graph_term shift to state 161
-- On construct_triples shift to state 693
-- On collection shift to state 186
-- On boolean_literal shift to state 164
-- On blank_node_property_list shift to state 187
-- On blank_node shift to state 166
## Reductions:
-- On RBRACE reduce production construct_triples -> triples_same_subject DOT

State 689:
## Known stack suffix:
## triples_node
## LR(1) items:
triples_same_subject -> triples_node . property_list [ RBRACE DOT ]
## Transitions:
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On Iriref_ shift to state 91
-- On A shift to state 173
-- On verb_object_list shift to state 174
-- On verb shift to state 177
-- On var_or_iri shift to state 188
-- On var shift to state 189
-- On property_list_not_empty shift to state 690
-- On property_list shift to state 691
-- On prefixed_name shift to state 97
-- On option(property_list_not_empty) shift to state 692
-- On iri shift to state 191
## Reductions:
-- On RBRACE reduce production option(property_list_not_empty) ->
-- On DOT reduce production option(property_list_not_empty) ->

State 690:
## Known stack suffix:
## property_list_not_empty
## LR(1) items:
option(property_list_not_empty) -> property_list_not_empty . [ RBRACE DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(property_list_not_empty) -> property_list_not_empty

State 691:
## Known stack suffix:
## triples_node property_list
## LR(1) items:
triples_same_subject -> triples_node property_list . [ RBRACE DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production triples_same_subject -> triples_node property_list

State 692:
## Known stack suffix:
## option(property_list_not_empty)
## LR(1) items:
property_list -> option(property_list_not_empty) . [ RBRACE DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production property_list -> option(property_list_not_empty)

State 693:
## Known stack suffix:
## triples_same_subject DOT construct_triples
## LR(1) items:
construct_triples -> triples_same_subject DOT construct_triples . [ RBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production construct_triples -> triples_same_subject DOT construct_triples

State 694:
## Known stack suffix:
## LBRACE option(construct_triples)
## LR(1) items:
construct_template -> LBRACE option(construct_triples) . RBRACE [ WHERE LBRACE FROM ]
## Transitions:
-- On RBRACE shift to state 695
## Reductions:

State 695:
## Known stack suffix:
## LBRACE option(construct_triples) RBRACE
## LR(1) items:
construct_template -> LBRACE option(construct_triples) RBRACE . [ WHERE LBRACE FROM ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production construct_template -> LBRACE option(construct_triples) RBRACE

State 696:
## Known stack suffix:
## construct_triples
## LR(1) items:
option(construct_triples) -> construct_triples . [ RBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(construct_triples) -> construct_triples

State 697:
## Known stack suffix:
## CONSTRUCT list(dataset_clause)
## LR(1) items:
query_kind -> CONSTRUCT list(dataset_clause) . WHERE LBRACE triples_template RBRACE solution_modifier [ VALUES EOF ]
## Transitions:
-- On WHERE shift to state 698
## Reductions:

State 698:
## Known stack suffix:
## CONSTRUCT list(dataset_clause) WHERE
## LR(1) items:
query_kind -> CONSTRUCT list(dataset_clause) WHERE . LBRACE triples_template RBRACE solution_modifier [ VALUES EOF ]
## Transitions:
-- On LBRACE shift to state 699
## Reductions:

State 699:
## Known stack suffix:
## CONSTRUCT list(dataset_clause) WHERE LBRACE
## LR(1) items:
query_kind -> CONSTRUCT list(dataset_clause) WHERE LBRACE . triples_template RBRACE solution_modifier [ VALUES EOF ]
## Transitions:
-- On Var2 shift to state 15
-- On Var1 shift to state 16
-- On String_literal shift to state 31
-- On Pname_ns shift to state 79
-- On Pname_ln shift to state 80
-- On NIL shift to state 87
-- On LPAR shift to state 171
-- On LBRACKET shift to state 172
-- On Iriref_ shift to state 91
-- On Integer_positive shift to state 130
-- On Integer_negative shift to state 131
-- On Integer shift to state 132
-- On Double_positive shift to state 133
-- On Double_negative shift to state 134
-- On Double shift to state 135
-- On Decimal_positive shift to state 136
-- On Decimal_negative shift to state 137
-- On Decimal shift to state 138
-- On Boolean shift to state 139
-- On Blank_node_label shift to state 140
-- On ANON shift to state 141
-- On var_or_term shift to state 685
-- On var shift to state 143
-- On triples_template shift to state 700
-- On triples_same_subject shift to state 687
-- On triples_node shift to state 689
-- On string shift to state 145
-- On rdf_literal_ shift to state 150
-- On rdf_literal shift to state 151
-- On prefixed_name shift to state 97
-- On numeric_literal_unsigned shift to state 155
-- On numeric_literal_positive shift to state 156
-- On numeric_literal_negative shift to state 157
-- On numeric_literal_ shift to state 158
-- On numeric_literal shift to state 159
-- On iri shift to state 160
-- On graph_term shift to state 161
-- On construct_triples shift to state 703
-- On collection shift to state 186
-- On boolean_literal shift to state 164
-- On blank_node_property_list shift to state 187
-- On blank_node shift to state 166
## Reductions:

State 700:
## Known stack suffix:
## CONSTRUCT list(dataset_clause) WHERE LBRACE triples_template
## LR(1) items:
query_kind -> CONSTRUCT list(dataset_clause) WHERE LBRACE triples_template . RBRACE solution_modifier [ VALUES EOF ]
## Transitions:
-- On RBRACE shift to state 701
## Reductions:

State 701:
## Known stack suffix:
## CONSTRUCT list(dataset_clause) WHERE LBRACE triples_template RBRACE
## LR(1) items:
query_kind -> CONSTRUCT list(dataset_clause) WHERE LBRACE triples_template RBRACE . solution_modifier [ VALUES EOF ]
## Transitions:
-- On GROUP shift to state 233
-- On solution_modifier shift to state 702
-- On option(group_clause) shift to state 488
-- On group_clause shift to state 525
## Reductions:
-- On VALUES reduce production option(group_clause) ->
-- On ORDER reduce production option(group_clause) ->
-- On OFFSET reduce production option(group_clause) ->
-- On LIMIT reduce production option(group_clause) ->
-- On HAVING reduce production option(group_clause) ->
-- On EOF reduce production option(group_clause) ->

State 702:
## Known stack suffix:
## CONSTRUCT list(dataset_clause) WHERE LBRACE triples_template RBRACE solution_modifier
## LR(1) items:
query_kind -> CONSTRUCT list(dataset_clause) WHERE LBRACE triples_template RBRACE solution_modifier . [ VALUES EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production query_kind -> CONSTRUCT list(dataset_clause) WHERE LBRACE triples_template RBRACE solution_modifier

State 703:
## Known stack suffix:
## construct_triples
## LR(1) items:
triples_template -> construct_triples . [ RBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production triples_template -> construct_triples

State 704:
## Known stack suffix:
## CONSTRUCT construct_template
## LR(1) items:
query_kind -> CONSTRUCT construct_template . list(dataset_clause) where_clause solution_modifier [ VALUES EOF ]
## Transitions:
-- On FROM shift to state 666
-- On list(dataset_clause) shift to state 705
-- On dataset_clause shift to state 675
## Reductions:
-- On WHERE reduce production list(dataset_clause) ->
-- On LBRACE reduce production list(dataset_clause) ->

State 705:
## Known stack suffix:
## CONSTRUCT construct_template list(dataset_clause)
## LR(1) items:
query_kind -> CONSTRUCT construct_template list(dataset_clause) . where_clause solution_modifier [ VALUES EOF ]
## Transitions:
-- On WHERE shift to state 231
-- On where_clause shift to state 706
-- On option(WHERE) shift to state 526
## Reductions:
-- On LBRACE reduce production option(WHERE) ->

State 706:
## Known stack suffix:
## CONSTRUCT construct_template list(dataset_clause) where_clause
## LR(1) items:
query_kind -> CONSTRUCT construct_template list(dataset_clause) where_clause . solution_modifier [ VALUES EOF ]
## Transitions:
-- On GROUP shift to state 233
-- On solution_modifier shift to state 707
-- On option(group_clause) shift to state 488
-- On group_clause shift to state 525
## Reductions:
-- On VALUES reduce production option(group_clause) ->
-- On ORDER reduce production option(group_clause) ->
-- On OFFSET reduce production option(group_clause) ->
-- On LIMIT reduce production option(group_clause) ->
-- On HAVING reduce production option(group_clause) ->
-- On EOF reduce production option(group_clause) ->

State 707:
## Known stack suffix:
## CONSTRUCT construct_template list(dataset_clause) where_clause solution_modifier
## LR(1) items:
query_kind -> CONSTRUCT construct_template list(dataset_clause) where_clause solution_modifier . [ VALUES EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production query_kind -> CONSTRUCT construct_template list(dataset_clause) where_clause solution_modifier

State 708:
## Known stack suffix:
## ASK
## LR(1) items:
query_kind -> ASK . list(dataset_clause) where_clause solution_modifier [ VALUES EOF ]
## Transitions:
-- On FROM shift to state 666
-- On list(dataset_clause) shift to state 709
-- On dataset_clause shift to state 675
## Reductions:
-- On WHERE reduce production list(dataset_clause) ->
-- On LBRACE reduce production list(dataset_clause) ->

State 709:
## Known stack suffix:
## ASK list(dataset_clause)
## LR(1) items:
query_kind -> ASK list(dataset_clause) . where_clause solution_modifier [ VALUES EOF ]
## Transitions:
-- On WHERE shift to state 231
-- On where_clause shift to state 710
-- On option(WHERE) shift to state 526
## Reductions:
-- On LBRACE reduce production option(WHERE) ->

State 710:
## Known stack suffix:
## ASK list(dataset_clause) where_clause
## LR(1) items:
query_kind -> ASK list(dataset_clause) where_clause . solution_modifier [ VALUES EOF ]
## Transitions:
-- On GROUP shift to state 233
-- On solution_modifier shift to state 711
-- On option(group_clause) shift to state 488
-- On group_clause shift to state 525
## Reductions:
-- On VALUES reduce production option(group_clause) ->
-- On ORDER reduce production option(group_clause) ->
-- On OFFSET reduce production option(group_clause) ->
-- On LIMIT reduce production option(group_clause) ->
-- On HAVING reduce production option(group_clause) ->
-- On EOF reduce production option(group_clause) ->

State 711:
## Known stack suffix:
## ASK list(dataset_clause) where_clause solution_modifier
## LR(1) items:
query_kind -> ASK list(dataset_clause) where_clause solution_modifier . [ VALUES EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production query_kind -> ASK list(dataset_clause) where_clause solution_modifier

State 712:
## Known stack suffix:
## select_clause
## LR(1) items:
query_kind -> select_clause . list(dataset_clause) where_clause solution_modifier [ VALUES EOF ]
## Transitions:
-- On FROM shift to state 666
-- On list(dataset_clause) shift to state 713
-- On dataset_clause shift to state 675
## Reductions:
-- On WHERE reduce production list(dataset_clause) ->
-- On LBRACE reduce production list(dataset_clause) ->

State 713:
## Known stack suffix:
## select_clause list(dataset_clause)
## LR(1) items:
query_kind -> select_clause list(dataset_clause) . where_clause solution_modifier [ VALUES EOF ]
## Transitions:
-- On WHERE shift to state 231
-- On where_clause shift to state 714
-- On option(WHERE) shift to state 526
## Reductions:
-- On LBRACE reduce production option(WHERE) ->

State 714:
## Known stack suffix:
## select_clause list(dataset_clause) where_clause
## LR(1) items:
query_kind -> select_clause list(dataset_clause) where_clause . solution_modifier [ VALUES EOF ]
## Transitions:
-- On GROUP shift to state 233
-- On solution_modifier shift to state 715
-- On option(group_clause) shift to state 488
-- On group_clause shift to state 525
## Reductions:
-- On VALUES reduce production option(group_clause) ->
-- On ORDER reduce production option(group_clause) ->
-- On OFFSET reduce production option(group_clause) ->
-- On LIMIT reduce production option(group_clause) ->
-- On HAVING reduce production option(group_clause) ->
-- On EOF reduce production option(group_clause) ->

State 715:
## Known stack suffix:
## select_clause list(dataset_clause) where_clause solution_modifier
## LR(1) items:
query_kind -> select_clause list(dataset_clause) where_clause solution_modifier . [ VALUES EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production query_kind -> select_clause list(dataset_clause) where_clause solution_modifier

State 716:
## Known stack suffix:
## prologue query_kind
## LR(1) items:
query -> prologue query_kind . values_clause EOF [ # ]
## Transitions:
-- On VALUES shift to state 454
-- On values_clause_ shift to state 485
-- On values_clause shift to state 717
-- On option(values_clause_) shift to state 487
## Reductions:
-- On EOF reduce production option(values_clause_) ->

State 717:
## Known stack suffix:
## prologue query_kind values_clause
## LR(1) items:
query -> prologue query_kind values_clause . EOF [ # ]
## Transitions:
-- On EOF shift to state 718
## Reductions:

State 718:
## Known stack suffix:
## prologue query_kind values_clause EOF
## LR(1) items:
query -> prologue query_kind values_clause EOF . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production query -> prologue query_kind values_clause EOF

State 719:
## Known stack suffix:
## list(prologue_item)
## LR(1) items:
prologue -> list(prologue_item) . [ SELECT DESCRIBE CONSTRUCT ASK ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production prologue -> list(prologue_item)

