Grammar has 159 nonterminal symbols, among which 1 start symbols.
Grammar has 140 terminal symbols.
Grammar has 374 productions.
nullable(where_clause) = false
nullable(verbp_object_list_l) = false
nullable(verbp_object_list) = false
nullable(verb_path_or_simple) = false
nullable(verb_object_list_l) = false
nullable(verb_object_list) = false
nullable(verb) = false
nullable(var_or_term) = false
nullable(var_or_iri) = false
nullable(var) = false
nullable(values_clause_) = false
nullable(values_clause) = true
nullable(value_logical) = false
nullable(triples_template) = false
nullable(triples_same_subject_path) = false
nullable(triples_same_subject) = false
nullable(triples_node_path) = false
nullable(triples_node) = false
nullable(triples_block_details2) = false
nullable(triples_block_details) = false
nullable(triples_block) = false
nullable(substring_expression) = false
nullable(subselect) = false
nullable(string) = false
nullable(str_replace_expression) = false
nullable(source_selector) = false
nullable(solution_modifier) = true
nullable(service_graph_pattern) = false
nullable(separated_nonempty_list(UNION,group_graph_pattern)) = false
nullable(separated_nonempty_list(SLASH,path_elt_or_inverse)) = false
nullable(separated_nonempty_list(PIPE,path_sequence)) = false
nullable(separated_nonempty_list(PIPE,path_one_in_property_set)) = false
nullable(separated_nonempty_list(COMMA,object_path)) = false
nullable(separated_nonempty_list(COMMA,object_)) = false
nullable(separated_nonempty_list(COMMA,expression)) = false
nullable(select_vars) = false
nullable(select_var) = false
nullable(select_flag) = false
nullable(select_clause) = false
nullable(relational_expression) = false
nullable(regexp_expression) = false
nullable(rdf_literal_) = false
nullable(rdf_literal) = false
nullable(query_kind) = false
nullable(query) = false
nullable(property_list_path_not_empty) = false
nullable(property_list_path) = true
nullable(property_list_not_empty) = false
nullable(property_list) = true
nullable(prologue_item) = false
nullable(prologue) = true
nullable(primary_expression) = false
nullable(prefixed_name) = false
nullable(path_sequence) = false
nullable(path_primary) = false
nullable(path_one_in_property_set) = false
nullable(path_negated_property_list) = false
nullable(path_mod) = false
nullable(path_elt_or_inverse) = false
nullable(path_elt) = false
nullable(path_alternative) = false
nullable(path) = false
nullable(order_condition) = false
nullable(order_clause) = false
nullable(optional_graph_pattern) = false
nullable(option(where_clause)) = true
nullable(option(verbp_object_list)) = true
nullable(option(verb_object_list)) = true
nullable(option(values_clause_)) = true
nullable(option(triples_block_details2)) = true
nullable(option(triples_block_details)) = true
nullable(option(triples_block)) = true
nullable(option(select_flag)) = true
nullable(option(property_list_path_not_empty)) = true
nullable(option(property_list_not_empty)) = true
nullable(option(path_mod)) = true
nullable(option(order_clause)) = true
nullable(option(offset_clause)) = true
nullable(option(limit_offset_clause)) = true
nullable(option(limit_clause)) = true
nullable(option(having_clause)) = true
nullable(option(group_clause)) = true
nullable(option(construct_triples)) = true
nullable(option(WHERE)) = true
nullable(option(SILENT)) = true
nullable(option(DOT)) = true
nullable(option(DISTINCT)) = true
nullable(offset_clause) = false
nullable(object_path) = false
nullable(object_list_path) = false
nullable(object_list) = false
nullable(object_) = false
nullable(numexp) = false
nullable(numeric_literal_unsigned) = false
nullable(numeric_literal_positive) = false
nullable(numeric_literal_negative) = false
nullable(numeric_literal_) = false
nullable(numeric_literal) = false
nullable(nonempty_list(var_or_iri)) = false
nullable(nonempty_list(select_var)) = false
nullable(nonempty_list(order_condition)) = false
nullable(nonempty_list(having_condition)) = false
nullable(nonempty_list(group_condition)) = false
nullable(nonempty_list(graph_node_path)) = false
nullable(nonempty_list(graph_node)) = false
nullable(nil_or_var_list) = false
nullable(minus_graph_pattern) = false
nullable(loption(separated_nonempty_list(PIPE,path_one_in_property_set))) = true
nullable(list(verbp_object_list_l)) = true
nullable(list(verb_object_list_l)) = true
nullable(list(var)) = true
nullable(list(prologue_item)) = true
nullable(list(gp_triples)) = true
nullable(list(dataset_clause)) = true
nullable(list(data_block_values_or_nil)) = true
nullable(list(data_block_value)) = true
nullable(limit_offset_clause) = false
nullable(limit_clause) = false
nullable(iri_or_function) = false
nullable(iri) = false
nullable(inline_data_one_var) = false
nullable(inline_data_full) = false
nullable(inline_data) = false
nullable(having_condition) = false
nullable(having_clause) = false
nullable(group_var) = false
nullable(group_of_union_graph_pattern) = false
nullable(group_graph_pattern_sub) = true
nullable(group_graph_pattern) = false
nullable(group_condition) = false
nullable(group_clause) = false
nullable(graph_term) = false
nullable(graph_pattern_not_triples) = false
nullable(graph_node_path) = false
nullable(graph_node) = false
nullable(graph_graph_pattern) = false
nullable(gp_triples) = false
nullable(function_call) = false
nullable(filter) = false
nullable(expression_list) = false
nullable(expression) = false
nullable(dataset_clause) = false
nullable(datablock) = false
nullable(data_block_values_or_nil) = false
nullable(data_block_value) = false
nullable(construct_triples) = false
nullable(construct_template) = false
nullable(constraint_) = false
nullable(collection_path) = false
nullable(collection) = false
nullable(built_in_call) = false
nullable(bracketted_expression) = false
nullable(boolean_literal) = false
nullable(blank_node_property_list_path) = false
nullable(blank_node_property_list) = false
nullable(blank_node) = false
nullable(bind) = false
nullable(arg_list) = false
nullable(aggregate) = false
first(where_clause) = WHERE LBRACE
first(verbp_object_list_l) = SEMICOLON
first(verbp_object_list) = Var2 Var1 Pname_ns Pname_ln LPAR Iriref_ HAT BANG A
first(verb_path_or_simple) = Var2 Var1 Pname_ns Pname_ln LPAR Iriref_ HAT BANG A
first(verb_object_list_l) = SEMICOLON
first(verb_object_list) = Var2 Var1 Pname_ns Pname_ln Iriref_ A
first(verb) = Var2 Var1 Pname_ns Pname_ln Iriref_ A
first(var_or_term) = Var2 Var1 String_literal Pname_ns Pname_ln NIL Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON
first(var_or_iri) = Var2 Var1 Pname_ns Pname_ln Iriref_
first(var) = Var2 Var1
first(values_clause_) = VALUES
first(values_clause) = VALUES
first(value_logical) = YEAR Var2 Var1 UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RAND Pname_ns Pname_ln PLUS NOW NOT MONTH MINUTES MINUS MIN MD5 MAX LPAR LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IF HOURS GROUP_CONCAT FLOOR EXISTS ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL Boolean BOUND BNODE BANG AVG ABS
first(triples_template) = Var2 Var1 String_literal Pname_ns Pname_ln NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON
first(triples_same_subject_path) = Var2 Var1 String_literal Pname_ns Pname_ln NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON
first(triples_same_subject) = Var2 Var1 String_literal Pname_ns Pname_ln NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON
first(triples_node_path) = LPAR LBRACKET
first(triples_node) = LPAR LBRACKET
first(triples_block_details2) = DOT
first(triples_block_details) = Var2 Var1 String_literal Pname_ns Pname_ln NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON
first(triples_block) = Var2 Var1 String_literal Pname_ns Pname_ln NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON
first(substring_expression) = SUBSTR
first(subselect) = SELECT
first(string) = String_literal
first(str_replace_expression) = REPLACE
first(source_selector) = Pname_ns Pname_ln Iriref_
first(solution_modifier) = ORDER OFFSET LIMIT HAVING GROUP
first(service_graph_pattern) = SERVICE
first(separated_nonempty_list(UNION,group_graph_pattern)) = LBRACE
first(separated_nonempty_list(SLASH,path_elt_or_inverse)) = Pname_ns Pname_ln LPAR Iriref_ HAT BANG A
first(separated_nonempty_list(PIPE,path_sequence)) = Pname_ns Pname_ln LPAR Iriref_ HAT BANG A
first(separated_nonempty_list(PIPE,path_one_in_property_set)) = Pname_ns Pname_ln Iriref_ HAT A
first(separated_nonempty_list(COMMA,object_path)) = Var2 Var1 String_literal Pname_ns Pname_ln NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON
first(separated_nonempty_list(COMMA,object_)) = Var2 Var1 String_literal Pname_ns Pname_ln NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON
first(separated_nonempty_list(COMMA,expression)) = YEAR Var2 Var1 UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RAND Pname_ns Pname_ln PLUS NOW NOT MONTH MINUTES MINUS MIN MD5 MAX LPAR LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IF HOURS GROUP_CONCAT FLOOR EXISTS ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL Boolean BOUND BNODE BANG AVG ABS
first(select_vars) = Var2 Var1 STAR LPAR
first(select_var) = Var2 Var1 LPAR
first(select_flag) = REDUCED DISTINCT
first(select_clause) = SELECT
first(relational_expression) = YEAR Var2 Var1 UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RAND Pname_ns Pname_ln PLUS NOW NOT MONTH MINUTES MINUS MIN MD5 MAX LPAR LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IF HOURS GROUP_CONCAT FLOOR EXISTS ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL Boolean BOUND BNODE BANG AVG ABS
first(regexp_expression) = REGEX
first(rdf_literal_) = String_literal
first(rdf_literal) = String_literal
first(query_kind) = SELECT DESCRIBE CONSTRUCT ASK
first(query) = SELECT PREFIX DESCRIBE CONSTRUCT BASE ASK
first(property_list_path_not_empty) = Var2 Var1 Pname_ns Pname_ln LPAR Iriref_ HAT BANG A
first(property_list_path) = Var2 Var1 Pname_ns Pname_ln LPAR Iriref_ HAT BANG A
first(property_list_not_empty) = Var2 Var1 Pname_ns Pname_ln Iriref_ A
first(property_list) = Var2 Var1 Pname_ns Pname_ln Iriref_ A
first(prologue_item) = PREFIX BASE
first(prologue) = PREFIX BASE
first(primary_expression) = YEAR Var2 Var1 UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RAND Pname_ns Pname_ln NOW NOT MONTH MINUTES MIN MD5 MAX LPAR LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IF HOURS GROUP_CONCAT FLOOR EXISTS ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL Boolean BOUND BNODE AVG ABS
first(prefixed_name) = Pname_ns Pname_ln
first(path_sequence) = Pname_ns Pname_ln LPAR Iriref_ HAT BANG A
first(path_primary) = Pname_ns Pname_ln LPAR Iriref_ BANG A
first(path_one_in_property_set) = Pname_ns Pname_ln Iriref_ HAT A
first(path_negated_property_list) = Pname_ns Pname_ln LPAR Iriref_ HAT A
first(path_mod) = STAR QM PLUS
first(path_elt_or_inverse) = Pname_ns Pname_ln LPAR Iriref_ HAT BANG A
first(path_elt) = Pname_ns Pname_ln LPAR Iriref_ BANG A
first(path_alternative) = Pname_ns Pname_ln LPAR Iriref_ HAT BANG A
first(path) = Pname_ns Pname_ln LPAR Iriref_ HAT BANG A
first(order_condition) = YEAR Var2 Var1 UUID URI UCASE TZ TIMEZONE SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RAND Pname_ns Pname_ln NOW NOT MONTH MINUTES MIN MD5 MAX LPAR LCASE LANGMATCHES LANG Iriref_ ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IF HOURS GROUP_CONCAT FLOOR EXISTS ENCODE_FOR_URI DESC DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL BOUND BNODE AVG ASC ABS
first(order_clause) = ORDER
first(optional_graph_pattern) = OPTIONAL
first(option(where_clause)) = WHERE LBRACE
first(option(verbp_object_list)) = Var2 Var1 Pname_ns Pname_ln LPAR Iriref_ HAT BANG A
first(option(verb_object_list)) = Var2 Var1 Pname_ns Pname_ln Iriref_ A
first(option(values_clause_)) = VALUES
first(option(triples_block_details2)) = DOT
first(option(triples_block_details)) = Var2 Var1 String_literal Pname_ns Pname_ln NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON
first(option(triples_block)) = Var2 Var1 String_literal Pname_ns Pname_ln NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON
first(option(select_flag)) = REDUCED DISTINCT
first(option(property_list_path_not_empty)) = Var2 Var1 Pname_ns Pname_ln LPAR Iriref_ HAT BANG A
first(option(property_list_not_empty)) = Var2 Var1 Pname_ns Pname_ln Iriref_ A
first(option(path_mod)) = STAR QM PLUS
first(option(order_clause)) = ORDER
first(option(offset_clause)) = OFFSET
first(option(limit_offset_clause)) = OFFSET LIMIT
first(option(limit_clause)) = LIMIT
first(option(having_clause)) = HAVING
first(option(group_clause)) = GROUP
first(option(construct_triples)) = Var2 Var1 String_literal Pname_ns Pname_ln NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON
first(option(WHERE)) = WHERE
first(option(SILENT)) = SILENT
first(option(DOT)) = DOT
first(option(DISTINCT)) = DISTINCT
first(offset_clause) = OFFSET
first(object_path) = Var2 Var1 String_literal Pname_ns Pname_ln NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON
first(object_list_path) = Var2 Var1 String_literal Pname_ns Pname_ln NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON
first(object_list) = Var2 Var1 String_literal Pname_ns Pname_ln NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON
first(object_) = Var2 Var1 String_literal Pname_ns Pname_ln NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON
first(numexp) = YEAR Var2 Var1 UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RAND Pname_ns Pname_ln PLUS NOW NOT MONTH MINUTES MINUS MIN MD5 MAX LPAR LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IF HOURS GROUP_CONCAT FLOOR EXISTS ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL Boolean BOUND BNODE BANG AVG ABS
first(numeric_literal_unsigned) = Integer Double Decimal
first(numeric_literal_positive) = Integer_positive Double_positive Decimal_positive
first(numeric_literal_negative) = Integer_negative Double_negative Decimal_negative
first(numeric_literal_) = Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal
first(numeric_literal) = Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal
first(nonempty_list(var_or_iri)) = Var2 Var1 Pname_ns Pname_ln Iriref_
first(nonempty_list(select_var)) = Var2 Var1 LPAR
first(nonempty_list(order_condition)) = YEAR Var2 Var1 UUID URI UCASE TZ TIMEZONE SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RAND Pname_ns Pname_ln NOW NOT MONTH MINUTES MIN MD5 MAX LPAR LCASE LANGMATCHES LANG Iriref_ ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IF HOURS GROUP_CONCAT FLOOR EXISTS ENCODE_FOR_URI DESC DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL BOUND BNODE AVG ASC ABS
first(nonempty_list(having_condition)) = YEAR UUID URI UCASE TZ TIMEZONE SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RAND Pname_ns Pname_ln NOW NOT MONTH MINUTES MIN MD5 MAX LPAR LCASE LANGMATCHES LANG Iriref_ ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IF HOURS GROUP_CONCAT FLOOR EXISTS ENCODE_FOR_URI DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL BOUND BNODE AVG ABS
first(nonempty_list(group_condition)) = YEAR Var2 Var1 UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RAND Pname_ns Pname_ln PLUS NOW NOT MONTH MINUTES MINUS MIN MD5 MAX LPAR LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IF HOURS GROUP_CONCAT FLOOR EXISTS ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL Boolean BOUND BNODE BANG AVG ABS
first(nonempty_list(graph_node_path)) = Var2 Var1 String_literal Pname_ns Pname_ln NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON
first(nonempty_list(graph_node)) = Var2 Var1 String_literal Pname_ns Pname_ln NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON
first(nil_or_var_list) = NIL LPAR
first(minus_graph_pattern) = MINUS
first(loption(separated_nonempty_list(PIPE,path_one_in_property_set))) = Pname_ns Pname_ln Iriref_ HAT A
first(list(verbp_object_list_l)) = SEMICOLON
first(list(verb_object_list_l)) = SEMICOLON
first(list(var)) = Var2 Var1
first(list(prologue_item)) = PREFIX BASE
first(list(gp_triples)) = VALUES SERVICE OPTIONAL MINUS LBRACE GRAPH FILTER BIND
first(list(dataset_clause)) = FROM
first(list(data_block_values_or_nil)) = NIL LPAR
first(list(data_block_value)) = UNDEF String_literal Pname_ns Pname_ln Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean
first(limit_offset_clause) = OFFSET LIMIT
first(limit_clause) = LIMIT
first(iri_or_function) = Pname_ns Pname_ln Iriref_
first(iri) = Pname_ns Pname_ln Iriref_
first(inline_data_one_var) = Var2 Var1
first(inline_data_full) = NIL LPAR
first(inline_data) = VALUES
first(having_condition) = YEAR UUID URI UCASE TZ TIMEZONE SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RAND Pname_ns Pname_ln NOW NOT MONTH MINUTES MIN MD5 MAX LPAR LCASE LANGMATCHES LANG Iriref_ ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IF HOURS GROUP_CONCAT FLOOR EXISTS ENCODE_FOR_URI DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL BOUND BNODE AVG ABS
first(having_clause) = HAVING
first(group_var) = YEAR Var2 Var1 UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RAND Pname_ns Pname_ln PLUS NOW NOT MONTH MINUTES MINUS MIN MD5 MAX LPAR LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IF HOURS GROUP_CONCAT FLOOR EXISTS ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL Boolean BOUND BNODE BANG AVG ABS
first(group_of_union_graph_pattern) = LBRACE
first(group_graph_pattern_sub) = Var2 Var1 VALUES String_literal SERVICE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label BIND ANON
first(group_graph_pattern) = LBRACE
first(group_condition) = YEAR Var2 Var1 UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RAND Pname_ns Pname_ln PLUS NOW NOT MONTH MINUTES MINUS MIN MD5 MAX LPAR LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IF HOURS GROUP_CONCAT FLOOR EXISTS ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL Boolean BOUND BNODE BANG AVG ABS
first(group_clause) = GROUP
first(graph_term) = String_literal Pname_ns Pname_ln NIL Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON
first(graph_pattern_not_triples) = VALUES SERVICE OPTIONAL MINUS LBRACE GRAPH FILTER BIND
first(graph_node_path) = Var2 Var1 String_literal Pname_ns Pname_ln NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON
first(graph_node) = Var2 Var1 String_literal Pname_ns Pname_ln NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON
first(graph_graph_pattern) = GRAPH
first(gp_triples) = VALUES SERVICE OPTIONAL MINUS LBRACE GRAPH FILTER BIND
first(function_call) = Pname_ns Pname_ln Iriref_
first(filter) = FILTER
first(expression_list) = NIL LPAR
first(expression) = YEAR Var2 Var1 UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RAND Pname_ns Pname_ln PLUS NOW NOT MONTH MINUTES MINUS MIN MD5 MAX LPAR LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IF HOURS GROUP_CONCAT FLOOR EXISTS ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL Boolean BOUND BNODE BANG AVG ABS
first(dataset_clause) = FROM
first(datablock) = Var2 Var1 NIL LPAR
first(data_block_values_or_nil) = NIL LPAR
first(data_block_value) = UNDEF String_literal Pname_ns Pname_ln Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean
first(construct_triples) = Var2 Var1 String_literal Pname_ns Pname_ln NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON
first(construct_template) = LBRACE
first(constraint_) = YEAR UUID URI UCASE TZ TIMEZONE SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RAND Pname_ns Pname_ln NOW NOT MONTH MINUTES MIN MD5 MAX LPAR LCASE LANGMATCHES LANG Iriref_ ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IF HOURS GROUP_CONCAT FLOOR EXISTS ENCODE_FOR_URI DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL BOUND BNODE AVG ABS
first(collection_path) = LPAR
first(collection) = LPAR
first(built_in_call) = YEAR UUID URI UCASE TZ TIMEZONE SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RAND NOW NOT MONTH MINUTES MIN MD5 MAX LCASE LANGMATCHES LANG ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IF HOURS GROUP_CONCAT FLOOR EXISTS ENCODE_FOR_URI DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL BOUND BNODE AVG ABS
first(bracketted_expression) = LPAR
first(boolean_literal) = Boolean
first(blank_node_property_list_path) = LBRACKET
first(blank_node_property_list) = LBRACKET
first(blank_node) = Blank_node_label ANON
first(bind) = BIND
first(arg_list) = NIL LPAR
first(aggregate) = SUM SAMPLE MIN MAX GROUP_CONCAT COUNT AVG
minimal(where_clause) = (* 2 *) LBRACE RBRACE
minimal(verbp_object_list_l) = (* 1 *) SEMICOLON
minimal(verbp_object_list) = (* 2 *) Iriref_ Var1
minimal(verb_path_or_simple) = (* 1 *) Iriref_
minimal(verb_object_list_l) = (* 1 *) SEMICOLON
minimal(verb_object_list) = (* 2 *) Var1 Var1
minimal(verb) = (* 1 *) Var1
minimal(var_or_term) = (* 1 *) Var1
minimal(var_or_iri) = (* 1 *) Var1
minimal(var) = (* 1 *) Var1
minimal(values_clause_) = (* 4 *) VALUES Var1 LBRACE RBRACE
minimal(values_clause) = (* 0 *)
minimal(value_logical) = (* 1 *) String_literal
minimal(triples_template) = (* 3 *) Var1 Var1 Var1
minimal(triples_same_subject_path) = (* 3 *) Var1 Iriref_ Var1
minimal(triples_same_subject) = (* 3 *) Var1 Var1 Var1
minimal(triples_node_path) = (* 3 *) LPAR Var1 RPAR
minimal(triples_node) = (* 3 *) LPAR Var1 RPAR
minimal(triples_block_details2) = (* 1 *) DOT
minimal(triples_block_details) = (* 3 *) Var1 Iriref_ Var1
minimal(triples_block) = (* 3 *) Var1 Iriref_ Var1
minimal(substring_expression) = (* 6 *) SUBSTR LPAR String_literal COMMA String_literal RPAR
minimal(subselect) = (* 4 *) SELECT STAR LBRACE RBRACE
minimal(string) = (* 1 *) String_literal
minimal(str_replace_expression) = (* 8 *) REPLACE LPAR String_literal COMMA String_literal COMMA String_literal RPAR
minimal(source_selector) = (* 1 *) Iriref_
minimal(solution_modifier) = (* 0 *)
minimal(service_graph_pattern) = (* 4 *) SERVICE Var1 LBRACE RBRACE
minimal(separated_nonempty_list(UNION,group_graph_pattern)) = (* 2 *) LBRACE RBRACE
minimal(separated_nonempty_list(SLASH,path_elt_or_inverse)) = (* 1 *) Iriref_
minimal(separated_nonempty_list(PIPE,path_sequence)) = (* 1 *) Iriref_
minimal(separated_nonempty_list(PIPE,path_one_in_property_set)) = (* 1 *) Iriref_
minimal(separated_nonempty_list(COMMA,object_path)) = (* 1 *) Var1
minimal(separated_nonempty_list(COMMA,object_)) = (* 1 *) Var1
minimal(separated_nonempty_list(COMMA,expression)) = (* 1 *) String_literal
minimal(select_vars) = (* 1 *) STAR
minimal(select_var) = (* 1 *) Var1
minimal(select_flag) = (* 1 *) DISTINCT
minimal(select_clause) = (* 2 *) SELECT STAR
minimal(relational_expression) = (* 1 *) String_literal
minimal(regexp_expression) = (* 6 *) REGEX LPAR String_literal COMMA String_literal RPAR
minimal(rdf_literal_) = (* 1 *) String_literal
minimal(rdf_literal) = (* 1 *) String_literal
minimal(query_kind) = (* 2 *) DESCRIBE Var1
minimal(query) = (* 3 *) DESCRIBE Var1 EOF
minimal(property_list_path_not_empty) = (* 2 *) Iriref_ Var1
minimal(property_list_path) = (* 0 *)
minimal(property_list_not_empty) = (* 2 *) Var1 Var1
minimal(property_list) = (* 0 *)
minimal(prologue_item) = (* 2 *) BASE Iriref_
minimal(prologue) = (* 0 *)
minimal(primary_expression) = (* 1 *) String_literal
minimal(prefixed_name) = (* 1 *) Pname_ns
minimal(path_sequence) = (* 1 *) Iriref_
minimal(path_primary) = (* 1 *) Iriref_
minimal(path_one_in_property_set) = (* 1 *) Iriref_
minimal(path_negated_property_list) = (* 1 *) Iriref_
minimal(path_mod) = (* 1 *) QM
minimal(path_elt_or_inverse) = (* 1 *) Iriref_
minimal(path_elt) = (* 1 *) Iriref_
minimal(path_alternative) = (* 1 *) Iriref_
minimal(path) = (* 1 *) Iriref_
minimal(order_condition) = (* 1 *) Var1
minimal(order_clause) = (* 3 *) ORDER BY Var1
minimal(optional_graph_pattern) = (* 3 *) OPTIONAL LBRACE RBRACE
minimal(option(where_clause)) = (* 0 *)
minimal(option(verbp_object_list)) = (* 0 *)
minimal(option(verb_object_list)) = (* 0 *)
minimal(option(values_clause_)) = (* 0 *)
minimal(option(triples_block_details2)) = (* 0 *)
minimal(option(triples_block_details)) = (* 0 *)
minimal(option(triples_block)) = (* 0 *)
minimal(option(select_flag)) = (* 0 *)
minimal(option(property_list_path_not_empty)) = (* 0 *)
minimal(option(property_list_not_empty)) = (* 0 *)
minimal(option(path_mod)) = (* 0 *)
minimal(option(order_clause)) = (* 0 *)
minimal(option(offset_clause)) = (* 0 *)
minimal(option(limit_offset_clause)) = (* 0 *)
minimal(option(limit_clause)) = (* 0 *)
minimal(option(having_clause)) = (* 0 *)
minimal(option(group_clause)) = (* 0 *)
minimal(option(construct_triples)) = (* 0 *)
minimal(option(WHERE)) = (* 0 *)
minimal(option(SILENT)) = (* 0 *)
minimal(option(DOT)) = (* 0 *)
minimal(option(DISTINCT)) = (* 0 *)
minimal(offset_clause) = (* 2 *) OFFSET Integer
minimal(object_path) = (* 1 *) Var1
minimal(object_list_path) = (* 1 *) Var1
minimal(object_list) = (* 1 *) Var1
minimal(object_) = (* 1 *) Var1
minimal(numexp) = (* 1 *) String_literal
minimal(numeric_literal_unsigned) = (* 1 *) Integer
minimal(numeric_literal_positive) = (* 1 *) Integer_positive
minimal(numeric_literal_negative) = (* 1 *) Integer_negative
minimal(numeric_literal_) = (* 1 *) Integer
minimal(numeric_literal) = (* 1 *) Integer
minimal(nonempty_list(var_or_iri)) = (* 1 *) Var1
minimal(nonempty_list(select_var)) = (* 1 *) Var1
minimal(nonempty_list(order_condition)) = (* 1 *) Var1
minimal(nonempty_list(having_condition)) = (* 2 *) BNODE NIL
minimal(nonempty_list(group_condition)) = (* 1 *) Var1
minimal(nonempty_list(graph_node_path)) = (* 1 *) Var1
minimal(nonempty_list(graph_node)) = (* 1 *) Var1
minimal(nil_or_var_list) = (* 1 *) NIL
minimal(minus_graph_pattern) = (* 3 *) MINUS LBRACE RBRACE
minimal(loption(separated_nonempty_list(PIPE,path_one_in_property_set))) = (* 0 *)
minimal(list(verbp_object_list_l)) = (* 0 *)
minimal(list(verb_object_list_l)) = (* 0 *)
minimal(list(var)) = (* 0 *)
minimal(list(prologue_item)) = (* 0 *)
minimal(list(gp_triples)) = (* 0 *)
minimal(list(dataset_clause)) = (* 0 *)
minimal(list(data_block_values_or_nil)) = (* 0 *)
minimal(list(data_block_value)) = (* 0 *)
minimal(limit_offset_clause) = (* 2 *) LIMIT Integer
minimal(limit_clause) = (* 2 *) LIMIT Integer
minimal(iri_or_function) = (* 1 *) Iriref_
minimal(iri) = (* 1 *) Iriref_
minimal(inline_data_one_var) = (* 3 *) Var1 LBRACE RBRACE
minimal(inline_data_full) = (* 3 *) NIL LBRACE RBRACE
minimal(inline_data) = (* 4 *) VALUES Var1 LBRACE RBRACE
minimal(having_condition) = (* 2 *) BNODE NIL
minimal(having_clause) = (* 3 *) HAVING BNODE NIL
minimal(group_var) = (* 1 *) Var1
minimal(group_of_union_graph_pattern) = (* 2 *) LBRACE RBRACE
minimal(group_graph_pattern_sub) = (* 0 *)
minimal(group_graph_pattern) = (* 2 *) LBRACE RBRACE
minimal(group_condition) = (* 1 *) Var1
minimal(group_clause) = (* 3 *) GROUP BY Var1
minimal(graph_term) = (* 1 *) Iriref_
minimal(graph_pattern_not_triples) = (* 2 *) LBRACE RBRACE
minimal(graph_node_path) = (* 1 *) Var1
minimal(graph_node) = (* 1 *) Var1
minimal(graph_graph_pattern) = (* 4 *) GRAPH Var1 LBRACE RBRACE
minimal(gp_triples) = (* 2 *) LBRACE RBRACE
minimal(function_call) = (* 2 *) Iriref_ NIL
minimal(filter) = (* 3 *) FILTER BNODE NIL
minimal(expression_list) = (* 1 *) NIL
minimal(expression) = (* 1 *) String_literal
minimal(dataset_clause) = (* 2 *) FROM Iriref_
minimal(datablock) = (* 3 *) Var1 LBRACE RBRACE
minimal(data_block_values_or_nil) = (* 1 *) NIL
minimal(data_block_value) = (* 1 *) Iriref_
minimal(construct_triples) = (* 3 *) Var1 Var1 Var1
minimal(construct_template) = (* 2 *) LBRACE RBRACE
minimal(constraint_) = (* 2 *) BNODE NIL
minimal(collection_path) = (* 3 *) LPAR Var1 RPAR
minimal(collection) = (* 3 *) LPAR Var1 RPAR
minimal(built_in_call) = (* 2 *) BNODE NIL
minimal(bracketted_expression) = (* 3 *) LPAR String_literal RPAR
minimal(boolean_literal) = (* 1 *) Boolean
minimal(blank_node_property_list_path) = (* 4 *) LBRACKET Iriref_ Var1 RBRACKET
minimal(blank_node_property_list) = (* 4 *) LBRACKET Var1 Var1 RBRACKET
minimal(blank_node) = (* 1 *) Blank_node_label
minimal(bind) = (* 6 *) BIND LPAR String_literal AS Var1 RPAR
minimal(arg_list) = (* 1 *) NIL
minimal(aggregate) = (* 4 *) COUNT LPAR STAR RPAR
follow(where_clause) = VALUES RBRACE ORDER OFFSET LIMIT HAVING GROUP EOF
follow(verbp_object_list_l) = VALUES SERVICE SEMICOLON RBRACKET RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER DOT BIND
follow(verbp_object_list) = VALUES SERVICE SEMICOLON RBRACKET RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER DOT BIND
follow(verb_path_or_simple) = Var2 Var1 String_literal Pname_ns Pname_ln NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON
follow(verb_object_list_l) = SEMICOLON RBRACKET RBRACE DOT
follow(verb_object_list) = SEMICOLON RBRACKET RBRACE DOT
follow(verb) = Var2 Var1 String_literal Pname_ns Pname_ln NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON
follow(var_or_term) = Var2 Var1 VALUES String_literal SERVICE SEMICOLON RPAR RBRACKET RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer HAT GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT COMMA Boolean Blank_node_label BIND BANG ANON A
follow(var_or_iri) = WHERE Var2 Var1 VALUES String_literal Pname_ns Pname_ln ORDER OFFSET NIL LPAR LIMIT LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer HAVING GROUP FROM EOF Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON
follow(var) = YEAR WHERE Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACKET RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING HAT GTE GT GROUP_CONCAT GROUP GRAPH FROM FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS A
follow(values_clause_) = RBRACE EOF
follow(values_clause) = RBRACE EOF
follow(value_logical) = YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS
follow(triples_template) = RBRACE
follow(triples_same_subject_path) = VALUES SERVICE RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER DOT BIND
follow(triples_same_subject) = RBRACE DOT
follow(triples_node_path) = Var2 Var1 VALUES String_literal SERVICE SEMICOLON RPAR RBRACKET RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer HAT GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT COMMA Boolean Blank_node_label BIND BANG ANON A
follow(triples_node) = Var2 Var1 VALUES String_literal SERVICE SEMICOLON RPAR RBRACKET RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT COMMA Boolean Blank_node_label BIND ANON A
follow(triples_block_details2) = VALUES SERVICE RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER BIND
follow(triples_block_details) = VALUES SERVICE RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER BIND
follow(triples_block) = VALUES SERVICE RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER BIND
follow(substring_expression) = YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS
follow(subselect) = RBRACE
follow(string) = YEAR Var2 Var1 VALUES UUID URI UNDEF UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACKET RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX Langtag LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING HATHAT HAT GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG AS ANON AMPAMP ABS A
follow(str_replace_expression) = YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS
follow(source_selector) = WHERE VALUES ORDER OFFSET LIMIT LBRACE HAVING GROUP FROM EOF
follow(solution_modifier) = VALUES RBRACE EOF
follow(service_graph_pattern) = Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON
follow(separated_nonempty_list(UNION,group_graph_pattern)) = Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON
follow(separated_nonempty_list(SLASH,path_elt_or_inverse)) = Var2 Var1 String_literal RPAR Pname_ns Pname_ln PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON
follow(separated_nonempty_list(PIPE,path_sequence)) = Var2 Var1 String_literal RPAR Pname_ns Pname_ln NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON
follow(separated_nonempty_list(PIPE,path_one_in_property_set)) = Var2 Var1 String_literal STAR SLASH RPAR QM Pname_ns Pname_ln PLUS PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON
follow(separated_nonempty_list(COMMA,object_path)) = VALUES SERVICE SEMICOLON RBRACKET RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER DOT BIND
follow(separated_nonempty_list(COMMA,object_)) = VALUES SERVICE SEMICOLON RBRACKET RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER DOT BIND
follow(separated_nonempty_list(COMMA,expression)) = RPAR
follow(select_vars) = WHERE LBRACE FROM
follow(select_var) = WHERE Var2 Var1 LPAR LBRACE FROM
follow(select_flag) = Var2 Var1 STAR LPAR
follow(select_clause) = WHERE LBRACE FROM
follow(relational_expression) = YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS
follow(regexp_expression) = YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS
follow(rdf_literal_) = YEAR Var2 Var1 VALUES UUID URI UNDEF UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACKET RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING HAT GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG AS ANON AMPAMP ABS A
follow(rdf_literal) = YEAR Var2 Var1 VALUES UUID URI UNDEF UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACKET RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING HAT GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG AS ANON AMPAMP ABS A
follow(query_kind) = VALUES EOF
follow(query) = #
follow(property_list_path_not_empty) = VALUES SERVICE RBRACKET RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER DOT BIND
follow(property_list_path) = VALUES SERVICE RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER DOT BIND
follow(property_list_not_empty) = RBRACKET RBRACE DOT
follow(property_list) = RBRACE DOT
follow(prologue_item) = SELECT PREFIX DESCRIBE CONSTRUCT BASE ASK
follow(prologue) = SELECT DESCRIBE CONSTRUCT ASK
follow(primary_expression) = YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS
follow(prefixed_name) = YEAR WHERE Var2 Var1 VALUES UUID URI UNDEF UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACKET RBRACE RAND QM Pname_ns Pname_ln PLUS PIPEPIPE PIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING HAT GTE GT GROUP_CONCAT GROUP GRAPH FROM FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG AS ANON AMPAMP ABS A
follow(path_sequence) = Var2 Var1 String_literal RPAR Pname_ns Pname_ln PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON
follow(path_primary) = Var2 Var1 String_literal STAR SLASH RPAR QM Pname_ns Pname_ln PLUS PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON
follow(path_one_in_property_set) = Var2 Var1 String_literal STAR SLASH RPAR QM Pname_ns Pname_ln PLUS PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON
follow(path_negated_property_list) = Var2 Var1 String_literal STAR SLASH RPAR QM Pname_ns Pname_ln PLUS PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON
follow(path_mod) = Var2 Var1 String_literal SLASH RPAR Pname_ns Pname_ln PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON
follow(path_elt_or_inverse) = Var2 Var1 String_literal SLASH RPAR Pname_ns Pname_ln PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON
follow(path_elt) = Var2 Var1 String_literal SLASH RPAR Pname_ns Pname_ln PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON
follow(path_alternative) = Var2 Var1 String_literal RPAR Pname_ns Pname_ln NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON
follow(path) = Var2 Var1 String_literal RPAR Pname_ns Pname_ln NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON
follow(order_condition) = YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln OFFSET NOW NOT MONTH MINUTES MIN MD5 MAX LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IF HOURS GROUP_CONCAT FLOOR EXISTS EOF ENCODE_FOR_URI DESC DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL BOUND BNODE AVG ASC ABS
follow(order_clause) = VALUES RBRACE OFFSET LIMIT EOF
follow(optional_graph_pattern) = Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON
follow(option(where_clause)) = VALUES ORDER OFFSET LIMIT HAVING GROUP EOF
follow(option(verbp_object_list)) = VALUES SERVICE SEMICOLON RBRACKET RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER DOT BIND
follow(option(verb_object_list)) = SEMICOLON RBRACKET RBRACE DOT
follow(option(values_clause_)) = RBRACE EOF
follow(option(triples_block_details2)) = VALUES SERVICE RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER BIND
follow(option(triples_block_details)) = VALUES SERVICE RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER BIND
follow(option(triples_block)) = VALUES SERVICE RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER BIND
follow(option(select_flag)) = Var2 Var1 STAR LPAR
follow(option(property_list_path_not_empty)) = VALUES SERVICE RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER DOT BIND
follow(option(property_list_not_empty)) = RBRACE DOT
follow(option(path_mod)) = Var2 Var1 String_literal SLASH RPAR Pname_ns Pname_ln PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON
follow(option(order_clause)) = VALUES RBRACE OFFSET LIMIT EOF
follow(option(offset_clause)) = VALUES RBRACE EOF
follow(option(limit_offset_clause)) = VALUES RBRACE EOF
follow(option(limit_clause)) = VALUES RBRACE EOF
follow(option(having_clause)) = VALUES RBRACE ORDER OFFSET LIMIT EOF
follow(option(group_clause)) = VALUES RBRACE ORDER OFFSET LIMIT HAVING EOF
follow(option(construct_triples)) = RBRACE
follow(option(WHERE)) = LBRACE
follow(option(SILENT)) = Var2 Var1 Pname_ns Pname_ln Iriref_
follow(option(DOT)) = Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label BIND ANON
follow(option(DISTINCT)) = YEAR Var2 Var1 UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RAND Pname_ns Pname_ln PLUS NOW NOT MONTH MINUTES MINUS MIN MD5 MAX LPAR LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IF HOURS GROUP_CONCAT FLOOR EXISTS ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL Boolean BOUND BNODE BANG AVG ABS
follow(offset_clause) = VALUES RBRACE LIMIT EOF
follow(object_path) = VALUES SERVICE SEMICOLON RBRACKET RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER DOT COMMA BIND
follow(object_list_path) = VALUES SERVICE SEMICOLON RBRACKET RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER DOT BIND
follow(object_list) = VALUES SERVICE SEMICOLON RBRACKET RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER DOT BIND
follow(object_) = VALUES SERVICE SEMICOLON RBRACKET RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER DOT COMMA BIND
follow(numexp) = YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS
follow(numeric_literal_unsigned) = YEAR Var2 Var1 VALUES UUID URI UNDEF UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACKET RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING HAT GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG AS ANON AMPAMP ABS A
follow(numeric_literal_positive) = YEAR Var2 Var1 VALUES UUID URI UNDEF UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACKET RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING HAT GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG AS ANON AMPAMP ABS A
follow(numeric_literal_negative) = YEAR Var2 Var1 VALUES UUID URI UNDEF UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACKET RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING HAT GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG AS ANON AMPAMP ABS A
follow(numeric_literal_) = YEAR Var2 Var1 VALUES UUID URI UNDEF UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACKET RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING HAT GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG AS ANON AMPAMP ABS A
follow(numeric_literal) = YEAR Var2 Var1 VALUES UUID URI UNDEF UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACKET RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING HAT GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG AS ANON AMPAMP ABS A
follow(nonempty_list(var_or_iri)) = WHERE VALUES ORDER OFFSET LIMIT LBRACE HAVING GROUP FROM EOF
follow(nonempty_list(select_var)) = WHERE LBRACE FROM
follow(nonempty_list(order_condition)) = VALUES RBRACE OFFSET LIMIT EOF
follow(nonempty_list(having_condition)) = VALUES RBRACE ORDER OFFSET LIMIT EOF
follow(nonempty_list(group_condition)) = VALUES RBRACE ORDER OFFSET LIMIT HAVING EOF
follow(nonempty_list(graph_node_path)) = RPAR
follow(nonempty_list(graph_node)) = RPAR
follow(nil_or_var_list) = LBRACE
follow(minus_graph_pattern) = Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON
follow(loption(separated_nonempty_list(PIPE,path_one_in_property_set))) = Var2 Var1 String_literal STAR SLASH RPAR QM Pname_ns Pname_ln PLUS PIPE NIL LPAR LBRACKET Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean Blank_node_label ANON
follow(list(verbp_object_list_l)) = VALUES SERVICE RBRACKET RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER DOT BIND
follow(list(verb_object_list_l)) = RBRACKET RBRACE DOT
follow(list(var)) = RPAR
follow(list(prologue_item)) = SELECT DESCRIBE CONSTRUCT ASK
follow(list(gp_triples)) = RBRACE
follow(list(dataset_clause)) = WHERE VALUES ORDER OFFSET LIMIT LBRACE HAVING GROUP EOF
follow(list(data_block_values_or_nil)) = RBRACE
follow(list(data_block_value)) = RPAR RBRACE
follow(limit_offset_clause) = VALUES RBRACE EOF
follow(limit_clause) = VALUES RBRACE OFFSET EOF
follow(iri_or_function) = YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS
follow(iri) = YEAR WHERE Var2 Var1 VALUES UUID URI UNDEF UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACKET RBRACE RAND QM Pname_ns Pname_ln PLUS PIPEPIPE PIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING HAT GTE GT GROUP_CONCAT GROUP GRAPH FROM FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG AS ANON AMPAMP ABS A
follow(inline_data_one_var) = Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER EOF Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON
follow(inline_data_full) = Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER EOF Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON
follow(inline_data) = Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON
follow(having_condition) = YEAR VALUES UUID URI UCASE TZ TIMEZONE SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln ORDER OFFSET NOW NOT MONTH MINUTES MIN MD5 MAX LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IF HOURS GROUP_CONCAT FLOOR EXISTS EOF ENCODE_FOR_URI DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL BOUND BNODE AVG ABS
follow(having_clause) = VALUES RBRACE ORDER OFFSET LIMIT EOF
follow(group_var) = YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS ORDER OFFSET NOW NOT MONTH MINUTES MINUS MIN MD5 MAX LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IF HOURS HAVING GROUP_CONCAT FLOOR EXISTS EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL Boolean BOUND BNODE BANG AVG ABS
follow(group_of_union_graph_pattern) = Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON
follow(group_graph_pattern_sub) = RBRACE
follow(group_graph_pattern) = YEAR Var2 Var1 VALUES UUID URI UNION UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GROUP GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS
follow(group_condition) = YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR SHA512 SHA384 SHA256 SHA1 SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS ORDER OFFSET NOW NOT MONTH MINUTES MINUS MIN MD5 MAX LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IF HOURS HAVING GROUP_CONCAT FLOOR EXISTS EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL Boolean BOUND BNODE BANG AVG ABS
follow(group_clause) = VALUES RBRACE ORDER OFFSET LIMIT HAVING EOF
follow(graph_term) = Var2 Var1 VALUES String_literal SERVICE SEMICOLON RPAR RBRACKET RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer HAT GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT COMMA Boolean Blank_node_label BIND BANG ANON A
follow(graph_pattern_not_triples) = Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON
follow(graph_node_path) = Var2 Var1 VALUES String_literal SERVICE SEMICOLON RPAR RBRACKET RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT COMMA Boolean Blank_node_label BIND ANON
follow(graph_node) = Var2 Var1 VALUES String_literal SERVICE SEMICOLON RPAR RBRACKET RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT COMMA Boolean Blank_node_label BIND ANON
follow(graph_graph_pattern) = Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON
follow(gp_triples) = VALUES SERVICE RBRACE OPTIONAL MINUS LBRACE GRAPH FILTER BIND
follow(function_call) = YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS
follow(filter) = Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON
follow(expression_list) = YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS
follow(expression) = YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OFFSET NOW NOTEQUAL NOT MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT FLOOR EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean BOUND BNODE BANG AVG AS AMPAMP ABS
follow(dataset_clause) = WHERE VALUES ORDER OFFSET LIMIT LBRACE HAVING GROUP FROM EOF
follow(datablock) = Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER EOF Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON
follow(data_block_values_or_nil) = RBRACE NIL LPAR
follow(data_block_value) = UNDEF String_literal RPAR RBRACE Pname_ns Pname_ln Iriref_ Integer_positive Integer_negative Integer Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal Boolean
follow(construct_triples) = RBRACE
follow(construct_template) = WHERE LBRACE FROM
follow(constraint_) = YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR SHA512 SHA384 SHA256 SHA1 SERVICE SECONDS SAMPLE SAMETERM ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln ORDER OPTIONAL OFFSET NOW NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IF HOURS GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND AVG ASC ANON ABS
follow(collection_path) = Var2 Var1 VALUES String_literal SERVICE SEMICOLON RPAR RBRACKET RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer HAT GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT COMMA Boolean Blank_node_label BIND BANG ANON A
follow(collection) = Var2 Var1 VALUES String_literal SERVICE SEMICOLON RPAR RBRACKET RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT COMMA Boolean Blank_node_label BIND ANON A
follow(built_in_call) = YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS
follow(bracketted_expression) = YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS
follow(boolean_literal) = YEAR Var2 Var1 VALUES UUID URI UNDEF UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACKET RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING HAT GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG AS ANON AMPAMP ABS A
follow(blank_node_property_list_path) = Var2 Var1 VALUES String_literal SERVICE SEMICOLON RPAR RBRACKET RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer HAT GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT COMMA Boolean Blank_node_label BIND BANG ANON A
follow(blank_node_property_list) = Var2 Var1 VALUES String_literal SERVICE SEMICOLON RPAR RBRACKET RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT COMMA Boolean Blank_node_label BIND ANON A
follow(blank_node) = Var2 Var1 VALUES String_literal SERVICE SEMICOLON RPAR RBRACKET RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer HAT GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT COMMA Boolean Blank_node_label BIND BANG ANON A
follow(bind) = Var2 Var1 VALUES String_literal SERVICE RBRACE Pname_ns Pname_ln OPTIONAL NIL MINUS LPAR LBRACKET LBRACE Iriref_ Integer_positive Integer_negative Integer GRAPH FILTER Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT Boolean Blank_node_label BIND ANON
follow(arg_list) = YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS
follow(aggregate) = YEAR Var2 Var1 VALUES UUID URI UCASE TZ TIMEZONE String_literal SUM SUBSTR STRUUID STRSTARTS STRLEN STRLANG STRENDS STRDT STRBEFORE STRAFTER STR STAR SLASH SHA512 SHA384 SHA256 SHA1 SERVICE SEMICOLON SECONDS SAMPLE SAMETERM RPAR ROUND REPLACE REGEX RBRACE RAND Pname_ns Pname_ln PLUS PIPEPIPE ORDER OPTIONAL OFFSET NOW NOTEQUAL NOT NIL MONTH MINUTES MINUS MIN MD5 MAX LTE LT LPAR LIMIT LCASE LBRACKET LBRACE LANGMATCHES LANG Iriref_ Integer_positive Integer_negative Integer ISURI ISNUMERIC ISLITERAL ISIRI ISBLANK IRI IN IF HOURS HAVING GTE GT GROUP_CONCAT GRAPH FLOOR FILTER EXISTS EQUAL EOF ENCODE_FOR_URI Double_positive Double_negative Double Decimal_positive Decimal_negative Decimal DOT DESC DAY DATATYPE COUNT CONTAINS CONCAT COMMA COALESCE CEIL Boolean Blank_node_label BOUND BNODE BIND BANG AVG ASC AS ANON AMPAMP ABS
Built an LR(0) automaton with 720 states.
The grammar is not SLR(1) -- 25 states have a conflict.
The construction mode is pager.
Built an LR(1) automaton with 720 states.
80 shift/reduce conflicts were silently solved.
Warning: 13 states have shift/reduce conflicts.
Warning: 11 states have reduce/reduce conflicts.
Warning: 65 shift/reduce conflicts were arbitrarily resolved.
Warning: 356 reduce/reduce conflicts were arbitrarily resolved.
305 out of 720 states have a default reduction.
291 out of 720 states are represented.
146 out of 302 symbols keep track of their start position.
152 out of 302 symbols keep track of their end position.
246 out of 375 productions exploit shiftreduce optimization.
1258 functions before inlining, 253 functions after inlining.
