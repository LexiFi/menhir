Note: the nonterminal symbol option (from regstab.2.0.0-parser.mly) is renamed regstab_2_0_0_parser_option.
File "regstab.2.0.0-parser.mly", line 193, characters 7-9:
Warning: the token LE is unused.
File "regstab.2.0.0-parser.mly", line 193, characters 10-12:
Warning: the token LT is unused.
Grammar has 14 nonterminal symbols, among which 1 start symbols.
Grammar has 30 terminal symbols.
Grammar has 61 productions.
nullable(upper) = false
nullable(terme) = false
nullable(sentences) = false
nullable(regstab_2_0_0_parser_option) = false
nullable(regschema) = false
nullable(params) = false
nullable(main) = false
nullable(in_sentences) = false
nullable(function_call) = false
nullable(flatschema) = false
nullable(def_rhs) = false
nullable(def_lhs) = false
nullable(cstr) = false
nullable(arguments) = false
first(upper) = VAR
first(terme) = VAR INT
first(sentences) = PROP OR NOT LPAREN LET EOF AND
first(regstab_2_0_0_parser_option) = UNSAT SAT
first(regschema) = PROP OR NOT LPAREN AND
first(params) = VAR PROP
first(main) = UNSAT SAT PROP OR NOT LPAREN LET EOF AND
first(in_sentences) = PROP OR NOT LPAREN LET IN EOF AND
first(function_call) = PROP
first(flatschema) = PROP OR NOT LPAREN AND
first(def_rhs) = EQUAL DEF
first(def_lhs) = PROP
first(cstr) = VAR
first(arguments) = VAR PROP INT
minimal(upper) = (* 1 *) VAR
minimal(terme) = (* 1 *) VAR
minimal(sentences) = (* 1 *) EOF
minimal(regstab_2_0_0_parser_option) = (* 1 *) SAT
minimal(regschema) = (* 2 *) PROP AND
minimal(params) = (* 1 *) PROP
minimal(main) = (* 1 *) EOF
minimal(in_sentences) = (* 1 *) EOF
minimal(function_call) = (* 2 *) PROP AND
minimal(flatschema) = (* 2 *) PROP AND
minimal(def_rhs) = (* 1 *) EQUAL
minimal(def_lhs) = (* 1 *) PROP
minimal(cstr) = (* 3 *) VAR GE INT
minimal(arguments) = (* 1 *) VAR
follow(upper) = PROP OR NOT LPAREN AND
follow(terme) = XOR ST RPAREN PROP OR NOT LPAREN LET IN IMPLY EQUIV EOF COMMA AND
follow(sentences) = #
follow(regstab_2_0_0_parser_option) = UNSAT SAT PROP OR NOT LPAREN LET EOF AND
follow(regschema) = XOR ST RPAREN PROP OR NOT LPAREN LET IN IMPLY EQUIV EOF AND
follow(params) = RPAREN
follow(main) = #
follow(in_sentences) = #
follow(function_call) = XOR ST RPAREN PROP OR NOT LPAREN LET IN IMPLY EQUIV EOF AND
follow(flatschema) = XOR ST RPAREN PROP OR NOT LPAREN LET IN IMPLY EQUIV EOF AND
follow(def_rhs) = #
follow(def_lhs) = EQUAL DEF
follow(cstr) = EOF
follow(arguments) = RPAREN
Built an LR(0) automaton with 130 states.
The grammar is not SLR(1) -- 14 states have a conflict.
The construction mode is pager.
Built an LR(1) automaton with 130 states.
70 shift/reduce conflicts were silently solved.
File "regstab.2.0.0-parser.mly", line 208, characters 0-9:
Warning: the precedence level assigned to COMMA is never useful.
File "regstab.2.0.0-parser.mly", line 208, characters 0-9:
Warning: the precedence level assigned to DEF is never useful.
File "regstab.2.0.0-parser.mly", line 204, characters 0-9:
Warning: the precedence level assigned to DOTS is never useful.
File "regstab.2.0.0-parser.mly", line 208, characters 0-9:
Warning: the precedence level assigned to EOF is never useful.
File "regstab.2.0.0-parser.mly", line 204, characters 0-9:
Warning: the precedence level assigned to EQUAL is never useful.
File "regstab.2.0.0-parser.mly", line 208, characters 0-9:
Warning: the precedence level assigned to IN is never useful.
File "regstab.2.0.0-parser.mly", line 208, characters 0-9:
Warning: the precedence level assigned to LET is never useful.
File "regstab.2.0.0-parser.mly", line 207, characters 0-9:
Warning: the precedence level assigned to LPAREN is never useful.
File "regstab.2.0.0-parser.mly", line 205, characters 0-5:
Warning: the precedence level assigned to MINUS is never useful.
File "regstab.2.0.0-parser.mly", line 205, characters 0-5:
Warning: the precedence level assigned to PLUS is never useful.
File "regstab.2.0.0-parser.mly", line 207, characters 0-9:
Warning: the precedence level assigned to RPAREN is never useful.
File "regstab.2.0.0-parser.mly", line 289, characters 33-38:
Warning: this %prec declaration is never useful.
File "regstab.2.0.0-parser.mly", line 290, characters 32-36:
Warning: this %prec declaration is never useful.
47 out of 130 states have a default reduction.
41 out of 130 states are represented.
0 out of 47 symbols keep track of their start position.
0 out of 47 symbols keep track of their end position.
35 out of 62 productions exploit shiftreduce optimization.
210 functions before inlining, 53 functions after inlining.
