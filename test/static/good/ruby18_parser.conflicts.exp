
** Conflict (shift/reduce) in state 1313.
** Token involved: error
** This state is reached from program after reading:

program_e1 operation LCURLY brace_block_e1 opt_block_var 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
program_e1 compstmt 
           stmts opt_terms 
           stmt 
           primary_value LB aref_args RBRACK OP_ASGN command_call 
           primary 
           operation brace_block 
                     (?)

** In state 1313, looking ahead at error, reducing production
** none -> 
** is permitted because of the following sub-derivation:

LCURLY brace_block_e1 opt_block_var compstmt RCURLY_error // lookahead token appears because RCURLY_error can begin with error
                                    stmts opt_terms // lookahead token is inherited because opt_terms can vanish
                                    none // lookahead token is inherited
                                    . 

** In state 1313, looking ahead at error, shifting is permitted
** because of the following sub-derivation:

LCURLY brace_block_e1 opt_block_var compstmt RCURLY_error 
                                    stmts opt_terms 
                                    . error stmt 

** Conflict (shift/reduce) in state 1094.
** Token involved: error
** This state is reached from program after reading:

program_e1 operation LCURLY brace_block_e1 opt_block_var command K_DO_BLOCK do_block_e1 opt_block_var 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
program_e1 compstmt 
           stmts opt_terms 
           stmt 
           primary_value LB aref_args RBRACK OP_ASGN command_call 
           primary 
           operation brace_block 
                     LCURLY brace_block_e1 opt_block_var compstmt RCURLY_error 
                                                         stmts opt_terms 
                                                         stmt 
                                                         expr 
                                                         command_call 
                                                         block_command 
                                                         block_call 
                                                         command do_block 
                                                                 (?)

** In state 1094, looking ahead at error, reducing production
** none -> 
** is permitted because of the following sub-derivation:

K_DO_BLOCK do_block_e1 opt_block_var compstmt K_END_error // lookahead token appears because K_END_error can begin with error
                                     stmts opt_terms // lookahead token is inherited because opt_terms can vanish
                                     none // lookahead token is inherited
                                     . 

** In state 1094, looking ahead at error, shifting is permitted
** because of the following sub-derivation:

K_DO_BLOCK do_block_e1 opt_block_var compstmt K_END_error 
                                     stmts opt_terms 
                                     . error stmt 

** Conflict (shift/reduce) in state 1042.
** Token involved: error
** This state is reached from program after reading:

program_e1 operation LCURLY brace_block_e1 opt_block_var operation command_args LBRACE_ARG cmd_brace_block_e1 opt_block_var 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
program_e1 compstmt 
           stmts opt_terms 
           stmt 
           primary_value LB aref_args RBRACK OP_ASGN command_call 
           primary 
           operation brace_block 
                     LCURLY brace_block_e1 opt_block_var compstmt RCURLY_error 
                                                         stmts opt_terms 
                                                         stmt 
                                                         expr 
                                                         command_call 
                                                         command 
                                                         operation command_args cmd_brace_block 
                                                                                (?)

** In state 1042, looking ahead at error, reducing production
** none -> 
** is permitted because of the following sub-derivation:

LBRACE_ARG cmd_brace_block_e1 opt_block_var compstmt RCURLY_error // lookahead token appears because RCURLY_error can begin with error
                                            stmts opt_terms // lookahead token is inherited because opt_terms can vanish
                                            none // lookahead token is inherited
                                            . 

** In state 1042, looking ahead at error, shifting is permitted
** because of the following sub-derivation:

LBRACE_ARG cmd_brace_block_e1 opt_block_var compstmt RCURLY_error 
                                            stmts opt_terms 
                                            . error stmt 

** Conflict (shift/reduce) in state 961.
** Token involved: error
** This state is reached from program after reading:

program_e1 operation LCURLY brace_block_e1 opt_block_var operation K_DO brace_block_e1 opt_block_var 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
program_e1 compstmt 
           stmts opt_terms 
           stmt 
           primary_value LB aref_args RBRACK OP_ASGN command_call 
           primary 
           operation brace_block 
                     LCURLY brace_block_e1 opt_block_var compstmt RCURLY_error 
                                                         stmts opt_terms 
                                                         stmt 
                                                         primary_value LB aref_args RBRACK OP_ASGN command_call 
                                                         primary 
                                                         operation brace_block 
                                                                   (?)

** In state 961, looking ahead at error, reducing production
** none -> 
** is permitted because of the following sub-derivation:

K_DO brace_block_e1 opt_block_var compstmt K_END_error // lookahead token appears because K_END_error can begin with error
                                  stmts opt_terms // lookahead token is inherited because opt_terms can vanish
                                  none // lookahead token is inherited
                                  . 

** In state 961, looking ahead at error, shifting is permitted
** because of the following sub-derivation:

K_DO brace_block_e1 opt_block_var compstmt K_END_error 
                                  stmts opt_terms 
                                  . error stmt 

** Conflict (shift/reduce) in state 943.
** Token involved: error
** This state is reached from program after reading:

program_e1 operation LCURLY brace_block_e1 opt_block_var operation LCURLY brace_block_e1 opt_block_var 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
program_e1 compstmt 
           stmts opt_terms 
           stmt 
           primary_value LB aref_args RBRACK OP_ASGN command_call 
           primary 
           operation brace_block 
                     LCURLY brace_block_e1 opt_block_var compstmt RCURLY_error 
                                                         stmts opt_terms 
                                                         stmt 
                                                         primary_value LB aref_args RBRACK OP_ASGN command_call 
                                                         primary 
                                                         operation brace_block 
                                                                   (?)

** In state 943, looking ahead at error, reducing production
** none -> 
** is permitted because of the following sub-derivation:

LCURLY brace_block_e1 opt_block_var compstmt RCURLY_error // lookahead token appears because RCURLY_error can begin with error
                                    stmts opt_terms // lookahead token is inherited because opt_terms can vanish
                                    none // lookahead token is inherited
                                    . 

** In state 943, looking ahead at error, shifting is permitted
** because of the following sub-derivation:

LCURLY brace_block_e1 opt_block_var compstmt RCURLY_error 
                                    stmts opt_terms 
                                    . error stmt 

** Conflict (shift/reduce) in state 521.
** Token involved: error
** This state is reached from program after reading:

program_e1 operation command_args LBRACE_ARG cmd_brace_block_e1 opt_block_var 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
program_e1 compstmt 
           stmts opt_terms 
           stmt 
           expr 
           command_call 
           command 
           operation command_args cmd_brace_block 
                                  (?)

** In state 521, looking ahead at error, reducing production
** none -> 
** is permitted because of the following sub-derivation:

LBRACE_ARG cmd_brace_block_e1 opt_block_var compstmt RCURLY_error // lookahead token appears because RCURLY_error can begin with error
                                            stmts opt_terms // lookahead token is inherited because opt_terms can vanish
                                            none // lookahead token is inherited
                                            . 

** In state 521, looking ahead at error, shifting is permitted
** because of the following sub-derivation:

LBRACE_ARG cmd_brace_block_e1 opt_block_var compstmt RCURLY_error 
                                            stmts opt_terms 
                                            . error stmt 

** Conflict (shift/reduce) in state 436.
** Token involved: error
** This state is reached from program after reading:

program_e1 command K_DO_BLOCK do_block_e1 opt_block_var 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
program_e1 compstmt 
           stmts opt_terms 
           stmt 
           expr 
           command_call 
           block_command 
           block_call 
           command do_block 
                   (?)

** In state 436, looking ahead at error, reducing production
** none -> 
** is permitted because of the following sub-derivation:

K_DO_BLOCK do_block_e1 opt_block_var compstmt K_END_error // lookahead token appears because K_END_error can begin with error
                                     stmts opt_terms // lookahead token is inherited because opt_terms can vanish
                                     none // lookahead token is inherited
                                     . 

** In state 436, looking ahead at error, shifting is permitted
** because of the following sub-derivation:

K_DO_BLOCK do_block_e1 opt_block_var compstmt K_END_error 
                                     stmts opt_terms 
                                     . error stmt 

** Conflict (shift/reduce) in state 258.
** Token involved: error
** This state is reached from program after reading:

program_e1 operation K_DO brace_block_e1 opt_block_var 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
program_e1 compstmt 
           stmts opt_terms 
           stmt 
           primary_value LB aref_args RBRACK OP_ASGN command_call 
           primary 
           operation brace_block 
                     (?)

** In state 258, looking ahead at error, reducing production
** none -> 
** is permitted because of the following sub-derivation:

K_DO brace_block_e1 opt_block_var compstmt K_END_error // lookahead token appears because K_END_error can begin with error
                                  stmts opt_terms // lookahead token is inherited because opt_terms can vanish
                                  none // lookahead token is inherited
                                  . 

** In state 258, looking ahead at error, shifting is permitted
** because of the following sub-derivation:

K_DO brace_block_e1 opt_block_var compstmt K_END_error 
                                  stmts opt_terms 
                                  . error stmt 
