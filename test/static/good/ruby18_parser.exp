File "ruby18_parser.mly", line 39, characters 16-19:
Warning: the token EOF is unused.
Grammar has 131 nonterminal symbols, among which 1 start symbols.
Grammar has 126 terminal symbols.
Grammar has 484 productions.
nullable(xstring_contents) = true
nullable(xstring) = false
nullable(words) = false
nullable(word_list) = true
nullable(word) = false
nullable(when_args) = false
nullable(variable) = false
nullable(var_ref) = false
nullable(var_lhs) = false
nullable(undef_list_e1) = true
nullable(undef_list) = false
nullable(trailer) = true
nullable(then_) = false
nullable(terms) = false
nullable(term) = false
nullable(symbol) = false
nullable(sym) = false
nullable(superclass_e1) = true
nullable(superclass) = false
nullable(strings) = false
nullable(string_dvar) = false
nullable(string_contents) = true
nullable(string_content_e2) = true
nullable(string_content_e1) = true
nullable(string_content) = false
nullable(string1) = false
nullable(string) = false
nullable(stmts) = true
nullable(stmt_e2) = true
nullable(stmt_e1) = true
nullable(stmt) = false
nullable(singleton_e1) = true
nullable(singleton) = false
nullable(reswords) = false
nullable(restarg_mark) = false
nullable(regexp) = false
nullable(qword_list) = true
nullable(program_e1) = true
nullable(program) = true
nullable(primary_value) = false
nullable(primary_e9) = true
nullable(primary_e8) = true
nullable(primary_e7) = true
nullable(primary_e6) = true
nullable(primary_e5) = true
nullable(primary_e4) = true
nullable(primary_e3) = true
nullable(primary_e2) = true
nullable(primary_e10) = true
nullable(primary_e1) = true
nullable(primary) = false
nullable(paren_args) = false
nullable(opt_terms) = true
nullable(opt_rescue) = true
nullable(opt_paren_args) = true
nullable(opt_nl) = true
nullable(opt_f_block_arg) = true
nullable(opt_ensure) = true
nullable(opt_else) = true
nullable(opt_block_var) = true
nullable(opt_block_arg) = true
nullable(operation3) = false
nullable(operation2) = false
nullable(operation) = false
nullable(open_args_e1) = true
nullable(open_args) = false
nullable(op) = false
nullable(numeric) = false
nullable(none_block_pass) = true
nullable(none) = true
nullable(mrhs) = false
nullable(mlhs_node) = false
nullable(mlhs_item) = false
nullable(mlhs_head) = false
nullable(mlhs_entry) = false
nullable(mlhs_basic) = false
nullable(mlhs) = false
nullable(method_call) = false
nullable(literal) = false
nullable(lhs) = false
nullable(if_tail) = true
nullable(fname) = false
nullable(fitem) = false
nullable(f_rest_arg) = false
nullable(f_optarg) = false
nullable(f_opt) = false
nullable(f_norm_arg) = false
nullable(f_block_arg) = false
nullable(f_args) = true
nullable(f_arglist) = false
nullable(f_arg) = false
nullable(expr_value) = false
nullable(expr) = false
nullable(exc_var) = true
nullable(exc_list) = true
nullable(dsym) = false
nullable(dot_or_colon) = false
nullable(do_block_e1) = true
nullable(do_block) = false
nullable(do_) = false
nullable(cpath) = false
nullable(compstmt) = true
nullable(command_call) = false
nullable(command_args_e1) = true
nullable(command_args) = false
nullable(command) = false
nullable(cname) = false
nullable(cmd_brace_block_e1) = true
nullable(cmd_brace_block) = false
nullable(cases) = true
nullable(case_body) = false
nullable(call_args2) = false
nullable(call_args) = false
nullable(brace_block_e1) = true
nullable(brace_block) = false
nullable(bodystmt) = true
nullable(block_var) = false
nullable(block_command) = false
nullable(block_call) = false
nullable(block_arg) = false
nullable(blkarg_mark) = false
nullable(awords) = false
nullable(assocs) = false
nullable(assoc_list) = true
nullable(assoc) = false
nullable(args) = false
nullable(arg_value) = false
nullable(arg) = false
nullable(aref_args) = true
nullable(RCURLY_error) = false
nullable(K_END_error) = false
first(xstring_contents) = STRING_DVAR STRING_DBEG STRING_CONTENT
first(xstring) = XSTRING_BEG
first(words) = WORDS_BEG
first(word_list) = STRING_DVAR STRING_DBEG STRING_CONTENT
first(word) = STRING_DVAR STRING_DBEG STRING_CONTENT
first(when_args) = XSTRING_BEG WORDS_BEG UPLUS UMINUS_NUM UMINUS TILDE SYMBEG STRING_BEG STAR REGEXP_BEG QWORDS_BEG LPAREN_ARG LPAREN LBRACK LBRACE K__LINE__ K__FILE__ K_YIELD K_WHILE K_UNTIL K_UNLESS K_TRUE K_SUPER K_SELF K_RETURN K_RETRY K_REDO K_NIL K_NEXT K_MODULE K_IF K_FOR K_FALSE K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN IVAR INTEGER IDENTIFIER GVAR FLOAT FID CVAR CONSTANT COLON3 BANG
first(variable) = K__LINE__ K__FILE__ K_TRUE K_SELF K_NIL K_FALSE IVAR IDENTIFIER GVAR CVAR CONSTANT
first(var_ref) = K__LINE__ K__FILE__ K_TRUE K_SELF K_NIL K_FALSE IVAR IDENTIFIER GVAR CVAR CONSTANT
first(var_lhs) = K__LINE__ K__FILE__ K_TRUE K_SELF K_NIL K_FALSE IVAR IDENTIFIER GVAR CVAR CONSTANT
first(undef_list_e1) = 
first(undef_list) = UPLUS UMINUS TILDE SYMBEG STAR2 STAR RSHFT POW PLUS PIPE PERCENT MINUS MATCH LT LSHFT LEQ K_lEND K_lBEGIN K__LINE__ K__FILE__ K_YIELD K_WHILE_MOD K_WHEN K_UNTIL_MOD K_UNLESS_MOD K_UNDEF K_TRUE K_THEN K_SUPER K_SELF K_RETURN K_RETRY K_RESCUE_MOD K_RESCUE K_REDO K_OR K_NOT K_NIL K_NEXT K_MODULE K_IN K_IF_MOD K_FOR K_FALSE K_ENSURE K_END K_ELSIF K_ELSE K_DO K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN K_AND K_ALIAS IDENTIFIER GT GEQ FID EQQ EQ DIVIDE CONSTANT CMP CARET BACK_REF2 ASET AREF AMPER2
first(trailer) = NL COMMENT COMMA
first(then_) = SEMI NL K_THEN COMMENT COLON
first(terms) = SEMI NL COMMENT
first(term) = SEMI NL COMMENT
first(symbol) = SYMBEG
first(sym) = UPLUS UMINUS TILDE STAR2 STAR RSHFT POW PLUS PIPE PERCENT MINUS MATCH LT LSHFT LEQ K_lEND K_lBEGIN K__LINE__ K__FILE__ K_YIELD K_WHILE_MOD K_WHEN K_UNTIL_MOD K_UNLESS_MOD K_UNDEF K_TRUE K_THEN K_SUPER K_SELF K_RETURN K_RETRY K_RESCUE_MOD K_RESCUE K_REDO K_OR K_NOT K_NIL K_NEXT K_MODULE K_IN K_IF_MOD K_FOR K_FALSE K_ENSURE K_END K_ELSIF K_ELSE K_DO K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN K_AND K_ALIAS IVAR IDENTIFIER GVAR GT GEQ FID EQQ EQ DIVIDE CVAR CONSTANT CMP CARET BACK_REF2 ASET AREF AMPER2
first(superclass_e1) = 
first(superclass) = error SEMI NL LT COMMENT
first(strings) = STRING_BEG
first(string_dvar) = IVAR GVAR CVAR
first(string_contents) = STRING_DVAR STRING_DBEG STRING_CONTENT
first(string_content_e2) = 
first(string_content_e1) = 
first(string_content) = STRING_DVAR STRING_DBEG STRING_CONTENT
first(string1) = STRING_BEG
first(string) = STRING_BEG
first(stmts) = error XSTRING_BEG WORDS_BEG UPLUS UMINUS_NUM UMINUS TILDE SYMBEG STRING_BEG STAR SEMI REGEXP_BEG QWORDS_BEG NL LPAREN_ARG LPAREN LBRACK LBRACE K_lEND K_lBEGIN K__LINE__ K__FILE__ K_YIELD K_WHILE K_UNTIL K_UNLESS K_UNDEF K_TRUE K_SUPER K_SELF K_RETURN K_RETRY K_REDO K_NOT K_NIL K_NEXT K_MODULE K_IF K_FOR K_FALSE K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN K_ALIAS IVAR INTEGER IDENTIFIER GVAR FLOAT FID CVAR CONSTANT COMMENT COLON3 BANG
first(stmt_e2) = 
first(stmt_e1) = 
first(stmt) = XSTRING_BEG WORDS_BEG UPLUS UMINUS_NUM UMINUS TILDE SYMBEG STRING_BEG STAR REGEXP_BEG QWORDS_BEG LPAREN_ARG LPAREN LBRACK LBRACE K_lEND K_lBEGIN K__LINE__ K__FILE__ K_YIELD K_WHILE K_UNTIL K_UNLESS K_UNDEF K_TRUE K_SUPER K_SELF K_RETURN K_RETRY K_REDO K_NOT K_NIL K_NEXT K_MODULE K_IF K_FOR K_FALSE K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN K_ALIAS IVAR INTEGER IDENTIFIER GVAR FLOAT FID CVAR CONSTANT COLON3 BANG
first(singleton_e1) = 
first(singleton) = LPAREN2 K__LINE__ K__FILE__ K_TRUE K_SELF K_NIL K_FALSE IVAR IDENTIFIER GVAR CVAR CONSTANT
first(reswords) = K_lEND K_lBEGIN K__LINE__ K__FILE__ K_YIELD K_WHILE_MOD K_WHEN K_UNTIL_MOD K_UNLESS_MOD K_UNDEF K_TRUE K_THEN K_SUPER K_SELF K_RETURN K_RETRY K_RESCUE_MOD K_RESCUE K_REDO K_OR K_NOT K_NIL K_NEXT K_MODULE K_IN K_IF_MOD K_FOR K_FALSE K_ENSURE K_END K_ELSIF K_ELSE K_DO K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN K_AND K_ALIAS
first(restarg_mark) = STAR2 STAR
first(regexp) = REGEXP_BEG
first(qword_list) = STRING_CONTENT
first(program_e1) = 
first(program) = error XSTRING_BEG WORDS_BEG UPLUS UMINUS_NUM UMINUS TILDE SYMBEG STRING_BEG STAR SEMI REGEXP_BEG QWORDS_BEG NL LPAREN_ARG LPAREN LBRACK LBRACE K_lEND K_lBEGIN K__LINE__ K__FILE__ K_YIELD K_WHILE K_UNTIL K_UNLESS K_UNDEF K_TRUE K_SUPER K_SELF K_RETURN K_RETRY K_REDO K_NOT K_NIL K_NEXT K_MODULE K_IF K_FOR K_FALSE K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN K_ALIAS IVAR INTEGER IDENTIFIER GVAR FLOAT FID CVAR CONSTANT COMMENT COLON3 BANG
first(primary_value) = XSTRING_BEG WORDS_BEG UMINUS_NUM SYMBEG STRING_BEG REGEXP_BEG QWORDS_BEG LPAREN_ARG LPAREN LBRACK LBRACE K__LINE__ K__FILE__ K_YIELD K_WHILE K_UNTIL K_UNLESS K_TRUE K_SUPER K_SELF K_RETURN K_RETRY K_REDO K_NIL K_NEXT K_MODULE K_IF K_FOR K_FALSE K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN IVAR INTEGER IDENTIFIER GVAR FLOAT FID CVAR CONSTANT COLON3
first(primary_e9) = 
first(primary_e8) = 
first(primary_e7) = 
first(primary_e6) = 
first(primary_e5) = 
first(primary_e4) = 
first(primary_e3) = 
first(primary_e2) = 
first(primary_e10) = 
first(primary_e1) = 
first(primary) = XSTRING_BEG WORDS_BEG UMINUS_NUM SYMBEG STRING_BEG REGEXP_BEG QWORDS_BEG LPAREN_ARG LPAREN LBRACK LBRACE K__LINE__ K__FILE__ K_YIELD K_WHILE K_UNTIL K_UNLESS K_TRUE K_SUPER K_SELF K_RETURN K_RETRY K_REDO K_NIL K_NEXT K_MODULE K_IF K_FOR K_FALSE K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN IVAR INTEGER IDENTIFIER GVAR FLOAT FID CVAR CONSTANT COLON3
first(paren_args) = LPAREN2
first(opt_terms) = SEMI NL COMMENT
first(opt_rescue) = K_RESCUE
first(opt_paren_args) = LPAREN2
first(opt_nl) = NL COMMENT
first(opt_f_block_arg) = COMMA
first(opt_ensure) = K_ENSURE
first(opt_else) = K_ELSE
first(opt_block_var) = PIPE OROP
first(opt_block_arg) = COMMA
first(operation3) = UPLUS UMINUS TILDE STAR2 STAR RSHFT POW PLUS PIPE PERCENT MINUS MATCH LT LSHFT LEQ IDENTIFIER GT GEQ FID EQQ EQ DIVIDE CMP CARET BACK_REF2 ASET AREF AMPER2
first(operation2) = UPLUS UMINUS TILDE STAR2 STAR RSHFT POW PLUS PIPE PERCENT MINUS MATCH LT LSHFT LEQ IDENTIFIER GT GEQ FID EQQ EQ DIVIDE CONSTANT CMP CARET BACK_REF2 ASET AREF AMPER2
first(operation) = IDENTIFIER FID CONSTANT
first(open_args_e1) = 
first(open_args) = XSTRING_BEG WORDS_BEG UPLUS UMINUS_NUM UMINUS TILDE SYMBEG STRING_BEG STAR REGEXP_BEG QWORDS_BEG LPAREN_ARG LPAREN LBRACK LBRACE K__LINE__ K__FILE__ K_YIELD K_WHILE K_UNTIL K_UNLESS K_TRUE K_SUPER K_SELF K_RETURN K_RETRY K_REDO K_NIL K_NEXT K_MODULE K_IF K_FOR K_FALSE K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN IVAR INTEGER IDENTIFIER GVAR FLOAT FID CVAR CONSTANT COLON3 BANG AMPER
first(op) = UPLUS UMINUS TILDE STAR2 STAR RSHFT POW PLUS PIPE PERCENT MINUS MATCH LT LSHFT LEQ GT GEQ EQQ EQ DIVIDE CMP CARET BACK_REF2 ASET AREF AMPER2
first(numeric) = UMINUS_NUM INTEGER FLOAT
first(none_block_pass) = 
first(none) = 
first(mrhs) = XSTRING_BEG WORDS_BEG UPLUS UMINUS_NUM UMINUS TILDE SYMBEG STRING_BEG STAR REGEXP_BEG QWORDS_BEG LPAREN_ARG LPAREN LBRACK LBRACE K__LINE__ K__FILE__ K_YIELD K_WHILE K_UNTIL K_UNLESS K_TRUE K_SUPER K_SELF K_RETURN K_RETRY K_REDO K_NIL K_NEXT K_MODULE K_IF K_FOR K_FALSE K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN IVAR INTEGER IDENTIFIER GVAR FLOAT FID CVAR CONSTANT COLON3 BANG
first(mlhs_node) = XSTRING_BEG WORDS_BEG UMINUS_NUM SYMBEG STRING_BEG REGEXP_BEG QWORDS_BEG LPAREN_ARG LPAREN LBRACK LBRACE K__LINE__ K__FILE__ K_YIELD K_WHILE K_UNTIL K_UNLESS K_TRUE K_SUPER K_SELF K_RETURN K_RETRY K_REDO K_NIL K_NEXT K_MODULE K_IF K_FOR K_FALSE K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN IVAR INTEGER IDENTIFIER GVAR FLOAT FID CVAR CONSTANT COLON3
first(mlhs_item) = XSTRING_BEG WORDS_BEG UMINUS_NUM SYMBEG STRING_BEG REGEXP_BEG QWORDS_BEG LPAREN_ARG LPAREN LBRACK LBRACE K__LINE__ K__FILE__ K_YIELD K_WHILE K_UNTIL K_UNLESS K_TRUE K_SUPER K_SELF K_RETURN K_RETRY K_REDO K_NIL K_NEXT K_MODULE K_IF K_FOR K_FALSE K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN IVAR INTEGER IDENTIFIER GVAR FLOAT FID CVAR CONSTANT COLON3
first(mlhs_head) = XSTRING_BEG WORDS_BEG UMINUS_NUM SYMBEG STRING_BEG REGEXP_BEG QWORDS_BEG LPAREN_ARG LPAREN LBRACK LBRACE K__LINE__ K__FILE__ K_YIELD K_WHILE K_UNTIL K_UNLESS K_TRUE K_SUPER K_SELF K_RETURN K_RETRY K_REDO K_NIL K_NEXT K_MODULE K_IF K_FOR K_FALSE K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN IVAR INTEGER IDENTIFIER GVAR FLOAT FID CVAR CONSTANT COLON3
first(mlhs_entry) = XSTRING_BEG WORDS_BEG UMINUS_NUM SYMBEG STRING_BEG STAR REGEXP_BEG QWORDS_BEG LPAREN_ARG LPAREN LBRACK LBRACE K__LINE__ K__FILE__ K_YIELD K_WHILE K_UNTIL K_UNLESS K_TRUE K_SUPER K_SELF K_RETURN K_RETRY K_REDO K_NIL K_NEXT K_MODULE K_IF K_FOR K_FALSE K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN IVAR INTEGER IDENTIFIER GVAR FLOAT FID CVAR CONSTANT COLON3
first(mlhs_basic) = XSTRING_BEG WORDS_BEG UMINUS_NUM SYMBEG STRING_BEG STAR REGEXP_BEG QWORDS_BEG LPAREN_ARG LPAREN LBRACK LBRACE K__LINE__ K__FILE__ K_YIELD K_WHILE K_UNTIL K_UNLESS K_TRUE K_SUPER K_SELF K_RETURN K_RETRY K_REDO K_NIL K_NEXT K_MODULE K_IF K_FOR K_FALSE K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN IVAR INTEGER IDENTIFIER GVAR FLOAT FID CVAR CONSTANT COLON3
first(mlhs) = XSTRING_BEG WORDS_BEG UMINUS_NUM SYMBEG STRING_BEG STAR REGEXP_BEG QWORDS_BEG LPAREN_ARG LPAREN LBRACK LBRACE K__LINE__ K__FILE__ K_YIELD K_WHILE K_UNTIL K_UNLESS K_TRUE K_SUPER K_SELF K_RETURN K_RETRY K_REDO K_NIL K_NEXT K_MODULE K_IF K_FOR K_FALSE K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN IVAR INTEGER IDENTIFIER GVAR FLOAT FID CVAR CONSTANT COLON3
first(method_call) = XSTRING_BEG WORDS_BEG UMINUS_NUM SYMBEG STRING_BEG REGEXP_BEG QWORDS_BEG LPAREN_ARG LPAREN LBRACK LBRACE K__LINE__ K__FILE__ K_YIELD K_WHILE K_UNTIL K_UNLESS K_TRUE K_SUPER K_SELF K_RETURN K_RETRY K_REDO K_NIL K_NEXT K_MODULE K_IF K_FOR K_FALSE K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN IVAR INTEGER IDENTIFIER GVAR FLOAT FID CVAR CONSTANT COLON3
first(literal) = UMINUS_NUM SYMBEG INTEGER FLOAT
first(lhs) = XSTRING_BEG WORDS_BEG UMINUS_NUM SYMBEG STRING_BEG REGEXP_BEG QWORDS_BEG LPAREN_ARG LPAREN LBRACK LBRACE K__LINE__ K__FILE__ K_YIELD K_WHILE K_UNTIL K_UNLESS K_TRUE K_SUPER K_SELF K_RETURN K_RETRY K_REDO K_NIL K_NEXT K_MODULE K_IF K_FOR K_FALSE K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN IVAR INTEGER IDENTIFIER GVAR FLOAT FID CVAR CONSTANT COLON3
first(if_tail) = K_ELSIF K_ELSE
first(fname) = UPLUS UMINUS TILDE STAR2 STAR RSHFT POW PLUS PIPE PERCENT MINUS MATCH LT LSHFT LEQ K_lEND K_lBEGIN K__LINE__ K__FILE__ K_YIELD K_WHILE_MOD K_WHEN K_UNTIL_MOD K_UNLESS_MOD K_UNDEF K_TRUE K_THEN K_SUPER K_SELF K_RETURN K_RETRY K_RESCUE_MOD K_RESCUE K_REDO K_OR K_NOT K_NIL K_NEXT K_MODULE K_IN K_IF_MOD K_FOR K_FALSE K_ENSURE K_END K_ELSIF K_ELSE K_DO K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN K_AND K_ALIAS IDENTIFIER GT GEQ FID EQQ EQ DIVIDE CONSTANT CMP CARET BACK_REF2 ASET AREF AMPER2
first(fitem) = UPLUS UMINUS TILDE SYMBEG STAR2 STAR RSHFT POW PLUS PIPE PERCENT MINUS MATCH LT LSHFT LEQ K_lEND K_lBEGIN K__LINE__ K__FILE__ K_YIELD K_WHILE_MOD K_WHEN K_UNTIL_MOD K_UNLESS_MOD K_UNDEF K_TRUE K_THEN K_SUPER K_SELF K_RETURN K_RETRY K_RESCUE_MOD K_RESCUE K_REDO K_OR K_NOT K_NIL K_NEXT K_MODULE K_IN K_IF_MOD K_FOR K_FALSE K_ENSURE K_END K_ELSIF K_ELSE K_DO K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN K_AND K_ALIAS IDENTIFIER GT GEQ FID EQQ EQ DIVIDE CONSTANT CMP CARET BACK_REF2 ASET AREF AMPER2
first(f_rest_arg) = STAR2 STAR
first(f_optarg) = IDENTIFIER
first(f_opt) = IDENTIFIER
first(f_norm_arg) = IVAR IDENTIFIER CVAR CONSTANT
first(f_block_arg) = AMPER2 AMPER
first(f_args) = STAR2 STAR IVAR IDENTIFIER CVAR CONSTANT AMPER2 AMPER
first(f_arglist) = STAR2 STAR SEMI NL LPAREN2 IVAR IDENTIFIER CVAR CONSTANT COMMENT AMPER2 AMPER
first(f_arg) = IVAR IDENTIFIER CVAR CONSTANT
first(expr_value) = XSTRING_BEG WORDS_BEG UPLUS UMINUS_NUM UMINUS TILDE SYMBEG STRING_BEG REGEXP_BEG QWORDS_BEG LPAREN_ARG LPAREN LBRACK LBRACE K__LINE__ K__FILE__ K_YIELD K_WHILE K_UNTIL K_UNLESS K_TRUE K_SUPER K_SELF K_RETURN K_RETRY K_REDO K_NOT K_NIL K_NEXT K_MODULE K_IF K_FOR K_FALSE K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN IVAR INTEGER IDENTIFIER GVAR FLOAT FID CVAR CONSTANT COLON3 BANG
first(expr) = XSTRING_BEG WORDS_BEG UPLUS UMINUS_NUM UMINUS TILDE SYMBEG STRING_BEG REGEXP_BEG QWORDS_BEG LPAREN_ARG LPAREN LBRACK LBRACE K__LINE__ K__FILE__ K_YIELD K_WHILE K_UNTIL K_UNLESS K_TRUE K_SUPER K_SELF K_RETURN K_RETRY K_REDO K_NOT K_NIL K_NEXT K_MODULE K_IF K_FOR K_FALSE K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN IVAR INTEGER IDENTIFIER GVAR FLOAT FID CVAR CONSTANT COLON3 BANG
first(exc_var) = ASSOC
first(exc_list) = XSTRING_BEG WORDS_BEG UPLUS UMINUS_NUM UMINUS TILDE SYMBEG STRING_BEG STAR REGEXP_BEG QWORDS_BEG LPAREN_ARG LPAREN LBRACK LBRACE K__LINE__ K__FILE__ K_YIELD K_WHILE K_UNTIL K_UNLESS K_TRUE K_SUPER K_SELF K_RETURN K_RETRY K_REDO K_NIL K_NEXT K_MODULE K_IF K_FOR K_FALSE K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN IVAR INTEGER IDENTIFIER GVAR FLOAT FID CVAR CONSTANT COLON3 BANG
first(dsym) = SYMBEG
first(dot_or_colon) = DOT COLON2
first(do_block_e1) = 
first(do_block) = K_DO_BLOCK
first(do_) = SEMI NL K_DO_COND COMMENT COLON
first(cpath) = XSTRING_BEG WORDS_BEG UMINUS_NUM SYMBEG STRING_BEG REGEXP_BEG QWORDS_BEG LPAREN_ARG LPAREN LBRACK LBRACE K__LINE__ K__FILE__ K_YIELD K_WHILE K_UNTIL K_UNLESS K_TRUE K_SUPER K_SELF K_RETURN K_RETRY K_REDO K_NIL K_NEXT K_MODULE K_IF K_FOR K_FALSE K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN IVAR INTEGER IDENTIFIER GVAR FLOAT FID CVAR CONSTANT COLON3
first(compstmt) = error XSTRING_BEG WORDS_BEG UPLUS UMINUS_NUM UMINUS TILDE SYMBEG STRING_BEG STAR SEMI REGEXP_BEG QWORDS_BEG NL LPAREN_ARG LPAREN LBRACK LBRACE K_lEND K_lBEGIN K__LINE__ K__FILE__ K_YIELD K_WHILE K_UNTIL K_UNLESS K_UNDEF K_TRUE K_SUPER K_SELF K_RETURN K_RETRY K_REDO K_NOT K_NIL K_NEXT K_MODULE K_IF K_FOR K_FALSE K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN K_ALIAS IVAR INTEGER IDENTIFIER GVAR FLOAT FID CVAR CONSTANT COMMENT COLON3 BANG
first(command_call) = XSTRING_BEG WORDS_BEG UMINUS_NUM SYMBEG STRING_BEG REGEXP_BEG QWORDS_BEG LPAREN_ARG LPAREN LBRACK LBRACE K__LINE__ K__FILE__ K_YIELD K_WHILE K_UNTIL K_UNLESS K_TRUE K_SUPER K_SELF K_RETURN K_RETRY K_REDO K_NIL K_NEXT K_MODULE K_IF K_FOR K_FALSE K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN IVAR INTEGER IDENTIFIER GVAR FLOAT FID CVAR CONSTANT COLON3
first(command_args_e1) = 
first(command_args) = XSTRING_BEG WORDS_BEG UPLUS UMINUS_NUM UMINUS TILDE SYMBEG STRING_BEG STAR REGEXP_BEG QWORDS_BEG LPAREN_ARG LPAREN LBRACK LBRACE K__LINE__ K__FILE__ K_YIELD K_WHILE K_UNTIL K_UNLESS K_TRUE K_SUPER K_SELF K_RETURN K_RETRY K_REDO K_NIL K_NEXT K_MODULE K_IF K_FOR K_FALSE K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN IVAR INTEGER IDENTIFIER GVAR FLOAT FID CVAR CONSTANT COLON3 BANG AMPER
first(command) = XSTRING_BEG WORDS_BEG UMINUS_NUM SYMBEG STRING_BEG REGEXP_BEG QWORDS_BEG LPAREN_ARG LPAREN LBRACK LBRACE K__LINE__ K__FILE__ K_YIELD K_WHILE K_UNTIL K_UNLESS K_TRUE K_SUPER K_SELF K_RETURN K_RETRY K_REDO K_NIL K_NEXT K_MODULE K_IF K_FOR K_FALSE K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN IVAR INTEGER IDENTIFIER GVAR FLOAT FID CVAR CONSTANT COLON3
first(cname) = IDENTIFIER CONSTANT
first(cmd_brace_block_e1) = 
first(cmd_brace_block) = LBRACE_ARG
first(cases) = K_WHEN
first(case_body) = K_WHEN
first(call_args2) = XSTRING_BEG WORDS_BEG UPLUS UMINUS_NUM UMINUS TILDE SYMBEG STRING_BEG STAR REGEXP_BEG QWORDS_BEG LPAREN_ARG LPAREN LBRACK LBRACE K__LINE__ K__FILE__ K_YIELD K_WHILE K_UNTIL K_UNLESS K_TRUE K_SUPER K_SELF K_RETURN K_RETRY K_REDO K_NIL K_NEXT K_MODULE K_IF K_FOR K_FALSE K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN IVAR INTEGER IDENTIFIER GVAR FLOAT FID CVAR CONSTANT COLON3 BANG AMPER
first(call_args) = XSTRING_BEG WORDS_BEG UPLUS UMINUS_NUM UMINUS TILDE SYMBEG STRING_BEG STAR REGEXP_BEG QWORDS_BEG LPAREN_ARG LPAREN LBRACK LBRACE K__LINE__ K__FILE__ K_YIELD K_WHILE K_UNTIL K_UNLESS K_TRUE K_SUPER K_SELF K_RETURN K_RETRY K_REDO K_NIL K_NEXT K_MODULE K_IF K_FOR K_FALSE K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN IVAR INTEGER IDENTIFIER GVAR FLOAT FID CVAR CONSTANT COLON3 BANG AMPER
first(brace_block_e1) = 
first(brace_block) = LCURLY K_DO
first(bodystmt) = error XSTRING_BEG WORDS_BEG UPLUS UMINUS_NUM UMINUS TILDE SYMBEG STRING_BEG STAR SEMI REGEXP_BEG QWORDS_BEG NL LPAREN_ARG LPAREN LBRACK LBRACE K_lEND K_lBEGIN K__LINE__ K__FILE__ K_YIELD K_WHILE K_UNTIL K_UNLESS K_UNDEF K_TRUE K_SUPER K_SELF K_RETURN K_RETRY K_RESCUE K_REDO K_NOT K_NIL K_NEXT K_MODULE K_IF K_FOR K_FALSE K_ENSURE K_ELSE K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN K_ALIAS IVAR INTEGER IDENTIFIER GVAR FLOAT FID CVAR CONSTANT COMMENT COLON3 BANG
first(block_var) = XSTRING_BEG WORDS_BEG UMINUS_NUM SYMBEG STRING_BEG STAR REGEXP_BEG QWORDS_BEG LPAREN_ARG LPAREN LBRACK LBRACE K__LINE__ K__FILE__ K_YIELD K_WHILE K_UNTIL K_UNLESS K_TRUE K_SUPER K_SELF K_RETURN K_RETRY K_REDO K_NIL K_NEXT K_MODULE K_IF K_FOR K_FALSE K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN IVAR INTEGER IDENTIFIER GVAR FLOAT FID CVAR CONSTANT COLON3
first(block_command) = XSTRING_BEG WORDS_BEG UMINUS_NUM SYMBEG STRING_BEG REGEXP_BEG QWORDS_BEG LPAREN_ARG LPAREN LBRACK LBRACE K__LINE__ K__FILE__ K_YIELD K_WHILE K_UNTIL K_UNLESS K_TRUE K_SUPER K_SELF K_RETURN K_RETRY K_REDO K_NIL K_NEXT K_MODULE K_IF K_FOR K_FALSE K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN IVAR INTEGER IDENTIFIER GVAR FLOAT FID CVAR CONSTANT COLON3
first(block_call) = XSTRING_BEG WORDS_BEG UMINUS_NUM SYMBEG STRING_BEG REGEXP_BEG QWORDS_BEG LPAREN_ARG LPAREN LBRACK LBRACE K__LINE__ K__FILE__ K_YIELD K_WHILE K_UNTIL K_UNLESS K_TRUE K_SUPER K_SELF K_RETURN K_RETRY K_REDO K_NIL K_NEXT K_MODULE K_IF K_FOR K_FALSE K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN IVAR INTEGER IDENTIFIER GVAR FLOAT FID CVAR CONSTANT COLON3
first(block_arg) = AMPER
first(blkarg_mark) = AMPER2 AMPER
first(awords) = QWORDS_BEG
first(assocs) = XSTRING_BEG WORDS_BEG UPLUS UMINUS_NUM UMINUS TILDE SYMBEG STRING_BEG REGEXP_BEG QWORDS_BEG LPAREN_ARG LPAREN LBRACK LBRACE K__LINE__ K__FILE__ K_YIELD K_WHILE K_UNTIL K_UNLESS K_TRUE K_SUPER K_SELF K_RETURN K_RETRY K_REDO K_NIL K_NEXT K_MODULE K_IF K_FOR K_FALSE K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN IVAR INTEGER IDENTIFIER GVAR FLOAT FID CVAR CONSTANT COLON3 BANG
first(assoc_list) = XSTRING_BEG WORDS_BEG UPLUS UMINUS_NUM UMINUS TILDE SYMBEG STRING_BEG REGEXP_BEG QWORDS_BEG LPAREN_ARG LPAREN LBRACK LBRACE K__LINE__ K__FILE__ K_YIELD K_WHILE K_UNTIL K_UNLESS K_TRUE K_SUPER K_SELF K_RETURN K_RETRY K_REDO K_NIL K_NEXT K_MODULE K_IF K_FOR K_FALSE K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN IVAR INTEGER IDENTIFIER GVAR FLOAT FID CVAR CONSTANT COLON3 BANG
first(assoc) = XSTRING_BEG WORDS_BEG UPLUS UMINUS_NUM UMINUS TILDE SYMBEG STRING_BEG REGEXP_BEG QWORDS_BEG LPAREN_ARG LPAREN LBRACK LBRACE K__LINE__ K__FILE__ K_YIELD K_WHILE K_UNTIL K_UNLESS K_TRUE K_SUPER K_SELF K_RETURN K_RETRY K_REDO K_NIL K_NEXT K_MODULE K_IF K_FOR K_FALSE K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN IVAR INTEGER IDENTIFIER GVAR FLOAT FID CVAR CONSTANT COLON3 BANG
first(args) = XSTRING_BEG WORDS_BEG UPLUS UMINUS_NUM UMINUS TILDE SYMBEG STRING_BEG REGEXP_BEG QWORDS_BEG LPAREN_ARG LPAREN LBRACK LBRACE K__LINE__ K__FILE__ K_YIELD K_WHILE K_UNTIL K_UNLESS K_TRUE K_SUPER K_SELF K_RETURN K_RETRY K_REDO K_NIL K_NEXT K_MODULE K_IF K_FOR K_FALSE K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN IVAR INTEGER IDENTIFIER GVAR FLOAT FID CVAR CONSTANT COLON3 BANG
first(arg_value) = XSTRING_BEG WORDS_BEG UPLUS UMINUS_NUM UMINUS TILDE SYMBEG STRING_BEG REGEXP_BEG QWORDS_BEG LPAREN_ARG LPAREN LBRACK LBRACE K__LINE__ K__FILE__ K_YIELD K_WHILE K_UNTIL K_UNLESS K_TRUE K_SUPER K_SELF K_RETURN K_RETRY K_REDO K_NIL K_NEXT K_MODULE K_IF K_FOR K_FALSE K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN IVAR INTEGER IDENTIFIER GVAR FLOAT FID CVAR CONSTANT COLON3 BANG
first(arg) = XSTRING_BEG WORDS_BEG UPLUS UMINUS_NUM UMINUS TILDE SYMBEG STRING_BEG REGEXP_BEG QWORDS_BEG LPAREN_ARG LPAREN LBRACK LBRACE K__LINE__ K__FILE__ K_YIELD K_WHILE K_UNTIL K_UNLESS K_TRUE K_SUPER K_SELF K_RETURN K_RETRY K_REDO K_NIL K_NEXT K_MODULE K_IF K_FOR K_FALSE K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN IVAR INTEGER IDENTIFIER GVAR FLOAT FID CVAR CONSTANT COLON3 BANG
first(aref_args) = XSTRING_BEG WORDS_BEG UPLUS UMINUS_NUM UMINUS TILDE SYMBEG STRING_BEG STAR REGEXP_BEG QWORDS_BEG LPAREN_ARG LPAREN LBRACK LBRACE K__LINE__ K__FILE__ K_YIELD K_WHILE K_UNTIL K_UNLESS K_TRUE K_SUPER K_SELF K_RETURN K_RETRY K_REDO K_NIL K_NEXT K_MODULE K_IF K_FOR K_FALSE K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN IVAR INTEGER IDENTIFIER GVAR FLOAT FID CVAR CONSTANT COLON3 BANG
first(RCURLY_error) = error RCURLY
first(K_END_error) = error K_END
minimal(xstring_contents) = (* 0 *)
minimal(xstring) = (* 2 *) XSTRING_BEG STRING_END
minimal(words) = (* 2 *) WORDS_BEG STRING_END
minimal(word_list) = (* 0 *)
minimal(word) = (* 1 *) STRING_CONTENT
minimal(when_args) = (* 1 *) INTEGER
minimal(variable) = (* 1 *) IDENTIFIER
minimal(var_ref) = (* 1 *) IDENTIFIER
minimal(var_lhs) = (* 1 *) IDENTIFIER
minimal(undef_list_e1) = (* 0 *)
minimal(undef_list) = (* 1 *) IDENTIFIER
minimal(trailer) = (* 0 *)
minimal(then_) = (* 1 *) SEMI
minimal(terms) = (* 1 *) SEMI
minimal(term) = (* 1 *) SEMI
minimal(symbol) = (* 2 *) SYMBEG IDENTIFIER
minimal(sym) = (* 1 *) IDENTIFIER
minimal(superclass_e1) = (* 0 *)
minimal(superclass) = (* 1 *) SEMI
minimal(strings) = (* 2 *) STRING_BEG STRING_END
minimal(string_dvar) = (* 1 *) GVAR
minimal(string_contents) = (* 0 *)
minimal(string_content_e2) = (* 0 *)
minimal(string_content_e1) = (* 0 *)
minimal(string_content) = (* 1 *) STRING_CONTENT
minimal(string1) = (* 2 *) STRING_BEG STRING_END
minimal(string) = (* 2 *) STRING_BEG STRING_END
minimal(stmts) = (* 0 *)
minimal(stmt_e2) = (* 0 *)
minimal(stmt_e1) = (* 0 *)
minimal(stmt) = (* 1 *) INTEGER
minimal(singleton_e1) = (* 0 *)
minimal(singleton) = (* 1 *) IDENTIFIER
minimal(reswords) = (* 1 *) K__LINE__
minimal(restarg_mark) = (* 1 *) STAR2
minimal(regexp) = (* 2 *) REGEXP_BEG REGEXP_END
minimal(qword_list) = (* 0 *)
minimal(program_e1) = (* 0 *)
minimal(program) = (* 0 *)
minimal(primary_value) = (* 1 *) INTEGER
minimal(primary_e9) = (* 0 *)
minimal(primary_e8) = (* 0 *)
minimal(primary_e7) = (* 0 *)
minimal(primary_e6) = (* 0 *)
minimal(primary_e5) = (* 0 *)
minimal(primary_e4) = (* 0 *)
minimal(primary_e3) = (* 0 *)
minimal(primary_e2) = (* 0 *)
minimal(primary_e10) = (* 0 *)
minimal(primary_e1) = (* 0 *)
minimal(primary) = (* 1 *) INTEGER
minimal(paren_args) = (* 2 *) LPAREN2 RPAREN
minimal(opt_terms) = (* 0 *)
minimal(opt_rescue) = (* 0 *)
minimal(opt_paren_args) = (* 0 *)
minimal(opt_nl) = (* 0 *)
minimal(opt_f_block_arg) = (* 0 *)
minimal(opt_ensure) = (* 0 *)
minimal(opt_else) = (* 0 *)
minimal(opt_block_var) = (* 0 *)
minimal(opt_block_arg) = (* 0 *)
minimal(operation3) = (* 1 *) IDENTIFIER
minimal(operation2) = (* 1 *) IDENTIFIER
minimal(operation) = (* 1 *) IDENTIFIER
minimal(open_args_e1) = (* 0 *)
minimal(open_args) = (* 1 *) INTEGER
minimal(op) = (* 1 *) PIPE
minimal(numeric) = (* 1 *) INTEGER
minimal(none_block_pass) = (* 0 *)
minimal(none) = (* 0 *)
minimal(mrhs) = (* 2 *) STAR INTEGER
minimal(mlhs_node) = (* 1 *) IDENTIFIER
minimal(mlhs_item) = (* 1 *) IDENTIFIER
minimal(mlhs_head) = (* 2 *) IDENTIFIER COMMA
minimal(mlhs_entry) = (* 1 *) STAR
minimal(mlhs_basic) = (* 1 *) STAR
minimal(mlhs) = (* 1 *) STAR
minimal(method_call) = (* 1 *) K_SUPER
minimal(literal) = (* 1 *) INTEGER
minimal(lhs) = (* 1 *) IDENTIFIER
minimal(if_tail) = (* 0 *)
minimal(fname) = (* 1 *) IDENTIFIER
minimal(fitem) = (* 1 *) IDENTIFIER
minimal(f_rest_arg) = (* 1 *) STAR2
minimal(f_optarg) = (* 3 *) IDENTIFIER EQL INTEGER
minimal(f_opt) = (* 3 *) IDENTIFIER EQL INTEGER
minimal(f_norm_arg) = (* 1 *) CONSTANT
minimal(f_block_arg) = (* 2 *) AMPER2 IDENTIFIER
minimal(f_args) = (* 0 *)
minimal(f_arglist) = (* 1 *) SEMI
minimal(f_arg) = (* 1 *) CONSTANT
minimal(expr_value) = (* 1 *) INTEGER
minimal(expr) = (* 1 *) INTEGER
minimal(exc_var) = (* 0 *)
minimal(exc_list) = (* 0 *)
minimal(dsym) = (* 2 *) SYMBEG STRING_END
minimal(dot_or_colon) = (* 1 *) DOT
minimal(do_block_e1) = (* 0 *)
minimal(do_block) = (* 2 *) K_DO_BLOCK K_END
minimal(do_) = (* 1 *) SEMI
minimal(cpath) = (* 1 *) IDENTIFIER
minimal(compstmt) = (* 0 *)
minimal(command_call) = (* 2 *) K_RETURN INTEGER
minimal(command_args_e1) = (* 0 *)
minimal(command_args) = (* 1 *) INTEGER
minimal(command) = (* 2 *) IDENTIFIER INTEGER
minimal(cname) = (* 1 *) IDENTIFIER
minimal(cmd_brace_block_e1) = (* 0 *)
minimal(cmd_brace_block) = (* 2 *) LBRACE_ARG RCURLY
minimal(cases) = (* 0 *)
minimal(case_body) = (* 3 *) K_WHEN INTEGER SEMI
minimal(call_args2) = (* 2 *) STAR INTEGER
minimal(call_args) = (* 1 *) INTEGER
minimal(brace_block_e1) = (* 0 *)
minimal(brace_block) = (* 2 *) LCURLY RCURLY
minimal(bodystmt) = (* 0 *)
minimal(block_var) = (* 1 *) STAR
minimal(block_command) = (* 4 *) IDENTIFIER INTEGER K_DO_BLOCK K_END
minimal(block_call) = (* 4 *) IDENTIFIER INTEGER K_DO_BLOCK K_END
minimal(block_arg) = (* 2 *) AMPER INTEGER
minimal(blkarg_mark) = (* 1 *) AMPER2
minimal(awords) = (* 2 *) QWORDS_BEG STRING_END
minimal(assocs) = (* 3 *) INTEGER ASSOC INTEGER
minimal(assoc_list) = (* 0 *)
minimal(assoc) = (* 3 *) INTEGER ASSOC INTEGER
minimal(args) = (* 1 *) INTEGER
minimal(arg_value) = (* 1 *) INTEGER
minimal(arg) = (* 1 *) INTEGER
minimal(aref_args) = (* 0 *)
minimal(RCURLY_error) = (* 1 *) RCURLY
minimal(K_END_error) = (* 1 *) K_END
follow(xstring_contents) = STRING_END STRING_DVAR STRING_DBEG STRING_CONTENT REGEXP_END
follow(xstring) = error STAR2 SEMI RSHFT RPAREN RCURLY RBRACK POW PLUS PIPE PERCENT OROP NMATCH NL NEQ MINUS MATCH LT LSHFT LEQ LBRACE_ARG LB K_WHILE_MOD K_WHEN K_UNTIL_MOD K_UNLESS_MOD K_THEN K_RESCUE_MOD K_RESCUE K_OR K_IF_MOD K_ENSURE K_END K_ELSIF K_ELSE K_DO_COND K_DO_BLOCK K_AND GT GEQ EQQ EQ EH DOT3 DOT2 DOT DIVIDE COMMENT COMMA COLON2 COLON CMP CARET ASSOC ANDOP AMPER2 #
follow(words) = error STAR2 SEMI RSHFT RPAREN RCURLY RBRACK POW PLUS PIPE PERCENT OROP NMATCH NL NEQ MINUS MATCH LT LSHFT LEQ LBRACE_ARG LB K_WHILE_MOD K_WHEN K_UNTIL_MOD K_UNLESS_MOD K_THEN K_RESCUE_MOD K_RESCUE K_OR K_IF_MOD K_ENSURE K_END K_ELSIF K_ELSE K_DO_COND K_DO_BLOCK K_AND GT GEQ EQQ EQ EH DOT3 DOT2 DOT DIVIDE COMMENT COMMA COLON2 COLON CMP CARET ASSOC ANDOP AMPER2 #
follow(word_list) = STRING_END STRING_DVAR STRING_DBEG STRING_CONTENT
follow(word) = STRING_DVAR STRING_DBEG STRING_CONTENT SPACE
follow(when_args) = SEMI NL K_THEN COMMENT COLON
follow(variable) = error STAR2 SEMI RSHFT RPAREN RCURLY RBRACK POW PLUS PIPE PERCENT OROP OP_ASGN NMATCH NL NEQ MINUS MATCH LT LSHFT LEQ LBRACE_ARG LB K_WHILE_MOD K_WHEN K_UNTIL_MOD K_UNLESS_MOD K_THEN K_RESCUE_MOD K_RESCUE K_OR K_IN K_IF_MOD K_ENSURE K_END K_ELSIF K_ELSE K_DO_COND K_DO_BLOCK K_AND GT GEQ EQQ EQL EQ EH DOT3 DOT2 DOT DIVIDE COMMENT COMMA COLON2 COLON CMP CARET ASSOC ANDOP AMPER2 #
follow(var_ref) = error STAR2 SEMI RSHFT RPAREN RCURLY RBRACK POW PLUS PIPE PERCENT OROP NMATCH NL NEQ MINUS MATCH LT LSHFT LEQ LBRACE_ARG LB K_WHILE_MOD K_WHEN K_UNTIL_MOD K_UNLESS_MOD K_THEN K_RESCUE_MOD K_RESCUE K_OR K_IF_MOD K_ENSURE K_END K_ELSIF K_ELSE K_DO_COND K_DO_BLOCK K_AND GT GEQ EQQ EQ EH DOT3 DOT2 DOT DIVIDE COMMENT COMMA COLON2 COLON CMP CARET ASSOC ANDOP AMPER2 #
follow(var_lhs) = OP_ASGN
follow(undef_list_e1) = UPLUS UMINUS TILDE SYMBEG STAR2 STAR RSHFT POW PLUS PIPE PERCENT MINUS MATCH LT LSHFT LEQ K_lEND K_lBEGIN K__LINE__ K__FILE__ K_YIELD K_WHILE_MOD K_WHEN K_UNTIL_MOD K_UNLESS_MOD K_UNDEF K_TRUE K_THEN K_SUPER K_SELF K_RETURN K_RETRY K_RESCUE_MOD K_RESCUE K_REDO K_OR K_NOT K_NIL K_NEXT K_MODULE K_IN K_IF_MOD K_FOR K_FALSE K_ENSURE K_END K_ELSIF K_ELSE K_DO K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN K_AND K_ALIAS IDENTIFIER GT GEQ FID EQQ EQ DIVIDE CONSTANT CMP CARET BACK_REF2 ASET AREF AMPER2
follow(undef_list) = error SEMI RPAREN RCURLY NL K_WHILE_MOD K_WHEN K_UNTIL_MOD K_UNLESS_MOD K_RESCUE_MOD K_RESCUE K_IF_MOD K_ENSURE K_END K_ELSIF K_ELSE COMMENT COMMA #
follow(trailer) = RCURLY RBRACK
follow(then_) = error XSTRING_BEG WORDS_BEG UPLUS UMINUS_NUM UMINUS TILDE SYMBEG STRING_BEG STAR SEMI REGEXP_BEG QWORDS_BEG NL LPAREN_ARG LPAREN LBRACK LBRACE K_lEND K_lBEGIN K__LINE__ K__FILE__ K_YIELD K_WHILE K_WHEN K_UNTIL K_UNLESS K_UNDEF K_TRUE K_SUPER K_SELF K_RETURN K_RETRY K_RESCUE K_REDO K_NOT K_NIL K_NEXT K_MODULE K_IF K_FOR K_FALSE K_ENSURE K_END K_ELSIF K_ELSE K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN K_ALIAS IVAR INTEGER IDENTIFIER GVAR FLOAT FID CVAR CONSTANT COMMENT COLON3 BANG
follow(terms) = error XSTRING_BEG WORDS_BEG UPLUS UMINUS_NUM UMINUS TILDE SYMBEG STRING_BEG STAR RPAREN REGEXP_BEG RCURLY QWORDS_BEG LPAREN_ARG LPAREN LBRACK LBRACE K_lEND K_lBEGIN K__LINE__ K__FILE__ K_YIELD K_WHILE K_WHEN K_UNTIL K_UNLESS K_UNDEF K_TRUE K_SUPER K_SELF K_RETURN K_RETRY K_RESCUE K_REDO K_NOT K_NIL K_NEXT K_MODULE K_IF K_FOR K_FALSE K_ENSURE K_END K_ELSIF K_ELSE K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN K_ALIAS IVAR INTEGER IDENTIFIER GVAR FLOAT FID CVAR CONSTANT COLON3 BANG #
follow(term) = error XSTRING_BEG WORDS_BEG UPLUS UMINUS_NUM UMINUS TILDE SYMBEG STRING_BEG STAR SEMI RPAREN REGEXP_BEG RCURLY QWORDS_BEG NL LPAREN_ARG LPAREN LBRACK LBRACE K_lEND K_lBEGIN K__LINE__ K__FILE__ K_YIELD K_WHILE K_WHEN K_UNTIL K_UNLESS K_UNDEF K_TRUE K_THEN K_SUPER K_SELF K_RETURN K_RETRY K_RESCUE K_REDO K_NOT K_NIL K_NEXT K_MODULE K_IF K_FOR K_FALSE K_ENSURE K_END K_ELSIF K_ELSE K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN K_ALIAS IVAR INTEGER IDENTIFIER GVAR FLOAT FID CVAR CONSTANT COMMENT COLON3 BANG #
follow(symbol) = error UPLUS UMINUS TILDE SYMBEG STAR2 STAR SEMI RSHFT RPAREN RCURLY RBRACK POW PLUS PIPE PERCENT OROP NMATCH NL NEQ MINUS MATCH LT LSHFT LEQ LBRACE_ARG LB K_lEND K_lBEGIN K__LINE__ K__FILE__ K_YIELD K_WHILE_MOD K_WHEN K_UNTIL_MOD K_UNLESS_MOD K_UNDEF K_TRUE K_THEN K_SUPER K_SELF K_RETURN K_RETRY K_RESCUE_MOD K_RESCUE K_REDO K_OR K_NOT K_NIL K_NEXT K_MODULE K_IN K_IF_MOD K_FOR K_FALSE K_ENSURE K_END K_ELSIF K_ELSE K_DO_COND K_DO_BLOCK K_DO K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN K_AND K_ALIAS IDENTIFIER GT GEQ FID EQQ EQ EH DOT3 DOT2 DOT DIVIDE CONSTANT COMMENT COMMA COLON2 COLON CMP CARET BACK_REF2 ASSOC ASET AREF ANDOP AMPER2 #
follow(sym) = error UPLUS UMINUS TILDE SYMBEG STAR2 STAR SEMI RSHFT RPAREN RCURLY RBRACK POW PLUS PIPE PERCENT OROP NMATCH NL NEQ MINUS MATCH LT LSHFT LEQ LBRACE_ARG LB K_lEND K_lBEGIN K__LINE__ K__FILE__ K_YIELD K_WHILE_MOD K_WHEN K_UNTIL_MOD K_UNLESS_MOD K_UNDEF K_TRUE K_THEN K_SUPER K_SELF K_RETURN K_RETRY K_RESCUE_MOD K_RESCUE K_REDO K_OR K_NOT K_NIL K_NEXT K_MODULE K_IN K_IF_MOD K_FOR K_FALSE K_ENSURE K_END K_ELSIF K_ELSE K_DO_COND K_DO_BLOCK K_DO K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN K_AND K_ALIAS IDENTIFIER GT GEQ FID EQQ EQ EH DOT3 DOT2 DOT DIVIDE CONSTANT COMMENT COMMA COLON2 COLON CMP CARET BACK_REF2 ASSOC ASET AREF ANDOP AMPER2 #
follow(superclass_e1) = XSTRING_BEG WORDS_BEG UPLUS UMINUS_NUM UMINUS TILDE SYMBEG STRING_BEG REGEXP_BEG QWORDS_BEG LPAREN_ARG LPAREN LBRACK LBRACE K__LINE__ K__FILE__ K_YIELD K_WHILE K_UNTIL K_UNLESS K_TRUE K_SUPER K_SELF K_RETURN K_RETRY K_REDO K_NOT K_NIL K_NEXT K_MODULE K_IF K_FOR K_FALSE K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN IVAR INTEGER IDENTIFIER GVAR FLOAT FID CVAR CONSTANT COLON3 BANG
follow(superclass) = error XSTRING_BEG WORDS_BEG UPLUS UMINUS_NUM UMINUS TILDE SYMBEG STRING_BEG STAR SEMI REGEXP_BEG QWORDS_BEG NL LPAREN_ARG LPAREN LBRACK LBRACE K_lEND K_lBEGIN K__LINE__ K__FILE__ K_YIELD K_WHILE K_UNTIL K_UNLESS K_UNDEF K_TRUE K_SUPER K_SELF K_RETURN K_RETRY K_RESCUE K_REDO K_NOT K_NIL K_NEXT K_MODULE K_IF K_FOR K_FALSE K_ENSURE K_END K_ELSE K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN K_ALIAS IVAR INTEGER IDENTIFIER GVAR FLOAT FID CVAR CONSTANT COMMENT COLON3 BANG
follow(strings) = error STAR2 SEMI RSHFT RPAREN RCURLY RBRACK POW PLUS PIPE PERCENT OROP NMATCH NL NEQ MINUS MATCH LT LSHFT LEQ LBRACE_ARG LB K_WHILE_MOD K_WHEN K_UNTIL_MOD K_UNLESS_MOD K_THEN K_RESCUE_MOD K_RESCUE K_OR K_IF_MOD K_ENSURE K_END K_ELSIF K_ELSE K_DO_COND K_DO_BLOCK K_AND GT GEQ EQQ EQ EH DOT3 DOT2 DOT DIVIDE COMMENT COMMA COLON2 COLON CMP CARET ASSOC ANDOP AMPER2 #
follow(string_dvar) = STRING_END STRING_DVAR STRING_DBEG STRING_CONTENT SPACE REGEXP_END
follow(string_contents) = STRING_END STRING_DVAR STRING_DBEG STRING_CONTENT
follow(string_content_e2) = error XSTRING_BEG WORDS_BEG UPLUS UMINUS_NUM UMINUS TILDE SYMBEG STRING_BEG STAR SEMI REGEXP_BEG RCURLY QWORDS_BEG NL LPAREN_ARG LPAREN LBRACK LBRACE K_lEND K_lBEGIN K__LINE__ K__FILE__ K_YIELD K_WHILE K_UNTIL K_UNLESS K_UNDEF K_TRUE K_SUPER K_SELF K_RETURN K_RETRY K_REDO K_NOT K_NIL K_NEXT K_MODULE K_IF K_FOR K_FALSE K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN K_ALIAS IVAR INTEGER IDENTIFIER GVAR FLOAT FID CVAR CONSTANT COMMENT COLON3 BANG
follow(string_content_e1) = IVAR GVAR CVAR
follow(string_content) = STRING_END STRING_DVAR STRING_DBEG STRING_CONTENT SPACE REGEXP_END
follow(string1) = error STRING_BEG STAR2 SEMI RSHFT RPAREN RCURLY RBRACK POW PLUS PIPE PERCENT OROP NMATCH NL NEQ MINUS MATCH LT LSHFT LEQ LBRACE_ARG LB K_WHILE_MOD K_WHEN K_UNTIL_MOD K_UNLESS_MOD K_THEN K_RESCUE_MOD K_RESCUE K_OR K_IF_MOD K_ENSURE K_END K_ELSIF K_ELSE K_DO_COND K_DO_BLOCK K_AND GT GEQ EQQ EQ EH DOT3 DOT2 DOT DIVIDE COMMENT COMMA COLON2 COLON CMP CARET ASSOC ANDOP AMPER2 #
follow(string) = error STRING_BEG STAR2 SEMI RSHFT RPAREN RCURLY RBRACK POW PLUS PIPE PERCENT OROP NMATCH NL NEQ MINUS MATCH LT LSHFT LEQ LBRACE_ARG LB K_WHILE_MOD K_WHEN K_UNTIL_MOD K_UNLESS_MOD K_THEN K_RESCUE_MOD K_RESCUE K_OR K_IF_MOD K_ENSURE K_END K_ELSIF K_ELSE K_DO_COND K_DO_BLOCK K_AND GT GEQ EQQ EQ EH DOT3 DOT2 DOT DIVIDE COMMENT COMMA COLON2 COLON CMP CARET ASSOC ANDOP AMPER2 #
follow(stmts) = error SEMI RPAREN RCURLY NL K_WHEN K_RESCUE K_ENSURE K_END K_ELSIF K_ELSE COMMENT #
follow(stmt_e2) = LCURLY
follow(stmt_e1) = UPLUS UMINUS TILDE SYMBEG STAR2 STAR RSHFT POW PLUS PIPE PERCENT MINUS MATCH LT LSHFT LEQ K_lEND K_lBEGIN K__LINE__ K__FILE__ K_YIELD K_WHILE_MOD K_WHEN K_UNTIL_MOD K_UNLESS_MOD K_UNDEF K_TRUE K_THEN K_SUPER K_SELF K_RETURN K_RETRY K_RESCUE_MOD K_RESCUE K_REDO K_OR K_NOT K_NIL K_NEXT K_MODULE K_IN K_IF_MOD K_FOR K_FALSE K_ENSURE K_END K_ELSIF K_ELSE K_DO K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN K_AND K_ALIAS IDENTIFIER GT GEQ FID EQQ EQ DIVIDE CONSTANT CMP CARET BACK_REF2 ASET AREF AMPER2
follow(stmt) = error SEMI RPAREN RCURLY NL K_WHILE_MOD K_WHEN K_UNTIL_MOD K_UNLESS_MOD K_RESCUE_MOD K_RESCUE K_IF_MOD K_ENSURE K_END K_ELSIF K_ELSE COMMENT #
follow(singleton_e1) = XSTRING_BEG WORDS_BEG UPLUS UMINUS_NUM UMINUS TILDE SYMBEG STRING_BEG REGEXP_BEG QWORDS_BEG LPAREN_ARG LPAREN LBRACK LBRACE K__LINE__ K__FILE__ K_YIELD K_WHILE K_UNTIL K_UNLESS K_TRUE K_SUPER K_SELF K_RETURN K_RETRY K_REDO K_NOT K_NIL K_NEXT K_MODULE K_IF K_FOR K_FALSE K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN IVAR INTEGER IDENTIFIER GVAR FLOAT FID CVAR CONSTANT COLON3 BANG
follow(singleton) = DOT COLON2
follow(reswords) = error UPLUS UMINUS TILDE SYMBEG STAR2 STAR SEMI RSHFT RPAREN RCURLY RBRACK POW PLUS PIPE PERCENT OROP NMATCH NL NEQ MINUS MATCH LT LSHFT LPAREN2 LEQ LBRACE_ARG LB K_lEND K_lBEGIN K__LINE__ K__FILE__ K_YIELD K_WHILE_MOD K_WHEN K_UNTIL_MOD K_UNLESS_MOD K_UNDEF K_TRUE K_THEN K_SUPER K_SELF K_RETURN K_RETRY K_RESCUE_MOD K_RESCUE K_REDO K_OR K_NOT K_NIL K_NEXT K_MODULE K_IN K_IF_MOD K_FOR K_FALSE K_ENSURE K_END K_ELSIF K_ELSE K_DO_COND K_DO_BLOCK K_DO K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN K_AND K_ALIAS IVAR IDENTIFIER GT GEQ FID EQQ EQ EH DOT3 DOT2 DOT DIVIDE CVAR CONSTANT COMMENT COMMA COLON2 COLON CMP CARET BACK_REF2 ASSOC ASET AREF ANDOP AMPER2 AMPER #
follow(restarg_mark) = SEMI RPAREN NL IDENTIFIER COMMENT COMMA
follow(regexp) = error STAR2 SEMI RSHFT RPAREN RCURLY RBRACK POW PLUS PIPE PERCENT OROP NMATCH NL NEQ MINUS MATCH LT LSHFT LEQ LBRACE_ARG LB K_WHILE_MOD K_WHEN K_UNTIL_MOD K_UNLESS_MOD K_THEN K_RESCUE_MOD K_RESCUE K_OR K_IF_MOD K_ENSURE K_END K_ELSIF K_ELSE K_DO_COND K_DO_BLOCK K_AND GT GEQ EQQ EQ EH DOT3 DOT2 DOT DIVIDE COMMENT COMMA COLON2 COLON CMP CARET ASSOC ANDOP AMPER2 #
follow(qword_list) = STRING_END STRING_CONTENT
follow(program_e1) = error XSTRING_BEG WORDS_BEG UPLUS UMINUS_NUM UMINUS TILDE SYMBEG STRING_BEG STAR SEMI REGEXP_BEG QWORDS_BEG NL LPAREN_ARG LPAREN LBRACK LBRACE K_lEND K_lBEGIN K__LINE__ K__FILE__ K_YIELD K_WHILE K_UNTIL K_UNLESS K_UNDEF K_TRUE K_SUPER K_SELF K_RETURN K_RETRY K_REDO K_NOT K_NIL K_NEXT K_MODULE K_IF K_FOR K_FALSE K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN K_ALIAS IVAR INTEGER IDENTIFIER GVAR FLOAT FID CVAR CONSTANT COMMENT COLON3 BANG #
follow(program) = #
follow(primary_value) = LB DOT COLON2
follow(primary_e9) = UPLUS UMINUS TILDE STAR2 STAR RSHFT POW PLUS PIPE PERCENT MINUS MATCH LT LSHFT LEQ K_lEND K_lBEGIN K__LINE__ K__FILE__ K_YIELD K_WHILE_MOD K_WHEN K_UNTIL_MOD K_UNLESS_MOD K_UNDEF K_TRUE K_THEN K_SUPER K_SELF K_RETURN K_RETRY K_RESCUE_MOD K_RESCUE K_REDO K_OR K_NOT K_NIL K_NEXT K_MODULE K_IN K_IF_MOD K_FOR K_FALSE K_ENSURE K_END K_ELSIF K_ELSE K_DO K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN K_AND K_ALIAS IDENTIFIER GT GEQ FID EQQ EQ DIVIDE CONSTANT CMP CARET BACK_REF2 ASET AREF AMPER2
follow(primary_e8) = STAR2 STAR SEMI NL LPAREN2 IVAR IDENTIFIER CVAR CONSTANT COMMENT AMPER2 AMPER
follow(primary_e7) = error XSTRING_BEG WORDS_BEG UPLUS UMINUS_NUM UMINUS TILDE SYMBEG STRING_BEG STAR SEMI REGEXP_BEG QWORDS_BEG NL LPAREN_ARG LPAREN LBRACK LBRACE K_lEND K_lBEGIN K__LINE__ K__FILE__ K_YIELD K_WHILE K_UNTIL K_UNLESS K_UNDEF K_TRUE K_SUPER K_SELF K_RETURN K_RETRY K_RESCUE K_REDO K_NOT K_NIL K_NEXT K_MODULE K_IF K_FOR K_FALSE K_ENSURE K_END K_ELSE K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN K_ALIAS IVAR INTEGER IDENTIFIER GVAR FLOAT FID CVAR CONSTANT COMMENT COLON3 BANG
follow(primary_e6) = error XSTRING_BEG WORDS_BEG UPLUS UMINUS_NUM UMINUS TILDE SYMBEG STRING_BEG STAR SEMI REGEXP_BEG QWORDS_BEG NL LPAREN_ARG LPAREN LBRACK LBRACE K_lEND K_lBEGIN K__LINE__ K__FILE__ K_YIELD K_WHILE K_UNTIL K_UNLESS K_UNDEF K_TRUE K_SUPER K_SELF K_RETURN K_RETRY K_RESCUE K_REDO K_NOT K_NIL K_NEXT K_MODULE K_IF K_FOR K_FALSE K_ENSURE K_END K_ELSE K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN K_ALIAS IVAR INTEGER IDENTIFIER GVAR FLOAT FID CVAR CONSTANT COMMENT COLON3 BANG
follow(primary_e5) = SEMI NL COMMENT
follow(primary_e4) = error XSTRING_BEG WORDS_BEG UPLUS UMINUS_NUM UMINUS TILDE SYMBEG STRING_BEG STAR SEMI REGEXP_BEG QWORDS_BEG NL LPAREN_ARG LPAREN LBRACK LBRACE K_lEND K_lBEGIN K__LINE__ K__FILE__ K_YIELD K_WHILE K_UNTIL K_UNLESS K_UNDEF K_TRUE K_SUPER K_SELF K_RETURN K_RETRY K_RESCUE K_REDO K_NOT K_NIL K_NEXT K_MODULE K_IF K_FOR K_FALSE K_ENSURE K_END K_ELSE K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN K_ALIAS IVAR INTEGER IDENTIFIER GVAR FLOAT FID CVAR CONSTANT COMMENT COLON3 BANG
follow(primary_e3) = error XSTRING_BEG WORDS_BEG UPLUS UMINUS_NUM UMINUS TILDE SYMBEG STRING_BEG STAR SEMI REGEXP_BEG QWORDS_BEG NL LPAREN_ARG LPAREN LBRACK LBRACE K_lEND K_lBEGIN K__LINE__ K__FILE__ K_YIELD K_WHILE K_UNTIL K_UNLESS K_UNDEF K_TRUE K_SUPER K_SELF K_RETURN K_RETRY K_REDO K_NOT K_NIL K_NEXT K_MODULE K_IF K_FOR K_FALSE K_END K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN K_ALIAS IVAR INTEGER IDENTIFIER GVAR FLOAT FID CVAR CONSTANT COMMENT COLON3 BANG
follow(primary_e2) = XSTRING_BEG WORDS_BEG UPLUS UMINUS_NUM UMINUS TILDE SYMBEG STRING_BEG REGEXP_BEG QWORDS_BEG LPAREN_ARG LPAREN LBRACK LBRACE K__LINE__ K__FILE__ K_YIELD K_WHILE K_UNTIL K_UNLESS K_TRUE K_SUPER K_SELF K_RETURN K_RETRY K_REDO K_NOT K_NIL K_NEXT K_MODULE K_IF K_FOR K_FALSE K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN IVAR INTEGER IDENTIFIER GVAR FLOAT FID CVAR CONSTANT COLON3 BANG
follow(primary_e10) = STAR2 STAR SEMI NL LPAREN2 IVAR IDENTIFIER CVAR CONSTANT COMMENT AMPER2 AMPER
follow(primary_e1) = RPAREN NL COMMENT
follow(primary) = error STAR2 SEMI RSHFT RPAREN RCURLY RBRACK POW PLUS PIPE PERCENT OROP NMATCH NL NEQ MINUS MATCH LT LSHFT LEQ LBRACE_ARG LB K_WHILE_MOD K_WHEN K_UNTIL_MOD K_UNLESS_MOD K_THEN K_RESCUE_MOD K_RESCUE K_OR K_IF_MOD K_ENSURE K_END K_ELSIF K_ELSE K_DO_COND K_DO_BLOCK K_AND GT GEQ EQQ EQ EH DOT3 DOT2 DOT DIVIDE COMMENT COMMA COLON2 COLON CMP CARET ASSOC ANDOP AMPER2 #
follow(paren_args) = error STAR2 SEMI RSHFT RPAREN RCURLY RBRACK POW PLUS PIPE PERCENT OROP NMATCH NL NEQ MINUS MATCH LT LSHFT LEQ LCURLY LBRACE_ARG LB K_WHILE_MOD K_WHEN K_UNTIL_MOD K_UNLESS_MOD K_THEN K_RESCUE_MOD K_RESCUE K_OR K_IF_MOD K_ENSURE K_END K_ELSIF K_ELSE K_DO_COND K_DO_BLOCK K_DO K_AND GT GEQ EQQ EQ EH DOT3 DOT2 DOT DIVIDE COMMENT COMMA COLON2 COLON CMP CARET ASSOC ANDOP AMPER2 #
follow(opt_terms) = error RPAREN RCURLY K_WHEN K_RESCUE K_ENSURE K_END K_ELSIF K_ELSE #
follow(opt_rescue) = K_ENSURE K_END K_ELSE
follow(opt_paren_args) = error STAR2 SEMI RSHFT RPAREN RCURLY RBRACK POW PLUS PIPE PERCENT OROP NMATCH NL NEQ MINUS MATCH LT LSHFT LEQ LCURLY LBRACE_ARG LB K_WHILE_MOD K_WHEN K_UNTIL_MOD K_UNLESS_MOD K_THEN K_RESCUE_MOD K_RESCUE K_OR K_IF_MOD K_ENSURE K_END K_ELSIF K_ELSE K_DO_COND K_DO_BLOCK K_DO K_AND GT GEQ EQQ EQ EH DOT3 DOT2 DOT DIVIDE COMMENT COMMA COLON2 COLON CMP CARET ASSOC ANDOP AMPER2 #
follow(opt_nl) = XSTRING_BEG WORDS_BEG UPLUS UMINUS_NUM UMINUS TILDE SYMBEG STRING_BEG RPAREN REGEXP_BEG RBRACK QWORDS_BEG LPAREN_ARG LPAREN2 LPAREN LBRACK LBRACE K__LINE__ K__FILE__ K_YIELD K_WHILE K_UNTIL K_UNLESS K_TRUE K_SUPER K_SELF K_RETURN K_RETRY K_REDO K_NIL K_NEXT K_MODULE K_IF K_FOR K_FALSE K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN IVAR INTEGER IDENTIFIER GVAR FLOAT FID CVAR CONSTANT COLON3 BANG
follow(opt_f_block_arg) = SEMI RPAREN NL COMMENT
follow(opt_ensure) = K_END
follow(opt_else) = K_ENSURE K_END
follow(opt_block_var) = error XSTRING_BEG WORDS_BEG UPLUS UMINUS_NUM UMINUS TILDE SYMBEG STRING_BEG STAR SEMI REGEXP_BEG RCURLY QWORDS_BEG NL LPAREN_ARG LPAREN LBRACK LBRACE K_lEND K_lBEGIN K__LINE__ K__FILE__ K_YIELD K_WHILE K_UNTIL K_UNLESS K_UNDEF K_TRUE K_SUPER K_SELF K_RETURN K_RETRY K_REDO K_NOT K_NIL K_NEXT K_MODULE K_IF K_FOR K_FALSE K_END K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN K_ALIAS IVAR INTEGER IDENTIFIER GVAR FLOAT FID CVAR CONSTANT COMMENT COLON3 BANG
follow(opt_block_arg) = error SEMI RPAREN RCURLY RBRACK NL LBRACE_ARG K_WHILE_MOD K_WHEN K_UNTIL_MOD K_UNLESS_MOD K_THEN K_RESCUE_MOD K_RESCUE K_OR K_IF_MOD K_ENSURE K_END K_ELSIF K_ELSE K_DO_COND K_DO_BLOCK K_AND COMMENT COLON #
follow(operation3) = error STAR2 SEMI RSHFT RPAREN RCURLY RBRACK POW PLUS PIPE PERCENT OROP NMATCH NL NEQ MINUS MATCH LT LSHFT LEQ LCURLY LBRACE_ARG LB K_WHILE_MOD K_WHEN K_UNTIL_MOD K_UNLESS_MOD K_THEN K_RESCUE_MOD K_RESCUE K_OR K_IF_MOD K_ENSURE K_END K_ELSIF K_ELSE K_DO_COND K_DO_BLOCK K_DO K_AND GT GEQ EQQ EQ EH DOT3 DOT2 DOT DIVIDE COMMENT COMMA COLON2 COLON CMP CARET ASSOC ANDOP AMPER2 #
follow(operation2) = error XSTRING_BEG WORDS_BEG UPLUS UMINUS_NUM UMINUS TILDE SYMBEG STRING_BEG STAR2 STAR SEMI RSHFT RPAREN REGEXP_BEG RCURLY RBRACK QWORDS_BEG POW PLUS PIPE PERCENT OROP NMATCH NL NEQ MINUS MATCH LT LSHFT LPAREN_ARG LPAREN2 LPAREN LEQ LCURLY LBRACK LBRACE_ARG LBRACE LB K__LINE__ K__FILE__ K_YIELD K_WHILE_MOD K_WHILE K_WHEN K_UNTIL_MOD K_UNTIL K_UNLESS_MOD K_UNLESS K_TRUE K_THEN K_SUPER K_SELF K_RETURN K_RETRY K_RESCUE_MOD K_RESCUE K_REDO K_OR K_NIL K_NEXT K_MODULE K_IF_MOD K_IF K_FOR K_FALSE K_ENSURE K_END K_ELSIF K_ELSE K_DO_COND K_DO_BLOCK K_DO K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN K_AND IVAR INTEGER IDENTIFIER GVAR GT GEQ FLOAT FID EQQ EQ EH DOT3 DOT2 DOT DIVIDE CVAR CONSTANT COMMENT COMMA COLON3 COLON2 COLON CMP CARET BANG ASSOC ANDOP AMPER2 AMPER #
follow(operation) = XSTRING_BEG WORDS_BEG UPLUS UMINUS_NUM UMINUS TILDE SYMBEG STRING_BEG STAR REGEXP_BEG QWORDS_BEG LPAREN_ARG LPAREN2 LPAREN LCURLY LBRACK LBRACE K__LINE__ K__FILE__ K_YIELD K_WHILE K_UNTIL K_UNLESS K_TRUE K_SUPER K_SELF K_RETURN K_RETRY K_REDO K_NIL K_NEXT K_MODULE K_IF K_FOR K_FALSE K_DO K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN IVAR INTEGER IDENTIFIER GVAR FLOAT FID CVAR CONSTANT COLON3 BANG AMPER
follow(open_args_e1) = RPAREN
follow(open_args) = error SEMI RPAREN RCURLY RBRACK NL LBRACE_ARG K_WHILE_MOD K_WHEN K_UNTIL_MOD K_UNLESS_MOD K_THEN K_RESCUE_MOD K_RESCUE K_OR K_IF_MOD K_ENSURE K_END K_ELSIF K_ELSE K_DO_COND K_DO_BLOCK K_AND COMMENT COLON #
follow(op) = error XSTRING_BEG WORDS_BEG UPLUS UMINUS_NUM UMINUS TILDE SYMBEG STRING_BEG STAR2 STAR SEMI RSHFT RPAREN REGEXP_BEG RCURLY RBRACK QWORDS_BEG POW PLUS PIPE PERCENT OROP NMATCH NL NEQ MINUS MATCH LT LSHFT LPAREN_ARG LPAREN2 LPAREN LEQ LCURLY LBRACK LBRACE_ARG LBRACE LB K_lEND K_lBEGIN K__LINE__ K__FILE__ K_YIELD K_WHILE_MOD K_WHILE K_WHEN K_UNTIL_MOD K_UNTIL K_UNLESS_MOD K_UNLESS K_UNDEF K_TRUE K_THEN K_SUPER K_SELF K_RETURN K_RETRY K_RESCUE_MOD K_RESCUE K_REDO K_OR K_NOT K_NIL K_NEXT K_MODULE K_IN K_IF_MOD K_IF K_FOR K_FALSE K_ENSURE K_END K_ELSIF K_ELSE K_DO_COND K_DO_BLOCK K_DO K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN K_AND K_ALIAS IVAR INTEGER IDENTIFIER GVAR GT GEQ FLOAT FID EQQ EQ EH DOT3 DOT2 DOT DIVIDE CVAR CONSTANT COMMENT COMMA COLON3 COLON2 COLON CMP CARET BANG BACK_REF2 ASSOC ASET AREF ANDOP AMPER2 AMPER #
follow(numeric) = error STAR2 SEMI RSHFT RPAREN RCURLY RBRACK POW PLUS PIPE PERCENT OROP NMATCH NL NEQ MINUS MATCH LT LSHFT LEQ LBRACE_ARG LB K_WHILE_MOD K_WHEN K_UNTIL_MOD K_UNLESS_MOD K_THEN K_RESCUE_MOD K_RESCUE K_OR K_IF_MOD K_ENSURE K_END K_ELSIF K_ELSE K_DO_COND K_DO_BLOCK K_AND GT GEQ EQQ EQ EH DOT3 DOT2 DOT DIVIDE COMMENT COMMA COLON2 COLON CMP CARET ASSOC ANDOP AMPER2 #
follow(none_block_pass) = error SEMI RPAREN RCURLY RBRACK NL LBRACE_ARG K_WHILE_MOD K_WHEN K_UNTIL_MOD K_UNLESS_MOD K_THEN K_RESCUE_MOD K_RESCUE K_OR K_IF_MOD K_ENSURE K_END K_ELSIF K_ELSE K_DO_COND K_DO_BLOCK K_AND COMMENT COLON #
follow(none) = error XSTRING_BEG WORDS_BEG UPLUS UMINUS_NUM UMINUS TILDE SYMBEG STRING_END STRING_DVAR STRING_DBEG STRING_CONTENT STRING_BEG STAR2 STAR SEMI RSHFT RPAREN REGEXP_END REGEXP_BEG RCURLY RBRACK QWORDS_BEG POW PLUS PIPE PERCENT OROP NMATCH NL NEQ MINUS MATCH LT LSHFT LPAREN_ARG LPAREN LEQ LCURLY LBRACK LBRACE_ARG LBRACE LB K_lEND K_lBEGIN K__LINE__ K__FILE__ K_YIELD K_WHILE_MOD K_WHILE K_WHEN K_UNTIL_MOD K_UNTIL K_UNLESS_MOD K_UNLESS K_UNDEF K_TRUE K_THEN K_SUPER K_SELF K_RETURN K_RETRY K_RESCUE_MOD K_RESCUE K_REDO K_OR K_NOT K_NIL K_NEXT K_MODULE K_IF_MOD K_IF K_FOR K_FALSE K_ENSURE K_END K_ELSIF K_ELSE K_DO_COND K_DO_BLOCK K_DO K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN K_AND K_ALIAS IVAR INTEGER IDENTIFIER GVAR GT GEQ FLOAT FID EQQ EQ EH DOT3 DOT2 DOT DIVIDE CVAR CONSTANT COMMENT COMMA COLON3 COLON2 COLON CMP CARET BANG ASSOC ANDOP AMPER2 #
follow(mrhs) = error SEMI RPAREN RCURLY NL K_WHILE_MOD K_WHEN K_UNTIL_MOD K_UNLESS_MOD K_THEN K_RESCUE_MOD K_RESCUE K_IF_MOD K_ENSURE K_END K_ELSIF K_ELSE COMMENT COLON ASSOC #
follow(mlhs_node) = RPAREN PIPE K_IN EQL COMMA
follow(mlhs_item) = RPAREN PIPE K_IN EQL COMMA
follow(mlhs_head) = XSTRING_BEG WORDS_BEG UMINUS_NUM SYMBEG STRING_BEG STAR RPAREN REGEXP_BEG QWORDS_BEG PIPE LPAREN_ARG LPAREN LBRACK LBRACE K__LINE__ K__FILE__ K_YIELD K_WHILE K_UNTIL K_UNLESS K_TRUE K_SUPER K_SELF K_RETURN K_RETRY K_REDO K_NIL K_NEXT K_MODULE K_IN K_IF K_FOR K_FALSE K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN IVAR INTEGER IDENTIFIER GVAR FLOAT FID EQL CVAR CONSTANT COLON3
follow(mlhs_entry) = RPAREN
follow(mlhs_basic) = RPAREN PIPE K_IN EQL
follow(mlhs) = PIPE K_IN EQL
follow(method_call) = error STAR2 SEMI RSHFT RPAREN RCURLY RBRACK POW PLUS PIPE PERCENT OROP NMATCH NL NEQ MINUS MATCH LT LSHFT LEQ LCURLY LBRACE_ARG LB K_WHILE_MOD K_WHEN K_UNTIL_MOD K_UNLESS_MOD K_THEN K_RESCUE_MOD K_RESCUE K_OR K_IF_MOD K_ENSURE K_END K_ELSIF K_ELSE K_DO_COND K_DO_BLOCK K_DO K_AND GT GEQ EQQ EQ EH DOT3 DOT2 DOT DIVIDE COMMENT COMMA COLON2 COLON CMP CARET ASSOC ANDOP AMPER2 #
follow(literal) = error STAR2 SEMI RSHFT RPAREN RCURLY RBRACK POW PLUS PIPE PERCENT OROP NMATCH NL NEQ MINUS MATCH LT LSHFT LEQ LBRACE_ARG LB K_WHILE_MOD K_WHEN K_UNTIL_MOD K_UNLESS_MOD K_THEN K_RESCUE_MOD K_RESCUE K_OR K_IF_MOD K_ENSURE K_END K_ELSIF K_ELSE K_DO_COND K_DO_BLOCK K_AND GT GEQ EQQ EQ EH DOT3 DOT2 DOT DIVIDE COMMENT COMMA COLON2 COLON CMP CARET ASSOC ANDOP AMPER2 #
follow(lhs) = SEMI PIPE NL K_THEN K_IN EQL COMMENT COLON
follow(if_tail) = K_END
follow(fname) = error UPLUS UMINUS TILDE SYMBEG STAR2 STAR SEMI RSHFT RPAREN RCURLY RBRACK POW PLUS PIPE PERCENT OROP NMATCH NL NEQ MINUS MATCH LT LSHFT LPAREN2 LEQ LBRACE_ARG LB K_lEND K_lBEGIN K__LINE__ K__FILE__ K_YIELD K_WHILE_MOD K_WHEN K_UNTIL_MOD K_UNLESS_MOD K_UNDEF K_TRUE K_THEN K_SUPER K_SELF K_RETURN K_RETRY K_RESCUE_MOD K_RESCUE K_REDO K_OR K_NOT K_NIL K_NEXT K_MODULE K_IN K_IF_MOD K_FOR K_FALSE K_ENSURE K_END K_ELSIF K_ELSE K_DO_COND K_DO_BLOCK K_DO K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN K_AND K_ALIAS IVAR IDENTIFIER GT GEQ FID EQQ EQ EH DOT3 DOT2 DOT DIVIDE CVAR CONSTANT COMMENT COMMA COLON2 COLON CMP CARET BACK_REF2 ASSOC ASET AREF ANDOP AMPER2 AMPER #
follow(fitem) = error UPLUS UMINUS TILDE SYMBEG STAR2 STAR SEMI RSHFT RPAREN RCURLY POW PLUS PIPE PERCENT NL MINUS MATCH LT LSHFT LEQ K_lEND K_lBEGIN K__LINE__ K__FILE__ K_YIELD K_WHILE_MOD K_WHEN K_UNTIL_MOD K_UNLESS_MOD K_UNDEF K_TRUE K_THEN K_SUPER K_SELF K_RETURN K_RETRY K_RESCUE_MOD K_RESCUE K_REDO K_OR K_NOT K_NIL K_NEXT K_MODULE K_IN K_IF_MOD K_FOR K_FALSE K_ENSURE K_END K_ELSIF K_ELSE K_DO K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN K_AND K_ALIAS IDENTIFIER GT GEQ FID EQQ EQ DIVIDE CONSTANT COMMENT COMMA CMP CARET BACK_REF2 ASET AREF AMPER2 #
follow(f_rest_arg) = SEMI RPAREN NL COMMENT COMMA
follow(f_optarg) = SEMI RPAREN NL COMMENT COMMA
follow(f_opt) = SEMI RPAREN NL COMMENT COMMA
follow(f_norm_arg) = SEMI RPAREN NL COMMENT COMMA
follow(f_block_arg) = SEMI RPAREN NL COMMENT
follow(f_args) = SEMI RPAREN NL COMMENT
follow(f_arglist) = error XSTRING_BEG WORDS_BEG UPLUS UMINUS_NUM UMINUS TILDE SYMBEG STRING_BEG STAR SEMI REGEXP_BEG QWORDS_BEG NL LPAREN_ARG LPAREN LBRACK LBRACE K_lEND K_lBEGIN K__LINE__ K__FILE__ K_YIELD K_WHILE K_UNTIL K_UNLESS K_UNDEF K_TRUE K_SUPER K_SELF K_RETURN K_RETRY K_RESCUE K_REDO K_NOT K_NIL K_NEXT K_MODULE K_IF K_FOR K_FALSE K_ENSURE K_END K_ELSE K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN K_ALIAS IVAR INTEGER IDENTIFIER GVAR FLOAT FID CVAR CONSTANT COMMENT COLON3 BANG
follow(f_arg) = SEMI RPAREN NL COMMENT COMMA
follow(expr_value) = error SEMI RPAREN RCURLY NL K_WHILE_MOD K_WHEN K_UNTIL_MOD K_UNLESS_MOD K_THEN K_RESCUE_MOD K_RESCUE K_IF_MOD K_ENSURE K_END K_ELSIF K_ELSE K_DO_COND COMMENT COLON #
follow(expr) = error SEMI RPAREN RCURLY NL K_WHILE_MOD K_WHEN K_UNTIL_MOD K_UNLESS_MOD K_THEN K_RESCUE_MOD K_RESCUE K_OR K_IF_MOD K_ENSURE K_END K_ELSIF K_ELSE K_DO_COND K_AND COMMENT COLON #
follow(exc_var) = SEMI NL K_THEN COMMENT COLON
follow(exc_list) = SEMI NL K_THEN COMMENT COLON ASSOC
follow(dsym) = error STAR2 SEMI RSHFT RPAREN RCURLY RBRACK POW PLUS PIPE PERCENT OROP NMATCH NL NEQ MINUS MATCH LT LSHFT LEQ LBRACE_ARG LB K_WHILE_MOD K_WHEN K_UNTIL_MOD K_UNLESS_MOD K_THEN K_RESCUE_MOD K_RESCUE K_OR K_IF_MOD K_ENSURE K_END K_ELSIF K_ELSE K_DO_COND K_DO_BLOCK K_AND GT GEQ EQQ EQ EH DOT3 DOT2 DOT DIVIDE COMMENT COMMA COLON2 COLON CMP CARET ASSOC ANDOP AMPER2 #
follow(dot_or_colon) = UPLUS UMINUS TILDE STAR2 STAR RSHFT POW PLUS PIPE PERCENT MINUS MATCH LT LSHFT LEQ K_lEND K_lBEGIN K__LINE__ K__FILE__ K_YIELD K_WHILE_MOD K_WHEN K_UNTIL_MOD K_UNLESS_MOD K_UNDEF K_TRUE K_THEN K_SUPER K_SELF K_RETURN K_RETRY K_RESCUE_MOD K_RESCUE K_REDO K_OR K_NOT K_NIL K_NEXT K_MODULE K_IN K_IF_MOD K_FOR K_FALSE K_ENSURE K_END K_ELSIF K_ELSE K_DO K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN K_AND K_ALIAS IDENTIFIER GT GEQ FID EQQ EQ DIVIDE CONSTANT CMP CARET BACK_REF2 ASET AREF AMPER2
follow(do_block_e1) = error XSTRING_BEG WORDS_BEG UPLUS UMINUS_NUM UMINUS TILDE SYMBEG STRING_BEG STAR SEMI REGEXP_BEG QWORDS_BEG PIPE OROP NL LPAREN_ARG LPAREN LBRACK LBRACE K_lEND K_lBEGIN K__LINE__ K__FILE__ K_YIELD K_WHILE K_UNTIL K_UNLESS K_UNDEF K_TRUE K_SUPER K_SELF K_RETURN K_RETRY K_REDO K_NOT K_NIL K_NEXT K_MODULE K_IF K_FOR K_FALSE K_END K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN K_ALIAS IVAR INTEGER IDENTIFIER GVAR FLOAT FID CVAR CONSTANT COMMENT COLON3 BANG
follow(do_block) = error SEMI RPAREN RCURLY NL K_WHILE_MOD K_WHEN K_UNTIL_MOD K_UNLESS_MOD K_THEN K_RESCUE_MOD K_RESCUE K_OR K_IF_MOD K_ENSURE K_END K_ELSIF K_ELSE K_DO_COND K_AND DOT COMMENT COLON2 COLON #
follow(do_) = error XSTRING_BEG WORDS_BEG UPLUS UMINUS_NUM UMINUS TILDE SYMBEG STRING_BEG STAR SEMI REGEXP_BEG QWORDS_BEG NL LPAREN_ARG LPAREN LBRACK LBRACE K_lEND K_lBEGIN K__LINE__ K__FILE__ K_YIELD K_WHILE K_UNTIL K_UNLESS K_UNDEF K_TRUE K_SUPER K_SELF K_RETURN K_RETRY K_REDO K_NOT K_NIL K_NEXT K_MODULE K_IF K_FOR K_FALSE K_END K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN K_ALIAS IVAR INTEGER IDENTIFIER GVAR FLOAT FID CVAR CONSTANT COMMENT COLON3 BANG
follow(cpath) = error XSTRING_BEG WORDS_BEG UPLUS UMINUS_NUM UMINUS TILDE SYMBEG STRING_BEG STAR SEMI REGEXP_BEG QWORDS_BEG NL LT LPAREN_ARG LPAREN LBRACK LBRACE K_lEND K_lBEGIN K__LINE__ K__FILE__ K_YIELD K_WHILE K_UNTIL K_UNLESS K_UNDEF K_TRUE K_SUPER K_SELF K_RETURN K_RETRY K_RESCUE K_REDO K_NOT K_NIL K_NEXT K_MODULE K_IF K_FOR K_FALSE K_ENSURE K_END K_ELSE K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN K_ALIAS IVAR INTEGER IDENTIFIER GVAR FLOAT FID CVAR CONSTANT COMMENT COLON3 BANG
follow(compstmt) = error RPAREN RCURLY K_WHEN K_RESCUE K_ENSURE K_END K_ELSIF K_ELSE #
follow(command_call) = error SEMI RPAREN RCURLY NL K_WHILE_MOD K_WHEN K_UNTIL_MOD K_UNLESS_MOD K_THEN K_RESCUE_MOD K_RESCUE K_OR K_IF_MOD K_ENSURE K_END K_ELSIF K_ELSE K_DO_COND K_AND COMMENT COLON #
follow(command_args_e1) = XSTRING_BEG WORDS_BEG UPLUS UMINUS_NUM UMINUS TILDE SYMBEG STRING_BEG STAR REGEXP_BEG QWORDS_BEG LPAREN_ARG LPAREN LBRACK LBRACE K__LINE__ K__FILE__ K_YIELD K_WHILE K_UNTIL K_UNLESS K_TRUE K_SUPER K_SELF K_RETURN K_RETRY K_REDO K_NIL K_NEXT K_MODULE K_IF K_FOR K_FALSE K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN IVAR INTEGER IDENTIFIER GVAR FLOAT FID CVAR CONSTANT COLON3 BANG AMPER
follow(command_args) = error SEMI RPAREN RCURLY RBRACK NL LBRACE_ARG K_WHILE_MOD K_WHEN K_UNTIL_MOD K_UNLESS_MOD K_THEN K_RESCUE_MOD K_RESCUE K_OR K_IF_MOD K_ENSURE K_END K_ELSIF K_ELSE K_DO_COND K_DO_BLOCK K_AND COMMENT COLON #
follow(command) = error SEMI RPAREN RCURLY RBRACK NL LBRACE_ARG K_WHILE_MOD K_WHEN K_UNTIL_MOD K_UNLESS_MOD K_THEN K_RESCUE_MOD K_RESCUE K_OR K_IF_MOD K_ENSURE K_END K_ELSIF K_ELSE K_DO_COND K_DO_BLOCK K_AND COMMENT COLON #
follow(cname) = error XSTRING_BEG WORDS_BEG UPLUS UMINUS_NUM UMINUS TILDE SYMBEG STRING_BEG STAR SEMI REGEXP_BEG QWORDS_BEG NL LT LPAREN_ARG LPAREN LBRACK LBRACE K_lEND K_lBEGIN K__LINE__ K__FILE__ K_YIELD K_WHILE K_UNTIL K_UNLESS K_UNDEF K_TRUE K_SUPER K_SELF K_RETURN K_RETRY K_RESCUE K_REDO K_NOT K_NIL K_NEXT K_MODULE K_IF K_FOR K_FALSE K_ENSURE K_END K_ELSE K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN K_ALIAS IVAR INTEGER IDENTIFIER GVAR FLOAT FID CVAR CONSTANT COMMENT COLON3 BANG
follow(cmd_brace_block_e1) = error XSTRING_BEG WORDS_BEG UPLUS UMINUS_NUM UMINUS TILDE SYMBEG STRING_BEG STAR SEMI REGEXP_BEG RCURLY QWORDS_BEG PIPE OROP NL LPAREN_ARG LPAREN LBRACK LBRACE K_lEND K_lBEGIN K__LINE__ K__FILE__ K_YIELD K_WHILE K_UNTIL K_UNLESS K_UNDEF K_TRUE K_SUPER K_SELF K_RETURN K_RETRY K_REDO K_NOT K_NIL K_NEXT K_MODULE K_IF K_FOR K_FALSE K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN K_ALIAS IVAR INTEGER IDENTIFIER GVAR FLOAT FID CVAR CONSTANT COMMENT COLON3 BANG
follow(cmd_brace_block) = error SEMI RPAREN RCURLY RBRACK NL LBRACE_ARG K_WHILE_MOD K_WHEN K_UNTIL_MOD K_UNLESS_MOD K_THEN K_RESCUE_MOD K_RESCUE K_OR K_IF_MOD K_ENSURE K_END K_ELSIF K_ELSE K_DO_COND K_DO_BLOCK K_AND COMMENT COLON #
follow(cases) = K_END K_ELSE
follow(case_body) = K_END K_ELSE
follow(call_args2) = RPAREN
follow(call_args) = error SEMI RPAREN RCURLY RBRACK NL LBRACE_ARG K_WHILE_MOD K_WHEN K_UNTIL_MOD K_UNLESS_MOD K_THEN K_RESCUE_MOD K_RESCUE K_OR K_IF_MOD K_ENSURE K_END K_ELSIF K_ELSE K_DO_COND K_DO_BLOCK K_AND COMMENT COLON #
follow(brace_block_e1) = error XSTRING_BEG WORDS_BEG UPLUS UMINUS_NUM UMINUS TILDE SYMBEG STRING_BEG STAR SEMI REGEXP_BEG RCURLY QWORDS_BEG PIPE OROP NL LPAREN_ARG LPAREN LBRACK LBRACE K_lEND K_lBEGIN K__LINE__ K__FILE__ K_YIELD K_WHILE K_UNTIL K_UNLESS K_UNDEF K_TRUE K_SUPER K_SELF K_RETURN K_RETRY K_REDO K_NOT K_NIL K_NEXT K_MODULE K_IF K_FOR K_FALSE K_END K_DEFINED K_DEF K_CLASS K_CASE K_BREAK K_BEGIN K_ALIAS IVAR INTEGER IDENTIFIER GVAR FLOAT FID CVAR CONSTANT COMMENT COLON3 BANG
follow(brace_block) = error STAR2 SEMI RSHFT RPAREN RCURLY RBRACK POW PLUS PIPE PERCENT OROP NMATCH NL NEQ MINUS MATCH LT LSHFT LEQ LBRACE_ARG LB K_WHILE_MOD K_WHEN K_UNTIL_MOD K_UNLESS_MOD K_THEN K_RESCUE_MOD K_RESCUE K_OR K_IF_MOD K_ENSURE K_END K_ELSIF K_ELSE K_DO_COND K_DO_BLOCK K_AND GT GEQ EQQ EQ EH DOT3 DOT2 DOT DIVIDE COMMENT COMMA COLON2 COLON CMP CARET ASSOC ANDOP AMPER2 #
follow(bodystmt) = K_END
follow(block_var) = K_IN
follow(block_command) = error SEMI RPAREN RCURLY NL K_WHILE_MOD K_WHEN K_UNTIL_MOD K_UNLESS_MOD K_THEN K_RESCUE_MOD K_RESCUE K_OR K_IF_MOD K_ENSURE K_END K_ELSIF K_ELSE K_DO_COND K_AND COMMENT COLON #
follow(block_call) = error SEMI RPAREN RCURLY NL K_WHILE_MOD K_WHEN K_UNTIL_MOD K_UNLESS_MOD K_THEN K_RESCUE_MOD K_RESCUE K_OR K_IF_MOD K_ENSURE K_END K_ELSIF K_ELSE K_DO_COND K_AND DOT COMMENT COLON2 COLON #
follow(block_arg) = error SEMI RPAREN RCURLY RBRACK NL LBRACE_ARG K_WHILE_MOD K_WHEN K_UNTIL_MOD K_UNLESS_MOD K_THEN K_RESCUE_MOD K_RESCUE K_OR K_IF_MOD K_ENSURE K_END K_ELSIF K_ELSE K_DO_COND K_DO_BLOCK K_AND COMMENT COLON #
follow(blkarg_mark) = IDENTIFIER
follow(awords) = error STAR2 SEMI RSHFT RPAREN RCURLY RBRACK POW PLUS PIPE PERCENT OROP NMATCH NL NEQ MINUS MATCH LT LSHFT LEQ LBRACE_ARG LB K_WHILE_MOD K_WHEN K_UNTIL_MOD K_UNLESS_MOD K_THEN K_RESCUE_MOD K_RESCUE K_OR K_IF_MOD K_ENSURE K_END K_ELSIF K_ELSE K_DO_COND K_DO_BLOCK K_AND GT GEQ EQQ EQ EH DOT3 DOT2 DOT DIVIDE COMMENT COMMA COLON2 COLON CMP CARET ASSOC ANDOP AMPER2 #
follow(assocs) = error SEMI RPAREN RCURLY RBRACK NL LBRACE_ARG K_WHILE_MOD K_WHEN K_UNTIL_MOD K_UNLESS_MOD K_THEN K_RESCUE_MOD K_RESCUE K_OR K_IF_MOD K_ENSURE K_END K_ELSIF K_ELSE K_DO_COND K_DO_BLOCK K_AND COMMENT COMMA COLON #
follow(assoc_list) = RCURLY
follow(assoc) = error SEMI RPAREN RCURLY RBRACK NL LBRACE_ARG K_WHILE_MOD K_WHEN K_UNTIL_MOD K_UNLESS_MOD K_THEN K_RESCUE_MOD K_RESCUE K_OR K_IF_MOD K_ENSURE K_END K_ELSIF K_ELSE K_DO_COND K_DO_BLOCK K_AND COMMENT COMMA COLON #
follow(args) = error SEMI RPAREN RCURLY RBRACK NL LBRACE_ARG K_WHILE_MOD K_WHEN K_UNTIL_MOD K_UNLESS_MOD K_THEN K_RESCUE_MOD K_RESCUE K_OR K_IF_MOD K_ENSURE K_END K_ELSIF K_ELSE K_DO_COND K_DO_BLOCK K_AND COMMENT COMMA COLON #
follow(arg_value) = error SEMI RPAREN RCURLY RBRACK NL LBRACE_ARG K_WHILE_MOD K_WHEN K_UNTIL_MOD K_UNLESS_MOD K_THEN K_RESCUE_MOD K_RESCUE K_OR K_IF_MOD K_ENSURE K_END K_ELSIF K_ELSE K_DO_COND K_DO_BLOCK K_AND COMMENT COMMA COLON ASSOC #
follow(arg) = error STAR2 SEMI RSHFT RPAREN RCURLY RBRACK POW PLUS PIPE PERCENT OROP NMATCH NL NEQ MINUS MATCH LT LSHFT LEQ LBRACE_ARG K_WHILE_MOD K_WHEN K_UNTIL_MOD K_UNLESS_MOD K_THEN K_RESCUE_MOD K_RESCUE K_OR K_IF_MOD K_ENSURE K_END K_ELSIF K_ELSE K_DO_COND K_DO_BLOCK K_AND GT GEQ EQQ EQ EH DOT3 DOT2 DIVIDE COMMENT COMMA COLON CMP CARET ASSOC ANDOP AMPER2 #
follow(aref_args) = RBRACK
follow(RCURLY_error) = error STAR2 SEMI RSHFT RPAREN RCURLY RBRACK POW PLUS PIPE PERCENT OROP NMATCH NL NEQ MINUS MATCH LT LSHFT LEQ LBRACE_ARG LB K_WHILE_MOD K_WHEN K_UNTIL_MOD K_UNLESS_MOD K_THEN K_RESCUE_MOD K_RESCUE K_OR K_IF_MOD K_ENSURE K_END K_ELSIF K_ELSE K_DO_COND K_DO_BLOCK K_AND GT GEQ EQQ EQ EH DOT3 DOT2 DOT DIVIDE COMMENT COMMA COLON2 COLON CMP CARET ASSOC ANDOP AMPER2 #
follow(K_END_error) = error STAR2 SEMI RSHFT RPAREN RCURLY RBRACK POW PLUS PIPE PERCENT OROP NMATCH NL NEQ MINUS MATCH LT LSHFT LEQ LBRACE_ARG LB K_WHILE_MOD K_WHEN K_UNTIL_MOD K_UNLESS_MOD K_THEN K_RESCUE_MOD K_RESCUE K_OR K_IF_MOD K_ENSURE K_END K_ELSIF K_ELSE K_DO_COND K_DO_BLOCK K_AND GT GEQ EQQ EQ EH DOT3 DOT2 DOT DIVIDE COMMENT COMMA COLON2 COLON CMP CARET ASSOC ANDOP AMPER2 #
Built an LR(0) automaton with 885 states.
The grammar is not SLR(1) -- 167 states have a conflict.
The construction mode is pager.
Built an LR(1) automaton with 1469 states.
2272 shift/reduce conflicts were silently solved.
File "ruby18_parser.mly", line 63, characters 0-6:
Warning: the precedence level assigned to UMINUS_NUM is never useful.
Warning: 8 states have shift/reduce conflicts.
Warning: 8 shift/reduce conflicts were arbitrarily resolved.
Warning: 333 end-of-stream conflicts were arbitrarily resolved.
637 out of 1469 states have a default reduction.
698 out of 1469 states are represented.
0 out of 260 symbols keep track of their start position.
0 out of 260 symbols keep track of their end position.
255 out of 485 productions exploit shiftreduce optimization.
306 out of 1469 states can peek at an error.
3559 functions before inlining, 941 functions after inlining.
