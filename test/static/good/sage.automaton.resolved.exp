State 0:
command' -> . command [ # ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On LT shift to state 9
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IF shift to state 26
-- On ID shift to state 28
-- On FN shift to state 30
-- On ASSUMENOT shift to state 128
-- On ASSUME shift to state 129
-- On term shift to state 130
-- On ident_free_term shift to state 44
-- On command shift to state 131
-- On Let shift to state 132
-- On AssumeWord shift to state 133

State 1:
ident_free_term -> STRINGV . [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On VBAR reduce production ident_free_term -> STRINGV
-- On THEN reduce production ident_free_term -> STRINGV
-- On SUBTYPE reduce production ident_free_term -> STRINGV
-- On STRINGV reduce production ident_free_term -> STRINGV
-- On STAR reduce production ident_free_term -> STRINGV
-- On SEMISEMI reduce production ident_free_term -> STRINGV
-- On SEMI reduce production ident_free_term -> STRINGV
-- On RSQUARE reduce production ident_free_term -> STRINGV
-- On RPAREN reduce production ident_free_term -> STRINGV
-- On REC reduce production ident_free_term -> STRINGV
-- On RCURLY reduce production ident_free_term -> STRINGV
-- On QUESTION reduce production ident_free_term -> STRINGV
-- On PLUS reduce production ident_free_term -> STRINGV
-- On OR reduce production ident_free_term -> STRINGV
-- On MINUS reduce production ident_free_term -> STRINGV
-- On LT reduce production ident_free_term -> STRINGV
-- On LPAREN reduce production ident_free_term -> STRINGV
-- On LET reduce production ident_free_term -> STRINGV
-- On LEQ reduce production ident_free_term -> STRINGV
-- On LCURLY reduce production ident_free_term -> STRINGV
-- On LAMBDA reduce production ident_free_term -> STRINGV
-- On INTV reduce production ident_free_term -> STRINGV
-- On IN reduce production ident_free_term -> STRINGV
-- On IFF reduce production ident_free_term -> STRINGV
-- On IF reduce production ident_free_term -> STRINGV
-- On ID reduce production ident_free_term -> STRINGV
-- On GT reduce production ident_free_term -> STRINGV
-- On GEQ reduce production ident_free_term -> STRINGV
-- On FN reduce production ident_free_term -> STRINGV
-- On EQEQ reduce production ident_free_term -> STRINGV
-- On EQ reduce production ident_free_term -> STRINGV
-- On ELSE reduce production ident_free_term -> STRINGV
-- On DOT reduce production ident_free_term -> STRINGV
-- On DARROW reduce production ident_free_term -> STRINGV
-- On COMMA reduce production ident_free_term -> STRINGV
-- On COLONDASH reduce production ident_free_term -> STRINGV
-- On AS reduce production ident_free_term -> STRINGV
-- On ARROW reduce production ident_free_term -> STRINGV
-- On AND reduce production ident_free_term -> STRINGV

State 2:
ident_free_term -> STAR . [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On VBAR reduce production ident_free_term -> STAR
-- On THEN reduce production ident_free_term -> STAR
-- On SUBTYPE reduce production ident_free_term -> STAR
-- On STRINGV reduce production ident_free_term -> STAR
-- On STAR reduce production ident_free_term -> STAR
-- On SEMISEMI reduce production ident_free_term -> STAR
-- On SEMI reduce production ident_free_term -> STAR
-- On RSQUARE reduce production ident_free_term -> STAR
-- On RPAREN reduce production ident_free_term -> STAR
-- On REC reduce production ident_free_term -> STAR
-- On RCURLY reduce production ident_free_term -> STAR
-- On QUESTION reduce production ident_free_term -> STAR
-- On PLUS reduce production ident_free_term -> STAR
-- On OR reduce production ident_free_term -> STAR
-- On MINUS reduce production ident_free_term -> STAR
-- On LT reduce production ident_free_term -> STAR
-- On LPAREN reduce production ident_free_term -> STAR
-- On LET reduce production ident_free_term -> STAR
-- On LEQ reduce production ident_free_term -> STAR
-- On LCURLY reduce production ident_free_term -> STAR
-- On LAMBDA reduce production ident_free_term -> STAR
-- On INTV reduce production ident_free_term -> STAR
-- On IN reduce production ident_free_term -> STAR
-- On IFF reduce production ident_free_term -> STAR
-- On IF reduce production ident_free_term -> STAR
-- On ID reduce production ident_free_term -> STAR
-- On GT reduce production ident_free_term -> STAR
-- On GEQ reduce production ident_free_term -> STAR
-- On FN reduce production ident_free_term -> STAR
-- On EQEQ reduce production ident_free_term -> STAR
-- On EQ reduce production ident_free_term -> STAR
-- On ELSE reduce production ident_free_term -> STAR
-- On DOT reduce production ident_free_term -> STAR
-- On DARROW reduce production ident_free_term -> STAR
-- On COMMA reduce production ident_free_term -> STAR
-- On COLONDASH reduce production ident_free_term -> STAR
-- On AS reduce production ident_free_term -> STAR
-- On ARROW reduce production ident_free_term -> STAR
-- On AND reduce production ident_free_term -> STAR

State 3:
ident_free_term -> REC . ID ParamSeq MaybeTy DARROW term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On ID shift to state 4

State 4:
ident_free_term -> REC ID . ParamSeq MaybeTy DARROW term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On LPAREN shift to state 5
-- On ID shift to state 16
-- On ParamSeq shift to state 124
-- On Param shift to state 82
-- On DARROW reduce production ParamSeq ->
-- On COLON reduce production ParamSeq ->

State 5:
Param -> LPAREN . ID COLON term RPAREN [ VBAR SEMISEMI LPAREN ID EQ DARROW COLON ]
Param -> LPAREN . ID COLON term DOT term RPAREN [ VBAR SEMISEMI LPAREN ID EQ DARROW COLON ]
-- On ID shift to state 6

State 6:
Param -> LPAREN ID . COLON term RPAREN [ VBAR SEMISEMI LPAREN ID EQ DARROW COLON ]
Param -> LPAREN ID . COLON term DOT term RPAREN [ VBAR SEMISEMI LPAREN ID EQ DARROW COLON ]
-- On COLON shift to state 7

State 7:
Param -> LPAREN ID COLON . term RPAREN [ VBAR SEMISEMI LPAREN ID EQ DARROW COLON ]
Param -> LPAREN ID COLON . term DOT term RPAREN [ VBAR SEMISEMI LPAREN ID EQ DARROW COLON ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On LT shift to state 9
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IF shift to state 26
-- On ID shift to state 28
-- On FN shift to state 30
-- On term shift to state 119
-- On ident_free_term shift to state 44
-- On Let shift to state 45

State 8:
ident_free_term -> QUESTION . [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On VBAR reduce production ident_free_term -> QUESTION
-- On THEN reduce production ident_free_term -> QUESTION
-- On SUBTYPE reduce production ident_free_term -> QUESTION
-- On STRINGV reduce production ident_free_term -> QUESTION
-- On STAR reduce production ident_free_term -> QUESTION
-- On SEMISEMI reduce production ident_free_term -> QUESTION
-- On SEMI reduce production ident_free_term -> QUESTION
-- On RSQUARE reduce production ident_free_term -> QUESTION
-- On RPAREN reduce production ident_free_term -> QUESTION
-- On REC reduce production ident_free_term -> QUESTION
-- On RCURLY reduce production ident_free_term -> QUESTION
-- On QUESTION reduce production ident_free_term -> QUESTION
-- On PLUS reduce production ident_free_term -> QUESTION
-- On OR reduce production ident_free_term -> QUESTION
-- On MINUS reduce production ident_free_term -> QUESTION
-- On LT reduce production ident_free_term -> QUESTION
-- On LPAREN reduce production ident_free_term -> QUESTION
-- On LET reduce production ident_free_term -> QUESTION
-- On LEQ reduce production ident_free_term -> QUESTION
-- On LCURLY reduce production ident_free_term -> QUESTION
-- On LAMBDA reduce production ident_free_term -> QUESTION
-- On INTV reduce production ident_free_term -> QUESTION
-- On IN reduce production ident_free_term -> QUESTION
-- On IFF reduce production ident_free_term -> QUESTION
-- On IF reduce production ident_free_term -> QUESTION
-- On ID reduce production ident_free_term -> QUESTION
-- On GT reduce production ident_free_term -> QUESTION
-- On GEQ reduce production ident_free_term -> QUESTION
-- On FN reduce production ident_free_term -> QUESTION
-- On EQEQ reduce production ident_free_term -> QUESTION
-- On EQ reduce production ident_free_term -> QUESTION
-- On ELSE reduce production ident_free_term -> QUESTION
-- On DOT reduce production ident_free_term -> QUESTION
-- On DARROW reduce production ident_free_term -> QUESTION
-- On COMMA reduce production ident_free_term -> QUESTION
-- On COLONDASH reduce production ident_free_term -> QUESTION
-- On AS reduce production ident_free_term -> QUESTION
-- On ARROW reduce production ident_free_term -> QUESTION
-- On AND reduce production ident_free_term -> QUESTION

State 9:
ident_free_term -> LT . LabelColonTyList GT [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> LT . ID EQ term GT [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On ID shift to state 10
-- On NonEmptyLabelColonTyList shift to state 79
-- On LabelColonTyList shift to state 80
-- On GT reduce production LabelColonTyList ->

State 10:
NonEmptyLabelColonTyList -> ID . COLON Type [ GT ]
NonEmptyLabelColonTyList -> ID . COLON Type COMMA NonEmptyLabelColonTyList [ GT ]
ident_free_term -> LT ID . EQ term GT [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On EQ shift to state 11
-- On COLON shift to state 76

State 11:
ident_free_term -> LT ID EQ . term GT [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On LT shift to state 9
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IF shift to state 26
-- On ID shift to state 28
-- On FN shift to state 30
-- On term shift to state 117
-- On ident_free_term shift to state 44
-- On Let shift to state 45

State 12:
ident_free_term -> LPAREN . term RPAREN [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On LT shift to state 9
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IF shift to state 26
-- On ID shift to state 28
-- On FN shift to state 30
-- On term shift to state 115
-- On ident_free_term shift to state 44
-- On Let shift to state 45

State 13:
Let -> LET . ID ParamSeq MaybeTy EQ term [ SEMISEMI IN # ]
Let -> LET . REC ID ParamSeq MaybeTy EQ term [ SEMISEMI IN # ]
-- On REC shift to state 14
-- On ID shift to state 110

State 14:
Let -> LET REC . ID ParamSeq MaybeTy EQ term [ SEMISEMI IN # ]
-- On ID shift to state 15

State 15:
Let -> LET REC ID . ParamSeq MaybeTy EQ term [ SEMISEMI IN # ]
-- On LPAREN shift to state 5
-- On ID shift to state 16
-- On ParamSeq shift to state 17
-- On Param shift to state 82
-- On EQ reduce production ParamSeq ->
-- On COLON reduce production ParamSeq ->

State 16:
Param -> ID . [ VBAR SEMISEMI LPAREN ID EQ DARROW COLON ]
-- On VBAR reduce production Param -> ID
-- On SEMISEMI reduce production Param -> ID
-- On LPAREN reduce production Param -> ID
-- On ID reduce production Param -> ID
-- On EQ reduce production Param -> ID
-- On DARROW reduce production Param -> ID
-- On COLON reduce production Param -> ID

State 17:
Let -> LET REC ID ParamSeq . MaybeTy EQ term [ SEMISEMI IN # ]
-- On COLON shift to state 18
-- On MaybeTy shift to state 107
-- On EQ reduce production MaybeTy ->

State 18:
MaybeTy -> COLON . term [ EQ DARROW ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On LT shift to state 9
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IF shift to state 26
-- On ID shift to state 28
-- On FN shift to state 30
-- On term shift to state 106
-- On ident_free_term shift to state 44
-- On Let shift to state 45

State 19:
ident_free_term -> LCURLY . LabelColonTyList RCURLY [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
term -> LCURLY . ID COLON ident_free_term VBAR term RCURLY [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On ID shift to state 20
-- On NonEmptyLabelColonTyList shift to state 79
-- On LabelColonTyList shift to state 104
-- On RCURLY reduce production LabelColonTyList ->

State 20:
NonEmptyLabelColonTyList -> ID . COLON Type [ RCURLY ]
NonEmptyLabelColonTyList -> ID . COLON Type COMMA NonEmptyLabelColonTyList [ RCURLY ]
term -> LCURLY ID . COLON ident_free_term VBAR term RCURLY [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On COLON shift to state 21

State 21:
NonEmptyLabelColonTyList -> ID COLON . Type [ RCURLY ]
NonEmptyLabelColonTyList -> ID COLON . Type COMMA NonEmptyLabelColonTyList [ RCURLY ]
term -> LCURLY ID COLON . ident_free_term VBAR term RCURLY [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On LT shift to state 9
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IF shift to state 26
-- On ID shift to state 28
-- On FN shift to state 30
-- On term shift to state 51
-- On ident_free_term shift to state 100
-- On Type shift to state 73
-- On Let shift to state 45

State 22:
ident_free_term -> LAMBDA . ID COLON ident_free_term DOT term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On ID shift to state 23

State 23:
ident_free_term -> LAMBDA ID . COLON ident_free_term DOT term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On COLON shift to state 24

State 24:
ident_free_term -> LAMBDA ID COLON . ident_free_term DOT term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On LT shift to state 9
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IF shift to state 26
-- On ID shift to state 28
-- On FN shift to state 30
-- On term shift to state 84
-- On ident_free_term shift to state 97
-- On Let shift to state 45

State 25:
ident_free_term -> INTV . [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On VBAR reduce production ident_free_term -> INTV
-- On THEN reduce production ident_free_term -> INTV
-- On SUBTYPE reduce production ident_free_term -> INTV
-- On STRINGV reduce production ident_free_term -> INTV
-- On STAR reduce production ident_free_term -> INTV
-- On SEMISEMI reduce production ident_free_term -> INTV
-- On SEMI reduce production ident_free_term -> INTV
-- On RSQUARE reduce production ident_free_term -> INTV
-- On RPAREN reduce production ident_free_term -> INTV
-- On REC reduce production ident_free_term -> INTV
-- On RCURLY reduce production ident_free_term -> INTV
-- On QUESTION reduce production ident_free_term -> INTV
-- On PLUS reduce production ident_free_term -> INTV
-- On OR reduce production ident_free_term -> INTV
-- On MINUS reduce production ident_free_term -> INTV
-- On LT reduce production ident_free_term -> INTV
-- On LPAREN reduce production ident_free_term -> INTV
-- On LET reduce production ident_free_term -> INTV
-- On LEQ reduce production ident_free_term -> INTV
-- On LCURLY reduce production ident_free_term -> INTV
-- On LAMBDA reduce production ident_free_term -> INTV
-- On INTV reduce production ident_free_term -> INTV
-- On IN reduce production ident_free_term -> INTV
-- On IFF reduce production ident_free_term -> INTV
-- On IF reduce production ident_free_term -> INTV
-- On ID reduce production ident_free_term -> INTV
-- On GT reduce production ident_free_term -> INTV
-- On GEQ reduce production ident_free_term -> INTV
-- On FN reduce production ident_free_term -> INTV
-- On EQEQ reduce production ident_free_term -> INTV
-- On EQ reduce production ident_free_term -> INTV
-- On ELSE reduce production ident_free_term -> INTV
-- On DOT reduce production ident_free_term -> INTV
-- On DARROW reduce production ident_free_term -> INTV
-- On COMMA reduce production ident_free_term -> INTV
-- On COLONDASH reduce production ident_free_term -> INTV
-- On AS reduce production ident_free_term -> INTV
-- On ARROW reduce production ident_free_term -> INTV
-- On AND reduce production ident_free_term -> INTV

State 26:
ident_free_term -> IF . LSQUARE Type RSQUARE term THEN term ELSE term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> IF . term THEN term ELSE term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On LT shift to state 9
-- On LSQUARE shift to state 27
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IF shift to state 26
-- On ID shift to state 28
-- On FN shift to state 30
-- On term shift to state 92
-- On ident_free_term shift to state 44
-- On Let shift to state 45

State 27:
ident_free_term -> IF LSQUARE . Type RSQUARE term THEN term ELSE term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On LT shift to state 9
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IF shift to state 26
-- On ID shift to state 28
-- On FN shift to state 30
-- On term shift to state 51
-- On ident_free_term shift to state 44
-- On Type shift to state 85
-- On Let shift to state 45

State 28:
ident_free_term -> ID . [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
term -> ID . COLON ident_free_term DOT term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
term -> ID . COLON ident_free_term ARROW term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On COLON shift to state 29
-- On VBAR reduce production ident_free_term -> ID
-- On THEN reduce production ident_free_term -> ID
-- On SUBTYPE reduce production ident_free_term -> ID
-- On STRINGV reduce production ident_free_term -> ID
-- On STAR reduce production ident_free_term -> ID
-- On SEMISEMI reduce production ident_free_term -> ID
-- On SEMI reduce production ident_free_term -> ID
-- On RSQUARE reduce production ident_free_term -> ID
-- On RPAREN reduce production ident_free_term -> ID
-- On REC reduce production ident_free_term -> ID
-- On RCURLY reduce production ident_free_term -> ID
-- On QUESTION reduce production ident_free_term -> ID
-- On PLUS reduce production ident_free_term -> ID
-- On OR reduce production ident_free_term -> ID
-- On MINUS reduce production ident_free_term -> ID
-- On LT reduce production ident_free_term -> ID
-- On LPAREN reduce production ident_free_term -> ID
-- On LET reduce production ident_free_term -> ID
-- On LEQ reduce production ident_free_term -> ID
-- On LCURLY reduce production ident_free_term -> ID
-- On LAMBDA reduce production ident_free_term -> ID
-- On INTV reduce production ident_free_term -> ID
-- On IN reduce production ident_free_term -> ID
-- On IFF reduce production ident_free_term -> ID
-- On IF reduce production ident_free_term -> ID
-- On ID reduce production ident_free_term -> ID
-- On GT reduce production ident_free_term -> ID
-- On GEQ reduce production ident_free_term -> ID
-- On FN reduce production ident_free_term -> ID
-- On EQEQ reduce production ident_free_term -> ID
-- On EQ reduce production ident_free_term -> ID
-- On ELSE reduce production ident_free_term -> ID
-- On DOT reduce production ident_free_term -> ID
-- On DARROW reduce production ident_free_term -> ID
-- On COMMA reduce production ident_free_term -> ID
-- On COLONDASH reduce production ident_free_term -> ID
-- On AS reduce production ident_free_term -> ID
-- On ARROW reduce production ident_free_term -> ID
-- On AND reduce production ident_free_term -> ID

State 29:
term -> ID COLON . ident_free_term DOT term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
term -> ID COLON . ident_free_term ARROW term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On LT shift to state 9
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IF shift to state 26
-- On ID shift to state 28
-- On FN shift to state 30
-- On term shift to state 84
-- On ident_free_term shift to state 68
-- On Let shift to state 45

State 30:
ident_free_term -> FN . ParamSeq MaybeTy DARROW term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On LPAREN shift to state 5
-- On ID shift to state 16
-- On ParamSeq shift to state 31
-- On Param shift to state 82
-- On DARROW reduce production ParamSeq ->
-- On COLON reduce production ParamSeq ->

State 31:
ident_free_term -> FN ParamSeq . MaybeTy DARROW term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On COLON shift to state 18
-- On MaybeTy shift to state 32
-- On DARROW reduce production MaybeTy ->

State 32:
ident_free_term -> FN ParamSeq MaybeTy . DARROW term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On DARROW shift to state 33

State 33:
ident_free_term -> FN ParamSeq MaybeTy DARROW . term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On LT shift to state 9
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IF shift to state 26
-- On ID shift to state 28
-- On FN shift to state 30
-- On term shift to state 34
-- On ident_free_term shift to state 44
-- On Let shift to state 45

State 34:
ident_free_term -> term . ARROW term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . AS term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> FN ParamSeq MaybeTy DARROW term . [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . SEMI term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . EQ term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . IFF term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . LEQ term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . GEQ term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . LT term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . GT term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . PLUS term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . MINUS term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . AND term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . OR term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On SEMI shift to state 35
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On PLUS shift to state 37
-- On OR shift to state 39
-- On MINUS shift to state 41
-- On LT shift to state 48
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LEQ shift to state 52
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IFF shift to state 56
-- On IF shift to state 26
-- On ID shift to state 28
-- On GT shift to state 58
-- On GEQ shift to state 60
-- On FN shift to state 30
-- On EQ shift to state 62
-- On AS shift to state 64
-- On ARROW shift to state 66
-- On AND shift to state 54
-- On term shift to state 43
-- On ident_free_term shift to state 44
-- On Let shift to state 45
-- On VBAR reduce production ident_free_term -> FN ParamSeq MaybeTy DARROW term
-- On THEN reduce production ident_free_term -> FN ParamSeq MaybeTy DARROW term
-- On SUBTYPE reduce production ident_free_term -> FN ParamSeq MaybeTy DARROW term
-- On SEMISEMI reduce production ident_free_term -> FN ParamSeq MaybeTy DARROW term
-- On RSQUARE reduce production ident_free_term -> FN ParamSeq MaybeTy DARROW term
-- On RPAREN reduce production ident_free_term -> FN ParamSeq MaybeTy DARROW term
-- On RCURLY reduce production ident_free_term -> FN ParamSeq MaybeTy DARROW term
-- On IN reduce production ident_free_term -> FN ParamSeq MaybeTy DARROW term
-- On EQEQ reduce production ident_free_term -> FN ParamSeq MaybeTy DARROW term
-- On ELSE reduce production ident_free_term -> FN ParamSeq MaybeTy DARROW term
-- On DOT reduce production ident_free_term -> FN ParamSeq MaybeTy DARROW term
-- On DARROW reduce production ident_free_term -> FN ParamSeq MaybeTy DARROW term
-- On COMMA reduce production ident_free_term -> FN ParamSeq MaybeTy DARROW term
-- On COLONDASH reduce production ident_free_term -> FN ParamSeq MaybeTy DARROW term
** Conflict on OR

State 35:
ident_free_term -> term SEMI . term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On LT shift to state 9
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IF shift to state 26
-- On ID shift to state 28
-- On FN shift to state 30
-- On term shift to state 36
-- On ident_free_term shift to state 44
-- On Let shift to state 45

State 36:
ident_free_term -> term . ARROW term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . AS term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . SEMI term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term SEMI term . [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . EQ term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . IFF term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . LEQ term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . GEQ term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . LT term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . GT term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . PLUS term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . MINUS term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . AND term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . OR term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On PLUS shift to state 37
-- On OR shift to state 39
-- On MINUS shift to state 41
-- On LT shift to state 48
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LEQ shift to state 52
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IFF shift to state 56
-- On IF shift to state 26
-- On ID shift to state 28
-- On GT shift to state 58
-- On GEQ shift to state 60
-- On FN shift to state 30
-- On EQ shift to state 62
-- On AS shift to state 64
-- On ARROW shift to state 66
-- On AND shift to state 54
-- On term shift to state 43
-- On ident_free_term shift to state 44
-- On Let shift to state 45
-- On VBAR reduce production ident_free_term -> term SEMI term
-- On THEN reduce production ident_free_term -> term SEMI term
-- On SUBTYPE reduce production ident_free_term -> term SEMI term
-- On SEMISEMI reduce production ident_free_term -> term SEMI term
-- On SEMI reduce production ident_free_term -> term SEMI term
-- On RSQUARE reduce production ident_free_term -> term SEMI term
-- On RPAREN reduce production ident_free_term -> term SEMI term
-- On RCURLY reduce production ident_free_term -> term SEMI term
-- On IN reduce production ident_free_term -> term SEMI term
-- On EQEQ reduce production ident_free_term -> term SEMI term
-- On ELSE reduce production ident_free_term -> term SEMI term
-- On DOT reduce production ident_free_term -> term SEMI term
-- On DARROW reduce production ident_free_term -> term SEMI term
-- On COMMA reduce production ident_free_term -> term SEMI term
-- On COLONDASH reduce production ident_free_term -> term SEMI term
** Conflict on OR

State 37:
ident_free_term -> term PLUS . term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On LT shift to state 9
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IF shift to state 26
-- On ID shift to state 28
-- On FN shift to state 30
-- On term shift to state 38
-- On ident_free_term shift to state 44
-- On Let shift to state 45

State 38:
ident_free_term -> term . ARROW term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . AS term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . SEMI term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . EQ term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . IFF term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . LEQ term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . GEQ term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . LT term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . GT term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . PLUS term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term PLUS term . [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . MINUS term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . AND term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . OR term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On OR shift to state 39
-- On term shift to state 43
-- On ident_free_term shift to state 44
-- On Let shift to state 45
-- On VBAR reduce production ident_free_term -> term PLUS term
-- On THEN reduce production ident_free_term -> term PLUS term
-- On SUBTYPE reduce production ident_free_term -> term PLUS term
-- On STRINGV reduce production ident_free_term -> term PLUS term
-- On STAR reduce production ident_free_term -> term PLUS term
-- On SEMISEMI reduce production ident_free_term -> term PLUS term
-- On SEMI reduce production ident_free_term -> term PLUS term
-- On RSQUARE reduce production ident_free_term -> term PLUS term
-- On RPAREN reduce production ident_free_term -> term PLUS term
-- On REC reduce production ident_free_term -> term PLUS term
-- On RCURLY reduce production ident_free_term -> term PLUS term
-- On QUESTION reduce production ident_free_term -> term PLUS term
-- On PLUS reduce production ident_free_term -> term PLUS term
-- On MINUS reduce production ident_free_term -> term PLUS term
-- On LT reduce production ident_free_term -> term PLUS term
-- On LPAREN reduce production ident_free_term -> term PLUS term
-- On LET reduce production ident_free_term -> term PLUS term
-- On LEQ reduce production ident_free_term -> term PLUS term
-- On LCURLY reduce production ident_free_term -> term PLUS term
-- On LAMBDA reduce production ident_free_term -> term PLUS term
-- On INTV reduce production ident_free_term -> term PLUS term
-- On IN reduce production ident_free_term -> term PLUS term
-- On IFF reduce production ident_free_term -> term PLUS term
-- On IF reduce production ident_free_term -> term PLUS term
-- On ID reduce production ident_free_term -> term PLUS term
-- On GT reduce production ident_free_term -> term PLUS term
-- On GEQ reduce production ident_free_term -> term PLUS term
-- On FN reduce production ident_free_term -> term PLUS term
-- On EQEQ reduce production ident_free_term -> term PLUS term
-- On EQ reduce production ident_free_term -> term PLUS term
-- On ELSE reduce production ident_free_term -> term PLUS term
-- On DOT reduce production ident_free_term -> term PLUS term
-- On DARROW reduce production ident_free_term -> term PLUS term
-- On COMMA reduce production ident_free_term -> term PLUS term
-- On COLONDASH reduce production ident_free_term -> term PLUS term
-- On AS reduce production ident_free_term -> term PLUS term
-- On ARROW reduce production ident_free_term -> term PLUS term
-- On AND reduce production ident_free_term -> term PLUS term
** Conflict on OR

State 39:
ident_free_term -> term OR . term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On LT shift to state 9
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IF shift to state 26
-- On ID shift to state 28
-- On FN shift to state 30
-- On term shift to state 40
-- On ident_free_term shift to state 44
-- On Let shift to state 45

State 40:
ident_free_term -> term . ARROW term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . AS term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . SEMI term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . EQ term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . IFF term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . LEQ term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . GEQ term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . LT term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . GT term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . PLUS term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . MINUS term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . AND term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . OR term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term OR term . [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On SEMI shift to state 35
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On PLUS shift to state 37
-- On OR shift to state 39
-- On MINUS shift to state 41
-- On LT shift to state 48
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LEQ shift to state 52
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IFF shift to state 56
-- On IF shift to state 26
-- On ID shift to state 28
-- On GT shift to state 58
-- On GEQ shift to state 60
-- On FN shift to state 30
-- On EQ shift to state 62
-- On AS shift to state 64
-- On ARROW shift to state 66
-- On AND shift to state 54
-- On term shift to state 43
-- On ident_free_term shift to state 44
-- On Let shift to state 45
-- On VBAR reduce production ident_free_term -> term OR term
-- On THEN reduce production ident_free_term -> term OR term
-- On SUBTYPE reduce production ident_free_term -> term OR term
-- On SEMISEMI reduce production ident_free_term -> term OR term
-- On RSQUARE reduce production ident_free_term -> term OR term
-- On RPAREN reduce production ident_free_term -> term OR term
-- On RCURLY reduce production ident_free_term -> term OR term
-- On IN reduce production ident_free_term -> term OR term
-- On EQEQ reduce production ident_free_term -> term OR term
-- On ELSE reduce production ident_free_term -> term OR term
-- On DOT reduce production ident_free_term -> term OR term
-- On DARROW reduce production ident_free_term -> term OR term
-- On COMMA reduce production ident_free_term -> term OR term
-- On COLONDASH reduce production ident_free_term -> term OR term
** Conflict on STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND

State 41:
ident_free_term -> term MINUS . term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On LT shift to state 9
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IF shift to state 26
-- On ID shift to state 28
-- On FN shift to state 30
-- On term shift to state 42
-- On ident_free_term shift to state 44
-- On Let shift to state 45

State 42:
ident_free_term -> term . ARROW term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . AS term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . SEMI term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . EQ term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . IFF term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . LEQ term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . GEQ term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . LT term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . GT term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . PLUS term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . MINUS term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term MINUS term . [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . AND term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . OR term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On OR shift to state 39
-- On term shift to state 43
-- On ident_free_term shift to state 44
-- On Let shift to state 45
-- On VBAR reduce production ident_free_term -> term MINUS term
-- On THEN reduce production ident_free_term -> term MINUS term
-- On SUBTYPE reduce production ident_free_term -> term MINUS term
-- On STRINGV reduce production ident_free_term -> term MINUS term
-- On STAR reduce production ident_free_term -> term MINUS term
-- On SEMISEMI reduce production ident_free_term -> term MINUS term
-- On SEMI reduce production ident_free_term -> term MINUS term
-- On RSQUARE reduce production ident_free_term -> term MINUS term
-- On RPAREN reduce production ident_free_term -> term MINUS term
-- On REC reduce production ident_free_term -> term MINUS term
-- On RCURLY reduce production ident_free_term -> term MINUS term
-- On QUESTION reduce production ident_free_term -> term MINUS term
-- On PLUS reduce production ident_free_term -> term MINUS term
-- On MINUS reduce production ident_free_term -> term MINUS term
-- On LT reduce production ident_free_term -> term MINUS term
-- On LPAREN reduce production ident_free_term -> term MINUS term
-- On LET reduce production ident_free_term -> term MINUS term
-- On LEQ reduce production ident_free_term -> term MINUS term
-- On LCURLY reduce production ident_free_term -> term MINUS term
-- On LAMBDA reduce production ident_free_term -> term MINUS term
-- On INTV reduce production ident_free_term -> term MINUS term
-- On IN reduce production ident_free_term -> term MINUS term
-- On IFF reduce production ident_free_term -> term MINUS term
-- On IF reduce production ident_free_term -> term MINUS term
-- On ID reduce production ident_free_term -> term MINUS term
-- On GT reduce production ident_free_term -> term MINUS term
-- On GEQ reduce production ident_free_term -> term MINUS term
-- On FN reduce production ident_free_term -> term MINUS term
-- On EQEQ reduce production ident_free_term -> term MINUS term
-- On EQ reduce production ident_free_term -> term MINUS term
-- On ELSE reduce production ident_free_term -> term MINUS term
-- On DOT reduce production ident_free_term -> term MINUS term
-- On DARROW reduce production ident_free_term -> term MINUS term
-- On COMMA reduce production ident_free_term -> term MINUS term
-- On COLONDASH reduce production ident_free_term -> term MINUS term
-- On AS reduce production ident_free_term -> term MINUS term
-- On ARROW reduce production ident_free_term -> term MINUS term
-- On AND reduce production ident_free_term -> term MINUS term
** Conflict on OR

State 43:
ident_free_term -> term . ARROW term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term term . [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . AS term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . SEMI term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . EQ term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . IFF term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . LEQ term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . GEQ term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . LT term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . GT term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . PLUS term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . MINUS term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . AND term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . OR term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On OR shift to state 39
-- On term shift to state 43
-- On ident_free_term shift to state 44
-- On Let shift to state 45
-- On VBAR reduce production ident_free_term -> term term
-- On THEN reduce production ident_free_term -> term term
-- On SUBTYPE reduce production ident_free_term -> term term
-- On STRINGV reduce production ident_free_term -> term term
-- On STAR reduce production ident_free_term -> term term
-- On SEMISEMI reduce production ident_free_term -> term term
-- On SEMI reduce production ident_free_term -> term term
-- On RSQUARE reduce production ident_free_term -> term term
-- On RPAREN reduce production ident_free_term -> term term
-- On REC reduce production ident_free_term -> term term
-- On RCURLY reduce production ident_free_term -> term term
-- On QUESTION reduce production ident_free_term -> term term
-- On PLUS reduce production ident_free_term -> term term
-- On MINUS reduce production ident_free_term -> term term
-- On LT reduce production ident_free_term -> term term
-- On LPAREN reduce production ident_free_term -> term term
-- On LET reduce production ident_free_term -> term term
-- On LEQ reduce production ident_free_term -> term term
-- On LCURLY reduce production ident_free_term -> term term
-- On LAMBDA reduce production ident_free_term -> term term
-- On INTV reduce production ident_free_term -> term term
-- On IN reduce production ident_free_term -> term term
-- On IFF reduce production ident_free_term -> term term
-- On IF reduce production ident_free_term -> term term
-- On ID reduce production ident_free_term -> term term
-- On GT reduce production ident_free_term -> term term
-- On GEQ reduce production ident_free_term -> term term
-- On FN reduce production ident_free_term -> term term
-- On EQEQ reduce production ident_free_term -> term term
-- On EQ reduce production ident_free_term -> term term
-- On ELSE reduce production ident_free_term -> term term
-- On DOT reduce production ident_free_term -> term term
-- On DARROW reduce production ident_free_term -> term term
-- On COMMA reduce production ident_free_term -> term term
-- On COLONDASH reduce production ident_free_term -> term term
-- On AS reduce production ident_free_term -> term term
-- On ARROW reduce production ident_free_term -> term term
-- On AND reduce production ident_free_term -> term term
** Conflict on OR

State 44:
term -> ident_free_term . [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On VBAR reduce production term -> ident_free_term
-- On THEN reduce production term -> ident_free_term
-- On SUBTYPE reduce production term -> ident_free_term
-- On STRINGV reduce production term -> ident_free_term
-- On STAR reduce production term -> ident_free_term
-- On SEMISEMI reduce production term -> ident_free_term
-- On SEMI reduce production term -> ident_free_term
-- On RSQUARE reduce production term -> ident_free_term
-- On RPAREN reduce production term -> ident_free_term
-- On REC reduce production term -> ident_free_term
-- On RCURLY reduce production term -> ident_free_term
-- On QUESTION reduce production term -> ident_free_term
-- On PLUS reduce production term -> ident_free_term
-- On OR reduce production term -> ident_free_term
-- On MINUS reduce production term -> ident_free_term
-- On LT reduce production term -> ident_free_term
-- On LPAREN reduce production term -> ident_free_term
-- On LET reduce production term -> ident_free_term
-- On LEQ reduce production term -> ident_free_term
-- On LCURLY reduce production term -> ident_free_term
-- On LAMBDA reduce production term -> ident_free_term
-- On INTV reduce production term -> ident_free_term
-- On IN reduce production term -> ident_free_term
-- On IFF reduce production term -> ident_free_term
-- On IF reduce production term -> ident_free_term
-- On ID reduce production term -> ident_free_term
-- On GT reduce production term -> ident_free_term
-- On GEQ reduce production term -> ident_free_term
-- On FN reduce production term -> ident_free_term
-- On EQEQ reduce production term -> ident_free_term
-- On EQ reduce production term -> ident_free_term
-- On ELSE reduce production term -> ident_free_term
-- On DOT reduce production term -> ident_free_term
-- On DARROW reduce production term -> ident_free_term
-- On COMMA reduce production term -> ident_free_term
-- On COLONDASH reduce production term -> ident_free_term
-- On AS reduce production term -> ident_free_term
-- On ARROW reduce production term -> ident_free_term
-- On AND reduce production term -> ident_free_term

State 45:
ident_free_term -> Let . IN term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On IN shift to state 46

State 46:
ident_free_term -> Let IN . term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On LT shift to state 9
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IF shift to state 26
-- On ID shift to state 28
-- On FN shift to state 30
-- On term shift to state 47
-- On ident_free_term shift to state 44
-- On Let shift to state 45

State 47:
ident_free_term -> Let IN term . [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . ARROW term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . AS term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . SEMI term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . EQ term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . IFF term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . LEQ term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . GEQ term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . LT term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . GT term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . PLUS term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . MINUS term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . AND term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . OR term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On PLUS shift to state 37
-- On OR shift to state 39
-- On MINUS shift to state 41
-- On LT shift to state 48
-- On LPAREN shift to state 12
-- On LEQ shift to state 52
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IFF shift to state 56
-- On IF shift to state 26
-- On ID shift to state 28
-- On GT shift to state 58
-- On GEQ shift to state 60
-- On FN shift to state 30
-- On EQ shift to state 62
-- On AS shift to state 64
-- On AND shift to state 54
-- On term shift to state 43
-- On ident_free_term shift to state 44
-- On Let shift to state 45
-- On VBAR reduce production ident_free_term -> Let IN term
-- On THEN reduce production ident_free_term -> Let IN term
-- On SUBTYPE reduce production ident_free_term -> Let IN term
-- On SEMISEMI reduce production ident_free_term -> Let IN term
-- On SEMI reduce production ident_free_term -> Let IN term
-- On RSQUARE reduce production ident_free_term -> Let IN term
-- On RPAREN reduce production ident_free_term -> Let IN term
-- On RCURLY reduce production ident_free_term -> Let IN term
-- On IN reduce production ident_free_term -> Let IN term
-- On EQEQ reduce production ident_free_term -> Let IN term
-- On ELSE reduce production ident_free_term -> Let IN term
-- On DOT reduce production ident_free_term -> Let IN term
-- On DARROW reduce production ident_free_term -> Let IN term
-- On COMMA reduce production ident_free_term -> Let IN term
-- On COLONDASH reduce production ident_free_term -> Let IN term
-- On ARROW reduce production ident_free_term -> Let IN term
** Conflict on OR

State 48:
ident_free_term -> term LT . term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> LT . LabelColonTyList GT [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> LT . ID EQ term GT [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On LT shift to state 9
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IF shift to state 26
-- On ID shift to state 49
-- On FN shift to state 30
-- On term shift to state 78
-- On ident_free_term shift to state 44
-- On NonEmptyLabelColonTyList shift to state 79
-- On Let shift to state 45
-- On LabelColonTyList shift to state 80
-- On GT reduce production LabelColonTyList ->

State 49:
NonEmptyLabelColonTyList -> ID . COLON Type [ GT ]
NonEmptyLabelColonTyList -> ID . COLON Type COMMA NonEmptyLabelColonTyList [ GT ]
ident_free_term -> ID . [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> LT ID . EQ term GT [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
term -> ID . COLON ident_free_term DOT term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
term -> ID . COLON ident_free_term ARROW term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On COLON shift to state 50
-- On VBAR reduce production ident_free_term -> ID
-- On THEN reduce production ident_free_term -> ID
-- On SUBTYPE reduce production ident_free_term -> ID
-- On STRINGV reduce production ident_free_term -> ID
-- On STAR reduce production ident_free_term -> ID
-- On SEMISEMI reduce production ident_free_term -> ID
-- On SEMI reduce production ident_free_term -> ID
-- On RSQUARE reduce production ident_free_term -> ID
-- On RPAREN reduce production ident_free_term -> ID
-- On REC reduce production ident_free_term -> ID
-- On RCURLY reduce production ident_free_term -> ID
-- On QUESTION reduce production ident_free_term -> ID
-- On PLUS reduce production ident_free_term -> ID
-- On OR reduce production ident_free_term -> ID
-- On MINUS reduce production ident_free_term -> ID
-- On LT reduce production ident_free_term -> ID
-- On LPAREN reduce production ident_free_term -> ID
-- On LET reduce production ident_free_term -> ID
-- On LEQ reduce production ident_free_term -> ID
-- On LCURLY reduce production ident_free_term -> ID
-- On LAMBDA reduce production ident_free_term -> ID
-- On INTV reduce production ident_free_term -> ID
-- On IN reduce production ident_free_term -> ID
-- On IFF reduce production ident_free_term -> ID
-- On IF reduce production ident_free_term -> ID
-- On ID reduce production ident_free_term -> ID
-- On GT reduce production ident_free_term -> ID
-- On GEQ reduce production ident_free_term -> ID
-- On FN reduce production ident_free_term -> ID
-- On EQEQ reduce production ident_free_term -> ID
-- On ELSE reduce production ident_free_term -> ID
-- On DOT reduce production ident_free_term -> ID
-- On DARROW reduce production ident_free_term -> ID
-- On COMMA reduce production ident_free_term -> ID
-- On COLONDASH reduce production ident_free_term -> ID
-- On AS reduce production ident_free_term -> ID
-- On ARROW reduce production ident_free_term -> ID
-- On AND reduce production ident_free_term -> ID

State 50:
NonEmptyLabelColonTyList -> ID COLON . Type [ GT ]
NonEmptyLabelColonTyList -> ID COLON . Type COMMA NonEmptyLabelColonTyList [ GT ]
term -> ID COLON . ident_free_term DOT term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
term -> ID COLON . ident_free_term ARROW term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On LT shift to state 9
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IF shift to state 26
-- On ID shift to state 28
-- On FN shift to state 30
-- On term shift to state 51
-- On ident_free_term shift to state 68
-- On Type shift to state 73
-- On Let shift to state 45

State 51:
Type -> term . [ SUBTYPE SEMISEMI RSQUARE RCURLY GT COMMA ]
ident_free_term -> term . ARROW term [ VBAR SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ DOT COMMA AS ARROW AND ]
ident_free_term -> term . term [ VBAR SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ DOT COMMA AS ARROW AND ]
ident_free_term -> term . AS term [ VBAR SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ DOT COMMA AS ARROW AND ]
ident_free_term -> term . SEMI term [ VBAR SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ DOT COMMA AS ARROW AND ]
ident_free_term -> term . EQ term [ VBAR SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ DOT COMMA AS ARROW AND ]
ident_free_term -> term . IFF term [ VBAR SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ DOT COMMA AS ARROW AND ]
ident_free_term -> term . LEQ term [ VBAR SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ DOT COMMA AS ARROW AND ]
ident_free_term -> term . GEQ term [ VBAR SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ DOT COMMA AS ARROW AND ]
ident_free_term -> term . LT term [ VBAR SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ DOT COMMA AS ARROW AND ]
ident_free_term -> term . GT term [ VBAR SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ DOT COMMA AS ARROW AND ]
ident_free_term -> term . PLUS term [ VBAR SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ DOT COMMA AS ARROW AND ]
ident_free_term -> term . MINUS term [ VBAR SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ DOT COMMA AS ARROW AND ]
ident_free_term -> term . AND term [ VBAR SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ DOT COMMA AS ARROW AND ]
ident_free_term -> term . OR term [ VBAR SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ DOT COMMA AS ARROW AND ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On SEMI shift to state 35
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On PLUS shift to state 37
-- On OR shift to state 39
-- On MINUS shift to state 41
-- On LT shift to state 48
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LEQ shift to state 52
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IFF shift to state 56
-- On IF shift to state 26
-- On ID shift to state 28
-- On GT shift to state 58
-- On GEQ shift to state 60
-- On FN shift to state 30
-- On EQ shift to state 62
-- On AS shift to state 64
-- On ARROW shift to state 66
-- On AND shift to state 54
-- On term shift to state 43
-- On ident_free_term shift to state 44
-- On Let shift to state 45
-- On SUBTYPE reduce production Type -> term
-- On SEMISEMI reduce production Type -> term
-- On RSQUARE reduce production Type -> term
-- On RCURLY reduce production Type -> term
-- On COMMA reduce production Type -> term

State 52:
ident_free_term -> term LEQ . term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On LT shift to state 9
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IF shift to state 26
-- On ID shift to state 28
-- On FN shift to state 30
-- On term shift to state 53
-- On ident_free_term shift to state 44
-- On Let shift to state 45

State 53:
ident_free_term -> term . ARROW term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . AS term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . SEMI term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . EQ term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . IFF term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . LEQ term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term LEQ term . [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . GEQ term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . LT term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . GT term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . PLUS term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . MINUS term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . AND term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . OR term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On PLUS shift to state 37
-- On OR shift to state 39
-- On MINUS shift to state 41
-- On LPAREN shift to state 12
-- On LCURLY shift to state 19
-- On AND shift to state 54
-- On term shift to state 43
-- On ident_free_term shift to state 44
-- On Let shift to state 45
-- On VBAR reduce production ident_free_term -> term LEQ term
-- On THEN reduce production ident_free_term -> term LEQ term
-- On SUBTYPE reduce production ident_free_term -> term LEQ term
-- On STRINGV reduce production ident_free_term -> term LEQ term
-- On STAR reduce production ident_free_term -> term LEQ term
-- On SEMISEMI reduce production ident_free_term -> term LEQ term
-- On SEMI reduce production ident_free_term -> term LEQ term
-- On RSQUARE reduce production ident_free_term -> term LEQ term
-- On RPAREN reduce production ident_free_term -> term LEQ term
-- On REC reduce production ident_free_term -> term LEQ term
-- On RCURLY reduce production ident_free_term -> term LEQ term
-- On QUESTION reduce production ident_free_term -> term LEQ term
-- On LET reduce production ident_free_term -> term LEQ term
-- On LAMBDA reduce production ident_free_term -> term LEQ term
-- On INTV reduce production ident_free_term -> term LEQ term
-- On IN reduce production ident_free_term -> term LEQ term
-- On IFF reduce production ident_free_term -> term LEQ term
-- On IF reduce production ident_free_term -> term LEQ term
-- On ID reduce production ident_free_term -> term LEQ term
-- On FN reduce production ident_free_term -> term LEQ term
-- On EQEQ reduce production ident_free_term -> term LEQ term
-- On EQ reduce production ident_free_term -> term LEQ term
-- On ELSE reduce production ident_free_term -> term LEQ term
-- On DOT reduce production ident_free_term -> term LEQ term
-- On DARROW reduce production ident_free_term -> term LEQ term
-- On COMMA reduce production ident_free_term -> term LEQ term
-- On COLONDASH reduce production ident_free_term -> term LEQ term
-- On AS reduce production ident_free_term -> term LEQ term
-- On ARROW reduce production ident_free_term -> term LEQ term
** Conflict on OR

State 54:
ident_free_term -> term AND . term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On LT shift to state 9
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IF shift to state 26
-- On ID shift to state 28
-- On FN shift to state 30
-- On term shift to state 55
-- On ident_free_term shift to state 44
-- On Let shift to state 45

State 55:
ident_free_term -> term . ARROW term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . AS term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . SEMI term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . EQ term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . IFF term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . LEQ term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . GEQ term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . LT term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . GT term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . PLUS term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . MINUS term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . AND term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term AND term . [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . OR term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On OR shift to state 39
-- On term shift to state 43
-- On ident_free_term shift to state 44
-- On Let shift to state 45
-- On VBAR reduce production ident_free_term -> term AND term
-- On THEN reduce production ident_free_term -> term AND term
-- On SUBTYPE reduce production ident_free_term -> term AND term
-- On STRINGV reduce production ident_free_term -> term AND term
-- On STAR reduce production ident_free_term -> term AND term
-- On SEMISEMI reduce production ident_free_term -> term AND term
-- On SEMI reduce production ident_free_term -> term AND term
-- On RSQUARE reduce production ident_free_term -> term AND term
-- On RPAREN reduce production ident_free_term -> term AND term
-- On REC reduce production ident_free_term -> term AND term
-- On RCURLY reduce production ident_free_term -> term AND term
-- On QUESTION reduce production ident_free_term -> term AND term
-- On PLUS reduce production ident_free_term -> term AND term
-- On MINUS reduce production ident_free_term -> term AND term
-- On LT reduce production ident_free_term -> term AND term
-- On LPAREN reduce production ident_free_term -> term AND term
-- On LET reduce production ident_free_term -> term AND term
-- On LEQ reduce production ident_free_term -> term AND term
-- On LCURLY reduce production ident_free_term -> term AND term
-- On LAMBDA reduce production ident_free_term -> term AND term
-- On INTV reduce production ident_free_term -> term AND term
-- On IN reduce production ident_free_term -> term AND term
-- On IFF reduce production ident_free_term -> term AND term
-- On IF reduce production ident_free_term -> term AND term
-- On ID reduce production ident_free_term -> term AND term
-- On GT reduce production ident_free_term -> term AND term
-- On GEQ reduce production ident_free_term -> term AND term
-- On FN reduce production ident_free_term -> term AND term
-- On EQEQ reduce production ident_free_term -> term AND term
-- On EQ reduce production ident_free_term -> term AND term
-- On ELSE reduce production ident_free_term -> term AND term
-- On DOT reduce production ident_free_term -> term AND term
-- On DARROW reduce production ident_free_term -> term AND term
-- On COMMA reduce production ident_free_term -> term AND term
-- On COLONDASH reduce production ident_free_term -> term AND term
-- On AS reduce production ident_free_term -> term AND term
-- On ARROW reduce production ident_free_term -> term AND term
-- On AND reduce production ident_free_term -> term AND term
** Conflict on OR

State 56:
ident_free_term -> term IFF . term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On LT shift to state 9
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IF shift to state 26
-- On ID shift to state 28
-- On FN shift to state 30
-- On term shift to state 57
-- On ident_free_term shift to state 44
-- On Let shift to state 45

State 57:
ident_free_term -> term . ARROW term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . AS term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . SEMI term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . EQ term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . IFF term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term IFF term . [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . LEQ term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . GEQ term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . LT term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . GT term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . PLUS term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . MINUS term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . AND term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . OR term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On PLUS shift to state 37
-- On OR shift to state 39
-- On MINUS shift to state 41
-- On LT shift to state 48
-- On LPAREN shift to state 12
-- On LEQ shift to state 52
-- On LCURLY shift to state 19
-- On GT shift to state 58
-- On GEQ shift to state 60
-- On AND shift to state 54
-- On term shift to state 43
-- On ident_free_term shift to state 44
-- On Let shift to state 45
-- On VBAR reduce production ident_free_term -> term IFF term
-- On THEN reduce production ident_free_term -> term IFF term
-- On SUBTYPE reduce production ident_free_term -> term IFF term
-- On SEMISEMI reduce production ident_free_term -> term IFF term
-- On SEMI reduce production ident_free_term -> term IFF term
-- On RSQUARE reduce production ident_free_term -> term IFF term
-- On RPAREN reduce production ident_free_term -> term IFF term
-- On RCURLY reduce production ident_free_term -> term IFF term
-- On LET reduce production ident_free_term -> term IFF term
-- On IN reduce production ident_free_term -> term IFF term
-- On EQEQ reduce production ident_free_term -> term IFF term
-- On ELSE reduce production ident_free_term -> term IFF term
-- On DOT reduce production ident_free_term -> term IFF term
-- On DARROW reduce production ident_free_term -> term IFF term
-- On COMMA reduce production ident_free_term -> term IFF term
-- On COLONDASH reduce production ident_free_term -> term IFF term
-- On AS reduce production ident_free_term -> term IFF term
-- On ARROW reduce production ident_free_term -> term IFF term
** Conflict on OR

State 58:
ident_free_term -> term GT . term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On LT shift to state 9
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IF shift to state 26
-- On ID shift to state 28
-- On FN shift to state 30
-- On term shift to state 59
-- On ident_free_term shift to state 44
-- On Let shift to state 45

State 59:
ident_free_term -> term . ARROW term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . AS term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . SEMI term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . EQ term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . IFF term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . LEQ term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . GEQ term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . LT term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . GT term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term GT term . [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . PLUS term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . MINUS term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . AND term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . OR term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On PLUS shift to state 37
-- On OR shift to state 39
-- On MINUS shift to state 41
-- On LPAREN shift to state 12
-- On LCURLY shift to state 19
-- On AND shift to state 54
-- On term shift to state 43
-- On ident_free_term shift to state 44
-- On Let shift to state 45
-- On VBAR reduce production ident_free_term -> term GT term
-- On THEN reduce production ident_free_term -> term GT term
-- On SUBTYPE reduce production ident_free_term -> term GT term
-- On STRINGV reduce production ident_free_term -> term GT term
-- On STAR reduce production ident_free_term -> term GT term
-- On SEMISEMI reduce production ident_free_term -> term GT term
-- On SEMI reduce production ident_free_term -> term GT term
-- On RSQUARE reduce production ident_free_term -> term GT term
-- On RPAREN reduce production ident_free_term -> term GT term
-- On REC reduce production ident_free_term -> term GT term
-- On RCURLY reduce production ident_free_term -> term GT term
-- On QUESTION reduce production ident_free_term -> term GT term
-- On LET reduce production ident_free_term -> term GT term
-- On LAMBDA reduce production ident_free_term -> term GT term
-- On INTV reduce production ident_free_term -> term GT term
-- On IN reduce production ident_free_term -> term GT term
-- On IFF reduce production ident_free_term -> term GT term
-- On IF reduce production ident_free_term -> term GT term
-- On ID reduce production ident_free_term -> term GT term
-- On FN reduce production ident_free_term -> term GT term
-- On EQEQ reduce production ident_free_term -> term GT term
-- On EQ reduce production ident_free_term -> term GT term
-- On ELSE reduce production ident_free_term -> term GT term
-- On DOT reduce production ident_free_term -> term GT term
-- On DARROW reduce production ident_free_term -> term GT term
-- On COMMA reduce production ident_free_term -> term GT term
-- On COLONDASH reduce production ident_free_term -> term GT term
-- On AS reduce production ident_free_term -> term GT term
-- On ARROW reduce production ident_free_term -> term GT term
** Conflict on OR

State 60:
ident_free_term -> term GEQ . term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On LT shift to state 9
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IF shift to state 26
-- On ID shift to state 28
-- On FN shift to state 30
-- On term shift to state 61
-- On ident_free_term shift to state 44
-- On Let shift to state 45

State 61:
ident_free_term -> term . ARROW term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . AS term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . SEMI term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . EQ term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . IFF term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . LEQ term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . GEQ term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term GEQ term . [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . LT term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . GT term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . PLUS term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . MINUS term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . AND term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . OR term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On PLUS shift to state 37
-- On OR shift to state 39
-- On MINUS shift to state 41
-- On LPAREN shift to state 12
-- On LCURLY shift to state 19
-- On AND shift to state 54
-- On term shift to state 43
-- On ident_free_term shift to state 44
-- On Let shift to state 45
-- On VBAR reduce production ident_free_term -> term GEQ term
-- On THEN reduce production ident_free_term -> term GEQ term
-- On SUBTYPE reduce production ident_free_term -> term GEQ term
-- On STRINGV reduce production ident_free_term -> term GEQ term
-- On STAR reduce production ident_free_term -> term GEQ term
-- On SEMISEMI reduce production ident_free_term -> term GEQ term
-- On SEMI reduce production ident_free_term -> term GEQ term
-- On RSQUARE reduce production ident_free_term -> term GEQ term
-- On RPAREN reduce production ident_free_term -> term GEQ term
-- On REC reduce production ident_free_term -> term GEQ term
-- On RCURLY reduce production ident_free_term -> term GEQ term
-- On QUESTION reduce production ident_free_term -> term GEQ term
-- On LET reduce production ident_free_term -> term GEQ term
-- On LAMBDA reduce production ident_free_term -> term GEQ term
-- On INTV reduce production ident_free_term -> term GEQ term
-- On IN reduce production ident_free_term -> term GEQ term
-- On IFF reduce production ident_free_term -> term GEQ term
-- On IF reduce production ident_free_term -> term GEQ term
-- On ID reduce production ident_free_term -> term GEQ term
-- On FN reduce production ident_free_term -> term GEQ term
-- On EQEQ reduce production ident_free_term -> term GEQ term
-- On EQ reduce production ident_free_term -> term GEQ term
-- On ELSE reduce production ident_free_term -> term GEQ term
-- On DOT reduce production ident_free_term -> term GEQ term
-- On DARROW reduce production ident_free_term -> term GEQ term
-- On COMMA reduce production ident_free_term -> term GEQ term
-- On COLONDASH reduce production ident_free_term -> term GEQ term
-- On AS reduce production ident_free_term -> term GEQ term
-- On ARROW reduce production ident_free_term -> term GEQ term
** Conflict on OR

State 62:
ident_free_term -> term EQ . term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On LT shift to state 9
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IF shift to state 26
-- On ID shift to state 28
-- On FN shift to state 30
-- On term shift to state 63
-- On ident_free_term shift to state 44
-- On Let shift to state 45

State 63:
ident_free_term -> term . ARROW term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . AS term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . SEMI term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . EQ term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term EQ term . [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . IFF term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . LEQ term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . GEQ term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . LT term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . GT term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . PLUS term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . MINUS term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . AND term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . OR term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On PLUS shift to state 37
-- On OR shift to state 39
-- On MINUS shift to state 41
-- On LT shift to state 48
-- On LPAREN shift to state 12
-- On LEQ shift to state 52
-- On LCURLY shift to state 19
-- On GT shift to state 58
-- On GEQ shift to state 60
-- On AND shift to state 54
-- On term shift to state 43
-- On ident_free_term shift to state 44
-- On Let shift to state 45
-- On VBAR reduce production ident_free_term -> term EQ term
-- On THEN reduce production ident_free_term -> term EQ term
-- On SUBTYPE reduce production ident_free_term -> term EQ term
-- On SEMISEMI reduce production ident_free_term -> term EQ term
-- On SEMI reduce production ident_free_term -> term EQ term
-- On RSQUARE reduce production ident_free_term -> term EQ term
-- On RPAREN reduce production ident_free_term -> term EQ term
-- On RCURLY reduce production ident_free_term -> term EQ term
-- On LET reduce production ident_free_term -> term EQ term
-- On IN reduce production ident_free_term -> term EQ term
-- On EQEQ reduce production ident_free_term -> term EQ term
-- On ELSE reduce production ident_free_term -> term EQ term
-- On DOT reduce production ident_free_term -> term EQ term
-- On DARROW reduce production ident_free_term -> term EQ term
-- On COMMA reduce production ident_free_term -> term EQ term
-- On COLONDASH reduce production ident_free_term -> term EQ term
-- On AS reduce production ident_free_term -> term EQ term
-- On ARROW reduce production ident_free_term -> term EQ term
** Conflict on OR

State 64:
ident_free_term -> term AS . term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On LT shift to state 9
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IF shift to state 26
-- On ID shift to state 28
-- On FN shift to state 30
-- On term shift to state 65
-- On ident_free_term shift to state 44
-- On Let shift to state 45

State 65:
ident_free_term -> term . ARROW term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . AS term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term AS term . [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . SEMI term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . EQ term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . IFF term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . LEQ term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . GEQ term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . LT term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . GT term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . PLUS term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . MINUS term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . AND term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . OR term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On PLUS shift to state 37
-- On OR shift to state 39
-- On MINUS shift to state 41
-- On LT shift to state 48
-- On LPAREN shift to state 12
-- On LEQ shift to state 52
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IFF shift to state 56
-- On IF shift to state 26
-- On ID shift to state 28
-- On GT shift to state 58
-- On GEQ shift to state 60
-- On FN shift to state 30
-- On EQ shift to state 62
-- On AS shift to state 64
-- On AND shift to state 54
-- On term shift to state 43
-- On ident_free_term shift to state 44
-- On Let shift to state 45
-- On VBAR reduce production ident_free_term -> term AS term
-- On THEN reduce production ident_free_term -> term AS term
-- On SUBTYPE reduce production ident_free_term -> term AS term
-- On SEMISEMI reduce production ident_free_term -> term AS term
-- On SEMI reduce production ident_free_term -> term AS term
-- On RSQUARE reduce production ident_free_term -> term AS term
-- On RPAREN reduce production ident_free_term -> term AS term
-- On RCURLY reduce production ident_free_term -> term AS term
-- On LET reduce production ident_free_term -> term AS term
-- On IN reduce production ident_free_term -> term AS term
-- On EQEQ reduce production ident_free_term -> term AS term
-- On ELSE reduce production ident_free_term -> term AS term
-- On DOT reduce production ident_free_term -> term AS term
-- On DARROW reduce production ident_free_term -> term AS term
-- On COMMA reduce production ident_free_term -> term AS term
-- On COLONDASH reduce production ident_free_term -> term AS term
-- On ARROW reduce production ident_free_term -> term AS term
** Conflict on OR

State 66:
ident_free_term -> term ARROW . term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On LT shift to state 9
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IF shift to state 26
-- On ID shift to state 28
-- On FN shift to state 30
-- On term shift to state 67
-- On ident_free_term shift to state 44
-- On Let shift to state 45

State 67:
ident_free_term -> term . ARROW term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term ARROW term . [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . AS term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . SEMI term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . EQ term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . IFF term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . LEQ term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . GEQ term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . LT term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . GT term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . PLUS term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . MINUS term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . AND term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . OR term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On SEMI shift to state 35
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On PLUS shift to state 37
-- On OR shift to state 39
-- On MINUS shift to state 41
-- On LT shift to state 48
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LEQ shift to state 52
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IFF shift to state 56
-- On IF shift to state 26
-- On ID shift to state 28
-- On GT shift to state 58
-- On GEQ shift to state 60
-- On FN shift to state 30
-- On EQ shift to state 62
-- On AS shift to state 64
-- On ARROW shift to state 66
-- On AND shift to state 54
-- On term shift to state 43
-- On ident_free_term shift to state 44
-- On Let shift to state 45
-- On VBAR reduce production ident_free_term -> term ARROW term
-- On THEN reduce production ident_free_term -> term ARROW term
-- On SUBTYPE reduce production ident_free_term -> term ARROW term
-- On SEMISEMI reduce production ident_free_term -> term ARROW term
-- On RSQUARE reduce production ident_free_term -> term ARROW term
-- On RPAREN reduce production ident_free_term -> term ARROW term
-- On RCURLY reduce production ident_free_term -> term ARROW term
-- On IN reduce production ident_free_term -> term ARROW term
-- On EQEQ reduce production ident_free_term -> term ARROW term
-- On ELSE reduce production ident_free_term -> term ARROW term
-- On DOT reduce production ident_free_term -> term ARROW term
-- On DARROW reduce production ident_free_term -> term ARROW term
-- On COMMA reduce production ident_free_term -> term ARROW term
-- On COLONDASH reduce production ident_free_term -> term ARROW term
** Conflict on OR

State 68:
term -> ID COLON ident_free_term . DOT term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
term -> ID COLON ident_free_term . ARROW term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
term -> ident_free_term . [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ COMMA AS ARROW AND ]
-- On DOT shift to state 69
-- On ARROW shift to state 71
-- On STRINGV reduce production term -> ident_free_term
-- On STAR reduce production term -> ident_free_term
-- On SEMI reduce production term -> ident_free_term
-- On REC reduce production term -> ident_free_term
-- On QUESTION reduce production term -> ident_free_term
-- On PLUS reduce production term -> ident_free_term
-- On OR reduce production term -> ident_free_term
-- On MINUS reduce production term -> ident_free_term
-- On LT reduce production term -> ident_free_term
-- On LPAREN reduce production term -> ident_free_term
-- On LET reduce production term -> ident_free_term
-- On LEQ reduce production term -> ident_free_term
-- On LCURLY reduce production term -> ident_free_term
-- On LAMBDA reduce production term -> ident_free_term
-- On INTV reduce production term -> ident_free_term
-- On IFF reduce production term -> ident_free_term
-- On IF reduce production term -> ident_free_term
-- On ID reduce production term -> ident_free_term
-- On GT reduce production term -> ident_free_term
-- On GEQ reduce production term -> ident_free_term
-- On FN reduce production term -> ident_free_term
-- On EQ reduce production term -> ident_free_term
-- On COMMA reduce production term -> ident_free_term
-- On AS reduce production term -> ident_free_term
-- On AND reduce production term -> ident_free_term

State 69:
term -> ID COLON ident_free_term DOT . term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On LT shift to state 9
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IF shift to state 26
-- On ID shift to state 28
-- On FN shift to state 30
-- On term shift to state 70
-- On ident_free_term shift to state 44
-- On Let shift to state 45

State 70:
ident_free_term -> term . ARROW term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . AS term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . SEMI term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . EQ term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . IFF term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . LEQ term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . GEQ term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . LT term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . GT term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . PLUS term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . MINUS term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . AND term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . OR term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
term -> ID COLON ident_free_term DOT term . [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On SEMI shift to state 35
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On PLUS shift to state 37
-- On OR shift to state 39
-- On MINUS shift to state 41
-- On LT shift to state 48
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LEQ shift to state 52
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IFF shift to state 56
-- On IF shift to state 26
-- On ID shift to state 28
-- On GT shift to state 58
-- On GEQ shift to state 60
-- On FN shift to state 30
-- On EQ shift to state 62
-- On AS shift to state 64
-- On ARROW shift to state 66
-- On AND shift to state 54
-- On term shift to state 43
-- On ident_free_term shift to state 44
-- On Let shift to state 45
-- On VBAR reduce production term -> ID COLON ident_free_term DOT term
-- On THEN reduce production term -> ID COLON ident_free_term DOT term
-- On SUBTYPE reduce production term -> ID COLON ident_free_term DOT term
-- On SEMISEMI reduce production term -> ID COLON ident_free_term DOT term
-- On RSQUARE reduce production term -> ID COLON ident_free_term DOT term
-- On RPAREN reduce production term -> ID COLON ident_free_term DOT term
-- On RCURLY reduce production term -> ID COLON ident_free_term DOT term
-- On IN reduce production term -> ID COLON ident_free_term DOT term
-- On EQEQ reduce production term -> ID COLON ident_free_term DOT term
-- On ELSE reduce production term -> ID COLON ident_free_term DOT term
-- On DOT reduce production term -> ID COLON ident_free_term DOT term
-- On DARROW reduce production term -> ID COLON ident_free_term DOT term
-- On COMMA reduce production term -> ID COLON ident_free_term DOT term
-- On COLONDASH reduce production term -> ID COLON ident_free_term DOT term
** Conflict on OR

State 71:
term -> ID COLON ident_free_term ARROW . term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On LT shift to state 9
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IF shift to state 26
-- On ID shift to state 28
-- On FN shift to state 30
-- On term shift to state 72
-- On ident_free_term shift to state 44
-- On Let shift to state 45

State 72:
ident_free_term -> term . ARROW term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . AS term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . SEMI term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . EQ term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . IFF term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . LEQ term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . GEQ term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . LT term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . GT term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . PLUS term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . MINUS term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . AND term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . OR term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
term -> ID COLON ident_free_term ARROW term . [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On SEMI shift to state 35
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On PLUS shift to state 37
-- On OR shift to state 39
-- On MINUS shift to state 41
-- On LT shift to state 48
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LEQ shift to state 52
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IFF shift to state 56
-- On IF shift to state 26
-- On ID shift to state 28
-- On GT shift to state 58
-- On GEQ shift to state 60
-- On FN shift to state 30
-- On EQ shift to state 62
-- On AS shift to state 64
-- On ARROW shift to state 66
-- On AND shift to state 54
-- On term shift to state 43
-- On ident_free_term shift to state 44
-- On Let shift to state 45
-- On VBAR reduce production term -> ID COLON ident_free_term ARROW term
-- On THEN reduce production term -> ID COLON ident_free_term ARROW term
-- On SUBTYPE reduce production term -> ID COLON ident_free_term ARROW term
-- On SEMISEMI reduce production term -> ID COLON ident_free_term ARROW term
-- On RSQUARE reduce production term -> ID COLON ident_free_term ARROW term
-- On RPAREN reduce production term -> ID COLON ident_free_term ARROW term
-- On RCURLY reduce production term -> ID COLON ident_free_term ARROW term
-- On IN reduce production term -> ID COLON ident_free_term ARROW term
-- On EQEQ reduce production term -> ID COLON ident_free_term ARROW term
-- On ELSE reduce production term -> ID COLON ident_free_term ARROW term
-- On DOT reduce production term -> ID COLON ident_free_term ARROW term
-- On DARROW reduce production term -> ID COLON ident_free_term ARROW term
-- On COMMA reduce production term -> ID COLON ident_free_term ARROW term
-- On COLONDASH reduce production term -> ID COLON ident_free_term ARROW term
** Conflict on OR

State 73:
NonEmptyLabelColonTyList -> ID COLON Type . [ RCURLY GT ]
NonEmptyLabelColonTyList -> ID COLON Type . COMMA NonEmptyLabelColonTyList [ RCURLY GT ]
-- On COMMA shift to state 74
-- On RCURLY reduce production NonEmptyLabelColonTyList -> ID COLON Type
-- On GT reduce production NonEmptyLabelColonTyList -> ID COLON Type

State 74:
NonEmptyLabelColonTyList -> ID COLON Type COMMA . NonEmptyLabelColonTyList [ RCURLY GT ]
-- On ID shift to state 75
-- On NonEmptyLabelColonTyList shift to state 77

State 75:
NonEmptyLabelColonTyList -> ID . COLON Type [ RCURLY GT ]
NonEmptyLabelColonTyList -> ID . COLON Type COMMA NonEmptyLabelColonTyList [ RCURLY GT ]
-- On COLON shift to state 76

State 76:
NonEmptyLabelColonTyList -> ID COLON . Type [ RCURLY GT ]
NonEmptyLabelColonTyList -> ID COLON . Type COMMA NonEmptyLabelColonTyList [ RCURLY GT ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On LT shift to state 9
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IF shift to state 26
-- On ID shift to state 28
-- On FN shift to state 30
-- On term shift to state 51
-- On ident_free_term shift to state 44
-- On Type shift to state 73
-- On Let shift to state 45

State 77:
NonEmptyLabelColonTyList -> ID COLON Type COMMA NonEmptyLabelColonTyList . [ RCURLY GT ]
-- On RCURLY reduce production NonEmptyLabelColonTyList -> ID COLON Type COMMA NonEmptyLabelColonTyList
-- On GT reduce production NonEmptyLabelColonTyList -> ID COLON Type COMMA NonEmptyLabelColonTyList

State 78:
ident_free_term -> term . ARROW term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . AS term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . SEMI term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . EQ term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . IFF term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . LEQ term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . GEQ term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . LT term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term LT term . [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . GT term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . PLUS term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . MINUS term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . AND term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . OR term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On PLUS shift to state 37
-- On OR shift to state 39
-- On MINUS shift to state 41
-- On LPAREN shift to state 12
-- On LCURLY shift to state 19
-- On AND shift to state 54
-- On term shift to state 43
-- On ident_free_term shift to state 44
-- On Let shift to state 45
-- On VBAR reduce production ident_free_term -> term LT term
-- On THEN reduce production ident_free_term -> term LT term
-- On SUBTYPE reduce production ident_free_term -> term LT term
-- On STRINGV reduce production ident_free_term -> term LT term
-- On STAR reduce production ident_free_term -> term LT term
-- On SEMISEMI reduce production ident_free_term -> term LT term
-- On SEMI reduce production ident_free_term -> term LT term
-- On RSQUARE reduce production ident_free_term -> term LT term
-- On RPAREN reduce production ident_free_term -> term LT term
-- On REC reduce production ident_free_term -> term LT term
-- On RCURLY reduce production ident_free_term -> term LT term
-- On QUESTION reduce production ident_free_term -> term LT term
-- On LET reduce production ident_free_term -> term LT term
-- On LAMBDA reduce production ident_free_term -> term LT term
-- On INTV reduce production ident_free_term -> term LT term
-- On IN reduce production ident_free_term -> term LT term
-- On IFF reduce production ident_free_term -> term LT term
-- On IF reduce production ident_free_term -> term LT term
-- On ID reduce production ident_free_term -> term LT term
-- On FN reduce production ident_free_term -> term LT term
-- On EQEQ reduce production ident_free_term -> term LT term
-- On EQ reduce production ident_free_term -> term LT term
-- On ELSE reduce production ident_free_term -> term LT term
-- On DOT reduce production ident_free_term -> term LT term
-- On DARROW reduce production ident_free_term -> term LT term
-- On COMMA reduce production ident_free_term -> term LT term
-- On COLONDASH reduce production ident_free_term -> term LT term
-- On AS reduce production ident_free_term -> term LT term
-- On ARROW reduce production ident_free_term -> term LT term
** Conflict on OR

State 79:
LabelColonTyList -> NonEmptyLabelColonTyList . [ RCURLY GT ]
-- On RCURLY reduce production LabelColonTyList -> NonEmptyLabelColonTyList
-- On GT reduce production LabelColonTyList -> NonEmptyLabelColonTyList

State 80:
ident_free_term -> LT LabelColonTyList . GT [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On GT shift to state 81

State 81:
ident_free_term -> LT LabelColonTyList GT . [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On VBAR reduce production ident_free_term -> LT LabelColonTyList GT
-- On THEN reduce production ident_free_term -> LT LabelColonTyList GT
-- On SUBTYPE reduce production ident_free_term -> LT LabelColonTyList GT
-- On STRINGV reduce production ident_free_term -> LT LabelColonTyList GT
-- On STAR reduce production ident_free_term -> LT LabelColonTyList GT
-- On SEMISEMI reduce production ident_free_term -> LT LabelColonTyList GT
-- On SEMI reduce production ident_free_term -> LT LabelColonTyList GT
-- On RSQUARE reduce production ident_free_term -> LT LabelColonTyList GT
-- On RPAREN reduce production ident_free_term -> LT LabelColonTyList GT
-- On REC reduce production ident_free_term -> LT LabelColonTyList GT
-- On RCURLY reduce production ident_free_term -> LT LabelColonTyList GT
-- On QUESTION reduce production ident_free_term -> LT LabelColonTyList GT
-- On PLUS reduce production ident_free_term -> LT LabelColonTyList GT
-- On OR reduce production ident_free_term -> LT LabelColonTyList GT
-- On MINUS reduce production ident_free_term -> LT LabelColonTyList GT
-- On LT reduce production ident_free_term -> LT LabelColonTyList GT
-- On LPAREN reduce production ident_free_term -> LT LabelColonTyList GT
-- On LET reduce production ident_free_term -> LT LabelColonTyList GT
-- On LEQ reduce production ident_free_term -> LT LabelColonTyList GT
-- On LCURLY reduce production ident_free_term -> LT LabelColonTyList GT
-- On LAMBDA reduce production ident_free_term -> LT LabelColonTyList GT
-- On INTV reduce production ident_free_term -> LT LabelColonTyList GT
-- On IN reduce production ident_free_term -> LT LabelColonTyList GT
-- On IFF reduce production ident_free_term -> LT LabelColonTyList GT
-- On IF reduce production ident_free_term -> LT LabelColonTyList GT
-- On ID reduce production ident_free_term -> LT LabelColonTyList GT
-- On GT reduce production ident_free_term -> LT LabelColonTyList GT
-- On GEQ reduce production ident_free_term -> LT LabelColonTyList GT
-- On FN reduce production ident_free_term -> LT LabelColonTyList GT
-- On EQEQ reduce production ident_free_term -> LT LabelColonTyList GT
-- On EQ reduce production ident_free_term -> LT LabelColonTyList GT
-- On ELSE reduce production ident_free_term -> LT LabelColonTyList GT
-- On DOT reduce production ident_free_term -> LT LabelColonTyList GT
-- On DARROW reduce production ident_free_term -> LT LabelColonTyList GT
-- On COMMA reduce production ident_free_term -> LT LabelColonTyList GT
-- On COLONDASH reduce production ident_free_term -> LT LabelColonTyList GT
-- On AS reduce production ident_free_term -> LT LabelColonTyList GT
-- On ARROW reduce production ident_free_term -> LT LabelColonTyList GT
-- On AND reduce production ident_free_term -> LT LabelColonTyList GT

State 82:
ParamSeq -> Param . ParamSeq [ VBAR SEMISEMI EQ DARROW COLON ]
-- On LPAREN shift to state 5
-- On ID shift to state 16
-- On ParamSeq shift to state 83
-- On Param shift to state 82
-- On VBAR reduce production ParamSeq ->
-- On SEMISEMI reduce production ParamSeq ->
-- On EQ reduce production ParamSeq ->
-- On DARROW reduce production ParamSeq ->
-- On COLON reduce production ParamSeq ->

State 83:
ParamSeq -> Param ParamSeq . [ VBAR SEMISEMI EQ DARROW COLON ]
-- On VBAR reduce production ParamSeq -> Param ParamSeq
-- On SEMISEMI reduce production ParamSeq -> Param ParamSeq
-- On EQ reduce production ParamSeq -> Param ParamSeq
-- On DARROW reduce production ParamSeq -> Param ParamSeq
-- On COLON reduce production ParamSeq -> Param ParamSeq

State 84:
ident_free_term -> term . ARROW term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQEQ EQ DOT COMMA COLONDASH AS ARROW AND ]
ident_free_term -> term . term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQEQ EQ DOT COMMA COLONDASH AS ARROW AND ]
ident_free_term -> term . AS term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQEQ EQ DOT COMMA COLONDASH AS ARROW AND ]
ident_free_term -> term . SEMI term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQEQ EQ DOT COMMA COLONDASH AS ARROW AND ]
ident_free_term -> term . EQ term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQEQ EQ DOT COMMA COLONDASH AS ARROW AND ]
ident_free_term -> term . IFF term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQEQ EQ DOT COMMA COLONDASH AS ARROW AND ]
ident_free_term -> term . LEQ term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQEQ EQ DOT COMMA COLONDASH AS ARROW AND ]
ident_free_term -> term . GEQ term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQEQ EQ DOT COMMA COLONDASH AS ARROW AND ]
ident_free_term -> term . LT term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQEQ EQ DOT COMMA COLONDASH AS ARROW AND ]
ident_free_term -> term . GT term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQEQ EQ DOT COMMA COLONDASH AS ARROW AND ]
ident_free_term -> term . PLUS term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQEQ EQ DOT COMMA COLONDASH AS ARROW AND ]
ident_free_term -> term . MINUS term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQEQ EQ DOT COMMA COLONDASH AS ARROW AND ]
ident_free_term -> term . AND term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQEQ EQ DOT COMMA COLONDASH AS ARROW AND ]
ident_free_term -> term . OR term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQEQ EQ DOT COMMA COLONDASH AS ARROW AND ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On SEMI shift to state 35
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On PLUS shift to state 37
-- On OR shift to state 39
-- On MINUS shift to state 41
-- On LT shift to state 48
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LEQ shift to state 52
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IFF shift to state 56
-- On IF shift to state 26
-- On ID shift to state 28
-- On GT shift to state 58
-- On GEQ shift to state 60
-- On FN shift to state 30
-- On EQ shift to state 62
-- On AS shift to state 64
-- On ARROW shift to state 66
-- On AND shift to state 54
-- On term shift to state 43
-- On ident_free_term shift to state 44
-- On Let shift to state 45

State 85:
ident_free_term -> IF LSQUARE Type . RSQUARE term THEN term ELSE term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On RSQUARE shift to state 86

State 86:
ident_free_term -> IF LSQUARE Type RSQUARE . term THEN term ELSE term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On LT shift to state 9
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IF shift to state 26
-- On ID shift to state 28
-- On FN shift to state 30
-- On term shift to state 87
-- On ident_free_term shift to state 44
-- On Let shift to state 45

State 87:
ident_free_term -> term . ARROW term [ THEN STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . term [ THEN STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . AS term [ THEN STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . SEMI term [ THEN STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . EQ term [ THEN STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . IFF term [ THEN STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . LEQ term [ THEN STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . GEQ term [ THEN STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . LT term [ THEN STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . GT term [ THEN STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . PLUS term [ THEN STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . MINUS term [ THEN STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . AND term [ THEN STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . OR term [ THEN STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> IF LSQUARE Type RSQUARE term . THEN term ELSE term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On THEN shift to state 88
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On SEMI shift to state 35
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On PLUS shift to state 37
-- On OR shift to state 39
-- On MINUS shift to state 41
-- On LT shift to state 48
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LEQ shift to state 52
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IFF shift to state 56
-- On IF shift to state 26
-- On ID shift to state 28
-- On GT shift to state 58
-- On GEQ shift to state 60
-- On FN shift to state 30
-- On EQ shift to state 62
-- On AS shift to state 64
-- On ARROW shift to state 66
-- On AND shift to state 54
-- On term shift to state 43
-- On ident_free_term shift to state 44
-- On Let shift to state 45

State 88:
ident_free_term -> IF LSQUARE Type RSQUARE term THEN . term ELSE term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On LT shift to state 9
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IF shift to state 26
-- On ID shift to state 28
-- On FN shift to state 30
-- On term shift to state 89
-- On ident_free_term shift to state 44
-- On Let shift to state 45

State 89:
ident_free_term -> term . ARROW term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ ELSE AS ARROW AND ]
ident_free_term -> term . term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ ELSE AS ARROW AND ]
ident_free_term -> term . AS term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ ELSE AS ARROW AND ]
ident_free_term -> term . SEMI term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ ELSE AS ARROW AND ]
ident_free_term -> term . EQ term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ ELSE AS ARROW AND ]
ident_free_term -> term . IFF term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ ELSE AS ARROW AND ]
ident_free_term -> term . LEQ term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ ELSE AS ARROW AND ]
ident_free_term -> term . GEQ term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ ELSE AS ARROW AND ]
ident_free_term -> term . LT term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ ELSE AS ARROW AND ]
ident_free_term -> term . GT term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ ELSE AS ARROW AND ]
ident_free_term -> term . PLUS term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ ELSE AS ARROW AND ]
ident_free_term -> term . MINUS term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ ELSE AS ARROW AND ]
ident_free_term -> term . AND term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ ELSE AS ARROW AND ]
ident_free_term -> term . OR term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ ELSE AS ARROW AND ]
ident_free_term -> IF LSQUARE Type RSQUARE term THEN term . ELSE term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On SEMI shift to state 35
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On PLUS shift to state 37
-- On OR shift to state 39
-- On MINUS shift to state 41
-- On LT shift to state 48
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LEQ shift to state 52
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IFF shift to state 56
-- On IF shift to state 26
-- On ID shift to state 28
-- On GT shift to state 58
-- On GEQ shift to state 60
-- On FN shift to state 30
-- On EQ shift to state 62
-- On ELSE shift to state 90
-- On AS shift to state 64
-- On ARROW shift to state 66
-- On AND shift to state 54
-- On term shift to state 43
-- On ident_free_term shift to state 44
-- On Let shift to state 45

State 90:
ident_free_term -> IF LSQUARE Type RSQUARE term THEN term ELSE . term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On LT shift to state 9
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IF shift to state 26
-- On ID shift to state 28
-- On FN shift to state 30
-- On term shift to state 91
-- On ident_free_term shift to state 44
-- On Let shift to state 45

State 91:
ident_free_term -> term . ARROW term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . AS term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . SEMI term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . EQ term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . IFF term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . LEQ term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . GEQ term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . LT term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . GT term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . PLUS term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . MINUS term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . AND term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . OR term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> IF LSQUARE Type RSQUARE term THEN term ELSE term . [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On PLUS shift to state 37
-- On OR shift to state 39
-- On MINUS shift to state 41
-- On LT shift to state 48
-- On LPAREN shift to state 12
-- On LEQ shift to state 52
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IFF shift to state 56
-- On IF shift to state 26
-- On ID shift to state 28
-- On GT shift to state 58
-- On GEQ shift to state 60
-- On FN shift to state 30
-- On EQ shift to state 62
-- On AS shift to state 64
-- On AND shift to state 54
-- On term shift to state 43
-- On ident_free_term shift to state 44
-- On Let shift to state 45
-- On VBAR reduce production ident_free_term -> IF LSQUARE Type RSQUARE term THEN term ELSE term
-- On THEN reduce production ident_free_term -> IF LSQUARE Type RSQUARE term THEN term ELSE term
-- On SUBTYPE reduce production ident_free_term -> IF LSQUARE Type RSQUARE term THEN term ELSE term
-- On SEMISEMI reduce production ident_free_term -> IF LSQUARE Type RSQUARE term THEN term ELSE term
-- On SEMI reduce production ident_free_term -> IF LSQUARE Type RSQUARE term THEN term ELSE term
-- On RSQUARE reduce production ident_free_term -> IF LSQUARE Type RSQUARE term THEN term ELSE term
-- On RPAREN reduce production ident_free_term -> IF LSQUARE Type RSQUARE term THEN term ELSE term
-- On RCURLY reduce production ident_free_term -> IF LSQUARE Type RSQUARE term THEN term ELSE term
-- On LET reduce production ident_free_term -> IF LSQUARE Type RSQUARE term THEN term ELSE term
-- On IN reduce production ident_free_term -> IF LSQUARE Type RSQUARE term THEN term ELSE term
-- On EQEQ reduce production ident_free_term -> IF LSQUARE Type RSQUARE term THEN term ELSE term
-- On ELSE reduce production ident_free_term -> IF LSQUARE Type RSQUARE term THEN term ELSE term
-- On DOT reduce production ident_free_term -> IF LSQUARE Type RSQUARE term THEN term ELSE term
-- On DARROW reduce production ident_free_term -> IF LSQUARE Type RSQUARE term THEN term ELSE term
-- On COMMA reduce production ident_free_term -> IF LSQUARE Type RSQUARE term THEN term ELSE term
-- On COLONDASH reduce production ident_free_term -> IF LSQUARE Type RSQUARE term THEN term ELSE term
-- On ARROW reduce production ident_free_term -> IF LSQUARE Type RSQUARE term THEN term ELSE term
** Conflict on OR

State 92:
ident_free_term -> term . ARROW term [ THEN STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . term [ THEN STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . AS term [ THEN STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . SEMI term [ THEN STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . EQ term [ THEN STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . IFF term [ THEN STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . LEQ term [ THEN STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . GEQ term [ THEN STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . LT term [ THEN STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . GT term [ THEN STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . PLUS term [ THEN STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . MINUS term [ THEN STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . AND term [ THEN STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . OR term [ THEN STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> IF term . THEN term ELSE term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On THEN shift to state 93
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On SEMI shift to state 35
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On PLUS shift to state 37
-- On OR shift to state 39
-- On MINUS shift to state 41
-- On LT shift to state 48
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LEQ shift to state 52
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IFF shift to state 56
-- On IF shift to state 26
-- On ID shift to state 28
-- On GT shift to state 58
-- On GEQ shift to state 60
-- On FN shift to state 30
-- On EQ shift to state 62
-- On AS shift to state 64
-- On ARROW shift to state 66
-- On AND shift to state 54
-- On term shift to state 43
-- On ident_free_term shift to state 44
-- On Let shift to state 45

State 93:
ident_free_term -> IF term THEN . term ELSE term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On LT shift to state 9
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IF shift to state 26
-- On ID shift to state 28
-- On FN shift to state 30
-- On term shift to state 94
-- On ident_free_term shift to state 44
-- On Let shift to state 45

State 94:
ident_free_term -> term . ARROW term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ ELSE AS ARROW AND ]
ident_free_term -> term . term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ ELSE AS ARROW AND ]
ident_free_term -> term . AS term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ ELSE AS ARROW AND ]
ident_free_term -> term . SEMI term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ ELSE AS ARROW AND ]
ident_free_term -> term . EQ term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ ELSE AS ARROW AND ]
ident_free_term -> term . IFF term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ ELSE AS ARROW AND ]
ident_free_term -> term . LEQ term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ ELSE AS ARROW AND ]
ident_free_term -> term . GEQ term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ ELSE AS ARROW AND ]
ident_free_term -> term . LT term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ ELSE AS ARROW AND ]
ident_free_term -> term . GT term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ ELSE AS ARROW AND ]
ident_free_term -> term . PLUS term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ ELSE AS ARROW AND ]
ident_free_term -> term . MINUS term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ ELSE AS ARROW AND ]
ident_free_term -> term . AND term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ ELSE AS ARROW AND ]
ident_free_term -> term . OR term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ ELSE AS ARROW AND ]
ident_free_term -> IF term THEN term . ELSE term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On SEMI shift to state 35
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On PLUS shift to state 37
-- On OR shift to state 39
-- On MINUS shift to state 41
-- On LT shift to state 48
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LEQ shift to state 52
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IFF shift to state 56
-- On IF shift to state 26
-- On ID shift to state 28
-- On GT shift to state 58
-- On GEQ shift to state 60
-- On FN shift to state 30
-- On EQ shift to state 62
-- On ELSE shift to state 95
-- On AS shift to state 64
-- On ARROW shift to state 66
-- On AND shift to state 54
-- On term shift to state 43
-- On ident_free_term shift to state 44
-- On Let shift to state 45

State 95:
ident_free_term -> IF term THEN term ELSE . term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On LT shift to state 9
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IF shift to state 26
-- On ID shift to state 28
-- On FN shift to state 30
-- On term shift to state 96
-- On ident_free_term shift to state 44
-- On Let shift to state 45

State 96:
ident_free_term -> term . ARROW term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . AS term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . SEMI term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . EQ term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . IFF term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . LEQ term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . GEQ term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . LT term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . GT term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . PLUS term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . MINUS term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . AND term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . OR term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> IF term THEN term ELSE term . [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On PLUS shift to state 37
-- On OR shift to state 39
-- On MINUS shift to state 41
-- On LT shift to state 48
-- On LPAREN shift to state 12
-- On LEQ shift to state 52
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IFF shift to state 56
-- On IF shift to state 26
-- On ID shift to state 28
-- On GT shift to state 58
-- On GEQ shift to state 60
-- On FN shift to state 30
-- On EQ shift to state 62
-- On AS shift to state 64
-- On AND shift to state 54
-- On term shift to state 43
-- On ident_free_term shift to state 44
-- On Let shift to state 45
-- On VBAR reduce production ident_free_term -> IF term THEN term ELSE term
-- On THEN reduce production ident_free_term -> IF term THEN term ELSE term
-- On SUBTYPE reduce production ident_free_term -> IF term THEN term ELSE term
-- On SEMISEMI reduce production ident_free_term -> IF term THEN term ELSE term
-- On SEMI reduce production ident_free_term -> IF term THEN term ELSE term
-- On RSQUARE reduce production ident_free_term -> IF term THEN term ELSE term
-- On RPAREN reduce production ident_free_term -> IF term THEN term ELSE term
-- On RCURLY reduce production ident_free_term -> IF term THEN term ELSE term
-- On LET reduce production ident_free_term -> IF term THEN term ELSE term
-- On IN reduce production ident_free_term -> IF term THEN term ELSE term
-- On EQEQ reduce production ident_free_term -> IF term THEN term ELSE term
-- On ELSE reduce production ident_free_term -> IF term THEN term ELSE term
-- On DOT reduce production ident_free_term -> IF term THEN term ELSE term
-- On DARROW reduce production ident_free_term -> IF term THEN term ELSE term
-- On COMMA reduce production ident_free_term -> IF term THEN term ELSE term
-- On COLONDASH reduce production ident_free_term -> IF term THEN term ELSE term
-- On ARROW reduce production ident_free_term -> IF term THEN term ELSE term
** Conflict on OR

State 97:
ident_free_term -> LAMBDA ID COLON ident_free_term . DOT term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
term -> ident_free_term . [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
-- On DOT shift to state 98
-- On STRINGV reduce production term -> ident_free_term
-- On STAR reduce production term -> ident_free_term
-- On SEMI reduce production term -> ident_free_term
-- On REC reduce production term -> ident_free_term
-- On QUESTION reduce production term -> ident_free_term
-- On PLUS reduce production term -> ident_free_term
-- On OR reduce production term -> ident_free_term
-- On MINUS reduce production term -> ident_free_term
-- On LT reduce production term -> ident_free_term
-- On LPAREN reduce production term -> ident_free_term
-- On LET reduce production term -> ident_free_term
-- On LEQ reduce production term -> ident_free_term
-- On LCURLY reduce production term -> ident_free_term
-- On LAMBDA reduce production term -> ident_free_term
-- On INTV reduce production term -> ident_free_term
-- On IFF reduce production term -> ident_free_term
-- On IF reduce production term -> ident_free_term
-- On ID reduce production term -> ident_free_term
-- On GT reduce production term -> ident_free_term
-- On GEQ reduce production term -> ident_free_term
-- On FN reduce production term -> ident_free_term
-- On EQ reduce production term -> ident_free_term
-- On AS reduce production term -> ident_free_term
-- On ARROW reduce production term -> ident_free_term
-- On AND reduce production term -> ident_free_term

State 98:
ident_free_term -> LAMBDA ID COLON ident_free_term DOT . term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On LT shift to state 9
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IF shift to state 26
-- On ID shift to state 28
-- On FN shift to state 30
-- On term shift to state 99
-- On ident_free_term shift to state 44
-- On Let shift to state 45

State 99:
ident_free_term -> LAMBDA ID COLON ident_free_term DOT term . [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . ARROW term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . AS term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . SEMI term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . EQ term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . IFF term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . LEQ term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . GEQ term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . LT term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . GT term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . PLUS term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . MINUS term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . AND term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . OR term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On SEMI shift to state 35
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On PLUS shift to state 37
-- On OR shift to state 39
-- On MINUS shift to state 41
-- On LT shift to state 48
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LEQ shift to state 52
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IFF shift to state 56
-- On IF shift to state 26
-- On ID shift to state 28
-- On GT shift to state 58
-- On GEQ shift to state 60
-- On FN shift to state 30
-- On EQ shift to state 62
-- On AS shift to state 64
-- On ARROW shift to state 66
-- On AND shift to state 54
-- On term shift to state 43
-- On ident_free_term shift to state 44
-- On Let shift to state 45
-- On VBAR reduce production ident_free_term -> LAMBDA ID COLON ident_free_term DOT term
-- On THEN reduce production ident_free_term -> LAMBDA ID COLON ident_free_term DOT term
-- On SUBTYPE reduce production ident_free_term -> LAMBDA ID COLON ident_free_term DOT term
-- On SEMISEMI reduce production ident_free_term -> LAMBDA ID COLON ident_free_term DOT term
-- On RSQUARE reduce production ident_free_term -> LAMBDA ID COLON ident_free_term DOT term
-- On RPAREN reduce production ident_free_term -> LAMBDA ID COLON ident_free_term DOT term
-- On RCURLY reduce production ident_free_term -> LAMBDA ID COLON ident_free_term DOT term
-- On IN reduce production ident_free_term -> LAMBDA ID COLON ident_free_term DOT term
-- On EQEQ reduce production ident_free_term -> LAMBDA ID COLON ident_free_term DOT term
-- On ELSE reduce production ident_free_term -> LAMBDA ID COLON ident_free_term DOT term
-- On DOT reduce production ident_free_term -> LAMBDA ID COLON ident_free_term DOT term
-- On DARROW reduce production ident_free_term -> LAMBDA ID COLON ident_free_term DOT term
-- On COMMA reduce production ident_free_term -> LAMBDA ID COLON ident_free_term DOT term
-- On COLONDASH reduce production ident_free_term -> LAMBDA ID COLON ident_free_term DOT term
** Conflict on OR

State 100:
term -> LCURLY ID COLON ident_free_term . VBAR term RCURLY [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
term -> ident_free_term . [ STRINGV STAR SEMI REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ COMMA AS ARROW AND ]
-- On VBAR shift to state 101
-- On STRINGV reduce production term -> ident_free_term
-- On STAR reduce production term -> ident_free_term
-- On SEMI reduce production term -> ident_free_term
-- On REC reduce production term -> ident_free_term
-- On RCURLY reduce production term -> ident_free_term
-- On QUESTION reduce production term -> ident_free_term
-- On PLUS reduce production term -> ident_free_term
-- On OR reduce production term -> ident_free_term
-- On MINUS reduce production term -> ident_free_term
-- On LT reduce production term -> ident_free_term
-- On LPAREN reduce production term -> ident_free_term
-- On LET reduce production term -> ident_free_term
-- On LEQ reduce production term -> ident_free_term
-- On LCURLY reduce production term -> ident_free_term
-- On LAMBDA reduce production term -> ident_free_term
-- On INTV reduce production term -> ident_free_term
-- On IFF reduce production term -> ident_free_term
-- On IF reduce production term -> ident_free_term
-- On ID reduce production term -> ident_free_term
-- On GT reduce production term -> ident_free_term
-- On GEQ reduce production term -> ident_free_term
-- On FN reduce production term -> ident_free_term
-- On EQ reduce production term -> ident_free_term
-- On COMMA reduce production term -> ident_free_term
-- On AS reduce production term -> ident_free_term
-- On ARROW reduce production term -> ident_free_term
-- On AND reduce production term -> ident_free_term

State 101:
term -> LCURLY ID COLON ident_free_term VBAR . term RCURLY [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On LT shift to state 9
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IF shift to state 26
-- On ID shift to state 28
-- On FN shift to state 30
-- On term shift to state 102
-- On ident_free_term shift to state 44
-- On Let shift to state 45

State 102:
ident_free_term -> term . ARROW term [ STRINGV STAR SEMI REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . term [ STRINGV STAR SEMI REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . AS term [ STRINGV STAR SEMI REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . SEMI term [ STRINGV STAR SEMI REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . EQ term [ STRINGV STAR SEMI REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . IFF term [ STRINGV STAR SEMI REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . LEQ term [ STRINGV STAR SEMI REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . GEQ term [ STRINGV STAR SEMI REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . LT term [ STRINGV STAR SEMI REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . GT term [ STRINGV STAR SEMI REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . PLUS term [ STRINGV STAR SEMI REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . MINUS term [ STRINGV STAR SEMI REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . AND term [ STRINGV STAR SEMI REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . OR term [ STRINGV STAR SEMI REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
term -> LCURLY ID COLON ident_free_term VBAR term . RCURLY [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On SEMI shift to state 35
-- On REC shift to state 3
-- On RCURLY shift to state 103
-- On QUESTION shift to state 8
-- On PLUS shift to state 37
-- On OR shift to state 39
-- On MINUS shift to state 41
-- On LT shift to state 48
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LEQ shift to state 52
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IFF shift to state 56
-- On IF shift to state 26
-- On ID shift to state 28
-- On GT shift to state 58
-- On GEQ shift to state 60
-- On FN shift to state 30
-- On EQ shift to state 62
-- On AS shift to state 64
-- On ARROW shift to state 66
-- On AND shift to state 54
-- On term shift to state 43
-- On ident_free_term shift to state 44
-- On Let shift to state 45

State 103:
term -> LCURLY ID COLON ident_free_term VBAR term RCURLY . [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On VBAR reduce production term -> LCURLY ID COLON ident_free_term VBAR term RCURLY
-- On THEN reduce production term -> LCURLY ID COLON ident_free_term VBAR term RCURLY
-- On SUBTYPE reduce production term -> LCURLY ID COLON ident_free_term VBAR term RCURLY
-- On STRINGV reduce production term -> LCURLY ID COLON ident_free_term VBAR term RCURLY
-- On STAR reduce production term -> LCURLY ID COLON ident_free_term VBAR term RCURLY
-- On SEMISEMI reduce production term -> LCURLY ID COLON ident_free_term VBAR term RCURLY
-- On SEMI reduce production term -> LCURLY ID COLON ident_free_term VBAR term RCURLY
-- On RSQUARE reduce production term -> LCURLY ID COLON ident_free_term VBAR term RCURLY
-- On RPAREN reduce production term -> LCURLY ID COLON ident_free_term VBAR term RCURLY
-- On REC reduce production term -> LCURLY ID COLON ident_free_term VBAR term RCURLY
-- On RCURLY reduce production term -> LCURLY ID COLON ident_free_term VBAR term RCURLY
-- On QUESTION reduce production term -> LCURLY ID COLON ident_free_term VBAR term RCURLY
-- On PLUS reduce production term -> LCURLY ID COLON ident_free_term VBAR term RCURLY
-- On OR reduce production term -> LCURLY ID COLON ident_free_term VBAR term RCURLY
-- On MINUS reduce production term -> LCURLY ID COLON ident_free_term VBAR term RCURLY
-- On LT reduce production term -> LCURLY ID COLON ident_free_term VBAR term RCURLY
-- On LPAREN reduce production term -> LCURLY ID COLON ident_free_term VBAR term RCURLY
-- On LET reduce production term -> LCURLY ID COLON ident_free_term VBAR term RCURLY
-- On LEQ reduce production term -> LCURLY ID COLON ident_free_term VBAR term RCURLY
-- On LCURLY reduce production term -> LCURLY ID COLON ident_free_term VBAR term RCURLY
-- On LAMBDA reduce production term -> LCURLY ID COLON ident_free_term VBAR term RCURLY
-- On INTV reduce production term -> LCURLY ID COLON ident_free_term VBAR term RCURLY
-- On IN reduce production term -> LCURLY ID COLON ident_free_term VBAR term RCURLY
-- On IFF reduce production term -> LCURLY ID COLON ident_free_term VBAR term RCURLY
-- On IF reduce production term -> LCURLY ID COLON ident_free_term VBAR term RCURLY
-- On ID reduce production term -> LCURLY ID COLON ident_free_term VBAR term RCURLY
-- On GT reduce production term -> LCURLY ID COLON ident_free_term VBAR term RCURLY
-- On GEQ reduce production term -> LCURLY ID COLON ident_free_term VBAR term RCURLY
-- On FN reduce production term -> LCURLY ID COLON ident_free_term VBAR term RCURLY
-- On EQEQ reduce production term -> LCURLY ID COLON ident_free_term VBAR term RCURLY
-- On EQ reduce production term -> LCURLY ID COLON ident_free_term VBAR term RCURLY
-- On ELSE reduce production term -> LCURLY ID COLON ident_free_term VBAR term RCURLY
-- On DOT reduce production term -> LCURLY ID COLON ident_free_term VBAR term RCURLY
-- On DARROW reduce production term -> LCURLY ID COLON ident_free_term VBAR term RCURLY
-- On COMMA reduce production term -> LCURLY ID COLON ident_free_term VBAR term RCURLY
-- On COLONDASH reduce production term -> LCURLY ID COLON ident_free_term VBAR term RCURLY
-- On AS reduce production term -> LCURLY ID COLON ident_free_term VBAR term RCURLY
-- On ARROW reduce production term -> LCURLY ID COLON ident_free_term VBAR term RCURLY
-- On AND reduce production term -> LCURLY ID COLON ident_free_term VBAR term RCURLY

State 104:
ident_free_term -> LCURLY LabelColonTyList . RCURLY [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On RCURLY shift to state 105

State 105:
ident_free_term -> LCURLY LabelColonTyList RCURLY . [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On VBAR reduce production ident_free_term -> LCURLY LabelColonTyList RCURLY
-- On THEN reduce production ident_free_term -> LCURLY LabelColonTyList RCURLY
-- On SUBTYPE reduce production ident_free_term -> LCURLY LabelColonTyList RCURLY
-- On STRINGV reduce production ident_free_term -> LCURLY LabelColonTyList RCURLY
-- On STAR reduce production ident_free_term -> LCURLY LabelColonTyList RCURLY
-- On SEMISEMI reduce production ident_free_term -> LCURLY LabelColonTyList RCURLY
-- On SEMI reduce production ident_free_term -> LCURLY LabelColonTyList RCURLY
-- On RSQUARE reduce production ident_free_term -> LCURLY LabelColonTyList RCURLY
-- On RPAREN reduce production ident_free_term -> LCURLY LabelColonTyList RCURLY
-- On REC reduce production ident_free_term -> LCURLY LabelColonTyList RCURLY
-- On RCURLY reduce production ident_free_term -> LCURLY LabelColonTyList RCURLY
-- On QUESTION reduce production ident_free_term -> LCURLY LabelColonTyList RCURLY
-- On PLUS reduce production ident_free_term -> LCURLY LabelColonTyList RCURLY
-- On OR reduce production ident_free_term -> LCURLY LabelColonTyList RCURLY
-- On MINUS reduce production ident_free_term -> LCURLY LabelColonTyList RCURLY
-- On LT reduce production ident_free_term -> LCURLY LabelColonTyList RCURLY
-- On LPAREN reduce production ident_free_term -> LCURLY LabelColonTyList RCURLY
-- On LET reduce production ident_free_term -> LCURLY LabelColonTyList RCURLY
-- On LEQ reduce production ident_free_term -> LCURLY LabelColonTyList RCURLY
-- On LCURLY reduce production ident_free_term -> LCURLY LabelColonTyList RCURLY
-- On LAMBDA reduce production ident_free_term -> LCURLY LabelColonTyList RCURLY
-- On INTV reduce production ident_free_term -> LCURLY LabelColonTyList RCURLY
-- On IN reduce production ident_free_term -> LCURLY LabelColonTyList RCURLY
-- On IFF reduce production ident_free_term -> LCURLY LabelColonTyList RCURLY
-- On IF reduce production ident_free_term -> LCURLY LabelColonTyList RCURLY
-- On ID reduce production ident_free_term -> LCURLY LabelColonTyList RCURLY
-- On GT reduce production ident_free_term -> LCURLY LabelColonTyList RCURLY
-- On GEQ reduce production ident_free_term -> LCURLY LabelColonTyList RCURLY
-- On FN reduce production ident_free_term -> LCURLY LabelColonTyList RCURLY
-- On EQEQ reduce production ident_free_term -> LCURLY LabelColonTyList RCURLY
-- On EQ reduce production ident_free_term -> LCURLY LabelColonTyList RCURLY
-- On ELSE reduce production ident_free_term -> LCURLY LabelColonTyList RCURLY
-- On DOT reduce production ident_free_term -> LCURLY LabelColonTyList RCURLY
-- On DARROW reduce production ident_free_term -> LCURLY LabelColonTyList RCURLY
-- On COMMA reduce production ident_free_term -> LCURLY LabelColonTyList RCURLY
-- On COLONDASH reduce production ident_free_term -> LCURLY LabelColonTyList RCURLY
-- On AS reduce production ident_free_term -> LCURLY LabelColonTyList RCURLY
-- On ARROW reduce production ident_free_term -> LCURLY LabelColonTyList RCURLY
-- On AND reduce production ident_free_term -> LCURLY LabelColonTyList RCURLY

State 106:
MaybeTy -> COLON term . [ EQ DARROW ]
ident_free_term -> term . ARROW term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ DARROW AS ARROW AND ]
ident_free_term -> term . term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ DARROW AS ARROW AND ]
ident_free_term -> term . AS term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ DARROW AS ARROW AND ]
ident_free_term -> term . SEMI term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ DARROW AS ARROW AND ]
ident_free_term -> term . EQ term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ DARROW AS ARROW AND ]
ident_free_term -> term . IFF term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ DARROW AS ARROW AND ]
ident_free_term -> term . LEQ term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ DARROW AS ARROW AND ]
ident_free_term -> term . GEQ term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ DARROW AS ARROW AND ]
ident_free_term -> term . LT term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ DARROW AS ARROW AND ]
ident_free_term -> term . GT term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ DARROW AS ARROW AND ]
ident_free_term -> term . PLUS term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ DARROW AS ARROW AND ]
ident_free_term -> term . MINUS term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ DARROW AS ARROW AND ]
ident_free_term -> term . AND term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ DARROW AS ARROW AND ]
ident_free_term -> term . OR term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ DARROW AS ARROW AND ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On SEMI shift to state 35
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On PLUS shift to state 37
-- On OR shift to state 39
-- On MINUS shift to state 41
-- On LT shift to state 48
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LEQ shift to state 52
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IFF shift to state 56
-- On IF shift to state 26
-- On ID shift to state 28
-- On GT shift to state 58
-- On GEQ shift to state 60
-- On FN shift to state 30
-- On AS shift to state 64
-- On ARROW shift to state 66
-- On AND shift to state 54
-- On term shift to state 43
-- On ident_free_term shift to state 44
-- On Let shift to state 45
-- On EQ reduce production MaybeTy -> COLON term
-- On DARROW reduce production MaybeTy -> COLON term

State 107:
Let -> LET REC ID ParamSeq MaybeTy . EQ term [ SEMISEMI IN # ]
-- On EQ shift to state 108

State 108:
Let -> LET REC ID ParamSeq MaybeTy EQ . term [ SEMISEMI IN # ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On LT shift to state 9
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IF shift to state 26
-- On ID shift to state 28
-- On FN shift to state 30
-- On term shift to state 109
-- On ident_free_term shift to state 44
-- On Let shift to state 45

State 109:
Let -> LET REC ID ParamSeq MaybeTy EQ term . [ SEMISEMI IN # ]
ident_free_term -> term . ARROW term [ STRINGV STAR SEMISEMI SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQ AS ARROW AND # ]
ident_free_term -> term . term [ STRINGV STAR SEMISEMI SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQ AS ARROW AND # ]
ident_free_term -> term . AS term [ STRINGV STAR SEMISEMI SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQ AS ARROW AND # ]
ident_free_term -> term . SEMI term [ STRINGV STAR SEMISEMI SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQ AS ARROW AND # ]
ident_free_term -> term . EQ term [ STRINGV STAR SEMISEMI SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQ AS ARROW AND # ]
ident_free_term -> term . IFF term [ STRINGV STAR SEMISEMI SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQ AS ARROW AND # ]
ident_free_term -> term . LEQ term [ STRINGV STAR SEMISEMI SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQ AS ARROW AND # ]
ident_free_term -> term . GEQ term [ STRINGV STAR SEMISEMI SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQ AS ARROW AND # ]
ident_free_term -> term . LT term [ STRINGV STAR SEMISEMI SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQ AS ARROW AND # ]
ident_free_term -> term . GT term [ STRINGV STAR SEMISEMI SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQ AS ARROW AND # ]
ident_free_term -> term . PLUS term [ STRINGV STAR SEMISEMI SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQ AS ARROW AND # ]
ident_free_term -> term . MINUS term [ STRINGV STAR SEMISEMI SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQ AS ARROW AND # ]
ident_free_term -> term . AND term [ STRINGV STAR SEMISEMI SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQ AS ARROW AND # ]
ident_free_term -> term . OR term [ STRINGV STAR SEMISEMI SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQ AS ARROW AND # ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On SEMI shift to state 35
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On PLUS shift to state 37
-- On OR shift to state 39
-- On MINUS shift to state 41
-- On LT shift to state 48
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LEQ shift to state 52
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IFF shift to state 56
-- On IF shift to state 26
-- On ID shift to state 28
-- On GT shift to state 58
-- On GEQ shift to state 60
-- On FN shift to state 30
-- On EQ shift to state 62
-- On AS shift to state 64
-- On ARROW shift to state 66
-- On AND shift to state 54
-- On term shift to state 43
-- On ident_free_term shift to state 44
-- On Let shift to state 45
-- On SEMISEMI reduce production Let -> LET REC ID ParamSeq MaybeTy EQ term
-- On IN reduce production Let -> LET REC ID ParamSeq MaybeTy EQ term

State 110:
Let -> LET ID . ParamSeq MaybeTy EQ term [ SEMISEMI IN # ]
-- On LPAREN shift to state 5
-- On ID shift to state 16
-- On ParamSeq shift to state 111
-- On Param shift to state 82
-- On EQ reduce production ParamSeq ->
-- On COLON reduce production ParamSeq ->

State 111:
Let -> LET ID ParamSeq . MaybeTy EQ term [ SEMISEMI IN # ]
-- On COLON shift to state 18
-- On MaybeTy shift to state 112
-- On EQ reduce production MaybeTy ->

State 112:
Let -> LET ID ParamSeq MaybeTy . EQ term [ SEMISEMI IN # ]
-- On EQ shift to state 113

State 113:
Let -> LET ID ParamSeq MaybeTy EQ . term [ SEMISEMI IN # ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On LT shift to state 9
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IF shift to state 26
-- On ID shift to state 28
-- On FN shift to state 30
-- On term shift to state 114
-- On ident_free_term shift to state 44
-- On Let shift to state 45

State 114:
Let -> LET ID ParamSeq MaybeTy EQ term . [ SEMISEMI IN # ]
ident_free_term -> term . ARROW term [ STRINGV STAR SEMISEMI SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQ AS ARROW AND # ]
ident_free_term -> term . term [ STRINGV STAR SEMISEMI SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQ AS ARROW AND # ]
ident_free_term -> term . AS term [ STRINGV STAR SEMISEMI SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQ AS ARROW AND # ]
ident_free_term -> term . SEMI term [ STRINGV STAR SEMISEMI SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQ AS ARROW AND # ]
ident_free_term -> term . EQ term [ STRINGV STAR SEMISEMI SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQ AS ARROW AND # ]
ident_free_term -> term . IFF term [ STRINGV STAR SEMISEMI SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQ AS ARROW AND # ]
ident_free_term -> term . LEQ term [ STRINGV STAR SEMISEMI SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQ AS ARROW AND # ]
ident_free_term -> term . GEQ term [ STRINGV STAR SEMISEMI SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQ AS ARROW AND # ]
ident_free_term -> term . LT term [ STRINGV STAR SEMISEMI SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQ AS ARROW AND # ]
ident_free_term -> term . GT term [ STRINGV STAR SEMISEMI SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQ AS ARROW AND # ]
ident_free_term -> term . PLUS term [ STRINGV STAR SEMISEMI SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQ AS ARROW AND # ]
ident_free_term -> term . MINUS term [ STRINGV STAR SEMISEMI SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQ AS ARROW AND # ]
ident_free_term -> term . AND term [ STRINGV STAR SEMISEMI SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQ AS ARROW AND # ]
ident_free_term -> term . OR term [ STRINGV STAR SEMISEMI SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQ AS ARROW AND # ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On SEMI shift to state 35
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On PLUS shift to state 37
-- On OR shift to state 39
-- On MINUS shift to state 41
-- On LT shift to state 48
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LEQ shift to state 52
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IFF shift to state 56
-- On IF shift to state 26
-- On ID shift to state 28
-- On GT shift to state 58
-- On GEQ shift to state 60
-- On FN shift to state 30
-- On EQ shift to state 62
-- On AS shift to state 64
-- On ARROW shift to state 66
-- On AND shift to state 54
-- On term shift to state 43
-- On ident_free_term shift to state 44
-- On Let shift to state 45
-- On SEMISEMI reduce production Let -> LET ID ParamSeq MaybeTy EQ term
-- On IN reduce production Let -> LET ID ParamSeq MaybeTy EQ term

State 115:
ident_free_term -> LPAREN term . RPAREN [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . ARROW term [ STRINGV STAR SEMI RPAREN REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . term [ STRINGV STAR SEMI RPAREN REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . AS term [ STRINGV STAR SEMI RPAREN REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . SEMI term [ STRINGV STAR SEMI RPAREN REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . EQ term [ STRINGV STAR SEMI RPAREN REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . IFF term [ STRINGV STAR SEMI RPAREN REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . LEQ term [ STRINGV STAR SEMI RPAREN REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . GEQ term [ STRINGV STAR SEMI RPAREN REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . LT term [ STRINGV STAR SEMI RPAREN REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . GT term [ STRINGV STAR SEMI RPAREN REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . PLUS term [ STRINGV STAR SEMI RPAREN REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . MINUS term [ STRINGV STAR SEMI RPAREN REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . AND term [ STRINGV STAR SEMI RPAREN REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . OR term [ STRINGV STAR SEMI RPAREN REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On SEMI shift to state 35
-- On RPAREN shift to state 116
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On PLUS shift to state 37
-- On OR shift to state 39
-- On MINUS shift to state 41
-- On LT shift to state 48
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LEQ shift to state 52
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IFF shift to state 56
-- On IF shift to state 26
-- On ID shift to state 28
-- On GT shift to state 58
-- On GEQ shift to state 60
-- On FN shift to state 30
-- On EQ shift to state 62
-- On AS shift to state 64
-- On ARROW shift to state 66
-- On AND shift to state 54
-- On term shift to state 43
-- On ident_free_term shift to state 44
-- On Let shift to state 45

State 116:
ident_free_term -> LPAREN term RPAREN . [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On VBAR reduce production ident_free_term -> LPAREN term RPAREN
-- On THEN reduce production ident_free_term -> LPAREN term RPAREN
-- On SUBTYPE reduce production ident_free_term -> LPAREN term RPAREN
-- On STRINGV reduce production ident_free_term -> LPAREN term RPAREN
-- On STAR reduce production ident_free_term -> LPAREN term RPAREN
-- On SEMISEMI reduce production ident_free_term -> LPAREN term RPAREN
-- On SEMI reduce production ident_free_term -> LPAREN term RPAREN
-- On RSQUARE reduce production ident_free_term -> LPAREN term RPAREN
-- On RPAREN reduce production ident_free_term -> LPAREN term RPAREN
-- On REC reduce production ident_free_term -> LPAREN term RPAREN
-- On RCURLY reduce production ident_free_term -> LPAREN term RPAREN
-- On QUESTION reduce production ident_free_term -> LPAREN term RPAREN
-- On PLUS reduce production ident_free_term -> LPAREN term RPAREN
-- On OR reduce production ident_free_term -> LPAREN term RPAREN
-- On MINUS reduce production ident_free_term -> LPAREN term RPAREN
-- On LT reduce production ident_free_term -> LPAREN term RPAREN
-- On LPAREN reduce production ident_free_term -> LPAREN term RPAREN
-- On LET reduce production ident_free_term -> LPAREN term RPAREN
-- On LEQ reduce production ident_free_term -> LPAREN term RPAREN
-- On LCURLY reduce production ident_free_term -> LPAREN term RPAREN
-- On LAMBDA reduce production ident_free_term -> LPAREN term RPAREN
-- On INTV reduce production ident_free_term -> LPAREN term RPAREN
-- On IN reduce production ident_free_term -> LPAREN term RPAREN
-- On IFF reduce production ident_free_term -> LPAREN term RPAREN
-- On IF reduce production ident_free_term -> LPAREN term RPAREN
-- On ID reduce production ident_free_term -> LPAREN term RPAREN
-- On GT reduce production ident_free_term -> LPAREN term RPAREN
-- On GEQ reduce production ident_free_term -> LPAREN term RPAREN
-- On FN reduce production ident_free_term -> LPAREN term RPAREN
-- On EQEQ reduce production ident_free_term -> LPAREN term RPAREN
-- On EQ reduce production ident_free_term -> LPAREN term RPAREN
-- On ELSE reduce production ident_free_term -> LPAREN term RPAREN
-- On DOT reduce production ident_free_term -> LPAREN term RPAREN
-- On DARROW reduce production ident_free_term -> LPAREN term RPAREN
-- On COMMA reduce production ident_free_term -> LPAREN term RPAREN
-- On COLONDASH reduce production ident_free_term -> LPAREN term RPAREN
-- On AS reduce production ident_free_term -> LPAREN term RPAREN
-- On ARROW reduce production ident_free_term -> LPAREN term RPAREN
-- On AND reduce production ident_free_term -> LPAREN term RPAREN

State 117:
ident_free_term -> term . ARROW term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . AS term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . SEMI term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . EQ term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . IFF term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . LEQ term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . GEQ term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . LT term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . GT term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . PLUS term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . MINUS term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . AND term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . OR term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> LT ID EQ term . GT [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On SEMI shift to state 35
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On PLUS shift to state 37
-- On OR shift to state 39
-- On MINUS shift to state 41
-- On LT shift to state 48
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LEQ shift to state 52
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IFF shift to state 56
-- On IF shift to state 26
-- On ID shift to state 28
-- On GT shift to state 118
-- On GEQ shift to state 60
-- On FN shift to state 30
-- On EQ shift to state 62
-- On AS shift to state 64
-- On ARROW shift to state 66
-- On AND shift to state 54
-- On term shift to state 43
-- On ident_free_term shift to state 44
-- On Let shift to state 45

State 118:
ident_free_term -> term GT . term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> LT ID EQ term GT . [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On LPAREN shift to state 12
-- On LCURLY shift to state 19
-- On term shift to state 59
-- On ident_free_term shift to state 44
-- On Let shift to state 45
-- On VBAR reduce production ident_free_term -> LT ID EQ term GT
-- On THEN reduce production ident_free_term -> LT ID EQ term GT
-- On SUBTYPE reduce production ident_free_term -> LT ID EQ term GT
-- On STRINGV reduce production ident_free_term -> LT ID EQ term GT
-- On STAR reduce production ident_free_term -> LT ID EQ term GT
-- On SEMISEMI reduce production ident_free_term -> LT ID EQ term GT
-- On SEMI reduce production ident_free_term -> LT ID EQ term GT
-- On RSQUARE reduce production ident_free_term -> LT ID EQ term GT
-- On RPAREN reduce production ident_free_term -> LT ID EQ term GT
-- On REC reduce production ident_free_term -> LT ID EQ term GT
-- On RCURLY reduce production ident_free_term -> LT ID EQ term GT
-- On QUESTION reduce production ident_free_term -> LT ID EQ term GT
-- On PLUS reduce production ident_free_term -> LT ID EQ term GT
-- On OR reduce production ident_free_term -> LT ID EQ term GT
-- On MINUS reduce production ident_free_term -> LT ID EQ term GT
-- On LET reduce production ident_free_term -> LT ID EQ term GT
-- On LEQ reduce production ident_free_term -> LT ID EQ term GT
-- On LAMBDA reduce production ident_free_term -> LT ID EQ term GT
-- On INTV reduce production ident_free_term -> LT ID EQ term GT
-- On IN reduce production ident_free_term -> LT ID EQ term GT
-- On IFF reduce production ident_free_term -> LT ID EQ term GT
-- On IF reduce production ident_free_term -> LT ID EQ term GT
-- On ID reduce production ident_free_term -> LT ID EQ term GT
-- On GT reduce production ident_free_term -> LT ID EQ term GT
-- On GEQ reduce production ident_free_term -> LT ID EQ term GT
-- On FN reduce production ident_free_term -> LT ID EQ term GT
-- On EQEQ reduce production ident_free_term -> LT ID EQ term GT
-- On EQ reduce production ident_free_term -> LT ID EQ term GT
-- On ELSE reduce production ident_free_term -> LT ID EQ term GT
-- On DOT reduce production ident_free_term -> LT ID EQ term GT
-- On DARROW reduce production ident_free_term -> LT ID EQ term GT
-- On COMMA reduce production ident_free_term -> LT ID EQ term GT
-- On COLONDASH reduce production ident_free_term -> LT ID EQ term GT
-- On AS reduce production ident_free_term -> LT ID EQ term GT
-- On ARROW reduce production ident_free_term -> LT ID EQ term GT
-- On AND reduce production ident_free_term -> LT ID EQ term GT

State 119:
Param -> LPAREN ID COLON term . RPAREN [ VBAR SEMISEMI LPAREN ID EQ DARROW COLON ]
Param -> LPAREN ID COLON term . DOT term RPAREN [ VBAR SEMISEMI LPAREN ID EQ DARROW COLON ]
ident_free_term -> term . ARROW term [ STRINGV STAR SEMI RPAREN REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ DOT AS ARROW AND ]
ident_free_term -> term . term [ STRINGV STAR SEMI RPAREN REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ DOT AS ARROW AND ]
ident_free_term -> term . AS term [ STRINGV STAR SEMI RPAREN REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ DOT AS ARROW AND ]
ident_free_term -> term . SEMI term [ STRINGV STAR SEMI RPAREN REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ DOT AS ARROW AND ]
ident_free_term -> term . EQ term [ STRINGV STAR SEMI RPAREN REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ DOT AS ARROW AND ]
ident_free_term -> term . IFF term [ STRINGV STAR SEMI RPAREN REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ DOT AS ARROW AND ]
ident_free_term -> term . LEQ term [ STRINGV STAR SEMI RPAREN REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ DOT AS ARROW AND ]
ident_free_term -> term . GEQ term [ STRINGV STAR SEMI RPAREN REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ DOT AS ARROW AND ]
ident_free_term -> term . LT term [ STRINGV STAR SEMI RPAREN REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ DOT AS ARROW AND ]
ident_free_term -> term . GT term [ STRINGV STAR SEMI RPAREN REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ DOT AS ARROW AND ]
ident_free_term -> term . PLUS term [ STRINGV STAR SEMI RPAREN REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ DOT AS ARROW AND ]
ident_free_term -> term . MINUS term [ STRINGV STAR SEMI RPAREN REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ DOT AS ARROW AND ]
ident_free_term -> term . AND term [ STRINGV STAR SEMI RPAREN REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ DOT AS ARROW AND ]
ident_free_term -> term . OR term [ STRINGV STAR SEMI RPAREN REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ DOT AS ARROW AND ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On SEMI shift to state 35
-- On RPAREN shift to state 120
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On PLUS shift to state 37
-- On OR shift to state 39
-- On MINUS shift to state 41
-- On LT shift to state 48
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LEQ shift to state 52
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IFF shift to state 56
-- On IF shift to state 26
-- On ID shift to state 28
-- On GT shift to state 58
-- On GEQ shift to state 60
-- On FN shift to state 30
-- On EQ shift to state 62
-- On DOT shift to state 121
-- On AS shift to state 64
-- On ARROW shift to state 66
-- On AND shift to state 54
-- On term shift to state 43
-- On ident_free_term shift to state 44
-- On Let shift to state 45

State 120:
Param -> LPAREN ID COLON term RPAREN . [ VBAR SEMISEMI LPAREN ID EQ DARROW COLON ]
-- On VBAR reduce production Param -> LPAREN ID COLON term RPAREN
-- On SEMISEMI reduce production Param -> LPAREN ID COLON term RPAREN
-- On LPAREN reduce production Param -> LPAREN ID COLON term RPAREN
-- On ID reduce production Param -> LPAREN ID COLON term RPAREN
-- On EQ reduce production Param -> LPAREN ID COLON term RPAREN
-- On DARROW reduce production Param -> LPAREN ID COLON term RPAREN
-- On COLON reduce production Param -> LPAREN ID COLON term RPAREN

State 121:
Param -> LPAREN ID COLON term DOT . term RPAREN [ VBAR SEMISEMI LPAREN ID EQ DARROW COLON ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On LT shift to state 9
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IF shift to state 26
-- On ID shift to state 28
-- On FN shift to state 30
-- On term shift to state 122
-- On ident_free_term shift to state 44
-- On Let shift to state 45

State 122:
Param -> LPAREN ID COLON term DOT term . RPAREN [ VBAR SEMISEMI LPAREN ID EQ DARROW COLON ]
ident_free_term -> term . ARROW term [ STRINGV STAR SEMI RPAREN REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . term [ STRINGV STAR SEMI RPAREN REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . AS term [ STRINGV STAR SEMI RPAREN REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . SEMI term [ STRINGV STAR SEMI RPAREN REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . EQ term [ STRINGV STAR SEMI RPAREN REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . IFF term [ STRINGV STAR SEMI RPAREN REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . LEQ term [ STRINGV STAR SEMI RPAREN REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . GEQ term [ STRINGV STAR SEMI RPAREN REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . LT term [ STRINGV STAR SEMI RPAREN REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . GT term [ STRINGV STAR SEMI RPAREN REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . PLUS term [ STRINGV STAR SEMI RPAREN REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . MINUS term [ STRINGV STAR SEMI RPAREN REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . AND term [ STRINGV STAR SEMI RPAREN REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . OR term [ STRINGV STAR SEMI RPAREN REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On SEMI shift to state 35
-- On RPAREN shift to state 123
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On PLUS shift to state 37
-- On OR shift to state 39
-- On MINUS shift to state 41
-- On LT shift to state 48
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LEQ shift to state 52
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IFF shift to state 56
-- On IF shift to state 26
-- On ID shift to state 28
-- On GT shift to state 58
-- On GEQ shift to state 60
-- On FN shift to state 30
-- On EQ shift to state 62
-- On AS shift to state 64
-- On ARROW shift to state 66
-- On AND shift to state 54
-- On term shift to state 43
-- On ident_free_term shift to state 44
-- On Let shift to state 45

State 123:
Param -> LPAREN ID COLON term DOT term RPAREN . [ VBAR SEMISEMI LPAREN ID EQ DARROW COLON ]
-- On VBAR reduce production Param -> LPAREN ID COLON term DOT term RPAREN
-- On SEMISEMI reduce production Param -> LPAREN ID COLON term DOT term RPAREN
-- On LPAREN reduce production Param -> LPAREN ID COLON term DOT term RPAREN
-- On ID reduce production Param -> LPAREN ID COLON term DOT term RPAREN
-- On EQ reduce production Param -> LPAREN ID COLON term DOT term RPAREN
-- On DARROW reduce production Param -> LPAREN ID COLON term DOT term RPAREN
-- On COLON reduce production Param -> LPAREN ID COLON term DOT term RPAREN

State 124:
ident_free_term -> REC ID ParamSeq . MaybeTy DARROW term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On COLON shift to state 18
-- On MaybeTy shift to state 125
-- On DARROW reduce production MaybeTy ->

State 125:
ident_free_term -> REC ID ParamSeq MaybeTy . DARROW term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On DARROW shift to state 126

State 126:
ident_free_term -> REC ID ParamSeq MaybeTy DARROW . term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On LT shift to state 9
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IF shift to state 26
-- On ID shift to state 28
-- On FN shift to state 30
-- On term shift to state 127
-- On ident_free_term shift to state 44
-- On Let shift to state 45

State 127:
ident_free_term -> term . ARROW term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . AS term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> REC ID ParamSeq MaybeTy DARROW term . [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . SEMI term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . EQ term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . IFF term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . LEQ term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . GEQ term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . LT term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . GT term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . PLUS term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . MINUS term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . AND term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
ident_free_term -> term . OR term [ VBAR THEN SUBTYPE STRINGV STAR SEMISEMI SEMI RSQUARE RPAREN REC RCURLY QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IN IFF IF ID GT GEQ FN EQEQ EQ ELSE DOT DARROW COMMA COLONDASH AS ARROW AND # ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On SEMI shift to state 35
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On PLUS shift to state 37
-- On OR shift to state 39
-- On MINUS shift to state 41
-- On LT shift to state 48
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LEQ shift to state 52
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IFF shift to state 56
-- On IF shift to state 26
-- On ID shift to state 28
-- On GT shift to state 58
-- On GEQ shift to state 60
-- On FN shift to state 30
-- On EQ shift to state 62
-- On AS shift to state 64
-- On ARROW shift to state 66
-- On AND shift to state 54
-- On term shift to state 43
-- On ident_free_term shift to state 44
-- On Let shift to state 45
-- On VBAR reduce production ident_free_term -> REC ID ParamSeq MaybeTy DARROW term
-- On THEN reduce production ident_free_term -> REC ID ParamSeq MaybeTy DARROW term
-- On SUBTYPE reduce production ident_free_term -> REC ID ParamSeq MaybeTy DARROW term
-- On SEMISEMI reduce production ident_free_term -> REC ID ParamSeq MaybeTy DARROW term
-- On RSQUARE reduce production ident_free_term -> REC ID ParamSeq MaybeTy DARROW term
-- On RPAREN reduce production ident_free_term -> REC ID ParamSeq MaybeTy DARROW term
-- On RCURLY reduce production ident_free_term -> REC ID ParamSeq MaybeTy DARROW term
-- On IN reduce production ident_free_term -> REC ID ParamSeq MaybeTy DARROW term
-- On EQEQ reduce production ident_free_term -> REC ID ParamSeq MaybeTy DARROW term
-- On ELSE reduce production ident_free_term -> REC ID ParamSeq MaybeTy DARROW term
-- On DOT reduce production ident_free_term -> REC ID ParamSeq MaybeTy DARROW term
-- On DARROW reduce production ident_free_term -> REC ID ParamSeq MaybeTy DARROW term
-- On COMMA reduce production ident_free_term -> REC ID ParamSeq MaybeTy DARROW term
-- On COLONDASH reduce production ident_free_term -> REC ID ParamSeq MaybeTy DARROW term
** Conflict on OR

State 128:
AssumeWord -> ASSUMENOT . [ ID COLONDASH ]
-- On ID reduce production AssumeWord -> ASSUMENOT
-- On COLONDASH reduce production AssumeWord -> ASSUMENOT

State 129:
AssumeWord -> ASSUME . [ ID COLONDASH ]
-- On ID reduce production AssumeWord -> ASSUME
-- On COLONDASH reduce production AssumeWord -> ASSUME

State 130:
command -> term . [ # ]
ident_free_term -> term . ARROW term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND # ]
ident_free_term -> term . term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND # ]
ident_free_term -> term . AS term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND # ]
ident_free_term -> term . SEMI term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND # ]
ident_free_term -> term . EQ term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND # ]
ident_free_term -> term . IFF term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND # ]
ident_free_term -> term . LEQ term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND # ]
ident_free_term -> term . GEQ term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND # ]
ident_free_term -> term . LT term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND # ]
ident_free_term -> term . GT term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND # ]
ident_free_term -> term . PLUS term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND # ]
ident_free_term -> term . MINUS term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND # ]
ident_free_term -> term . AND term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND # ]
ident_free_term -> term . OR term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND # ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On SEMI shift to state 35
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On PLUS shift to state 37
-- On OR shift to state 39
-- On MINUS shift to state 41
-- On LT shift to state 48
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LEQ shift to state 52
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IFF shift to state 56
-- On IF shift to state 26
-- On ID shift to state 28
-- On GT shift to state 58
-- On GEQ shift to state 60
-- On FN shift to state 30
-- On EQ shift to state 62
-- On AS shift to state 64
-- On ARROW shift to state 66
-- On AND shift to state 54
-- On term shift to state 43
-- On ident_free_term shift to state 44
-- On Let shift to state 45

State 131:
command' -> command . [ # ]
-- On # accept command

State 132:
command -> Let . [ # ]
ident_free_term -> Let . IN term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND # ]
-- On IN shift to state 46

State 133:
command -> AssumeWord . Environment COLONDASH Type SUBTYPE Type [ # ]
-- On ID shift to state 134
-- On NonEmptyEnvironment shift to state 143
-- On Environment shift to state 146
-- On Assumption shift to state 152
-- On COLONDASH reduce production Environment ->

State 134:
Assumption -> ID . COLON ident_free_term MaybeEqTerm [ COMMA COLONDASH ]
Assumption -> ID . COLON ident_free_term DOT term MaybeEqTerm [ COMMA COLONDASH ]
-- On COLON shift to state 135

State 135:
Assumption -> ID COLON . ident_free_term MaybeEqTerm [ COMMA COLONDASH ]
Assumption -> ID COLON . ident_free_term DOT term MaybeEqTerm [ COMMA COLONDASH ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On LT shift to state 9
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IF shift to state 26
-- On ID shift to state 28
-- On FN shift to state 30
-- On term shift to state 84
-- On ident_free_term shift to state 136
-- On Let shift to state 45

State 136:
Assumption -> ID COLON ident_free_term . MaybeEqTerm [ COMMA COLONDASH ]
Assumption -> ID COLON ident_free_term . DOT term MaybeEqTerm [ COMMA COLONDASH ]
term -> ident_free_term . [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
-- On EQEQ shift to state 137
-- On DOT shift to state 139
-- On MaybeEqTerm shift to state 142
-- On STRINGV reduce production term -> ident_free_term
-- On STAR reduce production term -> ident_free_term
-- On SEMI reduce production term -> ident_free_term
-- On REC reduce production term -> ident_free_term
-- On QUESTION reduce production term -> ident_free_term
-- On PLUS reduce production term -> ident_free_term
-- On OR reduce production term -> ident_free_term
-- On MINUS reduce production term -> ident_free_term
-- On LT reduce production term -> ident_free_term
-- On LPAREN reduce production term -> ident_free_term
-- On LET reduce production term -> ident_free_term
-- On LEQ reduce production term -> ident_free_term
-- On LCURLY reduce production term -> ident_free_term
-- On LAMBDA reduce production term -> ident_free_term
-- On INTV reduce production term -> ident_free_term
-- On IFF reduce production term -> ident_free_term
-- On IF reduce production term -> ident_free_term
-- On ID reduce production term -> ident_free_term
-- On GT reduce production term -> ident_free_term
-- On GEQ reduce production term -> ident_free_term
-- On FN reduce production term -> ident_free_term
-- On EQ reduce production term -> ident_free_term
-- On COMMA reduce production MaybeEqTerm ->
-- On COLONDASH reduce production MaybeEqTerm ->
-- On AS reduce production term -> ident_free_term
-- On ARROW reduce production term -> ident_free_term
-- On AND reduce production term -> ident_free_term

State 137:
MaybeEqTerm -> EQEQ . term [ COMMA COLONDASH ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On LT shift to state 9
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IF shift to state 26
-- On ID shift to state 28
-- On FN shift to state 30
-- On term shift to state 138
-- On ident_free_term shift to state 44
-- On Let shift to state 45

State 138:
MaybeEqTerm -> EQEQ term . [ COMMA COLONDASH ]
ident_free_term -> term . ARROW term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ COMMA COLONDASH AS ARROW AND ]
ident_free_term -> term . term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ COMMA COLONDASH AS ARROW AND ]
ident_free_term -> term . AS term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ COMMA COLONDASH AS ARROW AND ]
ident_free_term -> term . SEMI term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ COMMA COLONDASH AS ARROW AND ]
ident_free_term -> term . EQ term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ COMMA COLONDASH AS ARROW AND ]
ident_free_term -> term . IFF term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ COMMA COLONDASH AS ARROW AND ]
ident_free_term -> term . LEQ term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ COMMA COLONDASH AS ARROW AND ]
ident_free_term -> term . GEQ term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ COMMA COLONDASH AS ARROW AND ]
ident_free_term -> term . LT term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ COMMA COLONDASH AS ARROW AND ]
ident_free_term -> term . GT term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ COMMA COLONDASH AS ARROW AND ]
ident_free_term -> term . PLUS term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ COMMA COLONDASH AS ARROW AND ]
ident_free_term -> term . MINUS term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ COMMA COLONDASH AS ARROW AND ]
ident_free_term -> term . AND term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ COMMA COLONDASH AS ARROW AND ]
ident_free_term -> term . OR term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ COMMA COLONDASH AS ARROW AND ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On SEMI shift to state 35
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On PLUS shift to state 37
-- On OR shift to state 39
-- On MINUS shift to state 41
-- On LT shift to state 48
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LEQ shift to state 52
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IFF shift to state 56
-- On IF shift to state 26
-- On ID shift to state 28
-- On GT shift to state 58
-- On GEQ shift to state 60
-- On FN shift to state 30
-- On EQ shift to state 62
-- On AS shift to state 64
-- On ARROW shift to state 66
-- On AND shift to state 54
-- On term shift to state 43
-- On ident_free_term shift to state 44
-- On Let shift to state 45
-- On COMMA reduce production MaybeEqTerm -> EQEQ term
-- On COLONDASH reduce production MaybeEqTerm -> EQEQ term

State 139:
Assumption -> ID COLON ident_free_term DOT . term MaybeEqTerm [ COMMA COLONDASH ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On LT shift to state 9
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IF shift to state 26
-- On ID shift to state 28
-- On FN shift to state 30
-- On term shift to state 140
-- On ident_free_term shift to state 44
-- On Let shift to state 45

State 140:
Assumption -> ID COLON ident_free_term DOT term . MaybeEqTerm [ COMMA COLONDASH ]
ident_free_term -> term . ARROW term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQEQ EQ COMMA COLONDASH AS ARROW AND ]
ident_free_term -> term . term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQEQ EQ COMMA COLONDASH AS ARROW AND ]
ident_free_term -> term . AS term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQEQ EQ COMMA COLONDASH AS ARROW AND ]
ident_free_term -> term . SEMI term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQEQ EQ COMMA COLONDASH AS ARROW AND ]
ident_free_term -> term . EQ term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQEQ EQ COMMA COLONDASH AS ARROW AND ]
ident_free_term -> term . IFF term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQEQ EQ COMMA COLONDASH AS ARROW AND ]
ident_free_term -> term . LEQ term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQEQ EQ COMMA COLONDASH AS ARROW AND ]
ident_free_term -> term . GEQ term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQEQ EQ COMMA COLONDASH AS ARROW AND ]
ident_free_term -> term . LT term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQEQ EQ COMMA COLONDASH AS ARROW AND ]
ident_free_term -> term . GT term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQEQ EQ COMMA COLONDASH AS ARROW AND ]
ident_free_term -> term . PLUS term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQEQ EQ COMMA COLONDASH AS ARROW AND ]
ident_free_term -> term . MINUS term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQEQ EQ COMMA COLONDASH AS ARROW AND ]
ident_free_term -> term . AND term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQEQ EQ COMMA COLONDASH AS ARROW AND ]
ident_free_term -> term . OR term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQEQ EQ COMMA COLONDASH AS ARROW AND ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On SEMI shift to state 35
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On PLUS shift to state 37
-- On OR shift to state 39
-- On MINUS shift to state 41
-- On LT shift to state 48
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LEQ shift to state 52
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IFF shift to state 56
-- On IF shift to state 26
-- On ID shift to state 28
-- On GT shift to state 58
-- On GEQ shift to state 60
-- On FN shift to state 30
-- On EQEQ shift to state 137
-- On EQ shift to state 62
-- On AS shift to state 64
-- On ARROW shift to state 66
-- On AND shift to state 54
-- On term shift to state 43
-- On ident_free_term shift to state 44
-- On MaybeEqTerm shift to state 141
-- On Let shift to state 45
-- On COMMA reduce production MaybeEqTerm ->
-- On COLONDASH reduce production MaybeEqTerm ->

State 141:
Assumption -> ID COLON ident_free_term DOT term MaybeEqTerm . [ COMMA COLONDASH ]
-- On COMMA reduce production Assumption -> ID COLON ident_free_term DOT term MaybeEqTerm
-- On COLONDASH reduce production Assumption -> ID COLON ident_free_term DOT term MaybeEqTerm

State 142:
Assumption -> ID COLON ident_free_term MaybeEqTerm . [ COMMA COLONDASH ]
-- On COMMA reduce production Assumption -> ID COLON ident_free_term MaybeEqTerm
-- On COLONDASH reduce production Assumption -> ID COLON ident_free_term MaybeEqTerm

State 143:
Environment -> NonEmptyEnvironment . [ COLONDASH ]
NonEmptyEnvironment -> NonEmptyEnvironment . COMMA Assumption [ COMMA COLONDASH ]
-- On COMMA shift to state 144
-- On COLONDASH reduce production Environment -> NonEmptyEnvironment

State 144:
NonEmptyEnvironment -> NonEmptyEnvironment COMMA . Assumption [ COMMA COLONDASH ]
-- On ID shift to state 134
-- On Assumption shift to state 145

State 145:
NonEmptyEnvironment -> NonEmptyEnvironment COMMA Assumption . [ COMMA COLONDASH ]
-- On COMMA reduce production NonEmptyEnvironment -> NonEmptyEnvironment COMMA Assumption
-- On COLONDASH reduce production NonEmptyEnvironment -> NonEmptyEnvironment COMMA Assumption

State 146:
command -> AssumeWord Environment . COLONDASH Type SUBTYPE Type [ # ]
-- On COLONDASH shift to state 147

State 147:
command -> AssumeWord Environment COLONDASH . Type SUBTYPE Type [ # ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On LT shift to state 9
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IF shift to state 26
-- On ID shift to state 28
-- On FN shift to state 30
-- On term shift to state 51
-- On ident_free_term shift to state 44
-- On Type shift to state 148
-- On Let shift to state 45

State 148:
command -> AssumeWord Environment COLONDASH Type . SUBTYPE Type [ # ]
-- On SUBTYPE shift to state 149

State 149:
command -> AssumeWord Environment COLONDASH Type SUBTYPE . Type [ # ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On LT shift to state 9
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IF shift to state 26
-- On ID shift to state 28
-- On FN shift to state 30
-- On term shift to state 150
-- On ident_free_term shift to state 44
-- On Type shift to state 151
-- On Let shift to state 45

State 150:
Type -> term . [ # ]
ident_free_term -> term . ARROW term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND # ]
ident_free_term -> term . term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND # ]
ident_free_term -> term . AS term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND # ]
ident_free_term -> term . SEMI term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND # ]
ident_free_term -> term . EQ term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND # ]
ident_free_term -> term . IFF term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND # ]
ident_free_term -> term . LEQ term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND # ]
ident_free_term -> term . GEQ term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND # ]
ident_free_term -> term . LT term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND # ]
ident_free_term -> term . GT term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND # ]
ident_free_term -> term . PLUS term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND # ]
ident_free_term -> term . MINUS term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND # ]
ident_free_term -> term . AND term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND # ]
ident_free_term -> term . OR term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND # ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On SEMI shift to state 35
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On PLUS shift to state 37
-- On OR shift to state 39
-- On MINUS shift to state 41
-- On LT shift to state 48
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LEQ shift to state 52
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IFF shift to state 56
-- On IF shift to state 26
-- On ID shift to state 28
-- On GT shift to state 58
-- On GEQ shift to state 60
-- On FN shift to state 30
-- On EQ shift to state 62
-- On AS shift to state 64
-- On ARROW shift to state 66
-- On AND shift to state 54
-- On term shift to state 43
-- On ident_free_term shift to state 44
-- On Let shift to state 45

State 151:
command -> AssumeWord Environment COLONDASH Type SUBTYPE Type . [ # ]
-- On # reduce production command -> AssumeWord Environment COLONDASH Type SUBTYPE Type

State 152:
NonEmptyEnvironment -> Assumption . [ COMMA COLONDASH ]
-- On COMMA reduce production NonEmptyEnvironment -> Assumption
-- On COLONDASH reduce production NonEmptyEnvironment -> Assumption

State 153:
term' -> . term [ # ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On LT shift to state 9
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IF shift to state 26
-- On ID shift to state 28
-- On FN shift to state 30
-- On term shift to state 154
-- On ident_free_term shift to state 44
-- On Let shift to state 45

State 154:
term' -> term . [ # ]
ident_free_term -> term . ARROW term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND # ]
ident_free_term -> term . term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND # ]
ident_free_term -> term . AS term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND # ]
ident_free_term -> term . SEMI term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND # ]
ident_free_term -> term . EQ term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND # ]
ident_free_term -> term . IFF term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND # ]
ident_free_term -> term . LEQ term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND # ]
ident_free_term -> term . GEQ term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND # ]
ident_free_term -> term . LT term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND # ]
ident_free_term -> term . GT term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND # ]
ident_free_term -> term . PLUS term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND # ]
ident_free_term -> term . MINUS term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND # ]
ident_free_term -> term . AND term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND # ]
ident_free_term -> term . OR term [ STRINGV STAR SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND # ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On SEMI shift to state 35
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On PLUS shift to state 37
-- On OR shift to state 39
-- On MINUS shift to state 41
-- On LT shift to state 48
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LEQ shift to state 52
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IFF shift to state 56
-- On IF shift to state 26
-- On ID shift to state 28
-- On GT shift to state 58
-- On GEQ shift to state 60
-- On FN shift to state 30
-- On EQ shift to state 62
-- On AS shift to state 64
-- On ARROW shift to state 66
-- On AND shift to state 54
-- On term shift to state 43
-- On ident_free_term shift to state 44
-- On Let shift to state 45

State 155:
toplevel' -> . toplevel [ # ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On LT shift to state 9
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IF shift to state 26
-- On ID shift to state 28
-- On FN shift to state 30
-- On EOF shift to state 156
-- On DATATYPE shift to state 157
-- On ASSUMENOT shift to state 128
-- On ASSUME shift to state 129
-- On toplevel shift to state 168
-- On term shift to state 169
-- On ident_free_term shift to state 44
-- On command shift to state 170
-- On Let shift to state 173
-- On Datatype shift to state 174
-- On AssumeWord shift to state 177

State 156:
toplevel -> EOF . [ # ]
-- On # reduce production toplevel -> EOF

State 157:
Datatype -> DATATYPE . ID ParamSeq EQ ConstructorSeq [ SEMISEMI ]
-- On ID shift to state 158

State 158:
Datatype -> DATATYPE ID . ParamSeq EQ ConstructorSeq [ SEMISEMI ]
-- On LPAREN shift to state 5
-- On ID shift to state 16
-- On ParamSeq shift to state 159
-- On Param shift to state 82
-- On EQ reduce production ParamSeq ->

State 159:
Datatype -> DATATYPE ID ParamSeq . EQ ConstructorSeq [ SEMISEMI ]
-- On EQ shift to state 160

State 160:
Datatype -> DATATYPE ID ParamSeq EQ . ConstructorSeq [ SEMISEMI ]
-- On ID shift to state 161
-- On ConstructorSeq shift to state 164
-- On Constructor shift to state 165

State 161:
Constructor -> ID . OF ParamSeq [ VBAR SEMISEMI ]
Constructor -> ID . [ VBAR SEMISEMI ]
-- On OF shift to state 162
-- On VBAR reduce production Constructor -> ID
-- On SEMISEMI reduce production Constructor -> ID

State 162:
Constructor -> ID OF . ParamSeq [ VBAR SEMISEMI ]
-- On LPAREN shift to state 5
-- On ID shift to state 16
-- On ParamSeq shift to state 163
-- On Param shift to state 82
-- On VBAR reduce production ParamSeq ->
-- On SEMISEMI reduce production ParamSeq ->

State 163:
Constructor -> ID OF ParamSeq . [ VBAR SEMISEMI ]
-- On VBAR reduce production Constructor -> ID OF ParamSeq
-- On SEMISEMI reduce production Constructor -> ID OF ParamSeq

State 164:
Datatype -> DATATYPE ID ParamSeq EQ ConstructorSeq . [ SEMISEMI ]
-- On SEMISEMI reduce production Datatype -> DATATYPE ID ParamSeq EQ ConstructorSeq

State 165:
ConstructorSeq -> Constructor . [ SEMISEMI ]
ConstructorSeq -> Constructor . VBAR ConstructorSeq [ SEMISEMI ]
-- On VBAR shift to state 166
-- On SEMISEMI reduce production ConstructorSeq -> Constructor

State 166:
ConstructorSeq -> Constructor VBAR . ConstructorSeq [ SEMISEMI ]
-- On ID shift to state 161
-- On ConstructorSeq shift to state 167
-- On Constructor shift to state 165

State 167:
ConstructorSeq -> Constructor VBAR ConstructorSeq . [ SEMISEMI ]
-- On SEMISEMI reduce production ConstructorSeq -> Constructor VBAR ConstructorSeq

State 168:
toplevel' -> toplevel . [ # ]
-- On # accept toplevel

State 169:
command -> term . [ SEMISEMI ]
ident_free_term -> term . ARROW term [ STRINGV STAR SEMISEMI SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . term [ STRINGV STAR SEMISEMI SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . AS term [ STRINGV STAR SEMISEMI SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . SEMI term [ STRINGV STAR SEMISEMI SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . EQ term [ STRINGV STAR SEMISEMI SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . IFF term [ STRINGV STAR SEMISEMI SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . LEQ term [ STRINGV STAR SEMISEMI SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . GEQ term [ STRINGV STAR SEMISEMI SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . LT term [ STRINGV STAR SEMISEMI SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . GT term [ STRINGV STAR SEMISEMI SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . PLUS term [ STRINGV STAR SEMISEMI SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . MINUS term [ STRINGV STAR SEMISEMI SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . AND term [ STRINGV STAR SEMISEMI SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
ident_free_term -> term . OR term [ STRINGV STAR SEMISEMI SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On SEMI shift to state 35
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On PLUS shift to state 37
-- On OR shift to state 39
-- On MINUS shift to state 41
-- On LT shift to state 48
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LEQ shift to state 52
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IFF shift to state 56
-- On IF shift to state 26
-- On ID shift to state 28
-- On GT shift to state 58
-- On GEQ shift to state 60
-- On FN shift to state 30
-- On EQ shift to state 62
-- On AS shift to state 64
-- On ARROW shift to state 66
-- On AND shift to state 54
-- On term shift to state 43
-- On ident_free_term shift to state 44
-- On Let shift to state 45
-- On SEMISEMI reduce production command -> term

State 170:
toplevel -> command . SEMISEMI toplevel [ # ]
-- On SEMISEMI shift to state 171

State 171:
toplevel -> command SEMISEMI . toplevel [ # ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On LT shift to state 9
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IF shift to state 26
-- On ID shift to state 28
-- On FN shift to state 30
-- On EOF shift to state 156
-- On DATATYPE shift to state 157
-- On ASSUMENOT shift to state 128
-- On ASSUME shift to state 129
-- On toplevel shift to state 172
-- On term shift to state 169
-- On ident_free_term shift to state 44
-- On command shift to state 170
-- On Let shift to state 173
-- On Datatype shift to state 174
-- On AssumeWord shift to state 177

State 172:
toplevel -> command SEMISEMI toplevel . [ # ]
-- On # reduce production toplevel -> command SEMISEMI toplevel

State 173:
command -> Let . [ SEMISEMI ]
ident_free_term -> Let . IN term [ STRINGV STAR SEMISEMI SEMI REC QUESTION PLUS OR MINUS LT LPAREN LET LEQ LCURLY LAMBDA INTV IFF IF ID GT GEQ FN EQ AS ARROW AND ]
-- On IN shift to state 46
-- On SEMISEMI reduce production command -> Let

State 174:
toplevel -> Datatype . SEMISEMI toplevel [ # ]
-- On SEMISEMI shift to state 175

State 175:
toplevel -> Datatype SEMISEMI . toplevel [ # ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On LT shift to state 9
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IF shift to state 26
-- On ID shift to state 28
-- On FN shift to state 30
-- On EOF shift to state 156
-- On DATATYPE shift to state 157
-- On ASSUMENOT shift to state 128
-- On ASSUME shift to state 129
-- On toplevel shift to state 176
-- On term shift to state 169
-- On ident_free_term shift to state 44
-- On command shift to state 170
-- On Let shift to state 173
-- On Datatype shift to state 174
-- On AssumeWord shift to state 177

State 176:
toplevel -> Datatype SEMISEMI toplevel . [ # ]
-- On # reduce production toplevel -> Datatype SEMISEMI toplevel

State 177:
command -> AssumeWord . Environment COLONDASH Type SUBTYPE Type [ SEMISEMI ]
-- On ID shift to state 134
-- On NonEmptyEnvironment shift to state 143
-- On Environment shift to state 178
-- On Assumption shift to state 152
-- On COLONDASH reduce production Environment ->

State 178:
command -> AssumeWord Environment . COLONDASH Type SUBTYPE Type [ SEMISEMI ]
-- On COLONDASH shift to state 179

State 179:
command -> AssumeWord Environment COLONDASH . Type SUBTYPE Type [ SEMISEMI ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On LT shift to state 9
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IF shift to state 26
-- On ID shift to state 28
-- On FN shift to state 30
-- On term shift to state 51
-- On ident_free_term shift to state 44
-- On Type shift to state 180
-- On Let shift to state 45

State 180:
command -> AssumeWord Environment COLONDASH Type . SUBTYPE Type [ SEMISEMI ]
-- On SUBTYPE shift to state 181

State 181:
command -> AssumeWord Environment COLONDASH Type SUBTYPE . Type [ SEMISEMI ]
-- On STRINGV shift to state 1
-- On STAR shift to state 2
-- On REC shift to state 3
-- On QUESTION shift to state 8
-- On LT shift to state 9
-- On LPAREN shift to state 12
-- On LET shift to state 13
-- On LCURLY shift to state 19
-- On LAMBDA shift to state 22
-- On INTV shift to state 25
-- On IF shift to state 26
-- On ID shift to state 28
-- On FN shift to state 30
-- On term shift to state 51
-- On ident_free_term shift to state 44
-- On Type shift to state 182
-- On Let shift to state 45

State 182:
command -> AssumeWord Environment COLONDASH Type SUBTYPE Type . [ SEMISEMI ]
-- On SEMISEMI reduce production command -> AssumeWord Environment COLONDASH Type SUBTYPE Type

