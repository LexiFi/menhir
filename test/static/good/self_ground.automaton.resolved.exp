State 0:
## Known stack suffix:
##
## LR(1) items:
start' -> . start [ # ]
## Transitions:
-- On C shift to state 1
-- On A shift to state 2
-- On start shift to state 7
-- On self(A) shift to state 8
## Reductions:

State 1:
## Known stack suffix:
## C
## LR(1) items:
self(A) -> C . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production self(A) -> C

State 2:
## Known stack suffix:
## A
## LR(1) items:
self(A) -> A . self(B) [ # ]
## Transitions:
-- On C shift to state 3
-- On A shift to state 4
-- On self(B) shift to state 6
## Reductions:

State 3:
## Known stack suffix:
## C
## LR(1) items:
self(B) -> C . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production self(B) -> C

State 4:
## Known stack suffix:
## A
## LR(1) items:
self(B) -> A . self(B) [ # ]
## Transitions:
-- On C shift to state 3
-- On A shift to state 4
-- On self(B) shift to state 5
## Reductions:

State 5:
## Known stack suffix:
## A self(B)
## LR(1) items:
self(B) -> A self(B) . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production self(B) -> A self(B)

State 6:
## Known stack suffix:
## A self(B)
## LR(1) items:
self(A) -> A self(B) . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production self(A) -> A self(B)

State 7:
## Known stack suffix:
## start
## LR(1) items:
start' -> start . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept start

State 8:
## Known stack suffix:
## self(A)
## LR(1) items:
start -> self(A) . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production start -> self(A)

