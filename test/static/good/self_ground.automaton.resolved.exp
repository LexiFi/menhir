State 0:
start' -> . start [ # ]
-- On C shift to state 1
-- On A shift to state 2
-- On start shift to state 7
-- On self(A) shift to state 8

State 1:
self(A) -> C . [ # ]
-- On # reduce production self(A) -> C

State 2:
self(A) -> A . self(B) [ # ]
-- On C shift to state 3
-- On A shift to state 4
-- On self(B) shift to state 6

State 3:
self(B) -> C . [ # ]
-- On # reduce production self(B) -> C

State 4:
self(B) -> A . self(B) [ # ]
-- On C shift to state 3
-- On A shift to state 4
-- On self(B) shift to state 5

State 5:
self(B) -> A self(B) . [ # ]
-- On # reduce production self(B) -> A self(B)

State 6:
self(A) -> A self(B) . [ # ]
-- On # reduce production self(A) -> A self(B)

State 7:
start' -> start . [ # ]
-- On # accept start

State 8:
start -> self(A) . [ # ]
-- On # reduce production start -> self(A)

