State 0:
## Known stack suffix:
##
## LR(1) items:
phrase' -> . phrase [ # ]
## Transitions:
-- On TRUE shift to state 1
-- On IF shift to state 2
-- On FALSE shift to state 3
-- On phrase shift to state 9
-- On expression shift to state 10
## Reductions:

State 1:
## Known stack suffix:
## TRUE
## LR(1) items:
expression -> TRUE . [ THEN EOF ELSE ]
## Transitions:
## Reductions:
-- On THEN reduce production expression -> TRUE
-- On EOF reduce production expression -> TRUE
-- On ELSE reduce production expression -> TRUE

State 2:
## Known stack suffix:
## IF
## LR(1) items:
expression -> IF . expression THEN expression [ THEN EOF ELSE ]
expression -> IF . expression THEN expression ELSE expression [ THEN EOF ELSE ]
## Transitions:
-- On TRUE shift to state 1
-- On IF shift to state 2
-- On FALSE shift to state 3
-- On expression shift to state 4
## Reductions:

State 3:
## Known stack suffix:
## FALSE
## LR(1) items:
expression -> FALSE . [ THEN EOF ELSE ]
## Transitions:
## Reductions:
-- On THEN reduce production expression -> FALSE
-- On EOF reduce production expression -> FALSE
-- On ELSE reduce production expression -> FALSE

State 4:
## Known stack suffix:
## IF expression
## LR(1) items:
expression -> IF expression . THEN expression [ THEN EOF ELSE ]
expression -> IF expression . THEN expression ELSE expression [ THEN EOF ELSE ]
## Transitions:
-- On THEN shift to state 5
## Reductions:

State 5:
## Known stack suffix:
## IF expression THEN
## LR(1) items:
expression -> IF expression THEN . expression [ THEN EOF ELSE ]
expression -> IF expression THEN . expression ELSE expression [ THEN EOF ELSE ]
## Transitions:
-- On TRUE shift to state 1
-- On IF shift to state 2
-- On FALSE shift to state 3
-- On expression shift to state 6
## Reductions:

State 6:
## Known stack suffix:
## IF expression THEN expression
## LR(1) items:
expression -> IF expression THEN expression . [ THEN EOF ELSE ]
expression -> IF expression THEN expression . ELSE expression [ THEN EOF ELSE ]
## Transitions:
-- On ELSE shift to state 7
## Reductions:
-- On THEN reduce production expression -> IF expression THEN expression
-- On EOF reduce production expression -> IF expression THEN expression

State 7:
## Known stack suffix:
## IF expression THEN expression ELSE
## LR(1) items:
expression -> IF expression THEN expression ELSE . expression [ THEN EOF ELSE ]
## Transitions:
-- On TRUE shift to state 1
-- On IF shift to state 2
-- On FALSE shift to state 3
-- On expression shift to state 8
## Reductions:

State 8:
## Known stack suffix:
## IF expression THEN expression ELSE expression
## LR(1) items:
expression -> IF expression THEN expression ELSE expression . [ THEN EOF ELSE ]
## Transitions:
## Reductions:
-- On THEN reduce production expression -> IF expression THEN expression ELSE expression
-- On EOF reduce production expression -> IF expression THEN expression ELSE expression
-- On ELSE reduce production expression -> IF expression THEN expression ELSE expression

State 9:
## Known stack suffix:
## phrase
## LR(1) items:
phrase' -> phrase . [ # ]
## Transitions:
## Reductions:
-- On # accept phrase

State 10:
## Known stack suffix:
## expression
## LR(1) items:
phrase -> expression . EOF [ # ]
## Transitions:
-- On EOF shift to state 11
## Reductions:

State 11:
## Known stack suffix:
## expression EOF
## LR(1) items:
phrase -> expression EOF . [ # ]
## Transitions:
## Reductions:
-- On # reduce production phrase -> expression EOF

