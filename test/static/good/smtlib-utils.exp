File "<standard.mly>", line 226, characters 8-21:
Warning: symbol nonempty_list(tyvar) is unreachable from any of the start symbol(s).
File "smtlib-utils.mly", line 182, characters 0-8:
Warning: symbol par_term is unreachable from any of the start symbol(s).
Grammar has 45 nonterminal symbols, among which 4 start symbols.
Grammar has 31 terminal symbols.
Grammar has 105 productions.
nullable(var) = false
nullable(tyvar) = false
nullable(typed_var) = false
nullable(ty_decl_paren) = false
nullable(ty_arrow_args) = false
nullable(ty) = false
nullable(term) = false
nullable(stmt) = false
nullable(prop_lit) = false
nullable(parse_ty) = false
nullable(parse_term) = false
nullable(parse_list) = false
nullable(parse) = false
nullable(nonempty_list(var)) = false
nullable(nonempty_list(typed_var)) = false
nullable(nonempty_list(ty_decl_paren)) = false
nullable(nonempty_list(ty)) = false
nullable(nonempty_list(term)) = false
nullable(nonempty_list(funs_rec_decl)) = false
nullable(nonempty_list(cstors)) = false
nullable(nonempty_list(cstor)) = false
nullable(nonempty_list(case)) = false
nullable(nonempty_list(binding)) = false
nullable(nonempty_list(attr)) = false
nullable(list(tyvar)) = true
nullable(list(typed_var)) = true
nullable(list(ty)) = true
nullable(list(stmt)) = true
nullable(list(prop_lit)) = true
nullable(list(cstor_arg)) = true
nullable(list(anystr)) = true
nullable(funs_rec_decl) = false
nullable(fun_rec) = false
nullable(fun_def_mono) = false
nullable(fun_decl_mono) = false
nullable(fun_decl) = false
nullable(cstors) = false
nullable(cstor_dec) = false
nullable(cstor_arg) = false
nullable(cstor) = false
nullable(composite_term) = false
nullable(case) = false
nullable(binding) = false
nullable(attr) = false
nullable(anystr) = false
first(var) = WILDCARD IDENT
first(tyvar) = IDENT
first(typed_var) = LEFT_PAREN
first(ty_decl_paren) = LEFT_PAREN
first(ty_arrow_args) = LEFT_PAREN IDENT
first(ty) = LEFT_PAREN IDENT
first(term) = error QUOTED LEFT_PAREN IDENT
first(stmt) = error LEFT_PAREN
first(prop_lit) = WILDCARD LEFT_PAREN IDENT
first(parse_ty) = LEFT_PAREN IDENT
first(parse_term) = error QUOTED LEFT_PAREN IDENT
first(parse_list) = error LEFT_PAREN EOI
first(parse) = error LEFT_PAREN
first(nonempty_list(var)) = WILDCARD IDENT
first(nonempty_list(typed_var)) = LEFT_PAREN
first(nonempty_list(ty_decl_paren)) = LEFT_PAREN
first(nonempty_list(ty)) = LEFT_PAREN IDENT
first(nonempty_list(term)) = error QUOTED LEFT_PAREN IDENT
first(nonempty_list(funs_rec_decl)) = LEFT_PAREN
first(nonempty_list(cstors)) = LEFT_PAREN
first(nonempty_list(cstor)) = LEFT_PAREN
first(nonempty_list(case)) = LEFT_PAREN
first(nonempty_list(binding)) = LEFT_PAREN
first(nonempty_list(attr)) = IDENT
first(list(tyvar)) = IDENT
first(list(typed_var)) = LEFT_PAREN
first(list(ty)) = LEFT_PAREN IDENT
first(list(stmt)) = error LEFT_PAREN
first(list(prop_lit)) = WILDCARD LEFT_PAREN IDENT
first(list(cstor_arg)) = LEFT_PAREN
first(list(anystr)) = QUOTED IDENT
first(funs_rec_decl) = LEFT_PAREN
first(fun_rec) = LEFT_PAREN IDENT
first(fun_def_mono) = IDENT
first(fun_decl_mono) = IDENT
first(fun_decl) = LEFT_PAREN IDENT
first(cstors) = LEFT_PAREN
first(cstor_dec) = LEFT_PAREN
first(cstor_arg) = LEFT_PAREN
first(cstor) = LEFT_PAREN
first(composite_term) = LEFT_PAREN
first(case) = LEFT_PAREN
first(binding) = LEFT_PAREN
first(attr) = IDENT
first(anystr) = QUOTED IDENT
minimal(var) = (* 1 *) WILDCARD
minimal(tyvar) = (* 1 *) IDENT
minimal(typed_var) = (* 4 *) LEFT_PAREN WILDCARD IDENT RIGHT_PAREN
minimal(ty_decl_paren) = (* 4 *) LEFT_PAREN IDENT IDENT RIGHT_PAREN
minimal(ty_arrow_args) = (* 2 *) IDENT IDENT
minimal(ty) = (* 1 *) IDENT
minimal(term) = (* 1 *) QUOTED
minimal(stmt) = (* 3 *) LEFT_PAREN CHECK_SAT RIGHT_PAREN
minimal(prop_lit) = (* 1 *) WILDCARD
minimal(parse_ty) = (* 2 *) IDENT EOI
minimal(parse_term) = (* 2 *) QUOTED EOI
minimal(parse_list) = (* 1 *) EOI
minimal(parse) = (* 4 *) LEFT_PAREN CHECK_SAT RIGHT_PAREN EOI
minimal(nonempty_list(var)) = (* 1 *) WILDCARD
minimal(nonempty_list(typed_var)) = (* 4 *) LEFT_PAREN WILDCARD IDENT RIGHT_PAREN
minimal(nonempty_list(ty_decl_paren)) = (* 4 *) LEFT_PAREN IDENT IDENT RIGHT_PAREN
minimal(nonempty_list(ty)) = (* 1 *) IDENT
minimal(nonempty_list(term)) = (* 1 *) QUOTED
minimal(nonempty_list(funs_rec_decl)) = (* 6 *) LEFT_PAREN IDENT LEFT_PAREN RIGHT_PAREN IDENT RIGHT_PAREN
minimal(nonempty_list(cstors)) = (* 5 *) LEFT_PAREN LEFT_PAREN IDENT RIGHT_PAREN RIGHT_PAREN
minimal(nonempty_list(cstor)) = (* 3 *) LEFT_PAREN IDENT RIGHT_PAREN
minimal(nonempty_list(case)) = (* 4 *) LEFT_PAREN IDENT QUOTED RIGHT_PAREN
minimal(nonempty_list(binding)) = (* 4 *) LEFT_PAREN WILDCARD QUOTED RIGHT_PAREN
minimal(nonempty_list(attr)) = (* 2 *) IDENT IDENT
minimal(list(tyvar)) = (* 0 *)
minimal(list(typed_var)) = (* 0 *)
minimal(list(ty)) = (* 0 *)
minimal(list(stmt)) = (* 0 *)
minimal(list(prop_lit)) = (* 0 *)
minimal(list(cstor_arg)) = (* 0 *)
minimal(list(anystr)) = (* 0 *)
minimal(funs_rec_decl) = (* 6 *) LEFT_PAREN IDENT LEFT_PAREN RIGHT_PAREN IDENT RIGHT_PAREN
minimal(fun_rec) = (* 5 *) IDENT LEFT_PAREN RIGHT_PAREN IDENT QUOTED
minimal(fun_def_mono) = (* 4 *) IDENT LEFT_PAREN RIGHT_PAREN IDENT
minimal(fun_decl_mono) = (* 4 *) IDENT LEFT_PAREN RIGHT_PAREN IDENT
minimal(fun_decl) = (* 4 *) IDENT LEFT_PAREN RIGHT_PAREN IDENT
minimal(cstors) = (* 5 *) LEFT_PAREN LEFT_PAREN IDENT RIGHT_PAREN RIGHT_PAREN
minimal(cstor_dec) = (* 3 *) LEFT_PAREN IDENT RIGHT_PAREN
minimal(cstor_arg) = (* 4 *) LEFT_PAREN IDENT IDENT RIGHT_PAREN
minimal(cstor) = (* 3 *) LEFT_PAREN IDENT RIGHT_PAREN
minimal(composite_term) = (* 3 *) LEFT_PAREN QUOTED RIGHT_PAREN
minimal(case) = (* 4 *) LEFT_PAREN IDENT QUOTED RIGHT_PAREN
minimal(binding) = (* 4 *) LEFT_PAREN WILDCARD QUOTED RIGHT_PAREN
minimal(attr) = (* 2 *) IDENT IDENT
minimal(anystr) = (* 1 *) IDENT
maximal(var) = 1
maximal(tyvar) = 1
maximal(typed_var) = infinity
maximal(ty_decl_paren) = 4
maximal(ty_arrow_args) = infinity
maximal(ty) = infinity
maximal(term) = infinity
maximal(stmt) = infinity
maximal(prop_lit) = 4
maximal(parse_ty) = infinity
maximal(parse_term) = infinity
maximal(parse_list) = infinity
maximal(parse) = infinity
maximal(nonempty_list(var)) = infinity
maximal(nonempty_list(typed_var)) = infinity
maximal(nonempty_list(ty_decl_paren)) = infinity
maximal(nonempty_list(ty)) = infinity
maximal(nonempty_list(term)) = infinity
maximal(nonempty_list(funs_rec_decl)) = infinity
maximal(nonempty_list(cstors)) = infinity
maximal(nonempty_list(cstor)) = infinity
maximal(nonempty_list(case)) = infinity
maximal(nonempty_list(binding)) = infinity
maximal(nonempty_list(attr)) = infinity
maximal(list(tyvar)) = infinity
maximal(list(typed_var)) = infinity
maximal(list(ty)) = infinity
maximal(list(stmt)) = infinity
maximal(list(prop_lit)) = infinity
maximal(list(cstor_arg)) = infinity
maximal(list(anystr)) = infinity
maximal(funs_rec_decl) = infinity
maximal(fun_rec) = infinity
maximal(fun_def_mono) = infinity
maximal(fun_decl_mono) = infinity
maximal(fun_decl) = infinity
maximal(cstors) = infinity
maximal(cstor_dec) = infinity
maximal(cstor_arg) = infinity
maximal(cstor) = infinity
maximal(composite_term) = infinity
maximal(case) = infinity
maximal(binding) = infinity
maximal(attr) = 2
maximal(anystr) = 1
follow(var) = error WILDCARD RIGHT_PAREN QUOTED LEFT_PAREN IDENT
follow(tyvar) = RIGHT_PAREN IDENT
follow(typed_var) = RIGHT_PAREN LEFT_PAREN
follow(ty_decl_paren) = RIGHT_PAREN LEFT_PAREN
follow(ty_arrow_args) = RIGHT_PAREN
follow(ty) = error RIGHT_PAREN QUOTED LEFT_PAREN IDENT EOI
follow(term) = error RIGHT_PAREN QUOTED LEFT_PAREN IDENT EOI
follow(stmt) = error LEFT_PAREN EOI
follow(prop_lit) = WILDCARD RIGHT_PAREN LEFT_PAREN IDENT
follow(parse_ty) = #
follow(parse_term) = #
follow(parse_list) = #
follow(parse) = #
follow(nonempty_list(var)) = RIGHT_PAREN
follow(nonempty_list(typed_var)) = RIGHT_PAREN
follow(nonempty_list(ty_decl_paren)) = RIGHT_PAREN
follow(nonempty_list(ty)) = RIGHT_PAREN
follow(nonempty_list(term)) = RIGHT_PAREN
follow(nonempty_list(funs_rec_decl)) = RIGHT_PAREN
follow(nonempty_list(cstors)) = RIGHT_PAREN
follow(nonempty_list(cstor)) = RIGHT_PAREN
follow(nonempty_list(case)) = RIGHT_PAREN
follow(nonempty_list(binding)) = RIGHT_PAREN
follow(nonempty_list(attr)) = RIGHT_PAREN
follow(list(tyvar)) = RIGHT_PAREN
follow(list(typed_var)) = RIGHT_PAREN
follow(list(ty)) = RIGHT_PAREN
follow(list(stmt)) = EOI
follow(list(prop_lit)) = RIGHT_PAREN
follow(list(cstor_arg)) = RIGHT_PAREN
follow(list(anystr)) = RIGHT_PAREN
follow(funs_rec_decl) = RIGHT_PAREN LEFT_PAREN
follow(fun_rec) = RIGHT_PAREN
follow(fun_def_mono) = error RIGHT_PAREN QUOTED LEFT_PAREN IDENT
follow(fun_decl_mono) = RIGHT_PAREN
follow(fun_decl) = RIGHT_PAREN
follow(cstors) = RIGHT_PAREN LEFT_PAREN
follow(cstor_dec) = RIGHT_PAREN LEFT_PAREN
follow(cstor_arg) = RIGHT_PAREN LEFT_PAREN
follow(cstor) = RIGHT_PAREN LEFT_PAREN
follow(composite_term) = error RIGHT_PAREN QUOTED LEFT_PAREN IDENT EOI
follow(case) = RIGHT_PAREN LEFT_PAREN
follow(binding) = RIGHT_PAREN LEFT_PAREN
follow(attr) = RIGHT_PAREN IDENT
follow(anystr) = RIGHT_PAREN QUOTED IDENT
Built an LR(0) automaton with 291 states.
The grammar is not SLR(1) -- 2 states have a conflict.
The construction mode is pager.
Built an LR(1) automaton with 435 states.
129 out of 435 states have a default reduction.
The action table is 13920 entries; 637 non-zero; 758 compressed.
The action table occupies roughly 1608 bytes.
The goto table is 21315 entries; 280 non-zero; 715 compressed.
The goto table occupies roughly 1520 bytes.
The error table occupies roughly 1776 bytes.
The default_reduction table occupies roughly 472 bytes.
The lhs table occupies roughly 144 bytes.
The trace table occupies roughly 8 bytes.
