State 0:
## Known stack suffix:
##
## LR(1) items:
main' -> . main [ # ]
## Transitions:
-- On A shift to state 1
-- On main shift to state 3
-- On liste(A) shift to state 4
## Reductions:
-- On EOF
--   reduce production liste(A) ->

State 1:
## Known stack suffix:
## A
## LR(1) items:
liste(A) -> A . liste(A) [ EOF ]
## Transitions:
-- On A shift to state 1
-- On liste(A) shift to state 2
## Reductions:
-- On EOF
--   reduce production liste(A) ->

State 2:
## Known stack suffix:
## A liste(A)
## LR(1) items:
liste(A) -> A liste(A) . [ EOF ]
## Transitions:
## Reductions:
-- On EOF
--   reduce production liste(A) -> A liste(A)

State 3:
## Known stack suffix:
## main
## LR(1) items:
main' -> main . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept main

State 4:
## Known stack suffix:
## liste(A)
## LR(1) items:
main -> liste(A) . EOF [ # ]
## Transitions:
-- On EOF shift to state 5
## Reductions:

State 5:
## Known stack suffix:
## liste(A) EOF
## LR(1) items:
main -> liste(A) EOF . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production main -> liste(A) EOF

