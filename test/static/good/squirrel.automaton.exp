State 0:
## Known stack suffix:
##
## LR(1) items:
declarations' -> . declarations [ # ]
## Transitions:
-- On TERM shift to state 1
-- On SYSTEM shift to state 144
-- On SIGNATURE shift to state 213
-- On SENC shift to state 222
-- On PROCESS shift to state 228
-- On NAME shift to state 233
-- On MUTABLE shift to state 241
-- On HASH shift to state 248
-- On CHANNEL shift to state 257
-- On AXIOM shift to state 259
-- On AENC shift to state 268
-- On ABSTRACT shift to state 274
-- On declarations shift to state 285
-- On declaration_list shift to state 286
-- On declaration_i shift to state 288
-- On declaration shift to state 289
## Reductions:

State 1:
## Known stack suffix:
## TERM
## LR(1) items:
declaration_i -> TERM . lsymb opt_arg_list COLON msg_or_bool EQ term [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On ID shift to state 2
-- On lsymb shift to state 3
## Reductions:

State 2:
## Known stack suffix:
## ID
## LR(1) items:
lsymb -> ID . [ XOR WITH TRUE THEN TERM SYSTEM SUCHTHAT SLASHSLASH SLASHEQUAL SLASH SIGNATURE SEQ SENC SEMICOLON RPAREN RBRACKET RANGLE QMARK PROCESS PRED PLUS PARALLEL OR NOT NEQ NAME MUTABLE MINUS LPAREN LEQ LANGLE INIT IN ID HASH HAPPENS GEQ FALSE EXP EXN EQ EOF ELSE DOT DIFF DEQUIVARROW DARROW COMMA COLON CHANNEL BY BANGU AXIOM AT ASSIGN AS ARROW AND AENC ABSTRACT ]
## Transitions:
## Reductions:
-- On XOR WITH TRUE THEN TERM SYSTEM SUCHTHAT SLASHSLASH SLASHEQUAL SLASH SIGNATURE SEQ SENC SEMICOLON RPAREN RBRACKET RANGLE QMARK PROCESS PRED PLUS PARALLEL OR NOT NEQ NAME MUTABLE MINUS LPAREN LEQ LANGLE INIT IN ID HASH HAPPENS GEQ FALSE EXP EXN EQ EOF ELSE DOT DIFF DEQUIVARROW DARROW COMMA COLON CHANNEL BY BANGU AXIOM AT ASSIGN AS ARROW AND AENC ABSTRACT
--   reduce production lsymb -> ID

State 3:
## Known stack suffix:
## TERM lsymb
## LR(1) items:
declaration_i -> TERM lsymb . opt_arg_list COLON msg_or_bool EQ term [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On LPAREN shift to state 4
-- On opt_arg_list shift to state 19
## Reductions:
-- On COLON
--   reduce production opt_arg_list ->

State 4:
## Known stack suffix:
## LPAREN
## LR(1) items:
opt_arg_list -> LPAREN . arg_list RPAREN [ EQ COLON ]
## Transitions:
-- On ID shift to state 2
-- On lsymb shift to state 5
-- On ids shift to state 8
-- On arg_list shift to state 17
## Reductions:
-- On RPAREN
--   reduce production arg_list ->

State 5:
## Known stack suffix:
## lsymb
## LR(1) items:
ids -> lsymb . [ COLON ARROW ]
ids -> lsymb . COMMA ids [ COLON ARROW ]
## Transitions:
-- On COMMA shift to state 6
## Reductions:
-- On COLON ARROW
--   reduce production ids -> lsymb

State 6:
## Known stack suffix:
## lsymb COMMA
## LR(1) items:
ids -> lsymb COMMA . ids [ COLON ARROW ]
## Transitions:
-- On ID shift to state 2
-- On lsymb shift to state 5
-- On ids shift to state 7
## Reductions:

State 7:
## Known stack suffix:
## lsymb COMMA ids
## LR(1) items:
ids -> lsymb COMMA ids . [ COLON ARROW ]
## Transitions:
## Reductions:
-- On COLON ARROW
--   reduce production ids -> lsymb COMMA ids

State 8:
## Known stack suffix:
## ids
## LR(1) items:
arg_list -> ids . COLON kind [ RPAREN ]
arg_list -> ids . COLON kind COMMA arg_list [ RPAREN ]
## Transitions:
-- On COLON shift to state 9
## Reductions:

State 9:
## Known stack suffix:
## ids COLON
## LR(1) items:
arg_list -> ids COLON . kind [ RPAREN ]
arg_list -> ids COLON . kind COMMA arg_list [ RPAREN ]
## Transitions:
-- On TIMESTAMP shift to state 10
-- On MESSAGE shift to state 11
-- On INDEX shift to state 12
-- On BOOLEAN shift to state 13
-- On kind shift to state 14
## Reductions:

State 10:
## Known stack suffix:
## TIMESTAMP
## LR(1) items:
kind -> TIMESTAMP . [ TRUE SEQ RPAREN PRED NOT LPAREN LANGLE INIT IF ID HAPPENS FORALL FIND FALSE EXISTS DIFF COMMA ]
## Transitions:
## Reductions:
-- On TRUE SEQ RPAREN PRED NOT LPAREN LANGLE INIT IF ID HAPPENS FORALL FIND FALSE EXISTS DIFF COMMA
--   reduce production kind -> TIMESTAMP

State 11:
## Known stack suffix:
## MESSAGE
## LR(1) items:
kind -> MESSAGE . [ TRUE SEQ RPAREN PRED NOT LPAREN LANGLE INIT IF ID HAPPENS FORALL FIND FALSE EXISTS DIFF COMMA ]
## Transitions:
## Reductions:
-- On TRUE SEQ RPAREN PRED NOT LPAREN LANGLE INIT IF ID HAPPENS FORALL FIND FALSE EXISTS DIFF COMMA
--   reduce production kind -> MESSAGE

State 12:
## Known stack suffix:
## INDEX
## LR(1) items:
kind -> INDEX . [ TRUE SEQ RPAREN PRED NOT LPAREN LANGLE INIT IF ID HAPPENS FORALL FIND FALSE EXISTS DIFF COMMA ]
## Transitions:
## Reductions:
-- On TRUE SEQ RPAREN PRED NOT LPAREN LANGLE INIT IF ID HAPPENS FORALL FIND FALSE EXISTS DIFF COMMA
--   reduce production kind -> INDEX

State 13:
## Known stack suffix:
## BOOLEAN
## LR(1) items:
kind -> BOOLEAN . [ TRUE SEQ RPAREN PRED NOT LPAREN LANGLE INIT IF ID HAPPENS FORALL FIND FALSE EXISTS DIFF COMMA ]
## Transitions:
## Reductions:
-- On TRUE SEQ RPAREN PRED NOT LPAREN LANGLE INIT IF ID HAPPENS FORALL FIND FALSE EXISTS DIFF COMMA
--   reduce production kind -> BOOLEAN

State 14:
## Known stack suffix:
## ids COLON kind
## LR(1) items:
arg_list -> ids COLON kind . [ RPAREN ]
arg_list -> ids COLON kind . COMMA arg_list [ RPAREN ]
## Transitions:
-- On COMMA shift to state 15
## Reductions:
-- On RPAREN
--   reduce production arg_list -> ids COLON kind

State 15:
## Known stack suffix:
## ids COLON kind COMMA
## LR(1) items:
arg_list -> ids COLON kind COMMA . arg_list [ RPAREN ]
## Transitions:
-- On ID shift to state 2
-- On lsymb shift to state 5
-- On ids shift to state 8
-- On arg_list shift to state 16
## Reductions:
-- On RPAREN
--   reduce production arg_list ->

State 16:
## Known stack suffix:
## ids COLON kind COMMA arg_list
## LR(1) items:
arg_list -> ids COLON kind COMMA arg_list . [ RPAREN ]
## Transitions:
## Reductions:
-- On RPAREN
--   reduce production arg_list -> ids COLON kind COMMA arg_list

State 17:
## Known stack suffix:
## LPAREN arg_list
## LR(1) items:
opt_arg_list -> LPAREN arg_list . RPAREN [ EQ COLON ]
## Transitions:
-- On RPAREN shift to state 18
## Reductions:

State 18:
## Known stack suffix:
## LPAREN arg_list RPAREN
## LR(1) items:
opt_arg_list -> LPAREN arg_list RPAREN . [ EQ COLON ]
## Transitions:
## Reductions:
-- On EQ COLON
--   reduce production opt_arg_list -> LPAREN arg_list RPAREN

State 19:
## Known stack suffix:
## TERM lsymb opt_arg_list
## LR(1) items:
declaration_i -> TERM lsymb opt_arg_list . COLON msg_or_bool EQ term [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On COLON shift to state 20
## Reductions:

State 20:
## Known stack suffix:
## TERM lsymb opt_arg_list COLON
## LR(1) items:
declaration_i -> TERM lsymb opt_arg_list COLON . msg_or_bool EQ term [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On MESSAGE shift to state 21
-- On BOOLEAN shift to state 22
-- On msg_or_bool shift to state 23
## Reductions:

State 21:
## Known stack suffix:
## MESSAGE
## LR(1) items:
msg_or_bool -> MESSAGE . [ EQ ]
## Transitions:
## Reductions:
-- On EQ
--   reduce production msg_or_bool -> MESSAGE

State 22:
## Known stack suffix:
## BOOLEAN
## LR(1) items:
msg_or_bool -> BOOLEAN . [ EQ ]
## Transitions:
## Reductions:
-- On EQ
--   reduce production msg_or_bool -> BOOLEAN

State 23:
## Known stack suffix:
## TERM lsymb opt_arg_list COLON msg_or_bool
## LR(1) items:
declaration_i -> TERM lsymb opt_arg_list COLON msg_or_bool . EQ term [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On EQ shift to state 24
## Reductions:

State 24:
## Known stack suffix:
## TERM lsymb opt_arg_list COLON msg_or_bool EQ
## LR(1) items:
declaration_i -> TERM lsymb opt_arg_list COLON msg_or_bool EQ . term [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On TRUE shift to state 25
-- On SEQ shift to state 26
-- On PRED shift to state 30
-- On NOT shift to state 32
-- On LPAREN shift to state 33
-- On LANGLE shift to state 34
-- On INIT shift to state 35
-- On IF shift to state 36
-- On ID shift to state 2
-- On HAPPENS shift to state 37
-- On FORALL shift to state 39
-- On FIND shift to state 45
-- On FALSE shift to state 51
-- On EXISTS shift to state 52
-- On DIFF shift to state 57
-- On term_i shift to state 59
-- On term shift to state 143
-- On sterm_i shift to state 65
-- On lsymb shift to state 66
## Reductions:

State 25:
## Known stack suffix:
## TRUE
## LR(1) items:
sterm_i -> TRUE . [ XOR TRUE THEN TERM SYSTEM SLASHSLASH SLASHEQUAL SLASH SIGNATURE SEQ SENC SEMICOLON RPAREN RBRACKET RANGLE QMARK PROCESS PRED PLUS PARALLEL OR NOT NEQ NAME MUTABLE MINUS LPAREN LEQ LANGLE INIT IN ID HASH HAPPENS GEQ FALSE EXP EXN EQ EOF ELSE DOT DIFF DEQUIVARROW DARROW COMMA CHANNEL BY BANGU AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
## Reductions:
-- On XOR TRUE THEN TERM SYSTEM SLASHSLASH SLASHEQUAL SLASH SIGNATURE SEQ SENC SEMICOLON RPAREN RBRACKET RANGLE QMARK PROCESS PRED PLUS PARALLEL OR NOT NEQ NAME MUTABLE MINUS LPAREN LEQ LANGLE INIT IN ID HASH HAPPENS GEQ FALSE EXP EXN EQ EOF ELSE DOT DIFF DEQUIVARROW DARROW COMMA CHANNEL BY BANGU AXIOM AS ARROW AND AENC ABSTRACT
--   reduce production sterm_i -> TRUE

State 26:
## Known stack suffix:
## SEQ
## LR(1) items:
sterm_i -> SEQ . LPAREN ids ARROW term RPAREN [ XOR TRUE THEN TERM SYSTEM SLASHSLASH SLASHEQUAL SLASH SIGNATURE SEQ SENC SEMICOLON RPAREN RBRACKET RANGLE QMARK PROCESS PRED PLUS PARALLEL OR NOT NEQ NAME MUTABLE MINUS LPAREN LEQ LANGLE INIT IN ID HASH HAPPENS GEQ FALSE EXP EXN EQ EOF ELSE DOT DIFF DEQUIVARROW DARROW COMMA CHANNEL BY BANGU AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On LPAREN shift to state 27
## Reductions:

State 27:
## Known stack suffix:
## SEQ LPAREN
## LR(1) items:
sterm_i -> SEQ LPAREN . ids ARROW term RPAREN [ XOR TRUE THEN TERM SYSTEM SLASHSLASH SLASHEQUAL SLASH SIGNATURE SEQ SENC SEMICOLON RPAREN RBRACKET RANGLE QMARK PROCESS PRED PLUS PARALLEL OR NOT NEQ NAME MUTABLE MINUS LPAREN LEQ LANGLE INIT IN ID HASH HAPPENS GEQ FALSE EXP EXN EQ EOF ELSE DOT DIFF DEQUIVARROW DARROW COMMA CHANNEL BY BANGU AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On ID shift to state 2
-- On lsymb shift to state 5
-- On ids shift to state 28
## Reductions:

State 28:
## Known stack suffix:
## SEQ LPAREN ids
## LR(1) items:
sterm_i -> SEQ LPAREN ids . ARROW term RPAREN [ XOR TRUE THEN TERM SYSTEM SLASHSLASH SLASHEQUAL SLASH SIGNATURE SEQ SENC SEMICOLON RPAREN RBRACKET RANGLE QMARK PROCESS PRED PLUS PARALLEL OR NOT NEQ NAME MUTABLE MINUS LPAREN LEQ LANGLE INIT IN ID HASH HAPPENS GEQ FALSE EXP EXN EQ EOF ELSE DOT DIFF DEQUIVARROW DARROW COMMA CHANNEL BY BANGU AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On ARROW shift to state 29
## Reductions:

State 29:
## Known stack suffix:
## SEQ LPAREN ids ARROW
## LR(1) items:
sterm_i -> SEQ LPAREN ids ARROW . term RPAREN [ XOR TRUE THEN TERM SYSTEM SLASHSLASH SLASHEQUAL SLASH SIGNATURE SEQ SENC SEMICOLON RPAREN RBRACKET RANGLE QMARK PROCESS PRED PLUS PARALLEL OR NOT NEQ NAME MUTABLE MINUS LPAREN LEQ LANGLE INIT IN ID HASH HAPPENS GEQ FALSE EXP EXN EQ EOF ELSE DOT DIFF DEQUIVARROW DARROW COMMA CHANNEL BY BANGU AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On TRUE shift to state 25
-- On SEQ shift to state 26
-- On PRED shift to state 30
-- On NOT shift to state 32
-- On LPAREN shift to state 33
-- On LANGLE shift to state 34
-- On INIT shift to state 35
-- On IF shift to state 36
-- On ID shift to state 2
-- On HAPPENS shift to state 37
-- On FORALL shift to state 39
-- On FIND shift to state 45
-- On FALSE shift to state 51
-- On EXISTS shift to state 52
-- On DIFF shift to state 57
-- On term_i shift to state 59
-- On term shift to state 141
-- On sterm_i shift to state 65
-- On lsymb shift to state 66
## Reductions:

State 30:
## Known stack suffix:
## PRED
## LR(1) items:
sterm_i -> PRED . LPAREN term RPAREN [ XOR TRUE THEN TERM SYSTEM SLASHSLASH SLASHEQUAL SLASH SIGNATURE SEQ SENC SEMICOLON RPAREN RBRACKET RANGLE QMARK PROCESS PRED PLUS PARALLEL OR NOT NEQ NAME MUTABLE MINUS LPAREN LEQ LANGLE INIT IN ID HASH HAPPENS GEQ FALSE EXP EXN EQ EOF ELSE DOT DIFF DEQUIVARROW DARROW COMMA CHANNEL BY BANGU AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On LPAREN shift to state 31
## Reductions:

State 31:
## Known stack suffix:
## PRED LPAREN
## LR(1) items:
sterm_i -> PRED LPAREN . term RPAREN [ XOR TRUE THEN TERM SYSTEM SLASHSLASH SLASHEQUAL SLASH SIGNATURE SEQ SENC SEMICOLON RPAREN RBRACKET RANGLE QMARK PROCESS PRED PLUS PARALLEL OR NOT NEQ NAME MUTABLE MINUS LPAREN LEQ LANGLE INIT IN ID HASH HAPPENS GEQ FALSE EXP EXN EQ EOF ELSE DOT DIFF DEQUIVARROW DARROW COMMA CHANNEL BY BANGU AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On TRUE shift to state 25
-- On SEQ shift to state 26
-- On PRED shift to state 30
-- On NOT shift to state 32
-- On LPAREN shift to state 33
-- On LANGLE shift to state 34
-- On INIT shift to state 35
-- On IF shift to state 36
-- On ID shift to state 2
-- On HAPPENS shift to state 37
-- On FORALL shift to state 39
-- On FIND shift to state 45
-- On FALSE shift to state 51
-- On EXISTS shift to state 52
-- On DIFF shift to state 57
-- On term_i shift to state 59
-- On term shift to state 139
-- On sterm_i shift to state 65
-- On lsymb shift to state 66
## Reductions:

State 32:
## Known stack suffix:
## NOT
## LR(1) items:
sterm_i -> NOT . sterm [ XOR TRUE THEN TERM SYSTEM SLASHSLASH SLASHEQUAL SLASH SIGNATURE SEQ SENC SEMICOLON RPAREN RBRACKET RANGLE QMARK PROCESS PRED PLUS PARALLEL OR NOT NEQ NAME MUTABLE MINUS LPAREN LEQ LANGLE INIT IN ID HASH HAPPENS GEQ FALSE EXP EXN EQ EOF ELSE DOT DIFF DEQUIVARROW DARROW COMMA CHANNEL BY BANGU AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On TRUE shift to state 25
-- On SEQ shift to state 26
-- On PRED shift to state 30
-- On NOT shift to state 32
-- On LPAREN shift to state 33
-- On LANGLE shift to state 34
-- On INIT shift to state 35
-- On ID shift to state 2
-- On HAPPENS shift to state 37
-- On FALSE shift to state 51
-- On DIFF shift to state 57
-- On sterm_i shift to state 136
-- On sterm shift to state 137
-- On lsymb shift to state 138
## Reductions:

State 33:
## Known stack suffix:
## LPAREN
## LR(1) items:
sterm_i -> LPAREN . term_i RPAREN [ XOR TRUE THEN TERM SYSTEM SLASHSLASH SLASHEQUAL SLASH SIGNATURE SEQ SENC SEMICOLON RPAREN RBRACKET RANGLE QMARK PROCESS PRED PLUS PARALLEL OR NOT NEQ NAME MUTABLE MINUS LPAREN LEQ LANGLE INIT IN ID HASH HAPPENS GEQ FALSE EXP EXN EQ EOF ELSE DOT DIFF DEQUIVARROW DARROW COMMA CHANNEL BY BANGU AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On TRUE shift to state 25
-- On SEQ shift to state 26
-- On PRED shift to state 30
-- On NOT shift to state 32
-- On LPAREN shift to state 33
-- On LANGLE shift to state 34
-- On INIT shift to state 35
-- On IF shift to state 36
-- On ID shift to state 2
-- On HAPPENS shift to state 37
-- On FORALL shift to state 39
-- On FIND shift to state 45
-- On FALSE shift to state 51
-- On EXISTS shift to state 52
-- On DIFF shift to state 57
-- On term_i shift to state 133
-- On term shift to state 135
-- On sterm_i shift to state 65
-- On lsymb shift to state 66
## Reductions:

State 34:
## Known stack suffix:
## LANGLE
## LR(1) items:
sterm_i -> LANGLE . term COMMA term RANGLE [ XOR TRUE THEN TERM SYSTEM SLASHSLASH SLASHEQUAL SLASH SIGNATURE SEQ SENC SEMICOLON RPAREN RBRACKET RANGLE QMARK PROCESS PRED PLUS PARALLEL OR NOT NEQ NAME MUTABLE MINUS LPAREN LEQ LANGLE INIT IN ID HASH HAPPENS GEQ FALSE EXP EXN EQ EOF ELSE DOT DIFF DEQUIVARROW DARROW COMMA CHANNEL BY BANGU AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On TRUE shift to state 25
-- On SEQ shift to state 26
-- On PRED shift to state 30
-- On NOT shift to state 32
-- On LPAREN shift to state 33
-- On LANGLE shift to state 34
-- On INIT shift to state 35
-- On IF shift to state 36
-- On ID shift to state 2
-- On HAPPENS shift to state 37
-- On FORALL shift to state 39
-- On FIND shift to state 45
-- On FALSE shift to state 51
-- On EXISTS shift to state 52
-- On DIFF shift to state 57
-- On term_i shift to state 59
-- On term shift to state 129
-- On sterm_i shift to state 65
-- On lsymb shift to state 66
## Reductions:

State 35:
## Known stack suffix:
## INIT
## LR(1) items:
sterm_i -> INIT . [ XOR TRUE THEN TERM SYSTEM SLASHSLASH SLASHEQUAL SLASH SIGNATURE SEQ SENC SEMICOLON RPAREN RBRACKET RANGLE QMARK PROCESS PRED PLUS PARALLEL OR NOT NEQ NAME MUTABLE MINUS LPAREN LEQ LANGLE INIT IN ID HASH HAPPENS GEQ FALSE EXP EXN EQ EOF ELSE DOT DIFF DEQUIVARROW DARROW COMMA CHANNEL BY BANGU AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
## Reductions:
-- On XOR TRUE THEN TERM SYSTEM SLASHSLASH SLASHEQUAL SLASH SIGNATURE SEQ SENC SEMICOLON RPAREN RBRACKET RANGLE QMARK PROCESS PRED PLUS PARALLEL OR NOT NEQ NAME MUTABLE MINUS LPAREN LEQ LANGLE INIT IN ID HASH HAPPENS GEQ FALSE EXP EXN EQ EOF ELSE DOT DIFF DEQUIVARROW DARROW COMMA CHANNEL BY BANGU AXIOM AS ARROW AND AENC ABSTRACT
--   reduce production sterm_i -> INIT

State 36:
## Known stack suffix:
## IF
## LR(1) items:
term_i -> IF . term THEN term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> IF . term THEN term ELSE term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On TRUE shift to state 25
-- On SEQ shift to state 26
-- On PRED shift to state 30
-- On NOT shift to state 32
-- On LPAREN shift to state 33
-- On LANGLE shift to state 34
-- On INIT shift to state 35
-- On IF shift to state 36
-- On ID shift to state 2
-- On HAPPENS shift to state 37
-- On FORALL shift to state 39
-- On FIND shift to state 45
-- On FALSE shift to state 51
-- On EXISTS shift to state 52
-- On DIFF shift to state 57
-- On term_i shift to state 59
-- On term shift to state 124
-- On sterm_i shift to state 65
-- On lsymb shift to state 66
## Reductions:

State 37:
## Known stack suffix:
## HAPPENS
## LR(1) items:
sterm_i -> HAPPENS . LPAREN separated_nonempty_list(COMMA,term) RPAREN [ XOR TRUE THEN TERM SYSTEM SLASHSLASH SLASHEQUAL SLASH SIGNATURE SEQ SENC SEMICOLON RPAREN RBRACKET RANGLE QMARK PROCESS PRED PLUS PARALLEL OR NOT NEQ NAME MUTABLE MINUS LPAREN LEQ LANGLE INIT IN ID HASH HAPPENS GEQ FALSE EXP EXN EQ EOF ELSE DOT DIFF DEQUIVARROW DARROW COMMA CHANNEL BY BANGU AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On LPAREN shift to state 38
## Reductions:

State 38:
## Known stack suffix:
## HAPPENS LPAREN
## LR(1) items:
sterm_i -> HAPPENS LPAREN . separated_nonempty_list(COMMA,term) RPAREN [ XOR TRUE THEN TERM SYSTEM SLASHSLASH SLASHEQUAL SLASH SIGNATURE SEQ SENC SEMICOLON RPAREN RBRACKET RANGLE QMARK PROCESS PRED PLUS PARALLEL OR NOT NEQ NAME MUTABLE MINUS LPAREN LEQ LANGLE INIT IN ID HASH HAPPENS GEQ FALSE EXP EXN EQ EOF ELSE DOT DIFF DEQUIVARROW DARROW COMMA CHANNEL BY BANGU AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On TRUE shift to state 25
-- On SEQ shift to state 26
-- On PRED shift to state 30
-- On NOT shift to state 32
-- On LPAREN shift to state 33
-- On LANGLE shift to state 34
-- On INIT shift to state 35
-- On IF shift to state 36
-- On ID shift to state 2
-- On HAPPENS shift to state 37
-- On FORALL shift to state 39
-- On FIND shift to state 45
-- On FALSE shift to state 51
-- On EXISTS shift to state 52
-- On DIFF shift to state 57
-- On term_i shift to state 59
-- On term shift to state 119
-- On sterm_i shift to state 65
-- On separated_nonempty_list(COMMA,term) shift to state 122
-- On lsymb shift to state 66
## Reductions:

State 39:
## Known stack suffix:
## FORALL
## LR(1) items:
term_i -> FORALL . LPAREN arg_list RPAREN sep term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> FORALL . lsymb COLON kind sep term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On LPAREN shift to state 40
-- On ID shift to state 2
-- On lsymb shift to state 114
## Reductions:

State 40:
## Known stack suffix:
## FORALL LPAREN
## LR(1) items:
term_i -> FORALL LPAREN . arg_list RPAREN sep term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On ID shift to state 2
-- On lsymb shift to state 5
-- On ids shift to state 8
-- On arg_list shift to state 41
## Reductions:
-- On RPAREN
--   reduce production arg_list ->

State 41:
## Known stack suffix:
## FORALL LPAREN arg_list
## LR(1) items:
term_i -> FORALL LPAREN arg_list . RPAREN sep term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On RPAREN shift to state 42
## Reductions:

State 42:
## Known stack suffix:
## FORALL LPAREN arg_list RPAREN
## LR(1) items:
term_i -> FORALL LPAREN arg_list RPAREN . sep term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On COMMA shift to state 43
-- On sep shift to state 44
## Reductions:
-- On TRUE SEQ PRED NOT LPAREN LANGLE INIT IF ID HAPPENS FORALL FIND FALSE EXISTS DIFF
--   reduce production sep ->

State 43:
## Known stack suffix:
## COMMA
## LR(1) items:
sep -> COMMA . [ TRUE SEQ PRED NOT LPAREN LANGLE INIT IF ID HAPPENS FORALL FIND FALSE EXISTS DIFF ]
## Transitions:
## Reductions:
-- On TRUE SEQ PRED NOT LPAREN LANGLE INIT IF ID HAPPENS FORALL FIND FALSE EXISTS DIFF
--   reduce production sep -> COMMA

State 44:
## Known stack suffix:
## FORALL LPAREN arg_list RPAREN sep
## LR(1) items:
term_i -> FORALL LPAREN arg_list RPAREN sep . term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On TRUE shift to state 25
-- On SEQ shift to state 26
-- On PRED shift to state 30
-- On NOT shift to state 32
-- On LPAREN shift to state 33
-- On LANGLE shift to state 34
-- On INIT shift to state 35
-- On IF shift to state 36
-- On ID shift to state 2
-- On HAPPENS shift to state 37
-- On FORALL shift to state 39
-- On FIND shift to state 45
-- On FALSE shift to state 51
-- On EXISTS shift to state 52
-- On DIFF shift to state 57
-- On term_i shift to state 59
-- On term shift to state 113
-- On sterm_i shift to state 65
-- On lsymb shift to state 66
## Reductions:

State 45:
## Known stack suffix:
## FIND
## LR(1) items:
term_i -> FIND . indices SUCHTHAT term IN term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> FIND . indices SUCHTHAT term IN term ELSE term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On ID shift to state 2
-- On lsymb shift to state 46
-- On indices shift to state 49
## Reductions:

State 46:
## Known stack suffix:
## lsymb
## LR(1) items:
indices -> lsymb . [ SUCHTHAT ]
indices -> lsymb . COMMA indices [ SUCHTHAT ]
## Transitions:
-- On COMMA shift to state 47
## Reductions:
-- On SUCHTHAT
--   reduce production indices -> lsymb

State 47:
## Known stack suffix:
## lsymb COMMA
## LR(1) items:
indices -> lsymb COMMA . indices [ SUCHTHAT ]
## Transitions:
-- On ID shift to state 2
-- On lsymb shift to state 46
-- On indices shift to state 48
## Reductions:

State 48:
## Known stack suffix:
## lsymb COMMA indices
## LR(1) items:
indices -> lsymb COMMA indices . [ SUCHTHAT ]
## Transitions:
## Reductions:
-- On SUCHTHAT
--   reduce production indices -> lsymb COMMA indices

State 49:
## Known stack suffix:
## FIND indices
## LR(1) items:
term_i -> FIND indices . SUCHTHAT term IN term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> FIND indices . SUCHTHAT term IN term ELSE term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On SUCHTHAT shift to state 50
## Reductions:

State 50:
## Known stack suffix:
## FIND indices SUCHTHAT
## LR(1) items:
term_i -> FIND indices SUCHTHAT . term IN term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> FIND indices SUCHTHAT . term IN term ELSE term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On TRUE shift to state 25
-- On SEQ shift to state 26
-- On PRED shift to state 30
-- On NOT shift to state 32
-- On LPAREN shift to state 33
-- On LANGLE shift to state 34
-- On INIT shift to state 35
-- On IF shift to state 36
-- On ID shift to state 2
-- On HAPPENS shift to state 37
-- On FORALL shift to state 39
-- On FIND shift to state 45
-- On FALSE shift to state 51
-- On EXISTS shift to state 52
-- On DIFF shift to state 57
-- On term_i shift to state 59
-- On term shift to state 108
-- On sterm_i shift to state 65
-- On lsymb shift to state 66
## Reductions:

State 51:
## Known stack suffix:
## FALSE
## LR(1) items:
sterm_i -> FALSE . [ XOR TRUE THEN TERM SYSTEM SLASHSLASH SLASHEQUAL SLASH SIGNATURE SEQ SENC SEMICOLON RPAREN RBRACKET RANGLE QMARK PROCESS PRED PLUS PARALLEL OR NOT NEQ NAME MUTABLE MINUS LPAREN LEQ LANGLE INIT IN ID HASH HAPPENS GEQ FALSE EXP EXN EQ EOF ELSE DOT DIFF DEQUIVARROW DARROW COMMA CHANNEL BY BANGU AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
## Reductions:
-- On XOR TRUE THEN TERM SYSTEM SLASHSLASH SLASHEQUAL SLASH SIGNATURE SEQ SENC SEMICOLON RPAREN RBRACKET RANGLE QMARK PROCESS PRED PLUS PARALLEL OR NOT NEQ NAME MUTABLE MINUS LPAREN LEQ LANGLE INIT IN ID HASH HAPPENS GEQ FALSE EXP EXN EQ EOF ELSE DOT DIFF DEQUIVARROW DARROW COMMA CHANNEL BY BANGU AXIOM AS ARROW AND AENC ABSTRACT
--   reduce production sterm_i -> FALSE

State 52:
## Known stack suffix:
## EXISTS
## LR(1) items:
term_i -> EXISTS . LPAREN arg_list RPAREN sep term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> EXISTS . lsymb COLON kind sep term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On LPAREN shift to state 53
-- On ID shift to state 2
-- On lsymb shift to state 103
## Reductions:

State 53:
## Known stack suffix:
## EXISTS LPAREN
## LR(1) items:
term_i -> EXISTS LPAREN . arg_list RPAREN sep term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On ID shift to state 2
-- On lsymb shift to state 5
-- On ids shift to state 8
-- On arg_list shift to state 54
## Reductions:
-- On RPAREN
--   reduce production arg_list ->

State 54:
## Known stack suffix:
## EXISTS LPAREN arg_list
## LR(1) items:
term_i -> EXISTS LPAREN arg_list . RPAREN sep term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On RPAREN shift to state 55
## Reductions:

State 55:
## Known stack suffix:
## EXISTS LPAREN arg_list RPAREN
## LR(1) items:
term_i -> EXISTS LPAREN arg_list RPAREN . sep term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On COMMA shift to state 43
-- On sep shift to state 56
## Reductions:
-- On TRUE SEQ PRED NOT LPAREN LANGLE INIT IF ID HAPPENS FORALL FIND FALSE EXISTS DIFF
--   reduce production sep ->

State 56:
## Known stack suffix:
## EXISTS LPAREN arg_list RPAREN sep
## LR(1) items:
term_i -> EXISTS LPAREN arg_list RPAREN sep . term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On TRUE shift to state 25
-- On SEQ shift to state 26
-- On PRED shift to state 30
-- On NOT shift to state 32
-- On LPAREN shift to state 33
-- On LANGLE shift to state 34
-- On INIT shift to state 35
-- On IF shift to state 36
-- On ID shift to state 2
-- On HAPPENS shift to state 37
-- On FORALL shift to state 39
-- On FIND shift to state 45
-- On FALSE shift to state 51
-- On EXISTS shift to state 52
-- On DIFF shift to state 57
-- On term_i shift to state 59
-- On term shift to state 102
-- On sterm_i shift to state 65
-- On lsymb shift to state 66
## Reductions:

State 57:
## Known stack suffix:
## DIFF
## LR(1) items:
sterm_i -> DIFF . LPAREN term COMMA term RPAREN [ XOR TRUE THEN TERM SYSTEM SLASHSLASH SLASHEQUAL SLASH SIGNATURE SEQ SENC SEMICOLON RPAREN RBRACKET RANGLE QMARK PROCESS PRED PLUS PARALLEL OR NOT NEQ NAME MUTABLE MINUS LPAREN LEQ LANGLE INIT IN ID HASH HAPPENS GEQ FALSE EXP EXN EQ EOF ELSE DOT DIFF DEQUIVARROW DARROW COMMA CHANNEL BY BANGU AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On LPAREN shift to state 58
## Reductions:

State 58:
## Known stack suffix:
## DIFF LPAREN
## LR(1) items:
sterm_i -> DIFF LPAREN . term COMMA term RPAREN [ XOR TRUE THEN TERM SYSTEM SLASHSLASH SLASHEQUAL SLASH SIGNATURE SEQ SENC SEMICOLON RPAREN RBRACKET RANGLE QMARK PROCESS PRED PLUS PARALLEL OR NOT NEQ NAME MUTABLE MINUS LPAREN LEQ LANGLE INIT IN ID HASH HAPPENS GEQ FALSE EXP EXN EQ EOF ELSE DOT DIFF DEQUIVARROW DARROW COMMA CHANNEL BY BANGU AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On TRUE shift to state 25
-- On SEQ shift to state 26
-- On PRED shift to state 30
-- On NOT shift to state 32
-- On LPAREN shift to state 33
-- On LANGLE shift to state 34
-- On INIT shift to state 35
-- On IF shift to state 36
-- On ID shift to state 2
-- On HAPPENS shift to state 37
-- On FORALL shift to state 39
-- On FIND shift to state 45
-- On FALSE shift to state 51
-- On EXISTS shift to state 52
-- On DIFF shift to state 57
-- On term_i shift to state 59
-- On term shift to state 60
-- On sterm_i shift to state 65
-- On lsymb shift to state 66
## Reductions:

State 59:
## Known stack suffix:
## term_i
## LR(1) items:
term -> term_i . [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
## Reductions:
-- On XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT
--   reduce production term -> term_i

State 60:
## Known stack suffix:
## DIFF LPAREN term
## LR(1) items:
sterm_i -> DIFF LPAREN term . COMMA term RPAREN [ XOR TRUE THEN TERM SYSTEM SLASHSLASH SLASHEQUAL SLASH SIGNATURE SEQ SENC SEMICOLON RPAREN RBRACKET RANGLE QMARK PROCESS PRED PLUS PARALLEL OR NOT NEQ NAME MUTABLE MINUS LPAREN LEQ LANGLE INIT IN ID HASH HAPPENS GEQ FALSE EXP EXN EQ EOF ELSE DOT DIFF DEQUIVARROW DARROW COMMA CHANNEL BY BANGU AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . XOR term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW COMMA AND ]
term_i -> term . EXP term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW COMMA AND ]
term_i -> term . AND term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW COMMA AND ]
term_i -> term . OR term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW COMMA AND ]
term_i -> term . DARROW term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW COMMA AND ]
term_i -> term . EQ term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW COMMA AND ]
term_i -> term . NEQ term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW COMMA AND ]
term_i -> term . LEQ term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW COMMA AND ]
term_i -> term . LANGLE term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW COMMA AND ]
term_i -> term . GEQ term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW COMMA AND ]
term_i -> term . RANGLE term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW COMMA AND ]
term_i -> term . DEQUIVARROW term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW COMMA AND ]
## Transitions:
-- On XOR shift to state 61
-- On RANGLE shift to state 69
-- On OR shift to state 71
-- On NEQ shift to state 73
-- On LEQ shift to state 75
-- On LANGLE shift to state 77
-- On GEQ shift to state 79
-- On EXP shift to state 63
-- On EQ shift to state 81
-- On DEQUIVARROW shift to state 85
-- On DARROW shift to state 87
-- On COMMA shift to state 99
-- On AND shift to state 83
## Reductions:

State 61:
## Known stack suffix:
## term XOR
## LR(1) items:
term_i -> term XOR . term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On TRUE shift to state 25
-- On SEQ shift to state 26
-- On PRED shift to state 30
-- On NOT shift to state 32
-- On LPAREN shift to state 33
-- On LANGLE shift to state 34
-- On INIT shift to state 35
-- On IF shift to state 36
-- On ID shift to state 2
-- On HAPPENS shift to state 37
-- On FORALL shift to state 39
-- On FIND shift to state 45
-- On FALSE shift to state 51
-- On EXISTS shift to state 52
-- On DIFF shift to state 57
-- On term_i shift to state 59
-- On term shift to state 62
-- On sterm_i shift to state 65
-- On lsymb shift to state 66
## Reductions:

State 62:
## Known stack suffix:
## term XOR term
## LR(1) items:
term_i -> term . XOR term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term XOR term . [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . EXP term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . AND term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . OR term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . DARROW term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . EQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . NEQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . LEQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . LANGLE term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . GEQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . RANGLE term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . DEQUIVARROW term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On EXP shift to state 63
## Reductions:
-- On XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT
--   reduce production term_i -> term XOR term

State 63:
## Known stack suffix:
## term EXP
## LR(1) items:
term_i -> term EXP . term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On TRUE shift to state 25
-- On SEQ shift to state 26
-- On PRED shift to state 30
-- On NOT shift to state 32
-- On LPAREN shift to state 33
-- On LANGLE shift to state 34
-- On INIT shift to state 35
-- On IF shift to state 36
-- On ID shift to state 2
-- On HAPPENS shift to state 37
-- On FORALL shift to state 39
-- On FIND shift to state 45
-- On FALSE shift to state 51
-- On EXISTS shift to state 52
-- On DIFF shift to state 57
-- On term_i shift to state 59
-- On term shift to state 64
-- On sterm_i shift to state 65
-- On lsymb shift to state 66
## Reductions:

State 64:
## Known stack suffix:
## term EXP term
## LR(1) items:
term_i -> term . XOR term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . EXP term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term EXP term . [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . AND term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . OR term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . DARROW term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . EQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . NEQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . LEQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . LANGLE term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . GEQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . RANGLE term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . DEQUIVARROW term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
## Reductions:
-- On XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT
--   reduce production term_i -> term EXP term

State 65:
## Known stack suffix:
## sterm_i
## LR(1) items:
term_i -> sterm_i . [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
## Reductions:
-- On XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT
--   reduce production term_i -> sterm_i

State 66:
## Known stack suffix:
## lsymb
## LR(1) items:
sterm_i -> lsymb . [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> lsymb . term_list1 [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> lsymb . AT term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> lsymb . term_list1 AT term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On LPAREN shift to state 67
-- On AT shift to state 94
-- On term_list1 shift to state 96
## Reductions:
-- On XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT
--   reduce production sterm_i -> lsymb

State 67:
## Known stack suffix:
## LPAREN
## LR(1) items:
term_list1 -> LPAREN . term tm_list RPAREN [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AT AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On TRUE shift to state 25
-- On SEQ shift to state 26
-- On PRED shift to state 30
-- On NOT shift to state 32
-- On LPAREN shift to state 33
-- On LANGLE shift to state 34
-- On INIT shift to state 35
-- On IF shift to state 36
-- On ID shift to state 2
-- On HAPPENS shift to state 37
-- On FORALL shift to state 39
-- On FIND shift to state 45
-- On FALSE shift to state 51
-- On EXISTS shift to state 52
-- On DIFF shift to state 57
-- On term_i shift to state 59
-- On term shift to state 68
-- On sterm_i shift to state 65
-- On lsymb shift to state 66
## Reductions:

State 68:
## Known stack suffix:
## LPAREN term
## LR(1) items:
term_i -> term . XOR term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW COMMA AND ]
term_i -> term . EXP term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW COMMA AND ]
term_i -> term . AND term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW COMMA AND ]
term_i -> term . OR term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW COMMA AND ]
term_i -> term . DARROW term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW COMMA AND ]
term_i -> term . EQ term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW COMMA AND ]
term_i -> term . NEQ term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW COMMA AND ]
term_i -> term . LEQ term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW COMMA AND ]
term_i -> term . LANGLE term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW COMMA AND ]
term_i -> term . GEQ term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW COMMA AND ]
term_i -> term . RANGLE term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW COMMA AND ]
term_i -> term . DEQUIVARROW term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW COMMA AND ]
term_list1 -> LPAREN term . tm_list RPAREN [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AT AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On XOR shift to state 61
-- On RANGLE shift to state 69
-- On OR shift to state 71
-- On NEQ shift to state 73
-- On LEQ shift to state 75
-- On LANGLE shift to state 77
-- On GEQ shift to state 79
-- On EXP shift to state 63
-- On EQ shift to state 81
-- On DEQUIVARROW shift to state 85
-- On DARROW shift to state 87
-- On COMMA shift to state 89
-- On AND shift to state 83
-- On tm_list shift to state 92
## Reductions:
-- On RPAREN
--   reduce production tm_list ->

State 69:
## Known stack suffix:
## term RANGLE
## LR(1) items:
term_i -> term RANGLE . term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On TRUE shift to state 25
-- On SEQ shift to state 26
-- On PRED shift to state 30
-- On NOT shift to state 32
-- On LPAREN shift to state 33
-- On LANGLE shift to state 34
-- On INIT shift to state 35
-- On IF shift to state 36
-- On ID shift to state 2
-- On HAPPENS shift to state 37
-- On FORALL shift to state 39
-- On FIND shift to state 45
-- On FALSE shift to state 51
-- On EXISTS shift to state 52
-- On DIFF shift to state 57
-- On term_i shift to state 59
-- On term shift to state 70
-- On sterm_i shift to state 65
-- On lsymb shift to state 66
## Reductions:

State 70:
## Known stack suffix:
## term RANGLE term
## LR(1) items:
term_i -> term . XOR term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . EXP term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . AND term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . OR term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . DARROW term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . EQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . NEQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . LEQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . LANGLE term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . GEQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . RANGLE term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term RANGLE term . [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . DEQUIVARROW term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On XOR shift to state 61
-- On EXP shift to state 63
## Reductions:
-- On THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET PROCESS PLUS PARALLEL OR NAME MUTABLE IN HASH EXN EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT
--   reduce production term_i -> term RANGLE term

State 71:
## Known stack suffix:
## term OR
## LR(1) items:
term_i -> term OR . term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On TRUE shift to state 25
-- On SEQ shift to state 26
-- On PRED shift to state 30
-- On NOT shift to state 32
-- On LPAREN shift to state 33
-- On LANGLE shift to state 34
-- On INIT shift to state 35
-- On IF shift to state 36
-- On ID shift to state 2
-- On HAPPENS shift to state 37
-- On FORALL shift to state 39
-- On FIND shift to state 45
-- On FALSE shift to state 51
-- On EXISTS shift to state 52
-- On DIFF shift to state 57
-- On term_i shift to state 59
-- On term shift to state 72
-- On sterm_i shift to state 65
-- On lsymb shift to state 66
## Reductions:

State 72:
## Known stack suffix:
## term OR term
## LR(1) items:
term_i -> term . XOR term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . EXP term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . AND term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . OR term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term OR term . [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . DARROW term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . EQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . NEQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . LEQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . LANGLE term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . GEQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . RANGLE term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . DEQUIVARROW term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On XOR shift to state 61
-- On RANGLE shift to state 69
-- On NEQ shift to state 73
-- On LEQ shift to state 75
-- On LANGLE shift to state 77
-- On GEQ shift to state 79
-- On EXP shift to state 63
-- On EQ shift to state 81
-- On AND shift to state 83
## Reductions:
-- On THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET PROCESS PLUS PARALLEL OR NAME MUTABLE IN HASH EXN EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AENC ABSTRACT
--   reduce production term_i -> term OR term

State 73:
## Known stack suffix:
## term NEQ
## LR(1) items:
term_i -> term NEQ . term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On TRUE shift to state 25
-- On SEQ shift to state 26
-- On PRED shift to state 30
-- On NOT shift to state 32
-- On LPAREN shift to state 33
-- On LANGLE shift to state 34
-- On INIT shift to state 35
-- On IF shift to state 36
-- On ID shift to state 2
-- On HAPPENS shift to state 37
-- On FORALL shift to state 39
-- On FIND shift to state 45
-- On FALSE shift to state 51
-- On EXISTS shift to state 52
-- On DIFF shift to state 57
-- On term_i shift to state 59
-- On term shift to state 74
-- On sterm_i shift to state 65
-- On lsymb shift to state 66
## Reductions:

State 74:
## Known stack suffix:
## term NEQ term
## LR(1) items:
term_i -> term . XOR term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . EXP term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . AND term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . OR term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . DARROW term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . EQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . NEQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term NEQ term . [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . LEQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . LANGLE term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . GEQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . RANGLE term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . DEQUIVARROW term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On XOR shift to state 61
-- On EXP shift to state 63
## Reductions:
-- On THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET PROCESS PLUS PARALLEL OR NAME MUTABLE IN HASH EXN EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT
--   reduce production term_i -> term NEQ term

State 75:
## Known stack suffix:
## term LEQ
## LR(1) items:
term_i -> term LEQ . term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On TRUE shift to state 25
-- On SEQ shift to state 26
-- On PRED shift to state 30
-- On NOT shift to state 32
-- On LPAREN shift to state 33
-- On LANGLE shift to state 34
-- On INIT shift to state 35
-- On IF shift to state 36
-- On ID shift to state 2
-- On HAPPENS shift to state 37
-- On FORALL shift to state 39
-- On FIND shift to state 45
-- On FALSE shift to state 51
-- On EXISTS shift to state 52
-- On DIFF shift to state 57
-- On term_i shift to state 59
-- On term shift to state 76
-- On sterm_i shift to state 65
-- On lsymb shift to state 66
## Reductions:

State 76:
## Known stack suffix:
## term LEQ term
## LR(1) items:
term_i -> term . XOR term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . EXP term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . AND term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . OR term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . DARROW term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . EQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . NEQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . LEQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term LEQ term . [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . LANGLE term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . GEQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . RANGLE term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . DEQUIVARROW term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On XOR shift to state 61
-- On EXP shift to state 63
## Reductions:
-- On THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET PROCESS PLUS PARALLEL OR NAME MUTABLE IN HASH EXN EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT
--   reduce production term_i -> term LEQ term

State 77:
## Known stack suffix:
## term LANGLE
## LR(1) items:
term_i -> term LANGLE . term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On TRUE shift to state 25
-- On SEQ shift to state 26
-- On PRED shift to state 30
-- On NOT shift to state 32
-- On LPAREN shift to state 33
-- On LANGLE shift to state 34
-- On INIT shift to state 35
-- On IF shift to state 36
-- On ID shift to state 2
-- On HAPPENS shift to state 37
-- On FORALL shift to state 39
-- On FIND shift to state 45
-- On FALSE shift to state 51
-- On EXISTS shift to state 52
-- On DIFF shift to state 57
-- On term_i shift to state 59
-- On term shift to state 78
-- On sterm_i shift to state 65
-- On lsymb shift to state 66
## Reductions:

State 78:
## Known stack suffix:
## term LANGLE term
## LR(1) items:
term_i -> term . XOR term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . EXP term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . AND term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . OR term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . DARROW term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . EQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . NEQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . LEQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . LANGLE term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term LANGLE term . [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . GEQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . RANGLE term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . DEQUIVARROW term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On XOR shift to state 61
-- On EXP shift to state 63
## Reductions:
-- On THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET PROCESS PLUS PARALLEL OR NAME MUTABLE IN HASH EXN EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT
--   reduce production term_i -> term LANGLE term

State 79:
## Known stack suffix:
## term GEQ
## LR(1) items:
term_i -> term GEQ . term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On TRUE shift to state 25
-- On SEQ shift to state 26
-- On PRED shift to state 30
-- On NOT shift to state 32
-- On LPAREN shift to state 33
-- On LANGLE shift to state 34
-- On INIT shift to state 35
-- On IF shift to state 36
-- On ID shift to state 2
-- On HAPPENS shift to state 37
-- On FORALL shift to state 39
-- On FIND shift to state 45
-- On FALSE shift to state 51
-- On EXISTS shift to state 52
-- On DIFF shift to state 57
-- On term_i shift to state 59
-- On term shift to state 80
-- On sterm_i shift to state 65
-- On lsymb shift to state 66
## Reductions:

State 80:
## Known stack suffix:
## term GEQ term
## LR(1) items:
term_i -> term . XOR term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . EXP term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . AND term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . OR term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . DARROW term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . EQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . NEQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . LEQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . LANGLE term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . GEQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term GEQ term . [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . RANGLE term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . DEQUIVARROW term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On XOR shift to state 61
-- On EXP shift to state 63
## Reductions:
-- On THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET PROCESS PLUS PARALLEL OR NAME MUTABLE IN HASH EXN EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT
--   reduce production term_i -> term GEQ term

State 81:
## Known stack suffix:
## term EQ
## LR(1) items:
term_i -> term EQ . term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On TRUE shift to state 25
-- On SEQ shift to state 26
-- On PRED shift to state 30
-- On NOT shift to state 32
-- On LPAREN shift to state 33
-- On LANGLE shift to state 34
-- On INIT shift to state 35
-- On IF shift to state 36
-- On ID shift to state 2
-- On HAPPENS shift to state 37
-- On FORALL shift to state 39
-- On FIND shift to state 45
-- On FALSE shift to state 51
-- On EXISTS shift to state 52
-- On DIFF shift to state 57
-- On term_i shift to state 59
-- On term shift to state 82
-- On sterm_i shift to state 65
-- On lsymb shift to state 66
## Reductions:

State 82:
## Known stack suffix:
## term EQ term
## LR(1) items:
term_i -> term . XOR term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . EXP term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . AND term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . OR term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . DARROW term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . EQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term EQ term . [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . NEQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . LEQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . LANGLE term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . GEQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . RANGLE term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . DEQUIVARROW term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On XOR shift to state 61
-- On EXP shift to state 63
## Reductions:
-- On THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET PROCESS PLUS PARALLEL OR NAME MUTABLE IN HASH EXN EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT
--   reduce production term_i -> term EQ term

State 83:
## Known stack suffix:
## term AND
## LR(1) items:
term_i -> term AND . term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On TRUE shift to state 25
-- On SEQ shift to state 26
-- On PRED shift to state 30
-- On NOT shift to state 32
-- On LPAREN shift to state 33
-- On LANGLE shift to state 34
-- On INIT shift to state 35
-- On IF shift to state 36
-- On ID shift to state 2
-- On HAPPENS shift to state 37
-- On FORALL shift to state 39
-- On FIND shift to state 45
-- On FALSE shift to state 51
-- On EXISTS shift to state 52
-- On DIFF shift to state 57
-- On term_i shift to state 59
-- On term shift to state 84
-- On sterm_i shift to state 65
-- On lsymb shift to state 66
## Reductions:

State 84:
## Known stack suffix:
## term AND term
## LR(1) items:
term_i -> term . XOR term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . EXP term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . AND term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term AND term . [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . OR term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . DARROW term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . EQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . NEQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . LEQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . LANGLE term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . GEQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . RANGLE term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . DEQUIVARROW term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On XOR shift to state 61
-- On RANGLE shift to state 69
-- On NEQ shift to state 73
-- On LEQ shift to state 75
-- On LANGLE shift to state 77
-- On GEQ shift to state 79
-- On EXP shift to state 63
-- On EQ shift to state 81
## Reductions:
-- On THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET PROCESS PLUS PARALLEL OR NAME MUTABLE IN HASH EXN EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT
--   reduce production term_i -> term AND term

State 85:
## Known stack suffix:
## term DEQUIVARROW
## LR(1) items:
term_i -> term DEQUIVARROW . term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On TRUE shift to state 25
-- On SEQ shift to state 26
-- On PRED shift to state 30
-- On NOT shift to state 32
-- On LPAREN shift to state 33
-- On LANGLE shift to state 34
-- On INIT shift to state 35
-- On IF shift to state 36
-- On ID shift to state 2
-- On HAPPENS shift to state 37
-- On FORALL shift to state 39
-- On FIND shift to state 45
-- On FALSE shift to state 51
-- On EXISTS shift to state 52
-- On DIFF shift to state 57
-- On term_i shift to state 59
-- On term shift to state 86
-- On sterm_i shift to state 65
-- On lsymb shift to state 66
## Reductions:

State 86:
## Known stack suffix:
## term DEQUIVARROW term
## LR(1) items:
term_i -> term . XOR term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . EXP term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . AND term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . OR term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . DARROW term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . EQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . NEQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . LEQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . LANGLE term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . GEQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . RANGLE term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . DEQUIVARROW term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term DEQUIVARROW term . [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On XOR shift to state 61
-- On RANGLE shift to state 69
-- On OR shift to state 71
-- On NEQ shift to state 73
-- On LEQ shift to state 75
-- On LANGLE shift to state 77
-- On GEQ shift to state 79
-- On EXP shift to state 63
-- On EQ shift to state 81
-- On DEQUIVARROW shift to state 85
-- On AND shift to state 83
## Reductions:
-- On THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET PROCESS PLUS PARALLEL NAME MUTABLE IN HASH EXN EOF ELSE DOT DARROW COMMA CHANNEL BY AXIOM AS ARROW AENC ABSTRACT
--   reduce production term_i -> term DEQUIVARROW term

State 87:
## Known stack suffix:
## term DARROW
## LR(1) items:
term_i -> term DARROW . term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On TRUE shift to state 25
-- On SEQ shift to state 26
-- On PRED shift to state 30
-- On NOT shift to state 32
-- On LPAREN shift to state 33
-- On LANGLE shift to state 34
-- On INIT shift to state 35
-- On IF shift to state 36
-- On ID shift to state 2
-- On HAPPENS shift to state 37
-- On FORALL shift to state 39
-- On FIND shift to state 45
-- On FALSE shift to state 51
-- On EXISTS shift to state 52
-- On DIFF shift to state 57
-- On term_i shift to state 59
-- On term shift to state 88
-- On sterm_i shift to state 65
-- On lsymb shift to state 66
## Reductions:

State 88:
## Known stack suffix:
## term DARROW term
## LR(1) items:
term_i -> term . XOR term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . EXP term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . AND term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . OR term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . DARROW term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term DARROW term . [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . EQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . NEQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . LEQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . LANGLE term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . GEQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . RANGLE term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . DEQUIVARROW term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On XOR shift to state 61
-- On RANGLE shift to state 69
-- On OR shift to state 71
-- On NEQ shift to state 73
-- On LEQ shift to state 75
-- On LANGLE shift to state 77
-- On GEQ shift to state 79
-- On EXP shift to state 63
-- On EQ shift to state 81
-- On DEQUIVARROW shift to state 85
-- On DARROW shift to state 87
-- On AND shift to state 83
## Reductions:
-- On THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET PROCESS PLUS PARALLEL NAME MUTABLE IN HASH EXN EOF ELSE DOT COMMA CHANNEL BY AXIOM AS ARROW AENC ABSTRACT
--   reduce production term_i -> term DARROW term

State 89:
## Known stack suffix:
## COMMA
## LR(1) items:
tm_list -> COMMA . term tm_list [ RPAREN ]
## Transitions:
-- On TRUE shift to state 25
-- On SEQ shift to state 26
-- On PRED shift to state 30
-- On NOT shift to state 32
-- On LPAREN shift to state 33
-- On LANGLE shift to state 34
-- On INIT shift to state 35
-- On IF shift to state 36
-- On ID shift to state 2
-- On HAPPENS shift to state 37
-- On FORALL shift to state 39
-- On FIND shift to state 45
-- On FALSE shift to state 51
-- On EXISTS shift to state 52
-- On DIFF shift to state 57
-- On term_i shift to state 59
-- On term shift to state 90
-- On sterm_i shift to state 65
-- On lsymb shift to state 66
## Reductions:

State 90:
## Known stack suffix:
## COMMA term
## LR(1) items:
term_i -> term . XOR term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW COMMA AND ]
term_i -> term . EXP term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW COMMA AND ]
term_i -> term . AND term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW COMMA AND ]
term_i -> term . OR term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW COMMA AND ]
term_i -> term . DARROW term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW COMMA AND ]
term_i -> term . EQ term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW COMMA AND ]
term_i -> term . NEQ term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW COMMA AND ]
term_i -> term . LEQ term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW COMMA AND ]
term_i -> term . LANGLE term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW COMMA AND ]
term_i -> term . GEQ term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW COMMA AND ]
term_i -> term . RANGLE term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW COMMA AND ]
term_i -> term . DEQUIVARROW term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW COMMA AND ]
tm_list -> COMMA term . tm_list [ RPAREN ]
## Transitions:
-- On XOR shift to state 61
-- On RANGLE shift to state 69
-- On OR shift to state 71
-- On NEQ shift to state 73
-- On LEQ shift to state 75
-- On LANGLE shift to state 77
-- On GEQ shift to state 79
-- On EXP shift to state 63
-- On EQ shift to state 81
-- On DEQUIVARROW shift to state 85
-- On DARROW shift to state 87
-- On COMMA shift to state 89
-- On AND shift to state 83
-- On tm_list shift to state 91
## Reductions:
-- On RPAREN
--   reduce production tm_list ->

State 91:
## Known stack suffix:
## COMMA term tm_list
## LR(1) items:
tm_list -> COMMA term tm_list . [ RPAREN ]
## Transitions:
## Reductions:
-- On RPAREN
--   reduce production tm_list -> COMMA term tm_list

State 92:
## Known stack suffix:
## LPAREN term tm_list
## LR(1) items:
term_list1 -> LPAREN term tm_list . RPAREN [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AT AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On RPAREN shift to state 93
## Reductions:

State 93:
## Known stack suffix:
## LPAREN term tm_list RPAREN
## LR(1) items:
term_list1 -> LPAREN term tm_list RPAREN . [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AT AS ARROW AND AENC ABSTRACT ]
## Transitions:
## Reductions:
-- On XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AT AS ARROW AND AENC ABSTRACT
--   reduce production term_list1 -> LPAREN term tm_list RPAREN

State 94:
## Known stack suffix:
## lsymb AT
## LR(1) items:
term_i -> lsymb AT . term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On TRUE shift to state 25
-- On SEQ shift to state 26
-- On PRED shift to state 30
-- On NOT shift to state 32
-- On LPAREN shift to state 33
-- On LANGLE shift to state 34
-- On INIT shift to state 35
-- On IF shift to state 36
-- On ID shift to state 2
-- On HAPPENS shift to state 37
-- On FORALL shift to state 39
-- On FIND shift to state 45
-- On FALSE shift to state 51
-- On EXISTS shift to state 52
-- On DIFF shift to state 57
-- On term_i shift to state 59
-- On term shift to state 95
-- On sterm_i shift to state 65
-- On lsymb shift to state 66
## Reductions:

State 95:
## Known stack suffix:
## lsymb AT term
## LR(1) items:
term_i -> lsymb AT term . [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . XOR term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . EXP term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . AND term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . OR term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . DARROW term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . EQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . NEQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . LEQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . LANGLE term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . GEQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . RANGLE term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . DEQUIVARROW term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
## Reductions:
-- On XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT
--   reduce production term_i -> lsymb AT term

State 96:
## Known stack suffix:
## lsymb term_list1
## LR(1) items:
term_i -> lsymb term_list1 . [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> lsymb term_list1 . AT term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On AT shift to state 97
## Reductions:
-- On XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT
--   reduce production term_i -> lsymb term_list1

State 97:
## Known stack suffix:
## lsymb term_list1 AT
## LR(1) items:
term_i -> lsymb term_list1 AT . term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On TRUE shift to state 25
-- On SEQ shift to state 26
-- On PRED shift to state 30
-- On NOT shift to state 32
-- On LPAREN shift to state 33
-- On LANGLE shift to state 34
-- On INIT shift to state 35
-- On IF shift to state 36
-- On ID shift to state 2
-- On HAPPENS shift to state 37
-- On FORALL shift to state 39
-- On FIND shift to state 45
-- On FALSE shift to state 51
-- On EXISTS shift to state 52
-- On DIFF shift to state 57
-- On term_i shift to state 59
-- On term shift to state 98
-- On sterm_i shift to state 65
-- On lsymb shift to state 66
## Reductions:

State 98:
## Known stack suffix:
## lsymb term_list1 AT term
## LR(1) items:
term_i -> lsymb term_list1 AT term . [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . XOR term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . EXP term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . AND term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . OR term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . DARROW term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . EQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . NEQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . LEQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . LANGLE term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . GEQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . RANGLE term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . DEQUIVARROW term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
## Reductions:
-- On XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT
--   reduce production term_i -> lsymb term_list1 AT term

State 99:
## Known stack suffix:
## DIFF LPAREN term COMMA
## LR(1) items:
sterm_i -> DIFF LPAREN term COMMA . term RPAREN [ XOR TRUE THEN TERM SYSTEM SLASHSLASH SLASHEQUAL SLASH SIGNATURE SEQ SENC SEMICOLON RPAREN RBRACKET RANGLE QMARK PROCESS PRED PLUS PARALLEL OR NOT NEQ NAME MUTABLE MINUS LPAREN LEQ LANGLE INIT IN ID HASH HAPPENS GEQ FALSE EXP EXN EQ EOF ELSE DOT DIFF DEQUIVARROW DARROW COMMA CHANNEL BY BANGU AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On TRUE shift to state 25
-- On SEQ shift to state 26
-- On PRED shift to state 30
-- On NOT shift to state 32
-- On LPAREN shift to state 33
-- On LANGLE shift to state 34
-- On INIT shift to state 35
-- On IF shift to state 36
-- On ID shift to state 2
-- On HAPPENS shift to state 37
-- On FORALL shift to state 39
-- On FIND shift to state 45
-- On FALSE shift to state 51
-- On EXISTS shift to state 52
-- On DIFF shift to state 57
-- On term_i shift to state 59
-- On term shift to state 100
-- On sterm_i shift to state 65
-- On lsymb shift to state 66
## Reductions:

State 100:
## Known stack suffix:
## DIFF LPAREN term COMMA term
## LR(1) items:
sterm_i -> DIFF LPAREN term COMMA term . RPAREN [ XOR TRUE THEN TERM SYSTEM SLASHSLASH SLASHEQUAL SLASH SIGNATURE SEQ SENC SEMICOLON RPAREN RBRACKET RANGLE QMARK PROCESS PRED PLUS PARALLEL OR NOT NEQ NAME MUTABLE MINUS LPAREN LEQ LANGLE INIT IN ID HASH HAPPENS GEQ FALSE EXP EXN EQ EOF ELSE DOT DIFF DEQUIVARROW DARROW COMMA CHANNEL BY BANGU AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . XOR term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . EXP term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . AND term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . OR term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . DARROW term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . EQ term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . NEQ term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . LEQ term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . LANGLE term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . GEQ term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . RANGLE term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . DEQUIVARROW term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
## Transitions:
-- On XOR shift to state 61
-- On RPAREN shift to state 101
-- On RANGLE shift to state 69
-- On OR shift to state 71
-- On NEQ shift to state 73
-- On LEQ shift to state 75
-- On LANGLE shift to state 77
-- On GEQ shift to state 79
-- On EXP shift to state 63
-- On EQ shift to state 81
-- On DEQUIVARROW shift to state 85
-- On DARROW shift to state 87
-- On AND shift to state 83
## Reductions:

State 101:
## Known stack suffix:
## DIFF LPAREN term COMMA term RPAREN
## LR(1) items:
sterm_i -> DIFF LPAREN term COMMA term RPAREN . [ XOR TRUE THEN TERM SYSTEM SLASHSLASH SLASHEQUAL SLASH SIGNATURE SEQ SENC SEMICOLON RPAREN RBRACKET RANGLE QMARK PROCESS PRED PLUS PARALLEL OR NOT NEQ NAME MUTABLE MINUS LPAREN LEQ LANGLE INIT IN ID HASH HAPPENS GEQ FALSE EXP EXN EQ EOF ELSE DOT DIFF DEQUIVARROW DARROW COMMA CHANNEL BY BANGU AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
## Reductions:
-- On XOR TRUE THEN TERM SYSTEM SLASHSLASH SLASHEQUAL SLASH SIGNATURE SEQ SENC SEMICOLON RPAREN RBRACKET RANGLE QMARK PROCESS PRED PLUS PARALLEL OR NOT NEQ NAME MUTABLE MINUS LPAREN LEQ LANGLE INIT IN ID HASH HAPPENS GEQ FALSE EXP EXN EQ EOF ELSE DOT DIFF DEQUIVARROW DARROW COMMA CHANNEL BY BANGU AXIOM AS ARROW AND AENC ABSTRACT
--   reduce production sterm_i -> DIFF LPAREN term COMMA term RPAREN

State 102:
## Known stack suffix:
## EXISTS LPAREN arg_list RPAREN sep term
## LR(1) items:
term_i -> term . XOR term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . EXP term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . AND term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . OR term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . DARROW term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . EQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . NEQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . LEQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . LANGLE term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . GEQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . RANGLE term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> EXISTS LPAREN arg_list RPAREN sep term . [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . DEQUIVARROW term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On XOR shift to state 61
-- On RANGLE shift to state 69
-- On OR shift to state 71
-- On NEQ shift to state 73
-- On LEQ shift to state 75
-- On LANGLE shift to state 77
-- On GEQ shift to state 79
-- On EXP shift to state 63
-- On EQ shift to state 81
-- On DEQUIVARROW shift to state 85
-- On DARROW shift to state 87
-- On AND shift to state 83
## Reductions:
-- On THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET PROCESS PLUS PARALLEL NAME MUTABLE IN HASH EXN EOF ELSE DOT COMMA CHANNEL BY AXIOM AS ARROW AENC ABSTRACT
--   reduce production term_i -> EXISTS LPAREN arg_list RPAREN sep term

State 103:
## Known stack suffix:
## EXISTS lsymb
## LR(1) items:
term_i -> EXISTS lsymb . COLON kind sep term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On COLON shift to state 104
## Reductions:

State 104:
## Known stack suffix:
## EXISTS lsymb COLON
## LR(1) items:
term_i -> EXISTS lsymb COLON . kind sep term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On TIMESTAMP shift to state 10
-- On MESSAGE shift to state 11
-- On INDEX shift to state 12
-- On BOOLEAN shift to state 13
-- On kind shift to state 105
## Reductions:

State 105:
## Known stack suffix:
## EXISTS lsymb COLON kind
## LR(1) items:
term_i -> EXISTS lsymb COLON kind . sep term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On COMMA shift to state 43
-- On sep shift to state 106
## Reductions:
-- On TRUE SEQ PRED NOT LPAREN LANGLE INIT IF ID HAPPENS FORALL FIND FALSE EXISTS DIFF
--   reduce production sep ->

State 106:
## Known stack suffix:
## EXISTS lsymb COLON kind sep
## LR(1) items:
term_i -> EXISTS lsymb COLON kind sep . term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On TRUE shift to state 25
-- On SEQ shift to state 26
-- On PRED shift to state 30
-- On NOT shift to state 32
-- On LPAREN shift to state 33
-- On LANGLE shift to state 34
-- On INIT shift to state 35
-- On IF shift to state 36
-- On ID shift to state 2
-- On HAPPENS shift to state 37
-- On FORALL shift to state 39
-- On FIND shift to state 45
-- On FALSE shift to state 51
-- On EXISTS shift to state 52
-- On DIFF shift to state 57
-- On term_i shift to state 59
-- On term shift to state 107
-- On sterm_i shift to state 65
-- On lsymb shift to state 66
## Reductions:

State 107:
## Known stack suffix:
## EXISTS lsymb COLON kind sep term
## LR(1) items:
term_i -> term . XOR term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . EXP term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . AND term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . OR term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . DARROW term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . EQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . NEQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . LEQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . LANGLE term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . GEQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . RANGLE term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> EXISTS lsymb COLON kind sep term . [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . DEQUIVARROW term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On XOR shift to state 61
-- On RANGLE shift to state 69
-- On OR shift to state 71
-- On NEQ shift to state 73
-- On LEQ shift to state 75
-- On LANGLE shift to state 77
-- On GEQ shift to state 79
-- On EXP shift to state 63
-- On EQ shift to state 81
-- On DEQUIVARROW shift to state 85
-- On DARROW shift to state 87
-- On AND shift to state 83
## Reductions:
-- On THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET PROCESS PLUS PARALLEL NAME MUTABLE IN HASH EXN EOF ELSE DOT COMMA CHANNEL BY AXIOM AS ARROW AENC ABSTRACT
--   reduce production term_i -> EXISTS lsymb COLON kind sep term

State 108:
## Known stack suffix:
## FIND indices SUCHTHAT term
## LR(1) items:
term_i -> term . XOR term [ XOR RANGLE OR NEQ LEQ LANGLE IN GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . EXP term [ XOR RANGLE OR NEQ LEQ LANGLE IN GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> FIND indices SUCHTHAT term . IN term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> FIND indices SUCHTHAT term . IN term ELSE term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . AND term [ XOR RANGLE OR NEQ LEQ LANGLE IN GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . OR term [ XOR RANGLE OR NEQ LEQ LANGLE IN GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . DARROW term [ XOR RANGLE OR NEQ LEQ LANGLE IN GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . EQ term [ XOR RANGLE OR NEQ LEQ LANGLE IN GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . NEQ term [ XOR RANGLE OR NEQ LEQ LANGLE IN GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . LEQ term [ XOR RANGLE OR NEQ LEQ LANGLE IN GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . LANGLE term [ XOR RANGLE OR NEQ LEQ LANGLE IN GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . GEQ term [ XOR RANGLE OR NEQ LEQ LANGLE IN GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . RANGLE term [ XOR RANGLE OR NEQ LEQ LANGLE IN GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . DEQUIVARROW term [ XOR RANGLE OR NEQ LEQ LANGLE IN GEQ EXP EQ DEQUIVARROW DARROW AND ]
## Transitions:
-- On XOR shift to state 61
-- On RANGLE shift to state 69
-- On OR shift to state 71
-- On NEQ shift to state 73
-- On LEQ shift to state 75
-- On LANGLE shift to state 77
-- On IN shift to state 109
-- On GEQ shift to state 79
-- On EXP shift to state 63
-- On EQ shift to state 81
-- On DEQUIVARROW shift to state 85
-- On DARROW shift to state 87
-- On AND shift to state 83
## Reductions:

State 109:
## Known stack suffix:
## FIND indices SUCHTHAT term IN
## LR(1) items:
term_i -> FIND indices SUCHTHAT term IN . term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> FIND indices SUCHTHAT term IN . term ELSE term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On TRUE shift to state 25
-- On SEQ shift to state 26
-- On PRED shift to state 30
-- On NOT shift to state 32
-- On LPAREN shift to state 33
-- On LANGLE shift to state 34
-- On INIT shift to state 35
-- On IF shift to state 36
-- On ID shift to state 2
-- On HAPPENS shift to state 37
-- On FORALL shift to state 39
-- On FIND shift to state 45
-- On FALSE shift to state 51
-- On EXISTS shift to state 52
-- On DIFF shift to state 57
-- On term_i shift to state 59
-- On term shift to state 110
-- On sterm_i shift to state 65
-- On lsymb shift to state 66
## Reductions:

State 110:
## Known stack suffix:
## FIND indices SUCHTHAT term IN term
## LR(1) items:
term_i -> term . XOR term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . EXP term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> FIND indices SUCHTHAT term IN term . [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> FIND indices SUCHTHAT term IN term . ELSE term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . AND term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . OR term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . DARROW term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . EQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . NEQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . LEQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . LANGLE term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . GEQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . RANGLE term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . DEQUIVARROW term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On XOR shift to state 61
-- On EXP shift to state 63
-- On ELSE shift to state 111
## Reductions:
-- On THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXN EQ EOF DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT
--   reduce production term_i -> FIND indices SUCHTHAT term IN term

State 111:
## Known stack suffix:
## FIND indices SUCHTHAT term IN term ELSE
## LR(1) items:
term_i -> FIND indices SUCHTHAT term IN term ELSE . term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On TRUE shift to state 25
-- On SEQ shift to state 26
-- On PRED shift to state 30
-- On NOT shift to state 32
-- On LPAREN shift to state 33
-- On LANGLE shift to state 34
-- On INIT shift to state 35
-- On IF shift to state 36
-- On ID shift to state 2
-- On HAPPENS shift to state 37
-- On FORALL shift to state 39
-- On FIND shift to state 45
-- On FALSE shift to state 51
-- On EXISTS shift to state 52
-- On DIFF shift to state 57
-- On term_i shift to state 59
-- On term shift to state 112
-- On sterm_i shift to state 65
-- On lsymb shift to state 66
## Reductions:

State 112:
## Known stack suffix:
## FIND indices SUCHTHAT term IN term ELSE term
## LR(1) items:
term_i -> term . XOR term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . EXP term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> FIND indices SUCHTHAT term IN term ELSE term . [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . AND term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . OR term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . DARROW term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . EQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . NEQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . LEQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . LANGLE term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . GEQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . RANGLE term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . DEQUIVARROW term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On XOR shift to state 61
-- On EXP shift to state 63
## Reductions:
-- On THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT
--   reduce production term_i -> FIND indices SUCHTHAT term IN term ELSE term

State 113:
## Known stack suffix:
## FORALL LPAREN arg_list RPAREN sep term
## LR(1) items:
term_i -> term . XOR term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . EXP term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . AND term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . OR term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . DARROW term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . EQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . NEQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . LEQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . LANGLE term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . GEQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . RANGLE term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> FORALL LPAREN arg_list RPAREN sep term . [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . DEQUIVARROW term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On XOR shift to state 61
-- On RANGLE shift to state 69
-- On OR shift to state 71
-- On NEQ shift to state 73
-- On LEQ shift to state 75
-- On LANGLE shift to state 77
-- On GEQ shift to state 79
-- On EXP shift to state 63
-- On EQ shift to state 81
-- On DEQUIVARROW shift to state 85
-- On DARROW shift to state 87
-- On AND shift to state 83
## Reductions:
-- On THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET PROCESS PLUS PARALLEL NAME MUTABLE IN HASH EXN EOF ELSE DOT COMMA CHANNEL BY AXIOM AS ARROW AENC ABSTRACT
--   reduce production term_i -> FORALL LPAREN arg_list RPAREN sep term

State 114:
## Known stack suffix:
## FORALL lsymb
## LR(1) items:
term_i -> FORALL lsymb . COLON kind sep term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On COLON shift to state 115
## Reductions:

State 115:
## Known stack suffix:
## FORALL lsymb COLON
## LR(1) items:
term_i -> FORALL lsymb COLON . kind sep term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On TIMESTAMP shift to state 10
-- On MESSAGE shift to state 11
-- On INDEX shift to state 12
-- On BOOLEAN shift to state 13
-- On kind shift to state 116
## Reductions:

State 116:
## Known stack suffix:
## FORALL lsymb COLON kind
## LR(1) items:
term_i -> FORALL lsymb COLON kind . sep term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On COMMA shift to state 43
-- On sep shift to state 117
## Reductions:
-- On TRUE SEQ PRED NOT LPAREN LANGLE INIT IF ID HAPPENS FORALL FIND FALSE EXISTS DIFF
--   reduce production sep ->

State 117:
## Known stack suffix:
## FORALL lsymb COLON kind sep
## LR(1) items:
term_i -> FORALL lsymb COLON kind sep . term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On TRUE shift to state 25
-- On SEQ shift to state 26
-- On PRED shift to state 30
-- On NOT shift to state 32
-- On LPAREN shift to state 33
-- On LANGLE shift to state 34
-- On INIT shift to state 35
-- On IF shift to state 36
-- On ID shift to state 2
-- On HAPPENS shift to state 37
-- On FORALL shift to state 39
-- On FIND shift to state 45
-- On FALSE shift to state 51
-- On EXISTS shift to state 52
-- On DIFF shift to state 57
-- On term_i shift to state 59
-- On term shift to state 118
-- On sterm_i shift to state 65
-- On lsymb shift to state 66
## Reductions:

State 118:
## Known stack suffix:
## FORALL lsymb COLON kind sep term
## LR(1) items:
term_i -> term . XOR term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . EXP term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . AND term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . OR term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . DARROW term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . EQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . NEQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . LEQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . LANGLE term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . GEQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . RANGLE term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> FORALL lsymb COLON kind sep term . [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . DEQUIVARROW term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On XOR shift to state 61
-- On RANGLE shift to state 69
-- On OR shift to state 71
-- On NEQ shift to state 73
-- On LEQ shift to state 75
-- On LANGLE shift to state 77
-- On GEQ shift to state 79
-- On EXP shift to state 63
-- On EQ shift to state 81
-- On DEQUIVARROW shift to state 85
-- On DARROW shift to state 87
-- On AND shift to state 83
## Reductions:
-- On THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET PROCESS PLUS PARALLEL NAME MUTABLE IN HASH EXN EOF ELSE DOT COMMA CHANNEL BY AXIOM AS ARROW AENC ABSTRACT
--   reduce production term_i -> FORALL lsymb COLON kind sep term

State 119:
## Known stack suffix:
## term
## LR(1) items:
separated_nonempty_list(COMMA,term) -> term . [ RPAREN ]
separated_nonempty_list(COMMA,term) -> term . COMMA separated_nonempty_list(COMMA,term) [ RPAREN ]
term_i -> term . XOR term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW COMMA AND ]
term_i -> term . EXP term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW COMMA AND ]
term_i -> term . AND term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW COMMA AND ]
term_i -> term . OR term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW COMMA AND ]
term_i -> term . DARROW term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW COMMA AND ]
term_i -> term . EQ term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW COMMA AND ]
term_i -> term . NEQ term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW COMMA AND ]
term_i -> term . LEQ term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW COMMA AND ]
term_i -> term . LANGLE term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW COMMA AND ]
term_i -> term . GEQ term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW COMMA AND ]
term_i -> term . RANGLE term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW COMMA AND ]
term_i -> term . DEQUIVARROW term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW COMMA AND ]
## Transitions:
-- On XOR shift to state 61
-- On RANGLE shift to state 69
-- On OR shift to state 71
-- On NEQ shift to state 73
-- On LEQ shift to state 75
-- On LANGLE shift to state 77
-- On GEQ shift to state 79
-- On EXP shift to state 63
-- On EQ shift to state 81
-- On DEQUIVARROW shift to state 85
-- On DARROW shift to state 87
-- On COMMA shift to state 120
-- On AND shift to state 83
## Reductions:
-- On RPAREN
--   reduce production separated_nonempty_list(COMMA,term) -> term

State 120:
## Known stack suffix:
## term COMMA
## LR(1) items:
separated_nonempty_list(COMMA,term) -> term COMMA . separated_nonempty_list(COMMA,term) [ RPAREN ]
## Transitions:
-- On TRUE shift to state 25
-- On SEQ shift to state 26
-- On PRED shift to state 30
-- On NOT shift to state 32
-- On LPAREN shift to state 33
-- On LANGLE shift to state 34
-- On INIT shift to state 35
-- On IF shift to state 36
-- On ID shift to state 2
-- On HAPPENS shift to state 37
-- On FORALL shift to state 39
-- On FIND shift to state 45
-- On FALSE shift to state 51
-- On EXISTS shift to state 52
-- On DIFF shift to state 57
-- On term_i shift to state 59
-- On term shift to state 119
-- On sterm_i shift to state 65
-- On separated_nonempty_list(COMMA,term) shift to state 121
-- On lsymb shift to state 66
## Reductions:

State 121:
## Known stack suffix:
## term COMMA separated_nonempty_list(COMMA,term)
## LR(1) items:
separated_nonempty_list(COMMA,term) -> term COMMA separated_nonempty_list(COMMA,term) . [ RPAREN ]
## Transitions:
## Reductions:
-- On RPAREN
--   reduce production separated_nonempty_list(COMMA,term) -> term COMMA separated_nonempty_list(COMMA,term)

State 122:
## Known stack suffix:
## HAPPENS LPAREN separated_nonempty_list(COMMA,term)
## LR(1) items:
sterm_i -> HAPPENS LPAREN separated_nonempty_list(COMMA,term) . RPAREN [ XOR TRUE THEN TERM SYSTEM SLASHSLASH SLASHEQUAL SLASH SIGNATURE SEQ SENC SEMICOLON RPAREN RBRACKET RANGLE QMARK PROCESS PRED PLUS PARALLEL OR NOT NEQ NAME MUTABLE MINUS LPAREN LEQ LANGLE INIT IN ID HASH HAPPENS GEQ FALSE EXP EXN EQ EOF ELSE DOT DIFF DEQUIVARROW DARROW COMMA CHANNEL BY BANGU AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On RPAREN shift to state 123
## Reductions:

State 123:
## Known stack suffix:
## HAPPENS LPAREN separated_nonempty_list(COMMA,term) RPAREN
## LR(1) items:
sterm_i -> HAPPENS LPAREN separated_nonempty_list(COMMA,term) RPAREN . [ XOR TRUE THEN TERM SYSTEM SLASHSLASH SLASHEQUAL SLASH SIGNATURE SEQ SENC SEMICOLON RPAREN RBRACKET RANGLE QMARK PROCESS PRED PLUS PARALLEL OR NOT NEQ NAME MUTABLE MINUS LPAREN LEQ LANGLE INIT IN ID HASH HAPPENS GEQ FALSE EXP EXN EQ EOF ELSE DOT DIFF DEQUIVARROW DARROW COMMA CHANNEL BY BANGU AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
## Reductions:
-- On XOR TRUE THEN TERM SYSTEM SLASHSLASH SLASHEQUAL SLASH SIGNATURE SEQ SENC SEMICOLON RPAREN RBRACKET RANGLE QMARK PROCESS PRED PLUS PARALLEL OR NOT NEQ NAME MUTABLE MINUS LPAREN LEQ LANGLE INIT IN ID HASH HAPPENS GEQ FALSE EXP EXN EQ EOF ELSE DOT DIFF DEQUIVARROW DARROW COMMA CHANNEL BY BANGU AXIOM AS ARROW AND AENC ABSTRACT
--   reduce production sterm_i -> HAPPENS LPAREN separated_nonempty_list(COMMA,term) RPAREN

State 124:
## Known stack suffix:
## IF term
## LR(1) items:
term_i -> term . XOR term [ XOR THEN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . EXP term [ XOR THEN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> IF term . THEN term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> IF term . THEN term ELSE term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . AND term [ XOR THEN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . OR term [ XOR THEN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . DARROW term [ XOR THEN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . EQ term [ XOR THEN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . NEQ term [ XOR THEN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . LEQ term [ XOR THEN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . LANGLE term [ XOR THEN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . GEQ term [ XOR THEN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . RANGLE term [ XOR THEN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . DEQUIVARROW term [ XOR THEN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
## Transitions:
-- On XOR shift to state 61
-- On THEN shift to state 125
-- On RANGLE shift to state 69
-- On OR shift to state 71
-- On NEQ shift to state 73
-- On LEQ shift to state 75
-- On LANGLE shift to state 77
-- On GEQ shift to state 79
-- On EXP shift to state 63
-- On EQ shift to state 81
-- On DEQUIVARROW shift to state 85
-- On DARROW shift to state 87
-- On AND shift to state 83
## Reductions:

State 125:
## Known stack suffix:
## IF term THEN
## LR(1) items:
term_i -> IF term THEN . term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> IF term THEN . term ELSE term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On TRUE shift to state 25
-- On SEQ shift to state 26
-- On PRED shift to state 30
-- On NOT shift to state 32
-- On LPAREN shift to state 33
-- On LANGLE shift to state 34
-- On INIT shift to state 35
-- On IF shift to state 36
-- On ID shift to state 2
-- On HAPPENS shift to state 37
-- On FORALL shift to state 39
-- On FIND shift to state 45
-- On FALSE shift to state 51
-- On EXISTS shift to state 52
-- On DIFF shift to state 57
-- On term_i shift to state 59
-- On term shift to state 126
-- On sterm_i shift to state 65
-- On lsymb shift to state 66
## Reductions:

State 126:
## Known stack suffix:
## IF term THEN term
## LR(1) items:
term_i -> term . XOR term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . EXP term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> IF term THEN term . [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> IF term THEN term . ELSE term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . AND term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . OR term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . DARROW term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . EQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . NEQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . LEQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . LANGLE term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . GEQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . RANGLE term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . DEQUIVARROW term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On XOR shift to state 61
-- On EXP shift to state 63
-- On ELSE shift to state 127
## Reductions:
-- On THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXN EQ EOF DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT
--   reduce production term_i -> IF term THEN term

State 127:
## Known stack suffix:
## IF term THEN term ELSE
## LR(1) items:
term_i -> IF term THEN term ELSE . term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On TRUE shift to state 25
-- On SEQ shift to state 26
-- On PRED shift to state 30
-- On NOT shift to state 32
-- On LPAREN shift to state 33
-- On LANGLE shift to state 34
-- On INIT shift to state 35
-- On IF shift to state 36
-- On ID shift to state 2
-- On HAPPENS shift to state 37
-- On FORALL shift to state 39
-- On FIND shift to state 45
-- On FALSE shift to state 51
-- On EXISTS shift to state 52
-- On DIFF shift to state 57
-- On term_i shift to state 59
-- On term shift to state 128
-- On sterm_i shift to state 65
-- On lsymb shift to state 66
## Reductions:

State 128:
## Known stack suffix:
## IF term THEN term ELSE term
## LR(1) items:
term_i -> term . XOR term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . EXP term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> IF term THEN term ELSE term . [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . AND term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . OR term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . DARROW term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . EQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . NEQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . LEQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . LANGLE term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . GEQ term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . RANGLE term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . DEQUIVARROW term [ XOR THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXP EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On XOR shift to state 61
-- On EXP shift to state 63
## Reductions:
-- On THEN TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RBRACKET RANGLE PROCESS PLUS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE IN HASH GEQ EXN EQ EOF ELSE DOT DEQUIVARROW DARROW COMMA CHANNEL BY AXIOM AS ARROW AND AENC ABSTRACT
--   reduce production term_i -> IF term THEN term ELSE term

State 129:
## Known stack suffix:
## LANGLE term
## LR(1) items:
sterm_i -> LANGLE term . COMMA term RANGLE [ XOR TRUE THEN TERM SYSTEM SLASHSLASH SLASHEQUAL SLASH SIGNATURE SEQ SENC SEMICOLON RPAREN RBRACKET RANGLE QMARK PROCESS PRED PLUS PARALLEL OR NOT NEQ NAME MUTABLE MINUS LPAREN LEQ LANGLE INIT IN ID HASH HAPPENS GEQ FALSE EXP EXN EQ EOF ELSE DOT DIFF DEQUIVARROW DARROW COMMA CHANNEL BY BANGU AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . XOR term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW COMMA AND ]
term_i -> term . EXP term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW COMMA AND ]
term_i -> term . AND term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW COMMA AND ]
term_i -> term . OR term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW COMMA AND ]
term_i -> term . DARROW term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW COMMA AND ]
term_i -> term . EQ term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW COMMA AND ]
term_i -> term . NEQ term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW COMMA AND ]
term_i -> term . LEQ term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW COMMA AND ]
term_i -> term . LANGLE term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW COMMA AND ]
term_i -> term . GEQ term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW COMMA AND ]
term_i -> term . RANGLE term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW COMMA AND ]
term_i -> term . DEQUIVARROW term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW COMMA AND ]
## Transitions:
-- On XOR shift to state 61
-- On RANGLE shift to state 69
-- On OR shift to state 71
-- On NEQ shift to state 73
-- On LEQ shift to state 75
-- On LANGLE shift to state 77
-- On GEQ shift to state 79
-- On EXP shift to state 63
-- On EQ shift to state 81
-- On DEQUIVARROW shift to state 85
-- On DARROW shift to state 87
-- On COMMA shift to state 130
-- On AND shift to state 83
## Reductions:

State 130:
## Known stack suffix:
## LANGLE term COMMA
## LR(1) items:
sterm_i -> LANGLE term COMMA . term RANGLE [ XOR TRUE THEN TERM SYSTEM SLASHSLASH SLASHEQUAL SLASH SIGNATURE SEQ SENC SEMICOLON RPAREN RBRACKET RANGLE QMARK PROCESS PRED PLUS PARALLEL OR NOT NEQ NAME MUTABLE MINUS LPAREN LEQ LANGLE INIT IN ID HASH HAPPENS GEQ FALSE EXP EXN EQ EOF ELSE DOT DIFF DEQUIVARROW DARROW COMMA CHANNEL BY BANGU AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
-- On TRUE shift to state 25
-- On SEQ shift to state 26
-- On PRED shift to state 30
-- On NOT shift to state 32
-- On LPAREN shift to state 33
-- On LANGLE shift to state 34
-- On INIT shift to state 35
-- On IF shift to state 36
-- On ID shift to state 2
-- On HAPPENS shift to state 37
-- On FORALL shift to state 39
-- On FIND shift to state 45
-- On FALSE shift to state 51
-- On EXISTS shift to state 52
-- On DIFF shift to state 57
-- On term_i shift to state 59
-- On term shift to state 131
-- On sterm_i shift to state 65
-- On lsymb shift to state 66
## Reductions:

State 131:
## Known stack suffix:
## LANGLE term COMMA term
## LR(1) items:
sterm_i -> LANGLE term COMMA term . RANGLE [ XOR TRUE THEN TERM SYSTEM SLASHSLASH SLASHEQUAL SLASH SIGNATURE SEQ SENC SEMICOLON RPAREN RBRACKET RANGLE QMARK PROCESS PRED PLUS PARALLEL OR NOT NEQ NAME MUTABLE MINUS LPAREN LEQ LANGLE INIT IN ID HASH HAPPENS GEQ FALSE EXP EXN EQ EOF ELSE DOT DIFF DEQUIVARROW DARROW COMMA CHANNEL BY BANGU AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . XOR term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . EXP term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . AND term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . OR term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . DARROW term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . EQ term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . NEQ term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . LEQ term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . LANGLE term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . GEQ term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . RANGLE term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . DEQUIVARROW term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
## Transitions:
-- On XOR shift to state 61
-- On RANGLE shift to state 132
-- On OR shift to state 71
-- On NEQ shift to state 73
-- On LEQ shift to state 75
-- On LANGLE shift to state 77
-- On GEQ shift to state 79
-- On EXP shift to state 63
-- On EQ shift to state 81
-- On DEQUIVARROW shift to state 85
-- On DARROW shift to state 87
-- On AND shift to state 83
## Reductions:

State 132:
## Known stack suffix:
## LANGLE term COMMA term RANGLE
## LR(1) items:
sterm_i -> LANGLE term COMMA term RANGLE . [ XOR TRUE THEN TERM SYSTEM SLASHSLASH SLASHEQUAL SLASH SIGNATURE SEQ SENC SEMICOLON RPAREN RBRACKET RANGLE QMARK PROCESS PRED PLUS PARALLEL OR NOT NEQ NAME MUTABLE MINUS LPAREN LEQ LANGLE INIT IN ID HASH HAPPENS GEQ FALSE EXP EXN EQ EOF ELSE DOT DIFF DEQUIVARROW DARROW COMMA CHANNEL BY BANGU AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term RANGLE . term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
## Transitions:
-- On IF shift to state 36
-- On FORALL shift to state 39
-- On FIND shift to state 45
-- On EXISTS shift to state 52
-- On term_i shift to state 59
-- On term shift to state 70
-- On sterm_i shift to state 65
-- On lsymb shift to state 66
## Reductions:
-- On XOR TRUE THEN TERM SYSTEM SLASHSLASH SLASHEQUAL SLASH SIGNATURE SEQ SENC SEMICOLON RPAREN RBRACKET RANGLE QMARK PROCESS PRED PLUS PARALLEL OR NOT NEQ NAME MUTABLE MINUS LPAREN LEQ INIT IN ID HASH HAPPENS GEQ FALSE EXP EXN EQ EOF ELSE DOT DIFF DEQUIVARROW DARROW COMMA CHANNEL BY BANGU AXIOM AS ARROW AND AENC ABSTRACT
--   reduce production sterm_i -> LANGLE term COMMA term RANGLE

State 133:
## Known stack suffix:
## LPAREN term_i
## LR(1) items:
sterm_i -> LPAREN term_i . RPAREN [ XOR TRUE THEN TERM SYSTEM SLASHSLASH SLASHEQUAL SLASH SIGNATURE SEQ SENC SEMICOLON RPAREN RBRACKET RANGLE QMARK PROCESS PRED PLUS PARALLEL OR NOT NEQ NAME MUTABLE MINUS LPAREN LEQ LANGLE INIT IN ID HASH HAPPENS GEQ FALSE EXP EXN EQ EOF ELSE DOT DIFF DEQUIVARROW DARROW COMMA CHANNEL BY BANGU AXIOM AS ARROW AND AENC ABSTRACT ]
term -> term_i . [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
## Transitions:
-- On RPAREN shift to state 134
## Reductions:
-- On XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND
--   reduce production term -> term_i

State 134:
## Known stack suffix:
## LPAREN term_i RPAREN
## LR(1) items:
sterm_i -> LPAREN term_i RPAREN . [ XOR TRUE THEN TERM SYSTEM SLASHSLASH SLASHEQUAL SLASH SIGNATURE SEQ SENC SEMICOLON RPAREN RBRACKET RANGLE QMARK PROCESS PRED PLUS PARALLEL OR NOT NEQ NAME MUTABLE MINUS LPAREN LEQ LANGLE INIT IN ID HASH HAPPENS GEQ FALSE EXP EXN EQ EOF ELSE DOT DIFF DEQUIVARROW DARROW COMMA CHANNEL BY BANGU AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
## Reductions:
-- On XOR TRUE THEN TERM SYSTEM SLASHSLASH SLASHEQUAL SLASH SIGNATURE SEQ SENC SEMICOLON RPAREN RBRACKET RANGLE QMARK PROCESS PRED PLUS PARALLEL OR NOT NEQ NAME MUTABLE MINUS LPAREN LEQ LANGLE INIT IN ID HASH HAPPENS GEQ FALSE EXP EXN EQ EOF ELSE DOT DIFF DEQUIVARROW DARROW COMMA CHANNEL BY BANGU AXIOM AS ARROW AND AENC ABSTRACT
--   reduce production sterm_i -> LPAREN term_i RPAREN

State 135:
## Known stack suffix:
## term
## LR(1) items:
term_i -> term . XOR term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . EXP term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . AND term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . OR term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . DARROW term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . EQ term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . NEQ term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . LEQ term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . LANGLE term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . GEQ term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . RANGLE term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . DEQUIVARROW term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
## Transitions:
-- On XOR shift to state 61
-- On RANGLE shift to state 69
-- On OR shift to state 71
-- On NEQ shift to state 73
-- On LEQ shift to state 75
-- On LANGLE shift to state 77
-- On GEQ shift to state 79
-- On EXP shift to state 63
-- On EQ shift to state 81
-- On DEQUIVARROW shift to state 85
-- On DARROW shift to state 87
-- On AND shift to state 83
## Reductions:

State 136:
## Known stack suffix:
## sterm_i
## LR(1) items:
sterm -> sterm_i . [ XOR TRUE THEN TERM SYSTEM SLASHSLASH SLASHEQUAL SLASH SIGNATURE SEQ SENC SEMICOLON RPAREN RBRACKET RANGLE QMARK PROCESS PRED PLUS PARALLEL OR NOT NEQ NAME MUTABLE MINUS LPAREN LEQ LANGLE INIT IN ID HASH HAPPENS GEQ FALSE EXP EXN EQ EOF ELSE DOT DIFF DEQUIVARROW DARROW COMMA CHANNEL BY BANGU AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
## Reductions:
-- On XOR TRUE THEN TERM SYSTEM SLASHSLASH SLASHEQUAL SLASH SIGNATURE SEQ SENC SEMICOLON RPAREN RBRACKET RANGLE QMARK PROCESS PRED PLUS PARALLEL OR NOT NEQ NAME MUTABLE MINUS LPAREN LEQ LANGLE INIT IN ID HASH HAPPENS GEQ FALSE EXP EXN EQ EOF ELSE DOT DIFF DEQUIVARROW DARROW COMMA CHANNEL BY BANGU AXIOM AS ARROW AND AENC ABSTRACT
--   reduce production sterm -> sterm_i

State 137:
## Known stack suffix:
## NOT sterm
## LR(1) items:
sterm_i -> NOT sterm . [ XOR TRUE THEN TERM SYSTEM SLASHSLASH SLASHEQUAL SLASH SIGNATURE SEQ SENC SEMICOLON RPAREN RBRACKET RANGLE QMARK PROCESS PRED PLUS PARALLEL OR NOT NEQ NAME MUTABLE MINUS LPAREN LEQ LANGLE INIT IN ID HASH HAPPENS GEQ FALSE EXP EXN EQ EOF ELSE DOT DIFF DEQUIVARROW DARROW COMMA CHANNEL BY BANGU AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
## Reductions:
-- On XOR TRUE THEN TERM SYSTEM SLASHSLASH SLASHEQUAL SLASH SIGNATURE SEQ SENC SEMICOLON RPAREN RBRACKET RANGLE QMARK PROCESS PRED PLUS PARALLEL OR NOT NEQ NAME MUTABLE MINUS LPAREN LEQ LANGLE INIT IN ID HASH HAPPENS GEQ FALSE EXP EXN EQ EOF ELSE DOT DIFF DEQUIVARROW DARROW COMMA CHANNEL BY BANGU AXIOM AS ARROW AND AENC ABSTRACT
--   reduce production sterm_i -> NOT sterm

State 138:
## Known stack suffix:
## lsymb
## LR(1) items:
sterm_i -> lsymb . [ XOR TRUE THEN TERM SYSTEM SLASHSLASH SLASHEQUAL SLASH SIGNATURE SEQ SENC SEMICOLON RPAREN RBRACKET RANGLE QMARK PROCESS PRED PLUS PARALLEL OR NOT NEQ NAME MUTABLE MINUS LPAREN LEQ LANGLE INIT IN ID HASH HAPPENS GEQ FALSE EXP EXN EQ EOF ELSE DOT DIFF DEQUIVARROW DARROW COMMA CHANNEL BY BANGU AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
## Reductions:
-- On XOR TRUE THEN TERM SYSTEM SLASHSLASH SLASHEQUAL SLASH SIGNATURE SEQ SENC SEMICOLON RPAREN RBRACKET RANGLE QMARK PROCESS PRED PLUS PARALLEL OR NOT NEQ NAME MUTABLE MINUS LPAREN LEQ LANGLE INIT IN ID HASH HAPPENS GEQ FALSE EXP EXN EQ EOF ELSE DOT DIFF DEQUIVARROW DARROW COMMA CHANNEL BY BANGU AXIOM AS ARROW AND AENC ABSTRACT
--   reduce production sterm_i -> lsymb

State 139:
## Known stack suffix:
## PRED LPAREN term
## LR(1) items:
sterm_i -> PRED LPAREN term . RPAREN [ XOR TRUE THEN TERM SYSTEM SLASHSLASH SLASHEQUAL SLASH SIGNATURE SEQ SENC SEMICOLON RPAREN RBRACKET RANGLE QMARK PROCESS PRED PLUS PARALLEL OR NOT NEQ NAME MUTABLE MINUS LPAREN LEQ LANGLE INIT IN ID HASH HAPPENS GEQ FALSE EXP EXN EQ EOF ELSE DOT DIFF DEQUIVARROW DARROW COMMA CHANNEL BY BANGU AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . XOR term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . EXP term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . AND term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . OR term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . DARROW term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . EQ term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . NEQ term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . LEQ term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . LANGLE term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . GEQ term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . RANGLE term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . DEQUIVARROW term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
## Transitions:
-- On XOR shift to state 61
-- On RPAREN shift to state 140
-- On RANGLE shift to state 69
-- On OR shift to state 71
-- On NEQ shift to state 73
-- On LEQ shift to state 75
-- On LANGLE shift to state 77
-- On GEQ shift to state 79
-- On EXP shift to state 63
-- On EQ shift to state 81
-- On DEQUIVARROW shift to state 85
-- On DARROW shift to state 87
-- On AND shift to state 83
## Reductions:

State 140:
## Known stack suffix:
## PRED LPAREN term RPAREN
## LR(1) items:
sterm_i -> PRED LPAREN term RPAREN . [ XOR TRUE THEN TERM SYSTEM SLASHSLASH SLASHEQUAL SLASH SIGNATURE SEQ SENC SEMICOLON RPAREN RBRACKET RANGLE QMARK PROCESS PRED PLUS PARALLEL OR NOT NEQ NAME MUTABLE MINUS LPAREN LEQ LANGLE INIT IN ID HASH HAPPENS GEQ FALSE EXP EXN EQ EOF ELSE DOT DIFF DEQUIVARROW DARROW COMMA CHANNEL BY BANGU AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
## Reductions:
-- On XOR TRUE THEN TERM SYSTEM SLASHSLASH SLASHEQUAL SLASH SIGNATURE SEQ SENC SEMICOLON RPAREN RBRACKET RANGLE QMARK PROCESS PRED PLUS PARALLEL OR NOT NEQ NAME MUTABLE MINUS LPAREN LEQ LANGLE INIT IN ID HASH HAPPENS GEQ FALSE EXP EXN EQ EOF ELSE DOT DIFF DEQUIVARROW DARROW COMMA CHANNEL BY BANGU AXIOM AS ARROW AND AENC ABSTRACT
--   reduce production sterm_i -> PRED LPAREN term RPAREN

State 141:
## Known stack suffix:
## SEQ LPAREN ids ARROW term
## LR(1) items:
sterm_i -> SEQ LPAREN ids ARROW term . RPAREN [ XOR TRUE THEN TERM SYSTEM SLASHSLASH SLASHEQUAL SLASH SIGNATURE SEQ SENC SEMICOLON RPAREN RBRACKET RANGLE QMARK PROCESS PRED PLUS PARALLEL OR NOT NEQ NAME MUTABLE MINUS LPAREN LEQ LANGLE INIT IN ID HASH HAPPENS GEQ FALSE EXP EXN EQ EOF ELSE DOT DIFF DEQUIVARROW DARROW COMMA CHANNEL BY BANGU AXIOM AS ARROW AND AENC ABSTRACT ]
term_i -> term . XOR term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . EXP term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . AND term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . OR term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . DARROW term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . EQ term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . NEQ term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . LEQ term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . LANGLE term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . GEQ term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . RANGLE term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . DEQUIVARROW term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
## Transitions:
-- On XOR shift to state 61
-- On RPAREN shift to state 142
-- On RANGLE shift to state 69
-- On OR shift to state 71
-- On NEQ shift to state 73
-- On LEQ shift to state 75
-- On LANGLE shift to state 77
-- On GEQ shift to state 79
-- On EXP shift to state 63
-- On EQ shift to state 81
-- On DEQUIVARROW shift to state 85
-- On DARROW shift to state 87
-- On AND shift to state 83
## Reductions:

State 142:
## Known stack suffix:
## SEQ LPAREN ids ARROW term RPAREN
## LR(1) items:
sterm_i -> SEQ LPAREN ids ARROW term RPAREN . [ XOR TRUE THEN TERM SYSTEM SLASHSLASH SLASHEQUAL SLASH SIGNATURE SEQ SENC SEMICOLON RPAREN RBRACKET RANGLE QMARK PROCESS PRED PLUS PARALLEL OR NOT NEQ NAME MUTABLE MINUS LPAREN LEQ LANGLE INIT IN ID HASH HAPPENS GEQ FALSE EXP EXN EQ EOF ELSE DOT DIFF DEQUIVARROW DARROW COMMA CHANNEL BY BANGU AXIOM AS ARROW AND AENC ABSTRACT ]
## Transitions:
## Reductions:
-- On XOR TRUE THEN TERM SYSTEM SLASHSLASH SLASHEQUAL SLASH SIGNATURE SEQ SENC SEMICOLON RPAREN RBRACKET RANGLE QMARK PROCESS PRED PLUS PARALLEL OR NOT NEQ NAME MUTABLE MINUS LPAREN LEQ LANGLE INIT IN ID HASH HAPPENS GEQ FALSE EXP EXN EQ EOF ELSE DOT DIFF DEQUIVARROW DARROW COMMA CHANNEL BY BANGU AXIOM AS ARROW AND AENC ABSTRACT
--   reduce production sterm_i -> SEQ LPAREN ids ARROW term RPAREN

State 143:
## Known stack suffix:
## TERM lsymb opt_arg_list COLON msg_or_bool EQ term
## LR(1) items:
declaration_i -> TERM lsymb opt_arg_list COLON msg_or_bool EQ term . [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
term_i -> term . XOR term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . EXP term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . AND term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . OR term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . DARROW term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . EQ term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . NEQ term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . LEQ term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . LANGLE term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . GEQ term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . RANGLE term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . DEQUIVARROW term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
## Transitions:
-- On XOR shift to state 61
-- On RANGLE shift to state 69
-- On OR shift to state 71
-- On NEQ shift to state 73
-- On LEQ shift to state 75
-- On LANGLE shift to state 77
-- On GEQ shift to state 79
-- On EXP shift to state 63
-- On EQ shift to state 81
-- On DEQUIVARROW shift to state 85
-- On DARROW shift to state 87
-- On AND shift to state 83
## Reductions:
-- On TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT
--   reduce production declaration_i -> TERM lsymb opt_arg_list COLON msg_or_bool EQ term

State 144:
## Known stack suffix:
## SYSTEM
## LR(1) items:
declaration_i -> SYSTEM . process [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
declaration_i -> SYSTEM . LBRACKET lsymb RBRACKET process [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On OUT shift to state 145
-- On NULL shift to state 152
-- On NEW shift to state 153
-- On LPAREN shift to state 156
-- On LET shift to state 157
-- On LBRACKET shift to state 208
-- On IN shift to state 162
-- On IF shift to state 169
-- On ID shift to state 2
-- On FIND shift to state 172
-- On BANG shift to state 177
-- On process_i shift to state 178
-- On process shift to state 212
-- On lsymb shift to state 180
## Reductions:

State 145:
## Known stack suffix:
## OUT
## LR(1) items:
process_i -> OUT . LPAREN lsymb COMMA term RPAREN process_cont [ TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On LPAREN shift to state 146
## Reductions:

State 146:
## Known stack suffix:
## OUT LPAREN
## LR(1) items:
process_i -> OUT LPAREN . lsymb COMMA term RPAREN process_cont [ TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On ID shift to state 2
-- On lsymb shift to state 147
## Reductions:

State 147:
## Known stack suffix:
## OUT LPAREN lsymb
## LR(1) items:
process_i -> OUT LPAREN lsymb . COMMA term RPAREN process_cont [ TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On COMMA shift to state 148
## Reductions:

State 148:
## Known stack suffix:
## OUT LPAREN lsymb COMMA
## LR(1) items:
process_i -> OUT LPAREN lsymb COMMA . term RPAREN process_cont [ TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On TRUE shift to state 25
-- On SEQ shift to state 26
-- On PRED shift to state 30
-- On NOT shift to state 32
-- On LPAREN shift to state 33
-- On LANGLE shift to state 34
-- On INIT shift to state 35
-- On IF shift to state 36
-- On ID shift to state 2
-- On HAPPENS shift to state 37
-- On FORALL shift to state 39
-- On FIND shift to state 45
-- On FALSE shift to state 51
-- On EXISTS shift to state 52
-- On DIFF shift to state 57
-- On term_i shift to state 59
-- On term shift to state 149
-- On sterm_i shift to state 65
-- On lsymb shift to state 66
## Reductions:

State 149:
## Known stack suffix:
## OUT LPAREN lsymb COMMA term
## LR(1) items:
process_i -> OUT LPAREN lsymb COMMA term . RPAREN process_cont [ TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT ]
term_i -> term . XOR term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . EXP term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . AND term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . OR term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . DARROW term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . EQ term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . NEQ term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . LEQ term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . LANGLE term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . GEQ term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . RANGLE term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . DEQUIVARROW term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
## Transitions:
-- On XOR shift to state 61
-- On RPAREN shift to state 150
-- On RANGLE shift to state 69
-- On OR shift to state 71
-- On NEQ shift to state 73
-- On LEQ shift to state 75
-- On LANGLE shift to state 77
-- On GEQ shift to state 79
-- On EXP shift to state 63
-- On EQ shift to state 81
-- On DEQUIVARROW shift to state 85
-- On DARROW shift to state 87
-- On AND shift to state 83
## Reductions:

State 150:
## Known stack suffix:
## OUT LPAREN lsymb COMMA term RPAREN
## LR(1) items:
process_i -> OUT LPAREN lsymb COMMA term RPAREN . process_cont [ TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On SEMICOLON shift to state 151
-- On process_cont shift to state 207
## Reductions:
-- On TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT
--   reduce production process_cont ->

State 151:
## Known stack suffix:
## SEMICOLON
## LR(1) items:
process_cont -> SEMICOLON . process [ TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On OUT shift to state 145
-- On NULL shift to state 152
-- On NEW shift to state 153
-- On LPAREN shift to state 156
-- On LET shift to state 157
-- On IN shift to state 162
-- On IF shift to state 169
-- On ID shift to state 2
-- On FIND shift to state 172
-- On BANG shift to state 177
-- On process_i shift to state 178
-- On process shift to state 206
-- On lsymb shift to state 180
## Reductions:

State 152:
## Known stack suffix:
## NULL
## LR(1) items:
process_i -> NULL . [ TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
## Reductions:
-- On TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT
--   reduce production process_i -> NULL

State 153:
## Known stack suffix:
## NEW
## LR(1) items:
process_i -> NEW . lsymb SEMICOLON process [ TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On ID shift to state 2
-- On lsymb shift to state 154
## Reductions:

State 154:
## Known stack suffix:
## NEW lsymb
## LR(1) items:
process_i -> NEW lsymb . SEMICOLON process [ TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On SEMICOLON shift to state 155
## Reductions:

State 155:
## Known stack suffix:
## NEW lsymb SEMICOLON
## LR(1) items:
process_i -> NEW lsymb SEMICOLON . process [ TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On OUT shift to state 145
-- On NULL shift to state 152
-- On NEW shift to state 153
-- On LPAREN shift to state 156
-- On LET shift to state 157
-- On IN shift to state 162
-- On IF shift to state 169
-- On ID shift to state 2
-- On FIND shift to state 172
-- On BANG shift to state 177
-- On process_i shift to state 178
-- On process shift to state 205
-- On lsymb shift to state 180
## Reductions:

State 156:
## Known stack suffix:
## LPAREN
## LR(1) items:
process_i -> LPAREN . processes_i RPAREN [ TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On OUT shift to state 145
-- On NULL shift to state 152
-- On NEW shift to state 153
-- On LPAREN shift to state 156
-- On LET shift to state 157
-- On IN shift to state 162
-- On IF shift to state 169
-- On ID shift to state 2
-- On FIND shift to state 172
-- On BANG shift to state 177
-- On processes_i shift to state 199
-- On process_i shift to state 201
-- On process shift to state 202
-- On lsymb shift to state 180
## Reductions:

State 157:
## Known stack suffix:
## LET
## LR(1) items:
process_i -> LET . lsymb EQ term IN process [ TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On ID shift to state 2
-- On lsymb shift to state 158
## Reductions:

State 158:
## Known stack suffix:
## LET lsymb
## LR(1) items:
process_i -> LET lsymb . EQ term IN process [ TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On EQ shift to state 159
## Reductions:

State 159:
## Known stack suffix:
## LET lsymb EQ
## LR(1) items:
process_i -> LET lsymb EQ . term IN process [ TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On TRUE shift to state 25
-- On SEQ shift to state 26
-- On PRED shift to state 30
-- On NOT shift to state 32
-- On LPAREN shift to state 33
-- On LANGLE shift to state 34
-- On INIT shift to state 35
-- On IF shift to state 36
-- On ID shift to state 2
-- On HAPPENS shift to state 37
-- On FORALL shift to state 39
-- On FIND shift to state 45
-- On FALSE shift to state 51
-- On EXISTS shift to state 52
-- On DIFF shift to state 57
-- On term_i shift to state 59
-- On term shift to state 160
-- On sterm_i shift to state 65
-- On lsymb shift to state 66
## Reductions:

State 160:
## Known stack suffix:
## LET lsymb EQ term
## LR(1) items:
process_i -> LET lsymb EQ term . IN process [ TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT ]
term_i -> term . XOR term [ XOR RANGLE OR NEQ LEQ LANGLE IN GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . EXP term [ XOR RANGLE OR NEQ LEQ LANGLE IN GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . AND term [ XOR RANGLE OR NEQ LEQ LANGLE IN GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . OR term [ XOR RANGLE OR NEQ LEQ LANGLE IN GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . DARROW term [ XOR RANGLE OR NEQ LEQ LANGLE IN GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . EQ term [ XOR RANGLE OR NEQ LEQ LANGLE IN GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . NEQ term [ XOR RANGLE OR NEQ LEQ LANGLE IN GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . LEQ term [ XOR RANGLE OR NEQ LEQ LANGLE IN GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . LANGLE term [ XOR RANGLE OR NEQ LEQ LANGLE IN GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . GEQ term [ XOR RANGLE OR NEQ LEQ LANGLE IN GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . RANGLE term [ XOR RANGLE OR NEQ LEQ LANGLE IN GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . DEQUIVARROW term [ XOR RANGLE OR NEQ LEQ LANGLE IN GEQ EXP EQ DEQUIVARROW DARROW AND ]
## Transitions:
-- On XOR shift to state 61
-- On RANGLE shift to state 69
-- On OR shift to state 71
-- On NEQ shift to state 73
-- On LEQ shift to state 75
-- On LANGLE shift to state 77
-- On IN shift to state 161
-- On GEQ shift to state 79
-- On EXP shift to state 63
-- On EQ shift to state 81
-- On DEQUIVARROW shift to state 85
-- On DARROW shift to state 87
-- On AND shift to state 83
## Reductions:

State 161:
## Known stack suffix:
## LET lsymb EQ term IN
## LR(1) items:
process_i -> LET lsymb EQ term IN . process [ TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On OUT shift to state 145
-- On NULL shift to state 152
-- On NEW shift to state 153
-- On LPAREN shift to state 156
-- On LET shift to state 157
-- On IN shift to state 162
-- On IF shift to state 169
-- On ID shift to state 2
-- On FIND shift to state 172
-- On BANG shift to state 177
-- On process_i shift to state 178
-- On process shift to state 198
-- On lsymb shift to state 180
## Reductions:

State 162:
## Known stack suffix:
## IN
## LR(1) items:
process_i -> IN . LPAREN lsymb COMMA lsymb RPAREN process_cont [ TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On LPAREN shift to state 163
## Reductions:

State 163:
## Known stack suffix:
## IN LPAREN
## LR(1) items:
process_i -> IN LPAREN . lsymb COMMA lsymb RPAREN process_cont [ TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On ID shift to state 2
-- On lsymb shift to state 164
## Reductions:

State 164:
## Known stack suffix:
## IN LPAREN lsymb
## LR(1) items:
process_i -> IN LPAREN lsymb . COMMA lsymb RPAREN process_cont [ TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On COMMA shift to state 165
## Reductions:

State 165:
## Known stack suffix:
## IN LPAREN lsymb COMMA
## LR(1) items:
process_i -> IN LPAREN lsymb COMMA . lsymb RPAREN process_cont [ TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On ID shift to state 2
-- On lsymb shift to state 166
## Reductions:

State 166:
## Known stack suffix:
## IN LPAREN lsymb COMMA lsymb
## LR(1) items:
process_i -> IN LPAREN lsymb COMMA lsymb . RPAREN process_cont [ TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On RPAREN shift to state 167
## Reductions:

State 167:
## Known stack suffix:
## IN LPAREN lsymb COMMA lsymb RPAREN
## LR(1) items:
process_i -> IN LPAREN lsymb COMMA lsymb RPAREN . process_cont [ TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On SEMICOLON shift to state 151
-- On process_cont shift to state 168
## Reductions:
-- On TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT
--   reduce production process_cont ->

State 168:
## Known stack suffix:
## IN LPAREN lsymb COMMA lsymb RPAREN process_cont
## LR(1) items:
process_i -> IN LPAREN lsymb COMMA lsymb RPAREN process_cont . [ TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
## Reductions:
-- On TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT
--   reduce production process_i -> IN LPAREN lsymb COMMA lsymb RPAREN process_cont

State 169:
## Known stack suffix:
## IF
## LR(1) items:
process_i -> IF . term THEN process else_process [ TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On TRUE shift to state 25
-- On SEQ shift to state 26
-- On PRED shift to state 30
-- On NOT shift to state 32
-- On LPAREN shift to state 33
-- On LANGLE shift to state 34
-- On INIT shift to state 35
-- On IF shift to state 36
-- On ID shift to state 2
-- On HAPPENS shift to state 37
-- On FORALL shift to state 39
-- On FIND shift to state 45
-- On FALSE shift to state 51
-- On EXISTS shift to state 52
-- On DIFF shift to state 57
-- On term_i shift to state 59
-- On term shift to state 170
-- On sterm_i shift to state 65
-- On lsymb shift to state 66
## Reductions:

State 170:
## Known stack suffix:
## IF term
## LR(1) items:
process_i -> IF term . THEN process else_process [ TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT ]
term_i -> term . XOR term [ XOR THEN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . EXP term [ XOR THEN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . AND term [ XOR THEN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . OR term [ XOR THEN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . DARROW term [ XOR THEN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . EQ term [ XOR THEN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . NEQ term [ XOR THEN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . LEQ term [ XOR THEN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . LANGLE term [ XOR THEN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . GEQ term [ XOR THEN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . RANGLE term [ XOR THEN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . DEQUIVARROW term [ XOR THEN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
## Transitions:
-- On XOR shift to state 61
-- On THEN shift to state 171
-- On RANGLE shift to state 69
-- On OR shift to state 71
-- On NEQ shift to state 73
-- On LEQ shift to state 75
-- On LANGLE shift to state 77
-- On GEQ shift to state 79
-- On EXP shift to state 63
-- On EQ shift to state 81
-- On DEQUIVARROW shift to state 85
-- On DARROW shift to state 87
-- On AND shift to state 83
## Reductions:

State 171:
## Known stack suffix:
## IF term THEN
## LR(1) items:
process_i -> IF term THEN . process else_process [ TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On OUT shift to state 145
-- On NULL shift to state 152
-- On NEW shift to state 153
-- On LPAREN shift to state 156
-- On LET shift to state 157
-- On IN shift to state 162
-- On IF shift to state 169
-- On ID shift to state 2
-- On FIND shift to state 172
-- On BANG shift to state 177
-- On process_i shift to state 178
-- On process shift to state 196
-- On lsymb shift to state 180
## Reductions:

State 172:
## Known stack suffix:
## FIND
## LR(1) items:
process_i -> FIND . indices SUCHTHAT term IN process else_process [ TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On ID shift to state 2
-- On lsymb shift to state 46
-- On indices shift to state 173
## Reductions:

State 173:
## Known stack suffix:
## FIND indices
## LR(1) items:
process_i -> FIND indices . SUCHTHAT term IN process else_process [ TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On SUCHTHAT shift to state 174
## Reductions:

State 174:
## Known stack suffix:
## FIND indices SUCHTHAT
## LR(1) items:
process_i -> FIND indices SUCHTHAT . term IN process else_process [ TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On TRUE shift to state 25
-- On SEQ shift to state 26
-- On PRED shift to state 30
-- On NOT shift to state 32
-- On LPAREN shift to state 33
-- On LANGLE shift to state 34
-- On INIT shift to state 35
-- On IF shift to state 36
-- On ID shift to state 2
-- On HAPPENS shift to state 37
-- On FORALL shift to state 39
-- On FIND shift to state 45
-- On FALSE shift to state 51
-- On EXISTS shift to state 52
-- On DIFF shift to state 57
-- On term_i shift to state 59
-- On term shift to state 175
-- On sterm_i shift to state 65
-- On lsymb shift to state 66
## Reductions:

State 175:
## Known stack suffix:
## FIND indices SUCHTHAT term
## LR(1) items:
process_i -> FIND indices SUCHTHAT term . IN process else_process [ TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT ]
term_i -> term . XOR term [ XOR RANGLE OR NEQ LEQ LANGLE IN GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . EXP term [ XOR RANGLE OR NEQ LEQ LANGLE IN GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . AND term [ XOR RANGLE OR NEQ LEQ LANGLE IN GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . OR term [ XOR RANGLE OR NEQ LEQ LANGLE IN GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . DARROW term [ XOR RANGLE OR NEQ LEQ LANGLE IN GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . EQ term [ XOR RANGLE OR NEQ LEQ LANGLE IN GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . NEQ term [ XOR RANGLE OR NEQ LEQ LANGLE IN GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . LEQ term [ XOR RANGLE OR NEQ LEQ LANGLE IN GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . LANGLE term [ XOR RANGLE OR NEQ LEQ LANGLE IN GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . GEQ term [ XOR RANGLE OR NEQ LEQ LANGLE IN GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . RANGLE term [ XOR RANGLE OR NEQ LEQ LANGLE IN GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . DEQUIVARROW term [ XOR RANGLE OR NEQ LEQ LANGLE IN GEQ EXP EQ DEQUIVARROW DARROW AND ]
## Transitions:
-- On XOR shift to state 61
-- On RANGLE shift to state 69
-- On OR shift to state 71
-- On NEQ shift to state 73
-- On LEQ shift to state 75
-- On LANGLE shift to state 77
-- On IN shift to state 176
-- On GEQ shift to state 79
-- On EXP shift to state 63
-- On EQ shift to state 81
-- On DEQUIVARROW shift to state 85
-- On DARROW shift to state 87
-- On AND shift to state 83
## Reductions:

State 176:
## Known stack suffix:
## FIND indices SUCHTHAT term IN
## LR(1) items:
process_i -> FIND indices SUCHTHAT term IN . process else_process [ TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On OUT shift to state 145
-- On NULL shift to state 152
-- On NEW shift to state 153
-- On LPAREN shift to state 156
-- On LET shift to state 157
-- On IN shift to state 162
-- On IF shift to state 169
-- On ID shift to state 2
-- On FIND shift to state 172
-- On BANG shift to state 177
-- On process_i shift to state 178
-- On process shift to state 192
-- On lsymb shift to state 180
## Reductions:

State 177:
## Known stack suffix:
## BANG
## LR(1) items:
process_i -> BANG . process [ TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On OUT shift to state 145
-- On NULL shift to state 152
-- On NEW shift to state 153
-- On LPAREN shift to state 156
-- On LET shift to state 157
-- On IN shift to state 162
-- On IF shift to state 169
-- On ID shift to state 2
-- On FIND shift to state 172
-- On BANG shift to state 177
-- On process_i shift to state 178
-- On process shift to state 179
-- On lsymb shift to state 180
## Reductions:

State 178:
## Known stack suffix:
## process_i
## LR(1) items:
process -> process_i . [ TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
## Reductions:
-- On TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT
--   reduce production process -> process_i

State 179:
## Known stack suffix:
## BANG process
## LR(1) items:
process_i -> BANG process . [ TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
## Reductions:
-- On TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT
--   reduce production process_i -> BANG process

State 180:
## Known stack suffix:
## lsymb
## LR(1) items:
process_i -> lsymb . term_list [ TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT ]
process_i -> lsymb . COLON process [ TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT ]
process_i -> lsymb . term_list ASSIGN term process_cont [ TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On LPAREN shift to state 181
-- On COLON shift to state 186
-- On term_list shift to state 188
## Reductions:
-- On TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM ASSIGN AENC ABSTRACT
--   reduce production term_list ->

State 181:
## Known stack suffix:
## LPAREN
## LR(1) items:
term_list -> LPAREN . RPAREN [ TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM ASSIGN AENC ABSTRACT ]
term_list -> LPAREN . term tm_list RPAREN [ TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM ASSIGN AENC ABSTRACT ]
## Transitions:
-- On TRUE shift to state 25
-- On SEQ shift to state 26
-- On RPAREN shift to state 182
-- On PRED shift to state 30
-- On NOT shift to state 32
-- On LPAREN shift to state 33
-- On LANGLE shift to state 34
-- On INIT shift to state 35
-- On IF shift to state 36
-- On ID shift to state 2
-- On HAPPENS shift to state 37
-- On FORALL shift to state 39
-- On FIND shift to state 45
-- On FALSE shift to state 51
-- On EXISTS shift to state 52
-- On DIFF shift to state 57
-- On term_i shift to state 59
-- On term shift to state 183
-- On sterm_i shift to state 65
-- On lsymb shift to state 66
## Reductions:

State 182:
## Known stack suffix:
## LPAREN RPAREN
## LR(1) items:
term_list -> LPAREN RPAREN . [ TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM ASSIGN AENC ABSTRACT ]
## Transitions:
## Reductions:
-- On TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM ASSIGN AENC ABSTRACT
--   reduce production term_list -> LPAREN RPAREN

State 183:
## Known stack suffix:
## LPAREN term
## LR(1) items:
term_i -> term . XOR term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW COMMA AND ]
term_i -> term . EXP term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW COMMA AND ]
term_i -> term . AND term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW COMMA AND ]
term_i -> term . OR term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW COMMA AND ]
term_i -> term . DARROW term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW COMMA AND ]
term_i -> term . EQ term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW COMMA AND ]
term_i -> term . NEQ term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW COMMA AND ]
term_i -> term . LEQ term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW COMMA AND ]
term_i -> term . LANGLE term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW COMMA AND ]
term_i -> term . GEQ term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW COMMA AND ]
term_i -> term . RANGLE term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW COMMA AND ]
term_i -> term . DEQUIVARROW term [ XOR RPAREN RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW COMMA AND ]
term_list -> LPAREN term . tm_list RPAREN [ TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM ASSIGN AENC ABSTRACT ]
## Transitions:
-- On XOR shift to state 61
-- On RANGLE shift to state 69
-- On OR shift to state 71
-- On NEQ shift to state 73
-- On LEQ shift to state 75
-- On LANGLE shift to state 77
-- On GEQ shift to state 79
-- On EXP shift to state 63
-- On EQ shift to state 81
-- On DEQUIVARROW shift to state 85
-- On DARROW shift to state 87
-- On COMMA shift to state 89
-- On AND shift to state 83
-- On tm_list shift to state 184
## Reductions:
-- On RPAREN
--   reduce production tm_list ->

State 184:
## Known stack suffix:
## LPAREN term tm_list
## LR(1) items:
term_list -> LPAREN term tm_list . RPAREN [ TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM ASSIGN AENC ABSTRACT ]
## Transitions:
-- On RPAREN shift to state 185
## Reductions:

State 185:
## Known stack suffix:
## LPAREN term tm_list RPAREN
## LR(1) items:
term_list -> LPAREN term tm_list RPAREN . [ TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM ASSIGN AENC ABSTRACT ]
## Transitions:
## Reductions:
-- On TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM ASSIGN AENC ABSTRACT
--   reduce production term_list -> LPAREN term tm_list RPAREN

State 186:
## Known stack suffix:
## lsymb COLON
## LR(1) items:
process_i -> lsymb COLON . process [ TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On OUT shift to state 145
-- On NULL shift to state 152
-- On NEW shift to state 153
-- On LPAREN shift to state 156
-- On LET shift to state 157
-- On IN shift to state 162
-- On IF shift to state 169
-- On ID shift to state 2
-- On FIND shift to state 172
-- On BANG shift to state 177
-- On process_i shift to state 178
-- On process shift to state 187
-- On lsymb shift to state 180
## Reductions:

State 187:
## Known stack suffix:
## lsymb COLON process
## LR(1) items:
process_i -> lsymb COLON process . [ TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
## Reductions:
-- On TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT
--   reduce production process_i -> lsymb COLON process

State 188:
## Known stack suffix:
## lsymb term_list
## LR(1) items:
process_i -> lsymb term_list . [ TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT ]
process_i -> lsymb term_list . ASSIGN term process_cont [ TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On ASSIGN shift to state 189
## Reductions:
-- On TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT
--   reduce production process_i -> lsymb term_list

State 189:
## Known stack suffix:
## lsymb term_list ASSIGN
## LR(1) items:
process_i -> lsymb term_list ASSIGN . term process_cont [ TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On TRUE shift to state 25
-- On SEQ shift to state 26
-- On PRED shift to state 30
-- On NOT shift to state 32
-- On LPAREN shift to state 33
-- On LANGLE shift to state 34
-- On INIT shift to state 35
-- On IF shift to state 36
-- On ID shift to state 2
-- On HAPPENS shift to state 37
-- On FORALL shift to state 39
-- On FIND shift to state 45
-- On FALSE shift to state 51
-- On EXISTS shift to state 52
-- On DIFF shift to state 57
-- On term_i shift to state 59
-- On term shift to state 190
-- On sterm_i shift to state 65
-- On lsymb shift to state 66
## Reductions:

State 190:
## Known stack suffix:
## lsymb term_list ASSIGN term
## LR(1) items:
process_i -> lsymb term_list ASSIGN term . process_cont [ TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT ]
term_i -> term . XOR term [ XOR TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RANGLE PROCESS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ EOF ELSE DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . EXP term [ XOR TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RANGLE PROCESS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ EOF ELSE DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . AND term [ XOR TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RANGLE PROCESS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ EOF ELSE DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . OR term [ XOR TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RANGLE PROCESS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ EOF ELSE DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . DARROW term [ XOR TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RANGLE PROCESS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ EOF ELSE DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . EQ term [ XOR TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RANGLE PROCESS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ EOF ELSE DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . NEQ term [ XOR TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RANGLE PROCESS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ EOF ELSE DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . LEQ term [ XOR TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RANGLE PROCESS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ EOF ELSE DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . LANGLE term [ XOR TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RANGLE PROCESS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ EOF ELSE DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . GEQ term [ XOR TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RANGLE PROCESS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ EOF ELSE DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . RANGLE term [ XOR TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RANGLE PROCESS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ EOF ELSE DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . DEQUIVARROW term [ XOR TERM SYSTEM SIGNATURE SENC SEMICOLON RPAREN RANGLE PROCESS PARALLEL OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ EOF ELSE DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
## Transitions:
-- On XOR shift to state 61
-- On SEMICOLON shift to state 151
-- On RANGLE shift to state 69
-- On OR shift to state 71
-- On NEQ shift to state 73
-- On LEQ shift to state 75
-- On LANGLE shift to state 77
-- On GEQ shift to state 79
-- On EXP shift to state 63
-- On EQ shift to state 81
-- On DEQUIVARROW shift to state 85
-- On DARROW shift to state 87
-- On AND shift to state 83
-- On process_cont shift to state 191
## Reductions:
-- On TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT
--   reduce production process_cont ->

State 191:
## Known stack suffix:
## lsymb term_list ASSIGN term process_cont
## LR(1) items:
process_i -> lsymb term_list ASSIGN term process_cont . [ TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
## Reductions:
-- On TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT
--   reduce production process_i -> lsymb term_list ASSIGN term process_cont

State 192:
## Known stack suffix:
## FIND indices SUCHTHAT term IN process
## LR(1) items:
process_i -> FIND indices SUCHTHAT term IN process . else_process [ TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On ELSE shift to state 193
-- On else_process shift to state 195
## Reductions:
-- On TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF DOT CHANNEL AXIOM AENC ABSTRACT
--   reduce production else_process ->

State 193:
## Known stack suffix:
## ELSE
## LR(1) items:
else_process -> ELSE . process [ TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On OUT shift to state 145
-- On NULL shift to state 152
-- On NEW shift to state 153
-- On LPAREN shift to state 156
-- On LET shift to state 157
-- On IN shift to state 162
-- On IF shift to state 169
-- On ID shift to state 2
-- On FIND shift to state 172
-- On BANG shift to state 177
-- On process_i shift to state 178
-- On process shift to state 194
-- On lsymb shift to state 180
## Reductions:

State 194:
## Known stack suffix:
## ELSE process
## LR(1) items:
else_process -> ELSE process . [ TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
## Reductions:
-- On TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT
--   reduce production else_process -> ELSE process

State 195:
## Known stack suffix:
## FIND indices SUCHTHAT term IN process else_process
## LR(1) items:
process_i -> FIND indices SUCHTHAT term IN process else_process . [ TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
## Reductions:
-- On TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT
--   reduce production process_i -> FIND indices SUCHTHAT term IN process else_process

State 196:
## Known stack suffix:
## IF term THEN process
## LR(1) items:
process_i -> IF term THEN process . else_process [ TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On ELSE shift to state 193
-- On else_process shift to state 197
## Reductions:
-- On TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF DOT CHANNEL AXIOM AENC ABSTRACT
--   reduce production else_process ->

State 197:
## Known stack suffix:
## IF term THEN process else_process
## LR(1) items:
process_i -> IF term THEN process else_process . [ TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
## Reductions:
-- On TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT
--   reduce production process_i -> IF term THEN process else_process

State 198:
## Known stack suffix:
## LET lsymb EQ term IN process
## LR(1) items:
process_i -> LET lsymb EQ term IN process . [ TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
## Reductions:
-- On TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT
--   reduce production process_i -> LET lsymb EQ term IN process

State 199:
## Known stack suffix:
## LPAREN processes_i
## LR(1) items:
process_i -> LPAREN processes_i . RPAREN [ TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On RPAREN shift to state 200
## Reductions:

State 200:
## Known stack suffix:
## LPAREN processes_i RPAREN
## LR(1) items:
process_i -> LPAREN processes_i RPAREN . [ TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
## Reductions:
-- On TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT
--   reduce production process_i -> LPAREN processes_i RPAREN

State 201:
## Known stack suffix:
## process_i
## LR(1) items:
process -> process_i . [ PARALLEL ]
processes_i -> process_i . [ RPAREN ]
## Transitions:
## Reductions:
-- On PARALLEL
--   reduce production process -> process_i
-- On RPAREN
--   reduce production processes_i -> process_i

State 202:
## Known stack suffix:
## process
## LR(1) items:
processes_i -> process . PARALLEL processes_i [ RPAREN ]
## Transitions:
-- On PARALLEL shift to state 203
## Reductions:

State 203:
## Known stack suffix:
## process PARALLEL
## LR(1) items:
processes_i -> process PARALLEL . processes_i [ RPAREN ]
## Transitions:
-- On OUT shift to state 145
-- On NULL shift to state 152
-- On NEW shift to state 153
-- On LPAREN shift to state 156
-- On LET shift to state 157
-- On IN shift to state 162
-- On IF shift to state 169
-- On ID shift to state 2
-- On FIND shift to state 172
-- On BANG shift to state 177
-- On processes_i shift to state 204
-- On process_i shift to state 201
-- On process shift to state 202
-- On lsymb shift to state 180
## Reductions:

State 204:
## Known stack suffix:
## process PARALLEL processes_i
## LR(1) items:
processes_i -> process PARALLEL processes_i . [ RPAREN ]
## Transitions:
## Reductions:
-- On RPAREN
--   reduce production processes_i -> process PARALLEL processes_i

State 205:
## Known stack suffix:
## NEW lsymb SEMICOLON process
## LR(1) items:
process_i -> NEW lsymb SEMICOLON process . [ TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
## Reductions:
-- On TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT
--   reduce production process_i -> NEW lsymb SEMICOLON process

State 206:
## Known stack suffix:
## SEMICOLON process
## LR(1) items:
process_cont -> SEMICOLON process . [ TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
## Reductions:
-- On TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT
--   reduce production process_cont -> SEMICOLON process

State 207:
## Known stack suffix:
## OUT LPAREN lsymb COMMA term RPAREN process_cont
## LR(1) items:
process_i -> OUT LPAREN lsymb COMMA term RPAREN process_cont . [ TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
## Reductions:
-- On TERM SYSTEM SIGNATURE SENC RPAREN PROCESS PARALLEL NAME MUTABLE HASH EOF ELSE DOT CHANNEL AXIOM AENC ABSTRACT
--   reduce production process_i -> OUT LPAREN lsymb COMMA term RPAREN process_cont

State 208:
## Known stack suffix:
## SYSTEM LBRACKET
## LR(1) items:
declaration_i -> SYSTEM LBRACKET . lsymb RBRACKET process [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On ID shift to state 2
-- On lsymb shift to state 209
## Reductions:

State 209:
## Known stack suffix:
## SYSTEM LBRACKET lsymb
## LR(1) items:
declaration_i -> SYSTEM LBRACKET lsymb . RBRACKET process [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On RBRACKET shift to state 210
## Reductions:

State 210:
## Known stack suffix:
## SYSTEM LBRACKET lsymb RBRACKET
## LR(1) items:
declaration_i -> SYSTEM LBRACKET lsymb RBRACKET . process [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On OUT shift to state 145
-- On NULL shift to state 152
-- On NEW shift to state 153
-- On LPAREN shift to state 156
-- On LET shift to state 157
-- On IN shift to state 162
-- On IF shift to state 169
-- On ID shift to state 2
-- On FIND shift to state 172
-- On BANG shift to state 177
-- On process_i shift to state 178
-- On process shift to state 211
-- On lsymb shift to state 180
## Reductions:

State 211:
## Known stack suffix:
## SYSTEM LBRACKET lsymb RBRACKET process
## LR(1) items:
declaration_i -> SYSTEM LBRACKET lsymb RBRACKET process . [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
## Reductions:
-- On TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT
--   reduce production declaration_i -> SYSTEM LBRACKET lsymb RBRACKET process

State 212:
## Known stack suffix:
## SYSTEM process
## LR(1) items:
declaration_i -> SYSTEM process . [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
## Reductions:
-- On TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT
--   reduce production declaration_i -> SYSTEM process

State 213:
## Known stack suffix:
## SIGNATURE
## LR(1) items:
declaration_i -> SIGNATURE . lsymb COMMA lsymb COMMA lsymb [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
declaration_i -> SIGNATURE . lsymb COMMA lsymb COMMA lsymb WITH ORACLE term [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On ID shift to state 2
-- On lsymb shift to state 214
## Reductions:

State 214:
## Known stack suffix:
## SIGNATURE lsymb
## LR(1) items:
declaration_i -> SIGNATURE lsymb . COMMA lsymb COMMA lsymb [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
declaration_i -> SIGNATURE lsymb . COMMA lsymb COMMA lsymb WITH ORACLE term [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On COMMA shift to state 215
## Reductions:

State 215:
## Known stack suffix:
## SIGNATURE lsymb COMMA
## LR(1) items:
declaration_i -> SIGNATURE lsymb COMMA . lsymb COMMA lsymb [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
declaration_i -> SIGNATURE lsymb COMMA . lsymb COMMA lsymb WITH ORACLE term [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On ID shift to state 2
-- On lsymb shift to state 216
## Reductions:

State 216:
## Known stack suffix:
## SIGNATURE lsymb COMMA lsymb
## LR(1) items:
declaration_i -> SIGNATURE lsymb COMMA lsymb . COMMA lsymb [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
declaration_i -> SIGNATURE lsymb COMMA lsymb . COMMA lsymb WITH ORACLE term [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On COMMA shift to state 217
## Reductions:

State 217:
## Known stack suffix:
## SIGNATURE lsymb COMMA lsymb COMMA
## LR(1) items:
declaration_i -> SIGNATURE lsymb COMMA lsymb COMMA . lsymb [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
declaration_i -> SIGNATURE lsymb COMMA lsymb COMMA . lsymb WITH ORACLE term [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On ID shift to state 2
-- On lsymb shift to state 218
## Reductions:

State 218:
## Known stack suffix:
## SIGNATURE lsymb COMMA lsymb COMMA lsymb
## LR(1) items:
declaration_i -> SIGNATURE lsymb COMMA lsymb COMMA lsymb . [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
declaration_i -> SIGNATURE lsymb COMMA lsymb COMMA lsymb . WITH ORACLE term [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On WITH shift to state 219
## Reductions:
-- On TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT
--   reduce production declaration_i -> SIGNATURE lsymb COMMA lsymb COMMA lsymb

State 219:
## Known stack suffix:
## SIGNATURE lsymb COMMA lsymb COMMA lsymb WITH
## LR(1) items:
declaration_i -> SIGNATURE lsymb COMMA lsymb COMMA lsymb WITH . ORACLE term [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On ORACLE shift to state 220
## Reductions:

State 220:
## Known stack suffix:
## SIGNATURE lsymb COMMA lsymb COMMA lsymb WITH ORACLE
## LR(1) items:
declaration_i -> SIGNATURE lsymb COMMA lsymb COMMA lsymb WITH ORACLE . term [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On TRUE shift to state 25
-- On SEQ shift to state 26
-- On PRED shift to state 30
-- On NOT shift to state 32
-- On LPAREN shift to state 33
-- On LANGLE shift to state 34
-- On INIT shift to state 35
-- On IF shift to state 36
-- On ID shift to state 2
-- On HAPPENS shift to state 37
-- On FORALL shift to state 39
-- On FIND shift to state 45
-- On FALSE shift to state 51
-- On EXISTS shift to state 52
-- On DIFF shift to state 57
-- On term_i shift to state 59
-- On term shift to state 221
-- On sterm_i shift to state 65
-- On lsymb shift to state 66
## Reductions:

State 221:
## Known stack suffix:
## SIGNATURE lsymb COMMA lsymb COMMA lsymb WITH ORACLE term
## LR(1) items:
declaration_i -> SIGNATURE lsymb COMMA lsymb COMMA lsymb WITH ORACLE term . [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
term_i -> term . XOR term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . EXP term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . AND term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . OR term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . DARROW term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . EQ term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . NEQ term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . LEQ term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . LANGLE term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . GEQ term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . RANGLE term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . DEQUIVARROW term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
## Transitions:
-- On XOR shift to state 61
-- On RANGLE shift to state 69
-- On OR shift to state 71
-- On NEQ shift to state 73
-- On LEQ shift to state 75
-- On LANGLE shift to state 77
-- On GEQ shift to state 79
-- On EXP shift to state 63
-- On EQ shift to state 81
-- On DEQUIVARROW shift to state 85
-- On DARROW shift to state 87
-- On AND shift to state 83
## Reductions:
-- On TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT
--   reduce production declaration_i -> SIGNATURE lsymb COMMA lsymb COMMA lsymb WITH ORACLE term

State 222:
## Known stack suffix:
## SENC
## LR(1) items:
declaration_i -> SENC . lsymb COMMA lsymb [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
declaration_i -> SENC . lsymb COMMA lsymb WITH lsymb [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On ID shift to state 2
-- On lsymb shift to state 223
## Reductions:

State 223:
## Known stack suffix:
## SENC lsymb
## LR(1) items:
declaration_i -> SENC lsymb . COMMA lsymb [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
declaration_i -> SENC lsymb . COMMA lsymb WITH lsymb [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On COMMA shift to state 224
## Reductions:

State 224:
## Known stack suffix:
## SENC lsymb COMMA
## LR(1) items:
declaration_i -> SENC lsymb COMMA . lsymb [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
declaration_i -> SENC lsymb COMMA . lsymb WITH lsymb [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On ID shift to state 2
-- On lsymb shift to state 225
## Reductions:

State 225:
## Known stack suffix:
## SENC lsymb COMMA lsymb
## LR(1) items:
declaration_i -> SENC lsymb COMMA lsymb . [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
declaration_i -> SENC lsymb COMMA lsymb . WITH lsymb [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On WITH shift to state 226
## Reductions:
-- On TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT
--   reduce production declaration_i -> SENC lsymb COMMA lsymb

State 226:
## Known stack suffix:
## SENC lsymb COMMA lsymb WITH
## LR(1) items:
declaration_i -> SENC lsymb COMMA lsymb WITH . lsymb [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On ID shift to state 2
-- On lsymb shift to state 227
## Reductions:

State 227:
## Known stack suffix:
## SENC lsymb COMMA lsymb WITH lsymb
## LR(1) items:
declaration_i -> SENC lsymb COMMA lsymb WITH lsymb . [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
## Reductions:
-- On TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT
--   reduce production declaration_i -> SENC lsymb COMMA lsymb WITH lsymb

State 228:
## Known stack suffix:
## PROCESS
## LR(1) items:
declaration_i -> PROCESS . lsymb opt_arg_list EQ process [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On ID shift to state 2
-- On lsymb shift to state 229
## Reductions:

State 229:
## Known stack suffix:
## PROCESS lsymb
## LR(1) items:
declaration_i -> PROCESS lsymb . opt_arg_list EQ process [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On LPAREN shift to state 4
-- On opt_arg_list shift to state 230
## Reductions:
-- On EQ
--   reduce production opt_arg_list ->

State 230:
## Known stack suffix:
## PROCESS lsymb opt_arg_list
## LR(1) items:
declaration_i -> PROCESS lsymb opt_arg_list . EQ process [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On EQ shift to state 231
## Reductions:

State 231:
## Known stack suffix:
## PROCESS lsymb opt_arg_list EQ
## LR(1) items:
declaration_i -> PROCESS lsymb opt_arg_list EQ . process [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On OUT shift to state 145
-- On NULL shift to state 152
-- On NEW shift to state 153
-- On LPAREN shift to state 156
-- On LET shift to state 157
-- On IN shift to state 162
-- On IF shift to state 169
-- On ID shift to state 2
-- On FIND shift to state 172
-- On BANG shift to state 177
-- On process_i shift to state 178
-- On process shift to state 232
-- On lsymb shift to state 180
## Reductions:

State 232:
## Known stack suffix:
## PROCESS lsymb opt_arg_list EQ process
## LR(1) items:
declaration_i -> PROCESS lsymb opt_arg_list EQ process . [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
## Reductions:
-- On TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT
--   reduce production declaration_i -> PROCESS lsymb opt_arg_list EQ process

State 233:
## Known stack suffix:
## NAME
## LR(1) items:
declaration_i -> NAME . lsymb COLON name_type [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On ID shift to state 2
-- On lsymb shift to state 234
## Reductions:

State 234:
## Known stack suffix:
## NAME lsymb
## LR(1) items:
declaration_i -> NAME lsymb . COLON name_type [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On COLON shift to state 235
## Reductions:

State 235:
## Known stack suffix:
## NAME lsymb COLON
## LR(1) items:
declaration_i -> NAME lsymb COLON . name_type [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On MESSAGE shift to state 236
-- On INDEX shift to state 237
-- On name_type shift to state 240
## Reductions:

State 236:
## Known stack suffix:
## MESSAGE
## LR(1) items:
name_type -> MESSAGE . [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
## Reductions:
-- On TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT
--   reduce production name_type -> MESSAGE

State 237:
## Known stack suffix:
## INDEX
## LR(1) items:
name_type -> INDEX . ARROW name_type [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On ARROW shift to state 238
## Reductions:

State 238:
## Known stack suffix:
## INDEX ARROW
## LR(1) items:
name_type -> INDEX ARROW . name_type [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On MESSAGE shift to state 236
-- On INDEX shift to state 237
-- On name_type shift to state 239
## Reductions:

State 239:
## Known stack suffix:
## INDEX ARROW name_type
## LR(1) items:
name_type -> INDEX ARROW name_type . [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
## Reductions:
-- On TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT
--   reduce production name_type -> INDEX ARROW name_type

State 240:
## Known stack suffix:
## NAME lsymb COLON name_type
## LR(1) items:
declaration_i -> NAME lsymb COLON name_type . [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
## Reductions:
-- On TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT
--   reduce production declaration_i -> NAME lsymb COLON name_type

State 241:
## Known stack suffix:
## MUTABLE
## LR(1) items:
declaration_i -> MUTABLE . lsymb opt_arg_list COLON msg_or_bool EQ term [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On ID shift to state 2
-- On lsymb shift to state 242
## Reductions:

State 242:
## Known stack suffix:
## MUTABLE lsymb
## LR(1) items:
declaration_i -> MUTABLE lsymb . opt_arg_list COLON msg_or_bool EQ term [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On LPAREN shift to state 4
-- On opt_arg_list shift to state 243
## Reductions:
-- On COLON
--   reduce production opt_arg_list ->

State 243:
## Known stack suffix:
## MUTABLE lsymb opt_arg_list
## LR(1) items:
declaration_i -> MUTABLE lsymb opt_arg_list . COLON msg_or_bool EQ term [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On COLON shift to state 244
## Reductions:

State 244:
## Known stack suffix:
## MUTABLE lsymb opt_arg_list COLON
## LR(1) items:
declaration_i -> MUTABLE lsymb opt_arg_list COLON . msg_or_bool EQ term [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On MESSAGE shift to state 21
-- On BOOLEAN shift to state 22
-- On msg_or_bool shift to state 245
## Reductions:

State 245:
## Known stack suffix:
## MUTABLE lsymb opt_arg_list COLON msg_or_bool
## LR(1) items:
declaration_i -> MUTABLE lsymb opt_arg_list COLON msg_or_bool . EQ term [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On EQ shift to state 246
## Reductions:

State 246:
## Known stack suffix:
## MUTABLE lsymb opt_arg_list COLON msg_or_bool EQ
## LR(1) items:
declaration_i -> MUTABLE lsymb opt_arg_list COLON msg_or_bool EQ . term [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On TRUE shift to state 25
-- On SEQ shift to state 26
-- On PRED shift to state 30
-- On NOT shift to state 32
-- On LPAREN shift to state 33
-- On LANGLE shift to state 34
-- On INIT shift to state 35
-- On IF shift to state 36
-- On ID shift to state 2
-- On HAPPENS shift to state 37
-- On FORALL shift to state 39
-- On FIND shift to state 45
-- On FALSE shift to state 51
-- On EXISTS shift to state 52
-- On DIFF shift to state 57
-- On term_i shift to state 59
-- On term shift to state 247
-- On sterm_i shift to state 65
-- On lsymb shift to state 66
## Reductions:

State 247:
## Known stack suffix:
## MUTABLE lsymb opt_arg_list COLON msg_or_bool EQ term
## LR(1) items:
declaration_i -> MUTABLE lsymb opt_arg_list COLON msg_or_bool EQ term . [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
term_i -> term . XOR term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . EXP term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . AND term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . OR term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . DARROW term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . EQ term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . NEQ term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . LEQ term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . LANGLE term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . GEQ term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . RANGLE term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . DEQUIVARROW term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
## Transitions:
-- On XOR shift to state 61
-- On RANGLE shift to state 69
-- On OR shift to state 71
-- On NEQ shift to state 73
-- On LEQ shift to state 75
-- On LANGLE shift to state 77
-- On GEQ shift to state 79
-- On EXP shift to state 63
-- On EQ shift to state 81
-- On DEQUIVARROW shift to state 85
-- On DARROW shift to state 87
-- On AND shift to state 83
## Reductions:
-- On TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT
--   reduce production declaration_i -> MUTABLE lsymb opt_arg_list COLON msg_or_bool EQ term

State 248:
## Known stack suffix:
## HASH
## LR(1) items:
declaration_i -> HASH . lsymb index_arity [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
declaration_i -> HASH . lsymb WITH ORACLE term [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On ID shift to state 2
-- On lsymb shift to state 249
## Reductions:

State 249:
## Known stack suffix:
## HASH lsymb
## LR(1) items:
declaration_i -> HASH lsymb . index_arity [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
declaration_i -> HASH lsymb . WITH ORACLE term [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On WITH shift to state 250
-- On LPAREN shift to state 253
-- On index_arity shift to state 256
## Reductions:
-- On TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT
--   reduce production index_arity ->

State 250:
## Known stack suffix:
## HASH lsymb WITH
## LR(1) items:
declaration_i -> HASH lsymb WITH . ORACLE term [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On ORACLE shift to state 251
## Reductions:

State 251:
## Known stack suffix:
## HASH lsymb WITH ORACLE
## LR(1) items:
declaration_i -> HASH lsymb WITH ORACLE . term [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On TRUE shift to state 25
-- On SEQ shift to state 26
-- On PRED shift to state 30
-- On NOT shift to state 32
-- On LPAREN shift to state 33
-- On LANGLE shift to state 34
-- On INIT shift to state 35
-- On IF shift to state 36
-- On ID shift to state 2
-- On HAPPENS shift to state 37
-- On FORALL shift to state 39
-- On FIND shift to state 45
-- On FALSE shift to state 51
-- On EXISTS shift to state 52
-- On DIFF shift to state 57
-- On term_i shift to state 59
-- On term shift to state 252
-- On sterm_i shift to state 65
-- On lsymb shift to state 66
## Reductions:

State 252:
## Known stack suffix:
## HASH lsymb WITH ORACLE term
## LR(1) items:
declaration_i -> HASH lsymb WITH ORACLE term . [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
term_i -> term . XOR term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . EXP term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . AND term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . OR term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . DARROW term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . EQ term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . NEQ term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . LEQ term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . LANGLE term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . GEQ term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . RANGLE term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . DEQUIVARROW term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
## Transitions:
-- On XOR shift to state 61
-- On RANGLE shift to state 69
-- On OR shift to state 71
-- On NEQ shift to state 73
-- On LEQ shift to state 75
-- On LANGLE shift to state 77
-- On GEQ shift to state 79
-- On EXP shift to state 63
-- On EQ shift to state 81
-- On DEQUIVARROW shift to state 85
-- On DARROW shift to state 87
-- On AND shift to state 83
## Reductions:
-- On TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT
--   reduce production declaration_i -> HASH lsymb WITH ORACLE term

State 253:
## Known stack suffix:
## LPAREN
## LR(1) items:
index_arity -> LPAREN . INT RPAREN [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On INT shift to state 254
## Reductions:

State 254:
## Known stack suffix:
## LPAREN INT
## LR(1) items:
index_arity -> LPAREN INT . RPAREN [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On RPAREN shift to state 255
## Reductions:

State 255:
## Known stack suffix:
## LPAREN INT RPAREN
## LR(1) items:
index_arity -> LPAREN INT RPAREN . [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
## Reductions:
-- On TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT
--   reduce production index_arity -> LPAREN INT RPAREN

State 256:
## Known stack suffix:
## HASH lsymb index_arity
## LR(1) items:
declaration_i -> HASH lsymb index_arity . [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
## Reductions:
-- On TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT
--   reduce production declaration_i -> HASH lsymb index_arity

State 257:
## Known stack suffix:
## CHANNEL
## LR(1) items:
declaration_i -> CHANNEL . lsymb [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On ID shift to state 2
-- On lsymb shift to state 258
## Reductions:

State 258:
## Known stack suffix:
## CHANNEL lsymb
## LR(1) items:
declaration_i -> CHANNEL lsymb . [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
## Reductions:
-- On TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT
--   reduce production declaration_i -> CHANNEL lsymb

State 259:
## Known stack suffix:
## AXIOM
## LR(1) items:
declaration_i -> AXIOM . bsystem term [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
declaration_i -> AXIOM . bsystem lsymb COLON term [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On LBRACKET shift to state 260
-- On bsystem shift to state 263
## Reductions:
-- On TRUE SEQ PRED NOT LPAREN LANGLE INIT IF ID HAPPENS FORALL FIND FALSE EXISTS DIFF
--   reduce production bsystem ->

State 260:
## Known stack suffix:
## LBRACKET
## LR(1) items:
bsystem -> LBRACKET . lsymb RBRACKET [ TRUE SEQ PRED NOT LPAREN LANGLE INIT IF ID HAPPENS FORALL FIND FALSE EXISTS DIFF ]
## Transitions:
-- On ID shift to state 2
-- On lsymb shift to state 261
## Reductions:

State 261:
## Known stack suffix:
## LBRACKET lsymb
## LR(1) items:
bsystem -> LBRACKET lsymb . RBRACKET [ TRUE SEQ PRED NOT LPAREN LANGLE INIT IF ID HAPPENS FORALL FIND FALSE EXISTS DIFF ]
## Transitions:
-- On RBRACKET shift to state 262
## Reductions:

State 262:
## Known stack suffix:
## LBRACKET lsymb RBRACKET
## LR(1) items:
bsystem -> LBRACKET lsymb RBRACKET . [ TRUE SEQ PRED NOT LPAREN LANGLE INIT IF ID HAPPENS FORALL FIND FALSE EXISTS DIFF ]
## Transitions:
## Reductions:
-- On TRUE SEQ PRED NOT LPAREN LANGLE INIT IF ID HAPPENS FORALL FIND FALSE EXISTS DIFF
--   reduce production bsystem -> LBRACKET lsymb RBRACKET

State 263:
## Known stack suffix:
## AXIOM bsystem
## LR(1) items:
declaration_i -> AXIOM bsystem . term [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
declaration_i -> AXIOM bsystem . lsymb COLON term [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On TRUE shift to state 25
-- On SEQ shift to state 26
-- On PRED shift to state 30
-- On NOT shift to state 32
-- On LPAREN shift to state 33
-- On LANGLE shift to state 34
-- On INIT shift to state 35
-- On IF shift to state 36
-- On ID shift to state 2
-- On HAPPENS shift to state 37
-- On FORALL shift to state 39
-- On FIND shift to state 45
-- On FALSE shift to state 51
-- On EXISTS shift to state 52
-- On DIFF shift to state 57
-- On term_i shift to state 59
-- On term shift to state 264
-- On sterm_i shift to state 65
-- On lsymb shift to state 265
## Reductions:

State 264:
## Known stack suffix:
## AXIOM bsystem term
## LR(1) items:
declaration_i -> AXIOM bsystem term . [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
term_i -> term . XOR term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . EXP term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . AND term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . OR term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . DARROW term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . EQ term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . NEQ term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . LEQ term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . LANGLE term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . GEQ term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . RANGLE term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . DEQUIVARROW term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
## Transitions:
-- On XOR shift to state 61
-- On RANGLE shift to state 69
-- On OR shift to state 71
-- On NEQ shift to state 73
-- On LEQ shift to state 75
-- On LANGLE shift to state 77
-- On GEQ shift to state 79
-- On EXP shift to state 63
-- On EQ shift to state 81
-- On DEQUIVARROW shift to state 85
-- On DARROW shift to state 87
-- On AND shift to state 83
## Reductions:
-- On TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT
--   reduce production declaration_i -> AXIOM bsystem term

State 265:
## Known stack suffix:
## AXIOM bsystem lsymb
## LR(1) items:
declaration_i -> AXIOM bsystem lsymb . COLON term [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
sterm_i -> lsymb . [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> lsymb . term_list1 [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> lsymb . AT term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> lsymb . term_list1 AT term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
## Transitions:
-- On LPAREN shift to state 67
-- On COLON shift to state 266
-- On AT shift to state 94
-- On term_list1 shift to state 96
## Reductions:
-- On XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT
--   reduce production sterm_i -> lsymb

State 266:
## Known stack suffix:
## AXIOM bsystem lsymb COLON
## LR(1) items:
declaration_i -> AXIOM bsystem lsymb COLON . term [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On TRUE shift to state 25
-- On SEQ shift to state 26
-- On PRED shift to state 30
-- On NOT shift to state 32
-- On LPAREN shift to state 33
-- On LANGLE shift to state 34
-- On INIT shift to state 35
-- On IF shift to state 36
-- On ID shift to state 2
-- On HAPPENS shift to state 37
-- On FORALL shift to state 39
-- On FIND shift to state 45
-- On FALSE shift to state 51
-- On EXISTS shift to state 52
-- On DIFF shift to state 57
-- On term_i shift to state 59
-- On term shift to state 267
-- On sterm_i shift to state 65
-- On lsymb shift to state 66
## Reductions:

State 267:
## Known stack suffix:
## AXIOM bsystem lsymb COLON term
## LR(1) items:
declaration_i -> AXIOM bsystem lsymb COLON term . [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
term_i -> term . XOR term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . EXP term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . AND term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . OR term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . DARROW term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . EQ term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . NEQ term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . LEQ term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . LANGLE term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . GEQ term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . RANGLE term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
term_i -> term . DEQUIVARROW term [ XOR TERM SYSTEM SIGNATURE SENC RANGLE PROCESS OR NEQ NAME MUTABLE LEQ LANGLE HASH GEQ EXP EQ DOT DEQUIVARROW DARROW CHANNEL AXIOM AND AENC ABSTRACT ]
## Transitions:
-- On XOR shift to state 61
-- On RANGLE shift to state 69
-- On OR shift to state 71
-- On NEQ shift to state 73
-- On LEQ shift to state 75
-- On LANGLE shift to state 77
-- On GEQ shift to state 79
-- On EXP shift to state 63
-- On EQ shift to state 81
-- On DEQUIVARROW shift to state 85
-- On DARROW shift to state 87
-- On AND shift to state 83
## Reductions:
-- On TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT
--   reduce production declaration_i -> AXIOM bsystem lsymb COLON term

State 268:
## Known stack suffix:
## AENC
## LR(1) items:
declaration_i -> AENC . lsymb COMMA lsymb COMMA lsymb [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On ID shift to state 2
-- On lsymb shift to state 269
## Reductions:

State 269:
## Known stack suffix:
## AENC lsymb
## LR(1) items:
declaration_i -> AENC lsymb . COMMA lsymb COMMA lsymb [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On COMMA shift to state 270
## Reductions:

State 270:
## Known stack suffix:
## AENC lsymb COMMA
## LR(1) items:
declaration_i -> AENC lsymb COMMA . lsymb COMMA lsymb [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On ID shift to state 2
-- On lsymb shift to state 271
## Reductions:

State 271:
## Known stack suffix:
## AENC lsymb COMMA lsymb
## LR(1) items:
declaration_i -> AENC lsymb COMMA lsymb . COMMA lsymb [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On COMMA shift to state 272
## Reductions:

State 272:
## Known stack suffix:
## AENC lsymb COMMA lsymb COMMA
## LR(1) items:
declaration_i -> AENC lsymb COMMA lsymb COMMA . lsymb [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On ID shift to state 2
-- On lsymb shift to state 273
## Reductions:

State 273:
## Known stack suffix:
## AENC lsymb COMMA lsymb COMMA lsymb
## LR(1) items:
declaration_i -> AENC lsymb COMMA lsymb COMMA lsymb . [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
## Reductions:
-- On TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT
--   reduce production declaration_i -> AENC lsymb COMMA lsymb COMMA lsymb

State 274:
## Known stack suffix:
## ABSTRACT
## LR(1) items:
declaration_i -> ABSTRACT . lsymb COLON abs_type [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On ID shift to state 2
-- On lsymb shift to state 275
## Reductions:

State 275:
## Known stack suffix:
## ABSTRACT lsymb
## LR(1) items:
declaration_i -> ABSTRACT lsymb . COLON abs_type [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On COLON shift to state 276
## Reductions:

State 276:
## Known stack suffix:
## ABSTRACT lsymb COLON
## LR(1) items:
declaration_i -> ABSTRACT lsymb COLON . abs_type [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On MESSAGE shift to state 277
-- On INDEX shift to state 280
-- On msg_type shift to state 282
-- On abs_type shift to state 284
## Reductions:

State 277:
## Known stack suffix:
## MESSAGE
## LR(1) items:
msg_type -> MESSAGE . [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
msg_type -> MESSAGE . ARROW msg_type [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On ARROW shift to state 278
## Reductions:
-- On TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT
--   reduce production msg_type -> MESSAGE

State 278:
## Known stack suffix:
## MESSAGE ARROW
## LR(1) items:
msg_type -> MESSAGE ARROW . msg_type [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On MESSAGE shift to state 277
-- On msg_type shift to state 279
## Reductions:

State 279:
## Known stack suffix:
## MESSAGE ARROW msg_type
## LR(1) items:
msg_type -> MESSAGE ARROW msg_type . [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
## Reductions:
-- On TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT
--   reduce production msg_type -> MESSAGE ARROW msg_type

State 280:
## Known stack suffix:
## INDEX
## LR(1) items:
abs_type -> INDEX . ARROW abs_type [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On ARROW shift to state 281
## Reductions:

State 281:
## Known stack suffix:
## INDEX ARROW
## LR(1) items:
abs_type -> INDEX ARROW . abs_type [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
-- On MESSAGE shift to state 277
-- On INDEX shift to state 280
-- On msg_type shift to state 282
-- On abs_type shift to state 283
## Reductions:

State 282:
## Known stack suffix:
## msg_type
## LR(1) items:
abs_type -> msg_type . [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
## Reductions:
-- On TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT
--   reduce production abs_type -> msg_type

State 283:
## Known stack suffix:
## INDEX ARROW abs_type
## LR(1) items:
abs_type -> INDEX ARROW abs_type . [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
## Reductions:
-- On TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT
--   reduce production abs_type -> INDEX ARROW abs_type

State 284:
## Known stack suffix:
## ABSTRACT lsymb COLON abs_type
## LR(1) items:
declaration_i -> ABSTRACT lsymb COLON abs_type . [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
## Reductions:
-- On TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT
--   reduce production declaration_i -> ABSTRACT lsymb COLON abs_type

State 285:
## Known stack suffix:
## declarations
## LR(1) items:
declarations' -> declarations . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept declarations

State 286:
## Known stack suffix:
## declaration_list
## LR(1) items:
declarations -> declaration_list . DOT [ # ]
## Transitions:
-- On DOT shift to state 287
## Reductions:

State 287:
## Known stack suffix:
## declaration_list DOT
## LR(1) items:
declarations -> declaration_list DOT . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production declarations -> declaration_list DOT

State 288:
## Known stack suffix:
## declaration_i
## LR(1) items:
declaration -> declaration_i . [ TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT ]
## Transitions:
## Reductions:
-- On TERM SYSTEM SIGNATURE SENC PROCESS NAME MUTABLE HASH DOT CHANNEL AXIOM AENC ABSTRACT
--   reduce production declaration -> declaration_i

State 289:
## Known stack suffix:
## declaration
## LR(1) items:
declaration_list -> declaration . [ DOT ]
declaration_list -> declaration . declaration_list [ DOT ]
## Transitions:
-- On TERM shift to state 1
-- On SYSTEM shift to state 144
-- On SIGNATURE shift to state 213
-- On SENC shift to state 222
-- On PROCESS shift to state 228
-- On NAME shift to state 233
-- On MUTABLE shift to state 241
-- On HASH shift to state 248
-- On CHANNEL shift to state 257
-- On AXIOM shift to state 259
-- On AENC shift to state 268
-- On ABSTRACT shift to state 274
-- On declaration_list shift to state 290
-- On declaration_i shift to state 288
-- On declaration shift to state 289
## Reductions:
-- On DOT
--   reduce production declaration_list -> declaration

State 290:
## Known stack suffix:
## declaration declaration_list
## LR(1) items:
declaration_list -> declaration declaration_list . [ DOT ]
## Transitions:
## Reductions:
-- On DOT
--   reduce production declaration_list -> declaration declaration_list

State 291:
## Known stack suffix:
##
## LR(1) items:
interactive' -> . interactive [ # ]
## Transitions:
-- On USE shift to state 292
-- On UNDO shift to state 326
-- On TRY shift to state 329
-- On TERM shift to state 1
-- On SYSTEM shift to state 144
-- On SIGNATURE shift to state 213
-- On SET shift to state 457
-- On SENC shift to state 222
-- On RIGHT shift to state 330
-- On REWRITE shift to state 331
-- On REVERT shift to state 356
-- On REPEAT shift to state 360
-- On QED shift to state 466
-- On PROOF shift to state 467
-- On PROCESS shift to state 228
-- On NOSIMPL shift to state 361
-- On NAME shift to state 233
-- On MUTABLE shift to state 241
-- On LPAREN shift to state 362
-- On LEFT shift to state 363
-- On INTRO shift to state 364
-- On ID shift to state 372
-- On HELP shift to state 374
-- On HASH shift to state 248
-- On GOAL shift to state 468
-- On GENERALIZE shift to state 390
-- On EXISTS shift to state 394
-- On EQUIV shift to state 496
-- On EOF shift to state 527
-- On DESTRUCT shift to state 396
-- On DEPENDS shift to state 400
-- On DDH shift to state 403
-- On CYCLE shift to state 409
-- On CLEAR shift to state 413
-- On CHECKFAIL shift to state 415
-- On CHANNEL shift to state 257
-- On BY shift to state 416
-- On AXIOM shift to state 259
-- On ASSERT shift to state 417
-- On AENC shift to state 268
-- On ABSTRACT shift to state 274
-- On ABORT shift to state 528
-- On undo shift to state 529
-- On tactic shift to state 530
-- On tac shift to state 531
-- On set_option shift to state 533
-- On qed shift to state 534
-- On interactive shift to state 535
-- On goal_i shift to state 536
-- On goal shift to state 537
-- On declarations shift to state 538
-- On declaration_list shift to state 286
-- On declaration_i shift to state 288
-- On declaration shift to state 289
-- On abort shift to state 539
## Reductions:

State 292:
## Known stack suffix:
## USE
## LR(1) items:
tac -> USE . lsymb option(as_ip) [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
tac -> USE . lsymb WITH tactic_params option(as_ip) [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
-- On ID shift to state 2
-- On lsymb shift to state 293
## Reductions:

State 293:
## Known stack suffix:
## USE lsymb
## LR(1) items:
tac -> USE lsymb . option(as_ip) [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
tac -> USE lsymb . WITH tactic_params option(as_ip) [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
-- On WITH shift to state 294
-- On AS shift to state 298
-- On option(as_ip) shift to state 325
-- On as_ip shift to state 321
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW
--   reduce production option(as_ip) ->

State 294:
## Known stack suffix:
## USE lsymb WITH
## LR(1) items:
tac -> USE lsymb WITH . tactic_params option(as_ip) [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
-- On TRUE shift to state 25
-- On SEQ shift to state 26
-- On PRED shift to state 30
-- On NOT shift to state 32
-- On LPAREN shift to state 33
-- On LANGLE shift to state 34
-- On INT shift to state 295
-- On INIT shift to state 35
-- On IF shift to state 36
-- On ID shift to state 2
-- On HAPPENS shift to state 37
-- On FORALL shift to state 39
-- On FIND shift to state 45
-- On FALSE shift to state 51
-- On EXISTS shift to state 52
-- On DIFF shift to state 57
-- On term_i shift to state 59
-- On term shift to state 296
-- On tactic_params shift to state 297
-- On tactic_param shift to state 322
-- On sterm_i shift to state 65
-- On lsymb shift to state 66
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW AS
--   reduce production tactic_params ->

State 295:
## Known stack suffix:
## INT
## LR(1) items:
tactic_param -> INT . [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW COMMA BY AS ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW COMMA BY AS
--   reduce production tactic_param -> INT

State 296:
## Known stack suffix:
## term
## LR(1) items:
tactic_param -> term . [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW COMMA BY AS ]
term_i -> term . XOR term [ XOR SEMICOLON RPAREN RBRACKET RANGLE PLUS PARALLEL OR NEQ LEQ LANGLE GEQ EXP EXN EQ DOT DEQUIVARROW DARROW COMMA BY AS AND ]
term_i -> term . EXP term [ XOR SEMICOLON RPAREN RBRACKET RANGLE PLUS PARALLEL OR NEQ LEQ LANGLE GEQ EXP EXN EQ DOT DEQUIVARROW DARROW COMMA BY AS AND ]
term_i -> term . AND term [ XOR SEMICOLON RPAREN RBRACKET RANGLE PLUS PARALLEL OR NEQ LEQ LANGLE GEQ EXP EXN EQ DOT DEQUIVARROW DARROW COMMA BY AS AND ]
term_i -> term . OR term [ XOR SEMICOLON RPAREN RBRACKET RANGLE PLUS PARALLEL OR NEQ LEQ LANGLE GEQ EXP EXN EQ DOT DEQUIVARROW DARROW COMMA BY AS AND ]
term_i -> term . DARROW term [ XOR SEMICOLON RPAREN RBRACKET RANGLE PLUS PARALLEL OR NEQ LEQ LANGLE GEQ EXP EXN EQ DOT DEQUIVARROW DARROW COMMA BY AS AND ]
term_i -> term . EQ term [ XOR SEMICOLON RPAREN RBRACKET RANGLE PLUS PARALLEL OR NEQ LEQ LANGLE GEQ EXP EXN EQ DOT DEQUIVARROW DARROW COMMA BY AS AND ]
term_i -> term . NEQ term [ XOR SEMICOLON RPAREN RBRACKET RANGLE PLUS PARALLEL OR NEQ LEQ LANGLE GEQ EXP EXN EQ DOT DEQUIVARROW DARROW COMMA BY AS AND ]
term_i -> term . LEQ term [ XOR SEMICOLON RPAREN RBRACKET RANGLE PLUS PARALLEL OR NEQ LEQ LANGLE GEQ EXP EXN EQ DOT DEQUIVARROW DARROW COMMA BY AS AND ]
term_i -> term . LANGLE term [ XOR SEMICOLON RPAREN RBRACKET RANGLE PLUS PARALLEL OR NEQ LEQ LANGLE GEQ EXP EXN EQ DOT DEQUIVARROW DARROW COMMA BY AS AND ]
term_i -> term . GEQ term [ XOR SEMICOLON RPAREN RBRACKET RANGLE PLUS PARALLEL OR NEQ LEQ LANGLE GEQ EXP EXN EQ DOT DEQUIVARROW DARROW COMMA BY AS AND ]
term_i -> term . RANGLE term [ XOR SEMICOLON RPAREN RBRACKET RANGLE PLUS PARALLEL OR NEQ LEQ LANGLE GEQ EXP EXN EQ DOT DEQUIVARROW DARROW COMMA BY AS AND ]
term_i -> term . DEQUIVARROW term [ XOR SEMICOLON RPAREN RBRACKET RANGLE PLUS PARALLEL OR NEQ LEQ LANGLE GEQ EXP EXN EQ DOT DEQUIVARROW DARROW COMMA BY AS AND ]
## Transitions:
-- On XOR shift to state 61
-- On RANGLE shift to state 69
-- On OR shift to state 71
-- On NEQ shift to state 73
-- On LEQ shift to state 75
-- On LANGLE shift to state 77
-- On GEQ shift to state 79
-- On EXP shift to state 63
-- On EQ shift to state 81
-- On DEQUIVARROW shift to state 85
-- On AND shift to state 83
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW COMMA BY AS
--   reduce production tactic_param -> term

State 297:
## Known stack suffix:
## USE lsymb WITH tactic_params
## LR(1) items:
tac -> USE lsymb WITH tactic_params . option(as_ip) [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
-- On AS shift to state 298
-- On option(as_ip) shift to state 320
-- On as_ip shift to state 321
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW
--   reduce production option(as_ip) ->

State 298:
## Known stack suffix:
## AS
## LR(1) items:
as_ip -> AS . simpl_pat [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
-- On UNDERSCORE shift to state 299
-- On QMARK shift to state 300
-- On LBRACKET shift to state 301
-- On ID shift to state 303
-- On simpl_pat shift to state 319
-- On naming_pat shift to state 309
-- On and_or_pat shift to state 310
## Reductions:

State 299:
## Known stack suffix:
## UNDERSCORE
## LR(1) items:
naming_pat -> UNDERSCORE . [ UNDERSCORE STAR SLASHSLASH SLASHEQUAL SEMICOLON RPAREN RBRACKET QMARK PLUS PARALLEL LBRACKET ID EXN DOT DARROW ]
## Transitions:
## Reductions:
-- On UNDERSCORE STAR SLASHSLASH SLASHEQUAL SEMICOLON RPAREN RBRACKET QMARK PLUS PARALLEL LBRACKET ID EXN DOT DARROW
--   reduce production naming_pat -> UNDERSCORE

State 300:
## Known stack suffix:
## QMARK
## LR(1) items:
naming_pat -> QMARK . [ UNDERSCORE STAR SLASHSLASH SLASHEQUAL SEMICOLON RPAREN RBRACKET QMARK PLUS PARALLEL LBRACKET ID EXN DOT DARROW ]
## Transitions:
## Reductions:
-- On UNDERSCORE STAR SLASHSLASH SLASHEQUAL SEMICOLON RPAREN RBRACKET QMARK PLUS PARALLEL LBRACKET ID EXN DOT DARROW
--   reduce production naming_pat -> QMARK

State 301:
## Known stack suffix:
## LBRACKET
## LR(1) items:
and_or_pat -> LBRACKET . simpl_pat loption(separated_nonempty_list(empty,simpl_pat)) RBRACKET [ UNDERSCORE STAR SLASHSLASH SLASHEQUAL SEMICOLON RPAREN RBRACKET QMARK PLUS PARALLEL LBRACKET ID EXN DOT DARROW ]
and_or_pat -> LBRACKET . simpl_pat PARALLEL loption(separated_nonempty_list(PARALLEL,simpl_pat)) RBRACKET [ UNDERSCORE STAR SLASHSLASH SLASHEQUAL SEMICOLON RPAREN RBRACKET QMARK PLUS PARALLEL LBRACKET ID EXN DOT DARROW ]
and_or_pat -> LBRACKET . RBRACKET [ UNDERSCORE STAR SLASHSLASH SLASHEQUAL SEMICOLON RPAREN RBRACKET QMARK PLUS PARALLEL LBRACKET ID EXN DOT DARROW ]
## Transitions:
-- On UNDERSCORE shift to state 299
-- On RBRACKET shift to state 302
-- On QMARK shift to state 300
-- On LBRACKET shift to state 301
-- On ID shift to state 303
-- On simpl_pat shift to state 304
-- On naming_pat shift to state 309
-- On and_or_pat shift to state 310
## Reductions:

State 302:
## Known stack suffix:
## LBRACKET RBRACKET
## LR(1) items:
and_or_pat -> LBRACKET RBRACKET . [ UNDERSCORE STAR SLASHSLASH SLASHEQUAL SEMICOLON RPAREN RBRACKET QMARK PLUS PARALLEL LBRACKET ID EXN DOT DARROW ]
## Transitions:
## Reductions:
-- On UNDERSCORE STAR SLASHSLASH SLASHEQUAL SEMICOLON RPAREN RBRACKET QMARK PLUS PARALLEL LBRACKET ID EXN DOT DARROW
--   reduce production and_or_pat -> LBRACKET RBRACKET

State 303:
## Known stack suffix:
## ID
## LR(1) items:
naming_pat -> ID . [ UNDERSCORE STAR SLASHSLASH SLASHEQUAL SEMICOLON RPAREN RBRACKET QMARK PLUS PARALLEL LBRACKET ID EXN DOT DARROW ]
## Transitions:
## Reductions:
-- On UNDERSCORE STAR SLASHSLASH SLASHEQUAL SEMICOLON RPAREN RBRACKET QMARK PLUS PARALLEL LBRACKET ID EXN DOT DARROW
--   reduce production naming_pat -> ID

State 304:
## Known stack suffix:
## LBRACKET simpl_pat
## LR(1) items:
and_or_pat -> LBRACKET simpl_pat . loption(separated_nonempty_list(empty,simpl_pat)) RBRACKET [ UNDERSCORE STAR SLASHSLASH SLASHEQUAL SEMICOLON RPAREN RBRACKET QMARK PLUS PARALLEL LBRACKET ID EXN DOT DARROW ]
and_or_pat -> LBRACKET simpl_pat . PARALLEL loption(separated_nonempty_list(PARALLEL,simpl_pat)) RBRACKET [ UNDERSCORE STAR SLASHSLASH SLASHEQUAL SEMICOLON RPAREN RBRACKET QMARK PLUS PARALLEL LBRACKET ID EXN DOT DARROW ]
## Transitions:
-- On UNDERSCORE shift to state 299
-- On QMARK shift to state 300
-- On PARALLEL shift to state 305
-- On LBRACKET shift to state 301
-- On ID shift to state 303
-- On simpl_pat shift to state 314
-- On separated_nonempty_list(empty,simpl_pat) shift to state 316
-- On naming_pat shift to state 309
-- On loption(separated_nonempty_list(empty,simpl_pat)) shift to state 317
-- On and_or_pat shift to state 310
## Reductions:
-- On RBRACKET
--   reduce production loption(separated_nonempty_list(empty,simpl_pat)) ->

State 305:
## Known stack suffix:
## LBRACKET simpl_pat PARALLEL
## LR(1) items:
and_or_pat -> LBRACKET simpl_pat PARALLEL . loption(separated_nonempty_list(PARALLEL,simpl_pat)) RBRACKET [ UNDERSCORE STAR SLASHSLASH SLASHEQUAL SEMICOLON RPAREN RBRACKET QMARK PLUS PARALLEL LBRACKET ID EXN DOT DARROW ]
## Transitions:
-- On UNDERSCORE shift to state 299
-- On QMARK shift to state 300
-- On LBRACKET shift to state 301
-- On ID shift to state 303
-- On simpl_pat shift to state 306
-- On separated_nonempty_list(PARALLEL,simpl_pat) shift to state 311
-- On naming_pat shift to state 309
-- On loption(separated_nonempty_list(PARALLEL,simpl_pat)) shift to state 312
-- On and_or_pat shift to state 310
## Reductions:
-- On RBRACKET
--   reduce production loption(separated_nonempty_list(PARALLEL,simpl_pat)) ->

State 306:
## Known stack suffix:
## simpl_pat
## LR(1) items:
separated_nonempty_list(PARALLEL,simpl_pat) -> simpl_pat . [ RBRACKET ]
separated_nonempty_list(PARALLEL,simpl_pat) -> simpl_pat . PARALLEL separated_nonempty_list(PARALLEL,simpl_pat) [ RBRACKET ]
## Transitions:
-- On PARALLEL shift to state 307
## Reductions:
-- On RBRACKET
--   reduce production separated_nonempty_list(PARALLEL,simpl_pat) -> simpl_pat

State 307:
## Known stack suffix:
## simpl_pat PARALLEL
## LR(1) items:
separated_nonempty_list(PARALLEL,simpl_pat) -> simpl_pat PARALLEL . separated_nonempty_list(PARALLEL,simpl_pat) [ RBRACKET ]
## Transitions:
-- On UNDERSCORE shift to state 299
-- On QMARK shift to state 300
-- On LBRACKET shift to state 301
-- On ID shift to state 303
-- On simpl_pat shift to state 306
-- On separated_nonempty_list(PARALLEL,simpl_pat) shift to state 308
-- On naming_pat shift to state 309
-- On and_or_pat shift to state 310
## Reductions:

State 308:
## Known stack suffix:
## simpl_pat PARALLEL separated_nonempty_list(PARALLEL,simpl_pat)
## LR(1) items:
separated_nonempty_list(PARALLEL,simpl_pat) -> simpl_pat PARALLEL separated_nonempty_list(PARALLEL,simpl_pat) . [ RBRACKET ]
## Transitions:
## Reductions:
-- On RBRACKET
--   reduce production separated_nonempty_list(PARALLEL,simpl_pat) -> simpl_pat PARALLEL separated_nonempty_list(PARALLEL,simpl_pat)

State 309:
## Known stack suffix:
## naming_pat
## LR(1) items:
simpl_pat -> naming_pat . [ UNDERSCORE STAR SLASHSLASH SLASHEQUAL SEMICOLON RPAREN RBRACKET QMARK PLUS PARALLEL LBRACKET ID EXN DOT DARROW ]
## Transitions:
## Reductions:
-- On UNDERSCORE STAR SLASHSLASH SLASHEQUAL SEMICOLON RPAREN RBRACKET QMARK PLUS PARALLEL LBRACKET ID EXN DOT DARROW
--   reduce production simpl_pat -> naming_pat

State 310:
## Known stack suffix:
## and_or_pat
## LR(1) items:
simpl_pat -> and_or_pat . [ UNDERSCORE STAR SLASHSLASH SLASHEQUAL SEMICOLON RPAREN RBRACKET QMARK PLUS PARALLEL LBRACKET ID EXN DOT DARROW ]
## Transitions:
## Reductions:
-- On UNDERSCORE STAR SLASHSLASH SLASHEQUAL SEMICOLON RPAREN RBRACKET QMARK PLUS PARALLEL LBRACKET ID EXN DOT DARROW
--   reduce production simpl_pat -> and_or_pat

State 311:
## Known stack suffix:
## separated_nonempty_list(PARALLEL,simpl_pat)
## LR(1) items:
loption(separated_nonempty_list(PARALLEL,simpl_pat)) -> separated_nonempty_list(PARALLEL,simpl_pat) . [ RBRACKET ]
## Transitions:
## Reductions:
-- On RBRACKET
--   reduce production loption(separated_nonempty_list(PARALLEL,simpl_pat)) -> separated_nonempty_list(PARALLEL,simpl_pat)

State 312:
## Known stack suffix:
## LBRACKET simpl_pat PARALLEL loption(separated_nonempty_list(PARALLEL,simpl_pat))
## LR(1) items:
and_or_pat -> LBRACKET simpl_pat PARALLEL loption(separated_nonempty_list(PARALLEL,simpl_pat)) . RBRACKET [ UNDERSCORE STAR SLASHSLASH SLASHEQUAL SEMICOLON RPAREN RBRACKET QMARK PLUS PARALLEL LBRACKET ID EXN DOT DARROW ]
## Transitions:
-- On RBRACKET shift to state 313
## Reductions:

State 313:
## Known stack suffix:
## LBRACKET simpl_pat PARALLEL loption(separated_nonempty_list(PARALLEL,simpl_pat)) RBRACKET
## LR(1) items:
and_or_pat -> LBRACKET simpl_pat PARALLEL loption(separated_nonempty_list(PARALLEL,simpl_pat)) RBRACKET . [ UNDERSCORE STAR SLASHSLASH SLASHEQUAL SEMICOLON RPAREN RBRACKET QMARK PLUS PARALLEL LBRACKET ID EXN DOT DARROW ]
## Transitions:
## Reductions:
-- On UNDERSCORE STAR SLASHSLASH SLASHEQUAL SEMICOLON RPAREN RBRACKET QMARK PLUS PARALLEL LBRACKET ID EXN DOT DARROW
--   reduce production and_or_pat -> LBRACKET simpl_pat PARALLEL loption(separated_nonempty_list(PARALLEL,simpl_pat)) RBRACKET

State 314:
## Known stack suffix:
## simpl_pat
## LR(1) items:
separated_nonempty_list(empty,simpl_pat) -> simpl_pat . [ RBRACKET ]
separated_nonempty_list(empty,simpl_pat) -> simpl_pat . separated_nonempty_list(empty,simpl_pat) [ RBRACKET ]
## Transitions:
-- On UNDERSCORE shift to state 299
-- On QMARK shift to state 300
-- On LBRACKET shift to state 301
-- On ID shift to state 303
-- On simpl_pat shift to state 314
-- On separated_nonempty_list(empty,simpl_pat) shift to state 315
-- On naming_pat shift to state 309
-- On and_or_pat shift to state 310
## Reductions:
-- On RBRACKET
--   reduce production separated_nonempty_list(empty,simpl_pat) -> simpl_pat

State 315:
## Known stack suffix:
## simpl_pat separated_nonempty_list(empty,simpl_pat)
## LR(1) items:
separated_nonempty_list(empty,simpl_pat) -> simpl_pat separated_nonempty_list(empty,simpl_pat) . [ RBRACKET ]
## Transitions:
## Reductions:
-- On RBRACKET
--   reduce production separated_nonempty_list(empty,simpl_pat) -> simpl_pat separated_nonempty_list(empty,simpl_pat)

State 316:
## Known stack suffix:
## separated_nonempty_list(empty,simpl_pat)
## LR(1) items:
loption(separated_nonempty_list(empty,simpl_pat)) -> separated_nonempty_list(empty,simpl_pat) . [ RBRACKET ]
## Transitions:
## Reductions:
-- On RBRACKET
--   reduce production loption(separated_nonempty_list(empty,simpl_pat)) -> separated_nonempty_list(empty,simpl_pat)

State 317:
## Known stack suffix:
## LBRACKET simpl_pat loption(separated_nonempty_list(empty,simpl_pat))
## LR(1) items:
and_or_pat -> LBRACKET simpl_pat loption(separated_nonempty_list(empty,simpl_pat)) . RBRACKET [ UNDERSCORE STAR SLASHSLASH SLASHEQUAL SEMICOLON RPAREN RBRACKET QMARK PLUS PARALLEL LBRACKET ID EXN DOT DARROW ]
## Transitions:
-- On RBRACKET shift to state 318
## Reductions:

State 318:
## Known stack suffix:
## LBRACKET simpl_pat loption(separated_nonempty_list(empty,simpl_pat)) RBRACKET
## LR(1) items:
and_or_pat -> LBRACKET simpl_pat loption(separated_nonempty_list(empty,simpl_pat)) RBRACKET . [ UNDERSCORE STAR SLASHSLASH SLASHEQUAL SEMICOLON RPAREN RBRACKET QMARK PLUS PARALLEL LBRACKET ID EXN DOT DARROW ]
## Transitions:
## Reductions:
-- On UNDERSCORE STAR SLASHSLASH SLASHEQUAL SEMICOLON RPAREN RBRACKET QMARK PLUS PARALLEL LBRACKET ID EXN DOT DARROW
--   reduce production and_or_pat -> LBRACKET simpl_pat loption(separated_nonempty_list(empty,simpl_pat)) RBRACKET

State 319:
## Known stack suffix:
## AS simpl_pat
## LR(1) items:
as_ip -> AS simpl_pat . [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW
--   reduce production as_ip -> AS simpl_pat

State 320:
## Known stack suffix:
## USE lsymb WITH tactic_params option(as_ip)
## LR(1) items:
tac -> USE lsymb WITH tactic_params option(as_ip) . [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW
--   reduce production tac -> USE lsymb WITH tactic_params option(as_ip)

State 321:
## Known stack suffix:
## as_ip
## LR(1) items:
option(as_ip) -> as_ip . [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW
--   reduce production option(as_ip) -> as_ip

State 322:
## Known stack suffix:
## tactic_param
## LR(1) items:
tactic_params -> tactic_param . [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW BY AS ]
tactic_params -> tactic_param . COMMA tactic_params [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW BY AS ]
## Transitions:
-- On COMMA shift to state 323
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW BY AS
--   reduce production tactic_params -> tactic_param

State 323:
## Known stack suffix:
## tactic_param COMMA
## LR(1) items:
tactic_params -> tactic_param COMMA . tactic_params [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW BY AS ]
## Transitions:
-- On TRUE shift to state 25
-- On SEQ shift to state 26
-- On PRED shift to state 30
-- On NOT shift to state 32
-- On LPAREN shift to state 33
-- On LANGLE shift to state 34
-- On INT shift to state 295
-- On INIT shift to state 35
-- On IF shift to state 36
-- On ID shift to state 2
-- On HAPPENS shift to state 37
-- On FORALL shift to state 39
-- On FIND shift to state 45
-- On FALSE shift to state 51
-- On EXISTS shift to state 52
-- On DIFF shift to state 57
-- On term_i shift to state 59
-- On term shift to state 296
-- On tactic_params shift to state 324
-- On tactic_param shift to state 322
-- On sterm_i shift to state 65
-- On lsymb shift to state 66
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW BY AS
--   reduce production tactic_params ->

State 324:
## Known stack suffix:
## tactic_param COMMA tactic_params
## LR(1) items:
tactic_params -> tactic_param COMMA tactic_params . [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW BY AS ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW BY AS
--   reduce production tactic_params -> tactic_param COMMA tactic_params

State 325:
## Known stack suffix:
## USE lsymb option(as_ip)
## LR(1) items:
tac -> USE lsymb option(as_ip) . [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW
--   reduce production tac -> USE lsymb option(as_ip)

State 326:
## Known stack suffix:
## UNDO
## LR(1) items:
undo -> UNDO . INT DOT [ # ]
## Transitions:
-- On INT shift to state 327
## Reductions:

State 327:
## Known stack suffix:
## UNDO INT
## LR(1) items:
undo -> UNDO INT . DOT [ # ]
## Transitions:
-- On DOT shift to state 328
## Reductions:

State 328:
## Known stack suffix:
## UNDO INT DOT
## LR(1) items:
undo -> UNDO INT DOT . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production undo -> UNDO INT DOT

State 329:
## Known stack suffix:
## TRY
## LR(1) items:
tac -> TRY . tac [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
-- On USE shift to state 292
-- On TRY shift to state 329
-- On RIGHT shift to state 330
-- On REWRITE shift to state 331
-- On REVERT shift to state 356
-- On REPEAT shift to state 360
-- On NOSIMPL shift to state 361
-- On LPAREN shift to state 362
-- On LEFT shift to state 363
-- On INTRO shift to state 364
-- On ID shift to state 372
-- On HELP shift to state 374
-- On GENERALIZE shift to state 390
-- On EXISTS shift to state 394
-- On DESTRUCT shift to state 396
-- On DEPENDS shift to state 400
-- On DDH shift to state 403
-- On CYCLE shift to state 409
-- On CLEAR shift to state 413
-- On CHECKFAIL shift to state 415
-- On BY shift to state 416
-- On ASSERT shift to state 417
-- On tac shift to state 456
## Reductions:

State 330:
## Known stack suffix:
## RIGHT
## LR(1) items:
tac -> RIGHT . [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW
--   reduce production tac -> RIGHT

State 331:
## Known stack suffix:
## REWRITE
## LR(1) items:
tac -> REWRITE . rw_args rw_in [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
-- On SLASHSLASH shift to state 332
-- On SLASHEQUAL shift to state 333
-- On QMARK shift to state 334
-- On BANGU shift to state 335
-- On separated_nonempty_list(empty,rw_arg) shift to state 336
-- On s_item shift to state 337
-- On rw_mult shift to state 338
-- On rw_item shift to state 345
-- On rw_args shift to state 346
-- On rw_arg shift to state 354
## Reductions:
-- On TRUE SLASH SEQ PRED NOT MINUS LPAREN LANGLE INIT ID HAPPENS FALSE DIFF
--   reduce production rw_mult ->

State 332:
## Known stack suffix:
## SLASHSLASH
## LR(1) items:
s_item -> SLASHSLASH . [ UNDERSCORE TRUE STAR SLASHSLASH SLASHEQUAL SLASH SEQ SEMICOLON RPAREN RBRACKET QMARK PRED PLUS PARALLEL NOT MINUS LPAREN LBRACKET LANGLE INIT IN ID HAPPENS FALSE EXN DOT DIFF DARROW BANGU ]
## Transitions:
## Reductions:
-- On UNDERSCORE TRUE STAR SLASHSLASH SLASHEQUAL SLASH SEQ SEMICOLON RPAREN RBRACKET QMARK PRED PLUS PARALLEL NOT MINUS LPAREN LBRACKET LANGLE INIT IN ID HAPPENS FALSE EXN DOT DIFF DARROW BANGU
--   reduce production s_item -> SLASHSLASH

State 333:
## Known stack suffix:
## SLASHEQUAL
## LR(1) items:
s_item -> SLASHEQUAL . [ UNDERSCORE TRUE STAR SLASHSLASH SLASHEQUAL SLASH SEQ SEMICOLON RPAREN RBRACKET QMARK PRED PLUS PARALLEL NOT MINUS LPAREN LBRACKET LANGLE INIT IN ID HAPPENS FALSE EXN DOT DIFF DARROW BANGU ]
## Transitions:
## Reductions:
-- On UNDERSCORE TRUE STAR SLASHSLASH SLASHEQUAL SLASH SEQ SEMICOLON RPAREN RBRACKET QMARK PRED PLUS PARALLEL NOT MINUS LPAREN LBRACKET LANGLE INIT IN ID HAPPENS FALSE EXN DOT DIFF DARROW BANGU
--   reduce production s_item -> SLASHEQUAL

State 334:
## Known stack suffix:
## QMARK
## LR(1) items:
rw_mult -> QMARK . [ TRUE SLASH SEQ PRED NOT MINUS LPAREN LANGLE INIT ID HAPPENS FALSE DIFF ]
## Transitions:
## Reductions:
-- On TRUE SLASH SEQ PRED NOT MINUS LPAREN LANGLE INIT ID HAPPENS FALSE DIFF
--   reduce production rw_mult -> QMARK

State 335:
## Known stack suffix:
## BANGU
## LR(1) items:
rw_mult -> BANGU . [ TRUE SLASH SEQ PRED NOT MINUS LPAREN LANGLE INIT ID HAPPENS FALSE DIFF ]
## Transitions:
## Reductions:
-- On TRUE SLASH SEQ PRED NOT MINUS LPAREN LANGLE INIT ID HAPPENS FALSE DIFF
--   reduce production rw_mult -> BANGU

State 336:
## Known stack suffix:
## separated_nonempty_list(empty,rw_arg)
## LR(1) items:
rw_args -> separated_nonempty_list(empty,rw_arg) . [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL IN EXN DOT DARROW ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL IN EXN DOT DARROW
--   reduce production rw_args -> separated_nonempty_list(empty,rw_arg)

State 337:
## Known stack suffix:
## s_item
## LR(1) items:
rw_arg -> s_item . [ TRUE SLASHSLASH SLASHEQUAL SLASH SEQ SEMICOLON RPAREN RBRACKET QMARK PRED PLUS PARALLEL NOT MINUS LPAREN LANGLE INIT IN ID HAPPENS FALSE EXN DOT DIFF DARROW BANGU ]
## Transitions:
## Reductions:
-- On TRUE SLASHSLASH SLASHEQUAL SLASH SEQ SEMICOLON RPAREN RBRACKET QMARK PRED PLUS PARALLEL NOT MINUS LPAREN LANGLE INIT IN ID HAPPENS FALSE EXN DOT DIFF DARROW BANGU
--   reduce production rw_arg -> s_item

State 338:
## Known stack suffix:
## rw_mult
## LR(1) items:
rw_item -> rw_mult . rw_dir rw_type [ TRUE SLASHSLASH SLASHEQUAL SLASH SEQ SEMICOLON RPAREN RBRACKET QMARK PRED PLUS PARALLEL NOT MINUS LPAREN LANGLE INIT IN ID HAPPENS FALSE EXN DOT DIFF DARROW BANGU ]
## Transitions:
-- On MINUS shift to state 339
-- On rw_dir shift to state 340
## Reductions:
-- On TRUE SLASH SEQ PRED NOT LPAREN LANGLE INIT ID HAPPENS FALSE DIFF
--   reduce production rw_dir ->

State 339:
## Known stack suffix:
## MINUS
## LR(1) items:
rw_dir -> MINUS . [ TRUE SLASH SEQ PRED NOT LPAREN LANGLE INIT ID HAPPENS FALSE DIFF ]
## Transitions:
## Reductions:
-- On TRUE SLASH SEQ PRED NOT LPAREN LANGLE INIT ID HAPPENS FALSE DIFF
--   reduce production rw_dir -> MINUS

State 340:
## Known stack suffix:
## rw_mult rw_dir
## LR(1) items:
rw_item -> rw_mult rw_dir . rw_type [ TRUE SLASHSLASH SLASHEQUAL SLASH SEQ SEMICOLON RPAREN RBRACKET QMARK PRED PLUS PARALLEL NOT MINUS LPAREN LANGLE INIT IN ID HAPPENS FALSE EXN DOT DIFF DARROW BANGU ]
## Transitions:
-- On TRUE shift to state 25
-- On SLASH shift to state 341
-- On SEQ shift to state 26
-- On PRED shift to state 30
-- On NOT shift to state 32
-- On LPAREN shift to state 33
-- On LANGLE shift to state 34
-- On INIT shift to state 35
-- On ID shift to state 2
-- On HAPPENS shift to state 37
-- On FALSE shift to state 51
-- On DIFF shift to state 57
-- On sterm_i shift to state 136
-- On sterm shift to state 343
-- On rw_type shift to state 344
-- On lsymb shift to state 138
## Reductions:

State 341:
## Known stack suffix:
## SLASH
## LR(1) items:
rw_type -> SLASH . sterm [ TRUE SLASHSLASH SLASHEQUAL SLASH SEQ SEMICOLON RPAREN RBRACKET QMARK PRED PLUS PARALLEL NOT MINUS LPAREN LANGLE INIT IN ID HAPPENS FALSE EXN DOT DIFF DARROW BANGU ]
## Transitions:
-- On TRUE shift to state 25
-- On SEQ shift to state 26
-- On PRED shift to state 30
-- On NOT shift to state 32
-- On LPAREN shift to state 33
-- On LANGLE shift to state 34
-- On INIT shift to state 35
-- On ID shift to state 2
-- On HAPPENS shift to state 37
-- On FALSE shift to state 51
-- On DIFF shift to state 57
-- On sterm_i shift to state 136
-- On sterm shift to state 342
-- On lsymb shift to state 138
## Reductions:

State 342:
## Known stack suffix:
## SLASH sterm
## LR(1) items:
rw_type -> SLASH sterm . [ TRUE SLASHSLASH SLASHEQUAL SLASH SEQ SEMICOLON RPAREN RBRACKET QMARK PRED PLUS PARALLEL NOT MINUS LPAREN LANGLE INIT IN ID HAPPENS FALSE EXN DOT DIFF DARROW BANGU ]
## Transitions:
## Reductions:
-- On TRUE SLASHSLASH SLASHEQUAL SLASH SEQ SEMICOLON RPAREN RBRACKET QMARK PRED PLUS PARALLEL NOT MINUS LPAREN LANGLE INIT IN ID HAPPENS FALSE EXN DOT DIFF DARROW BANGU
--   reduce production rw_type -> SLASH sterm

State 343:
## Known stack suffix:
## sterm
## LR(1) items:
rw_type -> sterm . [ TRUE SLASHSLASH SLASHEQUAL SLASH SEQ SEMICOLON RPAREN RBRACKET QMARK PRED PLUS PARALLEL NOT MINUS LPAREN LANGLE INIT IN ID HAPPENS FALSE EXN DOT DIFF DARROW BANGU ]
## Transitions:
## Reductions:
-- On TRUE SLASHSLASH SLASHEQUAL SLASH SEQ SEMICOLON RPAREN RBRACKET QMARK PRED PLUS PARALLEL NOT MINUS LPAREN LANGLE INIT IN ID HAPPENS FALSE EXN DOT DIFF DARROW BANGU
--   reduce production rw_type -> sterm

State 344:
## Known stack suffix:
## rw_mult rw_dir rw_type
## LR(1) items:
rw_item -> rw_mult rw_dir rw_type . [ TRUE SLASHSLASH SLASHEQUAL SLASH SEQ SEMICOLON RPAREN RBRACKET QMARK PRED PLUS PARALLEL NOT MINUS LPAREN LANGLE INIT IN ID HAPPENS FALSE EXN DOT DIFF DARROW BANGU ]
## Transitions:
## Reductions:
-- On TRUE SLASHSLASH SLASHEQUAL SLASH SEQ SEMICOLON RPAREN RBRACKET QMARK PRED PLUS PARALLEL NOT MINUS LPAREN LANGLE INIT IN ID HAPPENS FALSE EXN DOT DIFF DARROW BANGU
--   reduce production rw_item -> rw_mult rw_dir rw_type

State 345:
## Known stack suffix:
## rw_item
## LR(1) items:
rw_arg -> rw_item . [ TRUE SLASHSLASH SLASHEQUAL SLASH SEQ SEMICOLON RPAREN RBRACKET QMARK PRED PLUS PARALLEL NOT MINUS LPAREN LANGLE INIT IN ID HAPPENS FALSE EXN DOT DIFF DARROW BANGU ]
## Transitions:
## Reductions:
-- On TRUE SLASHSLASH SLASHEQUAL SLASH SEQ SEMICOLON RPAREN RBRACKET QMARK PRED PLUS PARALLEL NOT MINUS LPAREN LANGLE INIT IN ID HAPPENS FALSE EXN DOT DIFF DARROW BANGU
--   reduce production rw_arg -> rw_item

State 346:
## Known stack suffix:
## REWRITE rw_args
## LR(1) items:
tac -> REWRITE rw_args . rw_in [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
-- On IN shift to state 347
-- On rw_in shift to state 353
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW
--   reduce production rw_in ->

State 347:
## Known stack suffix:
## IN
## LR(1) items:
rw_in -> IN . separated_nonempty_list(COMMA,lsymb) [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
rw_in -> IN . STAR [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
-- On STAR shift to state 348
-- On ID shift to state 2
-- On separated_nonempty_list(COMMA,lsymb) shift to state 349
-- On lsymb shift to state 350
## Reductions:

State 348:
## Known stack suffix:
## IN STAR
## LR(1) items:
rw_in -> IN STAR . [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW
--   reduce production rw_in -> IN STAR

State 349:
## Known stack suffix:
## IN separated_nonempty_list(COMMA,lsymb)
## LR(1) items:
rw_in -> IN separated_nonempty_list(COMMA,lsymb) . [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW
--   reduce production rw_in -> IN separated_nonempty_list(COMMA,lsymb)

State 350:
## Known stack suffix:
## lsymb
## LR(1) items:
separated_nonempty_list(COMMA,lsymb) -> lsymb . [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
separated_nonempty_list(COMMA,lsymb) -> lsymb . COMMA separated_nonempty_list(COMMA,lsymb) [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
-- On COMMA shift to state 351
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW
--   reduce production separated_nonempty_list(COMMA,lsymb) -> lsymb

State 351:
## Known stack suffix:
## lsymb COMMA
## LR(1) items:
separated_nonempty_list(COMMA,lsymb) -> lsymb COMMA . separated_nonempty_list(COMMA,lsymb) [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
-- On ID shift to state 2
-- On separated_nonempty_list(COMMA,lsymb) shift to state 352
-- On lsymb shift to state 350
## Reductions:

State 352:
## Known stack suffix:
## lsymb COMMA separated_nonempty_list(COMMA,lsymb)
## LR(1) items:
separated_nonempty_list(COMMA,lsymb) -> lsymb COMMA separated_nonempty_list(COMMA,lsymb) . [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW
--   reduce production separated_nonempty_list(COMMA,lsymb) -> lsymb COMMA separated_nonempty_list(COMMA,lsymb)

State 353:
## Known stack suffix:
## REWRITE rw_args rw_in
## LR(1) items:
tac -> REWRITE rw_args rw_in . [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW
--   reduce production tac -> REWRITE rw_args rw_in

State 354:
## Known stack suffix:
## rw_arg
## LR(1) items:
separated_nonempty_list(empty,rw_arg) -> rw_arg . [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL IN EXN DOT DARROW ]
separated_nonempty_list(empty,rw_arg) -> rw_arg . separated_nonempty_list(empty,rw_arg) [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL IN EXN DOT DARROW ]
## Transitions:
-- On SLASHSLASH shift to state 332
-- On SLASHEQUAL shift to state 333
-- On QMARK shift to state 334
-- On BANGU shift to state 335
-- On separated_nonempty_list(empty,rw_arg) shift to state 355
-- On s_item shift to state 337
-- On rw_mult shift to state 338
-- On rw_item shift to state 345
-- On rw_arg shift to state 354
## Reductions:
-- On TRUE SLASH SEQ PRED NOT MINUS LPAREN LANGLE INIT ID HAPPENS FALSE DIFF
--   reduce production rw_mult ->
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL IN EXN DOT DARROW
--   reduce production separated_nonempty_list(empty,rw_arg) -> rw_arg

State 355:
## Known stack suffix:
## rw_arg separated_nonempty_list(empty,rw_arg)
## LR(1) items:
separated_nonempty_list(empty,rw_arg) -> rw_arg separated_nonempty_list(empty,rw_arg) . [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL IN EXN DOT DARROW ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL IN EXN DOT DARROW
--   reduce production separated_nonempty_list(empty,rw_arg) -> rw_arg separated_nonempty_list(empty,rw_arg)

State 356:
## Known stack suffix:
## REVERT
## LR(1) items:
tac -> REVERT . separated_nonempty_list(empty,lsymb) [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
-- On ID shift to state 2
-- On separated_nonempty_list(empty,lsymb) shift to state 357
-- On lsymb shift to state 358
## Reductions:

State 357:
## Known stack suffix:
## REVERT separated_nonempty_list(empty,lsymb)
## LR(1) items:
tac -> REVERT separated_nonempty_list(empty,lsymb) . [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW
--   reduce production tac -> REVERT separated_nonempty_list(empty,lsymb)

State 358:
## Known stack suffix:
## lsymb
## LR(1) items:
separated_nonempty_list(empty,lsymb) -> lsymb . [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
separated_nonempty_list(empty,lsymb) -> lsymb . separated_nonempty_list(empty,lsymb) [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
-- On ID shift to state 2
-- On separated_nonempty_list(empty,lsymb) shift to state 359
-- On lsymb shift to state 358
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW
--   reduce production separated_nonempty_list(empty,lsymb) -> lsymb

State 359:
## Known stack suffix:
## lsymb separated_nonempty_list(empty,lsymb)
## LR(1) items:
separated_nonempty_list(empty,lsymb) -> lsymb separated_nonempty_list(empty,lsymb) . [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW
--   reduce production separated_nonempty_list(empty,lsymb) -> lsymb separated_nonempty_list(empty,lsymb)

State 360:
## Known stack suffix:
## REPEAT
## LR(1) items:
tac -> REPEAT . tac [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
-- On USE shift to state 292
-- On TRY shift to state 329
-- On RIGHT shift to state 330
-- On REWRITE shift to state 331
-- On REVERT shift to state 356
-- On REPEAT shift to state 360
-- On NOSIMPL shift to state 361
-- On LPAREN shift to state 362
-- On LEFT shift to state 363
-- On INTRO shift to state 364
-- On ID shift to state 372
-- On HELP shift to state 374
-- On GENERALIZE shift to state 390
-- On EXISTS shift to state 394
-- On DESTRUCT shift to state 396
-- On DEPENDS shift to state 400
-- On DDH shift to state 403
-- On CYCLE shift to state 409
-- On CLEAR shift to state 413
-- On CHECKFAIL shift to state 415
-- On BY shift to state 416
-- On ASSERT shift to state 417
-- On tac shift to state 455
## Reductions:

State 361:
## Known stack suffix:
## NOSIMPL
## LR(1) items:
tac -> NOSIMPL . tac [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
-- On USE shift to state 292
-- On TRY shift to state 329
-- On RIGHT shift to state 330
-- On REWRITE shift to state 331
-- On REVERT shift to state 356
-- On REPEAT shift to state 360
-- On NOSIMPL shift to state 361
-- On LPAREN shift to state 362
-- On LEFT shift to state 363
-- On INTRO shift to state 364
-- On ID shift to state 372
-- On HELP shift to state 374
-- On GENERALIZE shift to state 390
-- On EXISTS shift to state 394
-- On DESTRUCT shift to state 396
-- On DEPENDS shift to state 400
-- On DDH shift to state 403
-- On CYCLE shift to state 409
-- On CLEAR shift to state 413
-- On CHECKFAIL shift to state 415
-- On BY shift to state 416
-- On ASSERT shift to state 417
-- On tac shift to state 454
## Reductions:

State 362:
## Known stack suffix:
## LPAREN
## LR(1) items:
tac -> LPAREN . tac RPAREN [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
-- On USE shift to state 292
-- On TRY shift to state 329
-- On RIGHT shift to state 330
-- On REWRITE shift to state 331
-- On REVERT shift to state 356
-- On REPEAT shift to state 360
-- On NOSIMPL shift to state 361
-- On LPAREN shift to state 362
-- On LEFT shift to state 363
-- On INTRO shift to state 364
-- On ID shift to state 372
-- On HELP shift to state 374
-- On GENERALIZE shift to state 390
-- On EXISTS shift to state 394
-- On DESTRUCT shift to state 396
-- On DEPENDS shift to state 400
-- On DDH shift to state 403
-- On CYCLE shift to state 409
-- On CLEAR shift to state 413
-- On CHECKFAIL shift to state 415
-- On BY shift to state 416
-- On ASSERT shift to state 417
-- On tac shift to state 452
## Reductions:

State 363:
## Known stack suffix:
## LEFT
## LR(1) items:
tac -> LEFT . [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW
--   reduce production tac -> LEFT

State 364:
## Known stack suffix:
## INTRO
## LR(1) items:
tac -> INTRO . intro_pat_list [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
-- On UNDERSCORE shift to state 299
-- On STAR shift to state 365
-- On SLASHSLASH shift to state 332
-- On SLASHEQUAL shift to state 333
-- On QMARK shift to state 300
-- On LBRACKET shift to state 301
-- On ID shift to state 303
-- On simpl_pat shift to state 366
-- On separated_nonempty_list(empty,intro_pat) shift to state 367
-- On s_item shift to state 368
-- On naming_pat shift to state 309
-- On intro_pat_list shift to state 369
-- On intro_pat shift to state 370
-- On and_or_pat shift to state 310
## Reductions:

State 365:
## Known stack suffix:
## STAR
## LR(1) items:
intro_pat -> STAR . [ UNDERSCORE STAR SLASHSLASH SLASHEQUAL SEMICOLON RPAREN RBRACKET QMARK PLUS PARALLEL LBRACKET ID EXN DOT DARROW ]
## Transitions:
## Reductions:
-- On UNDERSCORE STAR SLASHSLASH SLASHEQUAL SEMICOLON RPAREN RBRACKET QMARK PLUS PARALLEL LBRACKET ID EXN DOT DARROW
--   reduce production intro_pat -> STAR

State 366:
## Known stack suffix:
## simpl_pat
## LR(1) items:
intro_pat -> simpl_pat . [ UNDERSCORE STAR SLASHSLASH SLASHEQUAL SEMICOLON RPAREN RBRACKET QMARK PLUS PARALLEL LBRACKET ID EXN DOT DARROW ]
## Transitions:
## Reductions:
-- On UNDERSCORE STAR SLASHSLASH SLASHEQUAL SEMICOLON RPAREN RBRACKET QMARK PLUS PARALLEL LBRACKET ID EXN DOT DARROW
--   reduce production intro_pat -> simpl_pat

State 367:
## Known stack suffix:
## separated_nonempty_list(empty,intro_pat)
## LR(1) items:
intro_pat_list -> separated_nonempty_list(empty,intro_pat) . [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW
--   reduce production intro_pat_list -> separated_nonempty_list(empty,intro_pat)

State 368:
## Known stack suffix:
## s_item
## LR(1) items:
intro_pat -> s_item . [ UNDERSCORE STAR SLASHSLASH SLASHEQUAL SEMICOLON RPAREN RBRACKET QMARK PLUS PARALLEL LBRACKET ID EXN DOT DARROW ]
## Transitions:
## Reductions:
-- On UNDERSCORE STAR SLASHSLASH SLASHEQUAL SEMICOLON RPAREN RBRACKET QMARK PLUS PARALLEL LBRACKET ID EXN DOT DARROW
--   reduce production intro_pat -> s_item

State 369:
## Known stack suffix:
## INTRO intro_pat_list
## LR(1) items:
tac -> INTRO intro_pat_list . [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW
--   reduce production tac -> INTRO intro_pat_list

State 370:
## Known stack suffix:
## intro_pat
## LR(1) items:
separated_nonempty_list(empty,intro_pat) -> intro_pat . [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
separated_nonempty_list(empty,intro_pat) -> intro_pat . separated_nonempty_list(empty,intro_pat) [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
-- On UNDERSCORE shift to state 299
-- On STAR shift to state 365
-- On SLASHSLASH shift to state 332
-- On SLASHEQUAL shift to state 333
-- On QMARK shift to state 300
-- On LBRACKET shift to state 301
-- On ID shift to state 303
-- On simpl_pat shift to state 366
-- On separated_nonempty_list(empty,intro_pat) shift to state 371
-- On s_item shift to state 368
-- On naming_pat shift to state 309
-- On intro_pat shift to state 370
-- On and_or_pat shift to state 310
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW
--   reduce production separated_nonempty_list(empty,intro_pat) -> intro_pat

State 371:
## Known stack suffix:
## intro_pat separated_nonempty_list(empty,intro_pat)
## LR(1) items:
separated_nonempty_list(empty,intro_pat) -> intro_pat separated_nonempty_list(empty,intro_pat) . [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW
--   reduce production separated_nonempty_list(empty,intro_pat) -> intro_pat separated_nonempty_list(empty,intro_pat)

State 372:
## Known stack suffix:
## ID
## LR(1) items:
tac -> ID . tactic_params [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
-- On TRUE shift to state 25
-- On SEQ shift to state 26
-- On PRED shift to state 30
-- On NOT shift to state 32
-- On LPAREN shift to state 33
-- On LANGLE shift to state 34
-- On INT shift to state 295
-- On INIT shift to state 35
-- On IF shift to state 36
-- On ID shift to state 2
-- On HAPPENS shift to state 37
-- On FORALL shift to state 39
-- On FIND shift to state 45
-- On FALSE shift to state 51
-- On EXISTS shift to state 52
-- On DIFF shift to state 57
-- On term_i shift to state 59
-- On term shift to state 296
-- On tactic_params shift to state 373
-- On tactic_param shift to state 322
-- On sterm_i shift to state 65
-- On lsymb shift to state 66
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW
--   reduce production tactic_params ->

State 373:
## Known stack suffix:
## ID tactic_params
## LR(1) items:
tac -> ID tactic_params . [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW
--   reduce production tac -> ID tactic_params

State 374:
## Known stack suffix:
## HELP
## LR(1) items:
tac -> HELP . [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
tac -> HELP . lsymb [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
tac -> HELP . help_tac [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
-- On USE shift to state 375
-- On RIGHT shift to state 376
-- On REWRITE shift to state 377
-- On REVERT shift to state 378
-- On LEFT shift to state 379
-- On INTRO shift to state 380
-- On ID shift to state 2
-- On GENERALIZE shift to state 381
-- On EXISTS shift to state 382
-- On DESTRUCT shift to state 383
-- On DEPENDS shift to state 384
-- On DDH shift to state 385
-- On ASSERT shift to state 386
-- On lsymb shift to state 387
-- On help_tac_i shift to state 388
-- On help_tac shift to state 389
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW
--   reduce production tac -> HELP

State 375:
## Known stack suffix:
## USE
## LR(1) items:
help_tac_i -> USE . [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW
--   reduce production help_tac_i -> USE

State 376:
## Known stack suffix:
## RIGHT
## LR(1) items:
help_tac_i -> RIGHT . [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW
--   reduce production help_tac_i -> RIGHT

State 377:
## Known stack suffix:
## REWRITE
## LR(1) items:
help_tac_i -> REWRITE . [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW
--   reduce production help_tac_i -> REWRITE

State 378:
## Known stack suffix:
## REVERT
## LR(1) items:
help_tac_i -> REVERT . [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW
--   reduce production help_tac_i -> REVERT

State 379:
## Known stack suffix:
## LEFT
## LR(1) items:
help_tac_i -> LEFT . [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW
--   reduce production help_tac_i -> LEFT

State 380:
## Known stack suffix:
## INTRO
## LR(1) items:
help_tac_i -> INTRO . [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW
--   reduce production help_tac_i -> INTRO

State 381:
## Known stack suffix:
## GENERALIZE
## LR(1) items:
help_tac_i -> GENERALIZE . [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW
--   reduce production help_tac_i -> GENERALIZE

State 382:
## Known stack suffix:
## EXISTS
## LR(1) items:
help_tac_i -> EXISTS . [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW
--   reduce production help_tac_i -> EXISTS

State 383:
## Known stack suffix:
## DESTRUCT
## LR(1) items:
help_tac_i -> DESTRUCT . [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW
--   reduce production help_tac_i -> DESTRUCT

State 384:
## Known stack suffix:
## DEPENDS
## LR(1) items:
help_tac_i -> DEPENDS . [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW
--   reduce production help_tac_i -> DEPENDS

State 385:
## Known stack suffix:
## DDH
## LR(1) items:
help_tac_i -> DDH . [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW
--   reduce production help_tac_i -> DDH

State 386:
## Known stack suffix:
## ASSERT
## LR(1) items:
help_tac_i -> ASSERT . [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW
--   reduce production help_tac_i -> ASSERT

State 387:
## Known stack suffix:
## HELP lsymb
## LR(1) items:
tac -> HELP lsymb . [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW
--   reduce production tac -> HELP lsymb

State 388:
## Known stack suffix:
## help_tac_i
## LR(1) items:
help_tac -> help_tac_i . [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW
--   reduce production help_tac -> help_tac_i

State 389:
## Known stack suffix:
## HELP help_tac
## LR(1) items:
tac -> HELP help_tac . [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW
--   reduce production tac -> HELP help_tac

State 390:
## Known stack suffix:
## GENERALIZE
## LR(1) items:
tac -> GENERALIZE . separated_nonempty_list(empty,sterm) [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
-- On TRUE shift to state 25
-- On SEQ shift to state 26
-- On PRED shift to state 30
-- On NOT shift to state 32
-- On LPAREN shift to state 33
-- On LANGLE shift to state 34
-- On INIT shift to state 35
-- On ID shift to state 2
-- On HAPPENS shift to state 37
-- On FALSE shift to state 51
-- On DIFF shift to state 57
-- On sterm_i shift to state 136
-- On sterm shift to state 391
-- On separated_nonempty_list(empty,sterm) shift to state 393
-- On lsymb shift to state 138
## Reductions:

State 391:
## Known stack suffix:
## sterm
## LR(1) items:
separated_nonempty_list(empty,sterm) -> sterm . [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
separated_nonempty_list(empty,sterm) -> sterm . separated_nonempty_list(empty,sterm) [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
-- On TRUE shift to state 25
-- On SEQ shift to state 26
-- On PRED shift to state 30
-- On NOT shift to state 32
-- On LPAREN shift to state 33
-- On LANGLE shift to state 34
-- On INIT shift to state 35
-- On ID shift to state 2
-- On HAPPENS shift to state 37
-- On FALSE shift to state 51
-- On DIFF shift to state 57
-- On sterm_i shift to state 136
-- On sterm shift to state 391
-- On separated_nonempty_list(empty,sterm) shift to state 392
-- On lsymb shift to state 138
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW
--   reduce production separated_nonempty_list(empty,sterm) -> sterm

State 392:
## Known stack suffix:
## sterm separated_nonempty_list(empty,sterm)
## LR(1) items:
separated_nonempty_list(empty,sterm) -> sterm separated_nonempty_list(empty,sterm) . [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW
--   reduce production separated_nonempty_list(empty,sterm) -> sterm separated_nonempty_list(empty,sterm)

State 393:
## Known stack suffix:
## GENERALIZE separated_nonempty_list(empty,sterm)
## LR(1) items:
tac -> GENERALIZE separated_nonempty_list(empty,sterm) . [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW
--   reduce production tac -> GENERALIZE separated_nonempty_list(empty,sterm)

State 394:
## Known stack suffix:
## EXISTS
## LR(1) items:
tac -> EXISTS . tactic_params [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
-- On TRUE shift to state 25
-- On SEQ shift to state 26
-- On PRED shift to state 30
-- On NOT shift to state 32
-- On LPAREN shift to state 33
-- On LANGLE shift to state 34
-- On INT shift to state 295
-- On INIT shift to state 35
-- On IF shift to state 36
-- On ID shift to state 2
-- On HAPPENS shift to state 37
-- On FORALL shift to state 39
-- On FIND shift to state 45
-- On FALSE shift to state 51
-- On EXISTS shift to state 52
-- On DIFF shift to state 57
-- On term_i shift to state 59
-- On term shift to state 296
-- On tactic_params shift to state 395
-- On tactic_param shift to state 322
-- On sterm_i shift to state 65
-- On lsymb shift to state 66
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW
--   reduce production tactic_params ->

State 395:
## Known stack suffix:
## EXISTS tactic_params
## LR(1) items:
tac -> EXISTS tactic_params . [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW
--   reduce production tac -> EXISTS tactic_params

State 396:
## Known stack suffix:
## DESTRUCT
## LR(1) items:
tac -> DESTRUCT . lsymb [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
tac -> DESTRUCT . lsymb AS and_or_pat [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
-- On ID shift to state 2
-- On lsymb shift to state 397
## Reductions:

State 397:
## Known stack suffix:
## DESTRUCT lsymb
## LR(1) items:
tac -> DESTRUCT lsymb . [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
tac -> DESTRUCT lsymb . AS and_or_pat [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
-- On AS shift to state 398
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW
--   reduce production tac -> DESTRUCT lsymb

State 398:
## Known stack suffix:
## DESTRUCT lsymb AS
## LR(1) items:
tac -> DESTRUCT lsymb AS . and_or_pat [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
-- On LBRACKET shift to state 301
-- On and_or_pat shift to state 399
## Reductions:

State 399:
## Known stack suffix:
## DESTRUCT lsymb AS and_or_pat
## LR(1) items:
tac -> DESTRUCT lsymb AS and_or_pat . [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW
--   reduce production tac -> DESTRUCT lsymb AS and_or_pat

State 400:
## Known stack suffix:
## DEPENDS
## LR(1) items:
tac -> DEPENDS . tactic_params [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
tac -> DEPENDS . tactic_params BY tac [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
-- On TRUE shift to state 25
-- On SEQ shift to state 26
-- On PRED shift to state 30
-- On NOT shift to state 32
-- On LPAREN shift to state 33
-- On LANGLE shift to state 34
-- On INT shift to state 295
-- On INIT shift to state 35
-- On IF shift to state 36
-- On ID shift to state 2
-- On HAPPENS shift to state 37
-- On FORALL shift to state 39
-- On FIND shift to state 45
-- On FALSE shift to state 51
-- On EXISTS shift to state 52
-- On DIFF shift to state 57
-- On term_i shift to state 59
-- On term shift to state 296
-- On tactic_params shift to state 401
-- On tactic_param shift to state 322
-- On sterm_i shift to state 65
-- On lsymb shift to state 66
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW BY
--   reduce production tactic_params ->

State 401:
## Known stack suffix:
## DEPENDS tactic_params
## LR(1) items:
tac -> DEPENDS tactic_params . [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
tac -> DEPENDS tactic_params . BY tac [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
-- On BY shift to state 402
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW
--   reduce production tac -> DEPENDS tactic_params

State 402:
## Known stack suffix:
## DEPENDS tactic_params BY
## LR(1) items:
tac -> DEPENDS tactic_params BY . tac [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
-- On USE shift to state 292
-- On TRY shift to state 329
-- On RIGHT shift to state 330
-- On REWRITE shift to state 331
-- On REVERT shift to state 356
-- On REPEAT shift to state 360
-- On NOSIMPL shift to state 361
-- On LPAREN shift to state 362
-- On LEFT shift to state 363
-- On INTRO shift to state 364
-- On ID shift to state 372
-- On HELP shift to state 374
-- On GENERALIZE shift to state 390
-- On EXISTS shift to state 394
-- On DESTRUCT shift to state 396
-- On DEPENDS shift to state 400
-- On DDH shift to state 403
-- On CYCLE shift to state 409
-- On CLEAR shift to state 413
-- On CHECKFAIL shift to state 415
-- On BY shift to state 416
-- On ASSERT shift to state 417
-- On tac shift to state 451
## Reductions:

State 403:
## Known stack suffix:
## DDH
## LR(1) items:
tac -> DDH . lsymb COMMA lsymb COMMA lsymb [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
-- On ID shift to state 2
-- On lsymb shift to state 404
## Reductions:

State 404:
## Known stack suffix:
## DDH lsymb
## LR(1) items:
tac -> DDH lsymb . COMMA lsymb COMMA lsymb [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
-- On COMMA shift to state 405
## Reductions:

State 405:
## Known stack suffix:
## DDH lsymb COMMA
## LR(1) items:
tac -> DDH lsymb COMMA . lsymb COMMA lsymb [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
-- On ID shift to state 2
-- On lsymb shift to state 406
## Reductions:

State 406:
## Known stack suffix:
## DDH lsymb COMMA lsymb
## LR(1) items:
tac -> DDH lsymb COMMA lsymb . COMMA lsymb [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
-- On COMMA shift to state 407
## Reductions:

State 407:
## Known stack suffix:
## DDH lsymb COMMA lsymb COMMA
## LR(1) items:
tac -> DDH lsymb COMMA lsymb COMMA . lsymb [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
-- On ID shift to state 2
-- On lsymb shift to state 408
## Reductions:

State 408:
## Known stack suffix:
## DDH lsymb COMMA lsymb COMMA lsymb
## LR(1) items:
tac -> DDH lsymb COMMA lsymb COMMA lsymb . [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW
--   reduce production tac -> DDH lsymb COMMA lsymb COMMA lsymb

State 409:
## Known stack suffix:
## CYCLE
## LR(1) items:
tac -> CYCLE . INT [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
tac -> CYCLE . MINUS INT [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
-- On MINUS shift to state 410
-- On INT shift to state 412
## Reductions:

State 410:
## Known stack suffix:
## CYCLE MINUS
## LR(1) items:
tac -> CYCLE MINUS . INT [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
-- On INT shift to state 411
## Reductions:

State 411:
## Known stack suffix:
## CYCLE MINUS INT
## LR(1) items:
tac -> CYCLE MINUS INT . [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW
--   reduce production tac -> CYCLE MINUS INT

State 412:
## Known stack suffix:
## CYCLE INT
## LR(1) items:
tac -> CYCLE INT . [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW
--   reduce production tac -> CYCLE INT

State 413:
## Known stack suffix:
## CLEAR
## LR(1) items:
tac -> CLEAR . separated_nonempty_list(empty,lsymb) [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
-- On ID shift to state 2
-- On separated_nonempty_list(empty,lsymb) shift to state 414
-- On lsymb shift to state 358
## Reductions:

State 414:
## Known stack suffix:
## CLEAR separated_nonempty_list(empty,lsymb)
## LR(1) items:
tac -> CLEAR separated_nonempty_list(empty,lsymb) . [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW
--   reduce production tac -> CLEAR separated_nonempty_list(empty,lsymb)

State 415:
## Known stack suffix:
## CHECKFAIL
## LR(1) items:
tac -> CHECKFAIL . tac EXN tac_errors [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
-- On USE shift to state 292
-- On TRY shift to state 329
-- On RIGHT shift to state 330
-- On REWRITE shift to state 331
-- On REVERT shift to state 356
-- On REPEAT shift to state 360
-- On NOSIMPL shift to state 361
-- On LPAREN shift to state 362
-- On LEFT shift to state 363
-- On INTRO shift to state 364
-- On ID shift to state 372
-- On HELP shift to state 374
-- On GENERALIZE shift to state 390
-- On EXISTS shift to state 394
-- On DESTRUCT shift to state 396
-- On DEPENDS shift to state 400
-- On DDH shift to state 403
-- On CYCLE shift to state 409
-- On CLEAR shift to state 413
-- On CHECKFAIL shift to state 415
-- On BY shift to state 416
-- On ASSERT shift to state 417
-- On tac shift to state 445
## Reductions:

State 416:
## Known stack suffix:
## BY
## LR(1) items:
tac -> BY . tac [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
-- On USE shift to state 292
-- On TRY shift to state 329
-- On RIGHT shift to state 330
-- On REWRITE shift to state 331
-- On REVERT shift to state 356
-- On REPEAT shift to state 360
-- On NOSIMPL shift to state 361
-- On LPAREN shift to state 362
-- On LEFT shift to state 363
-- On INTRO shift to state 364
-- On ID shift to state 372
-- On HELP shift to state 374
-- On GENERALIZE shift to state 390
-- On EXISTS shift to state 394
-- On DESTRUCT shift to state 396
-- On DEPENDS shift to state 400
-- On DDH shift to state 403
-- On CYCLE shift to state 409
-- On CLEAR shift to state 413
-- On CHECKFAIL shift to state 415
-- On BY shift to state 416
-- On ASSERT shift to state 417
-- On tac shift to state 421
## Reductions:

State 417:
## Known stack suffix:
## ASSERT
## LR(1) items:
tac -> ASSERT . tac_formula option(as_ip) [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
-- On TRUE shift to state 25
-- On SEQ shift to state 26
-- On PRED shift to state 30
-- On NOT shift to state 32
-- On LPAREN shift to state 33
-- On LANGLE shift to state 34
-- On INIT shift to state 35
-- On IF shift to state 36
-- On ID shift to state 2
-- On HAPPENS shift to state 37
-- On FORALL shift to state 39
-- On FIND shift to state 45
-- On FALSE shift to state 51
-- On EXISTS shift to state 52
-- On DIFF shift to state 57
-- On term_i shift to state 59
-- On term shift to state 418
-- On tac_formula shift to state 419
-- On sterm_i shift to state 65
-- On lsymb shift to state 66
## Reductions:

State 418:
## Known stack suffix:
## term
## LR(1) items:
tac_formula -> term . [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW AS ]
term_i -> term . XOR term [ XOR SEMICOLON RPAREN RBRACKET RANGLE PLUS PARALLEL OR NEQ LEQ LANGLE GEQ EXP EXN EQ DOT DEQUIVARROW DARROW AS AND ]
term_i -> term . EXP term [ XOR SEMICOLON RPAREN RBRACKET RANGLE PLUS PARALLEL OR NEQ LEQ LANGLE GEQ EXP EXN EQ DOT DEQUIVARROW DARROW AS AND ]
term_i -> term . AND term [ XOR SEMICOLON RPAREN RBRACKET RANGLE PLUS PARALLEL OR NEQ LEQ LANGLE GEQ EXP EXN EQ DOT DEQUIVARROW DARROW AS AND ]
term_i -> term . OR term [ XOR SEMICOLON RPAREN RBRACKET RANGLE PLUS PARALLEL OR NEQ LEQ LANGLE GEQ EXP EXN EQ DOT DEQUIVARROW DARROW AS AND ]
term_i -> term . DARROW term [ XOR SEMICOLON RPAREN RBRACKET RANGLE PLUS PARALLEL OR NEQ LEQ LANGLE GEQ EXP EXN EQ DOT DEQUIVARROW DARROW AS AND ]
term_i -> term . EQ term [ XOR SEMICOLON RPAREN RBRACKET RANGLE PLUS PARALLEL OR NEQ LEQ LANGLE GEQ EXP EXN EQ DOT DEQUIVARROW DARROW AS AND ]
term_i -> term . NEQ term [ XOR SEMICOLON RPAREN RBRACKET RANGLE PLUS PARALLEL OR NEQ LEQ LANGLE GEQ EXP EXN EQ DOT DEQUIVARROW DARROW AS AND ]
term_i -> term . LEQ term [ XOR SEMICOLON RPAREN RBRACKET RANGLE PLUS PARALLEL OR NEQ LEQ LANGLE GEQ EXP EXN EQ DOT DEQUIVARROW DARROW AS AND ]
term_i -> term . LANGLE term [ XOR SEMICOLON RPAREN RBRACKET RANGLE PLUS PARALLEL OR NEQ LEQ LANGLE GEQ EXP EXN EQ DOT DEQUIVARROW DARROW AS AND ]
term_i -> term . GEQ term [ XOR SEMICOLON RPAREN RBRACKET RANGLE PLUS PARALLEL OR NEQ LEQ LANGLE GEQ EXP EXN EQ DOT DEQUIVARROW DARROW AS AND ]
term_i -> term . RANGLE term [ XOR SEMICOLON RPAREN RBRACKET RANGLE PLUS PARALLEL OR NEQ LEQ LANGLE GEQ EXP EXN EQ DOT DEQUIVARROW DARROW AS AND ]
term_i -> term . DEQUIVARROW term [ XOR SEMICOLON RPAREN RBRACKET RANGLE PLUS PARALLEL OR NEQ LEQ LANGLE GEQ EXP EXN EQ DOT DEQUIVARROW DARROW AS AND ]
## Transitions:
-- On XOR shift to state 61
-- On RANGLE shift to state 69
-- On OR shift to state 71
-- On NEQ shift to state 73
-- On LEQ shift to state 75
-- On LANGLE shift to state 77
-- On GEQ shift to state 79
-- On EXP shift to state 63
-- On EQ shift to state 81
-- On DEQUIVARROW shift to state 85
-- On AND shift to state 83
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW AS
--   reduce production tac_formula -> term

State 419:
## Known stack suffix:
## ASSERT tac_formula
## LR(1) items:
tac -> ASSERT tac_formula . option(as_ip) [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
-- On AS shift to state 298
-- On option(as_ip) shift to state 420
-- On as_ip shift to state 321
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW
--   reduce production option(as_ip) ->

State 420:
## Known stack suffix:
## ASSERT tac_formula option(as_ip)
## LR(1) items:
tac -> ASSERT tac_formula option(as_ip) . [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW
--   reduce production tac -> ASSERT tac_formula option(as_ip)

State 421:
## Known stack suffix:
## BY tac
## LR(1) items:
tac -> tac . SEMICOLON tac [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
tac -> tac . SEMICOLON LBRACKET sel_tacs RBRACKET [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
tac -> tac . SEMICOLON selector COLON tac [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
tac -> BY tac . [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
tac -> tac . PLUS tac [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
tac -> tac . DARROW intro_pat_list [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
-- On SEMICOLON shift to state 422
-- On PLUS shift to state 430
## Reductions:
-- On RPAREN RBRACKET PARALLEL EXN DOT DARROW
--   reduce production tac -> BY tac

State 422:
## Known stack suffix:
## tac SEMICOLON
## LR(1) items:
tac -> tac SEMICOLON . tac [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
tac -> tac SEMICOLON . LBRACKET sel_tacs RBRACKET [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
tac -> tac SEMICOLON . selector COLON tac [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
-- On USE shift to state 292
-- On TRY shift to state 329
-- On RIGHT shift to state 330
-- On REWRITE shift to state 331
-- On REVERT shift to state 356
-- On REPEAT shift to state 360
-- On NOSIMPL shift to state 361
-- On LPAREN shift to state 362
-- On LEFT shift to state 363
-- On LBRACKET shift to state 423
-- On INTRO shift to state 364
-- On INT shift to state 424
-- On ID shift to state 372
-- On HELP shift to state 374
-- On GENERALIZE shift to state 390
-- On EXISTS shift to state 394
-- On DESTRUCT shift to state 396
-- On DEPENDS shift to state 400
-- On DDH shift to state 403
-- On CYCLE shift to state 409
-- On CLEAR shift to state 413
-- On CHECKFAIL shift to state 415
-- On BY shift to state 416
-- On ASSERT shift to state 417
-- On tac shift to state 441
-- On separated_nonempty_list(COMMA,int) shift to state 426
-- On selector shift to state 442
-- On int shift to state 434
## Reductions:

State 423:
## Known stack suffix:
## tac SEMICOLON LBRACKET
## LR(1) items:
tac -> tac SEMICOLON LBRACKET . sel_tacs RBRACKET [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
-- On INT shift to state 424
-- On separated_nonempty_list(PARALLEL,sel_tac) shift to state 425
-- On separated_nonempty_list(COMMA,int) shift to state 426
-- On selector shift to state 427
-- On sel_tacs shift to state 439
-- On int shift to state 434
## Reductions:

State 424:
## Known stack suffix:
## INT
## LR(1) items:
int -> INT . [ COMMA COLON ]
## Transitions:
## Reductions:
-- On COMMA COLON
--   reduce production int -> INT

State 425:
## Known stack suffix:
## separated_nonempty_list(PARALLEL,sel_tac)
## LR(1) items:
sel_tacs -> separated_nonempty_list(PARALLEL,sel_tac) . [ RBRACKET ]
## Transitions:
## Reductions:
-- On RBRACKET
--   reduce production sel_tacs -> separated_nonempty_list(PARALLEL,sel_tac)

State 426:
## Known stack suffix:
## separated_nonempty_list(COMMA,int)
## LR(1) items:
selector -> separated_nonempty_list(COMMA,int) . [ COLON ]
## Transitions:
## Reductions:
-- On COLON
--   reduce production selector -> separated_nonempty_list(COMMA,int)

State 427:
## Known stack suffix:
## selector
## LR(1) items:
separated_nonempty_list(PARALLEL,sel_tac) -> selector . COLON tac [ RBRACKET ]
separated_nonempty_list(PARALLEL,sel_tac) -> selector . COLON tac PARALLEL separated_nonempty_list(PARALLEL,sel_tac) [ RBRACKET ]
## Transitions:
-- On COLON shift to state 428
## Reductions:

State 428:
## Known stack suffix:
## selector COLON
## LR(1) items:
separated_nonempty_list(PARALLEL,sel_tac) -> selector COLON . tac [ RBRACKET ]
separated_nonempty_list(PARALLEL,sel_tac) -> selector COLON . tac PARALLEL separated_nonempty_list(PARALLEL,sel_tac) [ RBRACKET ]
## Transitions:
-- On USE shift to state 292
-- On TRY shift to state 329
-- On RIGHT shift to state 330
-- On REWRITE shift to state 331
-- On REVERT shift to state 356
-- On REPEAT shift to state 360
-- On NOSIMPL shift to state 361
-- On LPAREN shift to state 362
-- On LEFT shift to state 363
-- On INTRO shift to state 364
-- On ID shift to state 372
-- On HELP shift to state 374
-- On GENERALIZE shift to state 390
-- On EXISTS shift to state 394
-- On DESTRUCT shift to state 396
-- On DEPENDS shift to state 400
-- On DDH shift to state 403
-- On CYCLE shift to state 409
-- On CLEAR shift to state 413
-- On CHECKFAIL shift to state 415
-- On BY shift to state 416
-- On ASSERT shift to state 417
-- On tac shift to state 429
## Reductions:

State 429:
## Known stack suffix:
## selector COLON tac
## LR(1) items:
separated_nonempty_list(PARALLEL,sel_tac) -> selector COLON tac . [ RBRACKET ]
separated_nonempty_list(PARALLEL,sel_tac) -> selector COLON tac . PARALLEL separated_nonempty_list(PARALLEL,sel_tac) [ RBRACKET ]
tac -> tac . SEMICOLON tac [ SEMICOLON RBRACKET PLUS PARALLEL DARROW ]
tac -> tac . SEMICOLON LBRACKET sel_tacs RBRACKET [ SEMICOLON RBRACKET PLUS PARALLEL DARROW ]
tac -> tac . SEMICOLON selector COLON tac [ SEMICOLON RBRACKET PLUS PARALLEL DARROW ]
tac -> tac . PLUS tac [ SEMICOLON RBRACKET PLUS PARALLEL DARROW ]
tac -> tac . DARROW intro_pat_list [ SEMICOLON RBRACKET PLUS PARALLEL DARROW ]
## Transitions:
-- On SEMICOLON shift to state 422
-- On PLUS shift to state 430
-- On PARALLEL shift to state 432
-- On DARROW shift to state 437
## Reductions:
-- On RBRACKET
--   reduce production separated_nonempty_list(PARALLEL,sel_tac) -> selector COLON tac

State 430:
## Known stack suffix:
## tac PLUS
## LR(1) items:
tac -> tac PLUS . tac [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
-- On USE shift to state 292
-- On TRY shift to state 329
-- On RIGHT shift to state 330
-- On REWRITE shift to state 331
-- On REVERT shift to state 356
-- On REPEAT shift to state 360
-- On NOSIMPL shift to state 361
-- On LPAREN shift to state 362
-- On LEFT shift to state 363
-- On INTRO shift to state 364
-- On ID shift to state 372
-- On HELP shift to state 374
-- On GENERALIZE shift to state 390
-- On EXISTS shift to state 394
-- On DESTRUCT shift to state 396
-- On DEPENDS shift to state 400
-- On DDH shift to state 403
-- On CYCLE shift to state 409
-- On CLEAR shift to state 413
-- On CHECKFAIL shift to state 415
-- On BY shift to state 416
-- On ASSERT shift to state 417
-- On tac shift to state 431
## Reductions:

State 431:
## Known stack suffix:
## tac PLUS tac
## LR(1) items:
tac -> tac . SEMICOLON tac [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
tac -> tac . SEMICOLON LBRACKET sel_tacs RBRACKET [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
tac -> tac . SEMICOLON selector COLON tac [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
tac -> tac . PLUS tac [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
tac -> tac PLUS tac . [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
tac -> tac . DARROW intro_pat_list [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
-- On SEMICOLON shift to state 422
## Reductions:
-- On RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW
--   reduce production tac -> tac PLUS tac

State 432:
## Known stack suffix:
## selector COLON tac PARALLEL
## LR(1) items:
separated_nonempty_list(PARALLEL,sel_tac) -> selector COLON tac PARALLEL . separated_nonempty_list(PARALLEL,sel_tac) [ RBRACKET ]
## Transitions:
-- On INT shift to state 424
-- On separated_nonempty_list(PARALLEL,sel_tac) shift to state 433
-- On separated_nonempty_list(COMMA,int) shift to state 426
-- On selector shift to state 427
-- On int shift to state 434
## Reductions:

State 433:
## Known stack suffix:
## selector COLON tac PARALLEL separated_nonempty_list(PARALLEL,sel_tac)
## LR(1) items:
separated_nonempty_list(PARALLEL,sel_tac) -> selector COLON tac PARALLEL separated_nonempty_list(PARALLEL,sel_tac) . [ RBRACKET ]
## Transitions:
## Reductions:
-- On RBRACKET
--   reduce production separated_nonempty_list(PARALLEL,sel_tac) -> selector COLON tac PARALLEL separated_nonempty_list(PARALLEL,sel_tac)

State 434:
## Known stack suffix:
## int
## LR(1) items:
separated_nonempty_list(COMMA,int) -> int . [ COLON ]
separated_nonempty_list(COMMA,int) -> int . COMMA separated_nonempty_list(COMMA,int) [ COLON ]
## Transitions:
-- On COMMA shift to state 435
## Reductions:
-- On COLON
--   reduce production separated_nonempty_list(COMMA,int) -> int

State 435:
## Known stack suffix:
## int COMMA
## LR(1) items:
separated_nonempty_list(COMMA,int) -> int COMMA . separated_nonempty_list(COMMA,int) [ COLON ]
## Transitions:
-- On INT shift to state 424
-- On separated_nonempty_list(COMMA,int) shift to state 436
-- On int shift to state 434
## Reductions:

State 436:
## Known stack suffix:
## int COMMA separated_nonempty_list(COMMA,int)
## LR(1) items:
separated_nonempty_list(COMMA,int) -> int COMMA separated_nonempty_list(COMMA,int) . [ COLON ]
## Transitions:
## Reductions:
-- On COLON
--   reduce production separated_nonempty_list(COMMA,int) -> int COMMA separated_nonempty_list(COMMA,int)

State 437:
## Known stack suffix:
## tac DARROW
## LR(1) items:
tac -> tac DARROW . intro_pat_list [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
-- On UNDERSCORE shift to state 299
-- On STAR shift to state 365
-- On SLASHSLASH shift to state 332
-- On SLASHEQUAL shift to state 333
-- On QMARK shift to state 300
-- On LBRACKET shift to state 301
-- On ID shift to state 303
-- On simpl_pat shift to state 366
-- On separated_nonempty_list(empty,intro_pat) shift to state 367
-- On s_item shift to state 368
-- On naming_pat shift to state 309
-- On intro_pat_list shift to state 438
-- On intro_pat shift to state 370
-- On and_or_pat shift to state 310
## Reductions:

State 438:
## Known stack suffix:
## tac DARROW intro_pat_list
## LR(1) items:
tac -> tac DARROW intro_pat_list . [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW
--   reduce production tac -> tac DARROW intro_pat_list

State 439:
## Known stack suffix:
## tac SEMICOLON LBRACKET sel_tacs
## LR(1) items:
tac -> tac SEMICOLON LBRACKET sel_tacs . RBRACKET [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
-- On RBRACKET shift to state 440
## Reductions:

State 440:
## Known stack suffix:
## tac SEMICOLON LBRACKET sel_tacs RBRACKET
## LR(1) items:
tac -> tac SEMICOLON LBRACKET sel_tacs RBRACKET . [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW
--   reduce production tac -> tac SEMICOLON LBRACKET sel_tacs RBRACKET

State 441:
## Known stack suffix:
## tac SEMICOLON tac
## LR(1) items:
tac -> tac . SEMICOLON tac [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
tac -> tac SEMICOLON tac . [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
tac -> tac . SEMICOLON LBRACKET sel_tacs RBRACKET [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
tac -> tac . SEMICOLON selector COLON tac [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
tac -> tac . PLUS tac [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
tac -> tac . DARROW intro_pat_list [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
-- On SEMICOLON shift to state 422
## Reductions:
-- On RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW
--   reduce production tac -> tac SEMICOLON tac

State 442:
## Known stack suffix:
## tac SEMICOLON selector
## LR(1) items:
tac -> tac SEMICOLON selector . COLON tac [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
-- On COLON shift to state 443
## Reductions:

State 443:
## Known stack suffix:
## tac SEMICOLON selector COLON
## LR(1) items:
tac -> tac SEMICOLON selector COLON . tac [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
-- On USE shift to state 292
-- On TRY shift to state 329
-- On RIGHT shift to state 330
-- On REWRITE shift to state 331
-- On REVERT shift to state 356
-- On REPEAT shift to state 360
-- On NOSIMPL shift to state 361
-- On LPAREN shift to state 362
-- On LEFT shift to state 363
-- On INTRO shift to state 364
-- On ID shift to state 372
-- On HELP shift to state 374
-- On GENERALIZE shift to state 390
-- On EXISTS shift to state 394
-- On DESTRUCT shift to state 396
-- On DEPENDS shift to state 400
-- On DDH shift to state 403
-- On CYCLE shift to state 409
-- On CLEAR shift to state 413
-- On CHECKFAIL shift to state 415
-- On BY shift to state 416
-- On ASSERT shift to state 417
-- On tac shift to state 444
## Reductions:

State 444:
## Known stack suffix:
## tac SEMICOLON selector COLON tac
## LR(1) items:
tac -> tac . SEMICOLON tac [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
tac -> tac . SEMICOLON LBRACKET sel_tacs RBRACKET [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
tac -> tac . SEMICOLON selector COLON tac [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
tac -> tac SEMICOLON selector COLON tac . [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
tac -> tac . PLUS tac [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
tac -> tac . DARROW intro_pat_list [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
-- On SEMICOLON shift to state 422
-- On PLUS shift to state 430
## Reductions:
-- On RPAREN RBRACKET PARALLEL EXN DOT DARROW
--   reduce production tac -> tac SEMICOLON selector COLON tac

State 445:
## Known stack suffix:
## CHECKFAIL tac
## LR(1) items:
tac -> tac . SEMICOLON tac [ SEMICOLON PLUS EXN DARROW ]
tac -> tac . SEMICOLON LBRACKET sel_tacs RBRACKET [ SEMICOLON PLUS EXN DARROW ]
tac -> tac . SEMICOLON selector COLON tac [ SEMICOLON PLUS EXN DARROW ]
tac -> tac . PLUS tac [ SEMICOLON PLUS EXN DARROW ]
tac -> tac . DARROW intro_pat_list [ SEMICOLON PLUS EXN DARROW ]
tac -> CHECKFAIL tac . EXN tac_errors [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
-- On SEMICOLON shift to state 422
-- On PLUS shift to state 430
-- On EXN shift to state 446
-- On DARROW shift to state 437
## Reductions:

State 446:
## Known stack suffix:
## CHECKFAIL tac EXN
## LR(1) items:
tac -> CHECKFAIL tac EXN . tac_errors [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
-- On ID shift to state 447
-- On tac_errors shift to state 450
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW
--   reduce production tac_errors ->

State 447:
## Known stack suffix:
## ID
## LR(1) items:
tac_errors -> ID . [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
tac_errors -> ID . COMMA tac_errors [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
-- On COMMA shift to state 448
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW
--   reduce production tac_errors -> ID

State 448:
## Known stack suffix:
## ID COMMA
## LR(1) items:
tac_errors -> ID COMMA . tac_errors [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
-- On ID shift to state 447
-- On tac_errors shift to state 449
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW
--   reduce production tac_errors ->

State 449:
## Known stack suffix:
## ID COMMA tac_errors
## LR(1) items:
tac_errors -> ID COMMA tac_errors . [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW
--   reduce production tac_errors -> ID COMMA tac_errors

State 450:
## Known stack suffix:
## CHECKFAIL tac EXN tac_errors
## LR(1) items:
tac -> CHECKFAIL tac EXN tac_errors . [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW
--   reduce production tac -> CHECKFAIL tac EXN tac_errors

State 451:
## Known stack suffix:
## DEPENDS tactic_params BY tac
## LR(1) items:
tac -> tac . SEMICOLON tac [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
tac -> tac . SEMICOLON LBRACKET sel_tacs RBRACKET [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
tac -> tac . SEMICOLON selector COLON tac [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
tac -> tac . PLUS tac [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
tac -> tac . DARROW intro_pat_list [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
tac -> DEPENDS tactic_params BY tac . [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW
--   reduce production tac -> DEPENDS tactic_params BY tac

State 452:
## Known stack suffix:
## LPAREN tac
## LR(1) items:
tac -> LPAREN tac . RPAREN [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
tac -> tac . SEMICOLON tac [ SEMICOLON RPAREN PLUS DARROW ]
tac -> tac . SEMICOLON LBRACKET sel_tacs RBRACKET [ SEMICOLON RPAREN PLUS DARROW ]
tac -> tac . SEMICOLON selector COLON tac [ SEMICOLON RPAREN PLUS DARROW ]
tac -> tac . PLUS tac [ SEMICOLON RPAREN PLUS DARROW ]
tac -> tac . DARROW intro_pat_list [ SEMICOLON RPAREN PLUS DARROW ]
## Transitions:
-- On SEMICOLON shift to state 422
-- On RPAREN shift to state 453
-- On PLUS shift to state 430
-- On DARROW shift to state 437
## Reductions:

State 453:
## Known stack suffix:
## LPAREN tac RPAREN
## LR(1) items:
tac -> LPAREN tac RPAREN . [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW
--   reduce production tac -> LPAREN tac RPAREN

State 454:
## Known stack suffix:
## NOSIMPL tac
## LR(1) items:
tac -> tac . SEMICOLON tac [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
tac -> tac . SEMICOLON LBRACKET sel_tacs RBRACKET [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
tac -> tac . SEMICOLON selector COLON tac [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
tac -> tac . PLUS tac [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
tac -> tac . DARROW intro_pat_list [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
tac -> NOSIMPL tac . [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW
--   reduce production tac -> NOSIMPL tac

State 455:
## Known stack suffix:
## REPEAT tac
## LR(1) items:
tac -> tac . SEMICOLON tac [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
tac -> tac . SEMICOLON LBRACKET sel_tacs RBRACKET [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
tac -> tac . SEMICOLON selector COLON tac [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
tac -> tac . PLUS tac [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
tac -> REPEAT tac . [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
tac -> tac . DARROW intro_pat_list [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW
--   reduce production tac -> REPEAT tac

State 456:
## Known stack suffix:
## TRY tac
## LR(1) items:
tac -> tac . SEMICOLON tac [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
tac -> tac . SEMICOLON LBRACKET sel_tacs RBRACKET [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
tac -> tac . SEMICOLON selector COLON tac [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
tac -> tac . PLUS tac [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
tac -> TRY tac . [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
tac -> tac . DARROW intro_pat_list [ SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW ]
## Transitions:
## Reductions:
-- On SEMICOLON RPAREN RBRACKET PLUS PARALLEL EXN DOT DARROW
--   reduce production tac -> TRY tac

State 457:
## Known stack suffix:
## SET
## LR(1) items:
set_option -> SET . ID EQ option_param DOT [ # ]
## Transitions:
-- On ID shift to state 458
## Reductions:

State 458:
## Known stack suffix:
## SET ID
## LR(1) items:
set_option -> SET ID . EQ option_param DOT [ # ]
## Transitions:
-- On EQ shift to state 459
## Reductions:

State 459:
## Known stack suffix:
## SET ID EQ
## LR(1) items:
set_option -> SET ID EQ . option_param DOT [ # ]
## Transitions:
-- On TRUE shift to state 460
-- On INT shift to state 461
-- On ID shift to state 462
-- On FALSE shift to state 463
-- On option_param shift to state 464
## Reductions:

State 460:
## Known stack suffix:
## TRUE
## LR(1) items:
option_param -> TRUE . [ DOT ]
## Transitions:
## Reductions:
-- On DOT
--   reduce production option_param -> TRUE

State 461:
## Known stack suffix:
## INT
## LR(1) items:
option_param -> INT . [ DOT ]
## Transitions:
## Reductions:
-- On DOT
--   reduce production option_param -> INT

State 462:
## Known stack suffix:
## ID
## LR(1) items:
option_param -> ID . [ DOT ]
## Transitions:
## Reductions:
-- On DOT
--   reduce production option_param -> ID

State 463:
## Known stack suffix:
## FALSE
## LR(1) items:
option_param -> FALSE . [ DOT ]
## Transitions:
## Reductions:
-- On DOT
--   reduce production option_param -> FALSE

State 464:
## Known stack suffix:
## SET ID EQ option_param
## LR(1) items:
set_option -> SET ID EQ option_param . DOT [ # ]
## Transitions:
-- On DOT shift to state 465
## Reductions:

State 465:
## Known stack suffix:
## SET ID EQ option_param DOT
## LR(1) items:
set_option -> SET ID EQ option_param DOT . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production set_option -> SET ID EQ option_param DOT

State 466:
## Known stack suffix:
## QED
## LR(1) items:
qed -> QED . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production qed -> QED

State 467:
## Known stack suffix:
## PROOF
## LR(1) items:
goal_i -> PROOF . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production goal_i -> PROOF

State 468:
## Known stack suffix:
## GOAL
## LR(1) items:
goal_i -> GOAL . system gname args COLON term DOT [ # ]
## Transitions:
-- On LBRACKET shift to state 469
-- On system shift to state 484
## Reductions:
-- On UNDERSCORE ID
--   reduce production system ->

State 469:
## Known stack suffix:
## LBRACKET
## LR(1) items:
system -> LBRACKET . LEFT RBRACKET [ UNDERSCORE ID ]
system -> LBRACKET . RIGHT RBRACKET [ UNDERSCORE ID ]
system -> LBRACKET . NONE COMMA lsymb RBRACKET [ UNDERSCORE ID ]
system -> LBRACKET . LEFT COMMA lsymb RBRACKET [ UNDERSCORE ID ]
system -> LBRACKET . RIGHT COMMA lsymb RBRACKET [ UNDERSCORE ID ]
## Transitions:
-- On RIGHT shift to state 470
-- On NONE shift to state 475
-- On LEFT shift to state 479
## Reductions:

State 470:
## Known stack suffix:
## LBRACKET RIGHT
## LR(1) items:
system -> LBRACKET RIGHT . RBRACKET [ UNDERSCORE ID ]
system -> LBRACKET RIGHT . COMMA lsymb RBRACKET [ UNDERSCORE ID ]
## Transitions:
-- On RBRACKET shift to state 471
-- On COMMA shift to state 472
## Reductions:

State 471:
## Known stack suffix:
## LBRACKET RIGHT RBRACKET
## LR(1) items:
system -> LBRACKET RIGHT RBRACKET . [ UNDERSCORE ID ]
## Transitions:
## Reductions:
-- On UNDERSCORE ID
--   reduce production system -> LBRACKET RIGHT RBRACKET

State 472:
## Known stack suffix:
## LBRACKET RIGHT COMMA
## LR(1) items:
system -> LBRACKET RIGHT COMMA . lsymb RBRACKET [ UNDERSCORE ID ]
## Transitions:
-- On ID shift to state 2
-- On lsymb shift to state 473
## Reductions:

State 473:
## Known stack suffix:
## LBRACKET RIGHT COMMA lsymb
## LR(1) items:
system -> LBRACKET RIGHT COMMA lsymb . RBRACKET [ UNDERSCORE ID ]
## Transitions:
-- On RBRACKET shift to state 474
## Reductions:

State 474:
## Known stack suffix:
## LBRACKET RIGHT COMMA lsymb RBRACKET
## LR(1) items:
system -> LBRACKET RIGHT COMMA lsymb RBRACKET . [ UNDERSCORE ID ]
## Transitions:
## Reductions:
-- On UNDERSCORE ID
--   reduce production system -> LBRACKET RIGHT COMMA lsymb RBRACKET

State 475:
## Known stack suffix:
## LBRACKET NONE
## LR(1) items:
system -> LBRACKET NONE . COMMA lsymb RBRACKET [ UNDERSCORE ID ]
## Transitions:
-- On COMMA shift to state 476
## Reductions:

State 476:
## Known stack suffix:
## LBRACKET NONE COMMA
## LR(1) items:
system -> LBRACKET NONE COMMA . lsymb RBRACKET [ UNDERSCORE ID ]
## Transitions:
-- On ID shift to state 2
-- On lsymb shift to state 477
## Reductions:

State 477:
## Known stack suffix:
## LBRACKET NONE COMMA lsymb
## LR(1) items:
system -> LBRACKET NONE COMMA lsymb . RBRACKET [ UNDERSCORE ID ]
## Transitions:
-- On RBRACKET shift to state 478
## Reductions:

State 478:
## Known stack suffix:
## LBRACKET NONE COMMA lsymb RBRACKET
## LR(1) items:
system -> LBRACKET NONE COMMA lsymb RBRACKET . [ UNDERSCORE ID ]
## Transitions:
## Reductions:
-- On UNDERSCORE ID
--   reduce production system -> LBRACKET NONE COMMA lsymb RBRACKET

State 479:
## Known stack suffix:
## LBRACKET LEFT
## LR(1) items:
system -> LBRACKET LEFT . RBRACKET [ UNDERSCORE ID ]
system -> LBRACKET LEFT . COMMA lsymb RBRACKET [ UNDERSCORE ID ]
## Transitions:
-- On RBRACKET shift to state 480
-- On COMMA shift to state 481
## Reductions:

State 480:
## Known stack suffix:
## LBRACKET LEFT RBRACKET
## LR(1) items:
system -> LBRACKET LEFT RBRACKET . [ UNDERSCORE ID ]
## Transitions:
## Reductions:
-- On UNDERSCORE ID
--   reduce production system -> LBRACKET LEFT RBRACKET

State 481:
## Known stack suffix:
## LBRACKET LEFT COMMA
## LR(1) items:
system -> LBRACKET LEFT COMMA . lsymb RBRACKET [ UNDERSCORE ID ]
## Transitions:
-- On ID shift to state 2
-- On lsymb shift to state 482
## Reductions:

State 482:
## Known stack suffix:
## LBRACKET LEFT COMMA lsymb
## LR(1) items:
system -> LBRACKET LEFT COMMA lsymb . RBRACKET [ UNDERSCORE ID ]
## Transitions:
-- On RBRACKET shift to state 483
## Reductions:

State 483:
## Known stack suffix:
## LBRACKET LEFT COMMA lsymb RBRACKET
## LR(1) items:
system -> LBRACKET LEFT COMMA lsymb RBRACKET . [ UNDERSCORE ID ]
## Transitions:
## Reductions:
-- On UNDERSCORE ID
--   reduce production system -> LBRACKET LEFT COMMA lsymb RBRACKET

State 484:
## Known stack suffix:
## GOAL system
## LR(1) items:
goal_i -> GOAL system . gname args COLON term DOT [ # ]
## Transitions:
-- On UNDERSCORE shift to state 485
-- On ID shift to state 2
-- On lsymb shift to state 486
-- On gname shift to state 487
## Reductions:

State 485:
## Known stack suffix:
## UNDERSCORE
## LR(1) items:
gname -> UNDERSCORE . [ LPAREN DOT COLON ]
## Transitions:
## Reductions:
-- On LPAREN DOT COLON
--   reduce production gname -> UNDERSCORE

State 486:
## Known stack suffix:
## lsymb
## LR(1) items:
gname -> lsymb . [ LPAREN DOT COLON ]
## Transitions:
## Reductions:
-- On LPAREN DOT COLON
--   reduce production gname -> lsymb

State 487:
## Known stack suffix:
## GOAL system gname
## LR(1) items:
goal_i -> GOAL system gname . args COLON term DOT [ # ]
## Transitions:
-- On LPAREN shift to state 488
-- On args shift to state 492
## Reductions:
-- On COLON
--   reduce production args ->

State 488:
## Known stack suffix:
## LPAREN
## LR(1) items:
args -> LPAREN . arg_list RPAREN args [ COLON ]
## Transitions:
-- On ID shift to state 2
-- On lsymb shift to state 5
-- On ids shift to state 8
-- On arg_list shift to state 489
## Reductions:
-- On RPAREN
--   reduce production arg_list ->

State 489:
## Known stack suffix:
## LPAREN arg_list
## LR(1) items:
args -> LPAREN arg_list . RPAREN args [ COLON ]
## Transitions:
-- On RPAREN shift to state 490
## Reductions:

State 490:
## Known stack suffix:
## LPAREN arg_list RPAREN
## LR(1) items:
args -> LPAREN arg_list RPAREN . args [ COLON ]
## Transitions:
-- On LPAREN shift to state 488
-- On args shift to state 491
## Reductions:
-- On COLON
--   reduce production args ->

State 491:
## Known stack suffix:
## LPAREN arg_list RPAREN args
## LR(1) items:
args -> LPAREN arg_list RPAREN args . [ COLON ]
## Transitions:
## Reductions:
-- On COLON
--   reduce production args -> LPAREN arg_list RPAREN args

State 492:
## Known stack suffix:
## GOAL system gname args
## LR(1) items:
goal_i -> GOAL system gname args . COLON term DOT [ # ]
## Transitions:
-- On COLON shift to state 493
## Reductions:

State 493:
## Known stack suffix:
## GOAL system gname args COLON
## LR(1) items:
goal_i -> GOAL system gname args COLON . term DOT [ # ]
## Transitions:
-- On TRUE shift to state 25
-- On SEQ shift to state 26
-- On PRED shift to state 30
-- On NOT shift to state 32
-- On LPAREN shift to state 33
-- On LANGLE shift to state 34
-- On INIT shift to state 35
-- On IF shift to state 36
-- On ID shift to state 2
-- On HAPPENS shift to state 37
-- On FORALL shift to state 39
-- On FIND shift to state 45
-- On FALSE shift to state 51
-- On EXISTS shift to state 52
-- On DIFF shift to state 57
-- On term_i shift to state 59
-- On term shift to state 494
-- On sterm_i shift to state 65
-- On lsymb shift to state 66
## Reductions:

State 494:
## Known stack suffix:
## GOAL system gname args COLON term
## LR(1) items:
goal_i -> GOAL system gname args COLON term . DOT [ # ]
term_i -> term . XOR term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DOT DEQUIVARROW DARROW AND ]
term_i -> term . EXP term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DOT DEQUIVARROW DARROW AND ]
term_i -> term . AND term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DOT DEQUIVARROW DARROW AND ]
term_i -> term . OR term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DOT DEQUIVARROW DARROW AND ]
term_i -> term . DARROW term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DOT DEQUIVARROW DARROW AND ]
term_i -> term . EQ term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DOT DEQUIVARROW DARROW AND ]
term_i -> term . NEQ term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DOT DEQUIVARROW DARROW AND ]
term_i -> term . LEQ term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DOT DEQUIVARROW DARROW AND ]
term_i -> term . LANGLE term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DOT DEQUIVARROW DARROW AND ]
term_i -> term . GEQ term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DOT DEQUIVARROW DARROW AND ]
term_i -> term . RANGLE term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DOT DEQUIVARROW DARROW AND ]
term_i -> term . DEQUIVARROW term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DOT DEQUIVARROW DARROW AND ]
## Transitions:
-- On XOR shift to state 61
-- On RANGLE shift to state 69
-- On OR shift to state 71
-- On NEQ shift to state 73
-- On LEQ shift to state 75
-- On LANGLE shift to state 77
-- On GEQ shift to state 79
-- On EXP shift to state 63
-- On EQ shift to state 81
-- On DOT shift to state 495
-- On DEQUIVARROW shift to state 85
-- On DARROW shift to state 87
-- On AND shift to state 83
## Reductions:

State 495:
## Known stack suffix:
## GOAL system gname args COLON term DOT
## LR(1) items:
goal_i -> GOAL system gname args COLON term DOT . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production goal_i -> GOAL system gname args COLON term DOT

State 496:
## Known stack suffix:
## EQUIV
## LR(1) items:
goal_i -> EQUIV . gname args COLON equiv_form DOT [ # ]
goal_i -> EQUIV . gname DOT [ # ]
goal_i -> EQUIV . single_system single_system gname DOT [ # ]
## Transitions:
-- On UNDERSCORE shift to state 485
-- On LBRACKET shift to state 497
-- On ID shift to state 2
-- On single_system shift to state 508
-- On lsymb shift to state 486
-- On gname shift to state 512
## Reductions:

State 497:
## Known stack suffix:
## LBRACKET
## LR(1) items:
single_system -> LBRACKET . LEFT RBRACKET [ UNDERSCORE LBRACKET ID ]
single_system -> LBRACKET . RIGHT RBRACKET [ UNDERSCORE LBRACKET ID ]
single_system -> LBRACKET . LEFT COMMA lsymb RBRACKET [ UNDERSCORE LBRACKET ID ]
single_system -> LBRACKET . RIGHT COMMA lsymb RBRACKET [ UNDERSCORE LBRACKET ID ]
## Transitions:
-- On RIGHT shift to state 498
-- On LEFT shift to state 503
## Reductions:

State 498:
## Known stack suffix:
## LBRACKET RIGHT
## LR(1) items:
single_system -> LBRACKET RIGHT . RBRACKET [ UNDERSCORE LBRACKET ID ]
single_system -> LBRACKET RIGHT . COMMA lsymb RBRACKET [ UNDERSCORE LBRACKET ID ]
## Transitions:
-- On RBRACKET shift to state 499
-- On COMMA shift to state 500
## Reductions:

State 499:
## Known stack suffix:
## LBRACKET RIGHT RBRACKET
## LR(1) items:
single_system -> LBRACKET RIGHT RBRACKET . [ UNDERSCORE LBRACKET ID ]
## Transitions:
## Reductions:
-- On UNDERSCORE LBRACKET ID
--   reduce production single_system -> LBRACKET RIGHT RBRACKET

State 500:
## Known stack suffix:
## LBRACKET RIGHT COMMA
## LR(1) items:
single_system -> LBRACKET RIGHT COMMA . lsymb RBRACKET [ UNDERSCORE LBRACKET ID ]
## Transitions:
-- On ID shift to state 2
-- On lsymb shift to state 501
## Reductions:

State 501:
## Known stack suffix:
## LBRACKET RIGHT COMMA lsymb
## LR(1) items:
single_system -> LBRACKET RIGHT COMMA lsymb . RBRACKET [ UNDERSCORE LBRACKET ID ]
## Transitions:
-- On RBRACKET shift to state 502
## Reductions:

State 502:
## Known stack suffix:
## LBRACKET RIGHT COMMA lsymb RBRACKET
## LR(1) items:
single_system -> LBRACKET RIGHT COMMA lsymb RBRACKET . [ UNDERSCORE LBRACKET ID ]
## Transitions:
## Reductions:
-- On UNDERSCORE LBRACKET ID
--   reduce production single_system -> LBRACKET RIGHT COMMA lsymb RBRACKET

State 503:
## Known stack suffix:
## LBRACKET LEFT
## LR(1) items:
single_system -> LBRACKET LEFT . RBRACKET [ UNDERSCORE LBRACKET ID ]
single_system -> LBRACKET LEFT . COMMA lsymb RBRACKET [ UNDERSCORE LBRACKET ID ]
## Transitions:
-- On RBRACKET shift to state 504
-- On COMMA shift to state 505
## Reductions:

State 504:
## Known stack suffix:
## LBRACKET LEFT RBRACKET
## LR(1) items:
single_system -> LBRACKET LEFT RBRACKET . [ UNDERSCORE LBRACKET ID ]
## Transitions:
## Reductions:
-- On UNDERSCORE LBRACKET ID
--   reduce production single_system -> LBRACKET LEFT RBRACKET

State 505:
## Known stack suffix:
## LBRACKET LEFT COMMA
## LR(1) items:
single_system -> LBRACKET LEFT COMMA . lsymb RBRACKET [ UNDERSCORE LBRACKET ID ]
## Transitions:
-- On ID shift to state 2
-- On lsymb shift to state 506
## Reductions:

State 506:
## Known stack suffix:
## LBRACKET LEFT COMMA lsymb
## LR(1) items:
single_system -> LBRACKET LEFT COMMA lsymb . RBRACKET [ UNDERSCORE LBRACKET ID ]
## Transitions:
-- On RBRACKET shift to state 507
## Reductions:

State 507:
## Known stack suffix:
## LBRACKET LEFT COMMA lsymb RBRACKET
## LR(1) items:
single_system -> LBRACKET LEFT COMMA lsymb RBRACKET . [ UNDERSCORE LBRACKET ID ]
## Transitions:
## Reductions:
-- On UNDERSCORE LBRACKET ID
--   reduce production single_system -> LBRACKET LEFT COMMA lsymb RBRACKET

State 508:
## Known stack suffix:
## EQUIV single_system
## LR(1) items:
goal_i -> EQUIV single_system . single_system gname DOT [ # ]
## Transitions:
-- On LBRACKET shift to state 497
-- On single_system shift to state 509
## Reductions:

State 509:
## Known stack suffix:
## EQUIV single_system single_system
## LR(1) items:
goal_i -> EQUIV single_system single_system . gname DOT [ # ]
## Transitions:
-- On UNDERSCORE shift to state 485
-- On ID shift to state 2
-- On lsymb shift to state 486
-- On gname shift to state 510
## Reductions:

State 510:
## Known stack suffix:
## EQUIV single_system single_system gname
## LR(1) items:
goal_i -> EQUIV single_system single_system gname . DOT [ # ]
## Transitions:
-- On DOT shift to state 511
## Reductions:

State 511:
## Known stack suffix:
## EQUIV single_system single_system gname DOT
## LR(1) items:
goal_i -> EQUIV single_system single_system gname DOT . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production goal_i -> EQUIV single_system single_system gname DOT

State 512:
## Known stack suffix:
## EQUIV gname
## LR(1) items:
goal_i -> EQUIV gname . args COLON equiv_form DOT [ # ]
goal_i -> EQUIV gname . DOT [ # ]
## Transitions:
-- On LPAREN shift to state 488
-- On DOT shift to state 513
-- On args shift to state 514
## Reductions:
-- On COLON
--   reduce production args ->

State 513:
## Known stack suffix:
## EQUIV gname DOT
## LR(1) items:
goal_i -> EQUIV gname DOT . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production goal_i -> EQUIV gname DOT

State 514:
## Known stack suffix:
## EQUIV gname args
## LR(1) items:
goal_i -> EQUIV gname args . COLON equiv_form DOT [ # ]
## Transitions:
-- On COLON shift to state 515
## Reductions:

State 515:
## Known stack suffix:
## EQUIV gname args COLON
## LR(1) items:
goal_i -> EQUIV gname args COLON . equiv_form DOT [ # ]
## Transitions:
-- On TRUE shift to state 25
-- On SEQ shift to state 26
-- On PRED shift to state 30
-- On NOT shift to state 32
-- On LPAREN shift to state 33
-- On LBRACKET shift to state 516
-- On LANGLE shift to state 34
-- On INIT shift to state 35
-- On IF shift to state 36
-- On ID shift to state 2
-- On HAPPENS shift to state 37
-- On FORALL shift to state 39
-- On FIND shift to state 45
-- On FALSE shift to state 51
-- On EXISTS shift to state 52
-- On DIFF shift to state 57
-- On term_i shift to state 59
-- On term shift to state 519
-- On sterm_i shift to state 65
-- On lsymb shift to state 66
-- On equiv_form shift to state 522
-- On equiv shift to state 526
## Reductions:

State 516:
## Known stack suffix:
## LBRACKET
## LR(1) items:
equiv_form -> LBRACKET . term RBRACKET [ DOT ARROW ]
## Transitions:
-- On TRUE shift to state 25
-- On SEQ shift to state 26
-- On PRED shift to state 30
-- On NOT shift to state 32
-- On LPAREN shift to state 33
-- On LANGLE shift to state 34
-- On INIT shift to state 35
-- On IF shift to state 36
-- On ID shift to state 2
-- On HAPPENS shift to state 37
-- On FORALL shift to state 39
-- On FIND shift to state 45
-- On FALSE shift to state 51
-- On EXISTS shift to state 52
-- On DIFF shift to state 57
-- On term_i shift to state 59
-- On term shift to state 517
-- On sterm_i shift to state 65
-- On lsymb shift to state 66
## Reductions:

State 517:
## Known stack suffix:
## LBRACKET term
## LR(1) items:
equiv_form -> LBRACKET term . RBRACKET [ DOT ARROW ]
term_i -> term . XOR term [ XOR RBRACKET RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . EXP term [ XOR RBRACKET RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . AND term [ XOR RBRACKET RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . OR term [ XOR RBRACKET RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . DARROW term [ XOR RBRACKET RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . EQ term [ XOR RBRACKET RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . NEQ term [ XOR RBRACKET RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . LEQ term [ XOR RBRACKET RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . LANGLE term [ XOR RBRACKET RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . GEQ term [ XOR RBRACKET RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . RANGLE term [ XOR RBRACKET RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
term_i -> term . DEQUIVARROW term [ XOR RBRACKET RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DEQUIVARROW DARROW AND ]
## Transitions:
-- On XOR shift to state 61
-- On RBRACKET shift to state 518
-- On RANGLE shift to state 69
-- On OR shift to state 71
-- On NEQ shift to state 73
-- On LEQ shift to state 75
-- On LANGLE shift to state 77
-- On GEQ shift to state 79
-- On EXP shift to state 63
-- On EQ shift to state 81
-- On DEQUIVARROW shift to state 85
-- On DARROW shift to state 87
-- On AND shift to state 83
## Reductions:

State 518:
## Known stack suffix:
## LBRACKET term RBRACKET
## LR(1) items:
equiv_form -> LBRACKET term RBRACKET . [ DOT ARROW ]
## Transitions:
## Reductions:
-- On DOT ARROW
--   reduce production equiv_form -> LBRACKET term RBRACKET

State 519:
## Known stack suffix:
## term
## LR(1) items:
equiv -> term . [ DOT ARROW ]
equiv -> term . COMMA equiv [ DOT ARROW ]
term_i -> term . XOR term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DOT DEQUIVARROW DARROW COMMA ARROW AND ]
term_i -> term . EXP term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DOT DEQUIVARROW DARROW COMMA ARROW AND ]
term_i -> term . AND term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DOT DEQUIVARROW DARROW COMMA ARROW AND ]
term_i -> term . OR term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DOT DEQUIVARROW DARROW COMMA ARROW AND ]
term_i -> term . DARROW term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DOT DEQUIVARROW DARROW COMMA ARROW AND ]
term_i -> term . EQ term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DOT DEQUIVARROW DARROW COMMA ARROW AND ]
term_i -> term . NEQ term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DOT DEQUIVARROW DARROW COMMA ARROW AND ]
term_i -> term . LEQ term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DOT DEQUIVARROW DARROW COMMA ARROW AND ]
term_i -> term . LANGLE term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DOT DEQUIVARROW DARROW COMMA ARROW AND ]
term_i -> term . GEQ term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DOT DEQUIVARROW DARROW COMMA ARROW AND ]
term_i -> term . RANGLE term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DOT DEQUIVARROW DARROW COMMA ARROW AND ]
term_i -> term . DEQUIVARROW term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ DOT DEQUIVARROW DARROW COMMA ARROW AND ]
## Transitions:
-- On XOR shift to state 61
-- On RANGLE shift to state 69
-- On OR shift to state 71
-- On NEQ shift to state 73
-- On LEQ shift to state 75
-- On LANGLE shift to state 77
-- On GEQ shift to state 79
-- On EXP shift to state 63
-- On EQ shift to state 81
-- On DEQUIVARROW shift to state 85
-- On DARROW shift to state 87
-- On COMMA shift to state 520
-- On AND shift to state 83
## Reductions:
-- On DOT ARROW
--   reduce production equiv -> term

State 520:
## Known stack suffix:
## term COMMA
## LR(1) items:
equiv -> term COMMA . equiv [ DOT ARROW ]
## Transitions:
-- On TRUE shift to state 25
-- On SEQ shift to state 26
-- On PRED shift to state 30
-- On NOT shift to state 32
-- On LPAREN shift to state 33
-- On LANGLE shift to state 34
-- On INIT shift to state 35
-- On IF shift to state 36
-- On ID shift to state 2
-- On HAPPENS shift to state 37
-- On FORALL shift to state 39
-- On FIND shift to state 45
-- On FALSE shift to state 51
-- On EXISTS shift to state 52
-- On DIFF shift to state 57
-- On term_i shift to state 59
-- On term shift to state 519
-- On sterm_i shift to state 65
-- On lsymb shift to state 66
-- On equiv shift to state 521
## Reductions:

State 521:
## Known stack suffix:
## term COMMA equiv
## LR(1) items:
equiv -> term COMMA equiv . [ DOT ARROW ]
## Transitions:
## Reductions:
-- On DOT ARROW
--   reduce production equiv -> term COMMA equiv

State 522:
## Known stack suffix:
## EQUIV gname args COLON equiv_form
## LR(1) items:
equiv_form -> equiv_form . ARROW equiv_form [ DOT ARROW ]
goal_i -> EQUIV gname args COLON equiv_form . DOT [ # ]
## Transitions:
-- On DOT shift to state 523
-- On ARROW shift to state 524
## Reductions:

State 523:
## Known stack suffix:
## EQUIV gname args COLON equiv_form DOT
## LR(1) items:
goal_i -> EQUIV gname args COLON equiv_form DOT . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production goal_i -> EQUIV gname args COLON equiv_form DOT

State 524:
## Known stack suffix:
## equiv_form ARROW
## LR(1) items:
equiv_form -> equiv_form ARROW . equiv_form [ DOT ARROW ]
## Transitions:
-- On TRUE shift to state 25
-- On SEQ shift to state 26
-- On PRED shift to state 30
-- On NOT shift to state 32
-- On LPAREN shift to state 33
-- On LBRACKET shift to state 516
-- On LANGLE shift to state 34
-- On INIT shift to state 35
-- On IF shift to state 36
-- On ID shift to state 2
-- On HAPPENS shift to state 37
-- On FORALL shift to state 39
-- On FIND shift to state 45
-- On FALSE shift to state 51
-- On EXISTS shift to state 52
-- On DIFF shift to state 57
-- On term_i shift to state 59
-- On term shift to state 519
-- On sterm_i shift to state 65
-- On lsymb shift to state 66
-- On equiv_form shift to state 525
-- On equiv shift to state 526
## Reductions:

State 525:
## Known stack suffix:
## equiv_form ARROW equiv_form
## LR(1) items:
equiv_form -> equiv_form . ARROW equiv_form [ DOT ARROW ]
equiv_form -> equiv_form ARROW equiv_form . [ DOT ARROW ]
## Transitions:
-- On ARROW shift to state 524
## Reductions:
-- On DOT
--   reduce production equiv_form -> equiv_form ARROW equiv_form

State 526:
## Known stack suffix:
## equiv
## LR(1) items:
equiv_form -> equiv . [ DOT ARROW ]
## Transitions:
## Reductions:
-- On DOT ARROW
--   reduce production equiv_form -> equiv

State 527:
## Known stack suffix:
## EOF
## LR(1) items:
interactive -> EOF . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production interactive -> EOF

State 528:
## Known stack suffix:
## ABORT
## LR(1) items:
abort -> ABORT . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production abort -> ABORT

State 529:
## Known stack suffix:
## undo
## LR(1) items:
interactive -> undo . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production interactive -> undo

State 530:
## Known stack suffix:
## tactic
## LR(1) items:
interactive -> tactic . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production interactive -> tactic

State 531:
## Known stack suffix:
## tac
## LR(1) items:
tac -> tac . SEMICOLON tac [ SEMICOLON PLUS DOT DARROW ]
tac -> tac . SEMICOLON LBRACKET sel_tacs RBRACKET [ SEMICOLON PLUS DOT DARROW ]
tac -> tac . SEMICOLON selector COLON tac [ SEMICOLON PLUS DOT DARROW ]
tac -> tac . PLUS tac [ SEMICOLON PLUS DOT DARROW ]
tac -> tac . DARROW intro_pat_list [ SEMICOLON PLUS DOT DARROW ]
tactic -> tac . DOT [ # ]
## Transitions:
-- On SEMICOLON shift to state 422
-- On PLUS shift to state 430
-- On DOT shift to state 532
-- On DARROW shift to state 437
## Reductions:

State 532:
## Known stack suffix:
## tac DOT
## LR(1) items:
tactic -> tac DOT . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production tactic -> tac DOT

State 533:
## Known stack suffix:
## set_option
## LR(1) items:
interactive -> set_option . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production interactive -> set_option

State 534:
## Known stack suffix:
## qed
## LR(1) items:
interactive -> qed . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production interactive -> qed

State 535:
## Known stack suffix:
## interactive
## LR(1) items:
interactive' -> interactive . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept interactive

State 536:
## Known stack suffix:
## goal_i
## LR(1) items:
goal -> goal_i . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production goal -> goal_i

State 537:
## Known stack suffix:
## goal
## LR(1) items:
interactive -> goal . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production interactive -> goal

State 538:
## Known stack suffix:
## declarations
## LR(1) items:
interactive -> declarations . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production interactive -> declarations

State 539:
## Known stack suffix:
## abort
## LR(1) items:
interactive -> abort . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production interactive -> abort

State 540:
## Known stack suffix:
##
## LR(1) items:
top_formula' -> . top_formula [ # ]
## Transitions:
-- On TRUE shift to state 25
-- On SEQ shift to state 26
-- On PRED shift to state 30
-- On NOT shift to state 32
-- On LPAREN shift to state 33
-- On LANGLE shift to state 34
-- On INIT shift to state 35
-- On IF shift to state 36
-- On ID shift to state 2
-- On HAPPENS shift to state 37
-- On FORALL shift to state 39
-- On FIND shift to state 45
-- On FALSE shift to state 51
-- On EXISTS shift to state 52
-- On DIFF shift to state 57
-- On top_formula shift to state 541
-- On term_i shift to state 59
-- On term shift to state 542
-- On sterm_i shift to state 65
-- On lsymb shift to state 66
## Reductions:

State 541:
## Known stack suffix:
## top_formula
## LR(1) items:
top_formula' -> top_formula . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept top_formula

State 542:
## Known stack suffix:
## term
## LR(1) items:
term_i -> term . XOR term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ EOF DEQUIVARROW DARROW AND ]
term_i -> term . EXP term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ EOF DEQUIVARROW DARROW AND ]
term_i -> term . AND term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ EOF DEQUIVARROW DARROW AND ]
term_i -> term . OR term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ EOF DEQUIVARROW DARROW AND ]
term_i -> term . DARROW term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ EOF DEQUIVARROW DARROW AND ]
term_i -> term . EQ term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ EOF DEQUIVARROW DARROW AND ]
term_i -> term . NEQ term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ EOF DEQUIVARROW DARROW AND ]
term_i -> term . LEQ term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ EOF DEQUIVARROW DARROW AND ]
term_i -> term . LANGLE term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ EOF DEQUIVARROW DARROW AND ]
term_i -> term . GEQ term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ EOF DEQUIVARROW DARROW AND ]
term_i -> term . RANGLE term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ EOF DEQUIVARROW DARROW AND ]
term_i -> term . DEQUIVARROW term [ XOR RANGLE OR NEQ LEQ LANGLE GEQ EXP EQ EOF DEQUIVARROW DARROW AND ]
top_formula -> term . EOF [ # ]
## Transitions:
-- On XOR shift to state 61
-- On RANGLE shift to state 69
-- On OR shift to state 71
-- On NEQ shift to state 73
-- On LEQ shift to state 75
-- On LANGLE shift to state 77
-- On GEQ shift to state 79
-- On EXP shift to state 63
-- On EQ shift to state 81
-- On EOF shift to state 543
-- On DEQUIVARROW shift to state 85
-- On DARROW shift to state 87
-- On AND shift to state 83
## Reductions:

State 543:
## Known stack suffix:
## term EOF
## LR(1) items:
top_formula -> term EOF . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production top_formula -> term EOF

State 544:
## Known stack suffix:
##
## LR(1) items:
top_process' -> . top_process [ # ]
## Transitions:
-- On OUT shift to state 145
-- On NULL shift to state 152
-- On NEW shift to state 153
-- On LPAREN shift to state 156
-- On LET shift to state 157
-- On IN shift to state 162
-- On IF shift to state 169
-- On ID shift to state 2
-- On FIND shift to state 172
-- On BANG shift to state 177
-- On top_process shift to state 545
-- On process_i shift to state 178
-- On process shift to state 546
-- On lsymb shift to state 180
## Reductions:

State 545:
## Known stack suffix:
## top_process
## LR(1) items:
top_process' -> top_process . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept top_process

State 546:
## Known stack suffix:
## process
## LR(1) items:
top_process -> process . EOF [ # ]
## Transitions:
-- On EOF shift to state 547
## Reductions:

State 547:
## Known stack suffix:
## process EOF
## LR(1) items:
top_process -> process EOF . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production top_process -> process EOF

