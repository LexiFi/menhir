Grammar has 73 nonterminal symbols, among which 1 start symbols.
Grammar has 90 terminal symbols.
Grammar has 381 productions.
nullable(vardecl_or_statement) = false
nullable(var_decl) = false
nullable(unsized_type) = false
nullable(unsized_dims) = false
nullable(type_constraint) = true
nullable(truncation) = false
nullable(transformed_parameters_block) = false
nullable(transformed_data_block) = false
nullable(top_vardecl_or_statement) = false
nullable(top_var_type) = false
nullable(top_var_decl_no_assign) = false
nullable(top_var_decl) = false
nullable(string_literal) = false
nullable(statement) = false
nullable(sized_basic_type) = false
nullable(separated_nonempty_list(COMMA,id_and_optional_assignment(no_assign))) = false
nullable(separated_nonempty_list(COMMA,id_and_optional_assignment(expression))) = false
nullable(separated_nonempty_list(COMMA,expression)) = false
nullable(separated_nonempty_list(COMMA,arg_decl)) = false
nullable(return_type) = false
nullable(range_constraint) = true
nullable(range) = false
nullable(program) = false
nullable(printables) = false
nullable(parameters_block) = false
nullable(optional_assignment(no_assign)) = true
nullable(optional_assignment(expression)) = true
nullable(option(unsized_dims)) = true
nullable(option(truncation)) = true
nullable(option(transformed_parameters_block)) = true
nullable(option(transformed_data_block)) = true
nullable(option(parameters_block)) = true
nullable(option(pair(COMMA,expression))) = true
nullable(option(pair(ASSIGN,no_assign))) = true
nullable(option(pair(ASSIGN,expression))) = true
nullable(option(model_block)) = true
nullable(option(generated_quantities_block)) = true
nullable(option(function_block)) = true
nullable(option(expression)) = true
nullable(option(data_block)) = true
nullable(option(DATABLOCK)) = true
nullable(offset_mult) = false
nullable(non_lhs) = false
nullable(no_assign) = false
nullable(nested_statement) = false
nullable(model_block) = false
nullable(loption(separated_nonempty_list(COMMA,expression))) = true
nullable(loption(separated_nonempty_list(COMMA,arg_decl))) = true
nullable(list(vardecl_or_statement)) = true
nullable(list(top_vardecl_or_statement)) = true
nullable(list(top_var_decl_no_assign)) = true
nullable(list(function_def)) = true
nullable(list(COMMA)) = true
nullable(lhs) = false
nullable(indexes) = true
nullable(identifier) = false
nullable(id_and_optional_assignment(no_assign)) = false
nullable(id_and_optional_assignment(expression)) = false
nullable(generated_quantities_block) = false
nullable(function_def) = false
nullable(function_block) = false
nullable(dims) = false
nullable(decl_identifier) = false
nullable(decl(top_var_type,no_assign)) = false
nullable(decl(top_var_type,expression)) = false
nullable(decl(sized_basic_type,expression)) = false
nullable(data_block) = false
nullable(constr_expression) = false
nullable(common_expression) = false
nullable(basic_type) = false
nullable(atomic_statement) = false
nullable(arg_decl) = false
nullable(always(unsized_dims)) = false
first(vardecl_or_statement) = WHILE VECTOR UPPER TRUNCATE TARGET SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL PROFILE PRINT PLUS OFFSET MULTIPLIER MINUS MATRIX LPAREN LOWER LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IMAGNUMERAL IF IDENTIFIER GETLP FOR CONTINUE COMPLEX BREAK BANG ARRAY
first(var_decl) = VECTOR UPPER TRUNCATE ROWVECTOR REAL OFFSET MULTIPLIER MATRIX LOWER INT IDENTIFIER COMPLEX ARRAY
first(unsized_type) = VECTOR ROWVECTOR REAL MATRIX INT COMPLEX ARRAY
first(unsized_dims) = LBRACK
first(type_constraint) = LABRACK
first(truncation) = TRUNCATE
first(transformed_parameters_block) = TRANSFORMEDPARAMETERSBLOCK
first(transformed_data_block) = TRANSFORMEDDATABLOCK
first(top_vardecl_or_statement) = WHILE VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL PROFILE PRINT POSITIVEORDERED PLUS ORDERED OFFSET MULTIPLIER MINUS MATRIX LPAREN LOWER LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IMAGNUMERAL IF IDENTIFIER GETLP FOR COVMATRIX CORRMATRIX CONTINUE COMPLEX CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ARRAY
first(top_var_type) = VECTOR UNITVECTOR SIMPLEX ROWVECTOR REAL POSITIVEORDERED ORDERED MATRIX INT COVMATRIX CORRMATRIX COMPLEX CHOLESKYFACTORCOV CHOLESKYFACTORCORR
first(top_var_decl_no_assign) = VECTOR UPPER UNITVECTOR TRUNCATE SIMPLEX ROWVECTOR REAL POSITIVEORDERED ORDERED OFFSET MULTIPLIER MATRIX LOWER INT IDENTIFIER COVMATRIX CORRMATRIX COMPLEX CHOLESKYFACTORCOV CHOLESKYFACTORCORR ARRAY
first(top_var_decl) = VECTOR UPPER UNITVECTOR TRUNCATE SIMPLEX ROWVECTOR REAL POSITIVEORDERED ORDERED OFFSET MULTIPLIER MATRIX LOWER INT IDENTIFIER COVMATRIX CORRMATRIX COMPLEX CHOLESKYFACTORCOV CHOLESKYFACTORCORR ARRAY
first(string_literal) = STRINGLITERAL
first(statement) = WHILE UPPER TRUNCATE TARGET SEMICOLON RETURN REJECT REALNUMERAL PROFILE PRINT PLUS OFFSET MULTIPLIER MINUS LPAREN LOWER LBRACK LBRACE INTNUMERAL INCREMENTLOGPROB IMAGNUMERAL IF IDENTIFIER GETLP FOR CONTINUE BREAK BANG ARRAY
first(sized_basic_type) = VECTOR ROWVECTOR REAL MATRIX INT COMPLEX
first(separated_nonempty_list(COMMA,id_and_optional_assignment(no_assign))) = WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PROFILE PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE COMPLEX CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ARRAY
first(separated_nonempty_list(COMMA,id_and_optional_assignment(expression))) = WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PROFILE PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE COMPLEX CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ARRAY
first(separated_nonempty_list(COMMA,expression)) = UPPER TRUNCATE TARGET REALNUMERAL PLUS OFFSET MULTIPLIER MINUS LPAREN LOWER LBRACK LBRACE INTNUMERAL IMAGNUMERAL IDENTIFIER GETLP BANG ARRAY
first(separated_nonempty_list(COMMA,arg_decl)) = VECTOR ROWVECTOR REAL MATRIX INT DATABLOCK COMPLEX ARRAY
first(return_type) = VOID VECTOR ROWVECTOR REAL MATRIX INT COMPLEX ARRAY
first(range_constraint) = LABRACK
first(range) = UPPER LOWER
first(program) = TRANSFORMEDPARAMETERSBLOCK TRANSFORMEDDATABLOCK PARAMETERSBLOCK MODELBLOCK GENERATEDQUANTITIESBLOCK FUNCTIONBLOCK EOF DATABLOCK
first(printables) = UPPER TRUNCATE TARGET STRINGLITERAL REALNUMERAL PLUS OFFSET MULTIPLIER MINUS LPAREN LOWER LBRACK LBRACE INTNUMERAL IMAGNUMERAL IDENTIFIER GETLP BANG ARRAY
first(parameters_block) = PARAMETERSBLOCK
first(optional_assignment(no_assign)) = ASSIGN
first(optional_assignment(expression)) = ASSIGN
first(option(unsized_dims)) = LBRACK
first(option(truncation)) = TRUNCATE
first(option(transformed_parameters_block)) = TRANSFORMEDPARAMETERSBLOCK
first(option(transformed_data_block)) = TRANSFORMEDDATABLOCK
first(option(parameters_block)) = PARAMETERSBLOCK
first(option(pair(COMMA,expression))) = COMMA
first(option(pair(ASSIGN,no_assign))) = ASSIGN
first(option(pair(ASSIGN,expression))) = ASSIGN
first(option(model_block)) = MODELBLOCK
first(option(generated_quantities_block)) = GENERATEDQUANTITIESBLOCK
first(option(function_block)) = FUNCTIONBLOCK
first(option(expression)) = UPPER TRUNCATE TARGET REALNUMERAL PLUS OFFSET MULTIPLIER MINUS LPAREN LOWER LBRACK LBRACE INTNUMERAL IMAGNUMERAL IDENTIFIER GETLP BANG ARRAY
first(option(data_block)) = DATABLOCK
first(option(DATABLOCK)) = DATABLOCK
first(offset_mult) = OFFSET MULTIPLIER
first(non_lhs) = UPPER TRUNCATE TARGET REALNUMERAL PLUS OFFSET MULTIPLIER MINUS LPAREN LOWER LBRACK LBRACE INTNUMERAL IMAGNUMERAL IDENTIFIER GETLP BANG ARRAY
first(no_assign) = UNREACHABLE
first(nested_statement) = WHILE PROFILE LBRACE IF FOR
first(model_block) = MODELBLOCK
first(loption(separated_nonempty_list(COMMA,expression))) = UPPER TRUNCATE TARGET REALNUMERAL PLUS OFFSET MULTIPLIER MINUS LPAREN LOWER LBRACK LBRACE INTNUMERAL IMAGNUMERAL IDENTIFIER GETLP BANG ARRAY
first(loption(separated_nonempty_list(COMMA,arg_decl))) = VECTOR ROWVECTOR REAL MATRIX INT DATABLOCK COMPLEX ARRAY
first(list(vardecl_or_statement)) = WHILE VECTOR UPPER TRUNCATE TARGET SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL PROFILE PRINT PLUS OFFSET MULTIPLIER MINUS MATRIX LPAREN LOWER LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IMAGNUMERAL IF IDENTIFIER GETLP FOR CONTINUE COMPLEX BREAK BANG ARRAY
first(list(top_vardecl_or_statement)) = WHILE VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL PROFILE PRINT POSITIVEORDERED PLUS ORDERED OFFSET MULTIPLIER MINUS MATRIX LPAREN LOWER LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IMAGNUMERAL IF IDENTIFIER GETLP FOR COVMATRIX CORRMATRIX CONTINUE COMPLEX CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ARRAY
first(list(top_var_decl_no_assign)) = VECTOR UPPER UNITVECTOR TRUNCATE SIMPLEX ROWVECTOR REAL POSITIVEORDERED ORDERED OFFSET MULTIPLIER MATRIX LOWER INT IDENTIFIER COVMATRIX CORRMATRIX COMPLEX CHOLESKYFACTORCOV CHOLESKYFACTORCORR ARRAY
first(list(function_def)) = VOID VECTOR ROWVECTOR REAL MATRIX INT COMPLEX ARRAY
first(list(COMMA)) = COMMA
first(lhs) = UPPER TRUNCATE OFFSET MULTIPLIER LOWER IDENTIFIER ARRAY
first(indexes) = UPPER TRUNCATE TARGET REALNUMERAL PLUS OFFSET MULTIPLIER MINUS LPAREN LOWER LBRACK LBRACE INTNUMERAL IMAGNUMERAL IDENTIFIER GETLP COMMA COLON BANG ARRAY
first(identifier) = UPPER TRUNCATE OFFSET MULTIPLIER LOWER IDENTIFIER ARRAY
first(id_and_optional_assignment(no_assign)) = WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PROFILE PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE COMPLEX CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ARRAY
first(id_and_optional_assignment(expression)) = WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PROFILE PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE COMPLEX CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ARRAY
first(generated_quantities_block) = GENERATEDQUANTITIESBLOCK
first(function_def) = VOID VECTOR ROWVECTOR REAL MATRIX INT COMPLEX ARRAY
first(function_block) = FUNCTIONBLOCK
first(dims) = LBRACK
first(decl_identifier) = WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PROFILE PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE COMPLEX CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ARRAY
first(decl(top_var_type,no_assign)) = VECTOR UPPER UNITVECTOR TRUNCATE SIMPLEX ROWVECTOR REAL POSITIVEORDERED ORDERED OFFSET MULTIPLIER MATRIX LOWER INT IDENTIFIER COVMATRIX CORRMATRIX COMPLEX CHOLESKYFACTORCOV CHOLESKYFACTORCORR ARRAY
first(decl(top_var_type,expression)) = VECTOR UPPER UNITVECTOR TRUNCATE SIMPLEX ROWVECTOR REAL POSITIVEORDERED ORDERED OFFSET MULTIPLIER MATRIX LOWER INT IDENTIFIER COVMATRIX CORRMATRIX COMPLEX CHOLESKYFACTORCOV CHOLESKYFACTORCORR ARRAY
first(decl(sized_basic_type,expression)) = VECTOR UPPER TRUNCATE ROWVECTOR REAL OFFSET MULTIPLIER MATRIX LOWER INT IDENTIFIER COMPLEX ARRAY
first(data_block) = DATABLOCK
first(constr_expression) = UPPER TRUNCATE TARGET REALNUMERAL PLUS OFFSET MULTIPLIER MINUS LPAREN LOWER LBRACK LBRACE INTNUMERAL IMAGNUMERAL IDENTIFIER GETLP BANG ARRAY
first(common_expression) = UPPER TRUNCATE TARGET REALNUMERAL OFFSET MULTIPLIER LPAREN LOWER LBRACK LBRACE INTNUMERAL IMAGNUMERAL IDENTIFIER GETLP ARRAY
first(basic_type) = VECTOR ROWVECTOR REAL MATRIX INT COMPLEX
first(atomic_statement) = UPPER TRUNCATE TARGET SEMICOLON RETURN REJECT REALNUMERAL PRINT PLUS OFFSET MULTIPLIER MINUS LPAREN LOWER LBRACK LBRACE INTNUMERAL INCREMENTLOGPROB IMAGNUMERAL IDENTIFIER GETLP CONTINUE BREAK BANG ARRAY
first(arg_decl) = VECTOR ROWVECTOR REAL MATRIX INT DATABLOCK COMPLEX ARRAY
first(always(unsized_dims)) = LBRACK
minimal(vardecl_or_statement) = (* 1 *) SEMICOLON
minimal(var_decl) = (* 3 *) INT IDENTIFIER SEMICOLON
minimal(unsized_type) = (* 1 *) INT
minimal(unsized_dims) = (* 2 *) LBRACK RBRACK
minimal(type_constraint) = (* 0 *)
minimal(truncation) = (* 4 *) TRUNCATE LBRACK COMMA RBRACK
minimal(transformed_parameters_block) = (* 3 *) TRANSFORMEDPARAMETERSBLOCK LBRACE RBRACE
minimal(transformed_data_block) = (* 3 *) TRANSFORMEDDATABLOCK LBRACE RBRACE
minimal(top_vardecl_or_statement) = (* 1 *) SEMICOLON
minimal(top_var_type) = (* 1 *) INT
minimal(top_var_decl_no_assign) = (* 3 *) INT IDENTIFIER SEMICOLON
minimal(top_var_decl) = (* 3 *) INT IDENTIFIER SEMICOLON
minimal(string_literal) = (* 1 *) STRINGLITERAL
minimal(statement) = (* 1 *) SEMICOLON
minimal(sized_basic_type) = (* 1 *) INT
minimal(separated_nonempty_list(COMMA,id_and_optional_assignment(no_assign))) = (* 1 *) IDENTIFIER
minimal(separated_nonempty_list(COMMA,id_and_optional_assignment(expression))) = (* 1 *) IDENTIFIER
minimal(separated_nonempty_list(COMMA,expression)) = (* 1 *) IDENTIFIER
minimal(separated_nonempty_list(COMMA,arg_decl)) = (* 2 *) INT IDENTIFIER
minimal(return_type) = (* 1 *) VOID
minimal(range_constraint) = (* 0 *)
minimal(range) = (* 3 *) LOWER ASSIGN INTNUMERAL
minimal(program) = (* 1 *) EOF
minimal(printables) = (* 1 *) IDENTIFIER
minimal(parameters_block) = (* 3 *) PARAMETERSBLOCK LBRACE RBRACE
minimal(optional_assignment(no_assign)) = (* 0 *)
minimal(optional_assignment(expression)) = (* 0 *)
minimal(option(unsized_dims)) = (* 0 *)
minimal(option(truncation)) = (* 0 *)
minimal(option(transformed_parameters_block)) = (* 0 *)
minimal(option(transformed_data_block)) = (* 0 *)
minimal(option(parameters_block)) = (* 0 *)
minimal(option(pair(COMMA,expression))) = (* 0 *)
minimal(option(pair(ASSIGN,no_assign))) = (* 0 *)
minimal(option(pair(ASSIGN,expression))) = (* 0 *)
minimal(option(model_block)) = (* 0 *)
minimal(option(generated_quantities_block)) = (* 0 *)
minimal(option(function_block)) = (* 0 *)
minimal(option(expression)) = (* 0 *)
minimal(option(data_block)) = (* 0 *)
minimal(option(DATABLOCK)) = (* 0 *)
minimal(offset_mult) = (* 3 *) OFFSET ASSIGN INTNUMERAL
minimal(non_lhs) = (* 1 *) INTNUMERAL
minimal(no_assign) = (* 1 *) UNREACHABLE
minimal(nested_statement) = (* 2 *) LBRACE RBRACE
minimal(model_block) = (* 3 *) MODELBLOCK LBRACE RBRACE
minimal(loption(separated_nonempty_list(COMMA,expression))) = (* 0 *)
minimal(loption(separated_nonempty_list(COMMA,arg_decl))) = (* 0 *)
minimal(list(vardecl_or_statement)) = (* 0 *)
minimal(list(top_vardecl_or_statement)) = (* 0 *)
minimal(list(top_var_decl_no_assign)) = (* 0 *)
minimal(list(function_def)) = (* 0 *)
minimal(list(COMMA)) = (* 0 *)
minimal(lhs) = (* 1 *) IDENTIFIER
minimal(indexes) = (* 0 *)
minimal(identifier) = (* 1 *) IDENTIFIER
minimal(id_and_optional_assignment(no_assign)) = (* 1 *) IDENTIFIER
minimal(id_and_optional_assignment(expression)) = (* 1 *) IDENTIFIER
minimal(generated_quantities_block) = (* 3 *) GENERATEDQUANTITIESBLOCK LBRACE RBRACE
minimal(function_def) = (* 5 *) VOID IDENTIFIER LPAREN RPAREN SEMICOLON
minimal(function_block) = (* 3 *) FUNCTIONBLOCK LBRACE RBRACE
minimal(dims) = (* 3 *) LBRACK IDENTIFIER RBRACK
minimal(decl_identifier) = (* 1 *) IDENTIFIER
minimal(decl(top_var_type,no_assign)) = (* 3 *) INT IDENTIFIER SEMICOLON
minimal(decl(top_var_type,expression)) = (* 3 *) INT IDENTIFIER SEMICOLON
minimal(decl(sized_basic_type,expression)) = (* 3 *) INT IDENTIFIER SEMICOLON
minimal(data_block) = (* 3 *) DATABLOCK LBRACE RBRACE
minimal(constr_expression) = (* 1 *) INTNUMERAL
minimal(common_expression) = (* 1 *) INTNUMERAL
minimal(basic_type) = (* 1 *) INT
minimal(atomic_statement) = (* 1 *) SEMICOLON
minimal(arg_decl) = (* 2 *) INT IDENTIFIER
minimal(always(unsized_dims)) = (* 2 *) LBRACK RBRACK
maximal(vardecl_or_statement) = infinity
maximal(var_decl) = infinity
maximal(unsized_type) = infinity
maximal(unsized_dims) = infinity
maximal(type_constraint) = infinity
maximal(truncation) = infinity
maximal(transformed_parameters_block) = infinity
maximal(transformed_data_block) = infinity
maximal(top_vardecl_or_statement) = infinity
maximal(top_var_type) = infinity
maximal(top_var_decl_no_assign) = infinity
maximal(top_var_decl) = infinity
maximal(string_literal) = 1
maximal(statement) = infinity
maximal(sized_basic_type) = infinity
maximal(separated_nonempty_list(COMMA,id_and_optional_assignment(no_assign))) = infinity
maximal(separated_nonempty_list(COMMA,id_and_optional_assignment(expression))) = infinity
maximal(separated_nonempty_list(COMMA,expression)) = infinity
maximal(separated_nonempty_list(COMMA,arg_decl)) = infinity
maximal(return_type) = infinity
maximal(range_constraint) = infinity
maximal(range) = infinity
maximal(program) = infinity
maximal(printables) = infinity
maximal(parameters_block) = infinity
maximal(optional_assignment(no_assign)) = 2
maximal(optional_assignment(expression)) = infinity
maximal(option(unsized_dims)) = infinity
maximal(option(truncation)) = infinity
maximal(option(transformed_parameters_block)) = infinity
maximal(option(transformed_data_block)) = infinity
maximal(option(parameters_block)) = infinity
maximal(option(pair(COMMA,expression))) = infinity
maximal(option(pair(ASSIGN,no_assign))) = 2
maximal(option(pair(ASSIGN,expression))) = infinity
maximal(option(model_block)) = infinity
maximal(option(generated_quantities_block)) = infinity
maximal(option(function_block)) = infinity
maximal(option(expression)) = infinity
maximal(option(data_block)) = infinity
maximal(option(DATABLOCK)) = 1
maximal(offset_mult) = infinity
maximal(non_lhs) = infinity
maximal(no_assign) = 1
maximal(nested_statement) = infinity
maximal(model_block) = infinity
maximal(loption(separated_nonempty_list(COMMA,expression))) = infinity
maximal(loption(separated_nonempty_list(COMMA,arg_decl))) = infinity
maximal(list(vardecl_or_statement)) = infinity
maximal(list(top_vardecl_or_statement)) = infinity
maximal(list(top_var_decl_no_assign)) = infinity
maximal(list(function_def)) = infinity
maximal(list(COMMA)) = infinity
maximal(lhs) = infinity
maximal(indexes) = infinity
maximal(identifier) = 1
maximal(id_and_optional_assignment(no_assign)) = 3
maximal(id_and_optional_assignment(expression)) = infinity
maximal(generated_quantities_block) = infinity
maximal(function_def) = infinity
maximal(function_block) = infinity
maximal(dims) = infinity
maximal(decl_identifier) = 1
maximal(decl(top_var_type,no_assign)) = infinity
maximal(decl(top_var_type,expression)) = infinity
maximal(decl(sized_basic_type,expression)) = infinity
maximal(data_block) = infinity
maximal(constr_expression) = infinity
maximal(common_expression) = infinity
maximal(basic_type) = 1
maximal(atomic_statement) = infinity
maximal(arg_decl) = infinity
maximal(always(unsized_dims)) = infinity
follow(vardecl_or_statement) = WHILE VECTOR UPPER TRUNCATE TARGET SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PROFILE PRINT PLUS OFFSET MULTIPLIER MINUS MATRIX LPAREN LOWER LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IMAGNUMERAL IF IDENTIFIER GETLP FOR CONTINUE COMPLEX BREAK BANG ARRAY
follow(var_decl) = WHILE VECTOR UPPER TRUNCATE TARGET SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PROFILE PRINT PLUS OFFSET MULTIPLIER MINUS MATRIX LPAREN LOWER LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IMAGNUMERAL IF IDENTIFIER GETLP FOR CONTINUE COMPLEX BREAK BANG ARRAY
follow(unsized_type) = WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PROFILE PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE COMPLEX CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ARRAY
follow(unsized_dims) = WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PROFILE PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE COMPLEX CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ARRAY
follow(type_constraint) = WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PROFILE PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER LBRACK INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE COMPLEX CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ARRAY
follow(truncation) = SEMICOLON
follow(transformed_parameters_block) = MODELBLOCK GENERATEDQUANTITIESBLOCK EOF
follow(transformed_data_block) = TRANSFORMEDPARAMETERSBLOCK PARAMETERSBLOCK MODELBLOCK GENERATEDQUANTITIESBLOCK EOF
follow(top_vardecl_or_statement) = WHILE VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PROFILE PRINT POSITIVEORDERED PLUS ORDERED OFFSET MULTIPLIER MINUS MATRIX LPAREN LOWER LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IMAGNUMERAL IF IDENTIFIER GETLP FOR COVMATRIX CORRMATRIX CONTINUE COMPLEX CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ARRAY
follow(top_var_type) = WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PROFILE PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE COMPLEX CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ARRAY
follow(top_var_decl_no_assign) = VECTOR UPPER UNITVECTOR TRUNCATE SIMPLEX ROWVECTOR REAL RBRACE POSITIVEORDERED ORDERED OFFSET MULTIPLIER MATRIX LOWER INT IDENTIFIER COVMATRIX CORRMATRIX COMPLEX CHOLESKYFACTORCOV CHOLESKYFACTORCORR ARRAY
follow(top_var_decl) = WHILE VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PROFILE PRINT POSITIVEORDERED PLUS ORDERED OFFSET MULTIPLIER MINUS MATRIX LPAREN LOWER LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IMAGNUMERAL IF IDENTIFIER GETLP FOR COVMATRIX CORRMATRIX CONTINUE COMPLEX CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ARRAY
follow(string_literal) = RPAREN COMMA
follow(statement) = WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PROFILE PRINT POSITIVEORDERED PLUS ORDERED OFFSET MULTIPLIER MINUS MATRIX LPAREN LOWER LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IMAGNUMERAL IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE COMPLEX CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ARRAY
follow(sized_basic_type) = WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PROFILE PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE COMPLEX CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ARRAY
follow(separated_nonempty_list(COMMA,id_and_optional_assignment(no_assign))) = SEMICOLON
follow(separated_nonempty_list(COMMA,id_and_optional_assignment(expression))) = SEMICOLON
follow(separated_nonempty_list(COMMA,expression)) = RPAREN RBRACK RBRACE
follow(separated_nonempty_list(COMMA,arg_decl)) = RPAREN
follow(return_type) = WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PROFILE PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE COMPLEX CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ARRAY
follow(range_constraint) = WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PROFILE PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER LBRACK INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE COMPLEX CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ARRAY
follow(range) = RABRACK
follow(program) = #
follow(printables) = RPAREN COMMA
follow(parameters_block) = TRANSFORMEDPARAMETERSBLOCK MODELBLOCK GENERATEDQUANTITIESBLOCK EOF
follow(optional_assignment(no_assign)) = SEMICOLON COMMA
follow(optional_assignment(expression)) = SEMICOLON COMMA
follow(option(unsized_dims)) = WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PROFILE PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE COMPLEX CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ARRAY
follow(option(truncation)) = SEMICOLON
follow(option(transformed_parameters_block)) = MODELBLOCK GENERATEDQUANTITIESBLOCK EOF
follow(option(transformed_data_block)) = TRANSFORMEDPARAMETERSBLOCK PARAMETERSBLOCK MODELBLOCK GENERATEDQUANTITIESBLOCK EOF
follow(option(parameters_block)) = TRANSFORMEDPARAMETERSBLOCK MODELBLOCK GENERATEDQUANTITIESBLOCK EOF
follow(option(pair(COMMA,expression))) = RBRACK
follow(option(pair(ASSIGN,no_assign))) = SEMICOLON COMMA
follow(option(pair(ASSIGN,expression))) = SEMICOLON COMMA
follow(option(model_block)) = GENERATEDQUANTITIESBLOCK EOF
follow(option(generated_quantities_block)) = EOF
follow(option(function_block)) = TRANSFORMEDPARAMETERSBLOCK TRANSFORMEDDATABLOCK PARAMETERSBLOCK MODELBLOCK GENERATEDQUANTITIESBLOCK EOF DATABLOCK
follow(option(expression)) = RBRACK COMMA
follow(option(data_block)) = TRANSFORMEDPARAMETERSBLOCK TRANSFORMEDDATABLOCK PARAMETERSBLOCK MODELBLOCK GENERATEDQUANTITIESBLOCK EOF
follow(option(DATABLOCK)) = VECTOR ROWVECTOR REAL MATRIX INT COMPLEX ARRAY
follow(offset_mult) = RABRACK
follow(non_lhs) = TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK IDIVIDE HAT GEQ EQUALS ELTTIMES ELTPOW ELTDIVIDE DIVIDE COMMA COLON BAR AND
follow(no_assign) = SEMICOLON COMMA
follow(nested_statement) = WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PROFILE PRINT POSITIVEORDERED PLUS ORDERED OFFSET MULTIPLIER MINUS MATRIX LPAREN LOWER LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IMAGNUMERAL IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE COMPLEX CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ARRAY
follow(model_block) = GENERATEDQUANTITIESBLOCK EOF
follow(loption(separated_nonempty_list(COMMA,expression))) = RPAREN RBRACK
follow(loption(separated_nonempty_list(COMMA,arg_decl))) = RPAREN
follow(list(vardecl_or_statement)) = RBRACE
follow(list(top_vardecl_or_statement)) = RBRACE
follow(list(top_var_decl_no_assign)) = RBRACE
follow(list(function_def)) = RBRACE
follow(list(COMMA)) = RBRACK
follow(lhs) = VECTOR UNITVECTOR TRANSPOSE TIMESASSIGN TIMES TILDE SIMPLEX SEMICOLON RPAREN ROWVECTOR REAL RBRACK RBRACE RABRACK QMARK POSITIVEORDERED PLUSASSIGN PLUS ORDERED OR NEQUALS MODULO MINUSASSIGN MINUS MATRIX LEQ LDIVIDE LBRACK LABRACK INT IDIVIDE HAT GEQ EQUALS ELTTIMESASSIGN ELTTIMES ELTPOW ELTDIVIDEASSIGN ELTDIVIDE DIVIDEASSIGN DIVIDE COVMATRIX CORRMATRIX COMPLEX COMMA COLON CHOLESKYFACTORCOV CHOLESKYFACTORCORR BAR ASSIGN ARROWASSIGN AND
follow(indexes) = RBRACK COMMA
follow(identifier) = VECTOR UNITVECTOR TRANSPOSE TIMESASSIGN TIMES TILDE SIMPLEX SEMICOLON RPAREN ROWVECTOR REAL RBRACK RBRACE RABRACK QMARK POSITIVEORDERED PLUSASSIGN PLUS ORDERED OR NEQUALS MODULO MINUSASSIGN MINUS MATRIX LPAREN LEQ LDIVIDE LBRACK LABRACK INT IN IDIVIDE HAT GEQ EQUALS ELTTIMESASSIGN ELTTIMES ELTPOW ELTDIVIDEASSIGN ELTDIVIDE DIVIDEASSIGN DIVIDE COVMATRIX CORRMATRIX COMPLEX COMMA COLON CHOLESKYFACTORCOV CHOLESKYFACTORCORR BAR ASSIGN ARROWASSIGN AND
follow(id_and_optional_assignment(no_assign)) = SEMICOLON COMMA
follow(id_and_optional_assignment(expression)) = SEMICOLON COMMA
follow(generated_quantities_block) = EOF
follow(function_def) = VOID VECTOR ROWVECTOR REAL RBRACE MATRIX INT COMPLEX ARRAY
follow(function_block) = TRANSFORMEDPARAMETERSBLOCK TRANSFORMEDDATABLOCK PARAMETERSBLOCK MODELBLOCK GENERATEDQUANTITIESBLOCK EOF DATABLOCK
follow(dims) = SEMICOLON ASSIGN
follow(decl_identifier) = SEMICOLON RPAREN LPAREN LBRACK COMMA ASSIGN
follow(decl(top_var_type,no_assign)) = VECTOR UPPER UNITVECTOR TRUNCATE SIMPLEX ROWVECTOR REAL RBRACE POSITIVEORDERED ORDERED OFFSET MULTIPLIER MATRIX LOWER INT IDENTIFIER COVMATRIX CORRMATRIX COMPLEX CHOLESKYFACTORCOV CHOLESKYFACTORCORR ARRAY
follow(decl(top_var_type,expression)) = WHILE VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PROFILE PRINT POSITIVEORDERED PLUS ORDERED OFFSET MULTIPLIER MINUS MATRIX LPAREN LOWER LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IMAGNUMERAL IF IDENTIFIER GETLP FOR COVMATRIX CORRMATRIX CONTINUE COMPLEX CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ARRAY
follow(decl(sized_basic_type,expression)) = WHILE VECTOR UPPER TRUNCATE TARGET SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PROFILE PRINT PLUS OFFSET MULTIPLIER MINUS MATRIX LPAREN LOWER LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IMAGNUMERAL IF IDENTIFIER GETLP FOR CONTINUE COMPLEX BREAK BANG ARRAY
follow(data_block) = TRANSFORMEDPARAMETERSBLOCK TRANSFORMEDDATABLOCK PARAMETERSBLOCK MODELBLOCK GENERATEDQUANTITIESBLOCK EOF
follow(constr_expression) = TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK IDIVIDE HAT ELTTIMES ELTPOW ELTDIVIDE DIVIDE COMMA
follow(common_expression) = TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK IDIVIDE HAT GEQ EQUALS ELTTIMES ELTPOW ELTDIVIDE DIVIDE COMMA COLON BAR AND
follow(basic_type) = WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PROFILE PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER LBRACK INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE COMPLEX CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ARRAY
follow(atomic_statement) = WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PROFILE PRINT POSITIVEORDERED PLUS ORDERED OFFSET MULTIPLIER MINUS MATRIX LPAREN LOWER LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IMAGNUMERAL IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE COMPLEX CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ARRAY
follow(arg_decl) = RPAREN COMMA
follow(always(unsized_dims)) = VECTOR ROWVECTOR REAL MATRIX INT COMPLEX
Built an LR(0) automaton with 746 states.
The grammar is not SLR(1) -- 109 states have a conflict.
The construction mode is pager.
Built an LR(1) automaton with 746 states.
2166 shift/reduce conflicts were silently solved.
218 out of 746 states have a default reduction.
384 out of 746 states are represented.
67 out of 166 symbols keep track of their start position.
56 out of 166 symbols keep track of their end position.
184 out of 382 productions exploit shiftreduce optimization.
0 out of 746 states can peek at an error.
1952 functions before inlining, 252 functions after inlining.
