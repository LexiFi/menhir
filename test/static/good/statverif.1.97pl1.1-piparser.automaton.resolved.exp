State 0:
## Known stack suffix:
##
## LR(1) items:
all' -> . all [ # ]
## Transitions:
-- On WEAKSECRET shift to state 1
-- On QUERY shift to state 4
-- On PRIVATE shift to state 48
-- On PREDICATE shift to state 49
-- On PARAM shift to state 54
-- On NOUNIF shift to state 59
-- On NOT shift to state 107
-- On NONINTERF shift to state 123
-- On LET shift to state 149
-- On EQUATION shift to state 259
-- On ELIMTRUE shift to state 267
-- On DATA shift to state 277
-- On CLAUSES shift to state 282
-- On CELL shift to state 295
-- On privateopt shift to state 301
-- On lib shift to state 399
-- On all shift to state 403
## Reductions:
-- On PROCESS
--   reduce production lib ->
-- On REDUCTION FUN FREE
--   reduce production privateopt ->

State 1:
## Known stack suffix:
## WEAKSECRET
## LR(1) items:
lib -> WEAKSECRET . IDENT DOT lib [ PROCESS ]
## Transitions:
-- On IDENT shift to state 2
## Reductions:

State 2:
## Known stack suffix:
## WEAKSECRET IDENT
## LR(1) items:
lib -> WEAKSECRET IDENT . DOT lib [ PROCESS ]
## Transitions:
-- On DOT shift to state 3
## Reductions:

State 3:
## Known stack suffix:
## WEAKSECRET IDENT DOT
## LR(1) items:
lib -> WEAKSECRET IDENT DOT . lib [ PROCESS ]
## Transitions:
-- On WEAKSECRET shift to state 1
-- On QUERY shift to state 4
-- On PRIVATE shift to state 48
-- On PREDICATE shift to state 49
-- On PARAM shift to state 54
-- On NOUNIF shift to state 59
-- On NOT shift to state 107
-- On NONINTERF shift to state 123
-- On LET shift to state 149
-- On EQUATION shift to state 259
-- On ELIMTRUE shift to state 267
-- On DATA shift to state 277
-- On CLAUSES shift to state 282
-- On CELL shift to state 295
-- On privateopt shift to state 301
-- On lib shift to state 398
## Reductions:
-- On PROCESS
--   reduce production lib ->
-- On REDUCTION FUN FREE
--   reduce production privateopt ->

State 4:
## Known stack suffix:
## QUERY
## LR(1) items:
lib -> QUERY . queryseq DOT lib [ PROCESS ]
## Transitions:
-- On PUTBEGIN shift to state 5
-- On LPAREN shift to state 12
-- On LET shift to state 38
-- On IDENT shift to state 42
-- On realquery shift to state 45
-- On queryseq shift to state 46
-- On query shift to state 379
-- On gterm shift to state 382
-- On gfact shift to state 360
-- On event shift to state 383
## Reductions:

State 5:
## Known stack suffix:
## PUTBEGIN
## LR(1) items:
query -> PUTBEGIN . IDENT COLON neidentseq [ SEMI DOT ]
## Transitions:
-- On IDENT shift to state 6
## Reductions:

State 6:
## Known stack suffix:
## PUTBEGIN IDENT
## LR(1) items:
query -> PUTBEGIN IDENT . COLON neidentseq [ SEMI DOT ]
## Transitions:
-- On COLON shift to state 7
## Reductions:

State 7:
## Known stack suffix:
## PUTBEGIN IDENT COLON
## LR(1) items:
query -> PUTBEGIN IDENT COLON . neidentseq [ SEMI DOT ]
## Transitions:
-- On IDENT shift to state 8
-- On neidentseq shift to state 11
## Reductions:

State 8:
## Known stack suffix:
## IDENT
## LR(1) items:
neidentseq -> IDENT . COMMA neidentseq [ SUCHTHAT SEMI RPAREN DOT ASSIGN AS ]
neidentseq -> IDENT . [ SUCHTHAT SEMI RPAREN DOT ASSIGN AS ]
## Transitions:
-- On COMMA shift to state 9
## Reductions:
-- On SUCHTHAT SEMI RPAREN DOT ASSIGN AS
--   reduce production neidentseq -> IDENT

State 9:
## Known stack suffix:
## IDENT COMMA
## LR(1) items:
neidentseq -> IDENT COMMA . neidentseq [ SUCHTHAT SEMI RPAREN DOT ASSIGN AS ]
## Transitions:
-- On IDENT shift to state 8
-- On neidentseq shift to state 10
## Reductions:

State 10:
## Known stack suffix:
## IDENT COMMA neidentseq
## LR(1) items:
neidentseq -> IDENT COMMA neidentseq . [ SUCHTHAT SEMI RPAREN DOT ASSIGN AS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production neidentseq -> IDENT COMMA neidentseq

State 11:
## Known stack suffix:
## PUTBEGIN IDENT COLON neidentseq
## LR(1) items:
query -> PUTBEGIN IDENT COLON neidentseq . [ SEMI DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production query -> PUTBEGIN IDENT COLON neidentseq

State 12:
## Known stack suffix:
## LPAREN
## LR(1) items:
gterm -> LPAREN . gtermseq RPAREN [ WEDGE SEMI RPAREN RBRACKET PHASE EQUAL DOT DIFF COMMA BEFORE BAR ]
## Transitions:
-- On LPAREN shift to state 12
-- On IDENT shift to state 13
-- On negtermseq shift to state 15
-- On gtermseq shift to state 36
-- On gterm shift to state 18
## Reductions:
-- On RPAREN
--   reduce production gtermseq ->

State 13:
## Known stack suffix:
## IDENT
## LR(1) items:
gterm -> IDENT . LPAREN gtermseq RPAREN [ WEDGE SEMI RPAREN RBRACKET PHASE DOT COMMA BEFORE BAR ]
gterm -> IDENT . [ WEDGE SEMI RPAREN RBRACKET PHASE DOT COMMA BEFORE BAR ]
gterm -> IDENT . LBRACKET bindingseq RBRACKET [ WEDGE SEMI RPAREN RBRACKET PHASE DOT COMMA BEFORE BAR ]
## Transitions:
-- On LPAREN shift to state 14
-- On LBRACKET shift to state 21
## Reductions:
-- On WEDGE SEMI RPAREN RBRACKET PHASE DOT COMMA BEFORE BAR
--   reduce production gterm -> IDENT

State 14:
## Known stack suffix:
## IDENT LPAREN
## LR(1) items:
gterm -> IDENT LPAREN . gtermseq RPAREN [ WEDGE SEMI RPAREN RBRACKET PHASE EQUAL DOT DIFF COMMA BEFORE BAR ]
## Transitions:
-- On LPAREN shift to state 12
-- On IDENT shift to state 13
-- On negtermseq shift to state 15
-- On gtermseq shift to state 16
-- On gterm shift to state 18
## Reductions:
-- On RPAREN
--   reduce production gtermseq ->

State 15:
## Known stack suffix:
## negtermseq
## LR(1) items:
gtermseq -> negtermseq . [ WEDGE SEMI RPAREN PHASE DOT BEFORE BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production gtermseq -> negtermseq

State 16:
## Known stack suffix:
## IDENT LPAREN gtermseq
## LR(1) items:
gterm -> IDENT LPAREN gtermseq . RPAREN [ WEDGE SEMI RPAREN RBRACKET PHASE EQUAL DOT DIFF COMMA BEFORE BAR ]
## Transitions:
-- On RPAREN shift to state 17
## Reductions:

State 17:
## Known stack suffix:
## IDENT LPAREN gtermseq RPAREN
## LR(1) items:
gterm -> IDENT LPAREN gtermseq RPAREN . [ WEDGE SEMI RPAREN RBRACKET PHASE EQUAL DOT DIFF COMMA BEFORE BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production gterm -> IDENT LPAREN gtermseq RPAREN

State 18:
## Known stack suffix:
## gterm
## LR(1) items:
negtermseq -> gterm . COMMA negtermseq [ WEDGE SEMI RPAREN PHASE DOT BEFORE BAR ]
negtermseq -> gterm . [ WEDGE SEMI RPAREN PHASE DOT BEFORE BAR ]
## Transitions:
-- On COMMA shift to state 19
## Reductions:
-- On WEDGE SEMI RPAREN PHASE DOT BEFORE BAR
--   reduce production negtermseq -> gterm

State 19:
## Known stack suffix:
## gterm COMMA
## LR(1) items:
negtermseq -> gterm COMMA . negtermseq [ WEDGE SEMI RPAREN PHASE DOT BEFORE BAR ]
## Transitions:
-- On LPAREN shift to state 12
-- On IDENT shift to state 13
-- On negtermseq shift to state 20
-- On gterm shift to state 18
## Reductions:

State 20:
## Known stack suffix:
## gterm COMMA negtermseq
## LR(1) items:
negtermseq -> gterm COMMA negtermseq . [ WEDGE SEMI RPAREN PHASE DOT BEFORE BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production negtermseq -> gterm COMMA negtermseq

State 21:
## Known stack suffix:
## IDENT LBRACKET
## LR(1) items:
gterm -> IDENT LBRACKET . bindingseq RBRACKET [ WEDGE SEMI RPAREN RBRACKET PHASE EQUAL DOT DIFF COMMA BEFORE BAR ]
## Transitions:
-- On REPL shift to state 22
-- On IDENT shift to state 27
-- On nesbindingseq shift to state 33
-- On bindingseq shift to state 34
## Reductions:
-- On RBRACKET
--   reduce production bindingseq ->

State 22:
## Known stack suffix:
## REPL
## LR(1) items:
nesbindingseq -> REPL . INT EQUAL gterm SEMI nesbindingseq [ RBRACKET ]
nesbindingseq -> REPL . INT EQUAL gterm [ RBRACKET ]
## Transitions:
-- On INT shift to state 23
## Reductions:

State 23:
## Known stack suffix:
## REPL INT
## LR(1) items:
nesbindingseq -> REPL INT . EQUAL gterm SEMI nesbindingseq [ RBRACKET ]
nesbindingseq -> REPL INT . EQUAL gterm [ RBRACKET ]
## Transitions:
-- On EQUAL shift to state 24
## Reductions:

State 24:
## Known stack suffix:
## REPL INT EQUAL
## LR(1) items:
nesbindingseq -> REPL INT EQUAL . gterm SEMI nesbindingseq [ RBRACKET ]
nesbindingseq -> REPL INT EQUAL . gterm [ RBRACKET ]
## Transitions:
-- On LPAREN shift to state 12
-- On IDENT shift to state 13
-- On gterm shift to state 25
## Reductions:

State 25:
## Known stack suffix:
## REPL INT EQUAL gterm
## LR(1) items:
nesbindingseq -> REPL INT EQUAL gterm . SEMI nesbindingseq [ RBRACKET ]
nesbindingseq -> REPL INT EQUAL gterm . [ RBRACKET ]
## Transitions:
-- On SEMI shift to state 26
## Reductions:
-- On RBRACKET
--   reduce production nesbindingseq -> REPL INT EQUAL gterm

State 26:
## Known stack suffix:
## REPL INT EQUAL gterm SEMI
## LR(1) items:
nesbindingseq -> REPL INT EQUAL gterm SEMI . nesbindingseq [ RBRACKET ]
## Transitions:
-- On REPL shift to state 22
-- On IDENT shift to state 27
-- On nesbindingseq shift to state 32
## Reductions:

State 27:
## Known stack suffix:
## IDENT
## LR(1) items:
nesbindingseq -> IDENT . EQUAL gterm SEMI nesbindingseq [ RBRACKET ]
nesbindingseq -> IDENT . EQUAL gterm [ RBRACKET ]
## Transitions:
-- On EQUAL shift to state 28
## Reductions:

State 28:
## Known stack suffix:
## IDENT EQUAL
## LR(1) items:
nesbindingseq -> IDENT EQUAL . gterm SEMI nesbindingseq [ RBRACKET ]
nesbindingseq -> IDENT EQUAL . gterm [ RBRACKET ]
## Transitions:
-- On LPAREN shift to state 12
-- On IDENT shift to state 13
-- On gterm shift to state 29
## Reductions:

State 29:
## Known stack suffix:
## IDENT EQUAL gterm
## LR(1) items:
nesbindingseq -> IDENT EQUAL gterm . SEMI nesbindingseq [ RBRACKET ]
nesbindingseq -> IDENT EQUAL gterm . [ RBRACKET ]
## Transitions:
-- On SEMI shift to state 30
## Reductions:
-- On RBRACKET
--   reduce production nesbindingseq -> IDENT EQUAL gterm

State 30:
## Known stack suffix:
## IDENT EQUAL gterm SEMI
## LR(1) items:
nesbindingseq -> IDENT EQUAL gterm SEMI . nesbindingseq [ RBRACKET ]
## Transitions:
-- On REPL shift to state 22
-- On IDENT shift to state 27
-- On nesbindingseq shift to state 31
## Reductions:

State 31:
## Known stack suffix:
## IDENT EQUAL gterm SEMI nesbindingseq
## LR(1) items:
nesbindingseq -> IDENT EQUAL gterm SEMI nesbindingseq . [ RBRACKET ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nesbindingseq -> IDENT EQUAL gterm SEMI nesbindingseq

State 32:
## Known stack suffix:
## REPL INT EQUAL gterm SEMI nesbindingseq
## LR(1) items:
nesbindingseq -> REPL INT EQUAL gterm SEMI nesbindingseq . [ RBRACKET ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nesbindingseq -> REPL INT EQUAL gterm SEMI nesbindingseq

State 33:
## Known stack suffix:
## nesbindingseq
## LR(1) items:
bindingseq -> nesbindingseq . [ RBRACKET ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production bindingseq -> nesbindingseq

State 34:
## Known stack suffix:
## IDENT LBRACKET bindingseq
## LR(1) items:
gterm -> IDENT LBRACKET bindingseq . RBRACKET [ WEDGE SEMI RPAREN RBRACKET PHASE EQUAL DOT DIFF COMMA BEFORE BAR ]
## Transitions:
-- On RBRACKET shift to state 35
## Reductions:

State 35:
## Known stack suffix:
## IDENT LBRACKET bindingseq RBRACKET
## LR(1) items:
gterm -> IDENT LBRACKET bindingseq RBRACKET . [ WEDGE SEMI RPAREN RBRACKET PHASE EQUAL DOT DIFF COMMA BEFORE BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production gterm -> IDENT LBRACKET bindingseq RBRACKET

State 36:
## Known stack suffix:
## LPAREN gtermseq
## LR(1) items:
gterm -> LPAREN gtermseq . RPAREN [ WEDGE SEMI RPAREN RBRACKET PHASE EQUAL DOT DIFF COMMA BEFORE BAR ]
## Transitions:
-- On RPAREN shift to state 37
## Reductions:

State 37:
## Known stack suffix:
## LPAREN gtermseq RPAREN
## LR(1) items:
gterm -> LPAREN gtermseq RPAREN . [ WEDGE SEMI RPAREN RBRACKET PHASE EQUAL DOT DIFF COMMA BEFORE BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production gterm -> LPAREN gtermseq RPAREN

State 38:
## Known stack suffix:
## LET
## LR(1) items:
query -> LET . IDENT EQUAL gterm [ SEMI DOT ]
## Transitions:
-- On IDENT shift to state 39
## Reductions:

State 39:
## Known stack suffix:
## LET IDENT
## LR(1) items:
query -> LET IDENT . EQUAL gterm [ SEMI DOT ]
## Transitions:
-- On EQUAL shift to state 40
## Reductions:

State 40:
## Known stack suffix:
## LET IDENT EQUAL
## LR(1) items:
query -> LET IDENT EQUAL . gterm [ SEMI DOT ]
## Transitions:
-- On LPAREN shift to state 12
-- On IDENT shift to state 13
-- On gterm shift to state 41
## Reductions:

State 41:
## Known stack suffix:
## LET IDENT EQUAL gterm
## LR(1) items:
query -> LET IDENT EQUAL gterm . [ SEMI DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production query -> LET IDENT EQUAL gterm

State 42:
## Known stack suffix:
## IDENT
## LR(1) items:
gfact -> IDENT . COLON gtermseq [ WEDGE SEMI RPAREN PHASE DOT BEFORE BAR ]
gterm -> IDENT . LPAREN gtermseq RPAREN [ SEMI RPAREN PHASE EQUAL DOT DIFF COMMA ]
gterm -> IDENT . [ SEMI RPAREN PHASE EQUAL DOT DIFF COMMA ]
gterm -> IDENT . LBRACKET bindingseq RBRACKET [ SEMI RPAREN PHASE EQUAL DOT DIFF COMMA ]
## Transitions:
-- On LPAREN shift to state 14
-- On LBRACKET shift to state 21
-- On COLON shift to state 43
## Reductions:
-- On SEMI RPAREN PHASE EQUAL DOT DIFF COMMA
--   reduce production gterm -> IDENT

State 43:
## Known stack suffix:
## IDENT COLON
## LR(1) items:
gfact -> IDENT COLON . gtermseq [ WEDGE SEMI RPAREN PHASE DOT BEFORE BAR ]
## Transitions:
-- On LPAREN shift to state 12
-- On IDENT shift to state 13
-- On negtermseq shift to state 15
-- On gtermseq shift to state 44
-- On gterm shift to state 18
## Reductions:
-- On WEDGE SEMI RPAREN PHASE DOT BEFORE BAR
--   reduce production gtermseq ->

State 44:
## Known stack suffix:
## IDENT COLON gtermseq
## LR(1) items:
gfact -> IDENT COLON gtermseq . [ WEDGE SEMI RPAREN PHASE DOT BEFORE BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production gfact -> IDENT COLON gtermseq

State 45:
## Known stack suffix:
## realquery
## LR(1) items:
query -> realquery . [ SEMI DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production query -> realquery

State 46:
## Known stack suffix:
## QUERY queryseq
## LR(1) items:
lib -> QUERY queryseq . DOT lib [ PROCESS ]
## Transitions:
-- On DOT shift to state 47
## Reductions:

State 47:
## Known stack suffix:
## QUERY queryseq DOT
## LR(1) items:
lib -> QUERY queryseq DOT . lib [ PROCESS ]
## Transitions:
-- On WEAKSECRET shift to state 1
-- On QUERY shift to state 4
-- On PRIVATE shift to state 48
-- On PREDICATE shift to state 49
-- On PARAM shift to state 54
-- On NOUNIF shift to state 59
-- On NOT shift to state 107
-- On NONINTERF shift to state 123
-- On LET shift to state 149
-- On EQUATION shift to state 259
-- On ELIMTRUE shift to state 267
-- On DATA shift to state 277
-- On CLAUSES shift to state 282
-- On CELL shift to state 295
-- On privateopt shift to state 301
-- On lib shift to state 378
## Reductions:
-- On PROCESS
--   reduce production lib ->
-- On REDUCTION FUN FREE
--   reduce production privateopt ->

State 48:
## Known stack suffix:
## PRIVATE
## LR(1) items:
privateopt -> PRIVATE . [ REDUCTION FUN FREE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production privateopt -> PRIVATE

State 49:
## Known stack suffix:
## PREDICATE
## LR(1) items:
lib -> PREDICATE . IDENT SLASH INT neidentseq DOT lib [ PROCESS ]
lib -> PREDICATE . IDENT SLASH INT DOT lib [ PROCESS ]
## Transitions:
-- On IDENT shift to state 50
## Reductions:

State 50:
## Known stack suffix:
## PREDICATE IDENT
## LR(1) items:
lib -> PREDICATE IDENT . SLASH INT neidentseq DOT lib [ PROCESS ]
lib -> PREDICATE IDENT . SLASH INT DOT lib [ PROCESS ]
## Transitions:
-- On SLASH shift to state 51
## Reductions:

State 51:
## Known stack suffix:
## PREDICATE IDENT SLASH
## LR(1) items:
lib -> PREDICATE IDENT SLASH . INT neidentseq DOT lib [ PROCESS ]
lib -> PREDICATE IDENT SLASH . INT DOT lib [ PROCESS ]
## Transitions:
-- On INT shift to state 52
## Reductions:

State 52:
## Known stack suffix:
## PREDICATE IDENT SLASH INT
## LR(1) items:
lib -> PREDICATE IDENT SLASH INT . neidentseq DOT lib [ PROCESS ]
lib -> PREDICATE IDENT SLASH INT . DOT lib [ PROCESS ]
## Transitions:
-- On IDENT shift to state 8
-- On DOT shift to state 53
-- On neidentseq shift to state 375
## Reductions:

State 53:
## Known stack suffix:
## PREDICATE IDENT SLASH INT DOT
## LR(1) items:
lib -> PREDICATE IDENT SLASH INT DOT . lib [ PROCESS ]
## Transitions:
-- On WEAKSECRET shift to state 1
-- On QUERY shift to state 4
-- On PRIVATE shift to state 48
-- On PREDICATE shift to state 49
-- On PARAM shift to state 54
-- On NOUNIF shift to state 59
-- On NOT shift to state 107
-- On NONINTERF shift to state 123
-- On LET shift to state 149
-- On EQUATION shift to state 259
-- On ELIMTRUE shift to state 267
-- On DATA shift to state 277
-- On CLAUSES shift to state 282
-- On CELL shift to state 295
-- On privateopt shift to state 301
-- On lib shift to state 374
## Reductions:
-- On PROCESS
--   reduce production lib ->
-- On REDUCTION FUN FREE
--   reduce production privateopt ->

State 54:
## Known stack suffix:
## PARAM
## LR(1) items:
lib -> PARAM . IDENT EQUAL IDENT DOT lib [ PROCESS ]
lib -> PARAM . IDENT EQUAL STRING DOT lib [ PROCESS ]
lib -> PARAM . IDENT EQUAL INT DOT lib [ PROCESS ]
## Transitions:
-- On IDENT shift to state 55
## Reductions:

State 55:
## Known stack suffix:
## PARAM IDENT
## LR(1) items:
lib -> PARAM IDENT . EQUAL IDENT DOT lib [ PROCESS ]
lib -> PARAM IDENT . EQUAL STRING DOT lib [ PROCESS ]
lib -> PARAM IDENT . EQUAL INT DOT lib [ PROCESS ]
## Transitions:
-- On EQUAL shift to state 56
## Reductions:

State 56:
## Known stack suffix:
## PARAM IDENT EQUAL
## LR(1) items:
lib -> PARAM IDENT EQUAL . IDENT DOT lib [ PROCESS ]
lib -> PARAM IDENT EQUAL . STRING DOT lib [ PROCESS ]
lib -> PARAM IDENT EQUAL . INT DOT lib [ PROCESS ]
## Transitions:
-- On STRING shift to state 57
-- On INT shift to state 368
-- On IDENT shift to state 371
## Reductions:

State 57:
## Known stack suffix:
## PARAM IDENT EQUAL STRING
## LR(1) items:
lib -> PARAM IDENT EQUAL STRING . DOT lib [ PROCESS ]
## Transitions:
-- On DOT shift to state 58
## Reductions:

State 58:
## Known stack suffix:
## PARAM IDENT EQUAL STRING DOT
## LR(1) items:
lib -> PARAM IDENT EQUAL STRING DOT . lib [ PROCESS ]
## Transitions:
-- On WEAKSECRET shift to state 1
-- On QUERY shift to state 4
-- On PRIVATE shift to state 48
-- On PREDICATE shift to state 49
-- On PARAM shift to state 54
-- On NOUNIF shift to state 59
-- On NOT shift to state 107
-- On NONINTERF shift to state 123
-- On LET shift to state 149
-- On EQUATION shift to state 259
-- On ELIMTRUE shift to state 267
-- On DATA shift to state 277
-- On CLAUSES shift to state 282
-- On CELL shift to state 295
-- On privateopt shift to state 301
-- On lib shift to state 367
## Reductions:
-- On PROCESS
--   reduce production lib ->
-- On REDUCTION FUN FREE
--   reduce production privateopt ->

State 59:
## Known stack suffix:
## NOUNIF
## LR(1) items:
lib -> NOUNIF . gfactformat optint foptbindingseq DOT lib [ PROCESS ]
## Transitions:
-- On IDENT shift to state 60
-- On gfactformat shift to state 94
## Reductions:

State 60:
## Known stack suffix:
## IDENT
## LR(1) items:
gfactformat -> IDENT . COLON gformatseq optphase [ SLASH SEMI DOT ]
## Transitions:
-- On COLON shift to state 61
## Reductions:

State 61:
## Known stack suffix:
## IDENT COLON
## LR(1) items:
gfactformat -> IDENT COLON . gformatseq optphase [ SLASH SEMI DOT ]
## Transitions:
-- On STAR shift to state 62
-- On LPAREN shift to state 64
-- On IDENT shift to state 65
-- On negformatseq shift to state 67
-- On gformatseq shift to state 90
-- On gformat shift to state 70
## Reductions:
-- On SLASH SEMI PHASE DOT
--   reduce production gformatseq ->

State 62:
## Known stack suffix:
## STAR
## LR(1) items:
gformat -> STAR . IDENT [ SLASH SEMI RPAREN RBRACKET PHASE DOT COMMA ]
## Transitions:
-- On IDENT shift to state 63
## Reductions:

State 63:
## Known stack suffix:
## STAR IDENT
## LR(1) items:
gformat -> STAR IDENT . [ SLASH SEMI RPAREN RBRACKET PHASE DOT COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production gformat -> STAR IDENT

State 64:
## Known stack suffix:
## LPAREN
## LR(1) items:
gformat -> LPAREN . gformatseq RPAREN [ SLASH SEMI RPAREN RBRACKET PHASE DOT COMMA ]
## Transitions:
-- On STAR shift to state 62
-- On LPAREN shift to state 64
-- On IDENT shift to state 65
-- On negformatseq shift to state 67
-- On gformatseq shift to state 88
-- On gformat shift to state 70
## Reductions:
-- On RPAREN
--   reduce production gformatseq ->

State 65:
## Known stack suffix:
## IDENT
## LR(1) items:
gformat -> IDENT . LPAREN gformatseq RPAREN [ SLASH SEMI RPAREN RBRACKET PHASE DOT COMMA ]
gformat -> IDENT . [ SLASH SEMI RPAREN RBRACKET PHASE DOT COMMA ]
gformat -> IDENT . LBRACKET fbindingseq RBRACKET [ SLASH SEMI RPAREN RBRACKET PHASE DOT COMMA ]
## Transitions:
-- On LPAREN shift to state 66
-- On LBRACKET shift to state 73
## Reductions:
-- On SLASH SEMI RPAREN RBRACKET PHASE DOT COMMA
--   reduce production gformat -> IDENT

State 66:
## Known stack suffix:
## IDENT LPAREN
## LR(1) items:
gformat -> IDENT LPAREN . gformatseq RPAREN [ SLASH SEMI RPAREN RBRACKET PHASE DOT COMMA ]
## Transitions:
-- On STAR shift to state 62
-- On LPAREN shift to state 64
-- On IDENT shift to state 65
-- On negformatseq shift to state 67
-- On gformatseq shift to state 68
-- On gformat shift to state 70
## Reductions:
-- On RPAREN
--   reduce production gformatseq ->

State 67:
## Known stack suffix:
## negformatseq
## LR(1) items:
gformatseq -> negformatseq . [ SLASH SEMI RPAREN PHASE DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production gformatseq -> negformatseq

State 68:
## Known stack suffix:
## IDENT LPAREN gformatseq
## LR(1) items:
gformat -> IDENT LPAREN gformatseq . RPAREN [ SLASH SEMI RPAREN RBRACKET PHASE DOT COMMA ]
## Transitions:
-- On RPAREN shift to state 69
## Reductions:

State 69:
## Known stack suffix:
## IDENT LPAREN gformatseq RPAREN
## LR(1) items:
gformat -> IDENT LPAREN gformatseq RPAREN . [ SLASH SEMI RPAREN RBRACKET PHASE DOT COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production gformat -> IDENT LPAREN gformatseq RPAREN

State 70:
## Known stack suffix:
## gformat
## LR(1) items:
negformatseq -> gformat . COMMA negformatseq [ SLASH SEMI RPAREN PHASE DOT ]
negformatseq -> gformat . [ SLASH SEMI RPAREN PHASE DOT ]
## Transitions:
-- On COMMA shift to state 71
## Reductions:
-- On SLASH SEMI RPAREN PHASE DOT
--   reduce production negformatseq -> gformat

State 71:
## Known stack suffix:
## gformat COMMA
## LR(1) items:
negformatseq -> gformat COMMA . negformatseq [ SLASH SEMI RPAREN PHASE DOT ]
## Transitions:
-- On STAR shift to state 62
-- On LPAREN shift to state 64
-- On IDENT shift to state 65
-- On negformatseq shift to state 72
-- On gformat shift to state 70
## Reductions:

State 72:
## Known stack suffix:
## gformat COMMA negformatseq
## LR(1) items:
negformatseq -> gformat COMMA negformatseq . [ SLASH SEMI RPAREN PHASE DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production negformatseq -> gformat COMMA negformatseq

State 73:
## Known stack suffix:
## IDENT LBRACKET
## LR(1) items:
gformat -> IDENT LBRACKET . fbindingseq RBRACKET [ SLASH SEMI RPAREN RBRACKET PHASE DOT COMMA ]
## Transitions:
-- On REPL shift to state 74
-- On IDENT shift to state 79
-- On fnesbindingseq shift to state 85
-- On fbindingseq shift to state 86
## Reductions:
-- On RBRACKET
--   reduce production fbindingseq ->

State 74:
## Known stack suffix:
## REPL
## LR(1) items:
fnesbindingseq -> REPL . INT EQUAL gformat SEMI fnesbindingseq [ RBRACKET ]
fnesbindingseq -> REPL . INT EQUAL gformat [ RBRACKET ]
## Transitions:
-- On INT shift to state 75
## Reductions:

State 75:
## Known stack suffix:
## REPL INT
## LR(1) items:
fnesbindingseq -> REPL INT . EQUAL gformat SEMI fnesbindingseq [ RBRACKET ]
fnesbindingseq -> REPL INT . EQUAL gformat [ RBRACKET ]
## Transitions:
-- On EQUAL shift to state 76
## Reductions:

State 76:
## Known stack suffix:
## REPL INT EQUAL
## LR(1) items:
fnesbindingseq -> REPL INT EQUAL . gformat SEMI fnesbindingseq [ RBRACKET ]
fnesbindingseq -> REPL INT EQUAL . gformat [ RBRACKET ]
## Transitions:
-- On STAR shift to state 62
-- On LPAREN shift to state 64
-- On IDENT shift to state 65
-- On gformat shift to state 77
## Reductions:

State 77:
## Known stack suffix:
## REPL INT EQUAL gformat
## LR(1) items:
fnesbindingseq -> REPL INT EQUAL gformat . SEMI fnesbindingseq [ RBRACKET ]
fnesbindingseq -> REPL INT EQUAL gformat . [ RBRACKET ]
## Transitions:
-- On SEMI shift to state 78
## Reductions:
-- On RBRACKET
--   reduce production fnesbindingseq -> REPL INT EQUAL gformat

State 78:
## Known stack suffix:
## REPL INT EQUAL gformat SEMI
## LR(1) items:
fnesbindingseq -> REPL INT EQUAL gformat SEMI . fnesbindingseq [ RBRACKET ]
## Transitions:
-- On REPL shift to state 74
-- On IDENT shift to state 79
-- On fnesbindingseq shift to state 84
## Reductions:

State 79:
## Known stack suffix:
## IDENT
## LR(1) items:
fnesbindingseq -> IDENT . EQUAL gformat SEMI fnesbindingseq [ RBRACKET ]
fnesbindingseq -> IDENT . EQUAL gformat [ RBRACKET ]
## Transitions:
-- On EQUAL shift to state 80
## Reductions:

State 80:
## Known stack suffix:
## IDENT EQUAL
## LR(1) items:
fnesbindingseq -> IDENT EQUAL . gformat SEMI fnesbindingseq [ RBRACKET ]
fnesbindingseq -> IDENT EQUAL . gformat [ RBRACKET ]
## Transitions:
-- On STAR shift to state 62
-- On LPAREN shift to state 64
-- On IDENT shift to state 65
-- On gformat shift to state 81
## Reductions:

State 81:
## Known stack suffix:
## IDENT EQUAL gformat
## LR(1) items:
fnesbindingseq -> IDENT EQUAL gformat . SEMI fnesbindingseq [ RBRACKET ]
fnesbindingseq -> IDENT EQUAL gformat . [ RBRACKET ]
## Transitions:
-- On SEMI shift to state 82
## Reductions:
-- On RBRACKET
--   reduce production fnesbindingseq -> IDENT EQUAL gformat

State 82:
## Known stack suffix:
## IDENT EQUAL gformat SEMI
## LR(1) items:
fnesbindingseq -> IDENT EQUAL gformat SEMI . fnesbindingseq [ RBRACKET ]
## Transitions:
-- On REPL shift to state 74
-- On IDENT shift to state 79
-- On fnesbindingseq shift to state 83
## Reductions:

State 83:
## Known stack suffix:
## IDENT EQUAL gformat SEMI fnesbindingseq
## LR(1) items:
fnesbindingseq -> IDENT EQUAL gformat SEMI fnesbindingseq . [ RBRACKET ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production fnesbindingseq -> IDENT EQUAL gformat SEMI fnesbindingseq

State 84:
## Known stack suffix:
## REPL INT EQUAL gformat SEMI fnesbindingseq
## LR(1) items:
fnesbindingseq -> REPL INT EQUAL gformat SEMI fnesbindingseq . [ RBRACKET ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production fnesbindingseq -> REPL INT EQUAL gformat SEMI fnesbindingseq

State 85:
## Known stack suffix:
## fnesbindingseq
## LR(1) items:
fbindingseq -> fnesbindingseq . [ RBRACKET ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production fbindingseq -> fnesbindingseq

State 86:
## Known stack suffix:
## IDENT LBRACKET fbindingseq
## LR(1) items:
gformat -> IDENT LBRACKET fbindingseq . RBRACKET [ SLASH SEMI RPAREN RBRACKET PHASE DOT COMMA ]
## Transitions:
-- On RBRACKET shift to state 87
## Reductions:

State 87:
## Known stack suffix:
## IDENT LBRACKET fbindingseq RBRACKET
## LR(1) items:
gformat -> IDENT LBRACKET fbindingseq RBRACKET . [ SLASH SEMI RPAREN RBRACKET PHASE DOT COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production gformat -> IDENT LBRACKET fbindingseq RBRACKET

State 88:
## Known stack suffix:
## LPAREN gformatseq
## LR(1) items:
gformat -> LPAREN gformatseq . RPAREN [ SLASH SEMI RPAREN RBRACKET PHASE DOT COMMA ]
## Transitions:
-- On RPAREN shift to state 89
## Reductions:

State 89:
## Known stack suffix:
## LPAREN gformatseq RPAREN
## LR(1) items:
gformat -> LPAREN gformatseq RPAREN . [ SLASH SEMI RPAREN RBRACKET PHASE DOT COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production gformat -> LPAREN gformatseq RPAREN

State 90:
## Known stack suffix:
## IDENT COLON gformatseq
## LR(1) items:
gfactformat -> IDENT COLON gformatseq . optphase [ SLASH SEMI DOT ]
## Transitions:
-- On PHASE shift to state 91
-- On optphase shift to state 93
## Reductions:
-- On SLASH SEMI DOT
--   reduce production optphase ->

State 91:
## Known stack suffix:
## PHASE
## LR(1) items:
optphase -> PHASE . INT [ WEDGE SLASH SEMI RPAREN DOT BEFORE BAR ]
## Transitions:
-- On INT shift to state 92
## Reductions:

State 92:
## Known stack suffix:
## PHASE INT
## LR(1) items:
optphase -> PHASE INT . [ WEDGE SLASH SEMI RPAREN DOT BEFORE BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production optphase -> PHASE INT

State 93:
## Known stack suffix:
## IDENT COLON gformatseq optphase
## LR(1) items:
gfactformat -> IDENT COLON gformatseq optphase . [ SLASH SEMI DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production gfactformat -> IDENT COLON gformatseq optphase

State 94:
## Known stack suffix:
## NOUNIF gfactformat
## LR(1) items:
lib -> NOUNIF gfactformat . optint foptbindingseq DOT lib [ PROCESS ]
## Transitions:
-- On SLASH shift to state 95
-- On optint shift to state 97
## Reductions:
-- On SEMI DOT
--   reduce production optint ->

State 95:
## Known stack suffix:
## SLASH
## LR(1) items:
optint -> SLASH . INT [ SEMI DOT ]
## Transitions:
-- On INT shift to state 96
## Reductions:

State 96:
## Known stack suffix:
## SLASH INT
## LR(1) items:
optint -> SLASH INT . [ SEMI DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production optint -> SLASH INT

State 97:
## Known stack suffix:
## NOUNIF gfactformat optint
## LR(1) items:
lib -> NOUNIF gfactformat optint . foptbindingseq DOT lib [ PROCESS ]
## Transitions:
-- On SEMI shift to state 98
-- On foptbindingseq shift to state 105
## Reductions:
-- On DOT
--   reduce production foptbindingseq ->

State 98:
## Known stack suffix:
## SEMI
## LR(1) items:
foptbindingseq -> SEMI . fnebindingseq [ DOT ]
## Transitions:
-- On IDENT shift to state 99
-- On fnebindingseq shift to state 104
## Reductions:

State 99:
## Known stack suffix:
## IDENT
## LR(1) items:
fnebindingseq -> IDENT . EQUAL gformat SEMI fnebindingseq [ DOT ]
fnebindingseq -> IDENT . EQUAL gformat [ DOT ]
## Transitions:
-- On EQUAL shift to state 100
## Reductions:

State 100:
## Known stack suffix:
## IDENT EQUAL
## LR(1) items:
fnebindingseq -> IDENT EQUAL . gformat SEMI fnebindingseq [ DOT ]
fnebindingseq -> IDENT EQUAL . gformat [ DOT ]
## Transitions:
-- On STAR shift to state 62
-- On LPAREN shift to state 64
-- On IDENT shift to state 65
-- On gformat shift to state 101
## Reductions:

State 101:
## Known stack suffix:
## IDENT EQUAL gformat
## LR(1) items:
fnebindingseq -> IDENT EQUAL gformat . SEMI fnebindingseq [ DOT ]
fnebindingseq -> IDENT EQUAL gformat . [ DOT ]
## Transitions:
-- On SEMI shift to state 102
## Reductions:
-- On DOT
--   reduce production fnebindingseq -> IDENT EQUAL gformat

State 102:
## Known stack suffix:
## IDENT EQUAL gformat SEMI
## LR(1) items:
fnebindingseq -> IDENT EQUAL gformat SEMI . fnebindingseq [ DOT ]
## Transitions:
-- On IDENT shift to state 99
-- On fnebindingseq shift to state 103
## Reductions:

State 103:
## Known stack suffix:
## IDENT EQUAL gformat SEMI fnebindingseq
## LR(1) items:
fnebindingseq -> IDENT EQUAL gformat SEMI fnebindingseq . [ DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production fnebindingseq -> IDENT EQUAL gformat SEMI fnebindingseq

State 104:
## Known stack suffix:
## SEMI fnebindingseq
## LR(1) items:
foptbindingseq -> SEMI fnebindingseq . [ DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production foptbindingseq -> SEMI fnebindingseq

State 105:
## Known stack suffix:
## NOUNIF gfactformat optint foptbindingseq
## LR(1) items:
lib -> NOUNIF gfactformat optint foptbindingseq . DOT lib [ PROCESS ]
## Transitions:
-- On DOT shift to state 106
## Reductions:

State 106:
## Known stack suffix:
## NOUNIF gfactformat optint foptbindingseq DOT
## LR(1) items:
lib -> NOUNIF gfactformat optint foptbindingseq DOT . lib [ PROCESS ]
## Transitions:
-- On WEAKSECRET shift to state 1
-- On QUERY shift to state 4
-- On PRIVATE shift to state 48
-- On PREDICATE shift to state 49
-- On PARAM shift to state 54
-- On NOUNIF shift to state 59
-- On NOT shift to state 107
-- On NONINTERF shift to state 123
-- On LET shift to state 149
-- On EQUATION shift to state 259
-- On ELIMTRUE shift to state 267
-- On DATA shift to state 277
-- On CLAUSES shift to state 282
-- On CELL shift to state 295
-- On privateopt shift to state 301
-- On lib shift to state 366
## Reductions:
-- On PROCESS
--   reduce production lib ->
-- On REDUCTION FUN FREE
--   reduce production privateopt ->

State 107:
## Known stack suffix:
## NOT
## LR(1) items:
lib -> NOT . gterm optphase optbindingseq DOT lib [ PROCESS ]
lib -> NOT . event optbindingseq DOT lib [ PROCESS ]
## Transitions:
-- On LPAREN shift to state 12
-- On IDENT shift to state 42
-- On gterm shift to state 108
-- On gfact shift to state 360
-- On event shift to state 362
## Reductions:

State 108:
## Known stack suffix:
## NOT gterm
## LR(1) items:
gfact -> gterm . DIFF gterm [ SEMI PHASE DOT ]
gfact -> gterm . EQUAL gterm [ SEMI PHASE DOT ]
lib -> NOT gterm . optphase optbindingseq DOT lib [ PROCESS ]
## Transitions:
-- On PHASE shift to state 91
-- On EQUAL shift to state 109
-- On DIFF shift to state 111
-- On optphase shift to state 113
## Reductions:
-- On SEMI DOT
--   reduce production optphase ->

State 109:
## Known stack suffix:
## gterm EQUAL
## LR(1) items:
gfact -> gterm EQUAL . gterm [ WEDGE SEMI RPAREN PHASE DOT BEFORE BAR ]
## Transitions:
-- On LPAREN shift to state 12
-- On IDENT shift to state 13
-- On gterm shift to state 110
## Reductions:

State 110:
## Known stack suffix:
## gterm EQUAL gterm
## LR(1) items:
gfact -> gterm EQUAL gterm . [ WEDGE SEMI RPAREN PHASE DOT BEFORE BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production gfact -> gterm EQUAL gterm

State 111:
## Known stack suffix:
## gterm DIFF
## LR(1) items:
gfact -> gterm DIFF . gterm [ WEDGE SEMI RPAREN PHASE DOT BEFORE BAR ]
## Transitions:
-- On LPAREN shift to state 12
-- On IDENT shift to state 13
-- On gterm shift to state 112
## Reductions:

State 112:
## Known stack suffix:
## gterm DIFF gterm
## LR(1) items:
gfact -> gterm DIFF gterm . [ WEDGE SEMI RPAREN PHASE DOT BEFORE BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production gfact -> gterm DIFF gterm

State 113:
## Known stack suffix:
## NOT gterm optphase
## LR(1) items:
lib -> NOT gterm optphase . optbindingseq DOT lib [ PROCESS ]
## Transitions:
-- On SEMI shift to state 114
-- On optbindingseq shift to state 121
## Reductions:
-- On DOT
--   reduce production optbindingseq ->

State 114:
## Known stack suffix:
## SEMI
## LR(1) items:
optbindingseq -> SEMI . nebindingseq [ DOT ]
## Transitions:
-- On IDENT shift to state 115
-- On nebindingseq shift to state 120
## Reductions:

State 115:
## Known stack suffix:
## IDENT
## LR(1) items:
nebindingseq -> IDENT . EQUAL gterm SEMI nebindingseq [ DOT ]
nebindingseq -> IDENT . EQUAL gterm [ DOT ]
## Transitions:
-- On EQUAL shift to state 116
## Reductions:

State 116:
## Known stack suffix:
## IDENT EQUAL
## LR(1) items:
nebindingseq -> IDENT EQUAL . gterm SEMI nebindingseq [ DOT ]
nebindingseq -> IDENT EQUAL . gterm [ DOT ]
## Transitions:
-- On LPAREN shift to state 12
-- On IDENT shift to state 13
-- On gterm shift to state 117
## Reductions:

State 117:
## Known stack suffix:
## IDENT EQUAL gterm
## LR(1) items:
nebindingseq -> IDENT EQUAL gterm . SEMI nebindingseq [ DOT ]
nebindingseq -> IDENT EQUAL gterm . [ DOT ]
## Transitions:
-- On SEMI shift to state 118
## Reductions:
-- On DOT
--   reduce production nebindingseq -> IDENT EQUAL gterm

State 118:
## Known stack suffix:
## IDENT EQUAL gterm SEMI
## LR(1) items:
nebindingseq -> IDENT EQUAL gterm SEMI . nebindingseq [ DOT ]
## Transitions:
-- On IDENT shift to state 115
-- On nebindingseq shift to state 119
## Reductions:

State 119:
## Known stack suffix:
## IDENT EQUAL gterm SEMI nebindingseq
## LR(1) items:
nebindingseq -> IDENT EQUAL gterm SEMI nebindingseq . [ DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nebindingseq -> IDENT EQUAL gterm SEMI nebindingseq

State 120:
## Known stack suffix:
## SEMI nebindingseq
## LR(1) items:
optbindingseq -> SEMI nebindingseq . [ DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production optbindingseq -> SEMI nebindingseq

State 121:
## Known stack suffix:
## NOT gterm optphase optbindingseq
## LR(1) items:
lib -> NOT gterm optphase optbindingseq . DOT lib [ PROCESS ]
## Transitions:
-- On DOT shift to state 122
## Reductions:

State 122:
## Known stack suffix:
## NOT gterm optphase optbindingseq DOT
## LR(1) items:
lib -> NOT gterm optphase optbindingseq DOT . lib [ PROCESS ]
## Transitions:
-- On WEAKSECRET shift to state 1
-- On QUERY shift to state 4
-- On PRIVATE shift to state 48
-- On PREDICATE shift to state 49
-- On PARAM shift to state 54
-- On NOUNIF shift to state 59
-- On NOT shift to state 107
-- On NONINTERF shift to state 123
-- On LET shift to state 149
-- On EQUATION shift to state 259
-- On ELIMTRUE shift to state 267
-- On DATA shift to state 277
-- On CLAUSES shift to state 282
-- On CELL shift to state 295
-- On privateopt shift to state 301
-- On lib shift to state 359
## Reductions:
-- On PROCESS
--   reduce production lib ->
-- On REDUCTION FUN FREE
--   reduce production privateopt ->

State 123:
## Known stack suffix:
## NONINTERF
## LR(1) items:
lib -> NONINTERF . niseq DOT lib [ PROCESS ]
## Transitions:
-- On IDENT shift to state 124
-- On niseq shift to state 147
-- On ni shift to state 356
## Reductions:

State 124:
## Known stack suffix:
## IDENT
## LR(1) items:
ni -> IDENT . AMONG LPAREN netermseq RPAREN [ DOT COMMA ]
ni -> IDENT . [ DOT COMMA ]
## Transitions:
-- On AMONG shift to state 125
## Reductions:
-- On DOT COMMA
--   reduce production ni -> IDENT

State 125:
## Known stack suffix:
## IDENT AMONG
## LR(1) items:
ni -> IDENT AMONG . LPAREN netermseq RPAREN [ DOT COMMA ]
## Transitions:
-- On LPAREN shift to state 126
## Reductions:

State 126:
## Known stack suffix:
## IDENT AMONG LPAREN
## LR(1) items:
ni -> IDENT AMONG LPAREN . netermseq RPAREN [ DOT COMMA ]
## Transitions:
-- On LPAREN shift to state 127
-- On IDENT shift to state 128
-- On FAIL shift to state 130
-- On CHOICE shift to state 131
-- On term shift to state 139
-- On netermseq shift to state 145
## Reductions:

State 127:
## Known stack suffix:
## LPAREN
## LR(1) items:
term -> LPAREN . termseq RPAREN [ WHERE WEDGE THEN SEMI RPAREN RED RBRACKET OTHERWISE IN EQUIVEQ EQUIV EQUAL EOF ELSE DOT DIFF COMMA BAR ]
## Transitions:
-- On LPAREN shift to state 127
-- On IDENT shift to state 128
-- On FAIL shift to state 130
-- On CHOICE shift to state 131
-- On termseq shift to state 143
-- On term shift to state 139
-- On netermseq shift to state 142
## Reductions:
-- On RPAREN
--   reduce production termseq ->

State 128:
## Known stack suffix:
## IDENT
## LR(1) items:
term -> IDENT . LPAREN termseq RPAREN [ WHERE WEDGE THEN SEMI RPAREN RED RBRACKET OTHERWISE IN EQUIVEQ EQUIV EQUAL EOF ELSE DOT COMMA BAR ]
term -> IDENT . [ WHERE WEDGE THEN SEMI RPAREN RED RBRACKET OTHERWISE IN EQUIVEQ EQUIV EQUAL EOF ELSE DOT COMMA BAR ]
## Transitions:
-- On LPAREN shift to state 129
## Reductions:
-- On WHERE WEDGE THEN SEMI RPAREN RED RBRACKET OTHERWISE IN EQUIVEQ EQUIV EQUAL EOF ELSE DOT COMMA BAR
--   reduce production term -> IDENT

State 129:
## Known stack suffix:
## IDENT LPAREN
## LR(1) items:
term -> IDENT LPAREN . termseq RPAREN [ WHERE WEDGE THEN SEMI RPAREN RED RBRACKET OTHERWISE IN EQUIVEQ EQUIV EQUAL EOF ELSE DOT DIFF COMMA BAR ]
## Transitions:
-- On LPAREN shift to state 127
-- On IDENT shift to state 128
-- On FAIL shift to state 130
-- On CHOICE shift to state 131
-- On termseq shift to state 137
-- On term shift to state 139
-- On netermseq shift to state 142
## Reductions:
-- On RPAREN
--   reduce production termseq ->

State 130:
## Known stack suffix:
## FAIL
## LR(1) items:
term -> FAIL . [ WHERE WEDGE THEN SEMI RPAREN RED RBRACKET OTHERWISE IN EQUIVEQ EQUIV EQUAL EOF ELSE DOT DIFF COMMA BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production term -> FAIL

State 131:
## Known stack suffix:
## CHOICE
## LR(1) items:
term -> CHOICE . LBRACKET term COMMA term RBRACKET [ WHERE WEDGE THEN SEMI RPAREN RED RBRACKET OTHERWISE IN EQUIVEQ EQUIV EQUAL EOF ELSE DOT DIFF COMMA BAR ]
## Transitions:
-- On LBRACKET shift to state 132
## Reductions:

State 132:
## Known stack suffix:
## CHOICE LBRACKET
## LR(1) items:
term -> CHOICE LBRACKET . term COMMA term RBRACKET [ WHERE WEDGE THEN SEMI RPAREN RED RBRACKET OTHERWISE IN EQUIVEQ EQUIV EQUAL EOF ELSE DOT DIFF COMMA BAR ]
## Transitions:
-- On LPAREN shift to state 127
-- On IDENT shift to state 128
-- On FAIL shift to state 130
-- On CHOICE shift to state 131
-- On term shift to state 133
## Reductions:

State 133:
## Known stack suffix:
## CHOICE LBRACKET term
## LR(1) items:
term -> CHOICE LBRACKET term . COMMA term RBRACKET [ WHERE WEDGE THEN SEMI RPAREN RED RBRACKET OTHERWISE IN EQUIVEQ EQUIV EQUAL EOF ELSE DOT DIFF COMMA BAR ]
## Transitions:
-- On COMMA shift to state 134
## Reductions:

State 134:
## Known stack suffix:
## CHOICE LBRACKET term COMMA
## LR(1) items:
term -> CHOICE LBRACKET term COMMA . term RBRACKET [ WHERE WEDGE THEN SEMI RPAREN RED RBRACKET OTHERWISE IN EQUIVEQ EQUIV EQUAL EOF ELSE DOT DIFF COMMA BAR ]
## Transitions:
-- On LPAREN shift to state 127
-- On IDENT shift to state 128
-- On FAIL shift to state 130
-- On CHOICE shift to state 131
-- On term shift to state 135
## Reductions:

State 135:
## Known stack suffix:
## CHOICE LBRACKET term COMMA term
## LR(1) items:
term -> CHOICE LBRACKET term COMMA term . RBRACKET [ WHERE WEDGE THEN SEMI RPAREN RED RBRACKET OTHERWISE IN EQUIVEQ EQUIV EQUAL EOF ELSE DOT DIFF COMMA BAR ]
## Transitions:
-- On RBRACKET shift to state 136
## Reductions:

State 136:
## Known stack suffix:
## CHOICE LBRACKET term COMMA term RBRACKET
## LR(1) items:
term -> CHOICE LBRACKET term COMMA term RBRACKET . [ WHERE WEDGE THEN SEMI RPAREN RED RBRACKET OTHERWISE IN EQUIVEQ EQUIV EQUAL EOF ELSE DOT DIFF COMMA BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production term -> CHOICE LBRACKET term COMMA term RBRACKET

State 137:
## Known stack suffix:
## IDENT LPAREN termseq
## LR(1) items:
term -> IDENT LPAREN termseq . RPAREN [ WHERE WEDGE THEN SEMI RPAREN RED RBRACKET OTHERWISE IN EQUIVEQ EQUIV EQUAL EOF ELSE DOT DIFF COMMA BAR ]
## Transitions:
-- On RPAREN shift to state 138
## Reductions:

State 138:
## Known stack suffix:
## IDENT LPAREN termseq RPAREN
## LR(1) items:
term -> IDENT LPAREN termseq RPAREN . [ WHERE WEDGE THEN SEMI RPAREN RED RBRACKET OTHERWISE IN EQUIVEQ EQUIV EQUAL EOF ELSE DOT DIFF COMMA BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production term -> IDENT LPAREN termseq RPAREN

State 139:
## Known stack suffix:
## term
## LR(1) items:
netermseq -> term . COMMA netermseq [ WHERE WEDGE THEN SEMI RPAREN RED IN EQUIVEQ EQUIV EOF ELSE DOT BAR ]
netermseq -> term . [ WHERE WEDGE THEN SEMI RPAREN RED IN EQUIVEQ EQUIV EOF ELSE DOT BAR ]
## Transitions:
-- On COMMA shift to state 140
## Reductions:
-- On WHERE WEDGE THEN SEMI RPAREN RED IN EQUIVEQ EQUIV EOF ELSE DOT BAR
--   reduce production netermseq -> term

State 140:
## Known stack suffix:
## term COMMA
## LR(1) items:
netermseq -> term COMMA . netermseq [ WHERE WEDGE THEN SEMI RPAREN RED IN EQUIVEQ EQUIV EOF ELSE DOT BAR ]
## Transitions:
-- On LPAREN shift to state 127
-- On IDENT shift to state 128
-- On FAIL shift to state 130
-- On CHOICE shift to state 131
-- On term shift to state 139
-- On netermseq shift to state 141
## Reductions:

State 141:
## Known stack suffix:
## term COMMA netermseq
## LR(1) items:
netermseq -> term COMMA netermseq . [ WHERE WEDGE THEN SEMI RPAREN RED IN EQUIVEQ EQUIV EOF ELSE DOT BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production netermseq -> term COMMA netermseq

State 142:
## Known stack suffix:
## netermseq
## LR(1) items:
termseq -> netermseq . [ WHERE WEDGE THEN SEMI RPAREN RED IN EQUIVEQ EQUIV DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production termseq -> netermseq

State 143:
## Known stack suffix:
## LPAREN termseq
## LR(1) items:
term -> LPAREN termseq . RPAREN [ WHERE WEDGE THEN SEMI RPAREN RED RBRACKET OTHERWISE IN EQUIVEQ EQUIV EQUAL EOF ELSE DOT DIFF COMMA BAR ]
## Transitions:
-- On RPAREN shift to state 144
## Reductions:

State 144:
## Known stack suffix:
## LPAREN termseq RPAREN
## LR(1) items:
term -> LPAREN termseq RPAREN . [ WHERE WEDGE THEN SEMI RPAREN RED RBRACKET OTHERWISE IN EQUIVEQ EQUIV EQUAL EOF ELSE DOT DIFF COMMA BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production term -> LPAREN termseq RPAREN

State 145:
## Known stack suffix:
## IDENT AMONG LPAREN netermseq
## LR(1) items:
ni -> IDENT AMONG LPAREN netermseq . RPAREN [ DOT COMMA ]
## Transitions:
-- On RPAREN shift to state 146
## Reductions:

State 146:
## Known stack suffix:
## IDENT AMONG LPAREN netermseq RPAREN
## LR(1) items:
ni -> IDENT AMONG LPAREN netermseq RPAREN . [ DOT COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ni -> IDENT AMONG LPAREN netermseq RPAREN

State 147:
## Known stack suffix:
## NONINTERF niseq
## LR(1) items:
lib -> NONINTERF niseq . DOT lib [ PROCESS ]
## Transitions:
-- On DOT shift to state 148
## Reductions:

State 148:
## Known stack suffix:
## NONINTERF niseq DOT
## LR(1) items:
lib -> NONINTERF niseq DOT . lib [ PROCESS ]
## Transitions:
-- On WEAKSECRET shift to state 1
-- On QUERY shift to state 4
-- On PRIVATE shift to state 48
-- On PREDICATE shift to state 49
-- On PARAM shift to state 54
-- On NOUNIF shift to state 59
-- On NOT shift to state 107
-- On NONINTERF shift to state 123
-- On LET shift to state 149
-- On EQUATION shift to state 259
-- On ELIMTRUE shift to state 267
-- On DATA shift to state 277
-- On CLAUSES shift to state 282
-- On CELL shift to state 295
-- On privateopt shift to state 301
-- On lib shift to state 355
## Reductions:
-- On PROCESS
--   reduce production lib ->
-- On REDUCTION FUN FREE
--   reduce production privateopt ->

State 149:
## Known stack suffix:
## LET
## LR(1) items:
lib -> LET . IDENT EQUAL process DOT lib [ PROCESS ]
## Transitions:
-- On IDENT shift to state 150
## Reductions:

State 150:
## Known stack suffix:
## LET IDENT
## LR(1) items:
lib -> LET IDENT . EQUAL process DOT lib [ PROCESS ]
## Transitions:
-- On EQUAL shift to state 151
## Reductions:

State 151:
## Known stack suffix:
## LET IDENT EQUAL
## LR(1) items:
lib -> LET IDENT EQUAL . process DOT lib [ PROCESS ]
## Transitions:
-- On UNLOCK shift to state 152
-- On REPL shift to state 157
-- On READ shift to state 158
-- On PHASE shift to state 175
-- On OUT shift to state 178
-- On NEW shift to state 185
-- On LPAREN shift to state 188
-- On LOCK shift to state 189
-- On LET shift to state 194
-- On INT shift to state 200
-- On IN shift to state 201
-- On IF shift to state 208
-- On IDENT shift to state 219
-- On EVENT shift to state 220
-- On BARRIER shift to state 226
-- On process shift to state 257
-- On neidentseq shift to state 238
## Reductions:

State 152:
## Known stack suffix:
## UNLOCK
## LR(1) items:
process -> UNLOCK . LPAREN neidentseq RPAREN optprocess [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
-- On LPAREN shift to state 153
## Reductions:

State 153:
## Known stack suffix:
## UNLOCK LPAREN
## LR(1) items:
process -> UNLOCK LPAREN . neidentseq RPAREN optprocess [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
-- On IDENT shift to state 8
-- On neidentseq shift to state 154
## Reductions:

State 154:
## Known stack suffix:
## UNLOCK LPAREN neidentseq
## LR(1) items:
process -> UNLOCK LPAREN neidentseq . RPAREN optprocess [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
-- On RPAREN shift to state 155
## Reductions:

State 155:
## Known stack suffix:
## UNLOCK LPAREN neidentseq RPAREN
## LR(1) items:
process -> UNLOCK LPAREN neidentseq RPAREN . optprocess [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
-- On SEMI shift to state 156
-- On optprocess shift to state 256
## Reductions:
-- On RPAREN EOF ELSE DOT BAR
--   reduce production optprocess ->

State 156:
## Known stack suffix:
## SEMI
## LR(1) items:
optprocess -> SEMI . process [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
-- On UNLOCK shift to state 152
-- On REPL shift to state 157
-- On READ shift to state 158
-- On PHASE shift to state 175
-- On OUT shift to state 178
-- On NEW shift to state 185
-- On LPAREN shift to state 188
-- On LOCK shift to state 189
-- On LET shift to state 194
-- On INT shift to state 200
-- On IN shift to state 201
-- On IF shift to state 208
-- On IDENT shift to state 219
-- On EVENT shift to state 220
-- On BARRIER shift to state 226
-- On process shift to state 255
-- On neidentseq shift to state 238
## Reductions:

State 157:
## Known stack suffix:
## REPL
## LR(1) items:
process -> REPL . process [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
-- On UNLOCK shift to state 152
-- On REPL shift to state 157
-- On READ shift to state 158
-- On PHASE shift to state 175
-- On OUT shift to state 178
-- On NEW shift to state 185
-- On LPAREN shift to state 188
-- On LOCK shift to state 189
-- On LET shift to state 194
-- On INT shift to state 200
-- On IN shift to state 201
-- On IF shift to state 208
-- On IDENT shift to state 219
-- On EVENT shift to state 220
-- On BARRIER shift to state 226
-- On process shift to state 254
-- On neidentseq shift to state 238
## Reductions:

State 158:
## Known stack suffix:
## READ
## LR(1) items:
process -> READ . neidentseq AS patternseq optprocess [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
-- On IDENT shift to state 8
-- On neidentseq shift to state 159
## Reductions:

State 159:
## Known stack suffix:
## READ neidentseq
## LR(1) items:
process -> READ neidentseq . AS patternseq optprocess [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
-- On AS shift to state 160
## Reductions:

State 160:
## Known stack suffix:
## READ neidentseq AS
## LR(1) items:
process -> READ neidentseq AS . patternseq optprocess [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
-- On LPAREN shift to state 161
-- On IDENT shift to state 162
-- On EQUAL shift to state 164
-- On patternseq shift to state 173
-- On pattern shift to state 168
## Reductions:

State 161:
## Known stack suffix:
## LPAREN
## LR(1) items:
pattern -> LPAREN . patternseq RPAREN [ SEMI RPAREN EQUAL EOF ELSE DOT COMMA BAR ]
## Transitions:
-- On LPAREN shift to state 161
-- On IDENT shift to state 162
-- On EQUAL shift to state 164
-- On patternseq shift to state 171
-- On pattern shift to state 168
## Reductions:

State 162:
## Known stack suffix:
## IDENT
## LR(1) items:
pattern -> IDENT . [ SEMI RPAREN EOF ELSE DOT COMMA BAR ]
pattern -> IDENT . LPAREN patternseq RPAREN [ SEMI RPAREN EOF ELSE DOT COMMA BAR ]
## Transitions:
-- On LPAREN shift to state 163
## Reductions:
-- On SEMI RPAREN EOF ELSE DOT COMMA BAR
--   reduce production pattern -> IDENT

State 163:
## Known stack suffix:
## IDENT LPAREN
## LR(1) items:
pattern -> IDENT LPAREN . patternseq RPAREN [ SEMI RPAREN EQUAL EOF ELSE DOT COMMA BAR ]
## Transitions:
-- On LPAREN shift to state 161
-- On IDENT shift to state 162
-- On EQUAL shift to state 164
-- On patternseq shift to state 166
-- On pattern shift to state 168
## Reductions:

State 164:
## Known stack suffix:
## EQUAL
## LR(1) items:
pattern -> EQUAL . term [ SEMI RPAREN EQUAL EOF ELSE DOT COMMA BAR ]
## Transitions:
-- On LPAREN shift to state 127
-- On IDENT shift to state 128
-- On FAIL shift to state 130
-- On CHOICE shift to state 131
-- On term shift to state 165
## Reductions:

State 165:
## Known stack suffix:
## EQUAL term
## LR(1) items:
pattern -> EQUAL term . [ SEMI RPAREN EQUAL EOF ELSE DOT COMMA BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pattern -> EQUAL term

State 166:
## Known stack suffix:
## IDENT LPAREN patternseq
## LR(1) items:
pattern -> IDENT LPAREN patternseq . RPAREN [ SEMI RPAREN EQUAL EOF ELSE DOT COMMA BAR ]
## Transitions:
-- On RPAREN shift to state 167
## Reductions:

State 167:
## Known stack suffix:
## IDENT LPAREN patternseq RPAREN
## LR(1) items:
pattern -> IDENT LPAREN patternseq RPAREN . [ SEMI RPAREN EQUAL EOF ELSE DOT COMMA BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pattern -> IDENT LPAREN patternseq RPAREN

State 168:
## Known stack suffix:
## pattern
## LR(1) items:
patternseq -> pattern . COMMA patternseq [ SEMI RPAREN EOF ELSE DOT BAR ]
patternseq -> pattern . [ SEMI RPAREN EOF ELSE DOT BAR ]
## Transitions:
-- On COMMA shift to state 169
## Reductions:
-- On SEMI RPAREN EOF ELSE DOT BAR
--   reduce production patternseq -> pattern

State 169:
## Known stack suffix:
## pattern COMMA
## LR(1) items:
patternseq -> pattern COMMA . patternseq [ SEMI RPAREN EOF ELSE DOT BAR ]
## Transitions:
-- On LPAREN shift to state 161
-- On IDENT shift to state 162
-- On EQUAL shift to state 164
-- On patternseq shift to state 170
-- On pattern shift to state 168
## Reductions:

State 170:
## Known stack suffix:
## pattern COMMA patternseq
## LR(1) items:
patternseq -> pattern COMMA patternseq . [ SEMI RPAREN EOF ELSE DOT BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production patternseq -> pattern COMMA patternseq

State 171:
## Known stack suffix:
## LPAREN patternseq
## LR(1) items:
pattern -> LPAREN patternseq . RPAREN [ SEMI RPAREN EQUAL EOF ELSE DOT COMMA BAR ]
## Transitions:
-- On RPAREN shift to state 172
## Reductions:

State 172:
## Known stack suffix:
## LPAREN patternseq RPAREN
## LR(1) items:
pattern -> LPAREN patternseq RPAREN . [ SEMI RPAREN EQUAL EOF ELSE DOT COMMA BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pattern -> LPAREN patternseq RPAREN

State 173:
## Known stack suffix:
## READ neidentseq AS patternseq
## LR(1) items:
process -> READ neidentseq AS patternseq . optprocess [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
-- On SEMI shift to state 156
-- On optprocess shift to state 174
## Reductions:
-- On RPAREN EOF ELSE DOT BAR
--   reduce production optprocess ->

State 174:
## Known stack suffix:
## READ neidentseq AS patternseq optprocess
## LR(1) items:
process -> READ neidentseq AS patternseq optprocess . [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production process -> READ neidentseq AS patternseq optprocess

State 175:
## Known stack suffix:
## PHASE
## LR(1) items:
process -> PHASE . INT optprocess [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
-- On INT shift to state 176
## Reductions:

State 176:
## Known stack suffix:
## PHASE INT
## LR(1) items:
process -> PHASE INT . optprocess [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
-- On SEMI shift to state 156
-- On optprocess shift to state 177
## Reductions:
-- On RPAREN EOF ELSE DOT BAR
--   reduce production optprocess ->

State 177:
## Known stack suffix:
## PHASE INT optprocess
## LR(1) items:
process -> PHASE INT optprocess . [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production process -> PHASE INT optprocess

State 178:
## Known stack suffix:
## OUT
## LR(1) items:
process -> OUT . LPAREN term COMMA term RPAREN optprocess [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
-- On LPAREN shift to state 179
## Reductions:

State 179:
## Known stack suffix:
## OUT LPAREN
## LR(1) items:
process -> OUT LPAREN . term COMMA term RPAREN optprocess [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
-- On LPAREN shift to state 127
-- On IDENT shift to state 128
-- On FAIL shift to state 130
-- On CHOICE shift to state 131
-- On term shift to state 180
## Reductions:

State 180:
## Known stack suffix:
## OUT LPAREN term
## LR(1) items:
process -> OUT LPAREN term . COMMA term RPAREN optprocess [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
-- On COMMA shift to state 181
## Reductions:

State 181:
## Known stack suffix:
## OUT LPAREN term COMMA
## LR(1) items:
process -> OUT LPAREN term COMMA . term RPAREN optprocess [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
-- On LPAREN shift to state 127
-- On IDENT shift to state 128
-- On FAIL shift to state 130
-- On CHOICE shift to state 131
-- On term shift to state 182
## Reductions:

State 182:
## Known stack suffix:
## OUT LPAREN term COMMA term
## LR(1) items:
process -> OUT LPAREN term COMMA term . RPAREN optprocess [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
-- On RPAREN shift to state 183
## Reductions:

State 183:
## Known stack suffix:
## OUT LPAREN term COMMA term RPAREN
## LR(1) items:
process -> OUT LPAREN term COMMA term RPAREN . optprocess [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
-- On SEMI shift to state 156
-- On optprocess shift to state 184
## Reductions:
-- On RPAREN EOF ELSE DOT BAR
--   reduce production optprocess ->

State 184:
## Known stack suffix:
## OUT LPAREN term COMMA term RPAREN optprocess
## LR(1) items:
process -> OUT LPAREN term COMMA term RPAREN optprocess . [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production process -> OUT LPAREN term COMMA term RPAREN optprocess

State 185:
## Known stack suffix:
## NEW
## LR(1) items:
process -> NEW . IDENT optprocess [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
-- On IDENT shift to state 186
## Reductions:

State 186:
## Known stack suffix:
## NEW IDENT
## LR(1) items:
process -> NEW IDENT . optprocess [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
-- On SEMI shift to state 156
-- On optprocess shift to state 187
## Reductions:
-- On RPAREN EOF ELSE DOT BAR
--   reduce production optprocess ->

State 187:
## Known stack suffix:
## NEW IDENT optprocess
## LR(1) items:
process -> NEW IDENT optprocess . [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production process -> NEW IDENT optprocess

State 188:
## Known stack suffix:
## LPAREN
## LR(1) items:
process -> LPAREN . process RPAREN [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
-- On UNLOCK shift to state 152
-- On REPL shift to state 157
-- On READ shift to state 158
-- On PHASE shift to state 175
-- On OUT shift to state 178
-- On NEW shift to state 185
-- On LPAREN shift to state 188
-- On LOCK shift to state 189
-- On LET shift to state 194
-- On INT shift to state 200
-- On IN shift to state 201
-- On IF shift to state 208
-- On IDENT shift to state 219
-- On EVENT shift to state 220
-- On BARRIER shift to state 226
-- On process shift to state 252
-- On neidentseq shift to state 238
## Reductions:

State 189:
## Known stack suffix:
## LOCK
## LR(1) items:
process -> LOCK . LPAREN neidentseq RPAREN optprocess [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
-- On LPAREN shift to state 190
## Reductions:

State 190:
## Known stack suffix:
## LOCK LPAREN
## LR(1) items:
process -> LOCK LPAREN . neidentseq RPAREN optprocess [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
-- On IDENT shift to state 8
-- On neidentseq shift to state 191
## Reductions:

State 191:
## Known stack suffix:
## LOCK LPAREN neidentseq
## LR(1) items:
process -> LOCK LPAREN neidentseq . RPAREN optprocess [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
-- On RPAREN shift to state 192
## Reductions:

State 192:
## Known stack suffix:
## LOCK LPAREN neidentseq RPAREN
## LR(1) items:
process -> LOCK LPAREN neidentseq RPAREN . optprocess [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
-- On SEMI shift to state 156
-- On optprocess shift to state 193
## Reductions:
-- On RPAREN EOF ELSE DOT BAR
--   reduce production optprocess ->

State 193:
## Known stack suffix:
## LOCK LPAREN neidentseq RPAREN optprocess
## LR(1) items:
process -> LOCK LPAREN neidentseq RPAREN optprocess . [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production process -> LOCK LPAREN neidentseq RPAREN optprocess

State 194:
## Known stack suffix:
## LET
## LR(1) items:
process -> LET . pattern EQUAL term IN process [ RPAREN EOF ELSE DOT BAR ]
process -> LET . pattern EQUAL term IN process ELSE process [ RPAREN EOF ELSE DOT BAR ]
process -> LET . neidentseq SUCHTHAT fact IN process [ RPAREN EOF ELSE DOT BAR ]
process -> LET . neidentseq SUCHTHAT fact IN process ELSE process [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
-- On LPAREN shift to state 161
-- On IDENT shift to state 195
-- On EQUAL shift to state 164
-- On pattern shift to state 196
-- On neidentseq shift to state 245
## Reductions:

State 195:
## Known stack suffix:
## IDENT
## LR(1) items:
neidentseq -> IDENT . COMMA neidentseq [ SUCHTHAT ]
neidentseq -> IDENT . [ SUCHTHAT ]
pattern -> IDENT . [ EQUAL ]
pattern -> IDENT . LPAREN patternseq RPAREN [ EQUAL ]
## Transitions:
-- On LPAREN shift to state 163
-- On COMMA shift to state 9
## Reductions:
-- On SUCHTHAT
--   reduce production neidentseq -> IDENT
-- On EQUAL
--   reduce production pattern -> IDENT

State 196:
## Known stack suffix:
## LET pattern
## LR(1) items:
process -> LET pattern . EQUAL term IN process [ RPAREN EOF ELSE DOT BAR ]
process -> LET pattern . EQUAL term IN process ELSE process [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
-- On EQUAL shift to state 197
## Reductions:

State 197:
## Known stack suffix:
## LET pattern EQUAL
## LR(1) items:
process -> LET pattern EQUAL . term IN process [ RPAREN EOF ELSE DOT BAR ]
process -> LET pattern EQUAL . term IN process ELSE process [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
-- On LPAREN shift to state 127
-- On IDENT shift to state 128
-- On FAIL shift to state 130
-- On CHOICE shift to state 131
-- On term shift to state 198
## Reductions:

State 198:
## Known stack suffix:
## LET pattern EQUAL term
## LR(1) items:
process -> LET pattern EQUAL term . IN process [ RPAREN EOF ELSE DOT BAR ]
process -> LET pattern EQUAL term . IN process ELSE process [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
-- On IN shift to state 199
## Reductions:

State 199:
## Known stack suffix:
## LET pattern EQUAL term IN
## LR(1) items:
process -> LET pattern EQUAL term IN . process [ RPAREN EOF ELSE DOT BAR ]
process -> LET pattern EQUAL term IN . process ELSE process [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
-- On UNLOCK shift to state 152
-- On REPL shift to state 157
-- On READ shift to state 158
-- On PHASE shift to state 175
-- On OUT shift to state 178
-- On NEW shift to state 185
-- On LPAREN shift to state 188
-- On LOCK shift to state 189
-- On LET shift to state 194
-- On INT shift to state 200
-- On IN shift to state 201
-- On IF shift to state 208
-- On IDENT shift to state 219
-- On EVENT shift to state 220
-- On BARRIER shift to state 226
-- On process shift to state 242
-- On neidentseq shift to state 238
## Reductions:

State 200:
## Known stack suffix:
## INT
## LR(1) items:
process -> INT . [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production process -> INT

State 201:
## Known stack suffix:
## IN
## LR(1) items:
process -> IN . LPAREN term COMMA pattern RPAREN optprocess [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
-- On LPAREN shift to state 202
## Reductions:

State 202:
## Known stack suffix:
## IN LPAREN
## LR(1) items:
process -> IN LPAREN . term COMMA pattern RPAREN optprocess [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
-- On LPAREN shift to state 127
-- On IDENT shift to state 128
-- On FAIL shift to state 130
-- On CHOICE shift to state 131
-- On term shift to state 203
## Reductions:

State 203:
## Known stack suffix:
## IN LPAREN term
## LR(1) items:
process -> IN LPAREN term . COMMA pattern RPAREN optprocess [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
-- On COMMA shift to state 204
## Reductions:

State 204:
## Known stack suffix:
## IN LPAREN term COMMA
## LR(1) items:
process -> IN LPAREN term COMMA . pattern RPAREN optprocess [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
-- On LPAREN shift to state 161
-- On IDENT shift to state 162
-- On EQUAL shift to state 164
-- On pattern shift to state 205
## Reductions:

State 205:
## Known stack suffix:
## IN LPAREN term COMMA pattern
## LR(1) items:
process -> IN LPAREN term COMMA pattern . RPAREN optprocess [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
-- On RPAREN shift to state 206
## Reductions:

State 206:
## Known stack suffix:
## IN LPAREN term COMMA pattern RPAREN
## LR(1) items:
process -> IN LPAREN term COMMA pattern RPAREN . optprocess [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
-- On SEMI shift to state 156
-- On optprocess shift to state 207
## Reductions:
-- On RPAREN EOF ELSE DOT BAR
--   reduce production optprocess ->

State 207:
## Known stack suffix:
## IN LPAREN term COMMA pattern RPAREN optprocess
## LR(1) items:
process -> IN LPAREN term COMMA pattern RPAREN optprocess . [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production process -> IN LPAREN term COMMA pattern RPAREN optprocess

State 208:
## Known stack suffix:
## IF
## LR(1) items:
process -> IF . fact THEN process ELSE process [ RPAREN EOF ELSE DOT BAR ]
process -> IF . fact THEN process [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
-- On LPAREN shift to state 127
-- On IDENT shift to state 209
-- On FAIL shift to state 130
-- On CHOICE shift to state 131
-- On term shift to state 212
-- On fact shift to state 217
## Reductions:

State 209:
## Known stack suffix:
## IDENT
## LR(1) items:
fact -> IDENT . COLON termseq [ WHERE WEDGE THEN SEMI RED IN EQUIVEQ EQUIV DOT ]
term -> IDENT . LPAREN termseq RPAREN [ EQUAL DIFF ]
term -> IDENT . [ EQUAL DIFF ]
## Transitions:
-- On LPAREN shift to state 129
-- On COLON shift to state 210
## Reductions:
-- On EQUAL DIFF
--   reduce production term -> IDENT

State 210:
## Known stack suffix:
## IDENT COLON
## LR(1) items:
fact -> IDENT COLON . termseq [ WHERE WEDGE THEN SEMI RED IN EQUIVEQ EQUIV DOT ]
## Transitions:
-- On LPAREN shift to state 127
-- On IDENT shift to state 128
-- On FAIL shift to state 130
-- On CHOICE shift to state 131
-- On termseq shift to state 211
-- On term shift to state 139
-- On netermseq shift to state 142
## Reductions:
-- On WHERE WEDGE THEN SEMI RED IN EQUIVEQ EQUIV DOT
--   reduce production termseq ->

State 211:
## Known stack suffix:
## IDENT COLON termseq
## LR(1) items:
fact -> IDENT COLON termseq . [ WHERE WEDGE THEN SEMI RED IN EQUIVEQ EQUIV DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production fact -> IDENT COLON termseq

State 212:
## Known stack suffix:
## term
## LR(1) items:
fact -> term . DIFF term [ WHERE WEDGE THEN SEMI RED IN EQUIVEQ EQUIV DOT ]
fact -> term . EQUAL term [ WHERE WEDGE THEN SEMI RED IN EQUIVEQ EQUIV DOT ]
## Transitions:
-- On EQUAL shift to state 213
-- On DIFF shift to state 215
## Reductions:

State 213:
## Known stack suffix:
## term EQUAL
## LR(1) items:
fact -> term EQUAL . term [ WHERE WEDGE THEN SEMI RED IN EQUIVEQ EQUIV DOT ]
## Transitions:
-- On LPAREN shift to state 127
-- On IDENT shift to state 128
-- On FAIL shift to state 130
-- On CHOICE shift to state 131
-- On term shift to state 214
## Reductions:

State 214:
## Known stack suffix:
## term EQUAL term
## LR(1) items:
fact -> term EQUAL term . [ WHERE WEDGE THEN SEMI RED IN EQUIVEQ EQUIV DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production fact -> term EQUAL term

State 215:
## Known stack suffix:
## term DIFF
## LR(1) items:
fact -> term DIFF . term [ WHERE WEDGE THEN SEMI RED IN EQUIVEQ EQUIV DOT ]
## Transitions:
-- On LPAREN shift to state 127
-- On IDENT shift to state 128
-- On FAIL shift to state 130
-- On CHOICE shift to state 131
-- On term shift to state 216
## Reductions:

State 216:
## Known stack suffix:
## term DIFF term
## LR(1) items:
fact -> term DIFF term . [ WHERE WEDGE THEN SEMI RED IN EQUIVEQ EQUIV DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production fact -> term DIFF term

State 217:
## Known stack suffix:
## IF fact
## LR(1) items:
process -> IF fact . THEN process ELSE process [ RPAREN EOF ELSE DOT BAR ]
process -> IF fact . THEN process [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
-- On THEN shift to state 218
## Reductions:

State 218:
## Known stack suffix:
## IF fact THEN
## LR(1) items:
process -> IF fact THEN . process ELSE process [ RPAREN EOF ELSE DOT BAR ]
process -> IF fact THEN . process [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
-- On UNLOCK shift to state 152
-- On REPL shift to state 157
-- On READ shift to state 158
-- On PHASE shift to state 175
-- On OUT shift to state 178
-- On NEW shift to state 185
-- On LPAREN shift to state 188
-- On LOCK shift to state 189
-- On LET shift to state 194
-- On INT shift to state 200
-- On IN shift to state 201
-- On IF shift to state 208
-- On IDENT shift to state 219
-- On EVENT shift to state 220
-- On BARRIER shift to state 226
-- On process shift to state 233
-- On neidentseq shift to state 238
## Reductions:

State 219:
## Known stack suffix:
## IDENT
## LR(1) items:
neidentseq -> IDENT . COMMA neidentseq [ ASSIGN ]
neidentseq -> IDENT . [ ASSIGN ]
process -> IDENT . [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
-- On COMMA shift to state 9
## Reductions:
-- On ASSIGN
--   reduce production neidentseq -> IDENT
-- On RPAREN EOF ELSE DOT BAR
--   reduce production process -> IDENT

State 220:
## Known stack suffix:
## EVENT
## LR(1) items:
process -> EVENT . IDENT LPAREN termseq RPAREN optprocess [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
-- On IDENT shift to state 221
## Reductions:

State 221:
## Known stack suffix:
## EVENT IDENT
## LR(1) items:
process -> EVENT IDENT . LPAREN termseq RPAREN optprocess [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
-- On LPAREN shift to state 222
## Reductions:

State 222:
## Known stack suffix:
## EVENT IDENT LPAREN
## LR(1) items:
process -> EVENT IDENT LPAREN . termseq RPAREN optprocess [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
-- On LPAREN shift to state 127
-- On IDENT shift to state 128
-- On FAIL shift to state 130
-- On CHOICE shift to state 131
-- On termseq shift to state 223
-- On term shift to state 139
-- On netermseq shift to state 142
## Reductions:
-- On RPAREN
--   reduce production termseq ->

State 223:
## Known stack suffix:
## EVENT IDENT LPAREN termseq
## LR(1) items:
process -> EVENT IDENT LPAREN termseq . RPAREN optprocess [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
-- On RPAREN shift to state 224
## Reductions:

State 224:
## Known stack suffix:
## EVENT IDENT LPAREN termseq RPAREN
## LR(1) items:
process -> EVENT IDENT LPAREN termseq RPAREN . optprocess [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
-- On SEMI shift to state 156
-- On optprocess shift to state 225
## Reductions:
-- On RPAREN EOF ELSE DOT BAR
--   reduce production optprocess ->

State 225:
## Known stack suffix:
## EVENT IDENT LPAREN termseq RPAREN optprocess
## LR(1) items:
process -> EVENT IDENT LPAREN termseq RPAREN optprocess . [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production process -> EVENT IDENT LPAREN termseq RPAREN optprocess

State 226:
## Known stack suffix:
## BARRIER
## LR(1) items:
process -> BARRIER . INT optprocess [ RPAREN EOF ELSE DOT BAR ]
process -> BARRIER . INT LBRACKET IDENT RBRACKET optprocess [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
-- On INT shift to state 227
## Reductions:

State 227:
## Known stack suffix:
## BARRIER INT
## LR(1) items:
process -> BARRIER INT . optprocess [ RPAREN EOF ELSE DOT BAR ]
process -> BARRIER INT . LBRACKET IDENT RBRACKET optprocess [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
-- On SEMI shift to state 156
-- On LBRACKET shift to state 228
-- On optprocess shift to state 232
## Reductions:
-- On RPAREN EOF ELSE DOT BAR
--   reduce production optprocess ->

State 228:
## Known stack suffix:
## BARRIER INT LBRACKET
## LR(1) items:
process -> BARRIER INT LBRACKET . IDENT RBRACKET optprocess [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
-- On IDENT shift to state 229
## Reductions:

State 229:
## Known stack suffix:
## BARRIER INT LBRACKET IDENT
## LR(1) items:
process -> BARRIER INT LBRACKET IDENT . RBRACKET optprocess [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
-- On RBRACKET shift to state 230
## Reductions:

State 230:
## Known stack suffix:
## BARRIER INT LBRACKET IDENT RBRACKET
## LR(1) items:
process -> BARRIER INT LBRACKET IDENT RBRACKET . optprocess [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
-- On SEMI shift to state 156
-- On optprocess shift to state 231
## Reductions:
-- On RPAREN EOF ELSE DOT BAR
--   reduce production optprocess ->

State 231:
## Known stack suffix:
## BARRIER INT LBRACKET IDENT RBRACKET optprocess
## LR(1) items:
process -> BARRIER INT LBRACKET IDENT RBRACKET optprocess . [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production process -> BARRIER INT LBRACKET IDENT RBRACKET optprocess

State 232:
## Known stack suffix:
## BARRIER INT optprocess
## LR(1) items:
process -> BARRIER INT optprocess . [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production process -> BARRIER INT optprocess

State 233:
## Known stack suffix:
## IF fact THEN process
## LR(1) items:
process -> IF fact THEN process . ELSE process [ RPAREN EOF ELSE DOT BAR ]
process -> IF fact THEN process . [ RPAREN EOF ELSE DOT BAR ]
process -> process . BAR process [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
-- On ELSE shift to state 234
-- On BAR shift to state 236
## Reductions:
-- On RPAREN EOF DOT
--   reduce production process -> IF fact THEN process

State 234:
## Known stack suffix:
## IF fact THEN process ELSE
## LR(1) items:
process -> IF fact THEN process ELSE . process [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
-- On UNLOCK shift to state 152
-- On REPL shift to state 157
-- On READ shift to state 158
-- On PHASE shift to state 175
-- On OUT shift to state 178
-- On NEW shift to state 185
-- On LPAREN shift to state 188
-- On LOCK shift to state 189
-- On LET shift to state 194
-- On INT shift to state 200
-- On IN shift to state 201
-- On IF shift to state 208
-- On IDENT shift to state 219
-- On EVENT shift to state 220
-- On BARRIER shift to state 226
-- On process shift to state 235
-- On neidentseq shift to state 238
## Reductions:

State 235:
## Known stack suffix:
## IF fact THEN process ELSE process
## LR(1) items:
process -> IF fact THEN process ELSE process . [ RPAREN EOF ELSE DOT BAR ]
process -> process . BAR process [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
-- On BAR shift to state 236
## Reductions:
-- On RPAREN EOF ELSE DOT
--   reduce production process -> IF fact THEN process ELSE process

State 236:
## Known stack suffix:
## process BAR
## LR(1) items:
process -> process BAR . process [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
-- On UNLOCK shift to state 152
-- On REPL shift to state 157
-- On READ shift to state 158
-- On PHASE shift to state 175
-- On OUT shift to state 178
-- On NEW shift to state 185
-- On LPAREN shift to state 188
-- On LOCK shift to state 189
-- On LET shift to state 194
-- On INT shift to state 200
-- On IN shift to state 201
-- On IF shift to state 208
-- On IDENT shift to state 219
-- On EVENT shift to state 220
-- On BARRIER shift to state 226
-- On process shift to state 237
-- On neidentseq shift to state 238
## Reductions:

State 237:
## Known stack suffix:
## process BAR process
## LR(1) items:
process -> process . BAR process [ RPAREN EOF ELSE DOT BAR ]
process -> process BAR process . [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
-- On BAR shift to state 236
## Reductions:
-- On RPAREN EOF ELSE DOT
--   reduce production process -> process BAR process

State 238:
## Known stack suffix:
## neidentseq
## LR(1) items:
process -> neidentseq . ASSIGN netermseq optprocess [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
-- On ASSIGN shift to state 239
## Reductions:

State 239:
## Known stack suffix:
## neidentseq ASSIGN
## LR(1) items:
process -> neidentseq ASSIGN . netermseq optprocess [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
-- On LPAREN shift to state 127
-- On IDENT shift to state 128
-- On FAIL shift to state 130
-- On CHOICE shift to state 131
-- On term shift to state 139
-- On netermseq shift to state 240
## Reductions:

State 240:
## Known stack suffix:
## neidentseq ASSIGN netermseq
## LR(1) items:
process -> neidentseq ASSIGN netermseq . optprocess [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
-- On SEMI shift to state 156
-- On optprocess shift to state 241
## Reductions:
-- On RPAREN EOF ELSE DOT BAR
--   reduce production optprocess ->

State 241:
## Known stack suffix:
## neidentseq ASSIGN netermseq optprocess
## LR(1) items:
process -> neidentseq ASSIGN netermseq optprocess . [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production process -> neidentseq ASSIGN netermseq optprocess

State 242:
## Known stack suffix:
## LET pattern EQUAL term IN process
## LR(1) items:
process -> LET pattern EQUAL term IN process . [ RPAREN EOF ELSE DOT BAR ]
process -> LET pattern EQUAL term IN process . ELSE process [ RPAREN EOF ELSE DOT BAR ]
process -> process . BAR process [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
-- On ELSE shift to state 243
-- On BAR shift to state 236
## Reductions:
-- On RPAREN EOF DOT
--   reduce production process -> LET pattern EQUAL term IN process

State 243:
## Known stack suffix:
## LET pattern EQUAL term IN process ELSE
## LR(1) items:
process -> LET pattern EQUAL term IN process ELSE . process [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
-- On UNLOCK shift to state 152
-- On REPL shift to state 157
-- On READ shift to state 158
-- On PHASE shift to state 175
-- On OUT shift to state 178
-- On NEW shift to state 185
-- On LPAREN shift to state 188
-- On LOCK shift to state 189
-- On LET shift to state 194
-- On INT shift to state 200
-- On IN shift to state 201
-- On IF shift to state 208
-- On IDENT shift to state 219
-- On EVENT shift to state 220
-- On BARRIER shift to state 226
-- On process shift to state 244
-- On neidentseq shift to state 238
## Reductions:

State 244:
## Known stack suffix:
## LET pattern EQUAL term IN process ELSE process
## LR(1) items:
process -> LET pattern EQUAL term IN process ELSE process . [ RPAREN EOF ELSE DOT BAR ]
process -> process . BAR process [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
-- On BAR shift to state 236
## Reductions:
-- On RPAREN EOF ELSE DOT
--   reduce production process -> LET pattern EQUAL term IN process ELSE process

State 245:
## Known stack suffix:
## LET neidentseq
## LR(1) items:
process -> LET neidentseq . SUCHTHAT fact IN process [ RPAREN EOF ELSE DOT BAR ]
process -> LET neidentseq . SUCHTHAT fact IN process ELSE process [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
-- On SUCHTHAT shift to state 246
## Reductions:

State 246:
## Known stack suffix:
## LET neidentseq SUCHTHAT
## LR(1) items:
process -> LET neidentseq SUCHTHAT . fact IN process [ RPAREN EOF ELSE DOT BAR ]
process -> LET neidentseq SUCHTHAT . fact IN process ELSE process [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
-- On LPAREN shift to state 127
-- On IDENT shift to state 209
-- On FAIL shift to state 130
-- On CHOICE shift to state 131
-- On term shift to state 212
-- On fact shift to state 247
## Reductions:

State 247:
## Known stack suffix:
## LET neidentseq SUCHTHAT fact
## LR(1) items:
process -> LET neidentseq SUCHTHAT fact . IN process [ RPAREN EOF ELSE DOT BAR ]
process -> LET neidentseq SUCHTHAT fact . IN process ELSE process [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
-- On IN shift to state 248
## Reductions:

State 248:
## Known stack suffix:
## LET neidentseq SUCHTHAT fact IN
## LR(1) items:
process -> LET neidentseq SUCHTHAT fact IN . process [ RPAREN EOF ELSE DOT BAR ]
process -> LET neidentseq SUCHTHAT fact IN . process ELSE process [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
-- On UNLOCK shift to state 152
-- On REPL shift to state 157
-- On READ shift to state 158
-- On PHASE shift to state 175
-- On OUT shift to state 178
-- On NEW shift to state 185
-- On LPAREN shift to state 188
-- On LOCK shift to state 189
-- On LET shift to state 194
-- On INT shift to state 200
-- On IN shift to state 201
-- On IF shift to state 208
-- On IDENT shift to state 219
-- On EVENT shift to state 220
-- On BARRIER shift to state 226
-- On process shift to state 249
-- On neidentseq shift to state 238
## Reductions:

State 249:
## Known stack suffix:
## LET neidentseq SUCHTHAT fact IN process
## LR(1) items:
process -> LET neidentseq SUCHTHAT fact IN process . [ RPAREN EOF ELSE DOT BAR ]
process -> LET neidentseq SUCHTHAT fact IN process . ELSE process [ RPAREN EOF ELSE DOT BAR ]
process -> process . BAR process [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
-- On ELSE shift to state 250
-- On BAR shift to state 236
## Reductions:
-- On RPAREN EOF DOT
--   reduce production process -> LET neidentseq SUCHTHAT fact IN process

State 250:
## Known stack suffix:
## LET neidentseq SUCHTHAT fact IN process ELSE
## LR(1) items:
process -> LET neidentseq SUCHTHAT fact IN process ELSE . process [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
-- On UNLOCK shift to state 152
-- On REPL shift to state 157
-- On READ shift to state 158
-- On PHASE shift to state 175
-- On OUT shift to state 178
-- On NEW shift to state 185
-- On LPAREN shift to state 188
-- On LOCK shift to state 189
-- On LET shift to state 194
-- On INT shift to state 200
-- On IN shift to state 201
-- On IF shift to state 208
-- On IDENT shift to state 219
-- On EVENT shift to state 220
-- On BARRIER shift to state 226
-- On process shift to state 251
-- On neidentseq shift to state 238
## Reductions:

State 251:
## Known stack suffix:
## LET neidentseq SUCHTHAT fact IN process ELSE process
## LR(1) items:
process -> LET neidentseq SUCHTHAT fact IN process ELSE process . [ RPAREN EOF ELSE DOT BAR ]
process -> process . BAR process [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
-- On BAR shift to state 236
## Reductions:
-- On RPAREN EOF ELSE DOT
--   reduce production process -> LET neidentseq SUCHTHAT fact IN process ELSE process

State 252:
## Known stack suffix:
## LPAREN process
## LR(1) items:
process -> LPAREN process . RPAREN [ RPAREN EOF ELSE DOT BAR ]
process -> process . BAR process [ RPAREN BAR ]
## Transitions:
-- On RPAREN shift to state 253
-- On BAR shift to state 236
## Reductions:

State 253:
## Known stack suffix:
## LPAREN process RPAREN
## LR(1) items:
process -> LPAREN process RPAREN . [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production process -> LPAREN process RPAREN

State 254:
## Known stack suffix:
## REPL process
## LR(1) items:
process -> REPL process . [ RPAREN EOF ELSE DOT BAR ]
process -> process . BAR process [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production process -> REPL process

State 255:
## Known stack suffix:
## SEMI process
## LR(1) items:
optprocess -> SEMI process . [ RPAREN EOF ELSE DOT BAR ]
process -> process . BAR process [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
-- On BAR shift to state 236
## Reductions:
-- On RPAREN EOF ELSE DOT
--   reduce production optprocess -> SEMI process

State 256:
## Known stack suffix:
## UNLOCK LPAREN neidentseq RPAREN optprocess
## LR(1) items:
process -> UNLOCK LPAREN neidentseq RPAREN optprocess . [ RPAREN EOF ELSE DOT BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production process -> UNLOCK LPAREN neidentseq RPAREN optprocess

State 257:
## Known stack suffix:
## LET IDENT EQUAL process
## LR(1) items:
lib -> LET IDENT EQUAL process . DOT lib [ PROCESS ]
process -> process . BAR process [ DOT BAR ]
## Transitions:
-- On DOT shift to state 258
-- On BAR shift to state 236
## Reductions:

State 258:
## Known stack suffix:
## LET IDENT EQUAL process DOT
## LR(1) items:
lib -> LET IDENT EQUAL process DOT . lib [ PROCESS ]
## Transitions:
-- On WEAKSECRET shift to state 1
-- On QUERY shift to state 4
-- On PRIVATE shift to state 48
-- On PREDICATE shift to state 49
-- On PARAM shift to state 54
-- On NOUNIF shift to state 59
-- On NOT shift to state 107
-- On NONINTERF shift to state 123
-- On LET shift to state 149
-- On EQUATION shift to state 259
-- On ELIMTRUE shift to state 267
-- On DATA shift to state 277
-- On CLAUSES shift to state 282
-- On CELL shift to state 295
-- On privateopt shift to state 301
-- On lib shift to state 354
## Reductions:
-- On PROCESS
--   reduce production lib ->
-- On REDUCTION FUN FREE
--   reduce production privateopt ->

State 259:
## Known stack suffix:
## EQUATION
## LR(1) items:
lib -> EQUATION . eqlist DOT lib [ PROCESS ]
## Transitions:
-- On LPAREN shift to state 127
-- On IDENT shift to state 128
-- On FAIL shift to state 130
-- On CHOICE shift to state 131
-- On term shift to state 260
-- On eqlist shift to state 265
## Reductions:

State 260:
## Known stack suffix:
## term
## LR(1) items:
eqlist -> term . EQUAL term [ DOT ]
eqlist -> term . EQUAL term SEMI eqlist [ DOT ]
## Transitions:
-- On EQUAL shift to state 261
## Reductions:

State 261:
## Known stack suffix:
## term EQUAL
## LR(1) items:
eqlist -> term EQUAL . term [ DOT ]
eqlist -> term EQUAL . term SEMI eqlist [ DOT ]
## Transitions:
-- On LPAREN shift to state 127
-- On IDENT shift to state 128
-- On FAIL shift to state 130
-- On CHOICE shift to state 131
-- On term shift to state 262
## Reductions:

State 262:
## Known stack suffix:
## term EQUAL term
## LR(1) items:
eqlist -> term EQUAL term . [ DOT ]
eqlist -> term EQUAL term . SEMI eqlist [ DOT ]
## Transitions:
-- On SEMI shift to state 263
## Reductions:
-- On DOT
--   reduce production eqlist -> term EQUAL term

State 263:
## Known stack suffix:
## term EQUAL term SEMI
## LR(1) items:
eqlist -> term EQUAL term SEMI . eqlist [ DOT ]
## Transitions:
-- On LPAREN shift to state 127
-- On IDENT shift to state 128
-- On FAIL shift to state 130
-- On CHOICE shift to state 131
-- On term shift to state 260
-- On eqlist shift to state 264
## Reductions:

State 264:
## Known stack suffix:
## term EQUAL term SEMI eqlist
## LR(1) items:
eqlist -> term EQUAL term SEMI eqlist . [ DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production eqlist -> term EQUAL term SEMI eqlist

State 265:
## Known stack suffix:
## EQUATION eqlist
## LR(1) items:
lib -> EQUATION eqlist . DOT lib [ PROCESS ]
## Transitions:
-- On DOT shift to state 266
## Reductions:

State 266:
## Known stack suffix:
## EQUATION eqlist DOT
## LR(1) items:
lib -> EQUATION eqlist DOT . lib [ PROCESS ]
## Transitions:
-- On WEAKSECRET shift to state 1
-- On QUERY shift to state 4
-- On PRIVATE shift to state 48
-- On PREDICATE shift to state 49
-- On PARAM shift to state 54
-- On NOUNIF shift to state 59
-- On NOT shift to state 107
-- On NONINTERF shift to state 123
-- On LET shift to state 149
-- On EQUATION shift to state 259
-- On ELIMTRUE shift to state 267
-- On DATA shift to state 277
-- On CLAUSES shift to state 282
-- On CELL shift to state 295
-- On privateopt shift to state 301
-- On lib shift to state 353
## Reductions:
-- On PROCESS
--   reduce production lib ->
-- On REDUCTION FUN FREE
--   reduce production privateopt ->

State 267:
## Known stack suffix:
## ELIMTRUE
## LR(1) items:
lib -> ELIMTRUE . fact DOT lib [ PROCESS ]
lib -> ELIMTRUE . fact WHERE varmayfail CANTEXT FAIL DOT lib [ PROCESS ]
## Transitions:
-- On LPAREN shift to state 127
-- On IDENT shift to state 209
-- On FAIL shift to state 130
-- On CHOICE shift to state 131
-- On term shift to state 212
-- On fact shift to state 268
## Reductions:

State 268:
## Known stack suffix:
## ELIMTRUE fact
## LR(1) items:
lib -> ELIMTRUE fact . DOT lib [ PROCESS ]
lib -> ELIMTRUE fact . WHERE varmayfail CANTEXT FAIL DOT lib [ PROCESS ]
## Transitions:
-- On WHERE shift to state 269
-- On DOT shift to state 351
## Reductions:

State 269:
## Known stack suffix:
## ELIMTRUE fact WHERE
## LR(1) items:
lib -> ELIMTRUE fact WHERE . varmayfail CANTEXT FAIL DOT lib [ PROCESS ]
## Transitions:
-- On IDENT shift to state 270
-- On varmayfail shift to state 273
## Reductions:

State 270:
## Known stack suffix:
## IDENT
## LR(1) items:
varmayfail -> IDENT . COMMA varmayfail [ CANTEXT ]
varmayfail -> IDENT . [ CANTEXT ]
## Transitions:
-- On COMMA shift to state 271
## Reductions:
-- On CANTEXT
--   reduce production varmayfail -> IDENT

State 271:
## Known stack suffix:
## IDENT COMMA
## LR(1) items:
varmayfail -> IDENT COMMA . varmayfail [ CANTEXT ]
## Transitions:
-- On IDENT shift to state 270
-- On varmayfail shift to state 272
## Reductions:

State 272:
## Known stack suffix:
## IDENT COMMA varmayfail
## LR(1) items:
varmayfail -> IDENT COMMA varmayfail . [ CANTEXT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production varmayfail -> IDENT COMMA varmayfail

State 273:
## Known stack suffix:
## ELIMTRUE fact WHERE varmayfail
## LR(1) items:
lib -> ELIMTRUE fact WHERE varmayfail . CANTEXT FAIL DOT lib [ PROCESS ]
## Transitions:
-- On CANTEXT shift to state 274
## Reductions:

State 274:
## Known stack suffix:
## ELIMTRUE fact WHERE varmayfail CANTEXT
## LR(1) items:
lib -> ELIMTRUE fact WHERE varmayfail CANTEXT . FAIL DOT lib [ PROCESS ]
## Transitions:
-- On FAIL shift to state 275
## Reductions:

State 275:
## Known stack suffix:
## ELIMTRUE fact WHERE varmayfail CANTEXT FAIL
## LR(1) items:
lib -> ELIMTRUE fact WHERE varmayfail CANTEXT FAIL . DOT lib [ PROCESS ]
## Transitions:
-- On DOT shift to state 276
## Reductions:

State 276:
## Known stack suffix:
## ELIMTRUE fact WHERE varmayfail CANTEXT FAIL DOT
## LR(1) items:
lib -> ELIMTRUE fact WHERE varmayfail CANTEXT FAIL DOT . lib [ PROCESS ]
## Transitions:
-- On WEAKSECRET shift to state 1
-- On QUERY shift to state 4
-- On PRIVATE shift to state 48
-- On PREDICATE shift to state 49
-- On PARAM shift to state 54
-- On NOUNIF shift to state 59
-- On NOT shift to state 107
-- On NONINTERF shift to state 123
-- On LET shift to state 149
-- On EQUATION shift to state 259
-- On ELIMTRUE shift to state 267
-- On DATA shift to state 277
-- On CLAUSES shift to state 282
-- On CELL shift to state 295
-- On privateopt shift to state 301
-- On lib shift to state 350
## Reductions:
-- On PROCESS
--   reduce production lib ->
-- On REDUCTION FUN FREE
--   reduce production privateopt ->

State 277:
## Known stack suffix:
## DATA
## LR(1) items:
lib -> DATA . IDENT SLASH INT DOT lib [ PROCESS ]
## Transitions:
-- On IDENT shift to state 278
## Reductions:

State 278:
## Known stack suffix:
## DATA IDENT
## LR(1) items:
lib -> DATA IDENT . SLASH INT DOT lib [ PROCESS ]
## Transitions:
-- On SLASH shift to state 279
## Reductions:

State 279:
## Known stack suffix:
## DATA IDENT SLASH
## LR(1) items:
lib -> DATA IDENT SLASH . INT DOT lib [ PROCESS ]
## Transitions:
-- On INT shift to state 280
## Reductions:

State 280:
## Known stack suffix:
## DATA IDENT SLASH INT
## LR(1) items:
lib -> DATA IDENT SLASH INT . DOT lib [ PROCESS ]
## Transitions:
-- On DOT shift to state 281
## Reductions:

State 281:
## Known stack suffix:
## DATA IDENT SLASH INT DOT
## LR(1) items:
lib -> DATA IDENT SLASH INT DOT . lib [ PROCESS ]
## Transitions:
-- On WEAKSECRET shift to state 1
-- On QUERY shift to state 4
-- On PRIVATE shift to state 48
-- On PREDICATE shift to state 49
-- On PARAM shift to state 54
-- On NOUNIF shift to state 59
-- On NOT shift to state 107
-- On NONINTERF shift to state 123
-- On LET shift to state 149
-- On EQUATION shift to state 259
-- On ELIMTRUE shift to state 267
-- On DATA shift to state 277
-- On CLAUSES shift to state 282
-- On CELL shift to state 295
-- On privateopt shift to state 301
-- On lib shift to state 349
## Reductions:
-- On PROCESS
--   reduce production lib ->
-- On REDUCTION FUN FREE
--   reduce production privateopt ->

State 282:
## Known stack suffix:
## CLAUSES
## LR(1) items:
lib -> CLAUSES . clauses lib [ PROCESS ]
## Transitions:
-- On LPAREN shift to state 127
-- On IDENT shift to state 209
-- On FAIL shift to state 130
-- On CHOICE shift to state 131
-- On term shift to state 212
-- On factand shift to state 283
-- On fact shift to state 290
-- On clauses shift to state 294
-- On clausemayfail shift to state 340
-- On clause shift to state 343
## Reductions:

State 283:
## Known stack suffix:
## factand
## LR(1) items:
clause -> factand . RED fact [ WHERE SEMI DOT ]
clause -> factand . EQUIV fact [ WHERE SEMI DOT ]
clause -> factand . EQUIVEQ fact [ WHERE SEMI DOT ]
## Transitions:
-- On RED shift to state 284
-- On EQUIVEQ shift to state 286
-- On EQUIV shift to state 288
## Reductions:

State 284:
## Known stack suffix:
## factand RED
## LR(1) items:
clause -> factand RED . fact [ WHERE SEMI DOT ]
## Transitions:
-- On LPAREN shift to state 127
-- On IDENT shift to state 209
-- On FAIL shift to state 130
-- On CHOICE shift to state 131
-- On term shift to state 212
-- On fact shift to state 285
## Reductions:

State 285:
## Known stack suffix:
## factand RED fact
## LR(1) items:
clause -> factand RED fact . [ WHERE SEMI DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production clause -> factand RED fact

State 286:
## Known stack suffix:
## factand EQUIVEQ
## LR(1) items:
clause -> factand EQUIVEQ . fact [ WHERE SEMI DOT ]
## Transitions:
-- On LPAREN shift to state 127
-- On IDENT shift to state 209
-- On FAIL shift to state 130
-- On CHOICE shift to state 131
-- On term shift to state 212
-- On fact shift to state 287
## Reductions:

State 287:
## Known stack suffix:
## factand EQUIVEQ fact
## LR(1) items:
clause -> factand EQUIVEQ fact . [ WHERE SEMI DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production clause -> factand EQUIVEQ fact

State 288:
## Known stack suffix:
## factand EQUIV
## LR(1) items:
clause -> factand EQUIV . fact [ WHERE SEMI DOT ]
## Transitions:
-- On LPAREN shift to state 127
-- On IDENT shift to state 209
-- On FAIL shift to state 130
-- On CHOICE shift to state 131
-- On term shift to state 212
-- On fact shift to state 289
## Reductions:

State 289:
## Known stack suffix:
## factand EQUIV fact
## LR(1) items:
clause -> factand EQUIV fact . [ WHERE SEMI DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production clause -> factand EQUIV fact

State 290:
## Known stack suffix:
## fact
## LR(1) items:
clause -> fact . [ WHERE SEMI DOT ]
factand -> fact . WEDGE factand [ RED EQUIVEQ EQUIV ]
factand -> fact . [ RED EQUIVEQ EQUIV ]
## Transitions:
-- On WEDGE shift to state 291
## Reductions:
-- On WHERE SEMI DOT
--   reduce production clause -> fact
-- On RED EQUIVEQ EQUIV
--   reduce production factand -> fact

State 291:
## Known stack suffix:
## fact WEDGE
## LR(1) items:
factand -> fact WEDGE . factand [ RED EQUIVEQ EQUIV ]
## Transitions:
-- On LPAREN shift to state 127
-- On IDENT shift to state 209
-- On FAIL shift to state 130
-- On CHOICE shift to state 131
-- On term shift to state 212
-- On factand shift to state 292
-- On fact shift to state 293
## Reductions:

State 292:
## Known stack suffix:
## fact WEDGE factand
## LR(1) items:
factand -> fact WEDGE factand . [ RED EQUIVEQ EQUIV ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production factand -> fact WEDGE factand

State 293:
## Known stack suffix:
## fact
## LR(1) items:
factand -> fact . WEDGE factand [ RED EQUIVEQ EQUIV ]
factand -> fact . [ RED EQUIVEQ EQUIV ]
## Transitions:
-- On WEDGE shift to state 291
## Reductions:
-- On RED EQUIVEQ EQUIV
--   reduce production factand -> fact

State 294:
## Known stack suffix:
## CLAUSES clauses
## LR(1) items:
lib -> CLAUSES clauses . lib [ PROCESS ]
## Transitions:
-- On WEAKSECRET shift to state 1
-- On QUERY shift to state 4
-- On PRIVATE shift to state 48
-- On PREDICATE shift to state 49
-- On PARAM shift to state 54
-- On NOUNIF shift to state 59
-- On NOT shift to state 107
-- On NONINTERF shift to state 123
-- On LET shift to state 149
-- On EQUATION shift to state 259
-- On ELIMTRUE shift to state 267
-- On DATA shift to state 277
-- On CLAUSES shift to state 282
-- On CELL shift to state 295
-- On privateopt shift to state 301
-- On lib shift to state 339
## Reductions:
-- On PROCESS
--   reduce production lib ->
-- On REDUCTION FUN FREE
--   reduce production privateopt ->

State 295:
## Known stack suffix:
## CELL
## LR(1) items:
lib -> CELL . neidentseq optinit DOT lib [ PROCESS ]
## Transitions:
-- On IDENT shift to state 8
-- On neidentseq shift to state 296
## Reductions:

State 296:
## Known stack suffix:
## CELL neidentseq
## LR(1) items:
lib -> CELL neidentseq . optinit DOT lib [ PROCESS ]
## Transitions:
-- On ASSIGN shift to state 297
-- On optinit shift to state 299
## Reductions:
-- On DOT
--   reduce production optinit ->

State 297:
## Known stack suffix:
## ASSIGN
## LR(1) items:
optinit -> ASSIGN . term [ DOT ]
## Transitions:
-- On LPAREN shift to state 127
-- On IDENT shift to state 128
-- On FAIL shift to state 130
-- On CHOICE shift to state 131
-- On term shift to state 298
## Reductions:

State 298:
## Known stack suffix:
## ASSIGN term
## LR(1) items:
optinit -> ASSIGN term . [ DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production optinit -> ASSIGN term

State 299:
## Known stack suffix:
## CELL neidentseq optinit
## LR(1) items:
lib -> CELL neidentseq optinit . DOT lib [ PROCESS ]
## Transitions:
-- On DOT shift to state 300
## Reductions:

State 300:
## Known stack suffix:
## CELL neidentseq optinit DOT
## LR(1) items:
lib -> CELL neidentseq optinit DOT . lib [ PROCESS ]
## Transitions:
-- On WEAKSECRET shift to state 1
-- On QUERY shift to state 4
-- On PRIVATE shift to state 48
-- On PREDICATE shift to state 49
-- On PARAM shift to state 54
-- On NOUNIF shift to state 59
-- On NOT shift to state 107
-- On NONINTERF shift to state 123
-- On LET shift to state 149
-- On EQUATION shift to state 259
-- On ELIMTRUE shift to state 267
-- On DATA shift to state 277
-- On CLAUSES shift to state 282
-- On CELL shift to state 295
-- On privateopt shift to state 301
-- On lib shift to state 338
## Reductions:
-- On PROCESS
--   reduce production lib ->
-- On REDUCTION FUN FREE
--   reduce production privateopt ->

State 301:
## Known stack suffix:
## privateopt
## LR(1) items:
lib -> privateopt . FUN IDENT SLASH INT DOT lib [ PROCESS ]
lib -> privateopt . REDUCTION term EQUAL term SEMI reduc lib [ PROCESS ]
lib -> privateopt . REDUCTION reducmayfailseq DOT lib [ PROCESS ]
lib -> privateopt . FREE neidentseq DOT lib [ PROCESS ]
## Transitions:
-- On REDUCTION shift to state 302
-- On FUN shift to state 328
-- On FREE shift to state 334
## Reductions:

State 302:
## Known stack suffix:
## privateopt REDUCTION
## LR(1) items:
lib -> privateopt REDUCTION . term EQUAL term SEMI reduc lib [ PROCESS ]
lib -> privateopt REDUCTION . reducmayfailseq DOT lib [ PROCESS ]
## Transitions:
-- On LPAREN shift to state 127
-- On IDENT shift to state 128
-- On FAIL shift to state 130
-- On CHOICE shift to state 131
-- On term shift to state 303
-- On reducmayfailseq shift to state 319
-- On reducmayfail shift to state 322
## Reductions:

State 303:
## Known stack suffix:
## privateopt REDUCTION term
## LR(1) items:
lib -> privateopt REDUCTION term . EQUAL term SEMI reduc lib [ PROCESS ]
reducmayfail -> term . EQUAL term WHERE varmayfail CANTEXT FAIL [ OTHERWISE DOT ]
reducmayfail -> term . EQUAL term [ OTHERWISE DOT ]
## Transitions:
-- On EQUAL shift to state 304
## Reductions:

State 304:
## Known stack suffix:
## privateopt REDUCTION term EQUAL
## LR(1) items:
lib -> privateopt REDUCTION term EQUAL . term SEMI reduc lib [ PROCESS ]
reducmayfail -> term EQUAL . term WHERE varmayfail CANTEXT FAIL [ OTHERWISE DOT ]
reducmayfail -> term EQUAL . term [ OTHERWISE DOT ]
## Transitions:
-- On LPAREN shift to state 127
-- On IDENT shift to state 128
-- On FAIL shift to state 130
-- On CHOICE shift to state 131
-- On term shift to state 305
## Reductions:

State 305:
## Known stack suffix:
## privateopt REDUCTION term EQUAL term
## LR(1) items:
lib -> privateopt REDUCTION term EQUAL term . SEMI reduc lib [ PROCESS ]
reducmayfail -> term EQUAL term . WHERE varmayfail CANTEXT FAIL [ OTHERWISE DOT ]
reducmayfail -> term EQUAL term . [ OTHERWISE DOT ]
## Transitions:
-- On WHERE shift to state 306
-- On SEMI shift to state 310
## Reductions:
-- On OTHERWISE DOT
--   reduce production reducmayfail -> term EQUAL term

State 306:
## Known stack suffix:
## term EQUAL term WHERE
## LR(1) items:
reducmayfail -> term EQUAL term WHERE . varmayfail CANTEXT FAIL [ OTHERWISE DOT ]
## Transitions:
-- On IDENT shift to state 270
-- On varmayfail shift to state 307
## Reductions:

State 307:
## Known stack suffix:
## term EQUAL term WHERE varmayfail
## LR(1) items:
reducmayfail -> term EQUAL term WHERE varmayfail . CANTEXT FAIL [ OTHERWISE DOT ]
## Transitions:
-- On CANTEXT shift to state 308
## Reductions:

State 308:
## Known stack suffix:
## term EQUAL term WHERE varmayfail CANTEXT
## LR(1) items:
reducmayfail -> term EQUAL term WHERE varmayfail CANTEXT . FAIL [ OTHERWISE DOT ]
## Transitions:
-- On FAIL shift to state 309
## Reductions:

State 309:
## Known stack suffix:
## term EQUAL term WHERE varmayfail CANTEXT FAIL
## LR(1) items:
reducmayfail -> term EQUAL term WHERE varmayfail CANTEXT FAIL . [ OTHERWISE DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production reducmayfail -> term EQUAL term WHERE varmayfail CANTEXT FAIL

State 310:
## Known stack suffix:
## privateopt REDUCTION term EQUAL term SEMI
## LR(1) items:
lib -> privateopt REDUCTION term EQUAL term SEMI . reduc lib [ PROCESS ]
## Transitions:
-- On LPAREN shift to state 127
-- On IDENT shift to state 128
-- On FAIL shift to state 130
-- On CHOICE shift to state 131
-- On term shift to state 311
-- On reduc shift to state 317
## Reductions:

State 311:
## Known stack suffix:
## term
## LR(1) items:
reduc -> term . EQUAL term SEMI reduc [ WEAKSECRET REDUCTION QUERY PROCESS PRIVATE PREDICATE PARAM NOUNIF NOT NONINTERF LET FUN FREE EQUATION ELIMTRUE DATA CLAUSES CELL ]
reduc -> term . EQUAL term DOT [ WEAKSECRET REDUCTION QUERY PROCESS PRIVATE PREDICATE PARAM NOUNIF NOT NONINTERF LET FUN FREE EQUATION ELIMTRUE DATA CLAUSES CELL ]
## Transitions:
-- On EQUAL shift to state 312
## Reductions:

State 312:
## Known stack suffix:
## term EQUAL
## LR(1) items:
reduc -> term EQUAL . term SEMI reduc [ WEAKSECRET REDUCTION QUERY PROCESS PRIVATE PREDICATE PARAM NOUNIF NOT NONINTERF LET FUN FREE EQUATION ELIMTRUE DATA CLAUSES CELL ]
reduc -> term EQUAL . term DOT [ WEAKSECRET REDUCTION QUERY PROCESS PRIVATE PREDICATE PARAM NOUNIF NOT NONINTERF LET FUN FREE EQUATION ELIMTRUE DATA CLAUSES CELL ]
## Transitions:
-- On LPAREN shift to state 127
-- On IDENT shift to state 128
-- On FAIL shift to state 130
-- On CHOICE shift to state 131
-- On term shift to state 313
## Reductions:

State 313:
## Known stack suffix:
## term EQUAL term
## LR(1) items:
reduc -> term EQUAL term . SEMI reduc [ WEAKSECRET REDUCTION QUERY PROCESS PRIVATE PREDICATE PARAM NOUNIF NOT NONINTERF LET FUN FREE EQUATION ELIMTRUE DATA CLAUSES CELL ]
reduc -> term EQUAL term . DOT [ WEAKSECRET REDUCTION QUERY PROCESS PRIVATE PREDICATE PARAM NOUNIF NOT NONINTERF LET FUN FREE EQUATION ELIMTRUE DATA CLAUSES CELL ]
## Transitions:
-- On SEMI shift to state 314
-- On DOT shift to state 316
## Reductions:

State 314:
## Known stack suffix:
## term EQUAL term SEMI
## LR(1) items:
reduc -> term EQUAL term SEMI . reduc [ WEAKSECRET REDUCTION QUERY PROCESS PRIVATE PREDICATE PARAM NOUNIF NOT NONINTERF LET FUN FREE EQUATION ELIMTRUE DATA CLAUSES CELL ]
## Transitions:
-- On LPAREN shift to state 127
-- On IDENT shift to state 128
-- On FAIL shift to state 130
-- On CHOICE shift to state 131
-- On term shift to state 311
-- On reduc shift to state 315
## Reductions:

State 315:
## Known stack suffix:
## term EQUAL term SEMI reduc
## LR(1) items:
reduc -> term EQUAL term SEMI reduc . [ WEAKSECRET REDUCTION QUERY PROCESS PRIVATE PREDICATE PARAM NOUNIF NOT NONINTERF LET FUN FREE EQUATION ELIMTRUE DATA CLAUSES CELL ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production reduc -> term EQUAL term SEMI reduc

State 316:
## Known stack suffix:
## term EQUAL term DOT
## LR(1) items:
reduc -> term EQUAL term DOT . [ WEAKSECRET REDUCTION QUERY PROCESS PRIVATE PREDICATE PARAM NOUNIF NOT NONINTERF LET FUN FREE EQUATION ELIMTRUE DATA CLAUSES CELL ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production reduc -> term EQUAL term DOT

State 317:
## Known stack suffix:
## privateopt REDUCTION term EQUAL term SEMI reduc
## LR(1) items:
lib -> privateopt REDUCTION term EQUAL term SEMI reduc . lib [ PROCESS ]
## Transitions:
-- On WEAKSECRET shift to state 1
-- On QUERY shift to state 4
-- On PRIVATE shift to state 48
-- On PREDICATE shift to state 49
-- On PARAM shift to state 54
-- On NOUNIF shift to state 59
-- On NOT shift to state 107
-- On NONINTERF shift to state 123
-- On LET shift to state 149
-- On EQUATION shift to state 259
-- On ELIMTRUE shift to state 267
-- On DATA shift to state 277
-- On CLAUSES shift to state 282
-- On CELL shift to state 295
-- On privateopt shift to state 301
-- On lib shift to state 318
## Reductions:
-- On PROCESS
--   reduce production lib ->
-- On REDUCTION FUN FREE
--   reduce production privateopt ->

State 318:
## Known stack suffix:
## privateopt REDUCTION term EQUAL term SEMI reduc lib
## LR(1) items:
lib -> privateopt REDUCTION term EQUAL term SEMI reduc lib . [ PROCESS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production lib -> privateopt REDUCTION term EQUAL term SEMI reduc lib

State 319:
## Known stack suffix:
## privateopt REDUCTION reducmayfailseq
## LR(1) items:
lib -> privateopt REDUCTION reducmayfailseq . DOT lib [ PROCESS ]
## Transitions:
-- On DOT shift to state 320
## Reductions:

State 320:
## Known stack suffix:
## privateopt REDUCTION reducmayfailseq DOT
## LR(1) items:
lib -> privateopt REDUCTION reducmayfailseq DOT . lib [ PROCESS ]
## Transitions:
-- On WEAKSECRET shift to state 1
-- On QUERY shift to state 4
-- On PRIVATE shift to state 48
-- On PREDICATE shift to state 49
-- On PARAM shift to state 54
-- On NOUNIF shift to state 59
-- On NOT shift to state 107
-- On NONINTERF shift to state 123
-- On LET shift to state 149
-- On EQUATION shift to state 259
-- On ELIMTRUE shift to state 267
-- On DATA shift to state 277
-- On CLAUSES shift to state 282
-- On CELL shift to state 295
-- On privateopt shift to state 301
-- On lib shift to state 321
## Reductions:
-- On PROCESS
--   reduce production lib ->
-- On REDUCTION FUN FREE
--   reduce production privateopt ->

State 321:
## Known stack suffix:
## privateopt REDUCTION reducmayfailseq DOT lib
## LR(1) items:
lib -> privateopt REDUCTION reducmayfailseq DOT lib . [ PROCESS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production lib -> privateopt REDUCTION reducmayfailseq DOT lib

State 322:
## Known stack suffix:
## reducmayfail
## LR(1) items:
reducmayfailseq -> reducmayfail . OTHERWISE reducmayfailseq [ DOT ]
reducmayfailseq -> reducmayfail . [ DOT ]
## Transitions:
-- On OTHERWISE shift to state 323
## Reductions:
-- On DOT
--   reduce production reducmayfailseq -> reducmayfail

State 323:
## Known stack suffix:
## reducmayfail OTHERWISE
## LR(1) items:
reducmayfailseq -> reducmayfail OTHERWISE . reducmayfailseq [ DOT ]
## Transitions:
-- On LPAREN shift to state 127
-- On IDENT shift to state 128
-- On FAIL shift to state 130
-- On CHOICE shift to state 131
-- On term shift to state 324
-- On reducmayfailseq shift to state 327
-- On reducmayfail shift to state 322
## Reductions:

State 324:
## Known stack suffix:
## term
## LR(1) items:
reducmayfail -> term . EQUAL term WHERE varmayfail CANTEXT FAIL [ OTHERWISE DOT ]
reducmayfail -> term . EQUAL term [ OTHERWISE DOT ]
## Transitions:
-- On EQUAL shift to state 325
## Reductions:

State 325:
## Known stack suffix:
## term EQUAL
## LR(1) items:
reducmayfail -> term EQUAL . term WHERE varmayfail CANTEXT FAIL [ OTHERWISE DOT ]
reducmayfail -> term EQUAL . term [ OTHERWISE DOT ]
## Transitions:
-- On LPAREN shift to state 127
-- On IDENT shift to state 128
-- On FAIL shift to state 130
-- On CHOICE shift to state 131
-- On term shift to state 326
## Reductions:

State 326:
## Known stack suffix:
## term EQUAL term
## LR(1) items:
reducmayfail -> term EQUAL term . WHERE varmayfail CANTEXT FAIL [ OTHERWISE DOT ]
reducmayfail -> term EQUAL term . [ OTHERWISE DOT ]
## Transitions:
-- On WHERE shift to state 306
## Reductions:
-- On OTHERWISE DOT
--   reduce production reducmayfail -> term EQUAL term

State 327:
## Known stack suffix:
## reducmayfail OTHERWISE reducmayfailseq
## LR(1) items:
reducmayfailseq -> reducmayfail OTHERWISE reducmayfailseq . [ DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production reducmayfailseq -> reducmayfail OTHERWISE reducmayfailseq

State 328:
## Known stack suffix:
## privateopt FUN
## LR(1) items:
lib -> privateopt FUN . IDENT SLASH INT DOT lib [ PROCESS ]
## Transitions:
-- On IDENT shift to state 329
## Reductions:

State 329:
## Known stack suffix:
## privateopt FUN IDENT
## LR(1) items:
lib -> privateopt FUN IDENT . SLASH INT DOT lib [ PROCESS ]
## Transitions:
-- On SLASH shift to state 330
## Reductions:

State 330:
## Known stack suffix:
## privateopt FUN IDENT SLASH
## LR(1) items:
lib -> privateopt FUN IDENT SLASH . INT DOT lib [ PROCESS ]
## Transitions:
-- On INT shift to state 331
## Reductions:

State 331:
## Known stack suffix:
## privateopt FUN IDENT SLASH INT
## LR(1) items:
lib -> privateopt FUN IDENT SLASH INT . DOT lib [ PROCESS ]
## Transitions:
-- On DOT shift to state 332
## Reductions:

State 332:
## Known stack suffix:
## privateopt FUN IDENT SLASH INT DOT
## LR(1) items:
lib -> privateopt FUN IDENT SLASH INT DOT . lib [ PROCESS ]
## Transitions:
-- On WEAKSECRET shift to state 1
-- On QUERY shift to state 4
-- On PRIVATE shift to state 48
-- On PREDICATE shift to state 49
-- On PARAM shift to state 54
-- On NOUNIF shift to state 59
-- On NOT shift to state 107
-- On NONINTERF shift to state 123
-- On LET shift to state 149
-- On EQUATION shift to state 259
-- On ELIMTRUE shift to state 267
-- On DATA shift to state 277
-- On CLAUSES shift to state 282
-- On CELL shift to state 295
-- On privateopt shift to state 301
-- On lib shift to state 333
## Reductions:
-- On PROCESS
--   reduce production lib ->
-- On REDUCTION FUN FREE
--   reduce production privateopt ->

State 333:
## Known stack suffix:
## privateopt FUN IDENT SLASH INT DOT lib
## LR(1) items:
lib -> privateopt FUN IDENT SLASH INT DOT lib . [ PROCESS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production lib -> privateopt FUN IDENT SLASH INT DOT lib

State 334:
## Known stack suffix:
## privateopt FREE
## LR(1) items:
lib -> privateopt FREE . neidentseq DOT lib [ PROCESS ]
## Transitions:
-- On IDENT shift to state 8
-- On neidentseq shift to state 335
## Reductions:

State 335:
## Known stack suffix:
## privateopt FREE neidentseq
## LR(1) items:
lib -> privateopt FREE neidentseq . DOT lib [ PROCESS ]
## Transitions:
-- On DOT shift to state 336
## Reductions:

State 336:
## Known stack suffix:
## privateopt FREE neidentseq DOT
## LR(1) items:
lib -> privateopt FREE neidentseq DOT . lib [ PROCESS ]
## Transitions:
-- On WEAKSECRET shift to state 1
-- On QUERY shift to state 4
-- On PRIVATE shift to state 48
-- On PREDICATE shift to state 49
-- On PARAM shift to state 54
-- On NOUNIF shift to state 59
-- On NOT shift to state 107
-- On NONINTERF shift to state 123
-- On LET shift to state 149
-- On EQUATION shift to state 259
-- On ELIMTRUE shift to state 267
-- On DATA shift to state 277
-- On CLAUSES shift to state 282
-- On CELL shift to state 295
-- On privateopt shift to state 301
-- On lib shift to state 337
## Reductions:
-- On PROCESS
--   reduce production lib ->
-- On REDUCTION FUN FREE
--   reduce production privateopt ->

State 337:
## Known stack suffix:
## privateopt FREE neidentseq DOT lib
## LR(1) items:
lib -> privateopt FREE neidentseq DOT lib . [ PROCESS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production lib -> privateopt FREE neidentseq DOT lib

State 338:
## Known stack suffix:
## CELL neidentseq optinit DOT lib
## LR(1) items:
lib -> CELL neidentseq optinit DOT lib . [ PROCESS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production lib -> CELL neidentseq optinit DOT lib

State 339:
## Known stack suffix:
## CLAUSES clauses lib
## LR(1) items:
lib -> CLAUSES clauses lib . [ PROCESS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production lib -> CLAUSES clauses lib

State 340:
## Known stack suffix:
## clausemayfail
## LR(1) items:
clauses -> clausemayfail . SEMI clauses [ WEAKSECRET REDUCTION QUERY PROCESS PRIVATE PREDICATE PARAM NOUNIF NOT NONINTERF LET FUN FREE EQUATION ELIMTRUE DATA CLAUSES CELL ]
clauses -> clausemayfail . DOT [ WEAKSECRET REDUCTION QUERY PROCESS PRIVATE PREDICATE PARAM NOUNIF NOT NONINTERF LET FUN FREE EQUATION ELIMTRUE DATA CLAUSES CELL ]
## Transitions:
-- On SEMI shift to state 341
-- On DOT shift to state 348
## Reductions:

State 341:
## Known stack suffix:
## clausemayfail SEMI
## LR(1) items:
clauses -> clausemayfail SEMI . clauses [ WEAKSECRET REDUCTION QUERY PROCESS PRIVATE PREDICATE PARAM NOUNIF NOT NONINTERF LET FUN FREE EQUATION ELIMTRUE DATA CLAUSES CELL ]
## Transitions:
-- On LPAREN shift to state 127
-- On IDENT shift to state 209
-- On FAIL shift to state 130
-- On CHOICE shift to state 131
-- On term shift to state 212
-- On factand shift to state 283
-- On fact shift to state 290
-- On clauses shift to state 342
-- On clausemayfail shift to state 340
-- On clause shift to state 343
## Reductions:

State 342:
## Known stack suffix:
## clausemayfail SEMI clauses
## LR(1) items:
clauses -> clausemayfail SEMI clauses . [ WEAKSECRET REDUCTION QUERY PROCESS PRIVATE PREDICATE PARAM NOUNIF NOT NONINTERF LET FUN FREE EQUATION ELIMTRUE DATA CLAUSES CELL ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production clauses -> clausemayfail SEMI clauses

State 343:
## Known stack suffix:
## clause
## LR(1) items:
clausemayfail -> clause . WHERE varmayfail CANTEXT FAIL [ SEMI DOT ]
clausemayfail -> clause . [ SEMI DOT ]
## Transitions:
-- On WHERE shift to state 344
## Reductions:
-- On SEMI DOT
--   reduce production clausemayfail -> clause

State 344:
## Known stack suffix:
## clause WHERE
## LR(1) items:
clausemayfail -> clause WHERE . varmayfail CANTEXT FAIL [ SEMI DOT ]
## Transitions:
-- On IDENT shift to state 270
-- On varmayfail shift to state 345
## Reductions:

State 345:
## Known stack suffix:
## clause WHERE varmayfail
## LR(1) items:
clausemayfail -> clause WHERE varmayfail . CANTEXT FAIL [ SEMI DOT ]
## Transitions:
-- On CANTEXT shift to state 346
## Reductions:

State 346:
## Known stack suffix:
## clause WHERE varmayfail CANTEXT
## LR(1) items:
clausemayfail -> clause WHERE varmayfail CANTEXT . FAIL [ SEMI DOT ]
## Transitions:
-- On FAIL shift to state 347
## Reductions:

State 347:
## Known stack suffix:
## clause WHERE varmayfail CANTEXT FAIL
## LR(1) items:
clausemayfail -> clause WHERE varmayfail CANTEXT FAIL . [ SEMI DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production clausemayfail -> clause WHERE varmayfail CANTEXT FAIL

State 348:
## Known stack suffix:
## clausemayfail DOT
## LR(1) items:
clauses -> clausemayfail DOT . [ WEAKSECRET REDUCTION QUERY PROCESS PRIVATE PREDICATE PARAM NOUNIF NOT NONINTERF LET FUN FREE EQUATION ELIMTRUE DATA CLAUSES CELL ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production clauses -> clausemayfail DOT

State 349:
## Known stack suffix:
## DATA IDENT SLASH INT DOT lib
## LR(1) items:
lib -> DATA IDENT SLASH INT DOT lib . [ PROCESS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production lib -> DATA IDENT SLASH INT DOT lib

State 350:
## Known stack suffix:
## ELIMTRUE fact WHERE varmayfail CANTEXT FAIL DOT lib
## LR(1) items:
lib -> ELIMTRUE fact WHERE varmayfail CANTEXT FAIL DOT lib . [ PROCESS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production lib -> ELIMTRUE fact WHERE varmayfail CANTEXT FAIL DOT lib

State 351:
## Known stack suffix:
## ELIMTRUE fact DOT
## LR(1) items:
lib -> ELIMTRUE fact DOT . lib [ PROCESS ]
## Transitions:
-- On WEAKSECRET shift to state 1
-- On QUERY shift to state 4
-- On PRIVATE shift to state 48
-- On PREDICATE shift to state 49
-- On PARAM shift to state 54
-- On NOUNIF shift to state 59
-- On NOT shift to state 107
-- On NONINTERF shift to state 123
-- On LET shift to state 149
-- On EQUATION shift to state 259
-- On ELIMTRUE shift to state 267
-- On DATA shift to state 277
-- On CLAUSES shift to state 282
-- On CELL shift to state 295
-- On privateopt shift to state 301
-- On lib shift to state 352
## Reductions:
-- On PROCESS
--   reduce production lib ->
-- On REDUCTION FUN FREE
--   reduce production privateopt ->

State 352:
## Known stack suffix:
## ELIMTRUE fact DOT lib
## LR(1) items:
lib -> ELIMTRUE fact DOT lib . [ PROCESS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production lib -> ELIMTRUE fact DOT lib

State 353:
## Known stack suffix:
## EQUATION eqlist DOT lib
## LR(1) items:
lib -> EQUATION eqlist DOT lib . [ PROCESS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production lib -> EQUATION eqlist DOT lib

State 354:
## Known stack suffix:
## LET IDENT EQUAL process DOT lib
## LR(1) items:
lib -> LET IDENT EQUAL process DOT lib . [ PROCESS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production lib -> LET IDENT EQUAL process DOT lib

State 355:
## Known stack suffix:
## NONINTERF niseq DOT lib
## LR(1) items:
lib -> NONINTERF niseq DOT lib . [ PROCESS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production lib -> NONINTERF niseq DOT lib

State 356:
## Known stack suffix:
## ni
## LR(1) items:
niseq -> ni . COMMA niseq [ DOT ]
niseq -> ni . [ DOT ]
## Transitions:
-- On COMMA shift to state 357
## Reductions:
-- On DOT
--   reduce production niseq -> ni

State 357:
## Known stack suffix:
## ni COMMA
## LR(1) items:
niseq -> ni COMMA . niseq [ DOT ]
## Transitions:
-- On IDENT shift to state 124
-- On niseq shift to state 358
-- On ni shift to state 356
## Reductions:

State 358:
## Known stack suffix:
## ni COMMA niseq
## LR(1) items:
niseq -> ni COMMA niseq . [ DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production niseq -> ni COMMA niseq

State 359:
## Known stack suffix:
## NOT gterm optphase optbindingseq DOT lib
## LR(1) items:
lib -> NOT gterm optphase optbindingseq DOT lib . [ PROCESS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production lib -> NOT gterm optphase optbindingseq DOT lib

State 360:
## Known stack suffix:
## gfact
## LR(1) items:
event -> gfact . optphase [ WEDGE SEMI RPAREN DOT BEFORE BAR ]
## Transitions:
-- On PHASE shift to state 91
-- On optphase shift to state 361
## Reductions:
-- On WEDGE SEMI RPAREN DOT BEFORE BAR
--   reduce production optphase ->

State 361:
## Known stack suffix:
## gfact optphase
## LR(1) items:
event -> gfact optphase . [ WEDGE SEMI RPAREN DOT BEFORE BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production event -> gfact optphase

State 362:
## Known stack suffix:
## NOT event
## LR(1) items:
lib -> NOT event . optbindingseq DOT lib [ PROCESS ]
## Transitions:
-- On SEMI shift to state 114
-- On optbindingseq shift to state 363
## Reductions:
-- On DOT
--   reduce production optbindingseq ->

State 363:
## Known stack suffix:
## NOT event optbindingseq
## LR(1) items:
lib -> NOT event optbindingseq . DOT lib [ PROCESS ]
## Transitions:
-- On DOT shift to state 364
## Reductions:

State 364:
## Known stack suffix:
## NOT event optbindingseq DOT
## LR(1) items:
lib -> NOT event optbindingseq DOT . lib [ PROCESS ]
## Transitions:
-- On WEAKSECRET shift to state 1
-- On QUERY shift to state 4
-- On PRIVATE shift to state 48
-- On PREDICATE shift to state 49
-- On PARAM shift to state 54
-- On NOUNIF shift to state 59
-- On NOT shift to state 107
-- On NONINTERF shift to state 123
-- On LET shift to state 149
-- On EQUATION shift to state 259
-- On ELIMTRUE shift to state 267
-- On DATA shift to state 277
-- On CLAUSES shift to state 282
-- On CELL shift to state 295
-- On privateopt shift to state 301
-- On lib shift to state 365
## Reductions:
-- On PROCESS
--   reduce production lib ->
-- On REDUCTION FUN FREE
--   reduce production privateopt ->

State 365:
## Known stack suffix:
## NOT event optbindingseq DOT lib
## LR(1) items:
lib -> NOT event optbindingseq DOT lib . [ PROCESS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production lib -> NOT event optbindingseq DOT lib

State 366:
## Known stack suffix:
## NOUNIF gfactformat optint foptbindingseq DOT lib
## LR(1) items:
lib -> NOUNIF gfactformat optint foptbindingseq DOT lib . [ PROCESS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production lib -> NOUNIF gfactformat optint foptbindingseq DOT lib

State 367:
## Known stack suffix:
## PARAM IDENT EQUAL STRING DOT lib
## LR(1) items:
lib -> PARAM IDENT EQUAL STRING DOT lib . [ PROCESS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production lib -> PARAM IDENT EQUAL STRING DOT lib

State 368:
## Known stack suffix:
## PARAM IDENT EQUAL INT
## LR(1) items:
lib -> PARAM IDENT EQUAL INT . DOT lib [ PROCESS ]
## Transitions:
-- On DOT shift to state 369
## Reductions:

State 369:
## Known stack suffix:
## PARAM IDENT EQUAL INT DOT
## LR(1) items:
lib -> PARAM IDENT EQUAL INT DOT . lib [ PROCESS ]
## Transitions:
-- On WEAKSECRET shift to state 1
-- On QUERY shift to state 4
-- On PRIVATE shift to state 48
-- On PREDICATE shift to state 49
-- On PARAM shift to state 54
-- On NOUNIF shift to state 59
-- On NOT shift to state 107
-- On NONINTERF shift to state 123
-- On LET shift to state 149
-- On EQUATION shift to state 259
-- On ELIMTRUE shift to state 267
-- On DATA shift to state 277
-- On CLAUSES shift to state 282
-- On CELL shift to state 295
-- On privateopt shift to state 301
-- On lib shift to state 370
## Reductions:
-- On PROCESS
--   reduce production lib ->
-- On REDUCTION FUN FREE
--   reduce production privateopt ->

State 370:
## Known stack suffix:
## PARAM IDENT EQUAL INT DOT lib
## LR(1) items:
lib -> PARAM IDENT EQUAL INT DOT lib . [ PROCESS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production lib -> PARAM IDENT EQUAL INT DOT lib

State 371:
## Known stack suffix:
## PARAM IDENT EQUAL IDENT
## LR(1) items:
lib -> PARAM IDENT EQUAL IDENT . DOT lib [ PROCESS ]
## Transitions:
-- On DOT shift to state 372
## Reductions:

State 372:
## Known stack suffix:
## PARAM IDENT EQUAL IDENT DOT
## LR(1) items:
lib -> PARAM IDENT EQUAL IDENT DOT . lib [ PROCESS ]
## Transitions:
-- On WEAKSECRET shift to state 1
-- On QUERY shift to state 4
-- On PRIVATE shift to state 48
-- On PREDICATE shift to state 49
-- On PARAM shift to state 54
-- On NOUNIF shift to state 59
-- On NOT shift to state 107
-- On NONINTERF shift to state 123
-- On LET shift to state 149
-- On EQUATION shift to state 259
-- On ELIMTRUE shift to state 267
-- On DATA shift to state 277
-- On CLAUSES shift to state 282
-- On CELL shift to state 295
-- On privateopt shift to state 301
-- On lib shift to state 373
## Reductions:
-- On PROCESS
--   reduce production lib ->
-- On REDUCTION FUN FREE
--   reduce production privateopt ->

State 373:
## Known stack suffix:
## PARAM IDENT EQUAL IDENT DOT lib
## LR(1) items:
lib -> PARAM IDENT EQUAL IDENT DOT lib . [ PROCESS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production lib -> PARAM IDENT EQUAL IDENT DOT lib

State 374:
## Known stack suffix:
## PREDICATE IDENT SLASH INT DOT lib
## LR(1) items:
lib -> PREDICATE IDENT SLASH INT DOT lib . [ PROCESS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production lib -> PREDICATE IDENT SLASH INT DOT lib

State 375:
## Known stack suffix:
## PREDICATE IDENT SLASH INT neidentseq
## LR(1) items:
lib -> PREDICATE IDENT SLASH INT neidentseq . DOT lib [ PROCESS ]
## Transitions:
-- On DOT shift to state 376
## Reductions:

State 376:
## Known stack suffix:
## PREDICATE IDENT SLASH INT neidentseq DOT
## LR(1) items:
lib -> PREDICATE IDENT SLASH INT neidentseq DOT . lib [ PROCESS ]
## Transitions:
-- On WEAKSECRET shift to state 1
-- On QUERY shift to state 4
-- On PRIVATE shift to state 48
-- On PREDICATE shift to state 49
-- On PARAM shift to state 54
-- On NOUNIF shift to state 59
-- On NOT shift to state 107
-- On NONINTERF shift to state 123
-- On LET shift to state 149
-- On EQUATION shift to state 259
-- On ELIMTRUE shift to state 267
-- On DATA shift to state 277
-- On CLAUSES shift to state 282
-- On CELL shift to state 295
-- On privateopt shift to state 301
-- On lib shift to state 377
## Reductions:
-- On PROCESS
--   reduce production lib ->
-- On REDUCTION FUN FREE
--   reduce production privateopt ->

State 377:
## Known stack suffix:
## PREDICATE IDENT SLASH INT neidentseq DOT lib
## LR(1) items:
lib -> PREDICATE IDENT SLASH INT neidentseq DOT lib . [ PROCESS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production lib -> PREDICATE IDENT SLASH INT neidentseq DOT lib

State 378:
## Known stack suffix:
## QUERY queryseq DOT lib
## LR(1) items:
lib -> QUERY queryseq DOT lib . [ PROCESS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production lib -> QUERY queryseq DOT lib

State 379:
## Known stack suffix:
## query
## LR(1) items:
queryseq -> query . SEMI queryseq [ DOT ]
queryseq -> query . [ DOT ]
## Transitions:
-- On SEMI shift to state 380
## Reductions:
-- On DOT
--   reduce production queryseq -> query

State 380:
## Known stack suffix:
## query SEMI
## LR(1) items:
queryseq -> query SEMI . queryseq [ DOT ]
## Transitions:
-- On PUTBEGIN shift to state 5
-- On LPAREN shift to state 12
-- On LET shift to state 38
-- On IDENT shift to state 42
-- On realquery shift to state 45
-- On queryseq shift to state 381
-- On query shift to state 379
-- On gterm shift to state 382
-- On gfact shift to state 360
-- On event shift to state 383
## Reductions:

State 381:
## Known stack suffix:
## query SEMI queryseq
## LR(1) items:
queryseq -> query SEMI queryseq . [ DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production queryseq -> query SEMI queryseq

State 382:
## Known stack suffix:
## gterm
## LR(1) items:
gfact -> gterm . DIFF gterm [ WEDGE SEMI RPAREN PHASE DOT BEFORE BAR ]
gfact -> gterm . EQUAL gterm [ WEDGE SEMI RPAREN PHASE DOT BEFORE BAR ]
## Transitions:
-- On EQUAL shift to state 109
-- On DIFF shift to state 111
## Reductions:

State 383:
## Known stack suffix:
## event
## LR(1) items:
query -> event . [ SEMI DOT ]
realquery -> event . BEFORE hyp [ SEMI DOT ]
## Transitions:
-- On BEFORE shift to state 384
## Reductions:
-- On SEMI DOT
--   reduce production query -> event

State 384:
## Known stack suffix:
## event BEFORE
## LR(1) items:
realquery -> event BEFORE . hyp [ SEMI RPAREN DOT ]
## Transitions:
-- On LPAREN shift to state 385
-- On IDENT shift to state 42
-- On hyp shift to state 397
-- On gterm shift to state 382
-- On gfact shift to state 360
-- On event shift to state 391
## Reductions:

State 385:
## Known stack suffix:
## LPAREN
## LR(1) items:
gterm -> LPAREN . gtermseq RPAREN [ RPAREN EQUAL DIFF COMMA ]
hyp -> LPAREN . hyp RPAREN [ WEDGE SEMI RPAREN DOT BAR ]
hyp -> LPAREN . realquery RPAREN [ WEDGE SEMI RPAREN DOT BAR ]
## Transitions:
-- On LPAREN shift to state 385
-- On IDENT shift to state 42
-- On realquery shift to state 386
-- On negtermseq shift to state 15
-- On hyp shift to state 388
-- On gtermseq shift to state 36
-- On gterm shift to state 395
-- On gfact shift to state 360
-- On event shift to state 396
## Reductions:
-- On RPAREN
--   reduce production gtermseq ->

State 386:
## Known stack suffix:
## LPAREN realquery
## LR(1) items:
hyp -> LPAREN realquery . RPAREN [ WEDGE SEMI RPAREN DOT BAR ]
## Transitions:
-- On RPAREN shift to state 387
## Reductions:

State 387:
## Known stack suffix:
## LPAREN realquery RPAREN
## LR(1) items:
hyp -> LPAREN realquery RPAREN . [ WEDGE SEMI RPAREN DOT BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production hyp -> LPAREN realquery RPAREN

State 388:
## Known stack suffix:
## LPAREN hyp
## LR(1) items:
hyp -> hyp . BAR hyp [ WEDGE RPAREN BAR ]
hyp -> hyp . WEDGE hyp [ WEDGE RPAREN BAR ]
hyp -> LPAREN hyp . RPAREN [ WEDGE SEMI RPAREN DOT BAR ]
## Transitions:
-- On WEDGE shift to state 389
-- On RPAREN shift to state 392
-- On BAR shift to state 393
## Reductions:

State 389:
## Known stack suffix:
## hyp WEDGE
## LR(1) items:
hyp -> hyp WEDGE . hyp [ WEDGE SEMI RPAREN DOT BAR ]
## Transitions:
-- On LPAREN shift to state 385
-- On IDENT shift to state 42
-- On hyp shift to state 390
-- On gterm shift to state 382
-- On gfact shift to state 360
-- On event shift to state 391
## Reductions:

State 390:
## Known stack suffix:
## hyp WEDGE hyp
## LR(1) items:
hyp -> hyp . BAR hyp [ WEDGE SEMI RPAREN DOT BAR ]
hyp -> hyp . WEDGE hyp [ WEDGE SEMI RPAREN DOT BAR ]
hyp -> hyp WEDGE hyp . [ WEDGE SEMI RPAREN DOT BAR ]
## Transitions:
-- On WEDGE shift to state 389
## Reductions:
-- On SEMI RPAREN DOT BAR
--   reduce production hyp -> hyp WEDGE hyp

State 391:
## Known stack suffix:
## event
## LR(1) items:
hyp -> event . [ WEDGE SEMI RPAREN DOT BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production hyp -> event

State 392:
## Known stack suffix:
## LPAREN hyp RPAREN
## LR(1) items:
hyp -> LPAREN hyp RPAREN . [ WEDGE SEMI RPAREN DOT BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production hyp -> LPAREN hyp RPAREN

State 393:
## Known stack suffix:
## hyp BAR
## LR(1) items:
hyp -> hyp BAR . hyp [ WEDGE SEMI RPAREN DOT BAR ]
## Transitions:
-- On LPAREN shift to state 385
-- On IDENT shift to state 42
-- On hyp shift to state 394
-- On gterm shift to state 382
-- On gfact shift to state 360
-- On event shift to state 391
## Reductions:

State 394:
## Known stack suffix:
## hyp BAR hyp
## LR(1) items:
hyp -> hyp . BAR hyp [ WEDGE SEMI RPAREN DOT BAR ]
hyp -> hyp BAR hyp . [ WEDGE SEMI RPAREN DOT BAR ]
hyp -> hyp . WEDGE hyp [ WEDGE SEMI RPAREN DOT BAR ]
## Transitions:
-- On WEDGE shift to state 389
-- On BAR shift to state 393
## Reductions:
-- On SEMI RPAREN DOT
--   reduce production hyp -> hyp BAR hyp

State 395:
## Known stack suffix:
## gterm
## LR(1) items:
gfact -> gterm . DIFF gterm [ WEDGE RPAREN PHASE BEFORE BAR ]
gfact -> gterm . EQUAL gterm [ WEDGE RPAREN PHASE BEFORE BAR ]
negtermseq -> gterm . COMMA negtermseq [ RPAREN ]
negtermseq -> gterm . [ RPAREN ]
## Transitions:
-- On EQUAL shift to state 109
-- On DIFF shift to state 111
-- On COMMA shift to state 19
## Reductions:
-- On RPAREN
--   reduce production negtermseq -> gterm

State 396:
## Known stack suffix:
## event
## LR(1) items:
hyp -> event . [ WEDGE RPAREN BAR ]
realquery -> event . BEFORE hyp [ RPAREN ]
## Transitions:
-- On BEFORE shift to state 384
## Reductions:
-- On WEDGE RPAREN BAR
--   reduce production hyp -> event

State 397:
## Known stack suffix:
## event BEFORE hyp
## LR(1) items:
hyp -> hyp . BAR hyp [ WEDGE SEMI RPAREN DOT BAR ]
hyp -> hyp . WEDGE hyp [ WEDGE SEMI RPAREN DOT BAR ]
realquery -> event BEFORE hyp . [ SEMI RPAREN DOT ]
## Transitions:
-- On WEDGE shift to state 389
-- On BAR shift to state 393
## Reductions:
-- On SEMI RPAREN DOT
--   reduce production realquery -> event BEFORE hyp

State 398:
## Known stack suffix:
## WEAKSECRET IDENT DOT lib
## LR(1) items:
lib -> WEAKSECRET IDENT DOT lib . [ PROCESS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production lib -> WEAKSECRET IDENT DOT lib

State 399:
## Known stack suffix:
## lib
## LR(1) items:
all -> lib . PROCESS process EOF [ # ]
## Transitions:
-- On PROCESS shift to state 400
## Reductions:

State 400:
## Known stack suffix:
## lib PROCESS
## LR(1) items:
all -> lib PROCESS . process EOF [ # ]
## Transitions:
-- On UNLOCK shift to state 152
-- On REPL shift to state 157
-- On READ shift to state 158
-- On PHASE shift to state 175
-- On OUT shift to state 178
-- On NEW shift to state 185
-- On LPAREN shift to state 188
-- On LOCK shift to state 189
-- On LET shift to state 194
-- On INT shift to state 200
-- On IN shift to state 201
-- On IF shift to state 208
-- On IDENT shift to state 219
-- On EVENT shift to state 220
-- On BARRIER shift to state 226
-- On process shift to state 401
-- On neidentseq shift to state 238
## Reductions:

State 401:
## Known stack suffix:
## lib PROCESS process
## LR(1) items:
all -> lib PROCESS process . EOF [ # ]
process -> process . BAR process [ EOF BAR ]
## Transitions:
-- On EOF shift to state 402
-- On BAR shift to state 236
## Reductions:

State 402:
## Known stack suffix:
## lib PROCESS process EOF
## LR(1) items:
all -> lib PROCESS process EOF . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production all -> lib PROCESS process EOF

State 403:
## Known stack suffix:
## all
## LR(1) items:
all' -> all . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept all

