
** Conflict (shift/reduce) in state 255.
** Token involved: BAR
** This state is reached from all after reading:

lib PROCESS PHASE INT SEMI process

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

all 
lib PROCESS process EOF 
            (?)

** In state 255, looking ahead at BAR, reducing production
** optprocess -> SEMI process
** is permitted because of the following sub-derivation:

process BAR process // lookahead token appears
PHASE INT optprocess // lookahead token is inherited
          SEMI process . 

** In state 255, looking ahead at BAR, shifting is permitted
** because of the following sub-derivation:

PHASE INT optprocess 
          SEMI process 
               process . BAR process 

** Conflict (shift/reduce) in state 251.
** Token involved: BAR
** This state is reached from all after reading:

lib PROCESS LET neidentseq SUCHTHAT fact IN process ELSE process

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

all 
lib PROCESS process EOF 
            (?)

** In state 251, looking ahead at BAR, reducing production
** process -> LET neidentseq SUCHTHAT fact IN process ELSE process
** is permitted because of the following sub-derivation:

process BAR process // lookahead token appears
LET neidentseq SUCHTHAT fact IN process ELSE process . 

** In state 251, looking ahead at BAR, shifting is permitted
** because of the following sub-derivation:

LET neidentseq SUCHTHAT fact IN process ELSE process 
                                             process . BAR process 

** Conflict (shift/reduce) in state 249.
** Tokens involved: ELSE BAR
** The following explanations concentrate on token BAR.
** This state is reached from all after reading:

lib PROCESS LET neidentseq SUCHTHAT fact IN process

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

all 
lib PROCESS process EOF 
            (?)

** In state 249, looking ahead at BAR, reducing production
** process -> LET neidentseq SUCHTHAT fact IN process
** is permitted because of the following sub-derivation:

process BAR process // lookahead token appears
LET neidentseq SUCHTHAT fact IN process . 

** In state 249, looking ahead at BAR, shifting is permitted
** because of the following sub-derivation:

LET neidentseq SUCHTHAT fact IN process 
                                process . BAR process 

** Conflict (shift/reduce) in state 244.
** Token involved: BAR
** This state is reached from all after reading:

lib PROCESS LET pattern EQUAL term IN process ELSE process

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

all 
lib PROCESS process EOF 
            (?)

** In state 244, looking ahead at BAR, reducing production
** process -> LET pattern EQUAL term IN process ELSE process
** is permitted because of the following sub-derivation:

process BAR process // lookahead token appears
LET pattern EQUAL term IN process ELSE process . 

** In state 244, looking ahead at BAR, shifting is permitted
** because of the following sub-derivation:

LET pattern EQUAL term IN process ELSE process 
                                       process . BAR process 

** Conflict (shift/reduce) in state 242.
** Tokens involved: ELSE BAR
** The following explanations concentrate on token BAR.
** This state is reached from all after reading:

lib PROCESS LET pattern EQUAL term IN process

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

all 
lib PROCESS process EOF 
            (?)

** In state 242, looking ahead at BAR, reducing production
** process -> LET pattern EQUAL term IN process
** is permitted because of the following sub-derivation:

process BAR process // lookahead token appears
LET pattern EQUAL term IN process . 

** In state 242, looking ahead at BAR, shifting is permitted
** because of the following sub-derivation:

LET pattern EQUAL term IN process 
                          process . BAR process 

** Conflict (shift/reduce) in state 235.
** Token involved: BAR
** This state is reached from all after reading:

lib PROCESS IF fact THEN process ELSE process

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

all 
lib PROCESS process EOF 
            (?)

** In state 235, looking ahead at BAR, reducing production
** process -> IF fact THEN process ELSE process
** is permitted because of the following sub-derivation:

process BAR process // lookahead token appears
IF fact THEN process ELSE process . 

** In state 235, looking ahead at BAR, shifting is permitted
** because of the following sub-derivation:

IF fact THEN process ELSE process 
                          process . BAR process 

** Conflict (shift/reduce) in state 233.
** Tokens involved: ELSE BAR
** The following explanations concentrate on token BAR.
** This state is reached from all after reading:

lib PROCESS IF fact THEN process

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

all 
lib PROCESS process EOF 
            (?)

** In state 233, looking ahead at BAR, reducing production
** process -> IF fact THEN process
** is permitted because of the following sub-derivation:

process BAR process // lookahead token appears
IF fact THEN process . 

** In state 233, looking ahead at BAR, shifting is permitted
** because of the following sub-derivation:

IF fact THEN process ELSE process 
             process . BAR process 
