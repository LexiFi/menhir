Grammar has 47 nonterminal symbols, among which 1 start symbols.
Grammar has 63 terminal symbols.
Grammar has 154 productions.
nullable(varmayfail) = false
nullable(termseq) = true
nullable(term) = false
nullable(reducmayfailseq) = false
nullable(reducmayfail) = false
nullable(reduc) = false
nullable(realquery) = false
nullable(queryseq) = false
nullable(query) = false
nullable(process) = false
nullable(privateopt) = true
nullable(patternseq) = false
nullable(pattern) = false
nullable(optprocess) = true
nullable(optphase) = true
nullable(optint) = true
nullable(optinit) = true
nullable(optbindingseq) = true
nullable(niseq) = false
nullable(ni) = false
nullable(netermseq) = false
nullable(nesbindingseq) = false
nullable(neidentseq) = false
nullable(negtermseq) = false
nullable(negformatseq) = false
nullable(nebindingseq) = false
nullable(lib) = true
nullable(hyp) = false
nullable(gtermseq) = true
nullable(gterm) = false
nullable(gformatseq) = true
nullable(gformat) = false
nullable(gfactformat) = false
nullable(gfact) = false
nullable(foptbindingseq) = true
nullable(fnesbindingseq) = false
nullable(fnebindingseq) = false
nullable(fbindingseq) = true
nullable(factand) = false
nullable(fact) = false
nullable(event) = false
nullable(eqlist) = false
nullable(clauses) = false
nullable(clausemayfail) = false
nullable(clause) = false
nullable(bindingseq) = true
nullable(all) = false
first(varmayfail) = IDENT
first(termseq) = LPAREN IDENT FAIL CHOICE
first(term) = LPAREN IDENT FAIL CHOICE
first(reducmayfailseq) = LPAREN IDENT FAIL CHOICE
first(reducmayfail) = LPAREN IDENT FAIL CHOICE
first(reduc) = LPAREN IDENT FAIL CHOICE
first(realquery) = LPAREN IDENT
first(queryseq) = PUTBEGIN LPAREN LET IDENT
first(query) = PUTBEGIN LPAREN LET IDENT
first(process) = UNLOCK REPL READ PHASE OUT NEW LPAREN LOCK LET INT IN IF IDENT EVENT BARRIER
first(privateopt) = PRIVATE
first(patternseq) = LPAREN IDENT EQUAL
first(pattern) = LPAREN IDENT EQUAL
first(optprocess) = SEMI
first(optphase) = PHASE
first(optint) = SLASH
first(optinit) = ASSIGN
first(optbindingseq) = SEMI
first(niseq) = IDENT
first(ni) = IDENT
first(netermseq) = LPAREN IDENT FAIL CHOICE
first(nesbindingseq) = REPL IDENT
first(neidentseq) = IDENT
first(negtermseq) = LPAREN IDENT
first(negformatseq) = STAR LPAREN IDENT
first(nebindingseq) = IDENT
first(lib) = WEAKSECRET REDUCTION QUERY PRIVATE PREDICATE PARAM NOUNIF NOT NONINTERF LET FUN FREE EQUATION ELIMTRUE DATA CLAUSES CELL
first(hyp) = LPAREN IDENT
first(gtermseq) = LPAREN IDENT
first(gterm) = LPAREN IDENT
first(gformatseq) = STAR LPAREN IDENT
first(gformat) = STAR LPAREN IDENT
first(gfactformat) = IDENT
first(gfact) = LPAREN IDENT
first(foptbindingseq) = SEMI
first(fnesbindingseq) = REPL IDENT
first(fnebindingseq) = IDENT
first(fbindingseq) = REPL IDENT
first(factand) = LPAREN IDENT FAIL CHOICE
first(fact) = LPAREN IDENT FAIL CHOICE
first(event) = LPAREN IDENT
first(eqlist) = LPAREN IDENT FAIL CHOICE
first(clauses) = LPAREN IDENT FAIL CHOICE
first(clausemayfail) = LPAREN IDENT FAIL CHOICE
first(clause) = LPAREN IDENT FAIL CHOICE
first(bindingseq) = REPL IDENT
first(all) = WEAKSECRET REDUCTION QUERY PROCESS PRIVATE PREDICATE PARAM NOUNIF NOT NONINTERF LET FUN FREE EQUATION ELIMTRUE DATA CLAUSES CELL
minimal(varmayfail) = (* 1 *) IDENT
minimal(termseq) = (* 0 *)
minimal(term) = (* 1 *) FAIL
minimal(reducmayfailseq) = (* 3 *) FAIL EQUAL FAIL
minimal(reducmayfail) = (* 3 *) FAIL EQUAL FAIL
minimal(reduc) = (* 4 *) FAIL EQUAL FAIL DOT
minimal(realquery) = (* 5 *) IDENT COLON BEFORE IDENT COLON
minimal(queryseq) = (* 2 *) IDENT COLON
minimal(query) = (* 2 *) IDENT COLON
minimal(process) = (* 1 *) IDENT
minimal(privateopt) = (* 0 *)
minimal(patternseq) = (* 1 *) IDENT
minimal(pattern) = (* 1 *) IDENT
minimal(optprocess) = (* 0 *)
minimal(optphase) = (* 0 *)
minimal(optint) = (* 0 *)
minimal(optinit) = (* 0 *)
minimal(optbindingseq) = (* 0 *)
minimal(niseq) = (* 1 *) IDENT
minimal(ni) = (* 1 *) IDENT
minimal(netermseq) = (* 1 *) FAIL
minimal(nesbindingseq) = (* 3 *) IDENT EQUAL IDENT
minimal(neidentseq) = (* 1 *) IDENT
minimal(negtermseq) = (* 1 *) IDENT
minimal(negformatseq) = (* 1 *) IDENT
minimal(nebindingseq) = (* 3 *) IDENT EQUAL IDENT
minimal(lib) = (* 0 *)
minimal(hyp) = (* 2 *) IDENT COLON
minimal(gtermseq) = (* 0 *)
minimal(gterm) = (* 1 *) IDENT
minimal(gformatseq) = (* 0 *)
minimal(gformat) = (* 1 *) IDENT
minimal(gfactformat) = (* 2 *) IDENT COLON
minimal(gfact) = (* 2 *) IDENT COLON
minimal(foptbindingseq) = (* 0 *)
minimal(fnesbindingseq) = (* 3 *) IDENT EQUAL IDENT
minimal(fnebindingseq) = (* 3 *) IDENT EQUAL IDENT
minimal(fbindingseq) = (* 0 *)
minimal(factand) = (* 2 *) IDENT COLON
minimal(fact) = (* 2 *) IDENT COLON
minimal(event) = (* 2 *) IDENT COLON
minimal(eqlist) = (* 3 *) FAIL EQUAL FAIL
minimal(clauses) = (* 3 *) IDENT COLON DOT
minimal(clausemayfail) = (* 2 *) IDENT COLON
minimal(clause) = (* 2 *) IDENT COLON
minimal(bindingseq) = (* 0 *)
minimal(all) = (* 3 *) PROCESS IDENT EOF
follow(varmayfail) = CANTEXT
follow(termseq) = WHERE WEDGE THEN SEMI RPAREN RED IN EQUIVEQ EQUIV DOT
follow(term) = WHERE WEDGE THEN SEMI RPAREN RED RBRACKET OTHERWISE IN EQUIVEQ EQUIV EQUAL EOF ELSE DOT DIFF COMMA BAR
follow(reducmayfailseq) = DOT
follow(reducmayfail) = OTHERWISE DOT
follow(reduc) = WEAKSECRET REDUCTION QUERY PROCESS PRIVATE PREDICATE PARAM NOUNIF NOT NONINTERF LET FUN FREE EQUATION ELIMTRUE DATA CLAUSES CELL
follow(realquery) = SEMI RPAREN DOT
follow(queryseq) = DOT
follow(query) = SEMI DOT
follow(process) = RPAREN EOF ELSE DOT BAR
follow(privateopt) = REDUCTION FUN FREE
follow(patternseq) = SEMI RPAREN EOF ELSE DOT BAR
follow(pattern) = SEMI RPAREN EQUAL EOF ELSE DOT COMMA BAR
follow(optprocess) = RPAREN EOF ELSE DOT BAR
follow(optphase) = WEDGE SLASH SEMI RPAREN DOT BEFORE BAR
follow(optint) = SEMI DOT
follow(optinit) = DOT
follow(optbindingseq) = DOT
follow(niseq) = DOT
follow(ni) = DOT COMMA
follow(netermseq) = WHERE WEDGE THEN SEMI RPAREN RED IN EQUIVEQ EQUIV EOF ELSE DOT BAR
follow(nesbindingseq) = RBRACKET
follow(neidentseq) = SUCHTHAT SEMI RPAREN DOT ASSIGN AS
follow(negtermseq) = WEDGE SEMI RPAREN PHASE DOT BEFORE BAR
follow(negformatseq) = SLASH SEMI RPAREN PHASE DOT
follow(nebindingseq) = DOT
follow(lib) = PROCESS
follow(hyp) = WEDGE SEMI RPAREN DOT BAR
follow(gtermseq) = WEDGE SEMI RPAREN PHASE DOT BEFORE BAR
follow(gterm) = WEDGE SEMI RPAREN RBRACKET PHASE EQUAL DOT DIFF COMMA BEFORE BAR
follow(gformatseq) = SLASH SEMI RPAREN PHASE DOT
follow(gformat) = SLASH SEMI RPAREN RBRACKET PHASE DOT COMMA
follow(gfactformat) = SLASH SEMI DOT
follow(gfact) = WEDGE SEMI RPAREN PHASE DOT BEFORE BAR
follow(foptbindingseq) = DOT
follow(fnesbindingseq) = RBRACKET
follow(fnebindingseq) = DOT
follow(fbindingseq) = RBRACKET
follow(factand) = RED EQUIVEQ EQUIV
follow(fact) = WHERE WEDGE THEN SEMI RED IN EQUIVEQ EQUIV DOT
follow(event) = WEDGE SEMI RPAREN DOT BEFORE BAR
follow(eqlist) = DOT
follow(clauses) = WEAKSECRET REDUCTION QUERY PROCESS PRIVATE PREDICATE PARAM NOUNIF NOT NONINTERF LET FUN FREE EQUATION ELIMTRUE DATA CLAUSES CELL
follow(clausemayfail) = SEMI DOT
follow(clause) = WHERE SEMI DOT
follow(bindingseq) = RBRACKET
follow(all) = #
Built an LR(0) automaton with 404 states.
The grammar is not SLR(1) -- 13 states have a conflict.
The construction mode is pager.
Built an LR(1) automaton with 404 states.
6 shift/reduce conflicts were silently solved.
Warning: 7 states have shift/reduce conflicts.
Warning: 10 shift/reduce conflicts were arbitrarily resolved.
104 out of 404 states have a default reduction.
144 out of 404 states are represented.
0 out of 113 symbols keep track of their start position.
0 out of 113 symbols keep track of their end position.
52 out of 155 productions exploit shiftreduce optimization.
610 functions before inlining, 134 functions after inlining.
