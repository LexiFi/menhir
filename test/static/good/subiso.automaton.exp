State 0:
## Known stack suffix:
##
## LR(1) items:
main' -> . main [ # ]
## Transitions:
-- On TYPE shift to state 1
-- On LPAR shift to state 4
-- On IDENT shift to state 5
-- On texpr shift to state 17
-- On main shift to state 19
## Reductions:

State 1:
## Known stack suffix:
## TYPE
## LR(1) items:
texpr -> TYPE . type_binding_list [ TIMES RPAR Eof ARROW AND ]
## Transitions:
-- On IDENT shift to state 2
-- On type_binding_list shift to state 13
-- On type_binding shift to state 16
## Reductions:

State 2:
## Known stack suffix:
## IDENT
## LR(1) items:
type_binding -> IDENT . EQ texpr [ TIMES RPAR Eof ARROW AND ]
## Transitions:
-- On EQ shift to state 3
## Reductions:

State 3:
## Known stack suffix:
## IDENT EQ
## LR(1) items:
type_binding -> IDENT EQ . texpr [ TIMES RPAR Eof ARROW AND ]
## Transitions:
-- On TYPE shift to state 1
-- On LPAR shift to state 4
-- On IDENT shift to state 5
-- On texpr shift to state 12
## Reductions:

State 4:
## Known stack suffix:
## LPAR
## LR(1) items:
texpr -> LPAR . texpr RPAR [ TIMES RPAR Eof ARROW AND ]
## Transitions:
-- On TYPE shift to state 1
-- On LPAR shift to state 4
-- On IDENT shift to state 5
-- On texpr shift to state 6
## Reductions:

State 5:
## Known stack suffix:
## IDENT
## LR(1) items:
texpr -> IDENT . [ TIMES RPAR Eof ARROW AND ]
## Transitions:
## Reductions:
-- On TIMES RPAR Eof ARROW AND
--   reduce production texpr -> IDENT

State 6:
## Known stack suffix:
## LPAR texpr
## LR(1) items:
texpr -> LPAR texpr . RPAR [ TIMES RPAR Eof ARROW AND ]
texpr -> texpr . ARROW texpr [ TIMES RPAR ARROW ]
texpr -> texpr . TIMES texpr [ TIMES RPAR ARROW ]
## Transitions:
-- On TIMES shift to state 7
-- On RPAR shift to state 9
-- On ARROW shift to state 10
## Reductions:

State 7:
## Known stack suffix:
## texpr TIMES
## LR(1) items:
texpr -> texpr TIMES . texpr [ TIMES RPAR Eof ARROW AND ]
## Transitions:
-- On TYPE shift to state 1
-- On LPAR shift to state 4
-- On IDENT shift to state 5
-- On texpr shift to state 8
## Reductions:

State 8:
## Known stack suffix:
## texpr TIMES texpr
## LR(1) items:
texpr -> texpr . ARROW texpr [ TIMES RPAR Eof ARROW AND ]
texpr -> texpr . TIMES texpr [ TIMES RPAR Eof ARROW AND ]
texpr -> texpr TIMES texpr . [ TIMES RPAR Eof ARROW AND ]
## Transitions:
-- On TIMES shift to state 7
## Reductions:
-- On RPAR Eof ARROW AND
--   reduce production texpr -> texpr TIMES texpr

State 9:
## Known stack suffix:
## LPAR texpr RPAR
## LR(1) items:
texpr -> LPAR texpr RPAR . [ TIMES RPAR Eof ARROW AND ]
## Transitions:
## Reductions:
-- On TIMES RPAR Eof ARROW AND
--   reduce production texpr -> LPAR texpr RPAR

State 10:
## Known stack suffix:
## texpr ARROW
## LR(1) items:
texpr -> texpr ARROW . texpr [ TIMES RPAR Eof ARROW AND ]
## Transitions:
-- On TYPE shift to state 1
-- On LPAR shift to state 4
-- On IDENT shift to state 5
-- On texpr shift to state 11
## Reductions:

State 11:
## Known stack suffix:
## texpr ARROW texpr
## LR(1) items:
texpr -> texpr . ARROW texpr [ TIMES RPAR Eof ARROW AND ]
texpr -> texpr ARROW texpr . [ TIMES RPAR Eof ARROW AND ]
texpr -> texpr . TIMES texpr [ TIMES RPAR Eof ARROW AND ]
## Transitions:
-- On TIMES shift to state 7
-- On ARROW shift to state 10
## Reductions:
-- On RPAR Eof AND
--   reduce production texpr -> texpr ARROW texpr

State 12:
## Known stack suffix:
## IDENT EQ texpr
## LR(1) items:
texpr -> texpr . ARROW texpr [ TIMES RPAR Eof ARROW AND ]
texpr -> texpr . TIMES texpr [ TIMES RPAR Eof ARROW AND ]
type_binding -> IDENT EQ texpr . [ TIMES RPAR Eof ARROW AND ]
## Transitions:
-- On TIMES shift to state 7
-- On ARROW shift to state 10
## Reductions:
-- On RPAR Eof AND
--   reduce production type_binding -> IDENT EQ texpr

State 13:
## Known stack suffix:
## TYPE type_binding_list
## LR(1) items:
texpr -> TYPE type_binding_list . [ TIMES RPAR Eof ARROW AND ]
type_binding_list -> type_binding_list . AND type_binding [ TIMES RPAR Eof ARROW AND ]
## Transitions:
-- On AND shift to state 14
## Reductions:
-- On TIMES RPAR Eof ARROW
--   reduce production texpr -> TYPE type_binding_list

State 14:
## Known stack suffix:
## type_binding_list AND
## LR(1) items:
type_binding_list -> type_binding_list AND . type_binding [ TIMES RPAR Eof ARROW AND ]
## Transitions:
-- On IDENT shift to state 2
-- On type_binding shift to state 15
## Reductions:

State 15:
## Known stack suffix:
## type_binding_list AND type_binding
## LR(1) items:
type_binding_list -> type_binding_list AND type_binding . [ TIMES RPAR Eof ARROW AND ]
## Transitions:
## Reductions:
-- On TIMES RPAR Eof ARROW AND
--   reduce production type_binding_list -> type_binding_list AND type_binding

State 16:
## Known stack suffix:
## type_binding
## LR(1) items:
type_binding_list -> type_binding . [ TIMES RPAR Eof ARROW AND ]
## Transitions:
## Reductions:
-- On TIMES RPAR Eof ARROW AND
--   reduce production type_binding_list -> type_binding

State 17:
## Known stack suffix:
## texpr
## LR(1) items:
main -> texpr . Eof [ # ]
texpr -> texpr . ARROW texpr [ TIMES Eof ARROW ]
texpr -> texpr . TIMES texpr [ TIMES Eof ARROW ]
## Transitions:
-- On TIMES shift to state 7
-- On Eof shift to state 18
-- On ARROW shift to state 10
## Reductions:

State 18:
## Known stack suffix:
## texpr Eof
## LR(1) items:
main -> texpr Eof . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production main -> texpr Eof

State 19:
## Known stack suffix:
## main
## LR(1) items:
main' -> main . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept main

