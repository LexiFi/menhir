File "subiso.mly", line 34, characters 10-17:
Warning: the token ASSIGNS is unused.
File "subiso.mly", line 24, characters 7-11:
Warning: the token PLUS is unused.
File "subiso.mly", line 23, characters 16-20:
Warning: the token TVAR is unused.
%{
(***********************************************************************)
(*                                                                     *)
(*                          SubIso                                     *)
(*                                                                     *)
(*                   Projet Cristal, INRIA Rocquencourt                *)
(*                                                                     *)
(*  Copyright 2002 Institut National de Recherche en Informatique et   *)
(*  en Automatique.  All rights reserved.  This file is distributed    *)
(*  under the terms of the GNU Lesser General Public License.          *)
(*                                                                     *)
(*  Roberto Di Cosmo                                                   *)
(***********************************************************************)

(*
 $Id: tparser.mly,v 1.1 2002/03/11 16:03:27 dicosmo Exp $
*)

open Types
%}
%start main
%token AND
%token ARROW
%token EQ
%token Eof
%token <string> IDENT
%token LPAR
%token PLUS
%token RPAR
%token TIMES
%token <string> TVAR
%token TYPE
%right PRECTYDEF
%left AND
%nonassoc EQ
%right ARROW
%right TIMES
%nonassoc ASSIGNS
%type <Types.ptype> main
%%

main:
  _1 = texpr _2 = Eof
    {                            ( _1 )}

texpr:
  _1 = IDENT
    {                            ( TBase _1)}
| _1 = LPAR _2 = texpr _3 = RPAR
    {                            ( _2 )}
| _1 = texpr _2 = ARROW _3 = texpr
    {                            ( TArrow(_1,_3) )}
| _1 = texpr _2 = TIMES _3 = texpr
    {                            ( TProduct(_1,_3) )}
| _1 = TYPE _2 = type_binding_list %prec PRECTYDEF
    {                                           ( Trec(List.rev _2) )}

type_binding_list:
  _1 = type_binding
    {                ([_1])}
| _1 = type_binding_list _2 = AND _3 = type_binding
    {                                      (_3 :: _1)}

type_binding:
  _1 = IDENT _2 = EQ _3 = texpr
    {                       ((_1,_3))}

%%
