State 0:
s' -> . s [ # ]
-- On R shift to state 1
-- On L shift to state 8
-- On s shift to state 14

State 1:
s -> R . r [ # ]
-- On A shift to state 2
-- On r shift to state 3
-- On b shift to state 4
-- On a shift to state 6

State 2:
a -> A . B [ C ]
b -> A . [ D B ]
-- On D reduce production b -> A 
-- On B reduce production b -> A 

State 3:
s -> R r . [ # ]
-- On # reduce production s -> R r 

State 4:
r -> b . D [ # ]
-- On D shift to state 5

State 5:
r -> b D . [ # ]
-- On # reduce production r -> b D 

State 6:
r -> a . C [ # ]
-- On C shift to state 7

State 7:
r -> a C . [ # ]
-- On # reduce production r -> a C 

State 8:
s -> L . l [ # ]
-- On A shift to state 2
-- On l shift to state 9
-- On b shift to state 10
-- On a shift to state 12

State 9:
s -> L l . [ # ]
-- On # reduce production s -> L l 

State 10:
l -> b . B [ # ]
-- On B shift to state 11

State 11:
l -> b B . [ # ]
-- On # reduce production l -> b B 

State 12:
l -> a . C [ # ]
-- On C shift to state 13

State 13:
l -> a C . [ # ]
-- On # reduce production l -> a C 

State 14:
s' -> s . [ # ]
-- On # accept s

