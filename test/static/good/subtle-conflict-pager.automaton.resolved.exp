State 0:
## Known stack suffix:
##
## LR(1) items:
s' -> . s [ # ]
## Transitions:
-- On R shift to state 1
-- On L shift to state 8
-- On s shift to state 14
## Reductions:

State 1:
## Known stack suffix:
## R
## LR(1) items:
s -> R . r [ # ]
## Transitions:
-- On A shift to state 2
-- On r shift to state 3
-- On b shift to state 4
-- On a shift to state 6
## Reductions:

State 2:
## Known stack suffix:
## A
## LR(1) items:
a -> A . B [ C ]
b -> A . [ D B ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production b -> A

State 3:
## Known stack suffix:
## R r
## LR(1) items:
s -> R r . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production s -> R r

State 4:
## Known stack suffix:
## b
## LR(1) items:
r -> b . D [ # ]
## Transitions:
-- On D shift to state 5
## Reductions:

State 5:
## Known stack suffix:
## b D
## LR(1) items:
r -> b D . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production r -> b D

State 6:
## Known stack suffix:
## a
## LR(1) items:
r -> a . C [ # ]
## Transitions:
-- On C shift to state 7
## Reductions:

State 7:
## Known stack suffix:
## a C
## LR(1) items:
r -> a C . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production r -> a C

State 8:
## Known stack suffix:
## L
## LR(1) items:
s -> L . l [ # ]
## Transitions:
-- On A shift to state 2
-- On l shift to state 9
-- On b shift to state 10
-- On a shift to state 12
## Reductions:

State 9:
## Known stack suffix:
## L l
## LR(1) items:
s -> L l . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production s -> L l

State 10:
## Known stack suffix:
## b
## LR(1) items:
l -> b . B [ # ]
## Transitions:
-- On B shift to state 11
## Reductions:

State 11:
## Known stack suffix:
## b B
## LR(1) items:
l -> b B . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production l -> b B

State 12:
## Known stack suffix:
## a
## LR(1) items:
l -> a . C [ # ]
## Transitions:
-- On C shift to state 13
## Reductions:

State 13:
## Known stack suffix:
## a C
## LR(1) items:
l -> a C . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production l -> a C

State 14:
## Known stack suffix:
## s
## LR(1) items:
s' -> s . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept s

