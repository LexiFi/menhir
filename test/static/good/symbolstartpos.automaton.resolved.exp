State 0:
## Known stack suffix:
##
## LR(1) items:
main' -> . main [ # ]
## Transitions:
-- On A shift to state 1
-- On main shift to state 15
## Reductions:

State 1:
## Known stack suffix:
## A
## LR(1) items:
main -> A . B hop sugar [ # ]
## Transitions:
-- On B shift to state 2
## Reductions:

State 2:
## Known stack suffix:
## A B
## LR(1) items:
main -> A B . hop sugar [ # ]
## Transitions:
-- On nothing shift to state 3
-- On hop shift to state 12
## Default reduction:
-- After reading the next token, reduce production nothing ->

State 3:
## Known stack suffix:
## nothing
## LR(1) items:
hop -> nothing . bar A B [ C ]
## Transitions:
-- On C shift to state 4
-- On option(foo) shift to state 6
-- On foo shift to state 8
-- On bar shift to state 9
## Reductions:
-- On B reduce production option(foo) ->

State 4:
## Known stack suffix:
## C
## LR(1) items:
foo -> C . nothing [ B ]
## Transitions:
-- On nothing shift to state 5
## Default reduction:
-- After reading the next token, reduce production nothing ->

State 5:
## Known stack suffix:
## C nothing
## LR(1) items:
foo -> C nothing . [ B ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production foo -> C nothing

State 6:
## Known stack suffix:
## option(foo)
## LR(1) items:
bar -> option(foo) . B [ A ]
## Transitions:
-- On B shift to state 7
## Reductions:

State 7:
## Known stack suffix:
## option(foo) B
## LR(1) items:
bar -> option(foo) B . [ A ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production bar -> option(foo) B

State 8:
## Known stack suffix:
## foo
## LR(1) items:
option(foo) -> foo . [ B ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(foo) -> foo

State 9:
## Known stack suffix:
## nothing bar
## LR(1) items:
hop -> nothing bar . A B [ C ]
## Transitions:
-- On A shift to state 10
## Reductions:

State 10:
## Known stack suffix:
## nothing bar A
## LR(1) items:
hop -> nothing bar A . B [ C ]
## Transitions:
-- On B shift to state 11
## Reductions:

State 11:
## Known stack suffix:
## nothing bar A B
## LR(1) items:
hop -> nothing bar A B . [ C ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production hop -> nothing bar A B

State 12:
## Known stack suffix:
## A B hop
## LR(1) items:
main -> A B hop . sugar [ # ]
## Transitions:
-- On C shift to state 13
-- On sugar shift to state 14
## Reductions:

State 13:
## Known stack suffix:
## C
## LR(1) items:
sugar -> C . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production sugar -> C

State 14:
## Known stack suffix:
## A B hop sugar
## LR(1) items:
main -> A B hop sugar . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production main -> A B hop sugar

State 15:
## Known stack suffix:
## main
## LR(1) items:
main' -> main . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept main

