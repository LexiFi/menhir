File "sysver.mly", line 459, characters 8-19:
Warning: the token ALTERNATIVE is unused.
File "sysver.mly", line 429, characters 15-17:
Warning: the token AS is unused.
File "sysver.mly", line 430, characters 16-22:
Warning: the token ASCNUM is unused.
File "sysver.mly", line 460, characters 8-18:
Warning: the token ASSIGNMENT is unused.
File "sysver.mly", line 461, characters 8-13:
Warning: the token BIDIR is unused.
File "sysver.mly", line 462, characters 16-22:
Warning: the token BINNUM is unused.
File "sysver.mly", line 463, characters 8-14:
Warning: the token BITSEL is unused.
File "sysver.mly", line 266, characters 7-11:
Warning: the token BOLD is unused.
File "sysver.mly", line 464, characters 8-16:
Warning: the token CASECOND is unused.
File "sysver.mly", line 465, characters 8-15:
Warning: the token CELLPIN is unused.
File "sysver.mly", line 431, characters 14-18:
Warning: the token CHAR is unused.
File "sysver.mly", line 466, characters 8-14:
Warning: the token CONCAT is unused.
File "sysver.mly", line 202, characters 7-16:
Warning: the token COUNTONES is unused.
File "sysver.mly", line 468, characters 16-22:
Warning: the token DECNUM is unused.
File "sysver.mly", line 443, characters 87-94:
Warning: the token DECUPLE is unused.
File "sysver.mly", line 469, characters 8-21:
Warning: the token DLYASSIGNMENT is unused.
File "sysver.mly", line 470, characters 20-26:
Warning: the token DOTTED is unused.
File "sysver.mly", line 435, characters 23-29:
Warning: the token DOUBLE is unused.
File "sysver.mly", line 472, characters 8-14:
Warning: the token DRIVER is unused.
File "sysver.mly", line 445, characters 103-113:
Warning: the token DUODECUPLE is unused.
File "sysver.mly", line 455, characters 183-195:
Warning: the token DUOVIGENUPLE is unused.
File "sysver.mly", line 315, characters 7-18:
Warning: the token D_ATTRIBUTE is unused.
File "sysver.mly", line 96, characters 7-13:
Warning: the token D_BITS is unused.
File "sysver.mly", line 467, characters 8-11:
Warning: the token D_C is unused.
File "sysver.mly", line 4, characters 7-14:
Warning: the token D_CLOG2 is unused.
File "sysver.mly", line 167, characters 7-21:
Warning: the token D_COUNTDRIVERS is unused.
File "sysver.mly", line 265, characters 7-18:
Warning: the token D_COUNTONES is unused.
File "sysver.mly", line 197, characters 7-16:
Warning: the token D_DISPLAY is unused.
File "sysver.mly", line 412, characters 7-14:
Warning: the token D_ERROR is unused.
File "sysver.mly", line 138, characters 7-14:
Warning: the token D_FATAL is unused.
File "sysver.mly", line 170, characters 7-15:
Warning: the token D_FCLOSE is unused.
File "sysver.mly", line 348, characters 7-17:
Warning: the token D_FDISPLAY is unused.
File "sysver.mly", line 147, characters 7-13:
Warning: the token D_FEOF is unused.
File "sysver.mly", line 17, characters 7-15:
Warning: the token D_FFLUSH is unused.
File "sysver.mly", line 128, characters 7-14:
Warning: the token D_FGETC is unused.
File "sysver.mly", line 155, characters 7-14:
Warning: the token D_FGETS is unused.
File "sysver.mly", line 387, characters 7-15:
Warning: the token D_FINISH is unused.
File "sysver.mly", line 23, characters 7-14:
Warning: the token D_FOPEN is unused.
File "sysver.mly", line 78, characters 7-15:
Warning: the token D_FSCANF is unused.
File "sysver.mly", line 26, characters 7-15:
Warning: the token D_FWRITE is unused.
File "sysver.mly", line 408, characters 7-16:
Warning: the token D_FWRITEH is unused.
File "sysver.mly", line 329, characters 7-13:
Warning: the token D_INFO is unused.
File "sysver.mly", line 275, characters 7-18:
Warning: the token D_ISUNKNOWN is unused.
File "sysver.mly", line 76, characters 7-16:
Warning: the token D_MONITOR is unused.
File "sysver.mly", line 345, characters 7-15:
Warning: the token D_ONEHOT is unused.
File "sysver.mly", line 230, characters 7-16:
Warning: the token D_ONEHOT0 is unused.
File "sysver.mly", line 471, characters 8-16:
Warning: the token D_RANDOM is unused.
File "sysver.mly", line 5, characters 7-17:
Warning: the token D_READMEMB is unused.
File "sysver.mly", line 11, characters 7-17:
Warning: the token D_READMEMH is unused.
File "sysver.mly", line 313, characters 7-17:
Warning: the token D_REALTIME is unused.
File "sysver.mly", line 323, characters 7-15:
Warning: the token D_SIGNED is unused.
File "sysver.mly", line 249, characters 7-15:
Warning: the token D_SSCANF is unused.
File "sysver.mly", line 473, characters 8-15:
Warning: the token D_STIME is unused.
File "sysver.mly", line 354, characters 7-13:
Warning: the token D_STOP is unused.
File "sysver.mly", line 113, characters 7-22:
Warning: the token D_TEST_PLUSARGS is unused.
File "sysver.mly", line 390, characters 7-13:
Warning: the token D_TIME is unused.
File "sysver.mly", line 247, characters 7-17:
Warning: the token D_UNSIGNED is unused.
File "sysver.mly", line 366, characters 7-16:
Warning: the token D_WARNING is unused.
File "sysver.mly", line 337, characters 7-14:
Warning: the token D_WRITE is unused.
File "sysver.mly", line 61, characters 7-12:
Warning: the token EMPTY is unused.
File "sysver.mly", line 474, characters 8-16:
Warning: the token ENDLABEL is unused.
File "sysver.mly", line 475, characters 8-17:
Warning: the token ENDOFFILE is unused.
File "sysver.mly", line 476, characters 15-23:
Warning: the token FLOATNUM is unused.
File "sysver.mly", line 428, characters 15-17:
Warning: the token FS is unused.
File "sysver.mly", line 477, characters 8-29:
Warning: the token FULLSKEW_TIMING_CHECK is unused.
File "sysver.mly", line 478, characters 8-15:
Warning: the token FUNCREF is unused.
File "sysver.mly", line 479, characters 8-16:
Warning: the token FUNCUSED is unused.
File "sysver.mly", line 480, characters 8-15:
Warning: the token GENCASE is unused.
File "sysver.mly", line 481, characters 8-19:
Warning: the token GENCASECOND is unused.
File "sysver.mly", line 482, characters 16-22:
Warning: the token HEXNUM is unused.
File "sysver.mly", line 483, characters 8-25:
Warning: the token HOLD_TIMING_CHECK is unused.
File "sysver.mly", line 432, characters 16-18:
Warning: the token ID is unused.
File "sysver.mly", line 484, characters 8-16:
Warning: the token IMPLICIT is unused.
File "sysver.mly", line 434, characters 13-16:
Warning: the token INT is unused.
File "sysver.mly", line 485, characters 16-22:
Warning: the token INTNUM is unused.
File "sysver.mly", line 486, characters 8-14:
Warning: the token IOPORT is unused.
File "sysver.mly", line 215, characters 7-16:
Warning: the token ISUNKNOWN is unused.
File "sysver.mly", line 145, characters 7-20:
Warning: the token IS_DEFINED_AS is unused.
File "sysver.mly", line 487, characters 8-20:
Warning: the token LEFT_BRACKET is unused.
File "sysver.mly", line 488, characters 8-18:
Warning: the token LEFT_CURLY is unused.
File "sysver.mly", line 489, characters 8-14:
Warning: the token MEMORY is unused.
File "sysver.mly", line 490, characters 8-17:
Warning: the token MINTYPMAX is unused.
File "sysver.mly", line 491, characters 8-15:
Warning: the token MODINST is unused.
File "sysver.mly", line 424, characters 15-17:
Warning: the token MS is unused.
File "sysver.mly", line 492, characters 8-13:
Warning: the token NAMED is unused.
File "sysver.mly", line 493, characters 8-29:
Warning: the token NOCHANGE_TIMING_CHECK is unused.
File "sysver.mly", line 442, characters 79-86:
Warning: the token NONUPLE is unused.
File "sysver.mly", line 452, characters 159-171:
Warning: the token NOVEMDECUPLE is unused.
File "sysver.mly", line 426, characters 15-17:
Warning: the token NS is unused.
File "sysver.mly", line 494, characters 16-22:
Warning: the token OCTNUM is unused.
File "sysver.mly", line 451, characters 151-162:
Warning: the token OCTODECUPLE is unused.
File "sysver.mly", line 441, characters 71-78:
Warning: the token OCTUPLE is unused.
File "sysver.mly", line 495, characters 8-17:
Warning: the token PARAMUSED is unused.
File "sysver.mly", line 496, characters 8-15:
Warning: the token PARTSEL is unused.
File "sysver.mly", line 506, characters 8-27:
Warning: the token PERIOD_TIMING_CHECK is unused.
File "sysver.mly", line 511, characters 16-25:
Warning: the token PRAGMATIC is unused.
File "sysver.mly", line 512, characters 16-23:
Warning: the token PREPROC is unused.
File "sysver.mly", line 514, characters 8-16:
Warning: the token PRIMINST is unused.
File "sysver.mly", line 427, characters 15-17:
Warning: the token PS is unused.
File "sysver.mly", line 1, characters 7-13:
Warning: the token P_ATAT is unused.
File "sysver.mly", line 497, characters 8-20:
Warning: the token P_CELLDEFINE is unused.
File "sysver.mly", line 498, characters 8-16:
Warning: the token P_DEFINE is unused.
File "sysver.mly", line 499, characters 8-25:
Warning: the token P_DELAY_MODE_PATH is unused.
File "sysver.mly", line 500, characters 8-28:
Warning: the token P_DISABLE_PORTFAULTS is unused.
File "sysver.mly", line 501, characters 8-14:
Warning: the token P_ELSE is unused.
File "sysver.mly", line 502, characters 8-27:
Warning: the token P_ENABLE_PORTFAULTS is unused.
File "sysver.mly", line 503, characters 8-23:
Warning: the token P_ENDCELLDEFINE is unused.
File "sysver.mly", line 504, characters 8-15:
Warning: the token P_ENDIF is unused.
File "sysver.mly", line 505, characters 8-20:
Warning: the token P_ENDPROTECT is unused.
File "sysver.mly", line 507, characters 8-15:
Warning: the token P_IFDEF is unused.
File "sysver.mly", line 508, characters 16-25:
Warning: the token P_INCLUDE is unused.
File "sysver.mly", line 216, characters 7-12:
Warning: the token P_NOR is unused.
File "sysver.mly", line 509, characters 8-27:
Warning: the token P_NOSUPPRESS_FAULTS is unused.
File "sysver.mly", line 82, characters 7-13:
Warning: the token P_OREQ is unused.
File "sysver.mly", line 66, characters 7-15:
Warning: the token P_OREQGT is unused.
File "sysver.mly", line 46, characters 7-18:
Warning: the token P_ORMINUSGT is unused.
File "sysver.mly", line 35, characters 7-13:
Warning: the token P_OROR is unused.
File "sysver.mly", line 510, characters 8-17:
Warning: the token P_PROTECT is unused.
File "sysver.mly", line 513, characters 8-18:
Warning: the token P_RESETALL is unused.
File "sysver.mly", line 515, characters 8-25:
Warning: the token P_SUPPRESS_FAULTS is unused.
File "sysver.mly", line 516, characters 16-27:
Warning: the token P_TIMESCALE is unused.
File "sysver.mly", line 336, characters 7-18:
Warning: the token P_WILDEQUAL is unused.
File "sysver.mly", line 135, characters 7-21:
Warning: the token P_WILDNOTEQUAL is unused.
File "sysver.mly", line 437, characters 39-48:
Warning: the token QUADRUPLE is unused.
File "sysver.mly", line 447, characters 119-134:
Warning: the token QUATTUORDECUPLE is unused.
File "sysver.mly", line 457, characters 199-216:
Warning: the token QUATTUORVIGENUPLE is unused.
File "sysver.mly", line 448, characters 127-138:
Warning: the token QUINDECUPLE is unused.
File "sysver.mly", line 438, characters 47-56:
Warning: the token QUINTUPLE is unused.
File "sysver.mly", line 458, characters 207-220:
Warning: the token QUINVIGENUPLE is unused.
File "sysver.mly", line 433, characters 24-29:
Warning: the token RANGE is unused.
File "sysver.mly", line 517, characters 8-16:
Warning: the token RECEIVER is unused.
File "sysver.mly", line 518, characters 8-29:
Warning: the token RECOVERY_TIMING_CHECK is unused.
File "sysver.mly", line 519, characters 8-27:
Warning: the token RECREM_TIMING_CHECK is unused.
File "sysver.mly", line 520, characters 8-28:
Warning: the token REMOVAL_TIMING_CHECK is unused.
File "sysver.mly", line 521, characters 8-21:
Warning: the token RIGHT_BRACKET is unused.
File "sysver.mly", line 522, characters 8-19:
Warning: the token RIGHT_CURLY is unused.
File "sysver.mly", line 523, characters 8-14:
Warning: the token SCALAR is unused.
File "sysver.mly", line 524, characters 8-16:
Warning: the token SENSUSED is unused.
File "sysver.mly", line 450, characters 143-156:
Warning: the token SEPTENDECUPLE is unused.
File "sysver.mly", line 440, characters 63-71:
Warning: the token SEPTUPLE is unused.
File "sysver.mly", line 525, characters 8-30:
Warning: the token SETUPHOLD_TIMING_CHECK is unused.
File "sysver.mly", line 526, characters 8-26:
Warning: the token SETUP_TIMING_CHECK is unused.
File "sysver.mly", line 449, characters 135-145:
Warning: the token SEXDECUPLE is unused.
File "sysver.mly", line 439, characters 55-63:
Warning: the token SEXTUPLE is unused.
File "sysver.mly", line 527, characters 8-25:
Warning: the token SKEW_TIMING_CHECK is unused.
File "sysver.mly", line 528, characters 8-15:
Warning: the token SPECIAL is unused.
File "sysver.mly", line 291, characters 7-11:
Warning: the token STEP is unused.
File "sysver.mly", line 529, characters 8-14:
Warning: the token SUBCCT is unused.
File "sysver.mly", line 530, characters 8-17:
Warning: the token SUBMODULE is unused.
File "sysver.mly", line 531, characters 8-19:
Warning: the token SUBTRACTION is unused.
File "sysver.mly", line 532, characters 8-15:
Warning: the token TASKREF is unused.
File "sysver.mly", line 533, characters 8-16:
Warning: the token TASKUSED is unused.
File "sysver.mly", line 534, characters 8-29:
Warning: the token TIMESKEW_TIMING_CHECK is unused.
File "sysver.mly", line 535, characters 8-18:
Warning: the token TIMINGSPEC is unused.
File "sysver.mly", line 536, characters 20-25:
Warning: the token TLIST is unused.
File "sysver.mly", line 9, characters 7-22:
Warning: the token TOKEN_1364_2001 is unused.
File "sysver.mly", line 248, characters 7-15:
Warning: the token TOKEN_9_ is unused.
File "sysver.mly", line 239, characters 7-21:
Warning: the token TOKEN_9_DOLLAR is unused.
File "sysver.mly", line 350, characters 7-20:
Warning: the token TOKEN_EDGE_11 is unused.
File "sysver.mly", line 13, characters 7-20:
Warning: the token TOKEN_NEWLINE is unused.
File "sysver.mly", line 168, characters 7-26:
Warning: the token TOKEN_RBRACK_LCURLY is unused.
File "sysver.mly", line 446, characters 111-121:
Warning: the token TREDECUPLE is unused.
File "sysver.mly", line 456, characters 191-203:
Warning: the token TREVIGENUPLE is unused.
File "sysver.mly", line 436, characters 31-37:
Warning: the token TRIPLE is unused.
File "sysver.mly", line 444, characters 95-104:
Warning: the token UNDECUPLE is unused.
File "sysver.mly", line 537, characters 8-15:
Warning: the token UNKNOWN is unused.
File "sysver.mly", line 454, characters 175-186:
Warning: the token UNVIGENUPLE is unused.
File "sysver.mly", line 425, characters 15-17:
Warning: the token US is unused.
File "sysver.mly", line 16, characters 7-13:
Warning: the token U_WIRE is unused.
File "sysver.mly", line 453, characters 167-176:
Warning: the token VIGENUPLE is unused.
File "sysver.mly", line 538, characters 8-26:
Warning: the token WIDTH_TIMING_CHECK is unused.
File "sysver.mly", line 8017, characters 8-23:
Warning: symbol actual_arg_expr is unreachable from any of the start symbol(s).
File "sysver.mly", line 9113, characters 8-17:
Warning: symbol attr_name is unreachable from any of the start symbol(s).
File "sysver.mly", line 9408, characters 0-9:
Warning: symbol attr_spec is unreachable from any of the start symbol(s).
File "sysver.mly", line 9737, characters 8-26:
Warning: symbol attribute_instance is unreachable from any of the start symbol(s).
File "sysver.mly", line 12078, characters 0-20:
Warning: symbol attribute_instance_4 is unreachable from any of the start symbol(s).
File "sysver.mly", line 9540, characters 8-23:
Warning: symbol base_expression is unreachable from any of the start symbol(s).
File "sysver.mly", line 565, characters 0-11:
Warning: symbol binary_base is unreachable from any of the start symbol(s).
File "sysver.mly", line 551, characters 0-13:
Warning: symbol binary_base_3 is unreachable from any of the start symbol(s).
File "sysver.mly", line 9962, characters 8-21:
Warning: symbol block_comment is unreachable from any of the start symbol(s).
File "sysver.mly", line 7952, characters 8-24:
Warning: symbol block_identifier is unreachable from any of the start symbol(s).
File "sysver.mly", line 555, characters 0-12:
Warning: symbol c_identifier is unreachable from any of the start symbol(s).
File "sysver.mly", line 10263, characters 8-19:
Warning: symbol cell_clause is unreachable from any of the start symbol(s).
File "sysver.mly", line 12702, characters 8-21:
Warning: symbol cell_clause_3 is unreachable from any of the start symbol(s).
File "sysver.mly", line 9485, characters 8-23:
Warning: symbol cell_identifier is unreachable from any of the start symbol(s).
File "sysver.mly", line 8817, characters 8-27:
Warning: symbol checktime_condition is unreachable from any of the start symbol(s).
File "sysver.mly", line 9081, characters 8-24:
Warning: symbol class_identifier is unreachable from any of the start symbol(s).
File "sysver.mly", line 9281, characters 8-27:
Warning: symbol clocking_identifier is unreachable from any of the start symbol(s).
File "sysver.mly", line 9878, characters 0-7:
Warning: symbol comment is unreachable from any of the start symbol(s).
File "sysver.mly", line 8267, characters 8-20:
Warning: symbol comment_text is unreachable from any of the start symbol(s).
File "sysver.mly", line 10575, characters 0-14:
Warning: symbol comment_text_2 is unreachable from any of the start symbol(s).
File "sysver.mly", line 9927, characters 8-26:
Warning: symbol config_declaration is unreachable from any of the start symbol(s).
File "sysver.mly", line 12314, characters 0-20:
Warning: symbol config_declaration_6 is unreachable from any of the start symbol(s).
File "sysver.mly", line 8023, characters 8-25:
Warning: symbol config_identifier is unreachable from any of the start symbol(s).
File "sysver.mly", line 10300, characters 0-21:
Warning: symbol config_rule_statement is unreachable from any of the start symbol(s).
File "sysver.mly", line 7936, characters 8-24:
Warning: symbol const_identifier is unreachable from any of the start symbol(s).
File "sysver.mly", line 8676, characters 8-32:
Warning: symbol constant_base_expression is unreachable from any of the start symbol(s).
File "sysver.mly", line 9777, characters 8-33:
Warning: symbol constant_param_expression is unreachable from any of the start symbol(s).
File "sysver.mly", line 8667, characters 8-29:
Warning: symbol constraint_identifier is unreachable from any of the start symbol(s).
File "sysver.mly", line 9091, characters 8-34:
Warning: symbol controlled_reference_event is unreachable from any of the start symbol(s).
File "sysver.mly", line 10125, characters 8-18:
Warning: symbol data_event is unreachable from any of the start symbol(s).
File "sysver.mly", line 9422, characters 8-30:
Warning: symbol data_source_expression is unreachable from any of the start symbol(s).
File "sysver.mly", line 563, characters 0-12:
Warning: symbol decimal_base is unreachable from any of the start symbol(s).
File "sysver.mly", line 561, characters 0-14:
Warning: symbol decimal_base_3 is unreachable from any of the start symbol(s).
File "sysver.mly", line 10286, characters 8-22:
Warning: symbol default_clause is unreachable from any of the start symbol(s).
File "sysver.mly", line 9256, characters 8-24:
Warning: symbol design_statement is unreachable from any of the start symbol(s).
File "sysver.mly", line 11537, characters 0-18:
Warning: symbol design_statement_3 is unreachable from any of the start symbol(s).
File "sysver.mly", line 11533, characters 8-28:
Warning: symbol design_statement_3_4 is unreachable from any of the start symbol(s).
File "sysver.mly", line 10211, characters 8-37:
Warning: symbol dimension_constant_expression is unreachable from any of the start symbol(s).
File "sysver.mly", line 564, characters 0-11:
Warning: symbol edge_symbol is unreachable from any of the start symbol(s).
File "sysver.mly", line 9900, characters 8-23:
Warning: symbol enable_terminal is unreachable from any of the start symbol(s).
File "sysver.mly", line 7949, characters 8-23:
Warning: symbol end_edge_offset is unreachable from any of the start symbol(s).
File "sysver.mly", line 8787, characters 8-23:
Warning: symbol enum_identifier is unreachable from any of the start symbol(s).
File "sysver.mly", line 9723, characters 8-25:
Warning: symbol error_limit_value is unreachable from any of the start symbol(s).
File "sysver.mly", line 10214, characters 8-24:
Warning: symbol event_based_flag is unreachable from any of the start symbol(s).
File "sysver.mly", line 9217, characters 8-24:
Warning: symbol event_identifier is unreachable from any of the start symbol(s).
File "sysver.mly", line 568, characters 0-3:
Warning: symbol exp is unreachable from any of the start symbol(s).
File "sysver.mly", line 9147, characters 8-19:
Warning: symbol expression1 is unreachable from any of the start symbol(s).
File "sysver.mly", line 9150, characters 8-19:
Warning: symbol expression2 is unreachable from any of the start symbol(s).
File "sysver.mly", line 9153, characters 8-19:
Warning: symbol expression3 is unreachable from any of the start symbol(s).
File "sysver.mly", line 8207, characters 8-22:
Warning: symbol file_path_spec is unreachable from any of the start symbol(s).
File "sysver.mly", line 8750, characters 8-25:
Warning: symbol formal_identifier is unreachable from any of the start symbol(s).
File "sysver.mly", line 9488, characters 8-27:
Warning: symbol function_identifier is unreachable from any of the start symbol(s).
File "sysver.mly", line 8169, characters 8-32:
Warning: symbol gate_instance_identifier is unreachable from any of the start symbol(s).
File "sysver.mly", line 7988, characters 8-33:
Warning: symbol generate_block_identifier is unreachable from any of the start symbol(s).
File "sysver.mly", line 9930, characters 8-25:
Warning: symbol genvar_identifier is unreachable from any of the start symbol(s).
File "sysver.mly", line 558, characters 0-8:
Warning: symbol hex_base is unreachable from any of the start symbol(s).
File "sysver.mly", line 567, characters 0-10:
Warning: symbol hex_base_3 is unreachable from any of the start symbol(s).
File "sysver.mly", line 569, characters 0-9:
Warning: symbol hex_digit is unreachable from any of the start symbol(s).
File "sysver.mly", line 10198, characters 8-37:
Warning: symbol hierarchical_block_identifier is unreachable from any of the start symbol(s).
File "sysver.mly", line 9016, characters 8-37:
Warning: symbol hierarchical_event_identifier is unreachable from any of the start symbol(s).
File "sysver.mly", line 9428, characters 8-40:
Warning: symbol hierarchical_function_identifier is unreachable from any of the start symbol(s).
File "sysver.mly", line 9293, characters 8-35:
Warning: symbol hierarchical_net_identifier is unreachable from any of the start symbol(s).
File "sysver.mly", line 8811, characters 8-41:
Warning: symbol hierarchical_parameter_identifier is unreachable from any of the start symbol(s).
File "sysver.mly", line 9042, characters 8-36:
Warning: symbol hierarchical_task_identifier is unreachable from any of the start symbol(s).
File "sysver.mly", line 8712, characters 8-40:
Warning: symbol hierarchical_variable_identifier is unreachable from any of the start symbol(s).
File "sysver.mly", line 8893, characters 8-25:
Warning: symbol include_statement is unreachable from any of the start symbol(s).
File "sysver.mly", line 8587, characters 8-29:
Warning: symbol inout_port_identifier is unreachable from any of the start symbol(s).
File "sysver.mly", line 8902, characters 8-22:
Warning: symbol inout_terminal is unreachable from any of the start symbol(s).
File "sysver.mly", line 10307, characters 8-29:
Warning: symbol input_port_identifier is unreachable from any of the start symbol(s).
File "sysver.mly", line 10280, characters 8-22:
Warning: symbol input_terminal is unreachable from any of the start symbol(s).
File "sysver.mly", line 7979, characters 8-19:
Warning: symbol inst_clause is unreachable from any of the start symbol(s).
File "sysver.mly", line 9909, characters 8-17:
Warning: symbol inst_name is unreachable from any of the start symbol(s).
File "sysver.mly", line 12306, characters 0-11:
Warning: symbol inst_name_3 is unreachable from any of the start symbol(s).
File "sysver.mly", line 8239, characters 8-27:
Warning: symbol instance_identifier is unreachable from any of the start symbol(s).
File "sysver.mly", line 8828, characters 8-28:
Warning: symbol interface_identifier is unreachable from any of the start symbol(s).
File "sysver.mly", line 8391, characters 8-37:
Warning: symbol interface_instance_identifier is unreachable from any of the start symbol(s).
File "sysver.mly", line 572, characters 0-12:
Warning: symbol level_symbol is unreachable from any of the start symbol(s).
File "sysver.mly", line 9501, characters 8-22:
Warning: symbol liblist_clause is unreachable from any of the start symbol(s).
File "sysver.mly", line 11790, characters 0-16:
Warning: symbol liblist_clause_3 is unreachable from any of the start symbol(s).
File "sysver.mly", line 7905, characters 8-27:
Warning: symbol library_declaration is unreachable from any of the start symbol(s).
File "sysver.mly", line 10314, characters 0-21:
Warning: symbol library_declaration_5 is unreachable from any of the start symbol(s).
File "sysver.mly", line 10322, characters 8-29:
Warning: symbol library_declaration_6 is unreachable from any of the start symbol(s).
File "sysver.mly", line 10318, characters 0-23:
Warning: symbol library_declaration_6_5 is unreachable from any of the start symbol(s).
File "sysver.mly", line 10045, characters 0-20:
Warning: symbol library_descriptions is unreachable from any of the start symbol(s).
File "sysver.mly", line 9313, characters 8-26:
Warning: symbol library_identifier is unreachable from any of the start symbol(s).
File "sysver.mly", line 9353, characters 8-20:
Warning: symbol library_text is unreachable from any of the start symbol(s).
File "sysver.mly", line 11634, characters 0-14:
Warning: symbol library_text_2 is unreachable from any of the start symbol(s).
File "sysver.mly", line 9894, characters 8-31:
Warning: symbol lsb_constant_expression is unreachable from any of the start symbol(s).
File "sysver.mly", line 8673, characters 8-25:
Warning: symbol method_identifier is unreachable from any of the start symbol(s).
File "sysver.mly", line 8899, characters 8-26:
Warning: symbol modport_identifier is unreachable from any of the start symbol(s).
File "sysver.mly", line 9078, characters 8-25:
Warning: symbol module_identifier is unreachable from any of the start symbol(s).
File "sysver.mly", line 8177, characters 8-34:
Warning: symbol module_instance_identifier is unreachable from any of the start symbol(s).
File "sysver.mly", line 10266, characters 8-31:
Warning: symbol msb_constant_expression is unreachable from any of the start symbol(s).
File "sysver.mly", line 552, characters 0-20:
Warning: symbol name_of_udp_instance is unreachable from any of the start symbol(s).
File "sysver.mly", line 7926, characters 8-25:
Warning: symbol ncontrol_terminal is unreachable from any of the start symbol(s).
File "sysver.mly", line 10028, characters 8-22:
Warning: symbol net_identifier is unreachable from any of the start symbol(s).
File "sysver.mly", line 9676, characters 8-18:
Warning: symbol notify_reg is unreachable from any of the start symbol(s).
File "sysver.mly", line 566, characters 0-10:
Warning: symbol octal_base is unreachable from any of the start symbol(s).
File "sysver.mly", line 559, characters 0-12:
Warning: symbol octal_base_3 is unreachable from any of the start symbol(s).
File "sysver.mly", line 9758, characters 8-24:
Warning: symbol one_line_comment is unreachable from any of the start symbol(s).
File "sysver.mly", line 8945, characters 8-30:
Warning: symbol output_port_identifier is unreachable from any of the start symbol(s).
File "sysver.mly", line 571, characters 0-13:
Warning: symbol output_symbol is unreachable from any of the start symbol(s).
File "sysver.mly", line 10145, characters 8-23:
Warning: symbol output_terminal is unreachable from any of the start symbol(s).
File "sysver.mly", line 8882, characters 8-28:
Warning: symbol parameter_identifier is unreachable from any of the start symbol(s).
File "sysver.mly", line 8298, characters 8-25:
Warning: symbol pcontrol_terminal is unreachable from any of the start symbol(s).
File "sysver.mly", line 9188, characters 8-23:
Warning: symbol port_identifier is unreachable from any of the start symbol(s).
File "sysver.mly", line 9110, characters 8-26:
Warning: symbol program_identifier is unreachable from any of the start symbol(s).
File "sysver.mly", line 9985, characters 8-35:
Warning: symbol program_instance_identifier is unreachable from any of the start symbol(s).
File "sysver.mly", line 9347, characters 8-27:
Warning: symbol property_identifier is unreachable from any of the start symbol(s).
File "sysver.mly", line 8398, characters 8-23:
Warning: symbol reference_event is unreachable from any of the start symbol(s).
File "sysver.mly", line 9770, characters 8-26:
Warning: symbol reject_limit_value is unreachable from any of the start symbol(s).
File "sysver.mly", line 9203, characters 8-26:
Warning: symbol remain_active_flag is unreachable from any of the start symbol(s).
File "sysver.mly", line 8382, characters 8-23:
Warning: symbol sequence_abbrev is unreachable from any of the start symbol(s).
File "sysver.mly", line 10103, characters 8-27:
Warning: symbol sequence_identifier is unreachable from any of the start symbol(s).
File "sysver.mly", line 9937, characters 8-25:
Warning: symbol signal_identifier is unreachable from any of the start symbol(s).
File "sysver.mly", line 554, characters 0-17:
Warning: symbol simple_identifier is unreachable from any of the start symbol(s).
File "sysver.mly", line 9872, characters 8-12:
Warning: symbol size is unreachable from any of the start symbol(s).
File "sysver.mly", line 7985, characters 8-28:
Warning: symbol specparam_identifier is unreachable from any of the start symbol(s).
File "sysver.mly", line 9622, characters 8-27:
Warning: symbol stamptime_condition is unreachable from any of the start symbol(s).
File "sysver.mly", line 8885, characters 8-25:
Warning: symbol start_edge_offset is unreachable from any of the start symbol(s).
File "sysver.mly", line 556, characters 0-26:
Warning: symbol system_function_identifier is unreachable from any of the start symbol(s).
File "sysver.mly", line 562, characters 0-22:
Warning: symbol system_task_identifier is unreachable from any of the start symbol(s).
File "sysver.mly", line 8094, characters 8-33:
Warning: symbol t01_path_delay_expression is unreachable from any of the start symbol(s).
File "sysver.mly", line 8443, characters 8-33:
Warning: symbol t0x_path_delay_expression is unreachable from any of the start symbol(s).
File "sysver.mly", line 9253, characters 8-33:
Warning: symbol t0z_path_delay_expression is unreachable from any of the start symbol(s).
File "sysver.mly", line 10100, characters 8-33:
Warning: symbol t10_path_delay_expression is unreachable from any of the start symbol(s).
File "sysver.mly", line 8422, characters 8-33:
Warning: symbol t1x_path_delay_expression is unreachable from any of the start symbol(s).
File "sysver.mly", line 9244, characters 8-33:
Warning: symbol t1z_path_delay_expression is unreachable from any of the start symbol(s).
File "sysver.mly", line 9548, characters 8-31:
Warning: symbol t_path_delay_expression is unreachable from any of the start symbol(s).
File "sysver.mly", line 8540, characters 8-23:
Warning: symbol task_identifier is unreachable from any of the start symbol(s).
File "sysver.mly", line 8437, characters 8-27:
Warning: symbol terminal_identifier is unreachable from any of the start symbol(s).
File "sysver.mly", line 8365, characters 8-29:
Warning: symbol text_macro_identifier is unreachable from any of the start symbol(s).
File "sysver.mly", line 9059, characters 8-35:
Warning: symbol tfall_path_delay_expression is unreachable from any of the start symbol(s).
File "sysver.mly", line 8802, characters 8-17:
Warning: symbol threshold is unreachable from any of the start symbol(s).
File "sysver.mly", line 557, characters 0-9:
Warning: symbol time_unit is unreachable from any of the start symbol(s).
File "sysver.mly", line 8936, characters 8-26:
Warning: symbol timing_check_limit is unreachable from any of the start symbol(s).
File "sysver.mly", line 9764, characters 8-28:
Warning: symbol topmodule_identifier is unreachable from any of the start symbol(s).
File "sysver.mly", line 8097, characters 8-35:
Warning: symbol trise_path_delay_expression is unreachable from any of the start symbol(s).
File "sysver.mly", line 10056, characters 8-33:
Warning: symbol tx0_path_delay_expression is unreachable from any of the start symbol(s).
File "sysver.mly", line 8029, characters 8-33:
Warning: symbol tx1_path_delay_expression is unreachable from any of the start symbol(s).
File "sysver.mly", line 9191, characters 8-33:
Warning: symbol txz_path_delay_expression is unreachable from any of the start symbol(s).
File "sysver.mly", line 9495, characters 8-23:
Warning: symbol type_identifier is unreachable from any of the start symbol(s).
File "sysver.mly", line 9959, characters 8-33:
Warning: symbol tz0_path_delay_expression is unreachable from any of the start symbol(s).
File "sysver.mly", line 7963, characters 8-33:
Warning: symbol tz1_path_delay_expression is unreachable from any of the start symbol(s).
File "sysver.mly", line 9344, characters 8-32:
Warning: symbol tz_path_delay_expression is unreachable from any of the start symbol(s).
File "sysver.mly", line 8318, characters 8-33:
Warning: symbol tzx_path_delay_expression is unreachable from any of the start symbol(s).
File "sysver.mly", line 8037, characters 0-16:
Warning: symbol udp_declaration2 is unreachable from any of the start symbol(s).
File "sysver.mly", line 10415, characters 0-19:
Warning: symbol udp_declaration2_10 is unreachable from any of the start symbol(s).
File "sysver.mly", line 8605, characters 8-22:
Warning: symbol udp_identifier is unreachable from any of the start symbol(s).
File "sysver.mly", line 8670, characters 8-31:
Warning: symbol udp_instance_identifier is unreachable from any of the start symbol(s).
File "sysver.mly", line 553, characters 0-15:
Warning: symbol unsigned_number is unreachable from any of the start symbol(s).
File "sysver.mly", line 8446, characters 8-18:
Warning: symbol use_clause is unreachable from any of the start symbol(s).
File "sysver.mly", line 10739, characters 8-20:
Warning: symbol use_clause_3 is unreachable from any of the start symbol(s).
File "sysver.mly", line 10743, characters 8-20:
Warning: symbol use_clause_5 is unreachable from any of the start symbol(s).
File "sysver.mly", line 7966, characters 8-33:
Warning: symbol width_constant_expression is unreachable from any of the start symbol(s).
File "sysver.mly", line 573, characters 0-7:
Warning: symbol x_digit is unreachable from any of the start symbol(s).
File "sysver.mly", line 570, characters 0-7:
Warning: symbol z_digit is unreachable from any of the start symbol(s).
File "sysver.mly", line 560, characters 0-6:
Warning: symbol z_or_x is unreachable from any of the start symbol(s).
Grammar has 472 nonterminal symbols, among which 1 start symbols.
Grammar has 537 terminal symbols.
Grammar has 5221 productions.
nullable(zero_or_one) = false
nullable(white_space) = false
nullable(wait_statement) = false
nullable(variable_lvalue_8) = true
nullable(variable_lvalue_3) = true
nullable(variable_lvalue) = false
nullable(variable_dimension_2) = true
nullable(variable_dimension) = true
nullable(variable_decl_or_assignment) = false
nullable(variable_decl_assignment) = false
nullable(variable_assignment) = false
nullable(value_range) = false
nullable(unpacked_dimension) = false
nullable(unique_priority) = false
nullable(unary_operator) = false
nullable(unary_module_path_operator) = false
nullable(udp_port_list_5) = true
nullable(udp_port_declaration) = false
nullable(udp_output_declaration) = false
nullable(udp_instantiation_6) = true
nullable(udp_instance_8) = true
nullable(udp_instance_3) = true
nullable(udp_declaration_port_list_5) = true
nullable(udp_declaration_4) = true
nullable(udp_declaration_27) = true
nullable(udp_declaration) = false
nullable(udp_body) = false
nullable(type_declaration_identifier_3) = true
nullable(type_declaration) = false
nullable(timing_check_event_control) = false
nullable(timing_check_condition) = false
nullable(timeunits_declaration) = false
nullable(time_literal) = false
nullable(tf_output_declaration_4) = true
nullable(tf_output_declaration) = false
nullable(tf_input_declaration_4) = true
nullable(tf_input_declaration) = false
nullable(tf_inout_declaration_4) = true
nullable(tf_inout_declaration) = false
nullable(tf_data_type) = false
nullable(task_proto_formal) = false
nullable(task_port_list_6) = true
nullable(task_port_list_3) = true
nullable(task_port_list) = false
nullable(task_port_item) = false
nullable(task_or_function_identifier) = false
nullable(task_item_declaration) = false
nullable(task_body_declaration_6) = true
nullable(task_body_declaration_5) = true
nullable(task_body_declaration_17) = true
nullable(task_body_declaration_16) = true
nullable(task_body_declaration) = false
nullable(system_timing_check) = false
nullable(system_task_enable_3_5) = true
nullable(system_function_call_3_5) = true
nullable(struct_member_label) = false
nullable(string_literal_3) = true
nullable(strength1) = false
nullable(strength0) = false
nullable(statement_or_null) = false
nullable(statement_item) = false
nullable(state_dependent_path_declaration) = false
nullable(start) = true
nullable(specparam_assignment) = false
nullable(specify_terminal_descriptor) = false
nullable(specify_item) = false
nullable(specify_block_3) = true
nullable(source_text_3) = true
nullable(simple_type) = false
nullable(simple_path_declaration) = false
nullable(simple_hierarchical_branch_4_3_6) = true
nullable(simple_hierarchical_branch_4_3) = true
nullable(simple_hierarchical_branch_3) = true
nullable(signing) = false
nullable(sign) = false
nullable(showcancelled_declaration) = false
nullable(sequential_body_5) = true
nullable(sequence_spec) = false
nullable(sequence_formal_list_4) = true
nullable(sequence_expr_9) = true
nullable(sequence_expr_4) = true
nullable(sequence_expr_17) = true
nullable(sequence_expr_12) = true
nullable(sequence_expr) = false
nullable(sequence_declaration_6) = true
nullable(seq_input_list) = false
nullable(seq_block_5) = true
nullable(seq_block_4) = true
nullable(scalar_timing_check_condition) = false
nullable(scalar_constant) = false
nullable(real_number) = false
nullable(range_or_type_2) = true
nullable(range_or_type) = false
nullable(range_list_or_array_6) = true
nullable(range_list_or_array) = false
nullable(range_expression) = false
nullable(pulsestyle_declaration) = false
nullable(pulse_control_specparam) = false
nullable(pullup_strength) = false
nullable(pulldown_strength) = false
nullable(property_spec) = false
nullable(property_qualifier) = false
nullable(property_formal_list_4) = true
nullable(property_expr) = false
nullable(property_declaration_6) = true
nullable(program_item) = false
nullable(program_instantiation_5) = true
nullable(program_instance_3) = true
nullable(program_declaration_4) = true
nullable(program_declaration_22) = true
nullable(program_declaration_10) = true
nullable(program_declaration) = false
nullable(procedural_timing_control) = false
nullable(procedural_continuous_assignments) = false
nullable(procedural_assertion_item) = false
nullable(primary_8_6_5) = true
nullable(primary_6) = true
nullable(primary_22) = true
nullable(primary) = false
nullable(port_type_6) = true
nullable(port_type_13) = true
nullable(port_type_10) = true
nullable(port_type) = false
nullable(port_expression_6) = true
nullable(port_expression) = false
nullable(port_declaration) = false
nullable(port) = true
nullable(polarity_operator) = false
nullable(path_delay_value) = false
nullable(path_declaration) = false
nullable(pass_switchtype) = false
nullable(pass_en_switchtype) = false
nullable(parameter_port_list_5) = true
nullable(parameter_declaration_4) = true
nullable(parameter_declaration) = false
nullable(par_block_5) = true
nullable(par_block_4) = true
nullable(packed_dimension) = false
nullable(output_identifier) = false
nullable(output_declaration) = false
nullable(ordered_parameter_assignment) = false
nullable(octal_value_3) = true
nullable(octal_digit) = false
nullable(number) = false
nullable(non_zero_unsigned_number_3) = true
nullable(non_zero_decimal_digit) = false
nullable(non_port_program_item) = false
nullable(non_port_module_item) = false
nullable(non_port_interface_item) = false
nullable(non_integer_type) = false
nullable(non_generic_port_declaration) = false
nullable(next_state) = false
nullable(net_type) = false
nullable(net_lvalue_8) = true
nullable(net_lvalue_3) = true
nullable(net_lvalue) = false
nullable(net_declaration_62) = true
nullable(net_declaration_52) = true
nullable(net_declaration_28) = true
nullable(net_declaration_18) = true
nullable(net_declaration) = false
nullable(named_task_proto_5) = true
nullable(named_parameter_assignment) = false
nullable(name_of_instance_3) = true
nullable(name_of_gate_instance_3) = true
nullable(n_output_gatetype) = false
nullable(n_output_gate_instance_5) = true
nullable(n_input_gatetype) = false
nullable(n_input_gate_instance_7) = true
nullable(multi_clock_sequence_3) = true
nullable(multi_clock_property_expr) = false
nullable(mos_switchtype) = false
nullable(module_root_item) = false
nullable(module_path_primary) = false
nullable(module_path_mintypmax_expression) = false
nullable(module_path_expression) = false
nullable(module_path_concatenation_4) = true
nullable(module_or_generate_item_declaration) = false
nullable(module_or_generate_item) = false
nullable(module_keyword) = false
nullable(module_item) = false
nullable(module_instantiation_5) = true
nullable(module_declaration_4) = true
nullable(module_declaration_23) = true
nullable(module_declaration_10) = true
nullable(module_declaration) = false
nullable(module_common_item) = false
nullable(modport_tf_port_8) = true
nullable(modport_tf_port_4) = true
nullable(modport_tf_port_11) = true
nullable(modport_tf_port) = false
nullable(modport_simple_ports_declaration) = false
nullable(modport_ports_declaration) = false
nullable(modport_item_5) = true
nullable(modport_declaration_4) = true
nullable(mintypmax_expression) = false
nullable(method_qualifier) = false
nullable(method_prototype) = false
nullable(loop_statement_35) = true
nullable(loop_statement_30) = true
nullable(loop_statement) = false
nullable(local_parameter_declaration_4) = true
nullable(local_parameter_declaration) = false
nullable(list_of_variable_port_identifiers_5) = true
nullable(list_of_variable_identifiers_or_assignments) = false
nullable(list_of_variable_identifiers_4) = true
nullable(list_of_variable_decl_assignments_3) = true
nullable(list_of_variable_assignments_3) = true
nullable(list_of_udp_port_identifiers_3) = true
nullable(list_of_type_assignments_3) = true
nullable(list_of_tf_variable_identifiers_5) = true
nullable(list_of_tf_port_identifiers_5_6) = true
nullable(list_of_tf_port_identifiers_5) = true
nullable(list_of_tf_port_identifiers_3) = true
nullable(list_of_specparam_assignments_3) = true
nullable(list_of_ports_4) = true
nullable(list_of_port_identifiers_4_6) = true
nullable(list_of_port_identifiers_4) = true
nullable(list_of_port_identifiers_3) = true
nullable(list_of_port_declarations_4) = true
nullable(list_of_port_declarations) = false
nullable(list_of_port_connections_8) = true
nullable(list_of_port_connections_6) = true
nullable(list_of_port_connections_3) = true
nullable(list_of_port_connections_10) = true
nullable(list_of_port_connections) = true
nullable(list_of_path_outputs_3) = true
nullable(list_of_path_inputs_3) = true
nullable(list_of_path_delay_expressions) = false
nullable(list_of_parameter_assignments_6) = true
nullable(list_of_parameter_assignments_3) = true
nullable(list_of_parameter_assignments) = false
nullable(list_of_param_assignments_3) = true
nullable(list_of_net_identifiers_4_6) = true
nullable(list_of_net_identifiers_4) = true
nullable(list_of_net_identifiers_3) = true
nullable(list_of_net_decl_assignments_3) = true
nullable(list_of_net_assignments_3) = true
nullable(list_of_modport_port_identifiers_3) = true
nullable(list_of_interface_identifiers_4_6) = true
nullable(list_of_interface_identifiers_4) = true
nullable(list_of_interface_identifiers_3) = true
nullable(list_of_genvar_identifiers_3) = true
nullable(list_of_function_proto_formals_2_5) = true
nullable(list_of_dpi_proto_formals_2_5) = true
nullable(list_of_defparam_assignments_3) = true
nullable(list_of_constant_arguments_3) = true
nullable(list_of_constant_arguments_10) = true
nullable(list_of_constant_arguments) = true
nullable(list_of_clocking_decl_assign_3) = true
nullable(list_of_arguments_3) = true
nullable(list_of_arguments_10) = true
nullable(list_of_arguments) = true
nullable(lifetime) = false
nullable(level_input_list_3) = true
nullable(jump_statement) = false
nullable(join_keyword) = false
nullable(interface_port_declaration) = false
nullable(interface_or_generate_item) = false
nullable(interface_item) = false
nullable(interface_instantiation_5) = true
nullable(interface_declaration_4) = true
nullable(interface_declaration_22) = true
nullable(interface_declaration_10) = true
nullable(interface_declaration) = false
nullable(integer_vector_type) = false
nullable(integer_type) = false
nullable(integer_atom_type) = false
nullable(input_identifier) = false
nullable(input_declaration) = false
nullable(inout_declaration) = false
nullable(init_val) = false
nullable(inc_or_dec_operator) = false
nullable(inc_or_dec_expression) = false
nullable(import_export) = false
nullable(implicit_class_handle) = true
nullable(if_else_if_statement_8) = true
nullable(identifier_list_3) = true
nullable(identifier) = false
nullable(hierarchical_identifier) = false
nullable(hex_value_3) = true
nullable(genvar_module_case_item_3) = true
nullable(genvar_module_case_item) = false
nullable(genvar_interface_case_item_3) = true
nullable(genvar_interface_case_item) = false
nullable(genvar_assignment) = false
nullable(generic_interface_port_declaration) = false
nullable(generated_module_instantiation_3) = true
nullable(generated_interface_instantiation_3) = true
nullable(generate_module_named_block_5) = true
nullable(generate_module_named_block) = false
nullable(generate_module_item) = false
nullable(generate_module_case_statement_7) = true
nullable(generate_module_block_4) = true
nullable(generate_interface_named_block_5) = true
nullable(generate_interface_named_block) = false
nullable(generate_interface_item) = false
nullable(generate_interface_case_statement_7) = true
nullable(generate_interface_block_4) = true
nullable(gate_instantiation_55) = true
nullable(gate_instantiation_5) = true
nullable(gate_instantiation_49) = true
nullable(gate_instantiation_43) = true
nullable(gate_instantiation_38) = true
nullable(gate_instantiation_32) = true
nullable(gate_instantiation_25) = true
nullable(gate_instantiation_18) = true
nullable(gate_instantiation_12) = true
nullable(gate_instantiation) = false
nullable(function_statement_or_null) = false
nullable(function_statement_item) = false
nullable(function_seq_block_4) = true
nullable(function_seq_block_3_5) = true
nullable(function_proto_formal) = false
nullable(function_port_list_3) = true
nullable(function_port_item) = false
nullable(function_loop_statement_25) = true
nullable(function_loop_statement_20) = true
nullable(function_loop_statement) = false
nullable(function_item_declaration) = false
nullable(function_if_else_if_statement_8) = true
nullable(function_data_type_9) = true
nullable(function_data_type_32) = true
nullable(function_data_type_3) = true
nullable(function_data_type_28_4) = true
nullable(function_data_type_25) = true
nullable(function_data_type_23) = true
nullable(function_data_type_18) = true
nullable(function_data_type_16) = true
nullable(function_data_type) = false
nullable(function_conditional_statement) = false
nullable(function_case_statement_8) = true
nullable(function_case_statement_26) = true
nullable(function_case_statement_17) = true
nullable(function_case_statement) = false
nullable(function_case_item_3) = true
nullable(function_case_item) = false
nullable(function_body_declaration_8) = true
nullable(function_body_declaration_7) = true
nullable(function_body_declaration_21) = true
nullable(function_body_declaration_20) = true
nullable(function_body_declaration) = false
nullable(extern_tf_declaration) = false
nullable(extern_method_declaration) = false
nullable(extern_constraint_declaration_8) = true
nullable(expression) = false
nullable(event_trigger) = false
nullable(event_expression) = false
nullable(event_control) = false
nullable(escaped_hierarchical_identifier_3) = true
nullable(escaped_hierarchical_branch_4_3_6) = true
nullable(escaped_hierarchical_branch_4_3) = true
nullable(escaped_hierarchical_branch_3) = true
nullable(enable_gatetype) = false
nullable(edge_sensitive_path_declaration) = false
nullable(edge_input_list_4) = true
nullable(edge_input_list_2) = true
nullable(edge_indicator) = false
nullable(edge_identifier) = false
nullable(edge_descriptor) = false
nullable(edge_control_specifier_5) = true
nullable(drive_strength) = false
nullable(dpi_proto_formal_3_5) = true
nullable(dpi_import_property) = false
nullable(dpi_import_export) = false
nullable(dpi_function_proto) = false
nullable(dpi_dimension_4) = true
nullable(dpi_dimension) = true
nullable(dot_named_port_connection) = false
nullable(dist_list_3) = true
nullable(dist_item) = false
nullable(disable_statement) = false
nullable(description) = false
nullable(delayed_reference) = false
nullable(delayed_data) = false
nullable(delay_value) = false
nullable(delay_or_event_control) = false
nullable(delay_control) = false
nullable(delay3) = false
nullable(delay2) = false
nullable(default_skew) = false
nullable(decimal_number_16) = true
nullable(decimal_number_11) = true
nullable(decimal_number) = false
nullable(decimal_digit) = false
nullable(data_type_48) = true
nullable(data_type_44_5) = true
nullable(data_type_40) = true
nullable(data_type_4) = true
nullable(data_type_34) = true
nullable(data_type_29) = true
nullable(data_type_27) = true
nullable(data_type_21) = true
nullable(data_type_19) = true
nullable(data_type_11) = true
nullable(data_type) = false
nullable(data_declaration) = false
nullable(cycle_delay_range) = false
nullable(cycle_delay_const_range_expression) = false
nullable(cover_property_statement) = false
nullable(continuous_assign) = false
nullable(constraint_set_5) = true
nullable(constraint_set) = false
nullable(constraint_expression) = false
nullable(constraint_declaration_6) = true
nullable(constraint_block) = false
nullable(constant_range_expression) = false
nullable(constant_primary) = false
nullable(constant_mintypmax_expression) = false
nullable(constant_expression) = false
nullable(constant_concatenation_4) = true
nullable(constant_concatenation_18) = true
nullable(constant_concatenation_11) = true
nullable(constant_concatenation) = false
nullable(const_or_range_expression) = false
nullable(conditional_statement) = false
nullable(concurrent_assertion_item_declaration) = false
nullable(concurrent_assertion_item) = false
nullable(concatenation_4) = true
nullable(concatenation_18) = true
nullable(concatenation_11) = true
nullable(concatenation) = false
nullable(combinational_body_4) = true
nullable(cmos_switchtype) = false
nullable(clockvar_expression) = false
nullable(clocking_skew) = false
nullable(clocking_item) = false
nullable(clocking_event) = false
nullable(clocking_drive) = false
nullable(clocking_direction) = false
nullable(clocking_decl_7) = true
nullable(class_scope_type_identifier_9) = true
nullable(class_scope_type_identifier_4) = true
nullable(class_scope_type_identifier) = false
nullable(class_property_6) = true
nullable(class_property_2) = true
nullable(class_property) = false
nullable(class_method_9) = true
nullable(class_method_5) = true
nullable(class_method_2) = true
nullable(class_method) = false
nullable(class_item_qualifier) = false
nullable(class_item) = false
nullable(class_declaration_11) = true
nullable(class_constraint) = false
nullable(charge_strength) = false
nullable(casting_type) = false
nullable(case_statement_8) = true
nullable(case_statement_26) = true
nullable(case_statement_17) = true
nullable(case_statement) = false
nullable(case_item_3) = true
nullable(case_item) = false
nullable(boolean_abbrev) = false
nullable(blocking_assignment) = false
nullable(block_variable_declaration) = false
nullable(block_item_declaration) = false
nullable(block_data_declaration) = false
nullable(bind_instantiation) = false
nullable(bind_directive) = false
nullable(binary_value_3) = true
nullable(binary_operator) = false
nullable(binary_module_path_operator) = false
nullable(binary_digit) = false
nullable(associative_dimension) = false
nullable(assignment_operator) = false
nullable(assert_property_statement) = false
nullable(array_member_label) = false
nullable(actual_arg_list_4) = true
nullable(actual_arg_list_13) = true
nullable(actual_arg_list) = false
nullable(action_block) = false
first(zero_or_one) = TOKEN_ZERO TOKEN_ONE
first(white_space) = TAB SPACE NEWLINE EOF
first(wait_statement) = WAIT_ORDER WAIT
first(variable_lvalue_8) = COMMA
first(variable_lvalue_3) = LBRACK
first(variable_lvalue) = SIMPLE_IDENTIFIER LCURLY BACKSLASH
first(variable_dimension_2) = LBRACK
first(variable_dimension) = LBRACK
first(variable_decl_or_assignment) = UNION TOKEN_PLUS_PLUS TOKEN_DASH_DASH TIME SVINT STRUCT STRING SIMPLE_IDENTIFIER SHORTREAL SHORTINT REG REALTIME REAL LONGINT LOGIC LCURLY INTEGER EVENT ENUM CHANDLE BYTE BIT BACKSLASH
first(variable_decl_assignment) = SIMPLE_IDENTIFIER BACKSLASH
first(variable_assignment) = TOKEN_PLUS_PLUS TOKEN_DASH_DASH SIMPLE_IDENTIFIER LCURLY BACKSLASH
first(value_range) = VOID VBAR UNSIGNED_NUMBER UNSIGNED TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS SYSTEM_FUNCTION_IDENTIFIER SVINT SUPER SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REALTIME REAL P_XNOR P_NXOR P_NAND PLUS PLING OCTAL_BASE NULL MINUS LPAREN LONGINT LOGIC LCURLY LBRACK INTEGER HEX_BASE DOUBLE_QUOTES DECIMAL_BASE CARET BYTE BIT BINARY_BASE BACKSLASH AMPERSAND
first(unpacked_dimension) = LBRACK
first(unique_priority) = UNIQUE PRIORITY
first(unary_operator) = VBAR TILDE_VBAR TILDE P_XNOR P_NXOR P_NAND PLUS PLING MINUS CARET AMPERSAND
first(unary_module_path_operator) = VBAR TILDE_VBAR TILDE P_XNOR P_NXOR P_NAND PLING CARET AMPERSAND
first(udp_port_list_5) = COMMA
first(udp_port_declaration) = REG OUTPUT INPUT
first(udp_output_declaration) = OUTPUT
first(udp_instantiation_6) = COMMA
first(udp_instance_8) = COMMA
first(udp_instance_3) = LBRACK
first(udp_declaration_port_list_5) = COMMA
first(udp_declaration_4) = REG OUTPUT INPUT
first(udp_declaration_27) = REG OUTPUT INPUT
first(udp_declaration) = PRIMITIVE EXTERN
first(udp_body) = TABLE INITIAL
first(type_declaration_identifier_3) = LBRACK
first(type_declaration) = TYPEDEF
first(timing_check_event_control) = POSEDGE NEGEDGE EDGE
first(timing_check_condition) = VOID VBAR UNSIGNED_NUMBER UNSIGNED TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS SYSTEM_FUNCTION_IDENTIFIER SVINT SUPER SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REALTIME REAL P_XNOR P_NXOR P_NAND PLUS PLING OCTAL_BASE NULL MINUS LPAREN LONGINT LOGIC LCURLY INTEGER HEX_BASE DOUBLE_QUOTES DECIMAL_BASE CARET BYTE BIT BINARY_BASE BACKSLASH AMPERSAND
first(timeunits_declaration) = TIMEUNIT TIMEPRECISION
first(time_literal) = UNSIGNED_NUMBER
first(tf_output_declaration_4) = LBRACK
first(tf_output_declaration) = OUTPUT
first(tf_input_declaration_4) = LBRACK
first(tf_input_declaration) = INPUT
first(tf_inout_declaration_4) = LBRACK
first(tf_inout_declaration) = INOUT
first(tf_data_type) = UNION TIME SVINT STRUCT STRING SIMPLE_IDENTIFIER SHORTREAL SHORTINT REG REALTIME REAL LONGINT LOGIC INTEGER EVENT ENUM CHANDLE BYTE BIT BACKSLASH
first(task_proto_formal) = REF OUTPUT INPUT INOUT CONST
first(task_port_list_6) = COMMA
first(task_port_list_3) = COMMA
first(task_port_list) = WOR WIRE WAND UNSIGNED UNION TRIREG TRIOR TRIAND TRI1 TRI0 TRI TIME SVINT SUPPLY1 SUPPLY0 STRUCT STRING SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REF REALTIME REAL OUTPUT LONGINT LOGIC LBRACK INTEGER INPUT INOUT EVENT ENUM CONST CHANDLE BYTE BIT BACKSLASH
first(task_port_item) = WOR WIRE WAND UNSIGNED UNION TRIREG TRIOR TRIAND TRI1 TRI0 TRI TIME SVINT SUPPLY1 SUPPLY0 STRUCT STRING SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REF REALTIME REAL OUTPUT LONGINT LOGIC LBRACK INTEGER INPUT INOUT EVENT ENUM CONST CHANDLE BYTE BIT BACKSLASH
first(task_or_function_identifier) = SIMPLE_IDENTIFIER BACKSLASH
first(task_item_declaration) = UNION TYPEDEF TIME SVINT STRUCT STRING STATIC SIMPLE_IDENTIFIER SHORTREAL SHORTINT REG REF REALTIME REAL PARAMETER OUTPUT LONGINT LOGIC LOCALPARAM INTEGER INPUT INOUT EVENT ENUM CONST CHANDLE BYTE BIT BACKSLASH AUTOMATIC
first(task_body_declaration_6) = WHILE WAIT_ORDER WAIT UNIQUE TOKEN_PLUS_PLUS TOKEN_DASH_DASH SYSTEM_TASK_IDENTIFIER SIMPLE_IDENTIFIER SEMICOLON RETURN REPEAT RELEASE P_POUNDPOUND P_MINUSGT PRIORITY LCURLY IF HASH FORK FOREVER FORCE FOR DO DISABLE DEASSIGN DASH_GT_GT COVER CONTINUE CASEZ CASEX CASE BREAK BEGIN BACKSLASH AT_STAR AT ASSIGN ASSERT
first(task_body_declaration_5) = UNION TYPEDEF TIME SVINT STRUCT STRING STATIC SIMPLE_IDENTIFIER SHORTREAL SHORTINT REG REF REALTIME REAL PARAMETER OUTPUT LONGINT LOGIC LOCALPARAM INTEGER INPUT INOUT EVENT ENUM CONST CHANDLE BYTE BIT BACKSLASH AUTOMATIC
first(task_body_declaration_17) = WHILE WAIT_ORDER WAIT UNIQUE TOKEN_PLUS_PLUS TOKEN_DASH_DASH SYSTEM_TASK_IDENTIFIER SIMPLE_IDENTIFIER SEMICOLON RETURN REPEAT RELEASE P_POUNDPOUND P_MINUSGT PRIORITY LCURLY IF HASH FORK FOREVER FORCE FOR DO DISABLE DEASSIGN DASH_GT_GT COVER CONTINUE CASEZ CASEX CASE BREAK BEGIN BACKSLASH AT_STAR AT ASSIGN ASSERT
first(task_body_declaration_16) = UNION TYPEDEF TIME SVINT STRUCT STRING STATIC SIMPLE_IDENTIFIER SHORTREAL SHORTINT REG REALTIME REAL PARAMETER LONGINT LOGIC LOCALPARAM INTEGER EVENT ENUM CONST CHANDLE BYTE BIT BACKSLASH AUTOMATIC
first(task_body_declaration) = SIMPLE_IDENTIFIER BACKSLASH
first(system_timing_check) = NOCHANGE FULLSKEW D_WIDTH D_TIMESKEW D_SKEW D_SETUPHOLD D_SETUP D_REMOVAL D_RECREM D_RECOVERY D_PERIOD D_HOLD
first(system_task_enable_3_5) = COMMA
first(system_function_call_3_5) = COMMA
first(struct_member_label) = SIMPLE_IDENTIFIER DEFAULT BACKSLASH
first(string_literal_3) = ANY_ASCII_CHARS
first(strength1) = WEAK1 SUPPLY1 STRONG1 PULL1
first(strength0) = WEAK0 SUPPLY0 STRONG0 PULL0
first(statement_or_null) = WHILE WAIT_ORDER WAIT UNIQUE TOKEN_PLUS_PLUS TOKEN_DASH_DASH SYSTEM_TASK_IDENTIFIER SIMPLE_IDENTIFIER SEMICOLON RETURN REPEAT RELEASE P_POUNDPOUND P_MINUSGT PRIORITY LCURLY IF HASH FORK FOREVER FORCE FOR DO DISABLE DEASSIGN DASH_GT_GT COVER CONTINUE CASEZ CASEX CASE BREAK BEGIN BACKSLASH AT_STAR AT ASSIGN ASSERT
first(statement_item) = WHILE WAIT_ORDER WAIT UNIQUE TOKEN_PLUS_PLUS TOKEN_DASH_DASH SYSTEM_TASK_IDENTIFIER SIMPLE_IDENTIFIER RETURN REPEAT RELEASE P_POUNDPOUND P_MINUSGT PRIORITY LCURLY IF HASH FORK FOREVER FORCE FOR DO DISABLE DEASSIGN DASH_GT_GT COVER CONTINUE CASEZ CASEX CASE BREAK BEGIN BACKSLASH AT_STAR AT ASSIGN ASSERT
first(state_dependent_path_declaration) = IF_NONE IF
first(start) = WOR WIRE WHILE WAND WAIT_ORDER WAIT VIRTUAL UNIQUE UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TOKEN_PLUS_PLUS TOKEN_DASH_DASH TIMEUNIT TIMEPRECISION TIME TASK SYSTEM_TASK_IDENTIFIER SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SIMPLE_IDENTIFIER SHORTREAL SHORTINT SEQUENCE SEMICOLON RETURN REPEAT RELEASE REG REALTIME REAL P_POUNDPOUND P_MINUSGT PROPERTY PROGRAM PRIORITY PRIMITIVE MODULE MACROMODULE LONGINT LOGIC LOCALPARAM LCURLY INTERFACE INTEGER IMPORT IF HASH GENVAR FUNCTION FORK FOREVER FORCE FOR EXTERN EXPORT EVENT ENUM DO DISABLE DEFAULT DEASSIGN DASH_GT_GT COVER CONTINUE CONSTRAINT CONST CLOCKING CLASS CHANDLE CASEZ CASEX CASE BYTE BREAK BIT BIND BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT
first(specparam_assignment) = SIMPLE_IDENTIFIER PATHPULSE BACKSLASH
first(specify_terminal_descriptor) = SIMPLE_IDENTIFIER BACKSLASH
first(specify_item) = SPECPARAM SHOWCANCELLED PULSESTYLE_ONEVENT PULSESTYLE_ONDETECT NOSHOWCANCELLED NOCHANGE LPAREN IF_NONE IF FULLSKEW D_WIDTH D_TIMESKEW D_SKEW D_SETUPHOLD D_SETUP D_REMOVAL D_RECREM D_RECOVERY D_PERIOD D_HOLD
first(specify_block_3) = SPECPARAM SHOWCANCELLED PULSESTYLE_ONEVENT PULSESTYLE_ONDETECT NOSHOWCANCELLED NOCHANGE LPAREN IF_NONE IF FULLSKEW D_WIDTH D_TIMESKEW D_SKEW D_SETUPHOLD D_SETUP D_REMOVAL D_RECREM D_RECOVERY D_PERIOD D_HOLD
first(source_text_3) = WOR WIRE WHILE WAND WAIT_ORDER WAIT VIRTUAL UNIQUE UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TOKEN_PLUS_PLUS TOKEN_DASH_DASH TIME TASK SYSTEM_TASK_IDENTIFIER SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SIMPLE_IDENTIFIER SHORTREAL SHORTINT SEQUENCE SEMICOLON RETURN REPEAT RELEASE REG REALTIME REAL P_POUNDPOUND P_MINUSGT PROPERTY PROGRAM PRIORITY PRIMITIVE MODULE MACROMODULE LONGINT LOGIC LOCALPARAM LCURLY INTERFACE INTEGER IMPORT IF HASH GENVAR FUNCTION FORK FOREVER FORCE FOR EXTERN EXPORT EVENT ENUM DO DISABLE DEFAULT DEASSIGN DASH_GT_GT COVER CONTINUE CONSTRAINT CONST CLOCKING CLASS CHANDLE CASEZ CASEX CASE BYTE BREAK BIT BIND BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT
first(simple_type) = TIME SVINT SIMPLE_IDENTIFIER SHORTREAL SHORTINT REG REALTIME REAL LONGINT LOGIC INTEGER BYTE BIT BACKSLASH
first(simple_path_declaration) = LPAREN
first(simple_hierarchical_branch_4_3_6) = LBRACK
first(simple_hierarchical_branch_4_3) = DOT
first(simple_hierarchical_branch_3) = LBRACK
first(signing) = UNSIGNED SIGNED
first(sign) = PLUS MINUS
first(showcancelled_declaration) = SHOWCANCELLED NOSHOWCANCELLED
first(sequential_body_5) = LPAREN LEVEL_SYMBOL EDGE_SYMBOL
first(sequence_spec) = VOID VBAR UNSIGNED_NUMBER UNSIGNED TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS SYSTEM_FUNCTION_IDENTIFIER SVINT SUPER SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REALTIME REAL P_XNOR P_POUNDPOUND P_NXOR P_NAND PLUS PLING OCTAL_BASE NULL MINUS LPAREN LONGINT LOGIC LCURLY INTEGER HEX_BASE FIRST_MATCH DOUBLE_QUOTES DECIMAL_BASE CARET BYTE BIT BINARY_BASE BACKSLASH AT AMPERSAND
first(sequence_formal_list_4) = COMMA
first(sequence_expr_9) = P_POUNDPOUND
first(sequence_expr_4) = P_POUNDPOUND
first(sequence_expr_17) = COMMA
first(sequence_expr_12) = COMMA
first(sequence_expr) = VOID VBAR UNSIGNED_NUMBER UNSIGNED TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS SYSTEM_FUNCTION_IDENTIFIER SVINT SUPER SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REALTIME REAL P_XNOR P_POUNDPOUND P_NXOR P_NAND PLUS PLING OCTAL_BASE NULL MINUS LPAREN LONGINT LOGIC LCURLY INTEGER HEX_BASE FIRST_MATCH DOUBLE_QUOTES DECIMAL_BASE CARET BYTE BIT BINARY_BASE BACKSLASH AMPERSAND
first(sequence_declaration_6) = UNION TIME SVINT STRUCT STRING SIMPLE_IDENTIFIER SHORTREAL SHORTINT REG REALTIME REAL LONGINT LOGIC INTEGER EVENT ENUM CHANDLE BYTE BIT BACKSLASH
first(seq_input_list) = LPAREN LEVEL_SYMBOL EDGE_SYMBOL
first(seq_block_5) = WHILE WAIT_ORDER WAIT UNIQUE TOKEN_PLUS_PLUS TOKEN_DASH_DASH SYSTEM_TASK_IDENTIFIER SIMPLE_IDENTIFIER SEMICOLON RETURN REPEAT RELEASE P_POUNDPOUND P_MINUSGT PRIORITY LCURLY IF HASH FORK FOREVER FORCE FOR DO DISABLE DEASSIGN DASH_GT_GT COVER CONTINUE CASEZ CASEX CASE BREAK BEGIN BACKSLASH AT_STAR AT ASSIGN ASSERT
first(seq_block_4) = UNION TYPEDEF TIME SVINT STRUCT STRING STATIC SIMPLE_IDENTIFIER SHORTREAL SHORTINT REG REALTIME REAL PARAMETER LONGINT LOGIC LOCALPARAM INTEGER EVENT ENUM CONST CHANDLE BYTE BIT BACKSLASH AUTOMATIC
first(scalar_timing_check_condition) = VOID VBAR UNSIGNED_NUMBER UNSIGNED TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS SYSTEM_FUNCTION_IDENTIFIER SVINT SUPER SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REALTIME REAL P_XNOR P_NXOR P_NAND PLUS PLING OCTAL_BASE NULL MINUS LPAREN LONGINT LOGIC LCURLY INTEGER HEX_BASE DOUBLE_QUOTES DECIMAL_BASE CARET BYTE BIT BINARY_BASE BACKSLASH AMPERSAND
first(scalar_constant) = TOKEN_ZERO TOKEN_TRUE2 TOKEN_TRUE1 TOKEN_TRUE TOKEN_ONE TOKEN_FALSE2 TOKEN_FALSE1 TOKEN_FALSE TOKEN_B1 TOKEN_B0
first(real_number) = UNSIGNED_NUMBER
first(range_or_type_2) = LBRACK
first(range_or_type) = VOID UNION TIME SVINT STRUCT STRING SIMPLE_IDENTIFIER SHORTREAL SHORTINT REG REALTIME REAL LONGINT LOGIC LBRACK INTEGER ENUM CHANDLE BYTE BIT BACKSLASH
first(range_list_or_array_6) = COMMA
first(range_list_or_array) = SIMPLE_IDENTIFIER LCURLY BACKSLASH
first(range_expression) = VOID VBAR UNSIGNED_NUMBER UNSIGNED TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS SYSTEM_FUNCTION_IDENTIFIER SVINT SUPER SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REALTIME REAL P_XNOR P_NXOR P_NAND PLUS PLING OCTAL_BASE NULL MINUS LPAREN LONGINT LOGIC LCURLY INTEGER HEX_BASE DOUBLE_QUOTES DECIMAL_BASE CARET BYTE BIT BINARY_BASE BACKSLASH AMPERSAND
first(pulsestyle_declaration) = PULSESTYLE_ONEVENT PULSESTYLE_ONDETECT
first(pulse_control_specparam) = PATHPULSE
first(pullup_strength) = LPAREN
first(pulldown_strength) = LPAREN
first(property_spec) = NOT LPAREN DISABLE AT
first(property_qualifier) = STATIC RANDC RAND PROTECTED LOCAL
first(property_formal_list_4) = COMMA
first(property_expr) = VOID VBAR UNSIGNED_NUMBER UNSIGNED TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS SYSTEM_FUNCTION_IDENTIFIER SVINT SUPER SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REALTIME REAL P_XNOR P_POUNDPOUND P_NXOR P_NAND PLUS PLING OCTAL_BASE NULL MINUS LPAREN LONGINT LOGIC LCURLY INTEGER HEX_BASE FIRST_MATCH DOUBLE_QUOTES DECIMAL_BASE CARET BYTE BIT BINARY_BASE BACKSLASH AMPERSAND
first(property_declaration_6) = UNION TIME SVINT STRUCT STRING SIMPLE_IDENTIFIER SHORTREAL SHORTINT REG REALTIME REAL LONGINT LOGIC INTEGER EVENT ENUM CHANDLE BYTE BIT BACKSLASH
first(program_item) = WOR WIRE WAND VIRTUAL UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TIME TASK SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SPECPARAM SIMPLE_IDENTIFIER SHORTREAL SHORTINT SEQUENCE REG REF REALTIME REAL PROPERTY PARAMETER OUTPUT LONGINT LOGIC LOCALPARAM INTERFACE INTEGER INPUT INOUT INITIAL IMPORT GENVAR FUNCTION EXPORT EVENT ENUM DEFAULT COVER CONSTRAINT CONST CLOCKING CLASS CHANDLE BYTE BIT BACKSLASH AUTOMATIC ASSIGN ASSERT
first(program_instantiation_5) = COMMA
first(program_instance_3) = LBRACK
first(program_declaration_4) = WOR WIRE WAND VIRTUAL UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TIME TASK SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SPECPARAM SIMPLE_IDENTIFIER SHORTREAL SHORTINT SEQUENCE REG REF REALTIME REAL PROPERTY PARAMETER OUTPUT LONGINT LOGIC LOCALPARAM INTERFACE INTEGER INPUT INOUT INITIAL IMPORT GENVAR FUNCTION EXPORT EVENT ENUM DEFAULT COVER CONSTRAINT CONST CLOCKING CLASS CHANDLE BYTE BIT BACKSLASH AUTOMATIC ASSIGN ASSERT
first(program_declaration_22) = WOR WIRE WAND VIRTUAL UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TIME TASK SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SPECPARAM SIMPLE_IDENTIFIER SHORTREAL SHORTINT SEQUENCE REG REF REALTIME REAL PROPERTY PARAMETER OUTPUT LONGINT LOGIC LOCALPARAM INTERFACE INTEGER INPUT INOUT INITIAL IMPORT GENVAR FUNCTION EXPORT EVENT ENUM DEFAULT COVER CONSTRAINT CONST CLOCKING CLASS CHANDLE BYTE BIT BACKSLASH AUTOMATIC ASSIGN ASSERT
first(program_declaration_10) = WOR WIRE WAND VIRTUAL UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TIME TASK SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SPECPARAM SIMPLE_IDENTIFIER SHORTREAL SHORTINT SEQUENCE REG REALTIME REAL PROPERTY PARAMETER LONGINT LOGIC LOCALPARAM INTEGER INITIAL IMPORT GENVAR FUNCTION EXPORT EVENT ENUM DEFAULT COVER CONSTRAINT CONST CLOCKING CLASS CHANDLE BYTE BIT BACKSLASH AUTOMATIC ASSIGN ASSERT
first(program_declaration) = PROGRAM EXTERN
first(procedural_timing_control) = HASH AT_STAR AT
first(procedural_continuous_assignments) = RELEASE FORCE DEASSIGN ASSIGN
first(procedural_assertion_item) = COVER ASSERT
first(primary_8_6_5) = COMMA
first(primary_6) = LBRACK
first(primary_22) = SIMPLE_IDENTIFIER BACKSLASH
first(primary) = VOID UNSIGNED_NUMBER UNSIGNED TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TIME THIS SYSTEM_FUNCTION_IDENTIFIER SVINT SUPER SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REALTIME REAL OCTAL_BASE NULL LPAREN LONGINT LOGIC LCURLY INTEGER HEX_BASE DECIMAL_BASE BYTE BIT BINARY_BASE BACKSLASH
first(port_type_6) = LBRACK
first(port_type_13) = LBRACK
first(port_type_10) = LBRACK
first(port_type) = WOR WIRE WAND UNSIGNED UNION TRIREG TRIOR TRIAND TRI1 TRI0 TRI TIME SVINT SUPPLY1 SUPPLY0 STRUCT STRING SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REALTIME REAL LONGINT LOGIC LBRACK INTEGER EVENT ENUM CHANDLE BYTE BIT BACKSLASH
first(port_expression_6) = COMMA
first(port_expression) = SIMPLE_IDENTIFIER LCURLY BACKSLASH
first(port_declaration) = SIMPLE_IDENTIFIER REF OUTPUT INTERFACE INPUT INOUT BACKSLASH
first(port) = SIMPLE_IDENTIFIER LCURLY DOT BACKSLASH
first(polarity_operator) = PLUS MINUS
first(path_delay_value) = VBAR UNSIGNED_NUMBER UNSIGNED TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TIME TILDE_VBAR TILDE SVINT SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REALTIME REAL P_XNOR P_NXOR P_NAND PLUS PLING OCTAL_BASE MINUS LPAREN LONGINT LOGIC LCURLY INTEGER HEX_BASE DOUBLE_QUOTES DECIMAL_BASE CARET BYTE BIT BINARY_BASE BACKSLASH AMPERSAND
first(path_declaration) = LPAREN IF_NONE IF
first(pass_switchtype) = TRAN RTRAN
first(pass_en_switchtype) = TRANIF1 TRANIF0 RTRANIF1 RTRANIF0
first(parameter_port_list_5) = COMMA
first(parameter_declaration_4) = LBRACK
first(parameter_declaration) = PARAMETER
first(par_block_5) = WHILE WAIT_ORDER WAIT UNIQUE TOKEN_PLUS_PLUS TOKEN_DASH_DASH SYSTEM_TASK_IDENTIFIER SIMPLE_IDENTIFIER SEMICOLON RETURN REPEAT RELEASE P_POUNDPOUND P_MINUSGT PRIORITY LCURLY IF HASH FORK FOREVER FORCE FOR DO DISABLE DEASSIGN DASH_GT_GT COVER CONTINUE CASEZ CASEX CASE BREAK BEGIN BACKSLASH AT_STAR AT ASSIGN ASSERT
first(par_block_4) = UNION TYPEDEF TIME SVINT STRUCT STRING STATIC SIMPLE_IDENTIFIER SHORTREAL SHORTINT REG REALTIME REAL PARAMETER LONGINT LOGIC LOCALPARAM INTEGER EVENT ENUM CONST CHANDLE BYTE BIT BACKSLASH AUTOMATIC
first(packed_dimension) = LBRACK
first(output_identifier) = SIMPLE_IDENTIFIER BACKSLASH
first(output_declaration) = OUTPUT
first(ordered_parameter_assignment) = VOID VBAR UNSIGNED_NUMBER UNSIGNED UNION TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS SYSTEM_FUNCTION_IDENTIFIER SVINT SUPER STRUCT STRING SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REALTIME REAL P_XNOR P_NXOR P_NAND PLUS PLING OCTAL_BASE NULL MINUS LPAREN LONGINT LOGIC LCURLY INTEGER HEX_BASE EVENT ENUM DOUBLE_QUOTES DECIMAL_BASE CHANDLE CARET BYTE BIT BINARY_BASE BACKSLASH AMPERSAND
first(octal_value_3) = Z_DIGIT X_DIGIT UNDERSCORE TOKEN_ZERO TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_ONE TOKEN_FOUR TOKEN_FIVE
first(octal_digit) = Z_DIGIT X_DIGIT TOKEN_ZERO TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_ONE TOKEN_FOUR TOKEN_FIVE
first(number) = UNSIGNED_NUMBER TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT OCTAL_BASE HEX_BASE DECIMAL_BASE BINARY_BASE
first(non_zero_unsigned_number_3) = UNDERSCORE TOKEN_ZERO TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT
first(non_zero_decimal_digit) = TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT
first(non_port_program_item) = WOR WIRE WAND VIRTUAL UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TIME TASK SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SPECPARAM SIMPLE_IDENTIFIER SHORTREAL SHORTINT SEQUENCE REG REALTIME REAL PROPERTY PARAMETER LONGINT LOGIC LOCALPARAM INTEGER INITIAL IMPORT GENVAR FUNCTION EXPORT EVENT ENUM DEFAULT COVER CONSTRAINT CONST CLOCKING CLASS CHANDLE BYTE BIT BACKSLASH AUTOMATIC ASSIGN ASSERT
first(non_port_module_item) = XOR XNOR WOR WIRE WAND VIRTUAL UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TIME TASK SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SPECPARAM SPECIFY SIMPLE_IDENTIFIER SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RNMOS REG REALTIME REAL RCMOS PULLUP PULLDOWN PROPERTY PMOS PARAMETER OR NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULE MACROMODULE LONGINT LOGIC LOCALPARAM INTEGER INITIAL IMPORT GENVAR GENERATE FUNCTION FINAL EXTERN EXPORT EVENT ENUM DEFPARAM DEFAULT COVER CONSTRAINT CONST CMOS CLOCKING CLASS CHANDLE BYTE BUFIF1 BUFIF0 BUF BIT BIND BACKSLASH AUTOMATIC ASSIGN ASSERT AND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS
first(non_port_interface_item) = WOR WIRE WAND VIRTUAL UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TIME TASK SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SPECPARAM SIMPLE_IDENTIFIER SHORTREAL SHORTINT SEQUENCE SEMICOLON REG REALTIME REAL PROPERTY PROGRAM PARAMETER MODPORT LONGINT LOGIC LOCALPARAM INTERFACE INTEGER INITIAL IMPORT GENVAR GENERATE FUNCTION FINAL EXTERN EXPORT EVENT ENUM DEFAULT COVER CONSTRAINT CONST CLOCKING CLASS CHANDLE BYTE BIT BIND BACKSLASH AUTOMATIC ASSIGN ASSERT ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS
first(non_integer_type) = TIME SHORTREAL REALTIME REAL
first(non_generic_port_declaration) = SIMPLE_IDENTIFIER REF OUTPUT INPUT INOUT BACKSLASH
first(next_state) = OUTPUT_SYMBOL MINUS
first(net_type) = WOR WIRE WAND TRIOR TRIAND TRI1 TRI0 TRI SUPPLY1 SUPPLY0
first(net_lvalue_8) = COMMA
first(net_lvalue_3) = LBRACK
first(net_lvalue) = SIMPLE_IDENTIFIER LCURLY BACKSLASH
first(net_declaration_62) = LBRACK
first(net_declaration_52) = LBRACK
first(net_declaration_28) = LBRACK
first(net_declaration_18) = LBRACK
first(net_declaration) = WOR WIRE WAND TRIREG TRIOR TRIAND TRI1 TRI0 TRI SUPPLY1 SUPPLY0
first(named_task_proto_5) = COMMA
first(named_parameter_assignment) = DOT
first(name_of_instance_3) = LBRACK
first(name_of_gate_instance_3) = LBRACK
first(n_output_gatetype) = NOT BUF
first(n_output_gate_instance_5) = COMMA
first(n_input_gatetype) = XOR XNOR OR NOR NAND AND
first(n_input_gate_instance_7) = COMMA
first(multi_clock_sequence_3) = P_POUNDPOUND
first(multi_clock_property_expr) = LPAREN AT
first(mos_switchtype) = RPMOS RNMOS PMOS NMOS
first(module_root_item) = WOR WIRE WAND VIRTUAL UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TIME TASK SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SIMPLE_IDENTIFIER SHORTREAL SHORTINT SEQUENCE REG REALTIME REAL PROPERTY PROGRAM LONGINT LOGIC LOCALPARAM INTERFACE INTEGER IMPORT GENVAR FUNCTION EXTERN EXPORT EVENT ENUM DEFAULT COVER CONSTRAINT CONST CLOCKING CLASS CHANDLE BYTE BIT BIND BACKSLASH AUTOMATIC ASSERT
first(module_path_primary) = UNSIGNED_NUMBER TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT SYSTEM_FUNCTION_IDENTIFIER SIMPLE_IDENTIFIER OCTAL_BASE LPAREN LCURLY HEX_BASE DECIMAL_BASE BINARY_BASE BACKSLASH
first(module_path_mintypmax_expression) = VBAR UNSIGNED_NUMBER TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TILDE_VBAR TILDE SYSTEM_FUNCTION_IDENTIFIER SIMPLE_IDENTIFIER P_XNOR P_NXOR P_NAND PLING OCTAL_BASE LPAREN LCURLY HEX_BASE DECIMAL_BASE CARET BINARY_BASE BACKSLASH AMPERSAND
first(module_path_expression) = VBAR UNSIGNED_NUMBER TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TILDE_VBAR TILDE SYSTEM_FUNCTION_IDENTIFIER SIMPLE_IDENTIFIER P_XNOR P_NXOR P_NAND PLING OCTAL_BASE LPAREN LCURLY HEX_BASE DECIMAL_BASE CARET BINARY_BASE BACKSLASH AMPERSAND
first(module_path_concatenation_4) = COMMA
first(module_or_generate_item_declaration) = WOR WIRE WAND UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TIME TASK SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SIMPLE_IDENTIFIER SHORTREAL SHORTINT REG REALTIME REAL LONGINT LOGIC INTEGER IMPORT GENVAR FUNCTION EXPORT EVENT ENUM DEFAULT CONSTRAINT CONST CLOCKING CHANDLE BYTE BIT BACKSLASH AUTOMATIC
first(module_or_generate_item) = XOR XNOR WOR WIRE WAND UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TIME TASK SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SIMPLE_IDENTIFIER SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RNMOS REG REALTIME REAL RCMOS PULLUP PULLDOWN PROPERTY PMOS OR NOTIF1 NOTIF0 NOT NOR NMOS NAND LONGINT LOGIC INTEGER INITIAL IMPORT GENVAR FUNCTION FINAL EXPORT EVENT ENUM DEFPARAM DEFAULT COVER CONSTRAINT CONST CMOS CLOCKING CHANDLE BYTE BUFIF1 BUFIF0 BUF BIT BIND BACKSLASH AUTOMATIC ASSIGN ASSERT AND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS
first(module_keyword) = MODULE MACROMODULE
first(module_item) = XOR XNOR WOR WIRE WAND VIRTUAL UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TIME TASK SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SPECPARAM SPECIFY SIMPLE_IDENTIFIER SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RNMOS REG REF REALTIME REAL RCMOS PULLUP PULLDOWN PROPERTY PMOS PARAMETER OUTPUT OR NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULE MACROMODULE LONGINT LOGIC LOCALPARAM INTEGER INPUT INOUT INITIAL IMPORT GENVAR GENERATE FUNCTION FINAL EXTERN EXPORT EVENT ENUM DEFPARAM DEFAULT COVER CONSTRAINT CONST CMOS CLOCKING CLASS CHANDLE BYTE BUFIF1 BUFIF0 BUF BIT BIND BACKSLASH AUTOMATIC ASSIGN ASSERT AND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS
first(module_instantiation_5) = COMMA
first(module_declaration_4) = XOR XNOR WOR WIRE WAND VIRTUAL UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TIME TASK SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SPECPARAM SPECIFY SIMPLE_IDENTIFIER SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RNMOS REG REF REALTIME REAL RCMOS PULLUP PULLDOWN PROPERTY PMOS PARAMETER OUTPUT OR NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULE MACROMODULE LONGINT LOGIC LOCALPARAM INTEGER INPUT INOUT INITIAL IMPORT GENVAR GENERATE FUNCTION FINAL EXTERN EXPORT EVENT ENUM DEFPARAM DEFAULT COVER CONSTRAINT CONST CMOS CLOCKING CLASS CHANDLE BYTE BUFIF1 BUFIF0 BUF BIT BIND BACKSLASH AUTOMATIC ASSIGN ASSERT AND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS
first(module_declaration_23) = XOR XNOR WOR WIRE WAND VIRTUAL UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TIME TASK SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SPECPARAM SPECIFY SIMPLE_IDENTIFIER SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RNMOS REG REF REALTIME REAL RCMOS PULLUP PULLDOWN PROPERTY PMOS PARAMETER OUTPUT OR NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULE MACROMODULE LONGINT LOGIC LOCALPARAM INTEGER INPUT INOUT INITIAL IMPORT GENVAR GENERATE FUNCTION FINAL EXTERN EXPORT EVENT ENUM DEFPARAM DEFAULT COVER CONSTRAINT CONST CMOS CLOCKING CLASS CHANDLE BYTE BUFIF1 BUFIF0 BUF BIT BIND BACKSLASH AUTOMATIC ASSIGN ASSERT AND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS
first(module_declaration_10) = XOR XNOR WOR WIRE WAND VIRTUAL UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TIME TASK SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SPECPARAM SPECIFY SIMPLE_IDENTIFIER SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RNMOS REG REALTIME REAL RCMOS PULLUP PULLDOWN PROPERTY PMOS PARAMETER OR NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULE MACROMODULE LONGINT LOGIC LOCALPARAM INTEGER INITIAL IMPORT GENVAR GENERATE FUNCTION FINAL EXTERN EXPORT EVENT ENUM DEFPARAM DEFAULT COVER CONSTRAINT CONST CMOS CLOCKING CLASS CHANDLE BYTE BUFIF1 BUFIF0 BUF BIT BIND BACKSLASH AUTOMATIC ASSIGN ASSERT AND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS
first(module_declaration) = MODULE MACROMODULE EXTERN
first(module_common_item) = WOR WIRE WAND UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TIME TASK SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SIMPLE_IDENTIFIER SHORTREAL SHORTINT SEQUENCE REG REALTIME REAL PROPERTY LONGINT LOGIC INTEGER IMPORT GENVAR FUNCTION EXPORT EVENT ENUM DEFAULT COVER CONSTRAINT CONST CLOCKING CHANDLE BYTE BIT BIND BACKSLASH AUTOMATIC ASSERT
first(modport_tf_port_8) = COMMA
first(modport_tf_port_4) = COMMA
first(modport_tf_port_11) = COMMA
first(modport_tf_port) = TASK SIMPLE_IDENTIFIER FUNCTION BACKSLASH
first(modport_simple_ports_declaration) = REF OUTPUT INPUT INOUT
first(modport_ports_declaration) = SIMPLE_IDENTIFIER REF OUTPUT INPUT INOUT IMPORT EXPORT BACKSLASH
first(modport_item_5) = COMMA
first(modport_declaration_4) = COMMA
first(mintypmax_expression) = VOID VBAR UNSIGNED_NUMBER UNSIGNED TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS SYSTEM_FUNCTION_IDENTIFIER SVINT SUPER SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REALTIME REAL P_XNOR P_NXOR P_NAND PLUS PLING OCTAL_BASE NULL MINUS LPAREN LONGINT LOGIC LCURLY INTEGER HEX_BASE DOUBLE_QUOTES DECIMAL_BASE CARET BYTE BIT BINARY_BASE BACKSLASH AMPERSAND
first(method_qualifier) = VIRTUAL STATIC PROTECTED LOCAL
first(method_prototype) = TASK FUNCTION
first(loop_statement_35) = COMMA
first(loop_statement_30) = COMMA
first(loop_statement) = WHILE REPEAT FOREVER FOR DO
first(local_parameter_declaration_4) = LBRACK
first(local_parameter_declaration) = LOCALPARAM
first(list_of_variable_port_identifiers_5) = COMMA
first(list_of_variable_identifiers_or_assignments) = SIMPLE_IDENTIFIER BACKSLASH
first(list_of_variable_identifiers_4) = COMMA
first(list_of_variable_decl_assignments_3) = COMMA
first(list_of_variable_assignments_3) = COMMA
first(list_of_udp_port_identifiers_3) = COMMA
first(list_of_type_assignments_3) = COMMA
first(list_of_tf_variable_identifiers_5) = COMMA
first(list_of_tf_port_identifiers_5_6) = LBRACK
first(list_of_tf_port_identifiers_5) = COMMA
first(list_of_tf_port_identifiers_3) = LBRACK
first(list_of_specparam_assignments_3) = COMMA
first(list_of_ports_4) = COMMA
first(list_of_port_identifiers_4_6) = LBRACK
first(list_of_port_identifiers_4) = COMMA
first(list_of_port_identifiers_3) = LBRACK
first(list_of_port_declarations_4) = COMMA
first(list_of_port_declarations) = LPAREN
first(list_of_port_connections_8) = DOT
first(list_of_port_connections_6) = COMMA
first(list_of_port_connections_3) = COMMA
first(list_of_port_connections_10) = COMMA
first(list_of_port_connections) = VOID VBAR UNSIGNED_NUMBER UNSIGNED TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS SYSTEM_FUNCTION_IDENTIFIER SVINT SUPER SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REALTIME REAL P_XNOR P_NXOR P_NAND P_DOTSTAR PLUS PLING OCTAL_BASE NULL MINUS LPAREN LONGINT LOGIC LCURLY INTEGER HEX_BASE DOUBLE_QUOTES DOT DECIMAL_BASE COMMA CARET BYTE BIT BINARY_BASE BACKSLASH AMPERSAND
first(list_of_path_outputs_3) = COMMA
first(list_of_path_inputs_3) = COMMA
first(list_of_path_delay_expressions) = VBAR UNSIGNED_NUMBER UNSIGNED TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TIME TILDE_VBAR TILDE SVINT SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REALTIME REAL P_XNOR P_NXOR P_NAND PLUS PLING OCTAL_BASE MINUS LPAREN LONGINT LOGIC LCURLY INTEGER HEX_BASE DOUBLE_QUOTES DECIMAL_BASE CARET BYTE BIT BINARY_BASE BACKSLASH AMPERSAND
first(list_of_parameter_assignments_6) = COMMA
first(list_of_parameter_assignments_3) = COMMA
first(list_of_parameter_assignments) = VOID VBAR UNSIGNED_NUMBER UNSIGNED UNION TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS SYSTEM_FUNCTION_IDENTIFIER SVINT SUPER STRUCT STRING SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REALTIME REAL P_XNOR P_NXOR P_NAND PLUS PLING OCTAL_BASE NULL MINUS LPAREN LONGINT LOGIC LCURLY INTEGER HEX_BASE EVENT ENUM DOUBLE_QUOTES DOT DECIMAL_BASE CHANDLE CARET BYTE BIT BINARY_BASE BACKSLASH AMPERSAND
first(list_of_param_assignments_3) = COMMA
first(list_of_net_identifiers_4_6) = LBRACK
first(list_of_net_identifiers_4) = COMMA
first(list_of_net_identifiers_3) = LBRACK
first(list_of_net_decl_assignments_3) = COMMA
first(list_of_net_assignments_3) = COMMA
first(list_of_modport_port_identifiers_3) = COMMA
first(list_of_interface_identifiers_4_6) = LBRACK
first(list_of_interface_identifiers_4) = COMMA
first(list_of_interface_identifiers_3) = LBRACK
first(list_of_genvar_identifiers_3) = COMMA
first(list_of_function_proto_formals_2_5) = COMMA
first(list_of_dpi_proto_formals_2_5) = COMMA
first(list_of_defparam_assignments_3) = COMMA
first(list_of_constant_arguments_3) = COMMA
first(list_of_constant_arguments_10) = COMMA
first(list_of_constant_arguments) = VBAR UNSIGNED_NUMBER UNSIGNED TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TIME TILDE_VBAR TILDE SVINT SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REALTIME REAL P_XNOR P_NXOR P_NAND PLUS PLING OCTAL_BASE MINUS LPAREN LONGINT LOGIC LCURLY INTEGER HEX_BASE DOUBLE_QUOTES DOT DECIMAL_BASE COMMA CARET BYTE BIT BINARY_BASE BACKSLASH AMPERSAND
first(list_of_clocking_decl_assign_3) = COMMA
first(list_of_arguments_3) = COMMA
first(list_of_arguments_10) = COMMA
first(list_of_arguments) = VOID VBAR UNSIGNED_NUMBER UNSIGNED TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS SYSTEM_FUNCTION_IDENTIFIER SVINT SUPER SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REALTIME REAL P_XNOR P_NXOR P_NAND PLUS PLING OCTAL_BASE NULL MINUS LPAREN LONGINT LOGIC LCURLY INTEGER HEX_BASE DOUBLE_QUOTES DOT DECIMAL_BASE COMMA CARET BYTE BIT BINARY_BASE BACKSLASH AMPERSAND
first(lifetime) = STATIC AUTOMATIC
first(level_input_list_3) = LEVEL_SYMBOL
first(jump_statement) = RETURN CONTINUE BREAK
first(join_keyword) = JOIN_NONE JOIN_ANY JOIN
first(interface_port_declaration) = SIMPLE_IDENTIFIER BACKSLASH
first(interface_or_generate_item) = WOR WIRE WAND UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TIME TASK SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SIMPLE_IDENTIFIER SHORTREAL SHORTINT SEQUENCE SEMICOLON REG REALTIME REAL PROPERTY PARAMETER MODPORT LONGINT LOGIC LOCALPARAM INTEGER INITIAL IMPORT GENVAR FUNCTION FINAL EXTERN EXPORT EVENT ENUM DEFAULT COVER CONSTRAINT CONST CLOCKING CHANDLE BYTE BIT BIND BACKSLASH AUTOMATIC ASSIGN ASSERT ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS
first(interface_item) = WOR WIRE WAND VIRTUAL UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TIME TASK SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SPECPARAM SIMPLE_IDENTIFIER SHORTREAL SHORTINT SEQUENCE SEMICOLON REG REF REALTIME REAL PROPERTY PROGRAM PARAMETER OUTPUT MODPORT LONGINT LOGIC LOCALPARAM INTERFACE INTEGER INPUT INOUT INITIAL IMPORT GENVAR GENERATE FUNCTION FINAL EXTERN EXPORT EVENT ENUM DEFAULT COVER CONSTRAINT CONST CLOCKING CLASS CHANDLE BYTE BIT BIND BACKSLASH AUTOMATIC ASSIGN ASSERT ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS
first(interface_instantiation_5) = COMMA
first(interface_declaration_4) = WOR WIRE WAND VIRTUAL UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TIME TASK SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SPECPARAM SIMPLE_IDENTIFIER SHORTREAL SHORTINT SEQUENCE SEMICOLON REG REF REALTIME REAL PROPERTY PROGRAM PARAMETER OUTPUT MODPORT LONGINT LOGIC LOCALPARAM INTERFACE INTEGER INPUT INOUT INITIAL IMPORT GENVAR GENERATE FUNCTION FINAL EXTERN EXPORT EVENT ENUM DEFAULT COVER CONSTRAINT CONST CLOCKING CLASS CHANDLE BYTE BIT BIND BACKSLASH AUTOMATIC ASSIGN ASSERT ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS
first(interface_declaration_22) = WOR WIRE WAND VIRTUAL UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TIME TASK SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SPECPARAM SIMPLE_IDENTIFIER SHORTREAL SHORTINT SEQUENCE SEMICOLON REG REF REALTIME REAL PROPERTY PROGRAM PARAMETER OUTPUT MODPORT LONGINT LOGIC LOCALPARAM INTERFACE INTEGER INPUT INOUT INITIAL IMPORT GENVAR GENERATE FUNCTION FINAL EXTERN EXPORT EVENT ENUM DEFAULT COVER CONSTRAINT CONST CLOCKING CLASS CHANDLE BYTE BIT BIND BACKSLASH AUTOMATIC ASSIGN ASSERT ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS
first(interface_declaration_10) = WOR WIRE WAND VIRTUAL UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TIME TASK SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SPECPARAM SIMPLE_IDENTIFIER SHORTREAL SHORTINT SEQUENCE SEMICOLON REG REALTIME REAL PROPERTY PROGRAM PARAMETER MODPORT LONGINT LOGIC LOCALPARAM INTERFACE INTEGER INITIAL IMPORT GENVAR GENERATE FUNCTION FINAL EXTERN EXPORT EVENT ENUM DEFAULT COVER CONSTRAINT CONST CLOCKING CLASS CHANDLE BYTE BIT BIND BACKSLASH AUTOMATIC ASSIGN ASSERT ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS
first(interface_declaration) = INTERFACE EXTERN
first(integer_vector_type) = REG LOGIC BIT
first(integer_type) = SVINT SHORTINT REG LONGINT LOGIC INTEGER BYTE BIT
first(integer_atom_type) = SVINT SHORTINT LONGINT INTEGER BYTE
first(input_identifier) = SIMPLE_IDENTIFIER BACKSLASH
first(input_declaration) = INPUT
first(inout_declaration) = INOUT
first(init_val) = TOKEN_ZERO TOKEN_X3 TOKEN_X2 TOKEN_X1 TOKEN_X0 TOKEN_TRUE2 TOKEN_TRUE1 TOKEN_ONE TOKEN_FALSE2 TOKEN_FALSE1
first(inc_or_dec_operator) = TOKEN_PLUS_PLUS TOKEN_DASH_DASH
first(inc_or_dec_expression) = TOKEN_PLUS_PLUS TOKEN_DASH_DASH SIMPLE_IDENTIFIER LCURLY BACKSLASH
first(import_export) = IMPORT EXPORT
first(implicit_class_handle) = THIS SUPER
first(if_else_if_statement_8) = ELSE
first(identifier_list_3) = COMMA
first(identifier) = SIMPLE_IDENTIFIER BACKSLASH
first(hierarchical_identifier) = SIMPLE_IDENTIFIER BACKSLASH
first(hex_value_3) = UNDERSCORE HEX_DIGIT
first(genvar_module_case_item_3) = COMMA
first(genvar_module_case_item) = VBAR UNSIGNED_NUMBER UNSIGNED TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TIME TILDE_VBAR TILDE SVINT SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REALTIME REAL P_XNOR P_NXOR P_NAND PLUS PLING OCTAL_BASE MINUS LPAREN LONGINT LOGIC LCURLY INTEGER HEX_BASE DOUBLE_QUOTES DEFAULT DECIMAL_BASE CARET BYTE BIT BINARY_BASE BACKSLASH AMPERSAND
first(genvar_interface_case_item_3) = COMMA
first(genvar_interface_case_item) = VBAR UNSIGNED_NUMBER UNSIGNED TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TIME TILDE_VBAR TILDE SVINT SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REALTIME REAL P_XNOR P_NXOR P_NAND PLUS PLING OCTAL_BASE MINUS LPAREN LONGINT LOGIC LCURLY INTEGER HEX_BASE DOUBLE_QUOTES DEFAULT DECIMAL_BASE CARET BYTE BIT BINARY_BASE BACKSLASH AMPERSAND
first(genvar_assignment) = TOKEN_PLUS_PLUS TOKEN_DASH_DASH SIMPLE_IDENTIFIER BACKSLASH
first(generic_interface_port_declaration) = INTERFACE
first(generated_module_instantiation_3) = XOR XNOR WOR WIRE WAND UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TIME TASK SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SIMPLE_IDENTIFIER SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RNMOS REG REALTIME REAL RCMOS PULLUP PULLDOWN PROPERTY PMOS OR NOTIF1 NOTIF0 NOT NOR NMOS NAND LONGINT LOGIC INTEGER INITIAL IMPORT IF GENVAR FUNCTION FOR FINAL EXPORT EVENT ENUM DEFPARAM DEFAULT COVER CONSTRAINT CONST CMOS CLOCKING CHANDLE CASE BYTE BUFIF1 BUFIF0 BUF BIT BIND BEGIN BACKSLASH AUTOMATIC ASSIGN ASSERT AND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS
first(generated_interface_instantiation_3) = WOR WIRE WAND UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TIME TASK SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SIMPLE_IDENTIFIER SHORTREAL SHORTINT SEQUENCE SEMICOLON REG REALTIME REAL PROPERTY PARAMETER MODPORT LONGINT LOGIC LOCALPARAM INTEGER INITIAL IMPORT IF GENVAR FUNCTION FOR FINAL EXTERN EXPORT EVENT ENUM DEFAULT COVER CONSTRAINT CONST CLOCKING CHANDLE CASE BYTE BIT BIND BEGIN BACKSLASH AUTOMATIC ASSIGN ASSERT ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS
first(generate_module_named_block_5) = XOR XNOR WOR WIRE WAND UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TIME TASK SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SIMPLE_IDENTIFIER SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RNMOS REG REALTIME REAL RCMOS PULLUP PULLDOWN PROPERTY PMOS OR NOTIF1 NOTIF0 NOT NOR NMOS NAND LONGINT LOGIC INTEGER INITIAL IMPORT IF GENVAR FUNCTION FOR FINAL EXPORT EVENT ENUM DEFPARAM DEFAULT COVER CONSTRAINT CONST CMOS CLOCKING CHANDLE CASE BYTE BUFIF1 BUFIF0 BUF BIT BIND BEGIN BACKSLASH AUTOMATIC ASSIGN ASSERT AND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS
first(generate_module_named_block) = SIMPLE_IDENTIFIER BEGIN BACKSLASH
first(generate_module_item) = XOR XNOR WOR WIRE WAND UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TIME TASK SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SIMPLE_IDENTIFIER SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RNMOS REG REALTIME REAL RCMOS PULLUP PULLDOWN PROPERTY PMOS OR NOTIF1 NOTIF0 NOT NOR NMOS NAND LONGINT LOGIC INTEGER INITIAL IMPORT IF GENVAR FUNCTION FOR FINAL EXPORT EVENT ENUM DEFPARAM DEFAULT COVER CONSTRAINT CONST CMOS CLOCKING CHANDLE CASE BYTE BUFIF1 BUFIF0 BUF BIT BIND BEGIN BACKSLASH AUTOMATIC ASSIGN ASSERT AND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS
first(generate_module_case_statement_7) = VBAR UNSIGNED_NUMBER UNSIGNED TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TIME TILDE_VBAR TILDE SVINT SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REALTIME REAL P_XNOR P_NXOR P_NAND PLUS PLING OCTAL_BASE MINUS LPAREN LONGINT LOGIC LCURLY INTEGER HEX_BASE DOUBLE_QUOTES DEFAULT DECIMAL_BASE CARET BYTE BIT BINARY_BASE BACKSLASH AMPERSAND
first(generate_module_block_4) = XOR XNOR WOR WIRE WAND UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TIME TASK SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SIMPLE_IDENTIFIER SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RNMOS REG REALTIME REAL RCMOS PULLUP PULLDOWN PROPERTY PMOS OR NOTIF1 NOTIF0 NOT NOR NMOS NAND LONGINT LOGIC INTEGER INITIAL IMPORT IF GENVAR FUNCTION FOR FINAL EXPORT EVENT ENUM DEFPARAM DEFAULT COVER CONSTRAINT CONST CMOS CLOCKING CHANDLE CASE BYTE BUFIF1 BUFIF0 BUF BIT BIND BEGIN BACKSLASH AUTOMATIC ASSIGN ASSERT AND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS
first(generate_interface_named_block_5) = WOR WIRE WAND UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TIME TASK SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SIMPLE_IDENTIFIER SHORTREAL SHORTINT SEQUENCE SEMICOLON REG REALTIME REAL PROPERTY PARAMETER MODPORT LONGINT LOGIC LOCALPARAM INTEGER INITIAL IMPORT IF GENVAR FUNCTION FOR FINAL EXTERN EXPORT EVENT ENUM DEFAULT COVER CONSTRAINT CONST CLOCKING CHANDLE CASE BYTE BIT BIND BEGIN BACKSLASH AUTOMATIC ASSIGN ASSERT ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS
first(generate_interface_named_block) = SIMPLE_IDENTIFIER BEGIN BACKSLASH
first(generate_interface_item) = WOR WIRE WAND UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TIME TASK SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SIMPLE_IDENTIFIER SHORTREAL SHORTINT SEQUENCE SEMICOLON REG REALTIME REAL PROPERTY PARAMETER MODPORT LONGINT LOGIC LOCALPARAM INTEGER INITIAL IMPORT IF GENVAR FUNCTION FOR FINAL EXTERN EXPORT EVENT ENUM DEFAULT COVER CONSTRAINT CONST CLOCKING CHANDLE CASE BYTE BIT BIND BEGIN BACKSLASH AUTOMATIC ASSIGN ASSERT ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS
first(generate_interface_case_statement_7) = VBAR UNSIGNED_NUMBER UNSIGNED TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TIME TILDE_VBAR TILDE SVINT SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REALTIME REAL P_XNOR P_NXOR P_NAND PLUS PLING OCTAL_BASE MINUS LPAREN LONGINT LOGIC LCURLY INTEGER HEX_BASE DOUBLE_QUOTES DEFAULT DECIMAL_BASE CARET BYTE BIT BINARY_BASE BACKSLASH AMPERSAND
first(generate_interface_block_4) = WOR WIRE WAND UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TIME TASK SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SIMPLE_IDENTIFIER SHORTREAL SHORTINT SEQUENCE SEMICOLON REG REALTIME REAL PROPERTY PARAMETER MODPORT LONGINT LOGIC LOCALPARAM INTEGER INITIAL IMPORT IF GENVAR FUNCTION FOR FINAL EXTERN EXPORT EVENT ENUM DEFAULT COVER CONSTRAINT CONST CLOCKING CHANDLE CASE BYTE BIT BIND BEGIN BACKSLASH AUTOMATIC ASSIGN ASSERT ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS
first(gate_instantiation_55) = COMMA
first(gate_instantiation_5) = COMMA
first(gate_instantiation_49) = COMMA
first(gate_instantiation_43) = COMMA
first(gate_instantiation_38) = COMMA
first(gate_instantiation_32) = COMMA
first(gate_instantiation_25) = COMMA
first(gate_instantiation_18) = COMMA
first(gate_instantiation_12) = COMMA
first(gate_instantiation) = XOR XNOR TRANIF1 TRANIF0 TRAN RTRANIF1 RTRANIF0 RTRAN RPMOS RNMOS RCMOS PULLUP PULLDOWN PMOS OR NOTIF1 NOTIF0 NOT NOR NMOS NAND CMOS BUFIF1 BUFIF0 BUF AND
first(function_statement_or_null) = WHILE UNIQUE TOKEN_PLUS_PLUS TOKEN_DASH_DASH SYSTEM_TASK_IDENTIFIER SIMPLE_IDENTIFIER SEMICOLON RETURN REPEAT PRIORITY LCURLY IF FOREVER FOR DO DISABLE CONTINUE CASEZ CASEX CASE BREAK BEGIN BACKSLASH
first(function_statement_item) = WHILE UNIQUE TOKEN_PLUS_PLUS TOKEN_DASH_DASH SYSTEM_TASK_IDENTIFIER SIMPLE_IDENTIFIER RETURN REPEAT PRIORITY LCURLY IF FOREVER FOR DO DISABLE CONTINUE CASEZ CASEX CASE BREAK BEGIN BACKSLASH
first(function_seq_block_4) = WHILE UNIQUE TOKEN_PLUS_PLUS TOKEN_DASH_DASH SYSTEM_TASK_IDENTIFIER SIMPLE_IDENTIFIER SEMICOLON RETURN REPEAT PRIORITY LCURLY IF FOREVER FOR DO DISABLE CONTINUE CASEZ CASEX CASE BREAK BEGIN BACKSLASH
first(function_seq_block_3_5) = UNION TYPEDEF TIME SVINT STRUCT STRING STATIC SIMPLE_IDENTIFIER SHORTREAL SHORTINT REG REALTIME REAL PARAMETER LONGINT LOGIC LOCALPARAM INTEGER EVENT ENUM CONST CHANDLE BYTE BIT BACKSLASH AUTOMATIC
first(function_proto_formal) = REF OUTPUT INPUT INOUT CONST
first(function_port_list_3) = COMMA
first(function_port_item) = WOR WIRE WAND UNSIGNED UNION TRIREG TRIOR TRIAND TRI1 TRI0 TRI TIME SVINT SUPPLY1 SUPPLY0 STRUCT STRING SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REF REALTIME REAL OUTPUT LONGINT LOGIC LBRACK INTEGER INPUT INOUT EVENT ENUM CONST CHANDLE BYTE BIT BACKSLASH
first(function_loop_statement_25) = COMMA
first(function_loop_statement_20) = COMMA
first(function_loop_statement) = WHILE REPEAT FOREVER FOR DO
first(function_item_declaration) = UNION TYPEDEF TIME SVINT STRUCT STRING STATIC SIMPLE_IDENTIFIER SHORTREAL SHORTINT REG REF REALTIME REAL PARAMETER OUTPUT LONGINT LOGIC LOCALPARAM INTEGER INPUT INOUT EVENT ENUM CONST CHANDLE BYTE BIT BACKSLASH AUTOMATIC
first(function_if_else_if_statement_8) = ELSE
first(function_data_type_9) = LBRACK
first(function_data_type_32) = COMMA
first(function_data_type_3) = LBRACK
first(function_data_type_28_4) = LBRACK
first(function_data_type_25) = LBRACK
first(function_data_type_23) = UNION TIME SVINT STRUCT STRING SIMPLE_IDENTIFIER SHORTREAL SHORTINT REG REALTIME REAL LONGINT LOGIC INTEGER EVENT ENUM CHANDLE BYTE BIT BACKSLASH
first(function_data_type_18) = LBRACK
first(function_data_type_16) = UNION TIME SVINT STRUCT STRING SIMPLE_IDENTIFIER SHORTREAL SHORTINT REG REALTIME REAL LONGINT LOGIC INTEGER EVENT ENUM CHANDLE BYTE BIT BACKSLASH
first(function_data_type) = VOID UNION TIME SVINT STRUCT STRING SIMPLE_IDENTIFIER SHORTREAL SHORTINT REG REALTIME REAL LONGINT LOGIC INTEGER ENUM CHANDLE BYTE BIT BACKSLASH
first(function_conditional_statement) = UNIQUE PRIORITY IF
first(function_case_statement_8) = VOID VBAR UNSIGNED_NUMBER UNSIGNED TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS SYSTEM_FUNCTION_IDENTIFIER SVINT SUPER SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REALTIME REAL P_XNOR P_NXOR P_NAND PLUS PLING OCTAL_BASE NULL MINUS LPAREN LONGINT LOGIC LCURLY INTEGER HEX_BASE DOUBLE_QUOTES DEFAULT DECIMAL_BASE CARET BYTE BIT BINARY_BASE BACKSLASH AMPERSAND
first(function_case_statement_26) = VOID VBAR UNSIGNED_NUMBER UNSIGNED TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS SYSTEM_FUNCTION_IDENTIFIER SVINT SUPER SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REALTIME REAL P_XNOR P_NXOR P_NAND PLUS PLING OCTAL_BASE NULL MINUS LPAREN LONGINT LOGIC LCURLY INTEGER HEX_BASE DOUBLE_QUOTES DEFAULT DECIMAL_BASE CARET BYTE BIT BINARY_BASE BACKSLASH AMPERSAND
first(function_case_statement_17) = VOID VBAR UNSIGNED_NUMBER UNSIGNED TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS SYSTEM_FUNCTION_IDENTIFIER SVINT SUPER SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REALTIME REAL P_XNOR P_NXOR P_NAND PLUS PLING OCTAL_BASE NULL MINUS LPAREN LONGINT LOGIC LCURLY INTEGER HEX_BASE DOUBLE_QUOTES DEFAULT DECIMAL_BASE CARET BYTE BIT BINARY_BASE BACKSLASH AMPERSAND
first(function_case_statement) = UNIQUE PRIORITY CASEZ CASEX CASE
first(function_case_item_3) = COMMA
first(function_case_item) = VOID VBAR UNSIGNED_NUMBER UNSIGNED TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS SYSTEM_FUNCTION_IDENTIFIER SVINT SUPER SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REALTIME REAL P_XNOR P_NXOR P_NAND PLUS PLING OCTAL_BASE NULL MINUS LPAREN LONGINT LOGIC LCURLY INTEGER HEX_BASE DOUBLE_QUOTES DEFAULT DECIMAL_BASE CARET BYTE BIT BINARY_BASE BACKSLASH AMPERSAND
first(function_body_declaration_8) = WHILE UNIQUE TOKEN_PLUS_PLUS TOKEN_DASH_DASH SYSTEM_TASK_IDENTIFIER SIMPLE_IDENTIFIER SEMICOLON RETURN REPEAT PRIORITY LCURLY IF FOREVER FOR DO DISABLE CONTINUE CASEZ CASEX CASE BREAK BEGIN BACKSLASH
first(function_body_declaration_7) = UNION TYPEDEF TIME SVINT STRUCT STRING STATIC SIMPLE_IDENTIFIER SHORTREAL SHORTINT REG REF REALTIME REAL PARAMETER OUTPUT LONGINT LOGIC LOCALPARAM INTEGER INPUT INOUT EVENT ENUM CONST CHANDLE BYTE BIT BACKSLASH AUTOMATIC
first(function_body_declaration_21) = WHILE UNIQUE TOKEN_PLUS_PLUS TOKEN_DASH_DASH SYSTEM_TASK_IDENTIFIER SIMPLE_IDENTIFIER SEMICOLON RETURN REPEAT PRIORITY LCURLY IF FOREVER FOR DO DISABLE CONTINUE CASEZ CASEX CASE BREAK BEGIN BACKSLASH
first(function_body_declaration_20) = UNION TYPEDEF TIME SVINT STRUCT STRING STATIC SIMPLE_IDENTIFIER SHORTREAL SHORTINT REG REALTIME REAL PARAMETER LONGINT LOGIC LOCALPARAM INTEGER EVENT ENUM CONST CHANDLE BYTE BIT BACKSLASH AUTOMATIC
first(function_body_declaration) = VOID UNSIGNED UNION TIME SVINT STRUCT STRING SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REALTIME REAL LONGINT LOGIC LBRACK INTEGER ENUM CHANDLE BYTE BIT BACKSLASH
first(extern_tf_declaration) = EXTERN
first(extern_method_declaration) = TASK FUNCTION
first(extern_constraint_declaration_8) = VOID VBAR UNSIGNED_NUMBER UNSIGNED TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS SYSTEM_FUNCTION_IDENTIFIER SVINT SUPER SOLVE SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REALTIME REAL P_XNOR P_NXOR P_NAND PLUS PLING OCTAL_BASE NULL MINUS LPAREN LONGINT LOGIC LCURLY INTEGER IF HEX_BASE DOUBLE_QUOTES DECIMAL_BASE CARET BYTE BIT BINARY_BASE BACKSLASH AMPERSAND
first(expression) = VOID VBAR UNSIGNED_NUMBER UNSIGNED TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS SYSTEM_FUNCTION_IDENTIFIER SVINT SUPER SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REALTIME REAL P_XNOR P_NXOR P_NAND PLUS PLING OCTAL_BASE NULL MINUS LPAREN LONGINT LOGIC LCURLY INTEGER HEX_BASE DOUBLE_QUOTES DECIMAL_BASE CARET BYTE BIT BINARY_BASE BACKSLASH AMPERSAND
first(event_trigger) = P_MINUSGT DASH_GT_GT
first(event_expression) = VOID VBAR UNSIGNED_NUMBER UNSIGNED TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS SYSTEM_FUNCTION_IDENTIFIER SVINT SUPER SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REALTIME REAL P_XNOR P_NXOR P_NAND POSEDGE PLUS PLING OCTAL_BASE NULL NEGEDGE MINUS LPAREN LONGINT LOGIC LCURLY INTEGER HEX_BASE DOUBLE_QUOTES DECIMAL_BASE CARET BYTE BIT BINARY_BASE BACKSLASH AMPERSAND
first(event_control) = AT_STAR AT
first(escaped_hierarchical_identifier_3) = DOT
first(escaped_hierarchical_branch_4_3_6) = LBRACK
first(escaped_hierarchical_branch_4_3) = DOT
first(escaped_hierarchical_branch_3) = LBRACK
first(enable_gatetype) = NOTIF1 NOTIF0 BUFIF1 BUFIF0
first(edge_sensitive_path_declaration) = LPAREN
first(edge_input_list_4) = LEVEL_SYMBOL
first(edge_input_list_2) = LEVEL_SYMBOL
first(edge_indicator) = LPAREN EDGE_SYMBOL
first(edge_identifier) = POSEDGE NEGEDGE
first(edge_descriptor) = Z_OR_X TOKEN_ZERO TOKEN_ONE TOKEN_EDGE_10 TOKEN_EDGE01
first(edge_control_specifier_5) = COMMA
first(drive_strength) = LPAREN
first(dpi_proto_formal_3_5) = COMMA
first(dpi_import_property) = PURE CONTEXT
first(dpi_import_export) = IMPORT EXPORT
first(dpi_function_proto) = VOID UNSIGNED UNION TIME SVINT STRUCT STRING SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REALTIME REAL LONGINT LOGIC INTEGER ENUM CHANDLE BYTE BIT BACKSLASH
first(dpi_dimension_4) = LBRACK
first(dpi_dimension) = LBRACK
first(dot_named_port_connection) = DOT
first(dist_list_3) = COMMA
first(dist_item) = VOID VBAR UNSIGNED_NUMBER UNSIGNED TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS SYSTEM_FUNCTION_IDENTIFIER SVINT SUPER SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REALTIME REAL P_XNOR P_NXOR P_NAND PLUS PLING OCTAL_BASE NULL MINUS LPAREN LONGINT LOGIC LCURLY LBRACK INTEGER HEX_BASE DOUBLE_QUOTES DECIMAL_BASE CARET BYTE BIT BINARY_BASE BACKSLASH AMPERSAND
first(disable_statement) = DISABLE
first(description) = WOR WIRE WHILE WAND WAIT_ORDER WAIT VIRTUAL UNIQUE UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TOKEN_PLUS_PLUS TOKEN_DASH_DASH TIME TASK SYSTEM_TASK_IDENTIFIER SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SIMPLE_IDENTIFIER SHORTREAL SHORTINT SEQUENCE SEMICOLON RETURN REPEAT RELEASE REG REALTIME REAL P_POUNDPOUND P_MINUSGT PROPERTY PROGRAM PRIORITY PRIMITIVE MODULE MACROMODULE LONGINT LOGIC LOCALPARAM LCURLY INTERFACE INTEGER IMPORT IF HASH GENVAR FUNCTION FORK FOREVER FORCE FOR EXTERN EXPORT EVENT ENUM DO DISABLE DEFAULT DEASSIGN DASH_GT_GT COVER CONTINUE CONSTRAINT CONST CLOCKING CLASS CHANDLE CASEZ CASEX CASE BYTE BREAK BIT BIND BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT
first(delayed_reference) = SIMPLE_IDENTIFIER BACKSLASH
first(delayed_data) = SIMPLE_IDENTIFIER BACKSLASH
first(delay_value) = UNSIGNED_NUMBER SIMPLE_IDENTIFIER BACKSLASH
first(delay_or_event_control) = REPEAT HASH AT_STAR AT
first(delay_control) = HASH
first(delay3) = HASH
first(delay2) = HASH
first(default_skew) = OUTPUT INPUT
first(decimal_number_16) = UNDERSCORE
first(decimal_number_11) = UNDERSCORE
first(decimal_number) = UNSIGNED_NUMBER TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT DECIMAL_BASE
first(decimal_digit) = TOKEN_ZERO TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT
first(data_type_48) = COMMA
first(data_type_44_5) = LBRACK
first(data_type_40) = UNION TIME SVINT STRUCT STRING SIMPLE_IDENTIFIER SHORTREAL SHORTINT REG REALTIME REAL LONGINT LOGIC INTEGER EVENT ENUM CHANDLE BYTE BIT BACKSLASH
first(data_type_4) = LBRACK
first(data_type_34) = UNION TIME SVINT STRUCT STRING SIMPLE_IDENTIFIER SHORTREAL SHORTINT REG REALTIME REAL LONGINT LOGIC INTEGER EVENT ENUM CHANDLE BYTE BIT BACKSLASH
first(data_type_29) = LBRACK
first(data_type_27) = UNION TIME SVINT STRUCT STRING SIMPLE_IDENTIFIER SHORTREAL SHORTINT REG REALTIME REAL LONGINT LOGIC INTEGER EVENT ENUM CHANDLE BYTE BIT BACKSLASH
first(data_type_21) = LBRACK
first(data_type_19) = UNION TIME SVINT STRUCT STRING SIMPLE_IDENTIFIER SHORTREAL SHORTINT REG REALTIME REAL LONGINT LOGIC INTEGER EVENT ENUM CHANDLE BYTE BIT BACKSLASH
first(data_type_11) = LBRACK
first(data_type) = UNION TIME SVINT STRUCT STRING SIMPLE_IDENTIFIER SHORTREAL SHORTINT REG REALTIME REAL LONGINT LOGIC INTEGER EVENT ENUM CHANDLE BYTE BIT BACKSLASH
first(data_declaration) = UNION TYPEDEF TIME SVINT STRUCT STRING STATIC SIMPLE_IDENTIFIER SHORTREAL SHORTINT REG REALTIME REAL LONGINT LOGIC INTEGER EVENT ENUM CONST CHANDLE BYTE BIT BACKSLASH AUTOMATIC
first(cycle_delay_range) = P_POUNDPOUND
first(cycle_delay_const_range_expression) = VBAR UNSIGNED_NUMBER UNSIGNED TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TIME TILDE_VBAR TILDE SVINT SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REALTIME REAL P_XNOR P_NXOR P_NAND PLUS PLING OCTAL_BASE MINUS LPAREN LONGINT LOGIC LCURLY INTEGER HEX_BASE DOUBLE_QUOTES DECIMAL_BASE CARET BYTE BIT BINARY_BASE BACKSLASH AMPERSAND
first(cover_property_statement) = COVER
first(continuous_assign) = ASSIGN
first(constraint_set_5) = VOID VBAR UNSIGNED_NUMBER UNSIGNED TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS SYSTEM_FUNCTION_IDENTIFIER SVINT SUPER SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REALTIME REAL P_XNOR P_NXOR P_NAND PLUS PLING OCTAL_BASE NULL MINUS LPAREN LONGINT LOGIC LCURLY INTEGER IF HEX_BASE DOUBLE_QUOTES DECIMAL_BASE CARET BYTE BIT BINARY_BASE BACKSLASH AMPERSAND
first(constraint_set) = VOID VBAR UNSIGNED_NUMBER UNSIGNED TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS SYSTEM_FUNCTION_IDENTIFIER SVINT SUPER SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REALTIME REAL P_XNOR P_NXOR P_NAND PLUS PLING OCTAL_BASE NULL MINUS LPAREN LONGINT LOGIC LCURLY INTEGER IF HEX_BASE DOUBLE_QUOTES DECIMAL_BASE CARET BYTE BIT BINARY_BASE BACKSLASH AMPERSAND
first(constraint_expression) = VOID VBAR UNSIGNED_NUMBER UNSIGNED TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS SYSTEM_FUNCTION_IDENTIFIER SVINT SUPER SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REALTIME REAL P_XNOR P_NXOR P_NAND PLUS PLING OCTAL_BASE NULL MINUS LPAREN LONGINT LOGIC LCURLY INTEGER IF HEX_BASE DOUBLE_QUOTES DECIMAL_BASE CARET BYTE BIT BINARY_BASE BACKSLASH AMPERSAND
first(constraint_declaration_6) = VOID VBAR UNSIGNED_NUMBER UNSIGNED TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS SYSTEM_FUNCTION_IDENTIFIER SVINT SUPER SOLVE SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REALTIME REAL P_XNOR P_NXOR P_NAND PLUS PLING OCTAL_BASE NULL MINUS LPAREN LONGINT LOGIC LCURLY INTEGER IF HEX_BASE DOUBLE_QUOTES DECIMAL_BASE CARET BYTE BIT BINARY_BASE BACKSLASH AMPERSAND
first(constraint_block) = VOID VBAR UNSIGNED_NUMBER UNSIGNED TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS SYSTEM_FUNCTION_IDENTIFIER SVINT SUPER SOLVE SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REALTIME REAL P_XNOR P_NXOR P_NAND PLUS PLING OCTAL_BASE NULL MINUS LPAREN LONGINT LOGIC LCURLY INTEGER IF HEX_BASE DOUBLE_QUOTES DECIMAL_BASE CARET BYTE BIT BINARY_BASE BACKSLASH AMPERSAND
first(constant_range_expression) = VBAR UNSIGNED_NUMBER UNSIGNED TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TIME TILDE_VBAR TILDE SVINT SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REALTIME REAL P_XNOR P_NXOR P_NAND PLUS PLING OCTAL_BASE MINUS LPAREN LONGINT LOGIC LCURLY INTEGER HEX_BASE DOUBLE_QUOTES DECIMAL_BASE CARET BYTE BIT BINARY_BASE BACKSLASH AMPERSAND
first(constant_primary) = UNSIGNED_NUMBER UNSIGNED TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TIME SVINT SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REALTIME REAL OCTAL_BASE LPAREN LONGINT LOGIC LCURLY INTEGER HEX_BASE DECIMAL_BASE BYTE BIT BINARY_BASE BACKSLASH
first(constant_mintypmax_expression) = VBAR UNSIGNED_NUMBER UNSIGNED TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TIME TILDE_VBAR TILDE SVINT SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REALTIME REAL P_XNOR P_NXOR P_NAND PLUS PLING OCTAL_BASE MINUS LPAREN LONGINT LOGIC LCURLY INTEGER HEX_BASE DOUBLE_QUOTES DECIMAL_BASE CARET BYTE BIT BINARY_BASE BACKSLASH AMPERSAND
first(constant_expression) = VBAR UNSIGNED_NUMBER UNSIGNED TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TIME TILDE_VBAR TILDE SVINT SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REALTIME REAL P_XNOR P_NXOR P_NAND PLUS PLING OCTAL_BASE MINUS LPAREN LONGINT LOGIC LCURLY INTEGER HEX_BASE DOUBLE_QUOTES DECIMAL_BASE CARET BYTE BIT BINARY_BASE BACKSLASH AMPERSAND
first(constant_concatenation_4) = COMMA
first(constant_concatenation_18) = COMMA
first(constant_concatenation_11) = COMMA
first(constant_concatenation) = LCURLY
first(const_or_range_expression) = VBAR UNSIGNED_NUMBER UNSIGNED TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TIME TILDE_VBAR TILDE SVINT SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REALTIME REAL P_XNOR P_NXOR P_NAND PLUS PLING OCTAL_BASE MINUS LPAREN LONGINT LOGIC LCURLY INTEGER HEX_BASE DOUBLE_QUOTES DECIMAL_BASE CARET BYTE BIT BINARY_BASE BACKSLASH AMPERSAND
first(conditional_statement) = UNIQUE PRIORITY IF
first(concurrent_assertion_item_declaration) = SEQUENCE PROPERTY
first(concurrent_assertion_item) = SIMPLE_IDENTIFIER SEQUENCE PROPERTY COVER BACKSLASH ASSERT
first(concatenation_4) = COMMA
first(concatenation_18) = COMMA
first(concatenation_11) = COMMA
first(concatenation) = LCURLY
first(combinational_body_4) = LEVEL_SYMBOL
first(cmos_switchtype) = RCMOS CMOS
first(clockvar_expression) = SIMPLE_IDENTIFIER BACKSLASH
first(clocking_skew) = POSEDGE NEGEDGE HASH
first(clocking_item) = SEQUENCE PROPERTY OUTPUT INPUT INOUT DEFAULT
first(clocking_event) = AT
first(clocking_drive) = SIMPLE_IDENTIFIER P_POUNDPOUND BACKSLASH
first(clocking_direction) = OUTPUT INPUT INOUT
first(clocking_decl_7) = SEQUENCE PROPERTY OUTPUT INPUT INOUT DEFAULT
first(class_scope_type_identifier_9) = SIMPLE_IDENTIFIER BACKSLASH
first(class_scope_type_identifier_4) = SIMPLE_IDENTIFIER BACKSLASH
first(class_scope_type_identifier) = SIMPLE_IDENTIFIER BACKSLASH
first(class_property_6) = STATIC PROTECTED LOCAL
first(class_property_2) = STATIC RANDC RAND PROTECTED LOCAL
first(class_property) = UNION TYPEDEF TIME SVINT STRUCT STRING STATIC SIMPLE_IDENTIFIER SHORTREAL SHORTINT REG REALTIME REAL RANDC RAND PROTECTED LONGINT LOGIC LOCAL INTEGER EVENT ENUM CONST CHANDLE BYTE BIT BACKSLASH AUTOMATIC
first(class_method_9) = VIRTUAL STATIC PROTECTED LOCAL
first(class_method_5) = VIRTUAL STATIC PROTECTED LOCAL
first(class_method_2) = VIRTUAL STATIC PROTECTED LOCAL
first(class_method) = VIRTUAL TASK STATIC PROTECTED LOCAL FUNCTION EXTERN
first(class_item_qualifier) = STATIC PROTECTED LOCAL
first(class_item) = VIRTUAL UNION TYPEDEF TIME TASK SVINT STRUCT STRING STATIC SIMPLE_IDENTIFIER SHORTREAL SHORTINT REG REALTIME REAL RANDC RAND PROTECTED LONGINT LOGIC LOCAL INTEGER FUNCTION EXTERN EVENT ENUM CONSTRAINT CONST CHANDLE BYTE BIT BACKSLASH AUTOMATIC
first(class_declaration_11) = VIRTUAL UNION TYPEDEF TIME TASK SVINT STRUCT STRING STATIC SIMPLE_IDENTIFIER SHORTREAL SHORTINT REG REALTIME REAL RANDC RAND PROTECTED LONGINT LOGIC LOCAL INTEGER FUNCTION EXTERN EVENT ENUM CONSTRAINT CONST CHANDLE BYTE BIT BACKSLASH AUTOMATIC
first(class_constraint) = STATIC CONSTRAINT
first(charge_strength) = LPAREN
first(casting_type) = UNSIGNED_NUMBER UNSIGNED TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TIME SVINT SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REALTIME REAL OCTAL_BASE LONGINT LOGIC INTEGER HEX_BASE DECIMAL_BASE BYTE BIT BINARY_BASE BACKSLASH
first(case_statement_8) = VOID VBAR UNSIGNED_NUMBER UNSIGNED TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS SYSTEM_FUNCTION_IDENTIFIER SVINT SUPER SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REALTIME REAL P_XNOR P_NXOR P_NAND PLUS PLING OCTAL_BASE NULL MINUS LPAREN LONGINT LOGIC LCURLY INTEGER HEX_BASE DOUBLE_QUOTES DEFAULT DECIMAL_BASE CARET BYTE BIT BINARY_BASE BACKSLASH AMPERSAND
first(case_statement_26) = VOID VBAR UNSIGNED_NUMBER UNSIGNED TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS SYSTEM_FUNCTION_IDENTIFIER SVINT SUPER SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REALTIME REAL P_XNOR P_NXOR P_NAND PLUS PLING OCTAL_BASE NULL MINUS LPAREN LONGINT LOGIC LCURLY INTEGER HEX_BASE DOUBLE_QUOTES DEFAULT DECIMAL_BASE CARET BYTE BIT BINARY_BASE BACKSLASH AMPERSAND
first(case_statement_17) = VOID VBAR UNSIGNED_NUMBER UNSIGNED TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS SYSTEM_FUNCTION_IDENTIFIER SVINT SUPER SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REALTIME REAL P_XNOR P_NXOR P_NAND PLUS PLING OCTAL_BASE NULL MINUS LPAREN LONGINT LOGIC LCURLY INTEGER HEX_BASE DOUBLE_QUOTES DEFAULT DECIMAL_BASE CARET BYTE BIT BINARY_BASE BACKSLASH AMPERSAND
first(case_statement) = UNIQUE PRIORITY CASEZ CASEX CASE
first(case_item_3) = COMMA
first(case_item) = VOID VBAR UNSIGNED_NUMBER UNSIGNED TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS SYSTEM_FUNCTION_IDENTIFIER SVINT SUPER SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REALTIME REAL P_XNOR P_NXOR P_NAND PLUS PLING OCTAL_BASE NULL MINUS LPAREN LONGINT LOGIC LCURLY INTEGER HEX_BASE DOUBLE_QUOTES DEFAULT DECIMAL_BASE CARET BYTE BIT BINARY_BASE BACKSLASH AMPERSAND
first(boolean_abbrev) = TOKEN_LBRACK_STAR_EQUALS LBRACK_STAR_DASH_GT LBRACK_STAR
first(blocking_assignment) = SIMPLE_IDENTIFIER LCURLY BACKSLASH
first(block_variable_declaration) = UNION TIME SVINT STRUCT STRING STATIC SIMPLE_IDENTIFIER SHORTREAL SHORTINT REG REALTIME REAL LONGINT LOGIC INTEGER EVENT ENUM CHANDLE BYTE BIT BACKSLASH AUTOMATIC
first(block_item_declaration) = UNION TYPEDEF TIME SVINT STRUCT STRING STATIC SIMPLE_IDENTIFIER SHORTREAL SHORTINT REG REALTIME REAL PARAMETER LONGINT LOGIC LOCALPARAM INTEGER EVENT ENUM CONST CHANDLE BYTE BIT BACKSLASH AUTOMATIC
first(block_data_declaration) = UNION TYPEDEF TIME SVINT STRUCT STRING STATIC SIMPLE_IDENTIFIER SHORTREAL SHORTINT REG REALTIME REAL LONGINT LOGIC INTEGER EVENT ENUM CONST CHANDLE BYTE BIT BACKSLASH AUTOMATIC
first(bind_instantiation) = SIMPLE_IDENTIFIER BACKSLASH
first(bind_directive) = BIND
first(binary_value_3) = Z_DIGIT X_DIGIT UNDERSCORE TOKEN_ZERO TOKEN_ONE
first(binary_operator) = VBAR TOKEN_VBAR_VBAR TOKEN_PLING_QUERY_EQUALS TIMES P_XNOR P_SSRIGHT3 P_SRIGHT P_SLEFT3 P_SLEFT P_POW P_NXOR P_NOTEQUAL P_LTE P_GTE P_EQUAL P_CASENOTEQUAL P_CASEEQUAL P_ANDAND PLUS MODULO MINUS LESS GREATER EQUALS_QUERY_EQUALS DIVIDE CARET AMPERSAND
first(binary_module_path_operator) = VBAR TOKEN_VBAR_VBAR P_XNOR P_NXOR P_NOTEQUAL P_EQUAL P_ANDAND CARET AMPERSAND
first(binary_digit) = Z_DIGIT X_DIGIT TOKEN_ZERO TOKEN_ONE
first(associative_dimension) = LBRACK
first(assignment_operator) = TOKEN_VBAR_EQUALS P_XOREQ P_TIMESEQ P_SSRIGHT3EQ P_SRIGHTEQ P_SLEFTEQ P_SLEFT3EQ P_PLUSEQ P_MODEQ P_MINUSEQ P_DIVEQ P_ANDEQ EQUALS
first(assert_property_statement) = ASSERT
first(array_member_label) = VBAR UNSIGNED_NUMBER UNSIGNED TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TIME TILDE_VBAR TILDE SVINT SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REALTIME REAL P_XNOR P_NXOR P_NAND PLUS PLING OCTAL_BASE MINUS LPAREN LONGINT LOGIC LCURLY INTEGER HEX_BASE DOUBLE_QUOTES DEFAULT DECIMAL_BASE CARET BYTE BIT BINARY_BASE BACKSLASH AMPERSAND
first(actual_arg_list_4) = COMMA
first(actual_arg_list_13) = COMMA
first(actual_arg_list) = LPAREN
first(action_block) = WHILE WAIT_ORDER WAIT UNIQUE TOKEN_PLUS_PLUS TOKEN_DASH_DASH SYSTEM_TASK_IDENTIFIER SIMPLE_IDENTIFIER SEMICOLON RETURN REPEAT RELEASE P_POUNDPOUND P_MINUSGT PRIORITY LCURLY IF HASH FORK FOREVER FORCE FOR ELSE DO DISABLE DEASSIGN DASH_GT_GT COVER CONTINUE CASEZ CASEX CASE BREAK BEGIN BACKSLASH AT_STAR AT ASSIGN ASSERT
minimal(zero_or_one) = (* 1 *) TOKEN_ZERO
minimal(white_space) = (* 1 *) SPACE
minimal(wait_statement) = (* 3 *) WAIT FORK SEMICOLON
minimal(variable_lvalue_8) = (* 0 *)
minimal(variable_lvalue_3) = (* 0 *)
minimal(variable_lvalue) = (* 1 *) SIMPLE_IDENTIFIER
minimal(variable_dimension_2) = (* 0 *)
minimal(variable_dimension) = (* 0 *)
minimal(variable_decl_or_assignment) = (* 2 *) BIT SIMPLE_IDENTIFIER
minimal(variable_decl_assignment) = (* 1 *) SIMPLE_IDENTIFIER
minimal(variable_assignment) = (* 2 *) TOKEN_PLUS_PLUS SIMPLE_IDENTIFIER
minimal(value_range) = (* 1 *) UNSIGNED_NUMBER
minimal(unpacked_dimension) = (* 3 *) LBRACK SIMPLE_IDENTIFIER RBRACK
minimal(unique_priority) = (* 1 *) UNIQUE
minimal(unary_operator) = (* 1 *) PLUS
minimal(unary_module_path_operator) = (* 1 *) PLING
minimal(udp_port_list_5) = (* 0 *)
minimal(udp_port_declaration) = (* 3 *) OUTPUT SIMPLE_IDENTIFIER SEMICOLON
minimal(udp_output_declaration) = (* 2 *) OUTPUT SIMPLE_IDENTIFIER
minimal(udp_instantiation_6) = (* 0 *)
minimal(udp_instance_8) = (* 0 *)
minimal(udp_instance_3) = (* 0 *)
minimal(udp_declaration_port_list_5) = (* 0 *)
minimal(udp_declaration_4) = (* 0 *)
minimal(udp_declaration_27) = (* 0 *)
minimal(udp_declaration) = (* 9 *) EXTERN PRIMITIVE SIMPLE_IDENTIFIER LPAREN SIMPLE_IDENTIFIER COMMA SIMPLE_IDENTIFIER RPAREN SEMICOLON
minimal(udp_body) = (* 6 *) TABLE LEVEL_SYMBOL COLON OUTPUT_SYMBOL SEMICOLON ENDTABLE
minimal(type_declaration_identifier_3) = (* 0 *)
minimal(type_declaration) = (* 3 *) TYPEDEF SIMPLE_IDENTIFIER SEMICOLON
minimal(timing_check_event_control) = (* 1 *) POSEDGE
minimal(timing_check_condition) = (* 1 *) UNSIGNED_NUMBER
minimal(timeunits_declaration) = (* 4 *) TIMEUNIT UNSIGNED_NUMBER TIME_UNIT SEMICOLON
minimal(time_literal) = (* 2 *) UNSIGNED_NUMBER TIME_UNIT
minimal(tf_output_declaration_4) = (* 0 *)
minimal(tf_output_declaration) = (* 2 *) OUTPUT SIMPLE_IDENTIFIER
minimal(tf_input_declaration_4) = (* 0 *)
minimal(tf_input_declaration) = (* 2 *) INPUT SIMPLE_IDENTIFIER
minimal(tf_inout_declaration_4) = (* 0 *)
minimal(tf_inout_declaration) = (* 2 *) INOUT SIMPLE_IDENTIFIER
minimal(tf_data_type) = (* 1 *) BIT
minimal(task_proto_formal) = (* 2 *) INPUT SIMPLE_IDENTIFIER
minimal(task_port_list_6) = (* 0 *)
minimal(task_port_list_3) = (* 0 *)
minimal(task_port_list) = (* 1 *) SIMPLE_IDENTIFIER
minimal(task_port_item) = (* 2 *) INPUT SIMPLE_IDENTIFIER
minimal(task_or_function_identifier) = (* 1 *) SIMPLE_IDENTIFIER
minimal(task_item_declaration) = (* 3 *) BIT SIMPLE_IDENTIFIER SEMICOLON
minimal(task_body_declaration_6) = (* 0 *)
minimal(task_body_declaration_5) = (* 0 *)
minimal(task_body_declaration_17) = (* 0 *)
minimal(task_body_declaration_16) = (* 0 *)
minimal(task_body_declaration) = (* 3 *) SIMPLE_IDENTIFIER SEMICOLON ENDTASK
minimal(system_timing_check) = (* 8 *) D_PERIOD LPAREN POSEDGE SIMPLE_IDENTIFIER COMMA UNSIGNED_NUMBER RPAREN SEMICOLON
minimal(system_task_enable_3_5) = (* 0 *)
minimal(system_function_call_3_5) = (* 0 *)
minimal(struct_member_label) = (* 1 *) DEFAULT
minimal(string_literal_3) = (* 0 *)
minimal(strength1) = (* 1 *) SUPPLY1
minimal(strength0) = (* 1 *) SUPPLY0
minimal(statement_or_null) = (* 1 *) SEMICOLON
minimal(statement_item) = (* 2 *) SIMPLE_IDENTIFIER SEMICOLON
minimal(state_dependent_path_declaration) = (* 8 *) IF_NONE LPAREN SIMPLE_IDENTIFIER P_EQGT SIMPLE_IDENTIFIER RPAREN EQUALS SIMPLE_IDENTIFIER
minimal(start) = (* 0 *)
minimal(specparam_assignment) = (* 3 *) SIMPLE_IDENTIFIER EQUALS SIMPLE_IDENTIFIER
minimal(specify_terminal_descriptor) = (* 1 *) SIMPLE_IDENTIFIER
minimal(specify_item) = (* 3 *) PULSESTYLE_ONEVENT SIMPLE_IDENTIFIER SEMICOLON
minimal(specify_block_3) = (* 0 *)
minimal(source_text_3) = (* 0 *)
minimal(simple_type) = (* 1 *) BIT
minimal(simple_path_declaration) = (* 7 *) LPAREN SIMPLE_IDENTIFIER P_EQGT SIMPLE_IDENTIFIER RPAREN EQUALS SIMPLE_IDENTIFIER
minimal(simple_hierarchical_branch_4_3_6) = (* 0 *)
minimal(simple_hierarchical_branch_4_3) = (* 0 *)
minimal(simple_hierarchical_branch_3) = (* 0 *)
minimal(signing) = (* 1 *) SIGNED
minimal(sign) = (* 1 *) PLUS
minimal(showcancelled_declaration) = (* 3 *) SHOWCANCELLED SIMPLE_IDENTIFIER SEMICOLON
minimal(sequential_body_5) = (* 0 *)
minimal(sequence_spec) = (* 1 *) UNSIGNED_NUMBER
minimal(sequence_formal_list_4) = (* 0 *)
minimal(sequence_expr_9) = (* 0 *)
minimal(sequence_expr_4) = (* 0 *)
minimal(sequence_expr_17) = (* 0 *)
minimal(sequence_expr_12) = (* 0 *)
minimal(sequence_expr) = (* 1 *) UNSIGNED_NUMBER
minimal(sequence_declaration_6) = (* 0 *)
minimal(seq_input_list) = (* 1 *) LEVEL_SYMBOL
minimal(seq_block_5) = (* 0 *)
minimal(seq_block_4) = (* 0 *)
minimal(scalar_timing_check_condition) = (* 1 *) UNSIGNED_NUMBER
minimal(scalar_constant) = (* 1 *) TOKEN_FALSE2
minimal(real_number) = (* 3 *) UNSIGNED_NUMBER DOT UNSIGNED_NUMBER
minimal(range_or_type_2) = (* 0 *)
minimal(range_or_type) = (* 1 *) BIT
minimal(range_list_or_array_6) = (* 0 *)
minimal(range_list_or_array) = (* 1 *) SIMPLE_IDENTIFIER
minimal(range_expression) = (* 1 *) UNSIGNED_NUMBER
minimal(pulsestyle_declaration) = (* 3 *) PULSESTYLE_ONEVENT SIMPLE_IDENTIFIER SEMICOLON
minimal(pulse_control_specparam) = (* 6 *) PATHPULSE EQUALS LPAREN SIMPLE_IDENTIFIER RPAREN SEMICOLON
minimal(pullup_strength) = (* 3 *) LPAREN SUPPLY1 RPAREN
minimal(pulldown_strength) = (* 3 *) LPAREN SUPPLY0 RPAREN
minimal(property_spec) = (* 3 *) AT SIMPLE_IDENTIFIER UNSIGNED_NUMBER
minimal(property_qualifier) = (* 1 *) RAND
minimal(property_formal_list_4) = (* 0 *)
minimal(property_expr) = (* 1 *) UNSIGNED_NUMBER
minimal(property_declaration_6) = (* 0 *)
minimal(program_item) = (* 2 *) INITIAL SEMICOLON
minimal(program_instantiation_5) = (* 0 *)
minimal(program_instance_3) = (* 0 *)
minimal(program_declaration_4) = (* 0 *)
minimal(program_declaration_22) = (* 0 *)
minimal(program_declaration_10) = (* 0 *)
minimal(program_declaration) = (* 4 *) PROGRAM SIMPLE_IDENTIFIER SEMICOLON ENDPROGRAM
minimal(procedural_timing_control) = (* 1 *) AT_STAR
minimal(procedural_continuous_assignments) = (* 2 *) DEASSIGN SIMPLE_IDENTIFIER
minimal(procedural_assertion_item) = (* 5 *) ASSERT LPAREN UNSIGNED_NUMBER RPAREN SEMICOLON
minimal(primary_8_6_5) = (* 0 *)
minimal(primary_6) = (* 0 *)
minimal(primary_22) = (* 0 *)
minimal(primary) = (* 1 *) UNSIGNED_NUMBER
minimal(port_type_6) = (* 0 *)
minimal(port_type_13) = (* 0 *)
minimal(port_type_10) = (* 0 *)
minimal(port_type) = (* 1 *) BIT
minimal(port_expression_6) = (* 0 *)
minimal(port_expression) = (* 1 *) SIMPLE_IDENTIFIER
minimal(port_declaration) = (* 2 *) INOUT SIMPLE_IDENTIFIER
minimal(port) = (* 0 *)
minimal(polarity_operator) = (* 1 *) PLUS
minimal(path_delay_value) = (* 1 *) SIMPLE_IDENTIFIER
minimal(path_declaration) = (* 8 *) LPAREN SIMPLE_IDENTIFIER P_EQGT SIMPLE_IDENTIFIER RPAREN EQUALS SIMPLE_IDENTIFIER SEMICOLON
minimal(pass_switchtype) = (* 1 *) TRAN
minimal(pass_en_switchtype) = (* 1 *) TRANIF0
minimal(parameter_port_list_5) = (* 0 *)
minimal(parameter_declaration_4) = (* 0 *)
minimal(parameter_declaration) = (* 4 *) PARAMETER SIMPLE_IDENTIFIER EQUALS SIMPLE_IDENTIFIER
minimal(par_block_5) = (* 0 *)
minimal(par_block_4) = (* 0 *)
minimal(packed_dimension) = (* 2 *) LBRACK RBRACK
minimal(output_identifier) = (* 1 *) SIMPLE_IDENTIFIER
minimal(output_declaration) = (* 2 *) OUTPUT SIMPLE_IDENTIFIER
minimal(ordered_parameter_assignment) = (* 1 *) UNSIGNED_NUMBER
minimal(octal_value_3) = (* 0 *)
minimal(octal_digit) = (* 1 *) X_DIGIT
minimal(number) = (* 1 *) UNSIGNED_NUMBER
minimal(non_zero_unsigned_number_3) = (* 0 *)
minimal(non_zero_decimal_digit) = (* 1 *) TOKEN_ONE
minimal(non_port_program_item) = (* 2 *) INITIAL SEMICOLON
minimal(non_port_module_item) = (* 1 *) SEMICOLON
minimal(non_port_interface_item) = (* 1 *) SEMICOLON
minimal(non_integer_type) = (* 1 *) TIME
minimal(non_generic_port_declaration) = (* 2 *) INOUT SIMPLE_IDENTIFIER
minimal(next_state) = (* 1 *) OUTPUT_SYMBOL
minimal(net_type) = (* 1 *) SUPPLY0
minimal(net_lvalue_8) = (* 0 *)
minimal(net_lvalue_3) = (* 0 *)
minimal(net_lvalue) = (* 1 *) SIMPLE_IDENTIFIER
minimal(net_declaration_62) = (* 0 *)
minimal(net_declaration_52) = (* 0 *)
minimal(net_declaration_28) = (* 0 *)
minimal(net_declaration_18) = (* 0 *)
minimal(net_declaration) = (* 3 *) SUPPLY0 SIMPLE_IDENTIFIER SEMICOLON
minimal(named_task_proto_5) = (* 0 *)
minimal(named_parameter_assignment) = (* 4 *) DOT SIMPLE_IDENTIFIER LPAREN RPAREN
minimal(name_of_instance_3) = (* 0 *)
minimal(name_of_gate_instance_3) = (* 0 *)
minimal(n_output_gatetype) = (* 1 *) BUF
minimal(n_output_gate_instance_5) = (* 0 *)
minimal(n_input_gatetype) = (* 1 *) AND
minimal(n_input_gate_instance_7) = (* 0 *)
minimal(multi_clock_sequence_3) = (* 0 *)
minimal(multi_clock_property_expr) = (* 3 *) AT SIMPLE_IDENTIFIER UNSIGNED_NUMBER
minimal(mos_switchtype) = (* 1 *) NMOS
minimal(module_root_item) = (* 3 *) SUPPLY0 SIMPLE_IDENTIFIER SEMICOLON
minimal(module_path_primary) = (* 1 *) UNSIGNED_NUMBER
minimal(module_path_mintypmax_expression) = (* 1 *) UNSIGNED_NUMBER
minimal(module_path_expression) = (* 1 *) UNSIGNED_NUMBER
minimal(module_path_concatenation_4) = (* 0 *)
minimal(module_or_generate_item_declaration) = (* 3 *) SUPPLY0 SIMPLE_IDENTIFIER SEMICOLON
minimal(module_or_generate_item) = (* 1 *) SEMICOLON
minimal(module_keyword) = (* 1 *) MODULE
minimal(module_item) = (* 1 *) SEMICOLON
minimal(module_instantiation_5) = (* 0 *)
minimal(module_declaration_4) = (* 0 *)
minimal(module_declaration_23) = (* 0 *)
minimal(module_declaration_10) = (* 0 *)
minimal(module_declaration) = (* 4 *) MODULE SIMPLE_IDENTIFIER SEMICOLON ENDMODULE
minimal(module_common_item) = (* 3 *) SUPPLY0 SIMPLE_IDENTIFIER SEMICOLON
minimal(modport_tf_port_8) = (* 0 *)
minimal(modport_tf_port_4) = (* 0 *)
minimal(modport_tf_port_11) = (* 0 *)
minimal(modport_tf_port) = (* 1 *) SIMPLE_IDENTIFIER
minimal(modport_simple_ports_declaration) = (* 2 *) INPUT SIMPLE_IDENTIFIER
minimal(modport_ports_declaration) = (* 2 *) INPUT SIMPLE_IDENTIFIER
minimal(modport_item_5) = (* 0 *)
minimal(modport_declaration_4) = (* 0 *)
minimal(mintypmax_expression) = (* 1 *) UNSIGNED_NUMBER
minimal(method_qualifier) = (* 1 *) VIRTUAL
minimal(method_prototype) = (* 6 *) FUNCTION BIT SIMPLE_IDENTIFIER LPAREN RPAREN SEMICOLON
minimal(loop_statement_35) = (* 0 *)
minimal(loop_statement_30) = (* 0 *)
minimal(loop_statement) = (* 2 *) FOREVER SEMICOLON
minimal(local_parameter_declaration_4) = (* 0 *)
minimal(local_parameter_declaration) = (* 5 *) LOCALPARAM SIMPLE_IDENTIFIER EQUALS SIMPLE_IDENTIFIER SEMICOLON
minimal(list_of_variable_port_identifiers_5) = (* 0 *)
minimal(list_of_variable_identifiers_or_assignments) = (* 1 *) SIMPLE_IDENTIFIER
minimal(list_of_variable_identifiers_4) = (* 0 *)
minimal(list_of_variable_decl_assignments_3) = (* 0 *)
minimal(list_of_variable_assignments_3) = (* 0 *)
minimal(list_of_udp_port_identifiers_3) = (* 0 *)
minimal(list_of_type_assignments_3) = (* 0 *)
minimal(list_of_tf_variable_identifiers_5) = (* 0 *)
minimal(list_of_tf_port_identifiers_5_6) = (* 0 *)
minimal(list_of_tf_port_identifiers_5) = (* 0 *)
minimal(list_of_tf_port_identifiers_3) = (* 0 *)
minimal(list_of_specparam_assignments_3) = (* 0 *)
minimal(list_of_ports_4) = (* 0 *)
minimal(list_of_port_identifiers_4_6) = (* 0 *)
minimal(list_of_port_identifiers_4) = (* 0 *)
minimal(list_of_port_identifiers_3) = (* 0 *)
minimal(list_of_port_declarations_4) = (* 0 *)
minimal(list_of_port_declarations) = (* 2 *) LPAREN RPAREN
minimal(list_of_port_connections_8) = (* 0 *)
minimal(list_of_port_connections_6) = (* 0 *)
minimal(list_of_port_connections_3) = (* 0 *)
minimal(list_of_port_connections_10) = (* 0 *)
minimal(list_of_port_connections) = (* 0 *)
minimal(list_of_path_outputs_3) = (* 0 *)
minimal(list_of_path_inputs_3) = (* 0 *)
minimal(list_of_path_delay_expressions) = (* 1 *) SIMPLE_IDENTIFIER
minimal(list_of_parameter_assignments_6) = (* 0 *)
minimal(list_of_parameter_assignments_3) = (* 0 *)
minimal(list_of_parameter_assignments) = (* 1 *) UNSIGNED_NUMBER
minimal(list_of_param_assignments_3) = (* 0 *)
minimal(list_of_net_identifiers_4_6) = (* 0 *)
minimal(list_of_net_identifiers_4) = (* 0 *)
minimal(list_of_net_identifiers_3) = (* 0 *)
minimal(list_of_net_decl_assignments_3) = (* 0 *)
minimal(list_of_net_assignments_3) = (* 0 *)
minimal(list_of_modport_port_identifiers_3) = (* 0 *)
minimal(list_of_interface_identifiers_4_6) = (* 0 *)
minimal(list_of_interface_identifiers_4) = (* 0 *)
minimal(list_of_interface_identifiers_3) = (* 0 *)
minimal(list_of_genvar_identifiers_3) = (* 0 *)
minimal(list_of_function_proto_formals_2_5) = (* 0 *)
minimal(list_of_dpi_proto_formals_2_5) = (* 0 *)
minimal(list_of_defparam_assignments_3) = (* 0 *)
minimal(list_of_constant_arguments_3) = (* 0 *)
minimal(list_of_constant_arguments_10) = (* 0 *)
minimal(list_of_constant_arguments) = (* 0 *)
minimal(list_of_clocking_decl_assign_3) = (* 0 *)
minimal(list_of_arguments_3) = (* 0 *)
minimal(list_of_arguments_10) = (* 0 *)
minimal(list_of_arguments) = (* 0 *)
minimal(lifetime) = (* 1 *) STATIC
minimal(level_input_list_3) = (* 0 *)
minimal(jump_statement) = (* 2 *) RETURN SEMICOLON
minimal(join_keyword) = (* 1 *) JOIN
minimal(interface_port_declaration) = (* 2 *) SIMPLE_IDENTIFIER SIMPLE_IDENTIFIER
minimal(interface_or_generate_item) = (* 1 *) SEMICOLON
minimal(interface_item) = (* 1 *) SEMICOLON
minimal(interface_instantiation_5) = (* 0 *)
minimal(interface_declaration_4) = (* 0 *)
minimal(interface_declaration_22) = (* 0 *)
minimal(interface_declaration_10) = (* 0 *)
minimal(interface_declaration) = (* 4 *) INTERFACE SIMPLE_IDENTIFIER SEMICOLON ENDINTERFACE
minimal(integer_vector_type) = (* 1 *) BIT
minimal(integer_type) = (* 1 *) BIT
minimal(integer_atom_type) = (* 1 *) BYTE
minimal(input_identifier) = (* 1 *) SIMPLE_IDENTIFIER
minimal(input_declaration) = (* 2 *) INPUT SIMPLE_IDENTIFIER
minimal(inout_declaration) = (* 2 *) INOUT SIMPLE_IDENTIFIER
minimal(init_val) = (* 1 *) TOKEN_FALSE2
minimal(inc_or_dec_operator) = (* 1 *) TOKEN_PLUS_PLUS
minimal(inc_or_dec_expression) = (* 2 *) TOKEN_PLUS_PLUS SIMPLE_IDENTIFIER
minimal(import_export) = (* 1 *) IMPORT
minimal(implicit_class_handle) = (* 0 *)
minimal(if_else_if_statement_8) = (* 0 *)
minimal(identifier_list_3) = (* 0 *)
minimal(identifier) = (* 1 *) SIMPLE_IDENTIFIER
minimal(hierarchical_identifier) = (* 1 *) SIMPLE_IDENTIFIER
minimal(hex_value_3) = (* 0 *)
minimal(genvar_module_case_item_3) = (* 0 *)
minimal(genvar_module_case_item) = (* 2 *) DEFAULT SEMICOLON
minimal(genvar_interface_case_item_3) = (* 0 *)
minimal(genvar_interface_case_item) = (* 2 *) DEFAULT SEMICOLON
minimal(genvar_assignment) = (* 2 *) TOKEN_PLUS_PLUS SIMPLE_IDENTIFIER
minimal(generic_interface_port_declaration) = (* 2 *) INTERFACE SIMPLE_IDENTIFIER
minimal(generated_module_instantiation_3) = (* 0 *)
minimal(generated_interface_instantiation_3) = (* 0 *)
minimal(generate_module_named_block_5) = (* 0 *)
minimal(generate_module_named_block) = (* 4 *) BEGIN COLON SIMPLE_IDENTIFIER END
minimal(generate_module_item) = (* 1 *) SEMICOLON
minimal(generate_module_case_statement_7) = (* 0 *)
minimal(generate_module_block_4) = (* 0 *)
minimal(generate_interface_named_block_5) = (* 0 *)
minimal(generate_interface_named_block) = (* 4 *) BEGIN COLON SIMPLE_IDENTIFIER END
minimal(generate_interface_item) = (* 1 *) SEMICOLON
minimal(generate_interface_case_statement_7) = (* 0 *)
minimal(generate_interface_block_4) = (* 0 *)
minimal(gate_instantiation_55) = (* 0 *)
minimal(gate_instantiation_5) = (* 0 *)
minimal(gate_instantiation_49) = (* 0 *)
minimal(gate_instantiation_43) = (* 0 *)
minimal(gate_instantiation_38) = (* 0 *)
minimal(gate_instantiation_32) = (* 0 *)
minimal(gate_instantiation_25) = (* 0 *)
minimal(gate_instantiation_18) = (* 0 *)
minimal(gate_instantiation_12) = (* 0 *)
minimal(gate_instantiation) = (* 5 *) PULLDOWN LPAREN SIMPLE_IDENTIFIER RPAREN SEMICOLON
minimal(function_statement_or_null) = (* 1 *) SEMICOLON
minimal(function_statement_item) = (* 2 *) SIMPLE_IDENTIFIER SEMICOLON
minimal(function_seq_block_4) = (* 0 *)
minimal(function_seq_block_3_5) = (* 0 *)
minimal(function_proto_formal) = (* 2 *) INPUT SIMPLE_IDENTIFIER
minimal(function_port_list_3) = (* 0 *)
minimal(function_port_item) = (* 2 *) INPUT SIMPLE_IDENTIFIER
minimal(function_loop_statement_25) = (* 0 *)
minimal(function_loop_statement_20) = (* 0 *)
minimal(function_loop_statement) = (* 2 *) FOREVER SEMICOLON
minimal(function_item_declaration) = (* 3 *) BIT SIMPLE_IDENTIFIER SEMICOLON
minimal(function_if_else_if_statement_8) = (* 0 *)
minimal(function_data_type_9) = (* 0 *)
minimal(function_data_type_32) = (* 0 *)
minimal(function_data_type_3) = (* 0 *)
minimal(function_data_type_28_4) = (* 0 *)
minimal(function_data_type_25) = (* 0 *)
minimal(function_data_type_23) = (* 0 *)
minimal(function_data_type_18) = (* 0 *)
minimal(function_data_type_16) = (* 0 *)
minimal(function_data_type) = (* 1 *) BIT
minimal(function_conditional_statement) = (* 5 *) IF LPAREN UNSIGNED_NUMBER RPAREN SEMICOLON
minimal(function_case_statement_8) = (* 0 *)
minimal(function_case_statement_26) = (* 0 *)
minimal(function_case_statement_17) = (* 0 *)
minimal(function_case_statement) = (* 7 *) CASE LPAREN UNSIGNED_NUMBER RPAREN DEFAULT SEMICOLON ENDCASE
minimal(function_case_item_3) = (* 0 *)
minimal(function_case_item) = (* 2 *) DEFAULT SEMICOLON
minimal(function_body_declaration_8) = (* 0 *)
minimal(function_body_declaration_7) = (* 0 *)
minimal(function_body_declaration_21) = (* 0 *)
minimal(function_body_declaration_20) = (* 0 *)
minimal(function_body_declaration) = (* 3 *) SIMPLE_IDENTIFIER SEMICOLON ENDFUNCTION
minimal(extern_tf_declaration) = (* 7 *) EXTERN FUNCTION BIT SIMPLE_IDENTIFIER LPAREN RPAREN SEMICOLON
minimal(extern_method_declaration) = (* 6 *) FUNCTION SIMPLE_IDENTIFIER P_COLONCOLON SIMPLE_IDENTIFIER SEMICOLON ENDFUNCTION
minimal(extern_constraint_declaration_8) = (* 0 *)
minimal(expression) = (* 1 *) UNSIGNED_NUMBER
minimal(event_trigger) = (* 3 *) P_MINUSGT SIMPLE_IDENTIFIER SEMICOLON
minimal(event_expression) = (* 1 *) UNSIGNED_NUMBER
minimal(event_control) = (* 1 *) AT_STAR
minimal(escaped_hierarchical_identifier_3) = (* 0 *)
minimal(escaped_hierarchical_branch_4_3_6) = (* 0 *)
minimal(escaped_hierarchical_branch_4_3) = (* 0 *)
minimal(escaped_hierarchical_branch_3) = (* 0 *)
minimal(enable_gatetype) = (* 1 *) BUFIF0
minimal(edge_sensitive_path_declaration) = (* 9 *) LPAREN SIMPLE_IDENTIFIER P_EQGT SIMPLE_IDENTIFIER COLON UNSIGNED_NUMBER RPAREN EQUALS SIMPLE_IDENTIFIER
minimal(edge_input_list_4) = (* 0 *)
minimal(edge_input_list_2) = (* 0 *)
minimal(edge_indicator) = (* 1 *) EDGE_SYMBOL
minimal(edge_identifier) = (* 1 *) POSEDGE
minimal(edge_descriptor) = (* 1 *) TOKEN_EDGE01
minimal(edge_control_specifier_5) = (* 0 *)
minimal(drive_strength) = (* 5 *) LPAREN SUPPLY0 COMMA SUPPLY1 RPAREN
minimal(dpi_proto_formal_3_5) = (* 0 *)
minimal(dpi_import_property) = (* 1 *) CONTEXT
minimal(dpi_import_export) = (* 5 *) EXPORT TOKEN_DPI FUNCTION SIMPLE_IDENTIFIER SEMICOLON
minimal(dpi_function_proto) = (* 4 *) BIT SIMPLE_IDENTIFIER LPAREN RPAREN
minimal(dpi_dimension_4) = (* 0 *)
minimal(dpi_dimension) = (* 0 *)
minimal(dot_named_port_connection) = (* 2 *) DOT SIMPLE_IDENTIFIER
minimal(dist_list_3) = (* 0 *)
minimal(dist_item) = (* 3 *) UNSIGNED_NUMBER P_COLONEQ UNSIGNED_NUMBER
minimal(disable_statement) = (* 3 *) DISABLE SIMPLE_IDENTIFIER SEMICOLON
minimal(description) = (* 1 *) SEMICOLON
minimal(delayed_reference) = (* 1 *) SIMPLE_IDENTIFIER
minimal(delayed_data) = (* 1 *) SIMPLE_IDENTIFIER
minimal(delay_value) = (* 1 *) UNSIGNED_NUMBER
minimal(delay_or_event_control) = (* 1 *) AT_STAR
minimal(delay_control) = (* 2 *) HASH UNSIGNED_NUMBER
minimal(delay3) = (* 2 *) HASH UNSIGNED_NUMBER
minimal(delay2) = (* 2 *) HASH UNSIGNED_NUMBER
minimal(default_skew) = (* 2 *) INPUT POSEDGE
minimal(decimal_number_16) = (* 0 *)
minimal(decimal_number_11) = (* 0 *)
minimal(decimal_number) = (* 1 *) UNSIGNED_NUMBER
minimal(decimal_digit) = (* 1 *) TOKEN_ZERO
minimal(data_type_48) = (* 0 *)
minimal(data_type_44_5) = (* 0 *)
minimal(data_type_40) = (* 0 *)
minimal(data_type_4) = (* 0 *)
minimal(data_type_34) = (* 0 *)
minimal(data_type_29) = (* 0 *)
minimal(data_type_27) = (* 0 *)
minimal(data_type_21) = (* 0 *)
minimal(data_type_19) = (* 0 *)
minimal(data_type_11) = (* 0 *)
minimal(data_type) = (* 1 *) BIT
minimal(data_declaration) = (* 3 *) BIT SIMPLE_IDENTIFIER SEMICOLON
minimal(cycle_delay_range) = (* 2 *) P_POUNDPOUND SIMPLE_IDENTIFIER
minimal(cycle_delay_const_range_expression) = (* 3 *) SIMPLE_IDENTIFIER COLON SIMPLE_IDENTIFIER
minimal(cover_property_statement) = (* 6 *) COVER PROPERTY LPAREN SIMPLE_IDENTIFIER RPAREN SEMICOLON
minimal(continuous_assign) = (* 4 *) ASSIGN TOKEN_PLUS_PLUS SIMPLE_IDENTIFIER SEMICOLON
minimal(constraint_set_5) = (* 0 *)
minimal(constraint_set) = (* 2 *) LCURLY RCURLY
minimal(constraint_expression) = (* 2 *) UNSIGNED_NUMBER SEMICOLON
minimal(constraint_declaration_6) = (* 0 *)
minimal(constraint_block) = (* 2 *) UNSIGNED_NUMBER SEMICOLON
minimal(constant_range_expression) = (* 1 *) SIMPLE_IDENTIFIER
minimal(constant_primary) = (* 1 *) SIMPLE_IDENTIFIER
minimal(constant_mintypmax_expression) = (* 1 *) SIMPLE_IDENTIFIER
minimal(constant_expression) = (* 1 *) SIMPLE_IDENTIFIER
minimal(constant_concatenation_4) = (* 0 *)
minimal(constant_concatenation_18) = (* 0 *)
minimal(constant_concatenation_11) = (* 0 *)
minimal(constant_concatenation) = (* 3 *) LCURLY SIMPLE_IDENTIFIER RCURLY
minimal(const_or_range_expression) = (* 1 *) SIMPLE_IDENTIFIER
minimal(conditional_statement) = (* 5 *) IF LPAREN UNSIGNED_NUMBER RPAREN SEMICOLON
minimal(concurrent_assertion_item_declaration) = (* 6 *) SEQUENCE SIMPLE_IDENTIFIER SEMICOLON UNSIGNED_NUMBER SEMICOLON ENDSEQUENCE
minimal(concurrent_assertion_item) = (* 6 *) ASSERT PROPERTY LPAREN SIMPLE_IDENTIFIER RPAREN SEMICOLON
minimal(concatenation_4) = (* 0 *)
minimal(concatenation_18) = (* 0 *)
minimal(concatenation_11) = (* 0 *)
minimal(concatenation) = (* 3 *) LCURLY UNSIGNED_NUMBER RCURLY
minimal(combinational_body_4) = (* 0 *)
minimal(cmos_switchtype) = (* 1 *) CMOS
minimal(clockvar_expression) = (* 6 *) SIMPLE_IDENTIFIER DOT SIMPLE_IDENTIFIER LBRACK UNSIGNED_NUMBER RBRACK
minimal(clocking_skew) = (* 1 *) POSEDGE
minimal(clocking_item) = (* 3 *) INPUT SIMPLE_IDENTIFIER SEMICOLON
minimal(clocking_event) = (* 2 *) AT SIMPLE_IDENTIFIER
minimal(clocking_drive) = (* 8 *) SIMPLE_IDENTIFIER DOT SIMPLE_IDENTIFIER LBRACK UNSIGNED_NUMBER RBRACK P_LTE UNSIGNED_NUMBER
minimal(clocking_direction) = (* 1 *) INPUT
minimal(clocking_decl_7) = (* 0 *)
minimal(class_scope_type_identifier_9) = (* 0 *)
minimal(class_scope_type_identifier_4) = (* 0 *)
minimal(class_scope_type_identifier) = (* 3 *) SIMPLE_IDENTIFIER P_COLONCOLON SIMPLE_IDENTIFIER
minimal(class_property_6) = (* 0 *)
minimal(class_property_2) = (* 0 *)
minimal(class_property) = (* 3 *) BIT SIMPLE_IDENTIFIER SEMICOLON
minimal(class_method_9) = (* 0 *)
minimal(class_method_5) = (* 0 *)
minimal(class_method_2) = (* 0 *)
minimal(class_method) = (* 4 *) TASK SIMPLE_IDENTIFIER SEMICOLON ENDTASK
minimal(class_item_qualifier) = (* 1 *) STATIC
minimal(class_item) = (* 2 *) CONSTRAINT SIMPLE_IDENTIFIER
minimal(class_declaration_11) = (* 0 *)
minimal(class_constraint) = (* 2 *) CONSTRAINT SIMPLE_IDENTIFIER
minimal(charge_strength) = (* 3 *) LPAREN SMALL RPAREN
minimal(casting_type) = (* 1 *) BIT
minimal(case_statement_8) = (* 0 *)
minimal(case_statement_26) = (* 0 *)
minimal(case_statement_17) = (* 0 *)
minimal(case_statement) = (* 7 *) CASE LPAREN UNSIGNED_NUMBER RPAREN DEFAULT SEMICOLON ENDCASE
minimal(case_item_3) = (* 0 *)
minimal(case_item) = (* 2 *) DEFAULT SEMICOLON
minimal(boolean_abbrev) = (* 3 *) LBRACK_STAR SIMPLE_IDENTIFIER RBRACK
minimal(blocking_assignment) = (* 3 *) SIMPLE_IDENTIFIER EQUALS NEW
minimal(block_variable_declaration) = (* 3 *) BIT SIMPLE_IDENTIFIER SEMICOLON
minimal(block_item_declaration) = (* 3 *) BIT SIMPLE_IDENTIFIER SEMICOLON
minimal(block_data_declaration) = (* 3 *) BIT SIMPLE_IDENTIFIER SEMICOLON
minimal(bind_instantiation) = (* 5 *) SIMPLE_IDENTIFIER SIMPLE_IDENTIFIER LPAREN RPAREN SEMICOLON
minimal(bind_directive) = (* 8 *) BIND SIMPLE_IDENTIFIER SIMPLE_IDENTIFIER SIMPLE_IDENTIFIER LPAREN RPAREN SEMICOLON SEMICOLON
minimal(binary_value_3) = (* 0 *)
minimal(binary_operator) = (* 1 *) PLUS
minimal(binary_module_path_operator) = (* 1 *) P_EQUAL
minimal(binary_digit) = (* 1 *) X_DIGIT
minimal(associative_dimension) = (* 3 *) LBRACK BIT RBRACK
minimal(assignment_operator) = (* 1 *) EQUALS
minimal(assert_property_statement) = (* 6 *) ASSERT PROPERTY LPAREN SIMPLE_IDENTIFIER RPAREN SEMICOLON
minimal(array_member_label) = (* 1 *) DEFAULT
minimal(actual_arg_list_4) = (* 0 *)
minimal(actual_arg_list_13) = (* 0 *)
minimal(actual_arg_list) = (* 3 *) LPAREN UNSIGNED_NUMBER RPAREN
minimal(action_block) = (* 1 *) SEMICOLON
maximal(zero_or_one) = 1
maximal(white_space) = 1
maximal(wait_statement) = infinity
maximal(variable_lvalue_8) = infinity
maximal(variable_lvalue_3) = infinity
maximal(variable_lvalue) = infinity
maximal(variable_dimension_2) = infinity
maximal(variable_dimension) = infinity
maximal(variable_decl_or_assignment) = infinity
maximal(variable_decl_assignment) = infinity
maximal(variable_assignment) = infinity
maximal(value_range) = infinity
maximal(unpacked_dimension) = infinity
maximal(unique_priority) = 1
maximal(unary_operator) = 1
maximal(unary_module_path_operator) = 1
maximal(udp_port_list_5) = infinity
maximal(udp_port_declaration) = infinity
maximal(udp_output_declaration) = infinity
maximal(udp_instantiation_6) = infinity
maximal(udp_instance_8) = infinity
maximal(udp_instance_3) = infinity
maximal(udp_declaration_port_list_5) = infinity
maximal(udp_declaration_4) = infinity
maximal(udp_declaration_27) = infinity
maximal(udp_declaration) = infinity
maximal(udp_body) = infinity
maximal(type_declaration_identifier_3) = infinity
maximal(type_declaration) = infinity
maximal(timing_check_event_control) = infinity
maximal(timing_check_condition) = infinity
maximal(timeunits_declaration) = 12
maximal(time_literal) = 4
maximal(tf_output_declaration_4) = infinity
maximal(tf_output_declaration) = infinity
maximal(tf_input_declaration_4) = infinity
maximal(tf_input_declaration) = infinity
maximal(tf_inout_declaration_4) = infinity
maximal(tf_inout_declaration) = infinity
maximal(tf_data_type) = infinity
maximal(task_proto_formal) = infinity
maximal(task_port_list_6) = infinity
maximal(task_port_list_3) = infinity
maximal(task_port_list) = infinity
maximal(task_port_item) = infinity
maximal(task_or_function_identifier) = 3
maximal(task_item_declaration) = infinity
maximal(task_body_declaration_6) = infinity
maximal(task_body_declaration_5) = infinity
maximal(task_body_declaration_17) = infinity
maximal(task_body_declaration_16) = infinity
maximal(task_body_declaration) = infinity
maximal(system_timing_check) = infinity
maximal(system_task_enable_3_5) = infinity
maximal(system_function_call_3_5) = infinity
maximal(struct_member_label) = 3
maximal(string_literal_3) = infinity
maximal(strength1) = 1
maximal(strength0) = 1
maximal(statement_or_null) = infinity
maximal(statement_item) = infinity
maximal(state_dependent_path_declaration) = infinity
maximal(start) = infinity
maximal(specparam_assignment) = infinity
maximal(specify_terminal_descriptor) = infinity
maximal(specify_item) = infinity
maximal(specify_block_3) = infinity
maximal(source_text_3) = infinity
maximal(simple_type) = 3
maximal(simple_path_declaration) = infinity
maximal(simple_hierarchical_branch_4_3_6) = infinity
maximal(simple_hierarchical_branch_4_3) = infinity
maximal(simple_hierarchical_branch_3) = infinity
maximal(signing) = 1
maximal(sign) = 1
maximal(showcancelled_declaration) = infinity
maximal(sequential_body_5) = infinity
maximal(sequence_spec) = infinity
maximal(sequence_formal_list_4) = infinity
maximal(sequence_expr_9) = infinity
maximal(sequence_expr_4) = infinity
maximal(sequence_expr_17) = infinity
maximal(sequence_expr_12) = infinity
maximal(sequence_expr) = infinity
maximal(sequence_declaration_6) = infinity
maximal(seq_input_list) = infinity
maximal(seq_block_5) = infinity
maximal(seq_block_4) = infinity
maximal(scalar_timing_check_condition) = infinity
maximal(scalar_constant) = 1
maximal(real_number) = 6
maximal(range_or_type_2) = infinity
maximal(range_or_type) = infinity
maximal(range_list_or_array_6) = infinity
maximal(range_list_or_array) = infinity
maximal(range_expression) = infinity
maximal(pulsestyle_declaration) = infinity
maximal(pulse_control_specparam) = infinity
maximal(pullup_strength) = 5
maximal(pulldown_strength) = 5
maximal(property_spec) = infinity
maximal(property_qualifier) = 1
maximal(property_formal_list_4) = infinity
maximal(property_expr) = infinity
maximal(property_declaration_6) = infinity
maximal(program_item) = infinity
maximal(program_instantiation_5) = infinity
maximal(program_instance_3) = infinity
maximal(program_declaration_4) = infinity
maximal(program_declaration_22) = infinity
maximal(program_declaration_10) = infinity
maximal(program_declaration) = infinity
maximal(procedural_timing_control) = infinity
maximal(procedural_continuous_assignments) = infinity
maximal(procedural_assertion_item) = infinity
maximal(primary_8_6_5) = infinity
maximal(primary_6) = infinity
maximal(primary_22) = infinity
maximal(primary) = infinity
maximal(port_type_6) = infinity
maximal(port_type_13) = infinity
maximal(port_type_10) = infinity
maximal(port_type) = infinity
maximal(port_expression_6) = infinity
maximal(port_expression) = infinity
maximal(port_declaration) = infinity
maximal(port) = infinity
maximal(polarity_operator) = 1
maximal(path_delay_value) = infinity
maximal(path_declaration) = infinity
maximal(pass_switchtype) = 1
maximal(pass_en_switchtype) = 1
maximal(parameter_port_list_5) = infinity
maximal(parameter_declaration_4) = infinity
maximal(parameter_declaration) = infinity
maximal(par_block_5) = infinity
maximal(par_block_4) = infinity
maximal(packed_dimension) = infinity
maximal(output_identifier) = 3
maximal(output_declaration) = infinity
maximal(ordered_parameter_assignment) = infinity
maximal(octal_value_3) = infinity
maximal(octal_digit) = 1
maximal(number) = infinity
maximal(non_zero_unsigned_number_3) = infinity
maximal(non_zero_decimal_digit) = 1
maximal(non_port_program_item) = infinity
maximal(non_port_module_item) = infinity
maximal(non_port_interface_item) = infinity
maximal(non_integer_type) = 1
maximal(non_generic_port_declaration) = infinity
maximal(next_state) = 1
maximal(net_type) = 1
maximal(net_lvalue_8) = infinity
maximal(net_lvalue_3) = infinity
maximal(net_lvalue) = infinity
maximal(net_declaration_62) = infinity
maximal(net_declaration_52) = infinity
maximal(net_declaration_28) = infinity
maximal(net_declaration_18) = infinity
maximal(net_declaration) = infinity
maximal(named_task_proto_5) = infinity
maximal(named_parameter_assignment) = infinity
maximal(name_of_instance_3) = infinity
maximal(name_of_gate_instance_3) = infinity
maximal(n_output_gatetype) = 1
maximal(n_output_gate_instance_5) = infinity
maximal(n_input_gatetype) = 1
maximal(n_input_gate_instance_7) = infinity
maximal(multi_clock_sequence_3) = infinity
maximal(multi_clock_property_expr) = infinity
maximal(mos_switchtype) = 1
maximal(module_root_item) = infinity
maximal(module_path_primary) = infinity
maximal(module_path_mintypmax_expression) = infinity
maximal(module_path_expression) = infinity
maximal(module_path_concatenation_4) = infinity
maximal(module_or_generate_item_declaration) = infinity
maximal(module_or_generate_item) = infinity
maximal(module_keyword) = 1
maximal(module_item) = infinity
maximal(module_instantiation_5) = infinity
maximal(module_declaration_4) = infinity
maximal(module_declaration_23) = infinity
maximal(module_declaration_10) = infinity
maximal(module_declaration) = infinity
maximal(module_common_item) = infinity
maximal(modport_tf_port_8) = infinity
maximal(modport_tf_port_4) = infinity
maximal(modport_tf_port_11) = infinity
maximal(modport_tf_port) = infinity
maximal(modport_simple_ports_declaration) = infinity
maximal(modport_ports_declaration) = infinity
maximal(modport_item_5) = infinity
maximal(modport_declaration_4) = infinity
maximal(mintypmax_expression) = infinity
maximal(method_qualifier) = 1
maximal(method_prototype) = infinity
maximal(loop_statement_35) = infinity
maximal(loop_statement_30) = infinity
maximal(loop_statement) = infinity
maximal(local_parameter_declaration_4) = infinity
maximal(local_parameter_declaration) = infinity
maximal(list_of_variable_port_identifiers_5) = infinity
maximal(list_of_variable_identifiers_or_assignments) = infinity
maximal(list_of_variable_identifiers_4) = infinity
maximal(list_of_variable_decl_assignments_3) = infinity
maximal(list_of_variable_assignments_3) = infinity
maximal(list_of_udp_port_identifiers_3) = infinity
maximal(list_of_type_assignments_3) = infinity
maximal(list_of_tf_variable_identifiers_5) = infinity
maximal(list_of_tf_port_identifiers_5_6) = infinity
maximal(list_of_tf_port_identifiers_5) = infinity
maximal(list_of_tf_port_identifiers_3) = infinity
maximal(list_of_specparam_assignments_3) = infinity
maximal(list_of_ports_4) = infinity
maximal(list_of_port_identifiers_4_6) = infinity
maximal(list_of_port_identifiers_4) = infinity
maximal(list_of_port_identifiers_3) = infinity
maximal(list_of_port_declarations_4) = infinity
maximal(list_of_port_declarations) = infinity
maximal(list_of_port_connections_8) = infinity
maximal(list_of_port_connections_6) = infinity
maximal(list_of_port_connections_3) = infinity
maximal(list_of_port_connections_10) = infinity
maximal(list_of_port_connections) = infinity
maximal(list_of_path_outputs_3) = infinity
maximal(list_of_path_inputs_3) = infinity
maximal(list_of_path_delay_expressions) = infinity
maximal(list_of_parameter_assignments_6) = infinity
maximal(list_of_parameter_assignments_3) = infinity
maximal(list_of_parameter_assignments) = infinity
maximal(list_of_param_assignments_3) = infinity
maximal(list_of_net_identifiers_4_6) = infinity
maximal(list_of_net_identifiers_4) = infinity
maximal(list_of_net_identifiers_3) = infinity
maximal(list_of_net_decl_assignments_3) = infinity
maximal(list_of_net_assignments_3) = infinity
maximal(list_of_modport_port_identifiers_3) = infinity
maximal(list_of_interface_identifiers_4_6) = infinity
maximal(list_of_interface_identifiers_4) = infinity
maximal(list_of_interface_identifiers_3) = infinity
maximal(list_of_genvar_identifiers_3) = infinity
maximal(list_of_function_proto_formals_2_5) = infinity
maximal(list_of_dpi_proto_formals_2_5) = infinity
maximal(list_of_defparam_assignments_3) = infinity
maximal(list_of_constant_arguments_3) = infinity
maximal(list_of_constant_arguments_10) = infinity
maximal(list_of_constant_arguments) = infinity
maximal(list_of_clocking_decl_assign_3) = infinity
maximal(list_of_arguments_3) = infinity
maximal(list_of_arguments_10) = infinity
maximal(list_of_arguments) = infinity
maximal(lifetime) = 1
maximal(level_input_list_3) = infinity
maximal(jump_statement) = infinity
maximal(join_keyword) = 1
maximal(interface_port_declaration) = infinity
maximal(interface_or_generate_item) = infinity
maximal(interface_item) = infinity
maximal(interface_instantiation_5) = infinity
maximal(interface_declaration_4) = infinity
maximal(interface_declaration_22) = infinity
maximal(interface_declaration_10) = infinity
maximal(interface_declaration) = infinity
maximal(integer_vector_type) = 1
maximal(integer_type) = 1
maximal(integer_atom_type) = 1
maximal(input_identifier) = 3
maximal(input_declaration) = infinity
maximal(inout_declaration) = infinity
maximal(init_val) = 1
maximal(inc_or_dec_operator) = 1
maximal(inc_or_dec_expression) = infinity
maximal(import_export) = 1
maximal(implicit_class_handle) = 2
maximal(if_else_if_statement_8) = infinity
maximal(identifier_list_3) = infinity
maximal(identifier) = 3
maximal(hierarchical_identifier) = infinity
maximal(hex_value_3) = infinity
maximal(genvar_module_case_item_3) = infinity
maximal(genvar_module_case_item) = infinity
maximal(genvar_interface_case_item_3) = infinity
maximal(genvar_interface_case_item) = infinity
maximal(genvar_assignment) = infinity
maximal(generic_interface_port_declaration) = infinity
maximal(generated_module_instantiation_3) = infinity
maximal(generated_interface_instantiation_3) = infinity
maximal(generate_module_named_block_5) = infinity
maximal(generate_module_named_block) = infinity
maximal(generate_module_item) = infinity
maximal(generate_module_case_statement_7) = infinity
maximal(generate_module_block_4) = infinity
maximal(generate_interface_named_block_5) = infinity
maximal(generate_interface_named_block) = infinity
maximal(generate_interface_item) = infinity
maximal(generate_interface_case_statement_7) = infinity
maximal(generate_interface_block_4) = infinity
maximal(gate_instantiation_55) = infinity
maximal(gate_instantiation_5) = infinity
maximal(gate_instantiation_49) = infinity
maximal(gate_instantiation_43) = infinity
maximal(gate_instantiation_38) = infinity
maximal(gate_instantiation_32) = infinity
maximal(gate_instantiation_25) = infinity
maximal(gate_instantiation_18) = infinity
maximal(gate_instantiation_12) = infinity
maximal(gate_instantiation) = infinity
maximal(function_statement_or_null) = infinity
maximal(function_statement_item) = infinity
maximal(function_seq_block_4) = infinity
maximal(function_seq_block_3_5) = infinity
maximal(function_proto_formal) = infinity
maximal(function_port_list_3) = infinity
maximal(function_port_item) = infinity
maximal(function_loop_statement_25) = infinity
maximal(function_loop_statement_20) = infinity
maximal(function_loop_statement) = infinity
maximal(function_item_declaration) = infinity
maximal(function_if_else_if_statement_8) = infinity
maximal(function_data_type_9) = infinity
maximal(function_data_type_32) = infinity
maximal(function_data_type_3) = infinity
maximal(function_data_type_28_4) = infinity
maximal(function_data_type_25) = infinity
maximal(function_data_type_23) = infinity
maximal(function_data_type_18) = infinity
maximal(function_data_type_16) = infinity
maximal(function_data_type) = infinity
maximal(function_conditional_statement) = infinity
maximal(function_case_statement_8) = infinity
maximal(function_case_statement_26) = infinity
maximal(function_case_statement_17) = infinity
maximal(function_case_statement) = infinity
maximal(function_case_item_3) = infinity
maximal(function_case_item) = infinity
maximal(function_body_declaration_8) = infinity
maximal(function_body_declaration_7) = infinity
maximal(function_body_declaration_21) = infinity
maximal(function_body_declaration_20) = infinity
maximal(function_body_declaration) = infinity
maximal(extern_tf_declaration) = infinity
maximal(extern_method_declaration) = infinity
maximal(extern_constraint_declaration_8) = infinity
maximal(expression) = infinity
maximal(event_trigger) = infinity
maximal(event_expression) = infinity
maximal(event_control) = infinity
maximal(escaped_hierarchical_identifier_3) = infinity
maximal(escaped_hierarchical_branch_4_3_6) = infinity
maximal(escaped_hierarchical_branch_4_3) = infinity
maximal(escaped_hierarchical_branch_3) = infinity
maximal(enable_gatetype) = 1
maximal(edge_sensitive_path_declaration) = infinity
maximal(edge_input_list_4) = infinity
maximal(edge_input_list_2) = infinity
maximal(edge_indicator) = 4
maximal(edge_identifier) = 1
maximal(edge_descriptor) = 2
maximal(edge_control_specifier_5) = infinity
maximal(drive_strength) = 5
maximal(dpi_proto_formal_3_5) = infinity
maximal(dpi_import_property) = 1
maximal(dpi_import_export) = infinity
maximal(dpi_function_proto) = infinity
maximal(dpi_dimension_4) = infinity
maximal(dpi_dimension) = infinity
maximal(dot_named_port_connection) = infinity
maximal(dist_list_3) = infinity
maximal(dist_item) = infinity
maximal(disable_statement) = infinity
maximal(description) = infinity
maximal(delayed_reference) = infinity
maximal(delayed_data) = infinity
maximal(delay_value) = 6
maximal(delay_or_event_control) = infinity
maximal(delay_control) = infinity
maximal(delay3) = infinity
maximal(delay2) = infinity
maximal(default_skew) = infinity
maximal(decimal_number_16) = infinity
maximal(decimal_number_11) = infinity
maximal(decimal_number) = infinity
maximal(decimal_digit) = 1
maximal(data_type_48) = infinity
maximal(data_type_44_5) = infinity
maximal(data_type_40) = infinity
maximal(data_type_4) = infinity
maximal(data_type_34) = infinity
maximal(data_type_29) = infinity
maximal(data_type_27) = infinity
maximal(data_type_21) = infinity
maximal(data_type_19) = infinity
maximal(data_type_11) = infinity
maximal(data_type) = infinity
maximal(data_declaration) = infinity
maximal(cycle_delay_range) = infinity
maximal(cycle_delay_const_range_expression) = infinity
maximal(cover_property_statement) = infinity
maximal(continuous_assign) = infinity
maximal(constraint_set_5) = infinity
maximal(constraint_set) = infinity
maximal(constraint_expression) = infinity
maximal(constraint_declaration_6) = infinity
maximal(constraint_block) = infinity
maximal(constant_range_expression) = infinity
maximal(constant_primary) = infinity
maximal(constant_mintypmax_expression) = infinity
maximal(constant_expression) = infinity
maximal(constant_concatenation_4) = infinity
maximal(constant_concatenation_18) = infinity
maximal(constant_concatenation_11) = infinity
maximal(constant_concatenation) = infinity
maximal(const_or_range_expression) = infinity
maximal(conditional_statement) = infinity
maximal(concurrent_assertion_item_declaration) = infinity
maximal(concurrent_assertion_item) = infinity
maximal(concatenation_4) = infinity
maximal(concatenation_18) = infinity
maximal(concatenation_11) = infinity
maximal(concatenation) = infinity
maximal(combinational_body_4) = infinity
maximal(cmos_switchtype) = 1
maximal(clockvar_expression) = infinity
maximal(clocking_skew) = infinity
maximal(clocking_item) = infinity
maximal(clocking_event) = infinity
maximal(clocking_drive) = infinity
maximal(clocking_direction) = infinity
maximal(clocking_decl_7) = infinity
maximal(class_scope_type_identifier_9) = infinity
maximal(class_scope_type_identifier_4) = infinity
maximal(class_scope_type_identifier) = infinity
maximal(class_property_6) = infinity
maximal(class_property_2) = infinity
maximal(class_property) = infinity
maximal(class_method_9) = infinity
maximal(class_method_5) = infinity
maximal(class_method_2) = infinity
maximal(class_method) = infinity
maximal(class_item_qualifier) = 1
maximal(class_item) = infinity
maximal(class_declaration_11) = infinity
maximal(class_constraint) = infinity
maximal(charge_strength) = 3
maximal(casting_type) = infinity
maximal(case_statement_8) = infinity
maximal(case_statement_26) = infinity
maximal(case_statement_17) = infinity
maximal(case_statement) = infinity
maximal(case_item_3) = infinity
maximal(case_item) = infinity
maximal(boolean_abbrev) = infinity
maximal(blocking_assignment) = infinity
maximal(block_variable_declaration) = infinity
maximal(block_item_declaration) = infinity
maximal(block_data_declaration) = infinity
maximal(bind_instantiation) = infinity
maximal(bind_directive) = infinity
maximal(binary_value_3) = infinity
maximal(binary_operator) = 1
maximal(binary_module_path_operator) = 1
maximal(binary_digit) = 1
maximal(associative_dimension) = infinity
maximal(assignment_operator) = 1
maximal(assert_property_statement) = infinity
maximal(array_member_label) = infinity
maximal(actual_arg_list_4) = infinity
maximal(actual_arg_list_13) = infinity
maximal(actual_arg_list) = infinity
maximal(action_block) = infinity
follow(zero_or_one) = Z_OR_X RBRACK COMMA
follow(white_space) = XOR XNOR WOR WITHIN WIRE WHILE WAND WAIT_ORDER WAIT VOID VIRTUAL VBAR_DASH_GT VBAR UNSIGNED_NUMBER UNSIGNED UNIQUE UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TOKEN_VBAR_VBAR TOKEN_VBAR_EQUALS TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_PLING_QUERY_EQUALS TOKEN_PLING_EQUALS_GT TOKEN_ONE TOKEN_NINE TOKEN_LBRACK_STAR_EQUALS TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIMES TIME TILDE_VBAR TILDE THROUGHOUT THIS TASK SYSTEM_TASK_IDENTIFIER SYSTEM_FUNCTION_IDENTIFIER SVINT SUPPLY1 SUPPLY0 SUPER STRUCT STRING STATIC SQUOTE SPECPARAM SPECIFY SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RPAREN RNMOS RETURN REPEAT RELEASE REG REF REALTIME REAL RCURLY RCMOS RBRACK RANDC RAND QUERY P_XOREQ P_XNOR P_TIMESEQ P_SSRIGHT3EQ P_SSRIGHT3 P_SRIGHTEQ P_SRIGHT P_SLEFTEQ P_SLEFT3EQ P_SLEFT3 P_SLEFT P_POW P_POUNDPOUND P_PLUSEQ P_PLUSCOLON P_NXOR P_NOTEQUAL P_NAND P_MODEQ P_MINUSGT P_MINUSEQ P_MINUSCOLON P_LTE P_GTE P_EQUAL P_EQGT P_DIVEQ P_COLONEQ P_COLONDIV P_COLONCOLON P_CASENOTEQUAL P_CASEEQUAL P_ASTGT P_ANDEQ P_ANDANDAND P_ANDAND PULLUP PULLDOWN PROTECTED PROPERTY PROGRAM PRIORITY PRIMITIVE PMOS PLUS PLING PARAMETER OUTPUT OR OCTAL_BASE NULL NOTIF1 NOTIF0 NOT NOR NMOS NAND NAME_OF_UDP_INSTANCE MODULO MODULE MODPORT MINUS MACROMODULE LPAREN LONGINT LOGIC LOCALPARAM LOCAL LESS LCURLY LBRACK_STAR_DASH_GT LBRACK_STAR LBRACK JOIN_NONE JOIN_ANY JOIN INTERSECT INTERFACE INTEGER INSIDE INPUT INOUT INITIAL IMPORT IFF IF HEX_BASE HASH GREATER GENVAR GENERATE FUNCTION FORK FOREVER FORCE FOR FIRST_MATCH FINAL EXTERN EXTENDS EXPORT EVENT EQUALS_QUERY_EQUALS EQUALS ENUM ENDTASK ENDPROGRAM ENDMODULE ENDINTERFACE ENDGENERATE ENDFUNCTION ENDCLOCKING ENDCLASS ENDCASE END ELSE DOUBLE_QUOTES DOT DOLLAR DO DIVIDE DIST DISABLE DEFPARAM DEFAULT DECIMAL_BASE DEASSIGN DASH_GT_GT COVER CONTINUE CONSTRAINT CONST COMMA COLON CMOS CLOCKING CLASS CHANDLE CASEZ CASEX CASE CARET BYTE BUFIF1 BUFIF0 BUF BREAK BIT BIND BINARY_BASE BEGIN BEFORE BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT AND AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS #
follow(wait_statement) = XOR XNOR WOR WIRE WHILE WAND WAIT_ORDER WAIT VOID VIRTUAL VBAR UNSIGNED_NUMBER UNSIGNED UNIQUE UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS TASK SYSTEM_TASK_IDENTIFIER SYSTEM_FUNCTION_IDENTIFIER SVINT SUPPLY1 SUPPLY0 SUPER STRUCT STRING STATIC SPECPARAM SPECIFY SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RNMOS RETURN REPEAT RELEASE REG REF REALTIME REAL RCMOS P_XNOR P_POUNDPOUND P_NXOR P_NAND P_MINUSGT PULLUP PULLDOWN PROPERTY PROGRAM PRIORITY PRIMITIVE PMOS PLUS PLING PARAMETER OUTPUT OR OCTAL_BASE NULL NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULE MODPORT MINUS MACROMODULE LPAREN LONGINT LOGIC LOCALPARAM LCURLY JOIN_NONE JOIN_ANY JOIN INTERFACE INTEGER INPUT INOUT INITIAL IMPORT IF HEX_BASE HASH GENVAR GENERATE FUNCTION FORK FOREVER FORCE FOR FINAL EXTERN EXPORT EVENT ENUM ENDTASK ENDPROGRAM ENDMODULE ENDINTERFACE ENDGENERATE ENDCASE END ELSE DOUBLE_QUOTES DO DISABLE DEFPARAM DEFAULT DECIMAL_BASE DEASSIGN DASH_GT_GT COVER CONTINUE CONSTRAINT CONST CMOS CLOCKING CLASS CHANDLE CASEZ CASEX CASE CARET BYTE BUFIF1 BUFIF0 BUF BREAK BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT AND AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS #
follow(variable_lvalue_8) = RCURLY COMMA
follow(variable_lvalue_3) = XOR XNOR WOR WITHIN WIRE WHILE WAND WAIT_ORDER WAIT VOID VIRTUAL VBAR_DASH_GT VBAR UNSIGNED_NUMBER UNSIGNED UNIQUE UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TOKEN_VBAR_VBAR TOKEN_VBAR_EQUALS TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_PLING_QUERY_EQUALS TOKEN_PLING_EQUALS_GT TOKEN_ONE TOKEN_NINE TOKEN_LBRACK_STAR_EQUALS TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIMES TIME TILDE_VBAR TILDE THROUGHOUT THIS TASK SYSTEM_TASK_IDENTIFIER SYSTEM_FUNCTION_IDENTIFIER SVINT SUPPLY1 SUPPLY0 SUPER STRUCT STRING STATIC SPECPARAM SPECIFY SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RPAREN RNMOS RETURN REPEAT RELEASE REG REF REALTIME REAL RCURLY RCMOS RBRACK QUERY P_XOREQ P_XNOR P_TIMESEQ P_SSRIGHT3EQ P_SSRIGHT3 P_SRIGHTEQ P_SRIGHT P_SLEFTEQ P_SLEFT3EQ P_SLEFT3 P_SLEFT P_POW P_POUNDPOUND P_PLUSEQ P_PLUSCOLON P_NXOR P_NOTEQUAL P_NAND P_MODEQ P_MINUSGT P_MINUSEQ P_MINUSCOLON P_LTE P_GTE P_EQUAL P_EQGT P_DIVEQ P_COLONEQ P_COLONDIV P_CASENOTEQUAL P_CASEEQUAL P_ANDEQ P_ANDAND PULLUP PULLDOWN PROPERTY PROGRAM PRIORITY PRIMITIVE PMOS PLUS PLING PARAMETER OUTPUT OR OCTAL_BASE NULL NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULO MODULE MODPORT MINUS MACROMODULE LPAREN LONGINT LOGIC LOCALPARAM LESS LCURLY LBRACK_STAR_DASH_GT LBRACK_STAR LBRACK JOIN_NONE JOIN_ANY JOIN INTERSECT INTERFACE INTEGER INSIDE INPUT INOUT INITIAL IMPORT IFF IF HEX_BASE HASH GREATER GENVAR GENERATE FUNCTION FORK FOREVER FORCE FOR FINAL EXTERN EXPORT EVENT EQUALS_QUERY_EQUALS EQUALS ENUM ENDTASK ENDPROGRAM ENDMODULE ENDINTERFACE ENDGENERATE ENDCASE END ELSE DOUBLE_QUOTES DO DIVIDE DIST DISABLE DEFPARAM DEFAULT DECIMAL_BASE DEASSIGN DASH_GT_GT COVER CONTINUE CONSTRAINT CONST COMMA COLON CMOS CLOCKING CLASS CHANDLE CASEZ CASEX CASE CARET BYTE BUFIF1 BUFIF0 BUF BREAK BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT AND AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS #
follow(variable_lvalue) = XOR XNOR WOR WITHIN WIRE WHILE WAND WAIT_ORDER WAIT VOID VIRTUAL VBAR_DASH_GT VBAR UNSIGNED_NUMBER UNSIGNED UNIQUE UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TOKEN_VBAR_VBAR TOKEN_VBAR_EQUALS TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_PLING_QUERY_EQUALS TOKEN_PLING_EQUALS_GT TOKEN_ONE TOKEN_NINE TOKEN_LBRACK_STAR_EQUALS TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIMES TIME TILDE_VBAR TILDE THROUGHOUT THIS TASK SYSTEM_TASK_IDENTIFIER SYSTEM_FUNCTION_IDENTIFIER SVINT SUPPLY1 SUPPLY0 SUPER STRUCT STRING STATIC SPECPARAM SPECIFY SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RPAREN RNMOS RETURN REPEAT RELEASE REG REF REALTIME REAL RCURLY RCMOS RBRACK QUERY P_XOREQ P_XNOR P_TIMESEQ P_SSRIGHT3EQ P_SSRIGHT3 P_SRIGHTEQ P_SRIGHT P_SLEFTEQ P_SLEFT3EQ P_SLEFT3 P_SLEFT P_POW P_POUNDPOUND P_PLUSEQ P_PLUSCOLON P_NXOR P_NOTEQUAL P_NAND P_MODEQ P_MINUSGT P_MINUSEQ P_MINUSCOLON P_LTE P_GTE P_EQUAL P_EQGT P_DIVEQ P_COLONEQ P_COLONDIV P_CASENOTEQUAL P_CASEEQUAL P_ANDEQ P_ANDAND PULLUP PULLDOWN PROPERTY PROGRAM PRIORITY PRIMITIVE PMOS PLUS PLING PARAMETER OUTPUT OR OCTAL_BASE NULL NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULO MODULE MODPORT MINUS MACROMODULE LPAREN LONGINT LOGIC LOCALPARAM LESS LCURLY LBRACK_STAR_DASH_GT LBRACK_STAR JOIN_NONE JOIN_ANY JOIN INTERSECT INTERFACE INTEGER INSIDE INPUT INOUT INITIAL IMPORT IFF IF HEX_BASE HASH GREATER GENVAR GENERATE FUNCTION FORK FOREVER FORCE FOR FINAL EXTERN EXPORT EVENT EQUALS_QUERY_EQUALS EQUALS ENUM ENDTASK ENDPROGRAM ENDMODULE ENDINTERFACE ENDGENERATE ENDCASE END ELSE DOUBLE_QUOTES DO DIVIDE DIST DISABLE DEFPARAM DEFAULT DECIMAL_BASE DEASSIGN DASH_GT_GT COVER CONTINUE CONSTRAINT CONST COMMA COLON CMOS CLOCKING CLASS CHANDLE CASEZ CASEX CASE CARET BYTE BUFIF1 BUFIF0 BUF BREAK BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT AND AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS #
follow(variable_dimension_2) = SEMICOLON RPAREN LBRACK EQUALS COMMA
follow(variable_dimension) = SEMICOLON RPAREN EQUALS COMMA
follow(variable_decl_or_assignment) = SEMICOLON COMMA
follow(variable_decl_assignment) = SEMICOLON COMMA
follow(variable_assignment) = SEMICOLON RPAREN COMMA
follow(value_range) = RCURLY P_COLONEQ P_COLONDIV COMMA
follow(unpacked_dimension) = SIMPLE_IDENTIFIER SEMICOLON RPAREN RBRACK LBRACK EQUALS COMMA BACKSLASH
follow(unique_priority) = IF CASEZ CASEX CASE
follow(unary_operator) = VOID UNSIGNED_NUMBER UNSIGNED TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TIME THIS SYSTEM_FUNCTION_IDENTIFIER SVINT SUPER SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REALTIME REAL OCTAL_BASE NULL LPAREN LONGINT LOGIC LCURLY INTEGER HEX_BASE DECIMAL_BASE BYTE BIT BINARY_BASE BACKSLASH
follow(unary_module_path_operator) = UNSIGNED_NUMBER TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT SYSTEM_FUNCTION_IDENTIFIER SIMPLE_IDENTIFIER OCTAL_BASE LPAREN LCURLY HEX_BASE DECIMAL_BASE BINARY_BASE BACKSLASH
follow(udp_port_list_5) = RPAREN COMMA
follow(udp_port_declaration) = TABLE REG OUTPUT INPUT INITIAL
follow(udp_output_declaration) = SEMICOLON COMMA
follow(udp_instantiation_6) = SEMICOLON COMMA
follow(udp_instance_8) = RPAREN COMMA
follow(udp_instance_3) = LPAREN LBRACK
follow(udp_declaration_port_list_5) = RPAREN COMMA
follow(udp_declaration_4) = TABLE REG OUTPUT INPUT INITIAL
follow(udp_declaration_27) = TABLE REG OUTPUT INPUT INITIAL
follow(udp_declaration) = WOR WIRE WHILE WAND WAIT_ORDER WAIT VIRTUAL UNIQUE UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TOKEN_PLUS_PLUS TOKEN_DASH_DASH TIME TASK SYSTEM_TASK_IDENTIFIER SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SIMPLE_IDENTIFIER SHORTREAL SHORTINT SEQUENCE SEMICOLON RETURN REPEAT RELEASE REG REALTIME REAL P_POUNDPOUND P_MINUSGT PROPERTY PROGRAM PRIORITY PRIMITIVE MODULE MACROMODULE LONGINT LOGIC LOCALPARAM LCURLY INTERFACE INTEGER IMPORT IF HASH GENVAR FUNCTION FORK FOREVER FORCE FOR EXTERN EXPORT EVENT ENUM DO DISABLE DEFAULT DEASSIGN DASH_GT_GT COVER CONTINUE CONSTRAINT CONST CLOCKING CLASS CHANDLE CASEZ CASEX CASE BYTE BREAK BIT BIND BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT #
follow(udp_body) = ENDPRIMITIVE
follow(type_declaration_identifier_3) = SIMPLE_IDENTIFIER SEMICOLON RPAREN RBRACK LBRACK COMMA BACKSLASH
follow(type_declaration) = XOR XNOR WOR WIRE WHILE WAND WAIT_ORDER WAIT VIRTUAL VBAR UNSIGNED_NUMBER UNSIGNED UNIQUE UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE TASK SYSTEM_TASK_IDENTIFIER SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SPECPARAM SPECIFY SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RNMOS RETURN REPEAT RELEASE REG REF REALTIME REAL RCMOS RANDC RAND P_XNOR P_POUNDPOUND P_NXOR P_NAND P_MINUSGT PULLUP PULLDOWN PROTECTED PROPERTY PROGRAM PRIORITY PRIMITIVE PMOS PLUS PLING PARAMETER OUTPUT OR OCTAL_BASE NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULE MODPORT MINUS MACROMODULE LPAREN LONGINT LOGIC LOCALPARAM LOCAL LCURLY JOIN_NONE JOIN_ANY JOIN INTERFACE INTEGER INPUT INOUT INITIAL IMPORT IF HEX_BASE HASH GENVAR GENERATE FUNCTION FORK FOREVER FORCE FOR FINAL EXTERN EXPORT EVENT ENUM ENDTASK ENDPROGRAM ENDMODULE ENDINTERFACE ENDGENERATE ENDFUNCTION ENDCLASS ENDCASE END ELSE DOUBLE_QUOTES DO DISABLE DEFPARAM DEFAULT DECIMAL_BASE DEASSIGN DASH_GT_GT COVER CONTINUE CONSTRAINT CONST CMOS CLOCKING CLASS CHANDLE CASEZ CASEX CASE CARET BYTE BUFIF1 BUFIF0 BUF BREAK BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT AND AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS #
follow(timing_check_event_control) = SIMPLE_IDENTIFIER BACKSLASH
follow(timing_check_condition) = COMMA
follow(timeunits_declaration) = XOR XNOR WOR WIRE WHILE WAND WAIT_ORDER WAIT VIRTUAL UNIQUE UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TOKEN_PLUS_PLUS TOKEN_DASH_DASH TIME TASK SYSTEM_TASK_IDENTIFIER SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SPECPARAM SPECIFY SIMPLE_IDENTIFIER SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RNMOS RETURN REPEAT RELEASE REG REF REALTIME REAL RCMOS RANDC RAND P_POUNDPOUND P_MINUSGT PULLUP PULLDOWN PROTECTED PROPERTY PROGRAM PRIORITY PRIMITIVE PMOS PARAMETER OUTPUT OR NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULE MODPORT MACROMODULE LONGINT LOGIC LOCALPARAM LOCAL LCURLY INTERFACE INTEGER INPUT INOUT INITIAL IMPORT IF HASH GENVAR GENERATE FUNCTION FORK FOREVER FORCE FOR FINAL EXTERN EXPORT EVENT ENUM ENDPROGRAM ENDMODULE ENDINTERFACE ENDCLASS DO DISABLE DEFPARAM DEFAULT DEASSIGN DASH_GT_GT COVER CONTINUE CONSTRAINT CONST CMOS CLOCKING CLASS CHANDLE CASEZ CASEX CASE BYTE BUFIF1 BUFIF0 BUF BREAK BIT BIND BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT AND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS #
follow(time_literal) = XOR XNOR WOR WITHIN WIRE WHILE WAND WAIT_ORDER WAIT VOID VIRTUAL VBAR_DASH_GT VBAR UNSIGNED_NUMBER UNSIGNED UNIQUE UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TOKEN_VBAR_VBAR TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_PLING_QUERY_EQUALS TOKEN_PLING_EQUALS_GT TOKEN_ONE TOKEN_NINE TOKEN_LBRACK_STAR_EQUALS TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIMES TIME TILDE_VBAR TILDE THROUGHOUT THIS TASK SYSTEM_TASK_IDENTIFIER SYSTEM_FUNCTION_IDENTIFIER SVINT SUPPLY1 SUPPLY0 SUPER STRUCT STRING STATIC SPECPARAM SPECIFY SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RPAREN RNMOS RETURN REPEAT RELEASE REG REF REALTIME REAL RCURLY RCMOS RBRACK QUERY P_XNOR P_SSRIGHT3 P_SRIGHT P_SLEFT3 P_SLEFT P_POW P_POUNDPOUND P_PLUSCOLON P_NXOR P_NOTEQUAL P_NAND P_MINUSGT P_MINUSCOLON P_LTE P_GTE P_EQUAL P_EQGT P_COLONEQ P_COLONDIV P_CASENOTEQUAL P_CASEEQUAL P_ANDAND PULLUP PULLDOWN PROPERTY PROGRAM PRIORITY PRIMITIVE PMOS PLUS PLING PARAMETER OUTPUT OR OCTAL_BASE NULL NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULO MODULE MODPORT MINUS MACROMODULE LPAREN LONGINT LOGIC LOCALPARAM LESS LCURLY LBRACK_STAR_DASH_GT LBRACK_STAR JOIN_NONE JOIN_ANY JOIN INTERSECT INTERFACE INTEGER INSIDE INPUT INOUT INITIAL IMPORT IFF IF HEX_BASE HASH GREATER GENVAR GENERATE FUNCTION FORK FOREVER FORCE FOR FIRST_MATCH FINAL EXTERN EXPORT EVENT EQUALS_QUERY_EQUALS ENUM ENDTASK ENDPROGRAM ENDMODULE ENDINTERFACE ENDGENERATE ENDCASE END ELSE DOUBLE_QUOTES DO DIVIDE DIST DISABLE DEFPARAM DEFAULT DECIMAL_BASE DEASSIGN DASH_GT_GT COVER CONTINUE CONSTRAINT CONST COMMA COLON CMOS CLOCKING CLASS CHANDLE CASEZ CASEX CASE CARET BYTE BUFIF1 BUFIF0 BUF BREAK BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT AND AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS #
follow(tf_output_declaration_4) = SIMPLE_IDENTIFIER LBRACK BACKSLASH
follow(tf_output_declaration) = SEMICOLON RPAREN COMMA
follow(tf_input_declaration_4) = SIMPLE_IDENTIFIER LBRACK BACKSLASH
follow(tf_input_declaration) = SEMICOLON RPAREN COMMA
follow(tf_inout_declaration_4) = SIMPLE_IDENTIFIER LBRACK BACKSLASH
follow(tf_inout_declaration) = SEMICOLON RPAREN COMMA
follow(tf_data_type) = SIMPLE_IDENTIFIER BACKSLASH
follow(task_proto_formal) = RPAREN COMMA
follow(task_port_list_6) = RPAREN COMMA
follow(task_port_list_3) = RPAREN COMMA
follow(task_port_list) = RPAREN
follow(task_port_item) = RPAREN COMMA
follow(task_or_function_identifier) = RPAREN COMMA
follow(task_item_declaration) = WHILE WAIT_ORDER WAIT UNIQUE UNION TYPEDEF TOKEN_PLUS_PLUS TOKEN_DASH_DASH TIME SYSTEM_TASK_IDENTIFIER SVINT STRUCT STRING STATIC SIMPLE_IDENTIFIER SHORTREAL SHORTINT SEMICOLON RETURN REPEAT RELEASE REG REF REALTIME REAL P_POUNDPOUND P_MINUSGT PRIORITY PARAMETER OUTPUT LONGINT LOGIC LOCALPARAM LCURLY INTEGER INPUT INOUT IF HASH FORK FOREVER FORCE FOR EVENT ENUM ENDTASK DO DISABLE DEASSIGN DASH_GT_GT COVER CONTINUE CONST CHANDLE CASEZ CASEX CASE BYTE BREAK BIT BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT
follow(task_body_declaration_6) = WHILE WAIT_ORDER WAIT UNIQUE TOKEN_PLUS_PLUS TOKEN_DASH_DASH SYSTEM_TASK_IDENTIFIER SIMPLE_IDENTIFIER SEMICOLON RETURN REPEAT RELEASE P_POUNDPOUND P_MINUSGT PRIORITY LCURLY IF HASH FORK FOREVER FORCE FOR ENDTASK DO DISABLE DEASSIGN DASH_GT_GT COVER CONTINUE CASEZ CASEX CASE BREAK BEGIN BACKSLASH AT_STAR AT ASSIGN ASSERT
follow(task_body_declaration_5) = WHILE WAIT_ORDER WAIT UNIQUE UNION TYPEDEF TOKEN_PLUS_PLUS TOKEN_DASH_DASH TIME SYSTEM_TASK_IDENTIFIER SVINT STRUCT STRING STATIC SIMPLE_IDENTIFIER SHORTREAL SHORTINT SEMICOLON RETURN REPEAT RELEASE REG REF REALTIME REAL P_POUNDPOUND P_MINUSGT PRIORITY PARAMETER OUTPUT LONGINT LOGIC LOCALPARAM LCURLY INTEGER INPUT INOUT IF HASH FORK FOREVER FORCE FOR EVENT ENUM ENDTASK DO DISABLE DEASSIGN DASH_GT_GT COVER CONTINUE CONST CHANDLE CASEZ CASEX CASE BYTE BREAK BIT BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT
follow(task_body_declaration_17) = WHILE WAIT_ORDER WAIT UNIQUE TOKEN_PLUS_PLUS TOKEN_DASH_DASH SYSTEM_TASK_IDENTIFIER SIMPLE_IDENTIFIER SEMICOLON RETURN REPEAT RELEASE P_POUNDPOUND P_MINUSGT PRIORITY LCURLY IF HASH FORK FOREVER FORCE FOR ENDTASK DO DISABLE DEASSIGN DASH_GT_GT COVER CONTINUE CASEZ CASEX CASE BREAK BEGIN BACKSLASH AT_STAR AT ASSIGN ASSERT
follow(task_body_declaration_16) = WHILE WAIT_ORDER WAIT UNIQUE UNION TYPEDEF TOKEN_PLUS_PLUS TOKEN_DASH_DASH TIME SYSTEM_TASK_IDENTIFIER SVINT STRUCT STRING STATIC SIMPLE_IDENTIFIER SHORTREAL SHORTINT SEMICOLON RETURN REPEAT RELEASE REG REALTIME REAL P_POUNDPOUND P_MINUSGT PRIORITY PARAMETER LONGINT LOGIC LOCALPARAM LCURLY INTEGER IF HASH FORK FOREVER FORCE FOR EVENT ENUM ENDTASK DO DISABLE DEASSIGN DASH_GT_GT COVER CONTINUE CONST CHANDLE CASEZ CASEX CASE BYTE BREAK BIT BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT
follow(task_body_declaration) = XOR XNOR WOR WIRE WHILE WAND WAIT_ORDER WAIT VIRTUAL VBAR UNSIGNED_NUMBER UNSIGNED UNIQUE UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE TASK SYSTEM_TASK_IDENTIFIER SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SPECPARAM SPECIFY SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RNMOS RETURN REPEAT RELEASE REG REF REALTIME REAL RCMOS RANDC RAND P_XNOR P_POUNDPOUND P_NXOR P_NAND P_MINUSGT PULLUP PULLDOWN PROTECTED PROPERTY PROGRAM PRIORITY PRIMITIVE PMOS PLUS PLING PARAMETER OUTPUT OR OCTAL_BASE NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULE MODPORT MINUS MACROMODULE LPAREN LONGINT LOGIC LOCALPARAM LOCAL LCURLY INTERFACE INTEGER INPUT INOUT INITIAL IMPORT IF HEX_BASE HASH GENVAR GENERATE FUNCTION FORK FOREVER FORCE FOR FINAL EXTERN EXPORT EVENT ENUM ENDPROGRAM ENDMODULE ENDINTERFACE ENDGENERATE ENDCLASS ENDCASE END ELSE DOUBLE_QUOTES DO DISABLE DEFPARAM DEFAULT DECIMAL_BASE DEASSIGN DASH_GT_GT COVER CONTINUE CONSTRAINT CONST CMOS CLOCKING CLASS CHANDLE CASEZ CASEX CASE CARET BYTE BUFIF1 BUFIF0 BUF BREAK BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT AND AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS #
follow(system_timing_check) = SPECPARAM SHOWCANCELLED PULSESTYLE_ONEVENT PULSESTYLE_ONDETECT NOSHOWCANCELLED NOCHANGE LPAREN IF_NONE IF FULLSKEW ENDSPECIFY D_WIDTH D_TIMESKEW D_SKEW D_SETUPHOLD D_SETUP D_REMOVAL D_RECREM D_RECOVERY D_PERIOD D_HOLD
follow(system_task_enable_3_5) = RPAREN COMMA
follow(system_function_call_3_5) = RPAREN COMMA
follow(struct_member_label) = COLON
follow(string_literal_3) = DOUBLE_QUOTES ANY_ASCII_CHARS
follow(strength1) = RPAREN COMMA
follow(strength0) = RPAREN COMMA
follow(statement_or_null) = XOR XNOR WOR WIRE WHILE WAND WAIT_ORDER WAIT VOID VIRTUAL VBAR UNSIGNED_NUMBER UNSIGNED UNIQUE UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS TASK SYSTEM_TASK_IDENTIFIER SYSTEM_FUNCTION_IDENTIFIER SVINT SUPPLY1 SUPPLY0 SUPER STRUCT STRING STATIC SPECPARAM SPECIFY SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RNMOS RETURN REPEAT RELEASE REG REF REALTIME REAL RCMOS P_XNOR P_POUNDPOUND P_NXOR P_NAND P_MINUSGT PULLUP PULLDOWN PROPERTY PROGRAM PRIORITY PRIMITIVE PMOS PLUS PLING PARAMETER OUTPUT OR OCTAL_BASE NULL NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULE MODPORT MINUS MACROMODULE LPAREN LONGINT LOGIC LOCALPARAM LCURLY JOIN_NONE JOIN_ANY JOIN INTERFACE INTEGER INPUT INOUT INITIAL IMPORT IF HEX_BASE HASH GENVAR GENERATE FUNCTION FORK FOREVER FORCE FOR FINAL EXTERN EXPORT EVENT ENUM ENDTASK ENDPROGRAM ENDMODULE ENDINTERFACE ENDGENERATE ENDCASE END ELSE DOUBLE_QUOTES DO DISABLE DEFPARAM DEFAULT DECIMAL_BASE DEASSIGN DASH_GT_GT COVER CONTINUE CONSTRAINT CONST CMOS CLOCKING CLASS CHANDLE CASEZ CASEX CASE CARET BYTE BUFIF1 BUFIF0 BUF BREAK BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT AND AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS #
follow(statement_item) = XOR XNOR WOR WIRE WHILE WAND WAIT_ORDER WAIT VOID VIRTUAL VBAR UNSIGNED_NUMBER UNSIGNED UNIQUE UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS TASK SYSTEM_TASK_IDENTIFIER SYSTEM_FUNCTION_IDENTIFIER SVINT SUPPLY1 SUPPLY0 SUPER STRUCT STRING STATIC SPECPARAM SPECIFY SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RNMOS RETURN REPEAT RELEASE REG REF REALTIME REAL RCMOS P_XNOR P_POUNDPOUND P_NXOR P_NAND P_MINUSGT PULLUP PULLDOWN PROPERTY PROGRAM PRIORITY PRIMITIVE PMOS PLUS PLING PARAMETER OUTPUT OR OCTAL_BASE NULL NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULE MODPORT MINUS MACROMODULE LPAREN LONGINT LOGIC LOCALPARAM LCURLY JOIN_NONE JOIN_ANY JOIN INTERFACE INTEGER INPUT INOUT INITIAL IMPORT IF HEX_BASE HASH GENVAR GENERATE FUNCTION FORK FOREVER FORCE FOR FINAL EXTERN EXPORT EVENT ENUM ENDTASK ENDPROGRAM ENDMODULE ENDINTERFACE ENDGENERATE ENDCASE END ELSE DOUBLE_QUOTES DO DISABLE DEFPARAM DEFAULT DECIMAL_BASE DEASSIGN DASH_GT_GT COVER CONTINUE CONSTRAINT CONST CMOS CLOCKING CLASS CHANDLE CASEZ CASEX CASE CARET BYTE BUFIF1 BUFIF0 BUF BREAK BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT AND AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS #
follow(state_dependent_path_declaration) = SEMICOLON
follow(start) = #
follow(specparam_assignment) = SEMICOLON COMMA
follow(specify_terminal_descriptor) = P_ANDANDAND COMMA
follow(specify_item) = SPECPARAM SHOWCANCELLED PULSESTYLE_ONEVENT PULSESTYLE_ONDETECT NOSHOWCANCELLED NOCHANGE LPAREN IF_NONE IF FULLSKEW ENDSPECIFY D_WIDTH D_TIMESKEW D_SKEW D_SETUPHOLD D_SETUP D_REMOVAL D_RECREM D_RECOVERY D_PERIOD D_HOLD
follow(specify_block_3) = SPECPARAM SHOWCANCELLED PULSESTYLE_ONEVENT PULSESTYLE_ONDETECT NOSHOWCANCELLED NOCHANGE LPAREN IF_NONE IF FULLSKEW ENDSPECIFY D_WIDTH D_TIMESKEW D_SKEW D_SETUPHOLD D_SETUP D_REMOVAL D_RECREM D_RECOVERY D_PERIOD D_HOLD
follow(source_text_3) = WOR WIRE WHILE WAND WAIT_ORDER WAIT VIRTUAL UNIQUE UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TOKEN_PLUS_PLUS TOKEN_DASH_DASH TIME TASK SYSTEM_TASK_IDENTIFIER SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SIMPLE_IDENTIFIER SHORTREAL SHORTINT SEQUENCE SEMICOLON RETURN REPEAT RELEASE REG REALTIME REAL P_POUNDPOUND P_MINUSGT PROPERTY PROGRAM PRIORITY PRIMITIVE MODULE MACROMODULE LONGINT LOGIC LOCALPARAM LCURLY INTERFACE INTEGER IMPORT IF HASH GENVAR FUNCTION FORK FOREVER FORCE FOR EXTERN EXPORT EVENT ENUM DO DISABLE DEFAULT DEASSIGN DASH_GT_GT COVER CONTINUE CONSTRAINT CONST CLOCKING CLASS CHANDLE CASEZ CASEX CASE BYTE BREAK BIT BIND BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT #
follow(simple_type) = SQUOTE
follow(simple_path_declaration) = SEMICOLON
follow(simple_hierarchical_branch_4_3_6) = XOR XNOR WOR WITHIN WIRE WHILE WAND WAIT_ORDER WAIT VOID VIRTUAL VBAR_DASH_GT VBAR UNSIGNED_NUMBER UNSIGNED UNIQUE UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TOKEN_VBAR_VBAR TOKEN_VBAR_EQUALS TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_PLING_QUERY_EQUALS TOKEN_PLING_EQUALS_GT TOKEN_ONE TOKEN_NINE TOKEN_LBRACK_STAR_EQUALS TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIMES TIME TILDE_VBAR TILDE THROUGHOUT THIS TASK SYSTEM_TASK_IDENTIFIER SYSTEM_FUNCTION_IDENTIFIER SVINT SUPPLY1 SUPPLY0 SUPER STRUCT STRING STATIC SPECPARAM SPECIFY SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RPAREN RNMOS RETURN REPEAT RELEASE REG REF REALTIME REAL RCURLY RCMOS RBRACK QUERY P_XOREQ P_XNOR P_TIMESEQ P_SSRIGHT3EQ P_SSRIGHT3 P_SRIGHTEQ P_SRIGHT P_SLEFTEQ P_SLEFT3EQ P_SLEFT3 P_SLEFT P_POW P_POUNDPOUND P_PLUSEQ P_PLUSCOLON P_NXOR P_NOTEQUAL P_NAND P_MODEQ P_MINUSGT P_MINUSEQ P_MINUSCOLON P_LTE P_GTE P_EQUAL P_EQGT P_DIVEQ P_COLONEQ P_COLONDIV P_CASENOTEQUAL P_CASEEQUAL P_ANDEQ P_ANDAND PULLUP PULLDOWN PROPERTY PROGRAM PRIORITY PRIMITIVE PMOS PLUS PLING PARAMETER OUTPUT OR OCTAL_BASE NULL NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULO MODULE MODPORT MINUS MACROMODULE LPAREN LONGINT LOGIC LOCALPARAM LESS LCURLY LBRACK_STAR_DASH_GT LBRACK_STAR LBRACK JOIN_NONE JOIN_ANY JOIN INTERSECT INTERFACE INTEGER INSIDE INPUT INOUT INITIAL IMPORT IFF IF HEX_BASE HASH GREATER GENVAR GENERATE FUNCTION FORK FOREVER FORCE FOR FINAL EXTERN EXPORT EVENT EQUALS_QUERY_EQUALS EQUALS ENUM ENDTASK ENDPROGRAM ENDMODULE ENDINTERFACE ENDGENERATE ENDCASE END ELSE DOUBLE_QUOTES DOT DO DIVIDE DIST DISABLE DEFPARAM DEFAULT DECIMAL_BASE DEASSIGN DASH_GT_GT COVER CONTINUE CONSTRAINT CONST COMMA COLON CMOS CLOCKING CLASS CHANDLE CASEZ CASEX CASE CARET BYTE BUFIF1 BUFIF0 BUF BREAK BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT AND AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS #
follow(simple_hierarchical_branch_4_3) = XOR XNOR WOR WITHIN WIRE WHILE WAND WAIT_ORDER WAIT VOID VIRTUAL VBAR_DASH_GT VBAR UNSIGNED_NUMBER UNSIGNED UNIQUE UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TOKEN_VBAR_VBAR TOKEN_VBAR_EQUALS TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_PLING_QUERY_EQUALS TOKEN_PLING_EQUALS_GT TOKEN_ONE TOKEN_NINE TOKEN_LBRACK_STAR_EQUALS TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIMES TIME TILDE_VBAR TILDE THROUGHOUT THIS TASK SYSTEM_TASK_IDENTIFIER SYSTEM_FUNCTION_IDENTIFIER SVINT SUPPLY1 SUPPLY0 SUPER STRUCT STRING STATIC SPECPARAM SPECIFY SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RPAREN RNMOS RETURN REPEAT RELEASE REG REF REALTIME REAL RCURLY RCMOS RBRACK QUERY P_XOREQ P_XNOR P_TIMESEQ P_SSRIGHT3EQ P_SSRIGHT3 P_SRIGHTEQ P_SRIGHT P_SLEFTEQ P_SLEFT3EQ P_SLEFT3 P_SLEFT P_POW P_POUNDPOUND P_PLUSEQ P_PLUSCOLON P_NXOR P_NOTEQUAL P_NAND P_MODEQ P_MINUSGT P_MINUSEQ P_MINUSCOLON P_LTE P_GTE P_EQUAL P_EQGT P_DIVEQ P_COLONEQ P_COLONDIV P_CASENOTEQUAL P_CASEEQUAL P_ANDEQ P_ANDAND PULLUP PULLDOWN PROPERTY PROGRAM PRIORITY PRIMITIVE PMOS PLUS PLING PARAMETER OUTPUT OR OCTAL_BASE NULL NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULO MODULE MODPORT MINUS MACROMODULE LPAREN LONGINT LOGIC LOCALPARAM LESS LCURLY LBRACK_STAR_DASH_GT LBRACK_STAR LBRACK JOIN_NONE JOIN_ANY JOIN INTERSECT INTERFACE INTEGER INSIDE INPUT INOUT INITIAL IMPORT IFF IF HEX_BASE HASH GREATER GENVAR GENERATE FUNCTION FORK FOREVER FORCE FOR FINAL EXTERN EXPORT EVENT EQUALS_QUERY_EQUALS EQUALS ENUM ENDTASK ENDPROGRAM ENDMODULE ENDINTERFACE ENDGENERATE ENDCASE END ELSE DOUBLE_QUOTES DOT DO DIVIDE DIST DISABLE DEFPARAM DEFAULT DECIMAL_BASE DEASSIGN DASH_GT_GT COVER CONTINUE CONSTRAINT CONST COMMA COLON CMOS CLOCKING CLASS CHANDLE CASEZ CASEX CASE CARET BYTE BUFIF1 BUFIF0 BUF BREAK BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT AND AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS #
follow(simple_hierarchical_branch_3) = XOR XNOR WOR WITHIN WIRE WHILE WAND WAIT_ORDER WAIT VOID VIRTUAL VBAR_DASH_GT VBAR UNSIGNED_NUMBER UNSIGNED UNIQUE UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TOKEN_VBAR_VBAR TOKEN_VBAR_EQUALS TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_PLING_QUERY_EQUALS TOKEN_PLING_EQUALS_GT TOKEN_ONE TOKEN_NINE TOKEN_LBRACK_STAR_EQUALS TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIMES TIME TILDE_VBAR TILDE THROUGHOUT THIS TASK SYSTEM_TASK_IDENTIFIER SYSTEM_FUNCTION_IDENTIFIER SVINT SUPPLY1 SUPPLY0 SUPER STRUCT STRING STATIC SPECPARAM SPECIFY SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RPAREN RNMOS RETURN REPEAT RELEASE REG REF REALTIME REAL RCURLY RCMOS RBRACK QUERY P_XOREQ P_XNOR P_TIMESEQ P_SSRIGHT3EQ P_SSRIGHT3 P_SRIGHTEQ P_SRIGHT P_SLEFTEQ P_SLEFT3EQ P_SLEFT3 P_SLEFT P_POW P_POUNDPOUND P_PLUSEQ P_PLUSCOLON P_NXOR P_NOTEQUAL P_NAND P_MODEQ P_MINUSGT P_MINUSEQ P_MINUSCOLON P_LTE P_GTE P_EQUAL P_EQGT P_DIVEQ P_COLONEQ P_COLONDIV P_CASENOTEQUAL P_CASEEQUAL P_ANDEQ P_ANDAND PULLUP PULLDOWN PROPERTY PROGRAM PRIORITY PRIMITIVE PMOS PLUS PLING PARAMETER OUTPUT OR OCTAL_BASE NULL NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULO MODULE MODPORT MINUS MACROMODULE LPAREN LONGINT LOGIC LOCALPARAM LESS LCURLY LBRACK_STAR_DASH_GT LBRACK_STAR LBRACK JOIN_NONE JOIN_ANY JOIN INTERSECT INTERFACE INTEGER INSIDE INPUT INOUT INITIAL IMPORT IFF IF HEX_BASE HASH GREATER GENVAR GENERATE FUNCTION FORK FOREVER FORCE FOR FINAL EXTERN EXPORT EVENT EQUALS_QUERY_EQUALS EQUALS ENUM ENDTASK ENDPROGRAM ENDMODULE ENDINTERFACE ENDGENERATE ENDCASE END ELSE DOUBLE_QUOTES DOT DO DIVIDE DIST DISABLE DEFPARAM DEFAULT DECIMAL_BASE DEASSIGN DASH_GT_GT COVER CONTINUE CONSTRAINT CONST COMMA COLON CMOS CLOCKING CLASS CHANDLE CASEZ CASEX CASE CARET BYTE BUFIF1 BUFIF0 BUF BREAK BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT AND AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS #
follow(signing) = VOID UNION TIME SVINT STRUCT STRING SQUOTE SIMPLE_IDENTIFIER SHORTREAL SHORTINT SEMICOLON RPAREN REG REALTIME REAL RBRACK LONGINT LOGIC LCURLY LBRACK INTEGER HASH ENUM COMMA CHANDLE BYTE BIT BACKSLASH
follow(sign) = UNSIGNED_NUMBER
follow(showcancelled_declaration) = SPECPARAM SHOWCANCELLED PULSESTYLE_ONEVENT PULSESTYLE_ONDETECT NOSHOWCANCELLED NOCHANGE LPAREN IF_NONE IF FULLSKEW ENDSPECIFY D_WIDTH D_TIMESKEW D_SKEW D_SETUPHOLD D_SETUP D_REMOVAL D_RECREM D_RECOVERY D_PERIOD D_HOLD
follow(sequential_body_5) = LPAREN LEVEL_SYMBOL ENDTABLE EDGE_SYMBOL
follow(sequence_spec) = SEMICOLON
follow(sequence_formal_list_4) = RPAREN COMMA
follow(sequence_expr_9) = WITHIN VBAR_DASH_GT TOKEN_PLING_EQUALS_GT SEMICOLON RPAREN P_POUNDPOUND OR INTERSECT AND
follow(sequence_expr_4) = WITHIN VBAR_DASH_GT TOKEN_PLING_EQUALS_GT SEMICOLON RPAREN P_POUNDPOUND OR INTERSECT AND
follow(sequence_expr_17) = RPAREN COMMA
follow(sequence_expr_12) = WITHIN VBAR_DASH_GT TOKEN_PLING_EQUALS_GT TOKEN_LBRACK_STAR_EQUALS SEMICOLON RPAREN P_POUNDPOUND OR LBRACK_STAR_DASH_GT LBRACK_STAR INTERSECT COMMA AND
follow(sequence_expr) = WITHIN VBAR_DASH_GT TOKEN_PLING_EQUALS_GT SEMICOLON RPAREN P_POUNDPOUND OR INTERSECT AND
follow(sequence_declaration_6) = VOID VBAR UNSIGNED_NUMBER UNSIGNED UNION TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS SYSTEM_FUNCTION_IDENTIFIER SVINT SUPER STRUCT STRING SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REALTIME REAL P_XNOR P_POUNDPOUND P_NXOR P_NAND PLUS PLING OCTAL_BASE NULL MINUS LPAREN LONGINT LOGIC LCURLY INTEGER HEX_BASE FIRST_MATCH EVENT ENUM DOUBLE_QUOTES DECIMAL_BASE CHANDLE CARET BYTE BIT BINARY_BASE BACKSLASH AT AMPERSAND
follow(seq_input_list) = COLON
follow(seq_block_5) = WHILE WAIT_ORDER WAIT UNIQUE TOKEN_PLUS_PLUS TOKEN_DASH_DASH SYSTEM_TASK_IDENTIFIER SIMPLE_IDENTIFIER SEMICOLON RETURN REPEAT RELEASE P_POUNDPOUND P_MINUSGT PRIORITY LCURLY IF HASH FORK FOREVER FORCE FOR END DO DISABLE DEASSIGN DASH_GT_GT COVER CONTINUE CASEZ CASEX CASE BREAK BEGIN BACKSLASH AT_STAR AT ASSIGN ASSERT
follow(seq_block_4) = WHILE WAIT_ORDER WAIT UNIQUE UNION TYPEDEF TOKEN_PLUS_PLUS TOKEN_DASH_DASH TIME SYSTEM_TASK_IDENTIFIER SVINT STRUCT STRING STATIC SIMPLE_IDENTIFIER SHORTREAL SHORTINT SEMICOLON RETURN REPEAT RELEASE REG REALTIME REAL P_POUNDPOUND P_MINUSGT PRIORITY PARAMETER LONGINT LOGIC LOCALPARAM LCURLY INTEGER IF HASH FORK FOREVER FORCE FOR EVENT ENUM END DO DISABLE DEASSIGN DASH_GT_GT COVER CONTINUE CONST CHANDLE CASEZ CASEX CASE BYTE BREAK BIT BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT
follow(scalar_timing_check_condition) = RPAREN COMMA
follow(scalar_constant) = RPAREN COMMA
follow(real_number) = XOR XNOR WOR WITHIN WIRE WHILE WAND WAIT_ORDER WAIT VOID VIRTUAL VBAR_DASH_GT VBAR UNSIGNED_NUMBER UNSIGNED UNIQUE UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TOKEN_VBAR_VBAR TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_PLING_QUERY_EQUALS TOKEN_PLING_EQUALS_GT TOKEN_ONE TOKEN_NINE TOKEN_LBRACK_STAR_EQUALS TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIMES TIME TILDE_VBAR TILDE THROUGHOUT THIS TASK SYSTEM_TASK_IDENTIFIER SYSTEM_FUNCTION_IDENTIFIER SVINT SUPPLY1 SUPPLY0 SUPER STRUCT STRING STATIC SQUOTE SPECPARAM SPECIFY SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RPAREN RNMOS RETURN REPEAT RELEASE REG REF REALTIME REAL RCURLY RCMOS RBRACK QUERY P_XNOR P_SSRIGHT3 P_SRIGHT P_SLEFT3 P_SLEFT P_POW P_POUNDPOUND P_PLUSCOLON P_NXOR P_NOTEQUAL P_NAND P_MINUSGT P_MINUSCOLON P_LTE P_GTE P_EQUAL P_EQGT P_COLONEQ P_COLONDIV P_CASENOTEQUAL P_CASEEQUAL P_ANDAND PULLUP PULLDOWN PROPERTY PROGRAM PRIORITY PRIMITIVE PMOS PLUS PLING PARAMETER OUTPUT OR OCTAL_BASE NULL NOTIF1 NOTIF0 NOT NOR NMOS NAND NAME_OF_UDP_INSTANCE MODULO MODULE MODPORT MINUS MACROMODULE LPAREN LONGINT LOGIC LOCALPARAM LESS LCURLY LBRACK_STAR_DASH_GT LBRACK_STAR LBRACK JOIN_NONE JOIN_ANY JOIN INTERSECT INTERFACE INTEGER INSIDE INPUT INOUT INITIAL IMPORT IFF IF HEX_BASE HASH GREATER GENVAR GENERATE FUNCTION FORK FOREVER FORCE FOR FIRST_MATCH FINAL EXTERN EXPORT EVENT EQUALS_QUERY_EQUALS ENUM ENDTASK ENDPROGRAM ENDMODULE ENDINTERFACE ENDGENERATE ENDCASE END ELSE DOUBLE_QUOTES DO DIVIDE DIST DISABLE DEFPARAM DEFAULT DECIMAL_BASE DEASSIGN DASH_GT_GT COVER CONTINUE CONSTRAINT CONST COMMA COLON CMOS CLOCKING CLASS CHANDLE CASEZ CASEX CASE CARET BYTE BUFIF1 BUFIF0 BUF BREAK BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT AND AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS #
follow(range_or_type_2) = LBRACK
follow(range_or_type) = SIMPLE_IDENTIFIER BACKSLASH
follow(range_list_or_array_6) = RCURLY COMMA
follow(range_list_or_array) = XOR XNOR WOR WITHIN WIRE WHILE WAND WAIT_ORDER WAIT VOID VIRTUAL VBAR_DASH_GT VBAR UNSIGNED_NUMBER UNSIGNED UNIQUE UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TOKEN_VBAR_VBAR TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_PLING_QUERY_EQUALS TOKEN_PLING_EQUALS_GT TOKEN_ONE TOKEN_NINE TOKEN_LBRACK_STAR_EQUALS TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIMES TIME TILDE_VBAR TILDE THROUGHOUT THIS TASK SYSTEM_TASK_IDENTIFIER SYSTEM_FUNCTION_IDENTIFIER SVINT SUPPLY1 SUPPLY0 SUPER STRUCT STRING STATIC SPECPARAM SPECIFY SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RPAREN RNMOS RETURN REPEAT RELEASE REG REF REALTIME REAL RCURLY RCMOS RBRACK QUERY P_XNOR P_SSRIGHT3 P_SRIGHT P_SLEFT3 P_SLEFT P_POW P_POUNDPOUND P_PLUSCOLON P_NXOR P_NOTEQUAL P_NAND P_MINUSGT P_MINUSCOLON P_LTE P_GTE P_EQUAL P_EQGT P_COLONEQ P_COLONDIV P_CASENOTEQUAL P_CASEEQUAL P_ANDAND PULLUP PULLDOWN PROPERTY PROGRAM PRIORITY PRIMITIVE PMOS PLUS PLING PARAMETER OUTPUT OR OCTAL_BASE NULL NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULO MODULE MODPORT MINUS MACROMODULE LPAREN LONGINT LOGIC LOCALPARAM LESS LCURLY LBRACK_STAR_DASH_GT LBRACK_STAR JOIN_NONE JOIN_ANY JOIN INTERSECT INTERFACE INTEGER INSIDE INPUT INOUT INITIAL IMPORT IFF IF HEX_BASE HASH GREATER GENVAR GENERATE FUNCTION FORK FOREVER FORCE FOR FINAL EXTERN EXPORT EVENT EQUALS_QUERY_EQUALS ENUM ENDTASK ENDPROGRAM ENDMODULE ENDINTERFACE ENDGENERATE ENDCASE END ELSE DOUBLE_QUOTES DO DIVIDE DIST DISABLE DEFPARAM DEFAULT DECIMAL_BASE DEASSIGN DASH_GT_GT COVER CONTINUE CONSTRAINT CONST COMMA COLON CMOS CLOCKING CLASS CHANDLE CASEZ CASEX CASE CARET BYTE BUFIF1 BUFIF0 BUF BREAK BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT AND AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS #
follow(range_expression) = RBRACK
follow(pulsestyle_declaration) = SPECPARAM SHOWCANCELLED PULSESTYLE_ONEVENT PULSESTYLE_ONDETECT NOSHOWCANCELLED NOCHANGE LPAREN IF_NONE IF FULLSKEW ENDSPECIFY D_WIDTH D_TIMESKEW D_SKEW D_SETUPHOLD D_SETUP D_REMOVAL D_RECREM D_RECOVERY D_PERIOD D_HOLD
follow(pulse_control_specparam) = SEMICOLON COMMA
follow(pullup_strength) = SIMPLE_IDENTIFIER LPAREN BACKSLASH
follow(pulldown_strength) = SIMPLE_IDENTIFIER LPAREN BACKSLASH
follow(property_spec) = SEMICOLON RPAREN
follow(property_qualifier) = UNION TYPEDEF TIME SVINT STRUCT STRING STATIC SIMPLE_IDENTIFIER SHORTREAL SHORTINT REG REALTIME REAL RANDC RAND PROTECTED LONGINT LOGIC LOCAL INTEGER EVENT ENUM CONST CHANDLE BYTE BIT BACKSLASH AUTOMATIC
follow(property_formal_list_4) = RPAREN COMMA
follow(property_expr) = SEMICOLON RPAREN
follow(property_declaration_6) = UNION TIME SVINT STRUCT STRING SIMPLE_IDENTIFIER SHORTREAL SHORTINT REG REALTIME REAL NOT LPAREN LONGINT LOGIC INTEGER EVENT ENUM DISABLE CHANDLE BYTE BIT BACKSLASH AT
follow(program_item) = WOR WIRE WAND VIRTUAL UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TIME TASK SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SPECPARAM SIMPLE_IDENTIFIER SHORTREAL SHORTINT SEQUENCE REG REF REALTIME REAL PROPERTY PARAMETER OUTPUT LONGINT LOGIC LOCALPARAM INTERFACE INTEGER INPUT INOUT INITIAL IMPORT GENVAR FUNCTION EXPORT EVENT ENUM ENDPROGRAM DEFAULT COVER CONSTRAINT CONST CLOCKING CLASS CHANDLE BYTE BIT BACKSLASH AUTOMATIC ASSIGN ASSERT
follow(program_instantiation_5) = SEMICOLON COMMA
follow(program_instance_3) = LPAREN LBRACK
follow(program_declaration_4) = WOR WIRE WAND VIRTUAL UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TIME TASK SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SPECPARAM SIMPLE_IDENTIFIER SHORTREAL SHORTINT SEQUENCE REG REF REALTIME REAL PROPERTY PARAMETER OUTPUT LONGINT LOGIC LOCALPARAM INTERFACE INTEGER INPUT INOUT INITIAL IMPORT GENVAR FUNCTION EXPORT EVENT ENUM ENDPROGRAM DEFAULT COVER CONSTRAINT CONST CLOCKING CLASS CHANDLE BYTE BIT BACKSLASH AUTOMATIC ASSIGN ASSERT
follow(program_declaration_22) = WOR WIRE WAND VIRTUAL UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TIME TASK SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SPECPARAM SIMPLE_IDENTIFIER SHORTREAL SHORTINT SEQUENCE REG REF REALTIME REAL PROPERTY PARAMETER OUTPUT LONGINT LOGIC LOCALPARAM INTERFACE INTEGER INPUT INOUT INITIAL IMPORT GENVAR FUNCTION EXPORT EVENT ENUM ENDPROGRAM DEFAULT COVER CONSTRAINT CONST CLOCKING CLASS CHANDLE BYTE BIT BACKSLASH AUTOMATIC ASSIGN ASSERT
follow(program_declaration_10) = WOR WIRE WAND VIRTUAL UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TIME TASK SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SPECPARAM SIMPLE_IDENTIFIER SHORTREAL SHORTINT SEQUENCE REG REALTIME REAL PROPERTY PARAMETER LONGINT LOGIC LOCALPARAM INTEGER INITIAL IMPORT GENVAR FUNCTION EXPORT EVENT ENUM ENDPROGRAM DEFAULT COVER CONSTRAINT CONST CLOCKING CLASS CHANDLE BYTE BIT BACKSLASH AUTOMATIC ASSIGN ASSERT
follow(program_declaration) = WOR WIRE WHILE WAND WAIT_ORDER WAIT VIRTUAL UNIQUE UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TOKEN_PLUS_PLUS TOKEN_DASH_DASH TIME TASK SYSTEM_TASK_IDENTIFIER SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SPECPARAM SIMPLE_IDENTIFIER SHORTREAL SHORTINT SEQUENCE SEMICOLON RETURN REPEAT RELEASE REG REF REALTIME REAL P_POUNDPOUND P_MINUSGT PROPERTY PROGRAM PRIORITY PRIMITIVE PARAMETER OUTPUT MODULE MODPORT MACROMODULE LONGINT LOGIC LOCALPARAM LCURLY INTERFACE INTEGER INPUT INOUT INITIAL IMPORT IF HASH GENVAR GENERATE FUNCTION FORK FOREVER FORCE FOR FINAL EXTERN EXPORT EVENT ENUM ENDINTERFACE DO DISABLE DEFAULT DEASSIGN DASH_GT_GT COVER CONTINUE CONSTRAINT CONST CLOCKING CLASS CHANDLE CASEZ CASEX CASE BYTE BREAK BIT BIND BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS #
follow(procedural_timing_control) = WHILE WAIT_ORDER WAIT UNIQUE TOKEN_PLUS_PLUS TOKEN_DASH_DASH SYSTEM_TASK_IDENTIFIER SIMPLE_IDENTIFIER SEMICOLON RETURN REPEAT RELEASE P_POUNDPOUND P_MINUSGT PRIORITY LCURLY IF HASH FORK FOREVER FORCE FOR DO DISABLE DEASSIGN DASH_GT_GT COVER CONTINUE CASEZ CASEX CASE BREAK BEGIN BACKSLASH AT_STAR AT ASSIGN ASSERT
follow(procedural_continuous_assignments) = SEMICOLON
follow(procedural_assertion_item) = XOR XNOR WOR WIRE WHILE WAND WAIT_ORDER WAIT VOID VIRTUAL VBAR UNSIGNED_NUMBER UNSIGNED UNIQUE UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS TASK SYSTEM_TASK_IDENTIFIER SYSTEM_FUNCTION_IDENTIFIER SVINT SUPPLY1 SUPPLY0 SUPER STRUCT STRING STATIC SPECPARAM SPECIFY SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RNMOS RETURN REPEAT RELEASE REG REF REALTIME REAL RCMOS P_XNOR P_POUNDPOUND P_NXOR P_NAND P_MINUSGT PULLUP PULLDOWN PROPERTY PROGRAM PRIORITY PRIMITIVE PMOS PLUS PLING PARAMETER OUTPUT OR OCTAL_BASE NULL NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULE MODPORT MINUS MACROMODULE LPAREN LONGINT LOGIC LOCALPARAM LCURLY JOIN_NONE JOIN_ANY JOIN INTERFACE INTEGER INPUT INOUT INITIAL IMPORT IF HEX_BASE HASH GENVAR GENERATE FUNCTION FORK FOREVER FORCE FOR FINAL EXTERN EXPORT EVENT ENUM ENDTASK ENDPROGRAM ENDMODULE ENDINTERFACE ENDGENERATE ENDCASE END ELSE DOUBLE_QUOTES DO DISABLE DEFPARAM DEFAULT DECIMAL_BASE DEASSIGN DASH_GT_GT COVER CONTINUE CONSTRAINT CONST CMOS CLOCKING CLASS CHANDLE CASEZ CASEX CASE CARET BYTE BUFIF1 BUFIF0 BUF BREAK BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT AND AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS #
follow(primary_8_6_5) = RPAREN COMMA
follow(primary_6) = XOR XNOR WOR WITHIN WIRE WHILE WAND WAIT_ORDER WAIT VOID VIRTUAL VBAR_DASH_GT VBAR UNSIGNED_NUMBER UNSIGNED UNIQUE UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TOKEN_VBAR_VBAR TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_PLING_QUERY_EQUALS TOKEN_PLING_EQUALS_GT TOKEN_ONE TOKEN_NINE TOKEN_LBRACK_STAR_EQUALS TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIMES TIME TILDE_VBAR TILDE THROUGHOUT THIS TASK SYSTEM_TASK_IDENTIFIER SYSTEM_FUNCTION_IDENTIFIER SVINT SUPPLY1 SUPPLY0 SUPER STRUCT STRING STATIC SPECPARAM SPECIFY SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RPAREN RNMOS RETURN REPEAT RELEASE REG REF REALTIME REAL RCURLY RCMOS RBRACK QUERY P_XNOR P_SSRIGHT3 P_SRIGHT P_SLEFT3 P_SLEFT P_POW P_POUNDPOUND P_PLUSCOLON P_NXOR P_NOTEQUAL P_NAND P_MINUSGT P_MINUSCOLON P_LTE P_GTE P_EQUAL P_EQGT P_COLONEQ P_COLONDIV P_CASENOTEQUAL P_CASEEQUAL P_ANDAND PULLUP PULLDOWN PROPERTY PROGRAM PRIORITY PRIMITIVE PMOS PLUS PLING PARAMETER OUTPUT OR OCTAL_BASE NULL NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULO MODULE MODPORT MINUS MACROMODULE LPAREN LONGINT LOGIC LOCALPARAM LESS LCURLY LBRACK_STAR_DASH_GT LBRACK_STAR LBRACK JOIN_NONE JOIN_ANY JOIN INTERSECT INTERFACE INTEGER INSIDE INPUT INOUT INITIAL IMPORT IFF IF HEX_BASE HASH GREATER GENVAR GENERATE FUNCTION FORK FOREVER FORCE FOR FINAL EXTERN EXPORT EVENT EQUALS_QUERY_EQUALS ENUM ENDTASK ENDPROGRAM ENDMODULE ENDINTERFACE ENDGENERATE ENDCASE END ELSE DOUBLE_QUOTES DOT DO DIVIDE DIST DISABLE DEFPARAM DEFAULT DECIMAL_BASE DEASSIGN DASH_GT_GT COVER CONTINUE CONSTRAINT CONST COMMA COLON CMOS CLOCKING CLASS CHANDLE CASEZ CASEX CASE CARET BYTE BUFIF1 BUFIF0 BUF BREAK BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT AND AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS #
follow(primary_22) = SIMPLE_IDENTIFIER BACKSLASH
follow(primary) = XOR XNOR WOR WITHIN WIRE WHILE WAND WAIT_ORDER WAIT VOID VIRTUAL VBAR_DASH_GT VBAR UNSIGNED_NUMBER UNSIGNED UNIQUE UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TOKEN_VBAR_VBAR TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_PLING_QUERY_EQUALS TOKEN_PLING_EQUALS_GT TOKEN_ONE TOKEN_NINE TOKEN_LBRACK_STAR_EQUALS TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIMES TIME TILDE_VBAR TILDE THROUGHOUT THIS TASK SYSTEM_TASK_IDENTIFIER SYSTEM_FUNCTION_IDENTIFIER SVINT SUPPLY1 SUPPLY0 SUPER STRUCT STRING STATIC SPECPARAM SPECIFY SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RPAREN RNMOS RETURN REPEAT RELEASE REG REF REALTIME REAL RCURLY RCMOS RBRACK QUERY P_XNOR P_SSRIGHT3 P_SRIGHT P_SLEFT3 P_SLEFT P_POW P_POUNDPOUND P_PLUSCOLON P_NXOR P_NOTEQUAL P_NAND P_MINUSGT P_MINUSCOLON P_LTE P_GTE P_EQUAL P_EQGT P_COLONEQ P_COLONDIV P_CASENOTEQUAL P_CASEEQUAL P_ANDAND PULLUP PULLDOWN PROPERTY PROGRAM PRIORITY PRIMITIVE PMOS PLUS PLING PARAMETER OUTPUT OR OCTAL_BASE NULL NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULO MODULE MODPORT MINUS MACROMODULE LPAREN LONGINT LOGIC LOCALPARAM LESS LCURLY LBRACK_STAR_DASH_GT LBRACK_STAR JOIN_NONE JOIN_ANY JOIN INTERSECT INTERFACE INTEGER INSIDE INPUT INOUT INITIAL IMPORT IFF IF HEX_BASE HASH GREATER GENVAR GENERATE FUNCTION FORK FOREVER FORCE FOR FINAL EXTERN EXPORT EVENT EQUALS_QUERY_EQUALS ENUM ENDTASK ENDPROGRAM ENDMODULE ENDINTERFACE ENDGENERATE ENDCASE END ELSE DOUBLE_QUOTES DO DIVIDE DIST DISABLE DEFPARAM DEFAULT DECIMAL_BASE DEASSIGN DASH_GT_GT COVER CONTINUE CONSTRAINT CONST COMMA COLON CMOS CLOCKING CLASS CHANDLE CASEZ CASEX CASE CARET BYTE BUFIF1 BUFIF0 BUF BREAK BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT AND AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS #
follow(port_type_6) = SIMPLE_IDENTIFIER LBRACK BACKSLASH
follow(port_type_13) = LBRACK
follow(port_type_10) = SIMPLE_IDENTIFIER LBRACK BACKSLASH
follow(port_type) = SIMPLE_IDENTIFIER BACKSLASH
follow(port_expression_6) = RCURLY COMMA
follow(port_expression) = RPAREN COMMA
follow(port_declaration) = SEMICOLON RPAREN COMMA
follow(port) = RPAREN COMMA
follow(polarity_operator) = P_EQGT P_ASTGT COLON
follow(path_delay_value) = SEMICOLON
follow(path_declaration) = SPECPARAM SHOWCANCELLED PULSESTYLE_ONEVENT PULSESTYLE_ONDETECT NOSHOWCANCELLED NOCHANGE LPAREN IF_NONE IF FULLSKEW ENDSPECIFY D_WIDTH D_TIMESKEW D_SKEW D_SETUPHOLD D_SETUP D_REMOVAL D_RECREM D_RECOVERY D_PERIOD D_HOLD
follow(pass_switchtype) = SIMPLE_IDENTIFIER LPAREN BACKSLASH
follow(pass_en_switchtype) = SIMPLE_IDENTIFIER LPAREN HASH BACKSLASH
follow(parameter_port_list_5) = RPAREN COMMA
follow(parameter_declaration_4) = SIMPLE_IDENTIFIER LBRACK BACKSLASH
follow(parameter_declaration) = SEMICOLON RPAREN COMMA
follow(par_block_5) = WHILE WAIT_ORDER WAIT UNIQUE TOKEN_PLUS_PLUS TOKEN_DASH_DASH SYSTEM_TASK_IDENTIFIER SIMPLE_IDENTIFIER SEMICOLON RETURN REPEAT RELEASE P_POUNDPOUND P_MINUSGT PRIORITY LCURLY JOIN_NONE JOIN_ANY JOIN IF HASH FORK FOREVER FORCE FOR DO DISABLE DEASSIGN DASH_GT_GT COVER CONTINUE CASEZ CASEX CASE BREAK BEGIN BACKSLASH AT_STAR AT ASSIGN ASSERT
follow(par_block_4) = WHILE WAIT_ORDER WAIT UNIQUE UNION TYPEDEF TOKEN_PLUS_PLUS TOKEN_DASH_DASH TIME SYSTEM_TASK_IDENTIFIER SVINT STRUCT STRING STATIC SIMPLE_IDENTIFIER SHORTREAL SHORTINT SEMICOLON RETURN REPEAT RELEASE REG REALTIME REAL P_POUNDPOUND P_MINUSGT PRIORITY PARAMETER LONGINT LOGIC LOCALPARAM LCURLY JOIN_NONE JOIN_ANY JOIN INTEGER IF HASH FORK FOREVER FORCE FOR EVENT ENUM DO DISABLE DEASSIGN DASH_GT_GT COVER CONTINUE CONST CHANDLE CASEZ CASEX CASE BYTE BREAK BIT BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT
follow(packed_dimension) = SIMPLE_IDENTIFIER SEMICOLON RPAREN RBRACK LCURLY LBRACK COMMA BACKSLASH
follow(output_identifier) = SEMICOLON RPAREN P_ANDANDAND PLUS MINUS LBRACK EQUALS COMMA COLON
follow(output_declaration) = SEMICOLON RPAREN COMMA
follow(ordered_parameter_assignment) = RPAREN COMMA
follow(octal_value_3) = XOR XNOR WOR WITHIN WIRE WHILE WAND WAIT_ORDER WAIT VOID VIRTUAL VBAR_DASH_GT VBAR UNSIGNED_NUMBER UNSIGNED UNIQUE UNION UNDERSCORE TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TOKEN_VBAR_VBAR TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_PLING_QUERY_EQUALS TOKEN_PLING_EQUALS_GT TOKEN_ONE TOKEN_NINE TOKEN_LBRACK_STAR_EQUALS TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIMES TIME TILDE_VBAR TILDE THROUGHOUT THIS TASK SYSTEM_TASK_IDENTIFIER SYSTEM_FUNCTION_IDENTIFIER SVINT SUPPLY1 SUPPLY0 SUPER STRUCT STRING STATIC SQUOTE SPECPARAM SPECIFY SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RPAREN RNMOS RETURN REPEAT RELEASE REG REF REALTIME REAL RCURLY RCMOS RBRACK QUERY P_XNOR P_SSRIGHT3 P_SRIGHT P_SLEFT3 P_SLEFT P_POW P_POUNDPOUND P_PLUSCOLON P_NXOR P_NOTEQUAL P_NAND P_MINUSGT P_MINUSCOLON P_LTE P_GTE P_EQUAL P_EQGT P_COLONEQ P_COLONDIV P_CASENOTEQUAL P_CASEEQUAL P_ANDAND PULLUP PULLDOWN PROPERTY PROGRAM PRIORITY PRIMITIVE PMOS PLUS PLING PARAMETER OUTPUT OR OCTAL_BASE NULL NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULO MODULE MODPORT MINUS MACROMODULE LPAREN LONGINT LOGIC LOCALPARAM LESS LCURLY LBRACK_STAR_DASH_GT LBRACK_STAR JOIN_NONE JOIN_ANY JOIN INTERSECT INTERFACE INTEGER INSIDE INPUT INOUT INITIAL IMPORT IFF IF HEX_BASE HASH GREATER GENVAR GENERATE FUNCTION FORK FOREVER FORCE FOR FIRST_MATCH FINAL EXTERN EXPORT EVENT EQUALS_QUERY_EQUALS ENUM ENDTASK ENDPROGRAM ENDMODULE ENDINTERFACE ENDGENERATE ENDCASE END ELSE DOUBLE_QUOTES DO DIVIDE DIST DISABLE DEFPARAM DEFAULT DECIMAL_BASE DEASSIGN DASH_GT_GT COVER CONTINUE CONSTRAINT CONST COMMA COLON CMOS CLOCKING CLASS CHANDLE CASEZ CASEX CASE CARET BYTE BUFIF1 BUFIF0 BUF BREAK BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT AND AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS #
follow(octal_digit) = Z_DIGIT X_DIGIT XOR XNOR WOR WITHIN WIRE WHILE WAND WAIT_ORDER WAIT VOID VIRTUAL VBAR_DASH_GT VBAR UNSIGNED_NUMBER UNSIGNED UNIQUE UNION UNDERSCORE TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TOKEN_ZERO TOKEN_VBAR_VBAR TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_PLING_QUERY_EQUALS TOKEN_PLING_EQUALS_GT TOKEN_ONE TOKEN_NINE TOKEN_LBRACK_STAR_EQUALS TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIMES TIME TILDE_VBAR TILDE THROUGHOUT THIS TASK SYSTEM_TASK_IDENTIFIER SYSTEM_FUNCTION_IDENTIFIER SVINT SUPPLY1 SUPPLY0 SUPER STRUCT STRING STATIC SQUOTE SPECPARAM SPECIFY SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RPAREN RNMOS RETURN REPEAT RELEASE REG REF REALTIME REAL RCURLY RCMOS RBRACK QUERY P_XNOR P_SSRIGHT3 P_SRIGHT P_SLEFT3 P_SLEFT P_POW P_POUNDPOUND P_PLUSCOLON P_NXOR P_NOTEQUAL P_NAND P_MINUSGT P_MINUSCOLON P_LTE P_GTE P_EQUAL P_EQGT P_COLONEQ P_COLONDIV P_CASENOTEQUAL P_CASEEQUAL P_ANDAND PULLUP PULLDOWN PROPERTY PROGRAM PRIORITY PRIMITIVE PMOS PLUS PLING PARAMETER OUTPUT OR OCTAL_BASE NULL NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULO MODULE MODPORT MINUS MACROMODULE LPAREN LONGINT LOGIC LOCALPARAM LESS LCURLY LBRACK_STAR_DASH_GT LBRACK_STAR JOIN_NONE JOIN_ANY JOIN INTERSECT INTERFACE INTEGER INSIDE INPUT INOUT INITIAL IMPORT IFF IF HEX_BASE HASH GREATER GENVAR GENERATE FUNCTION FORK FOREVER FORCE FOR FIRST_MATCH FINAL EXTERN EXPORT EVENT EQUALS_QUERY_EQUALS ENUM ENDTASK ENDPROGRAM ENDMODULE ENDINTERFACE ENDGENERATE ENDCASE END ELSE DOUBLE_QUOTES DO DIVIDE DIST DISABLE DEFPARAM DEFAULT DECIMAL_BASE DEASSIGN DASH_GT_GT COVER CONTINUE CONSTRAINT CONST COMMA COLON CMOS CLOCKING CLASS CHANDLE CASEZ CASEX CASE CARET BYTE BUFIF1 BUFIF0 BUF BREAK BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT AND AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS #
follow(number) = XOR XNOR WOR WITHIN WIRE WHILE WAND WAIT_ORDER WAIT VOID VIRTUAL VBAR_DASH_GT VBAR UNSIGNED_NUMBER UNSIGNED UNIQUE UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TOKEN_VBAR_VBAR TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_PLING_QUERY_EQUALS TOKEN_PLING_EQUALS_GT TOKEN_ONE TOKEN_NINE TOKEN_LBRACK_STAR_EQUALS TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIMES TIME TILDE_VBAR TILDE THROUGHOUT THIS TASK SYSTEM_TASK_IDENTIFIER SYSTEM_FUNCTION_IDENTIFIER SVINT SUPPLY1 SUPPLY0 SUPER STRUCT STRING STATIC SQUOTE SPECPARAM SPECIFY SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RPAREN RNMOS RETURN REPEAT RELEASE REG REF REALTIME REAL RCURLY RCMOS RBRACK QUERY P_XNOR P_SSRIGHT3 P_SRIGHT P_SLEFT3 P_SLEFT P_POW P_POUNDPOUND P_PLUSCOLON P_NXOR P_NOTEQUAL P_NAND P_MINUSGT P_MINUSCOLON P_LTE P_GTE P_EQUAL P_EQGT P_COLONEQ P_COLONDIV P_CASENOTEQUAL P_CASEEQUAL P_ANDAND PULLUP PULLDOWN PROPERTY PROGRAM PRIORITY PRIMITIVE PMOS PLUS PLING PARAMETER OUTPUT OR OCTAL_BASE NULL NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULO MODULE MODPORT MINUS MACROMODULE LPAREN LONGINT LOGIC LOCALPARAM LESS LCURLY LBRACK_STAR_DASH_GT LBRACK_STAR JOIN_NONE JOIN_ANY JOIN INTERSECT INTERFACE INTEGER INSIDE INPUT INOUT INITIAL IMPORT IFF IF HEX_BASE HASH GREATER GENVAR GENERATE FUNCTION FORK FOREVER FORCE FOR FIRST_MATCH FINAL EXTERN EXPORT EVENT EQUALS_QUERY_EQUALS ENUM ENDTASK ENDPROGRAM ENDMODULE ENDINTERFACE ENDGENERATE ENDCASE END ELSE DOUBLE_QUOTES DO DIVIDE DIST DISABLE DEFPARAM DEFAULT DECIMAL_BASE DEASSIGN DASH_GT_GT COVER CONTINUE CONSTRAINT CONST COMMA COLON CMOS CLOCKING CLASS CHANDLE CASEZ CASEX CASE CARET BYTE BUFIF1 BUFIF0 BUF BREAK BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT AND AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS #
follow(non_zero_unsigned_number_3) = UNDERSCORE OCTAL_BASE HEX_BASE DECIMAL_BASE BINARY_BASE
follow(non_zero_decimal_digit) = UNDERSCORE TOKEN_ZERO TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT OCTAL_BASE HEX_BASE DECIMAL_BASE BINARY_BASE
follow(non_port_program_item) = WOR WIRE WAND VIRTUAL UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TIME TASK SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SPECPARAM SIMPLE_IDENTIFIER SHORTREAL SHORTINT SEQUENCE REG REF REALTIME REAL PROPERTY PARAMETER OUTPUT LONGINT LOGIC LOCALPARAM INTERFACE INTEGER INPUT INOUT INITIAL IMPORT GENVAR FUNCTION EXPORT EVENT ENUM ENDPROGRAM DEFAULT COVER CONSTRAINT CONST CLOCKING CLASS CHANDLE BYTE BIT BACKSLASH AUTOMATIC ASSIGN ASSERT
follow(non_port_module_item) = XOR XNOR WOR WIRE WAND VIRTUAL UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TIME TASK SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SPECPARAM SPECIFY SIMPLE_IDENTIFIER SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RNMOS REG REF REALTIME REAL RCMOS PULLUP PULLDOWN PROPERTY PMOS PARAMETER OUTPUT OR NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULE MACROMODULE LONGINT LOGIC LOCALPARAM INTEGER INPUT INOUT INITIAL IMPORT GENVAR GENERATE FUNCTION FINAL EXTERN EXPORT EVENT ENUM ENDMODULE DEFPARAM DEFAULT COVER CONSTRAINT CONST CMOS CLOCKING CLASS CHANDLE BYTE BUFIF1 BUFIF0 BUF BIT BIND BACKSLASH AUTOMATIC ASSIGN ASSERT AND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS
follow(non_port_interface_item) = WOR WIRE WAND VIRTUAL UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TIME TASK SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SPECPARAM SIMPLE_IDENTIFIER SHORTREAL SHORTINT SEQUENCE SEMICOLON REG REF REALTIME REAL PROPERTY PROGRAM PARAMETER OUTPUT MODPORT LONGINT LOGIC LOCALPARAM INTERFACE INTEGER INPUT INOUT INITIAL IMPORT GENVAR GENERATE FUNCTION FINAL EXTERN EXPORT EVENT ENUM ENDINTERFACE DEFAULT COVER CONSTRAINT CONST CLOCKING CLASS CHANDLE BYTE BIT BIND BACKSLASH AUTOMATIC ASSIGN ASSERT ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS
follow(non_integer_type) = SQUOTE SIMPLE_IDENTIFIER SEMICOLON RPAREN RBRACK COMMA BACKSLASH
follow(non_generic_port_declaration) = SEMICOLON RPAREN COMMA
follow(next_state) = SEMICOLON
follow(net_type) = VECTORED UNSIGNED SIMPLE_IDENTIFIER SIGNED SCALARED LPAREN LBRACK HASH BACKSLASH
follow(net_lvalue_8) = RCURLY COMMA
follow(net_lvalue_3) = SEMICOLON RPAREN RCURLY LBRACK EQUALS COMMA
follow(net_lvalue) = SEMICOLON RPAREN RCURLY EQUALS COMMA
follow(net_declaration_62) = LBRACK
follow(net_declaration_52) = LBRACK
follow(net_declaration_28) = LBRACK
follow(net_declaration_18) = LBRACK
follow(net_declaration) = XOR XNOR WOR WIRE WHILE WAND WAIT_ORDER WAIT VIRTUAL VBAR UNSIGNED_NUMBER UNSIGNED UNIQUE UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE TASK SYSTEM_TASK_IDENTIFIER SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SPECPARAM SPECIFY SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RNMOS RETURN REPEAT RELEASE REG REF REALTIME REAL RCMOS P_XNOR P_POUNDPOUND P_NXOR P_NAND P_MINUSGT PULLUP PULLDOWN PROPERTY PROGRAM PRIORITY PRIMITIVE PMOS PLUS PLING PARAMETER OUTPUT OR OCTAL_BASE NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULE MODPORT MINUS MACROMODULE LPAREN LONGINT LOGIC LOCALPARAM LCURLY INTERFACE INTEGER INPUT INOUT INITIAL IMPORT IF HEX_BASE HASH GENVAR GENERATE FUNCTION FORK FOREVER FORCE FOR FINAL EXTERN EXPORT EVENT ENUM ENDPROGRAM ENDMODULE ENDINTERFACE ENDGENERATE ENDCASE END ELSE DOUBLE_QUOTES DO DISABLE DEFPARAM DEFAULT DECIMAL_BASE DEASSIGN DASH_GT_GT COVER CONTINUE CONSTRAINT CONST CMOS CLOCKING CLASS CHANDLE CASEZ CASEX CASE CARET BYTE BUFIF1 BUFIF0 BUF BREAK BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT AND AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS #
follow(named_task_proto_5) = RPAREN COMMA
follow(named_parameter_assignment) = RPAREN COMMA
follow(name_of_instance_3) = SIMPLE_IDENTIFIER LPAREN LBRACK BACKSLASH
follow(name_of_gate_instance_3) = LPAREN LBRACK
follow(n_output_gatetype) = SIMPLE_IDENTIFIER LPAREN HASH BACKSLASH
follow(n_output_gate_instance_5) = COMMA
follow(n_input_gatetype) = SIMPLE_IDENTIFIER LPAREN HASH BACKSLASH
follow(n_input_gate_instance_7) = RPAREN COMMA
follow(multi_clock_sequence_3) = TOKEN_PLING_EQUALS_GT SEMICOLON RPAREN P_POUNDPOUND
follow(multi_clock_property_expr) = SEMICOLON RPAREN
follow(mos_switchtype) = SIMPLE_IDENTIFIER LPAREN HASH BACKSLASH
follow(module_root_item) = WOR WIRE WHILE WAND WAIT_ORDER WAIT VIRTUAL UNIQUE UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TOKEN_PLUS_PLUS TOKEN_DASH_DASH TIME TASK SYSTEM_TASK_IDENTIFIER SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SIMPLE_IDENTIFIER SHORTREAL SHORTINT SEQUENCE SEMICOLON RETURN REPEAT RELEASE REG REALTIME REAL P_POUNDPOUND P_MINUSGT PROPERTY PROGRAM PRIORITY PRIMITIVE MODULE MACROMODULE LONGINT LOGIC LOCALPARAM LCURLY INTERFACE INTEGER IMPORT IF HASH GENVAR FUNCTION FORK FOREVER FORCE FOR EXTERN EXPORT EVENT ENUM DO DISABLE DEFAULT DEASSIGN DASH_GT_GT COVER CONTINUE CONSTRAINT CONST CLOCKING CLASS CHANDLE CASEZ CASEX CASE BYTE BREAK BIT BIND BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT #
follow(module_path_primary) = VBAR TOKEN_VBAR_VBAR RPAREN RCURLY QUERY P_XNOR P_NXOR P_NOTEQUAL P_EQUAL P_ANDAND COMMA COLON CARET AMPERSAND
follow(module_path_mintypmax_expression) = RPAREN
follow(module_path_expression) = VBAR TOKEN_VBAR_VBAR RPAREN RCURLY QUERY P_XNOR P_NXOR P_NOTEQUAL P_EQUAL P_ANDAND COMMA COLON CARET AMPERSAND
follow(module_path_concatenation_4) = RCURLY COMMA
follow(module_or_generate_item_declaration) = XOR XNOR WOR WIRE WHILE WAND WAIT_ORDER WAIT VIRTUAL VBAR UNSIGNED_NUMBER UNSIGNED UNIQUE UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE TASK SYSTEM_TASK_IDENTIFIER SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SPECPARAM SPECIFY SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RNMOS RETURN REPEAT RELEASE REG REF REALTIME REAL RCMOS P_XNOR P_POUNDPOUND P_NXOR P_NAND P_MINUSGT PULLUP PULLDOWN PROPERTY PROGRAM PRIORITY PRIMITIVE PMOS PLUS PLING PARAMETER OUTPUT OR OCTAL_BASE NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULE MODPORT MINUS MACROMODULE LPAREN LONGINT LOGIC LOCALPARAM LCURLY INTERFACE INTEGER INPUT INOUT INITIAL IMPORT IF HEX_BASE HASH GENVAR GENERATE FUNCTION FORK FOREVER FORCE FOR FINAL EXTERN EXPORT EVENT ENUM ENDPROGRAM ENDMODULE ENDINTERFACE ENDGENERATE ENDCASE END ELSE DOUBLE_QUOTES DO DISABLE DEFPARAM DEFAULT DECIMAL_BASE DEASSIGN DASH_GT_GT COVER CONTINUE CONSTRAINT CONST CMOS CLOCKING CLASS CHANDLE CASEZ CASEX CASE CARET BYTE BUFIF1 BUFIF0 BUF BREAK BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT AND AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS #
follow(module_or_generate_item) = XOR XNOR WOR WIRE WAND VIRTUAL VBAR UNSIGNED_NUMBER UNSIGNED UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TIME TILDE_VBAR TILDE TASK SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SPECPARAM SPECIFY SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RNMOS REG REF REALTIME REAL RCMOS P_XNOR P_NXOR P_NAND PULLUP PULLDOWN PROPERTY PMOS PLUS PLING PARAMETER OUTPUT OR OCTAL_BASE NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULE MINUS MACROMODULE LPAREN LONGINT LOGIC LOCALPARAM LCURLY INTEGER INPUT INOUT INITIAL IMPORT IF HEX_BASE GENVAR GENERATE FUNCTION FOR FINAL EXTERN EXPORT EVENT ENUM ENDMODULE ENDGENERATE ENDCASE END ELSE DOUBLE_QUOTES DEFPARAM DEFAULT DECIMAL_BASE COVER CONSTRAINT CONST CMOS CLOCKING CLASS CHANDLE CASE CARET BYTE BUFIF1 BUFIF0 BUF BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC ASSIGN ASSERT AND AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS
follow(module_keyword) = STATIC SIMPLE_IDENTIFIER BACKSLASH AUTOMATIC
follow(module_item) = XOR XNOR WOR WIRE WAND VIRTUAL UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TIME TASK SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SPECPARAM SPECIFY SIMPLE_IDENTIFIER SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RNMOS REG REF REALTIME REAL RCMOS PULLUP PULLDOWN PROPERTY PMOS PARAMETER OUTPUT OR NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULE MACROMODULE LONGINT LOGIC LOCALPARAM INTEGER INPUT INOUT INITIAL IMPORT GENVAR GENERATE FUNCTION FINAL EXTERN EXPORT EVENT ENUM ENDMODULE DEFPARAM DEFAULT COVER CONSTRAINT CONST CMOS CLOCKING CLASS CHANDLE BYTE BUFIF1 BUFIF0 BUF BIT BIND BACKSLASH AUTOMATIC ASSIGN ASSERT AND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS
follow(module_instantiation_5) = SEMICOLON COMMA
follow(module_declaration_4) = XOR XNOR WOR WIRE WAND VIRTUAL UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TIME TASK SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SPECPARAM SPECIFY SIMPLE_IDENTIFIER SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RNMOS REG REF REALTIME REAL RCMOS PULLUP PULLDOWN PROPERTY PMOS PARAMETER OUTPUT OR NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULE MACROMODULE LONGINT LOGIC LOCALPARAM INTEGER INPUT INOUT INITIAL IMPORT GENVAR GENERATE FUNCTION FINAL EXTERN EXPORT EVENT ENUM ENDMODULE DEFPARAM DEFAULT COVER CONSTRAINT CONST CMOS CLOCKING CLASS CHANDLE BYTE BUFIF1 BUFIF0 BUF BIT BIND BACKSLASH AUTOMATIC ASSIGN ASSERT AND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS
follow(module_declaration_23) = XOR XNOR WOR WIRE WAND VIRTUAL UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TIME TASK SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SPECPARAM SPECIFY SIMPLE_IDENTIFIER SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RNMOS REG REF REALTIME REAL RCMOS PULLUP PULLDOWN PROPERTY PMOS PARAMETER OUTPUT OR NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULE MACROMODULE LONGINT LOGIC LOCALPARAM INTEGER INPUT INOUT INITIAL IMPORT GENVAR GENERATE FUNCTION FINAL EXTERN EXPORT EVENT ENUM ENDMODULE DEFPARAM DEFAULT COVER CONSTRAINT CONST CMOS CLOCKING CLASS CHANDLE BYTE BUFIF1 BUFIF0 BUF BIT BIND BACKSLASH AUTOMATIC ASSIGN ASSERT AND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS
follow(module_declaration_10) = XOR XNOR WOR WIRE WAND VIRTUAL UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TIME TASK SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SPECPARAM SPECIFY SIMPLE_IDENTIFIER SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RNMOS REG REALTIME REAL RCMOS PULLUP PULLDOWN PROPERTY PMOS PARAMETER OR NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULE MACROMODULE LONGINT LOGIC LOCALPARAM INTEGER INITIAL IMPORT GENVAR GENERATE FUNCTION FINAL EXTERN EXPORT EVENT ENUM ENDMODULE DEFPARAM DEFAULT COVER CONSTRAINT CONST CMOS CLOCKING CLASS CHANDLE BYTE BUFIF1 BUFIF0 BUF BIT BIND BACKSLASH AUTOMATIC ASSIGN ASSERT AND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS
follow(module_declaration) = XOR XNOR WOR WIRE WHILE WAND WAIT_ORDER WAIT VIRTUAL UNIQUE UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TOKEN_PLUS_PLUS TOKEN_DASH_DASH TIME TASK SYSTEM_TASK_IDENTIFIER SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SPECPARAM SPECIFY SIMPLE_IDENTIFIER SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RNMOS RETURN REPEAT RELEASE REG REF REALTIME REAL RCMOS P_POUNDPOUND P_MINUSGT PULLUP PULLDOWN PROPERTY PROGRAM PRIORITY PRIMITIVE PMOS PARAMETER OUTPUT OR NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULE MACROMODULE LONGINT LOGIC LOCALPARAM LCURLY INTERFACE INTEGER INPUT INOUT INITIAL IMPORT IF HASH GENVAR GENERATE FUNCTION FORK FOREVER FORCE FOR FINAL EXTERN EXPORT EVENT ENUM ENDMODULE DO DISABLE DEFPARAM DEFAULT DEASSIGN DASH_GT_GT COVER CONTINUE CONSTRAINT CONST CMOS CLOCKING CLASS CHANDLE CASEZ CASEX CASE BYTE BUFIF1 BUFIF0 BUF BREAK BIT BIND BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT AND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS #
follow(module_common_item) = XOR XNOR WOR WIRE WHILE WAND WAIT_ORDER WAIT VIRTUAL VBAR UNSIGNED_NUMBER UNSIGNED UNIQUE UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE TASK SYSTEM_TASK_IDENTIFIER SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SPECPARAM SPECIFY SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RNMOS RETURN REPEAT RELEASE REG REF REALTIME REAL RCMOS P_XNOR P_POUNDPOUND P_NXOR P_NAND P_MINUSGT PULLUP PULLDOWN PROPERTY PROGRAM PRIORITY PRIMITIVE PMOS PLUS PLING PARAMETER OUTPUT OR OCTAL_BASE NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULE MODPORT MINUS MACROMODULE LPAREN LONGINT LOGIC LOCALPARAM LCURLY INTERFACE INTEGER INPUT INOUT INITIAL IMPORT IF HEX_BASE HASH GENVAR GENERATE FUNCTION FORK FOREVER FORCE FOR FINAL EXTERN EXPORT EVENT ENUM ENDMODULE ENDINTERFACE ENDGENERATE ENDCASE END ELSE DOUBLE_QUOTES DO DISABLE DEFPARAM DEFAULT DECIMAL_BASE DEASSIGN DASH_GT_GT COVER CONTINUE CONSTRAINT CONST CMOS CLOCKING CLASS CHANDLE CASEZ CASEX CASE CARET BYTE BUFIF1 BUFIF0 BUF BREAK BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT AND AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS #
follow(modport_tf_port_8) = RPAREN COMMA
follow(modport_tf_port_4) = RPAREN COMMA
follow(modport_tf_port_11) = RPAREN COMMA
follow(modport_tf_port) = RPAREN COMMA
follow(modport_simple_ports_declaration) = RPAREN COMMA
follow(modport_ports_declaration) = RPAREN COMMA
follow(modport_item_5) = RPAREN COMMA
follow(modport_declaration_4) = SEMICOLON COMMA
follow(mintypmax_expression) = RPAREN COMMA
follow(method_qualifier) = VIRTUAL TASK STATIC PROTECTED LOCAL FUNCTION
follow(method_prototype) = WOR WIRE WAND VIRTUAL VBAR UNSIGNED_NUMBER UNSIGNED UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TIME TILDE_VBAR TILDE TASK SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SPECPARAM SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON REG REF REALTIME REAL RANDC RAND P_XNOR P_NXOR P_NAND PROTECTED PROPERTY PROGRAM PLUS PLING PARAMETER OUTPUT OCTAL_BASE MODPORT MINUS LPAREN LONGINT LOGIC LOCALPARAM LOCAL LCURLY INTERFACE INTEGER INPUT INOUT INITIAL IMPORT IF HEX_BASE GENVAR GENERATE FUNCTION FOR FINAL EXTERN EXPORT EVENT ENUM ENDINTERFACE ENDGENERATE ENDCLASS ENDCASE END ELSE DOUBLE_QUOTES DEFAULT DECIMAL_BASE COVER CONSTRAINT CONST CLOCKING CLASS CHANDLE CASE CARET BYTE BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC ASSIGN ASSERT AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS
follow(loop_statement_35) = RPAREN COMMA
follow(loop_statement_30) = SEMICOLON COMMA
follow(loop_statement) = XOR XNOR WOR WIRE WHILE WAND WAIT_ORDER WAIT VOID VIRTUAL VBAR UNSIGNED_NUMBER UNSIGNED UNIQUE UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS TASK SYSTEM_TASK_IDENTIFIER SYSTEM_FUNCTION_IDENTIFIER SVINT SUPPLY1 SUPPLY0 SUPER STRUCT STRING STATIC SPECPARAM SPECIFY SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RNMOS RETURN REPEAT RELEASE REG REF REALTIME REAL RCMOS P_XNOR P_POUNDPOUND P_NXOR P_NAND P_MINUSGT PULLUP PULLDOWN PROPERTY PROGRAM PRIORITY PRIMITIVE PMOS PLUS PLING PARAMETER OUTPUT OR OCTAL_BASE NULL NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULE MODPORT MINUS MACROMODULE LPAREN LONGINT LOGIC LOCALPARAM LCURLY JOIN_NONE JOIN_ANY JOIN INTERFACE INTEGER INPUT INOUT INITIAL IMPORT IF HEX_BASE HASH GENVAR GENERATE FUNCTION FORK FOREVER FORCE FOR FINAL EXTERN EXPORT EVENT ENUM ENDTASK ENDPROGRAM ENDMODULE ENDINTERFACE ENDGENERATE ENDCASE END ELSE DOUBLE_QUOTES DO DISABLE DEFPARAM DEFAULT DECIMAL_BASE DEASSIGN DASH_GT_GT COVER CONTINUE CONSTRAINT CONST CMOS CLOCKING CLASS CHANDLE CASEZ CASEX CASE CARET BYTE BUFIF1 BUFIF0 BUF BREAK BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT AND AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS #
follow(local_parameter_declaration_4) = SIMPLE_IDENTIFIER LBRACK BACKSLASH
follow(local_parameter_declaration) = XOR XNOR WOR WIRE WHILE WAND WAIT_ORDER WAIT VIRTUAL VBAR UNSIGNED_NUMBER UNSIGNED UNIQUE UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE TASK SYSTEM_TASK_IDENTIFIER SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SPECPARAM SPECIFY SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RNMOS RETURN REPEAT RELEASE REG REF REALTIME REAL RCMOS P_XNOR P_POUNDPOUND P_NXOR P_NAND P_MINUSGT PULLUP PULLDOWN PROPERTY PROGRAM PRIORITY PRIMITIVE PMOS PLUS PLING PARAMETER OUTPUT OR OCTAL_BASE NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULE MODPORT MINUS MACROMODULE LPAREN LONGINT LOGIC LOCALPARAM LCURLY JOIN_NONE JOIN_ANY JOIN INTERFACE INTEGER INPUT INOUT INITIAL IMPORT IF HEX_BASE HASH GENVAR GENERATE FUNCTION FORK FOREVER FORCE FOR FINAL EXTERN EXPORT EVENT ENUM ENDTASK ENDPROGRAM ENDMODULE ENDINTERFACE ENDGENERATE ENDFUNCTION ENDCASE END ELSE DOUBLE_QUOTES DO DISABLE DEFPARAM DEFAULT DECIMAL_BASE DEASSIGN DASH_GT_GT COVER CONTINUE CONSTRAINT CONST CMOS CLOCKING CLASS CHANDLE CASEZ CASEX CASE CARET BYTE BUFIF1 BUFIF0 BUF BREAK BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT AND AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS #
follow(list_of_variable_port_identifiers_5) = SEMICOLON RPAREN COMMA
follow(list_of_variable_identifiers_or_assignments) = SEMICOLON COMMA
follow(list_of_variable_identifiers_4) = SEMICOLON RPAREN COMMA
follow(list_of_variable_decl_assignments_3) = SEMICOLON COMMA
follow(list_of_variable_assignments_3) = SEMICOLON COMMA
follow(list_of_udp_port_identifiers_3) = SEMICOLON RPAREN COMMA
follow(list_of_type_assignments_3) = SEMICOLON RPAREN COMMA
follow(list_of_tf_variable_identifiers_5) = SEMICOLON RPAREN COMMA
follow(list_of_tf_port_identifiers_5_6) = SEMICOLON RPAREN LBRACK EQUALS COMMA
follow(list_of_tf_port_identifiers_5) = SEMICOLON RPAREN COMMA
follow(list_of_tf_port_identifiers_3) = SEMICOLON RPAREN LBRACK EQUALS COMMA
follow(list_of_specparam_assignments_3) = SEMICOLON COMMA
follow(list_of_ports_4) = RPAREN COMMA
follow(list_of_port_identifiers_4_6) = SEMICOLON RPAREN LBRACK COMMA
follow(list_of_port_identifiers_4) = SEMICOLON RPAREN COMMA
follow(list_of_port_identifiers_3) = SEMICOLON RPAREN LBRACK COMMA
follow(list_of_port_declarations_4) = RPAREN COMMA
follow(list_of_port_declarations) = SEMICOLON
follow(list_of_port_connections_8) = P_DOTSTAR DOT
follow(list_of_port_connections_6) = RPAREN COMMA
follow(list_of_port_connections_3) = RPAREN COMMA
follow(list_of_port_connections_10) = RPAREN COMMA
follow(list_of_port_connections) = RPAREN
follow(list_of_path_outputs_3) = SEMICOLON RPAREN PLUS MINUS COMMA COLON
follow(list_of_path_inputs_3) = P_ASTGT PLUS MINUS COMMA
follow(list_of_path_delay_expressions) = SEMICOLON RPAREN
follow(list_of_parameter_assignments_6) = RPAREN COMMA
follow(list_of_parameter_assignments_3) = RPAREN COMMA
follow(list_of_parameter_assignments) = RPAREN
follow(list_of_param_assignments_3) = SEMICOLON RPAREN COMMA
follow(list_of_net_identifiers_4_6) = SEMICOLON LBRACK COMMA
follow(list_of_net_identifiers_4) = SEMICOLON COMMA
follow(list_of_net_identifiers_3) = SEMICOLON LBRACK COMMA
follow(list_of_net_decl_assignments_3) = SEMICOLON COMMA
follow(list_of_net_assignments_3) = SEMICOLON COMMA
follow(list_of_modport_port_identifiers_3) = RPAREN COMMA
follow(list_of_interface_identifiers_4_6) = SEMICOLON RPAREN LBRACK COMMA
follow(list_of_interface_identifiers_4) = SEMICOLON RPAREN COMMA
follow(list_of_interface_identifiers_3) = SEMICOLON RPAREN LBRACK COMMA
follow(list_of_genvar_identifiers_3) = SEMICOLON COMMA
follow(list_of_function_proto_formals_2_5) = RPAREN COMMA
follow(list_of_dpi_proto_formals_2_5) = RPAREN COMMA
follow(list_of_defparam_assignments_3) = SEMICOLON COMMA
follow(list_of_constant_arguments_3) = RPAREN COMMA
follow(list_of_constant_arguments_10) = RPAREN COMMA
follow(list_of_constant_arguments) = RPAREN
follow(list_of_clocking_decl_assign_3) = SEMICOLON COMMA
follow(list_of_arguments_3) = RPAREN COMMA
follow(list_of_arguments_10) = RPAREN COMMA
follow(list_of_arguments) = RPAREN
follow(lifetime) = VOID UNSIGNED UNION TIME SVINT STRUCT STRING SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REALTIME REAL LONGINT LOGIC LBRACK INTEGER EVENT ENUM CHANDLE BYTE BIT BACKSLASH
follow(level_input_list_3) = LEVEL_SYMBOL COLON
follow(jump_statement) = XOR XNOR WOR WIRE WHILE WAND WAIT_ORDER WAIT VOID VIRTUAL VBAR UNSIGNED_NUMBER UNSIGNED UNIQUE UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS TASK SYSTEM_TASK_IDENTIFIER SYSTEM_FUNCTION_IDENTIFIER SVINT SUPPLY1 SUPPLY0 SUPER STRUCT STRING STATIC SPECPARAM SPECIFY SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RNMOS RETURN REPEAT RELEASE REG REF REALTIME REAL RCMOS P_XNOR P_POUNDPOUND P_NXOR P_NAND P_MINUSGT PULLUP PULLDOWN PROPERTY PROGRAM PRIORITY PRIMITIVE PMOS PLUS PLING PARAMETER OUTPUT OR OCTAL_BASE NULL NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULE MODPORT MINUS MACROMODULE LPAREN LONGINT LOGIC LOCALPARAM LCURLY JOIN_NONE JOIN_ANY JOIN INTERFACE INTEGER INPUT INOUT INITIAL IMPORT IF HEX_BASE HASH GENVAR GENERATE FUNCTION FORK FOREVER FORCE FOR FINAL EXTERN EXPORT EVENT ENUM ENDTASK ENDPROGRAM ENDMODULE ENDINTERFACE ENDGENERATE ENDFUNCTION ENDCASE END ELSE DOUBLE_QUOTES DO DISABLE DEFPARAM DEFAULT DECIMAL_BASE DEASSIGN DASH_GT_GT COVER CONTINUE CONSTRAINT CONST CMOS CLOCKING CLASS CHANDLE CASEZ CASEX CASE CARET BYTE BUFIF1 BUFIF0 BUF BREAK BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT AND AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS #
follow(join_keyword) = XOR XNOR WOR WIRE WHILE WAND WAIT_ORDER WAIT VOID VIRTUAL VBAR UNSIGNED_NUMBER UNSIGNED UNIQUE UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS TASK SYSTEM_TASK_IDENTIFIER SYSTEM_FUNCTION_IDENTIFIER SVINT SUPPLY1 SUPPLY0 SUPER STRUCT STRING STATIC SPECPARAM SPECIFY SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RNMOS RETURN REPEAT RELEASE REG REF REALTIME REAL RCMOS P_XNOR P_POUNDPOUND P_NXOR P_NAND P_MINUSGT PULLUP PULLDOWN PROPERTY PROGRAM PRIORITY PRIMITIVE PMOS PLUS PLING PARAMETER OUTPUT OR OCTAL_BASE NULL NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULE MODPORT MINUS MACROMODULE LPAREN LONGINT LOGIC LOCALPARAM LCURLY JOIN_NONE JOIN_ANY JOIN INTERFACE INTEGER INPUT INOUT INITIAL IMPORT IF HEX_BASE HASH GENVAR GENERATE FUNCTION FORK FOREVER FORCE FOR FINAL EXTERN EXPORT EVENT ENUM ENDTASK ENDPROGRAM ENDMODULE ENDINTERFACE ENDGENERATE ENDCASE END ELSE DOUBLE_QUOTES DO DISABLE DEFPARAM DEFAULT DECIMAL_BASE DEASSIGN DASH_GT_GT COVER CONTINUE CONSTRAINT CONST COLON CMOS CLOCKING CLASS CHANDLE CASEZ CASEX CASE CARET BYTE BUFIF1 BUFIF0 BUF BREAK BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT AND AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS #
follow(interface_port_declaration) = SEMICOLON RPAREN COMMA
follow(interface_or_generate_item) = WOR WIRE WAND VIRTUAL VBAR UNSIGNED_NUMBER UNSIGNED UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TIME TILDE_VBAR TILDE TASK SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SPECPARAM SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON REG REF REALTIME REAL P_XNOR P_NXOR P_NAND PROPERTY PROGRAM PLUS PLING PARAMETER OUTPUT OCTAL_BASE MODPORT MINUS LPAREN LONGINT LOGIC LOCALPARAM LCURLY INTERFACE INTEGER INPUT INOUT INITIAL IMPORT IF HEX_BASE GENVAR GENERATE FUNCTION FOR FINAL EXTERN EXPORT EVENT ENUM ENDINTERFACE ENDGENERATE ENDCASE END ELSE DOUBLE_QUOTES DEFAULT DECIMAL_BASE COVER CONSTRAINT CONST CLOCKING CLASS CHANDLE CASE CARET BYTE BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC ASSIGN ASSERT AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS
follow(interface_item) = WOR WIRE WAND VIRTUAL UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TIME TASK SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SPECPARAM SIMPLE_IDENTIFIER SHORTREAL SHORTINT SEQUENCE SEMICOLON REG REF REALTIME REAL PROPERTY PROGRAM PARAMETER OUTPUT MODPORT LONGINT LOGIC LOCALPARAM INTERFACE INTEGER INPUT INOUT INITIAL IMPORT GENVAR GENERATE FUNCTION FINAL EXTERN EXPORT EVENT ENUM ENDINTERFACE DEFAULT COVER CONSTRAINT CONST CLOCKING CLASS CHANDLE BYTE BIT BIND BACKSLASH AUTOMATIC ASSIGN ASSERT ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS
follow(interface_instantiation_5) = SEMICOLON COMMA
follow(interface_declaration_4) = WOR WIRE WAND VIRTUAL UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TIME TASK SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SPECPARAM SIMPLE_IDENTIFIER SHORTREAL SHORTINT SEQUENCE SEMICOLON REG REF REALTIME REAL PROPERTY PROGRAM PARAMETER OUTPUT MODPORT LONGINT LOGIC LOCALPARAM INTERFACE INTEGER INPUT INOUT INITIAL IMPORT GENVAR GENERATE FUNCTION FINAL EXTERN EXPORT EVENT ENUM ENDINTERFACE DEFAULT COVER CONSTRAINT CONST CLOCKING CLASS CHANDLE BYTE BIT BIND BACKSLASH AUTOMATIC ASSIGN ASSERT ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS
follow(interface_declaration_22) = WOR WIRE WAND VIRTUAL UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TIME TASK SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SPECPARAM SIMPLE_IDENTIFIER SHORTREAL SHORTINT SEQUENCE SEMICOLON REG REF REALTIME REAL PROPERTY PROGRAM PARAMETER OUTPUT MODPORT LONGINT LOGIC LOCALPARAM INTERFACE INTEGER INPUT INOUT INITIAL IMPORT GENVAR GENERATE FUNCTION FINAL EXTERN EXPORT EVENT ENUM ENDINTERFACE DEFAULT COVER CONSTRAINT CONST CLOCKING CLASS CHANDLE BYTE BIT BIND BACKSLASH AUTOMATIC ASSIGN ASSERT ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS
follow(interface_declaration_10) = WOR WIRE WAND VIRTUAL UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TIME TASK SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SPECPARAM SIMPLE_IDENTIFIER SHORTREAL SHORTINT SEQUENCE SEMICOLON REG REALTIME REAL PROPERTY PROGRAM PARAMETER MODPORT LONGINT LOGIC LOCALPARAM INTERFACE INTEGER INITIAL IMPORT GENVAR GENERATE FUNCTION FINAL EXTERN EXPORT EVENT ENUM ENDINTERFACE DEFAULT COVER CONSTRAINT CONST CLOCKING CLASS CHANDLE BYTE BIT BIND BACKSLASH AUTOMATIC ASSIGN ASSERT ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS
follow(interface_declaration) = WOR WIRE WHILE WAND WAIT_ORDER WAIT VIRTUAL UNIQUE UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TOKEN_PLUS_PLUS TOKEN_DASH_DASH TIME TASK SYSTEM_TASK_IDENTIFIER SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SPECPARAM SIMPLE_IDENTIFIER SHORTREAL SHORTINT SEQUENCE SEMICOLON RETURN REPEAT RELEASE REG REF REALTIME REAL P_POUNDPOUND P_MINUSGT PROPERTY PROGRAM PRIORITY PRIMITIVE PARAMETER OUTPUT MODULE MODPORT MACROMODULE LONGINT LOGIC LOCALPARAM LCURLY INTERFACE INTEGER INPUT INOUT INITIAL IMPORT IF HASH GENVAR GENERATE FUNCTION FORK FOREVER FORCE FOR FINAL EXTERN EXPORT EVENT ENUM ENDINTERFACE DO DISABLE DEFAULT DEASSIGN DASH_GT_GT COVER CONTINUE CONSTRAINT CONST CLOCKING CLASS CHANDLE CASEZ CASEX CASE BYTE BREAK BIT BIND BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS #
follow(integer_vector_type) = UNSIGNED SQUOTE SIMPLE_IDENTIFIER SIGNED SEMICOLON RPAREN RBRACK LCURLY LBRACK COMMA BACKSLASH
follow(integer_type) = UNSIGNED SQUOTE SIGNED LCURLY LBRACK
follow(integer_atom_type) = UNSIGNED SQUOTE SIMPLE_IDENTIFIER SIGNED SEMICOLON RPAREN RBRACK LCURLY LBRACK COMMA BACKSLASH
follow(input_identifier) = P_EQGT P_ASTGT P_ANDANDAND PLUS MINUS LBRACK DOLLAR COMMA
follow(input_declaration) = SEMICOLON RPAREN COMMA
follow(inout_declaration) = SEMICOLON RPAREN COMMA
follow(init_val) = SEMICOLON
follow(inc_or_dec_operator) = XOR XNOR WOR WITHIN WIRE WHILE WAND WAIT_ORDER WAIT VOID VIRTUAL VBAR_DASH_GT VBAR UNSIGNED_NUMBER UNSIGNED UNIQUE UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TOKEN_VBAR_VBAR TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_PLING_QUERY_EQUALS TOKEN_PLING_EQUALS_GT TOKEN_ONE TOKEN_NINE TOKEN_LBRACK_STAR_EQUALS TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIMES TIME TILDE_VBAR TILDE THROUGHOUT THIS TASK SYSTEM_TASK_IDENTIFIER SYSTEM_FUNCTION_IDENTIFIER SVINT SUPPLY1 SUPPLY0 SUPER STRUCT STRING STATIC SPECPARAM SPECIFY SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RPAREN RNMOS RETURN REPEAT RELEASE REG REF REALTIME REAL RCURLY RCMOS RBRACK QUERY P_XNOR P_SSRIGHT3 P_SRIGHT P_SLEFT3 P_SLEFT P_POW P_POUNDPOUND P_PLUSCOLON P_NXOR P_NOTEQUAL P_NAND P_MINUSGT P_MINUSCOLON P_LTE P_GTE P_EQUAL P_EQGT P_COLONEQ P_COLONDIV P_CASENOTEQUAL P_CASEEQUAL P_ANDAND PULLUP PULLDOWN PROPERTY PROGRAM PRIORITY PRIMITIVE PMOS PLUS PLING PARAMETER OUTPUT OR OCTAL_BASE NULL NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULO MODULE MODPORT MINUS MACROMODULE LPAREN LONGINT LOGIC LOCALPARAM LESS LCURLY LBRACK_STAR_DASH_GT LBRACK_STAR JOIN_NONE JOIN_ANY JOIN INTERSECT INTERFACE INTEGER INSIDE INPUT INOUT INITIAL IMPORT IFF IF HEX_BASE HASH GREATER GENVAR GENERATE FUNCTION FORK FOREVER FORCE FOR FINAL EXTERN EXPORT EVENT EQUALS_QUERY_EQUALS ENUM ENDTASK ENDPROGRAM ENDMODULE ENDINTERFACE ENDGENERATE ENDCASE END ELSE DOUBLE_QUOTES DO DIVIDE DIST DISABLE DEFPARAM DEFAULT DECIMAL_BASE DEASSIGN DASH_GT_GT COVER CONTINUE CONSTRAINT CONST COMMA COLON CMOS CLOCKING CLASS CHANDLE CASEZ CASEX CASE CARET BYTE BUFIF1 BUFIF0 BUF BREAK BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT AND AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS #
follow(inc_or_dec_expression) = XOR XNOR WOR WITHIN WIRE WHILE WAND WAIT_ORDER WAIT VOID VIRTUAL VBAR_DASH_GT VBAR UNSIGNED_NUMBER UNSIGNED UNIQUE UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TOKEN_VBAR_VBAR TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_PLING_QUERY_EQUALS TOKEN_PLING_EQUALS_GT TOKEN_ONE TOKEN_NINE TOKEN_LBRACK_STAR_EQUALS TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIMES TIME TILDE_VBAR TILDE THROUGHOUT THIS TASK SYSTEM_TASK_IDENTIFIER SYSTEM_FUNCTION_IDENTIFIER SVINT SUPPLY1 SUPPLY0 SUPER STRUCT STRING STATIC SPECPARAM SPECIFY SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RPAREN RNMOS RETURN REPEAT RELEASE REG REF REALTIME REAL RCURLY RCMOS RBRACK QUERY P_XNOR P_SSRIGHT3 P_SRIGHT P_SLEFT3 P_SLEFT P_POW P_POUNDPOUND P_PLUSCOLON P_NXOR P_NOTEQUAL P_NAND P_MINUSGT P_MINUSCOLON P_LTE P_GTE P_EQUAL P_EQGT P_COLONEQ P_COLONDIV P_CASENOTEQUAL P_CASEEQUAL P_ANDAND PULLUP PULLDOWN PROPERTY PROGRAM PRIORITY PRIMITIVE PMOS PLUS PLING PARAMETER OUTPUT OR OCTAL_BASE NULL NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULO MODULE MODPORT MINUS MACROMODULE LPAREN LONGINT LOGIC LOCALPARAM LESS LCURLY LBRACK_STAR_DASH_GT LBRACK_STAR JOIN_NONE JOIN_ANY JOIN INTERSECT INTERFACE INTEGER INSIDE INPUT INOUT INITIAL IMPORT IFF IF HEX_BASE HASH GREATER GENVAR GENERATE FUNCTION FORK FOREVER FORCE FOR FINAL EXTERN EXPORT EVENT EQUALS_QUERY_EQUALS ENUM ENDTASK ENDPROGRAM ENDMODULE ENDINTERFACE ENDGENERATE ENDCASE END ELSE DOUBLE_QUOTES DO DIVIDE DIST DISABLE DEFPARAM DEFAULT DECIMAL_BASE DEASSIGN DASH_GT_GT COVER CONTINUE CONSTRAINT CONST COMMA COLON CMOS CLOCKING CLASS CHANDLE CASEZ CASEX CASE CARET BYTE BUFIF1 BUFIF0 BUF BREAK BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT AND AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS #
follow(import_export) = TASK SIMPLE_IDENTIFIER FUNCTION BACKSLASH
follow(implicit_class_handle) = SIMPLE_IDENTIFIER BACKSLASH
follow(if_else_if_statement_8) = XOR XNOR WOR WIRE WHILE WAND WAIT_ORDER WAIT VOID VIRTUAL VBAR UNSIGNED_NUMBER UNSIGNED UNIQUE UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS TASK SYSTEM_TASK_IDENTIFIER SYSTEM_FUNCTION_IDENTIFIER SVINT SUPPLY1 SUPPLY0 SUPER STRUCT STRING STATIC SPECPARAM SPECIFY SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RNMOS RETURN REPEAT RELEASE REG REF REALTIME REAL RCMOS P_XNOR P_POUNDPOUND P_NXOR P_NAND P_MINUSGT PULLUP PULLDOWN PROPERTY PROGRAM PRIORITY PRIMITIVE PMOS PLUS PLING PARAMETER OUTPUT OR OCTAL_BASE NULL NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULE MODPORT MINUS MACROMODULE LPAREN LONGINT LOGIC LOCALPARAM LCURLY JOIN_NONE JOIN_ANY JOIN INTERFACE INTEGER INPUT INOUT INITIAL IMPORT IF HEX_BASE HASH GENVAR GENERATE FUNCTION FORK FOREVER FORCE FOR FINAL EXTERN EXPORT EVENT ENUM ENDTASK ENDPROGRAM ENDMODULE ENDINTERFACE ENDGENERATE ENDCASE END ELSE DOUBLE_QUOTES DO DISABLE DEFPARAM DEFAULT DECIMAL_BASE DEASSIGN DASH_GT_GT COVER CONTINUE CONSTRAINT CONST CMOS CLOCKING CLASS CHANDLE CASEZ CASEX CASE CARET BYTE BUFIF1 BUFIF0 BUF BREAK BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT AND AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS #
follow(identifier_list_3) = SEMICOLON COMMA BEFORE
follow(identifier) = XOR XNOR WOR WITHIN WIRE WHILE WAND WAIT_ORDER WAIT VOID VIRTUAL VBAR_DASH_GT VBAR UNSIGNED_NUMBER UNSIGNED UNIQUE UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TOKEN_VBAR_VBAR TOKEN_VBAR_EQUALS TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_PLING_QUERY_EQUALS TOKEN_PLING_EQUALS_GT TOKEN_ONE TOKEN_NINE TOKEN_LBRACK_STAR_EQUALS TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIMES TIME TILDE_VBAR TILDE THROUGHOUT THIS TASK SYSTEM_TASK_IDENTIFIER SYSTEM_FUNCTION_IDENTIFIER SVINT SUPPLY1 SUPPLY0 SUPER STRUCT STRING STATIC SQUOTE SPECPARAM SPECIFY SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RPAREN RNMOS RETURN REPEAT RELEASE REG REF REALTIME REAL RCURLY RCMOS RBRACK RANDC RAND QUERY P_XOREQ P_XNOR P_TIMESEQ P_SSRIGHT3EQ P_SSRIGHT3 P_SRIGHTEQ P_SRIGHT P_SLEFTEQ P_SLEFT3EQ P_SLEFT3 P_SLEFT P_POW P_POUNDPOUND P_PLUSEQ P_PLUSCOLON P_NXOR P_NOTEQUAL P_NAND P_MODEQ P_MINUSGT P_MINUSEQ P_MINUSCOLON P_LTE P_GTE P_EQUAL P_EQGT P_DIVEQ P_COLONEQ P_COLONDIV P_COLONCOLON P_CASENOTEQUAL P_CASEEQUAL P_ASTGT P_ANDEQ P_ANDANDAND P_ANDAND PULLUP PULLDOWN PROTECTED PROPERTY PROGRAM PRIORITY PRIMITIVE PMOS PLUS PLING PARAMETER OUTPUT OR OCTAL_BASE NULL NOTIF1 NOTIF0 NOT NOR NMOS NAND NAME_OF_UDP_INSTANCE MODULO MODULE MODPORT MINUS MACROMODULE LPAREN LONGINT LOGIC LOCALPARAM LOCAL LESS LCURLY LBRACK_STAR_DASH_GT LBRACK_STAR LBRACK JOIN_NONE JOIN_ANY JOIN INTERSECT INTERFACE INTEGER INSIDE INPUT INOUT INITIAL IMPORT IFF IF HEX_BASE HASH GREATER GENVAR GENERATE FUNCTION FORK FOREVER FORCE FOR FIRST_MATCH FINAL EXTERN EXTENDS EXPORT EVENT EQUALS_QUERY_EQUALS EQUALS ENUM ENDTASK ENDPROGRAM ENDMODULE ENDINTERFACE ENDGENERATE ENDFUNCTION ENDCLOCKING ENDCLASS ENDCASE END ELSE DOUBLE_QUOTES DOT DOLLAR DO DIVIDE DIST DISABLE DEFPARAM DEFAULT DECIMAL_BASE DEASSIGN DASH_GT_GT COVER CONTINUE CONSTRAINT CONST COMMA COLON CMOS CLOCKING CLASS CHANDLE CASEZ CASEX CASE CARET BYTE BUFIF1 BUFIF0 BUF BREAK BIT BIND BINARY_BASE BEGIN BEFORE BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT AND AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS #
follow(hierarchical_identifier) = XOR XNOR WOR WITHIN WIRE WHILE WAND WAIT_ORDER WAIT VOID VIRTUAL VBAR_DASH_GT VBAR UNSIGNED_NUMBER UNSIGNED UNIQUE UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TOKEN_VBAR_VBAR TOKEN_VBAR_EQUALS TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_PLING_QUERY_EQUALS TOKEN_PLING_EQUALS_GT TOKEN_ONE TOKEN_NINE TOKEN_LBRACK_STAR_EQUALS TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIMES TIME TILDE_VBAR TILDE THROUGHOUT THIS TASK SYSTEM_TASK_IDENTIFIER SYSTEM_FUNCTION_IDENTIFIER SVINT SUPPLY1 SUPPLY0 SUPER STRUCT STRING STATIC SPECPARAM SPECIFY SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RPAREN RNMOS RETURN REPEAT RELEASE REG REF REALTIME REAL RCURLY RCMOS RBRACK QUERY P_XOREQ P_XNOR P_TIMESEQ P_SSRIGHT3EQ P_SSRIGHT3 P_SRIGHTEQ P_SRIGHT P_SLEFTEQ P_SLEFT3EQ P_SLEFT3 P_SLEFT P_POW P_POUNDPOUND P_PLUSEQ P_PLUSCOLON P_NXOR P_NOTEQUAL P_NAND P_MODEQ P_MINUSGT P_MINUSEQ P_MINUSCOLON P_LTE P_GTE P_EQUAL P_EQGT P_DIVEQ P_COLONEQ P_COLONDIV P_CASENOTEQUAL P_CASEEQUAL P_ANDEQ P_ANDAND PULLUP PULLDOWN PROPERTY PROGRAM PRIORITY PRIMITIVE PMOS PLUS PLING PARAMETER OUTPUT OR OCTAL_BASE NULL NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULO MODULE MODPORT MINUS MACROMODULE LPAREN LONGINT LOGIC LOCALPARAM LESS LCURLY LBRACK_STAR_DASH_GT LBRACK_STAR LBRACK JOIN_NONE JOIN_ANY JOIN INTERSECT INTERFACE INTEGER INSIDE INPUT INOUT INITIAL IMPORT IFF IF HEX_BASE HASH GREATER GENVAR GENERATE FUNCTION FORK FOREVER FORCE FOR FINAL EXTERN EXPORT EVENT EQUALS_QUERY_EQUALS EQUALS ENUM ENDTASK ENDPROGRAM ENDMODULE ENDINTERFACE ENDGENERATE ENDCASE END ELSE DOUBLE_QUOTES DOT DO DIVIDE DIST DISABLE DEFPARAM DEFAULT DECIMAL_BASE DEASSIGN DASH_GT_GT COVER CONTINUE CONSTRAINT CONST COMMA COLON CMOS CLOCKING CLASS CHANDLE CASEZ CASEX CASE CARET BYTE BUFIF1 BUFIF0 BUF BREAK BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT AND AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS #
follow(hex_value_3) = XOR XNOR WOR WITHIN WIRE WHILE WAND WAIT_ORDER WAIT VOID VIRTUAL VBAR_DASH_GT VBAR UNSIGNED_NUMBER UNSIGNED UNIQUE UNION UNDERSCORE TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TOKEN_VBAR_VBAR TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_PLING_QUERY_EQUALS TOKEN_PLING_EQUALS_GT TOKEN_ONE TOKEN_NINE TOKEN_LBRACK_STAR_EQUALS TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIMES TIME TILDE_VBAR TILDE THROUGHOUT THIS TASK SYSTEM_TASK_IDENTIFIER SYSTEM_FUNCTION_IDENTIFIER SVINT SUPPLY1 SUPPLY0 SUPER STRUCT STRING STATIC SQUOTE SPECPARAM SPECIFY SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RPAREN RNMOS RETURN REPEAT RELEASE REG REF REALTIME REAL RCURLY RCMOS RBRACK QUERY P_XNOR P_SSRIGHT3 P_SRIGHT P_SLEFT3 P_SLEFT P_POW P_POUNDPOUND P_PLUSCOLON P_NXOR P_NOTEQUAL P_NAND P_MINUSGT P_MINUSCOLON P_LTE P_GTE P_EQUAL P_EQGT P_COLONEQ P_COLONDIV P_CASENOTEQUAL P_CASEEQUAL P_ANDAND PULLUP PULLDOWN PROPERTY PROGRAM PRIORITY PRIMITIVE PMOS PLUS PLING PARAMETER OUTPUT OR OCTAL_BASE NULL NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULO MODULE MODPORT MINUS MACROMODULE LPAREN LONGINT LOGIC LOCALPARAM LESS LCURLY LBRACK_STAR_DASH_GT LBRACK_STAR JOIN_NONE JOIN_ANY JOIN INTERSECT INTERFACE INTEGER INSIDE INPUT INOUT INITIAL IMPORT IFF IF HEX_BASE HASH GREATER GENVAR GENERATE FUNCTION FORK FOREVER FORCE FOR FIRST_MATCH FINAL EXTERN EXPORT EVENT EQUALS_QUERY_EQUALS ENUM ENDTASK ENDPROGRAM ENDMODULE ENDINTERFACE ENDGENERATE ENDCASE END ELSE DOUBLE_QUOTES DO DIVIDE DIST DISABLE DEFPARAM DEFAULT DECIMAL_BASE DEASSIGN DASH_GT_GT COVER CONTINUE CONSTRAINT CONST COMMA COLON CMOS CLOCKING CLASS CHANDLE CASEZ CASEX CASE CARET BYTE BUFIF1 BUFIF0 BUF BREAK BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT AND AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS #
follow(genvar_module_case_item_3) = COMMA COLON
follow(genvar_module_case_item) = VBAR UNSIGNED_NUMBER UNSIGNED TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TIME TILDE_VBAR TILDE SVINT SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REALTIME REAL P_XNOR P_NXOR P_NAND PLUS PLING OCTAL_BASE MINUS LPAREN LONGINT LOGIC LCURLY INTEGER HEX_BASE ENDCASE DOUBLE_QUOTES DEFAULT DECIMAL_BASE CARET BYTE BIT BINARY_BASE BACKSLASH AMPERSAND
follow(genvar_interface_case_item_3) = COMMA COLON
follow(genvar_interface_case_item) = VBAR UNSIGNED_NUMBER UNSIGNED TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TIME TILDE_VBAR TILDE SVINT SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REALTIME REAL P_XNOR P_NXOR P_NAND PLUS PLING OCTAL_BASE MINUS LPAREN LONGINT LOGIC LCURLY INTEGER HEX_BASE ENDCASE DOUBLE_QUOTES DEFAULT DECIMAL_BASE CARET BYTE BIT BINARY_BASE BACKSLASH AMPERSAND
follow(genvar_assignment) = RPAREN
follow(generic_interface_port_declaration) = SEMICOLON RPAREN COMMA
follow(generated_module_instantiation_3) = XOR XNOR WOR WIRE WAND UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TIME TASK SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SIMPLE_IDENTIFIER SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RNMOS REG REALTIME REAL RCMOS PULLUP PULLDOWN PROPERTY PMOS OR NOTIF1 NOTIF0 NOT NOR NMOS NAND LONGINT LOGIC INTEGER INITIAL IMPORT IF GENVAR FUNCTION FOR FINAL EXPORT EVENT ENUM ENDGENERATE DEFPARAM DEFAULT COVER CONSTRAINT CONST CMOS CLOCKING CHANDLE CASE BYTE BUFIF1 BUFIF0 BUF BIT BIND BEGIN BACKSLASH AUTOMATIC ASSIGN ASSERT AND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS
follow(generated_interface_instantiation_3) = WOR WIRE WAND UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TIME TASK SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SIMPLE_IDENTIFIER SHORTREAL SHORTINT SEQUENCE SEMICOLON REG REALTIME REAL PROPERTY PARAMETER MODPORT LONGINT LOGIC LOCALPARAM INTEGER INITIAL IMPORT IF GENVAR FUNCTION FOR FINAL EXTERN EXPORT EVENT ENUM ENDGENERATE DEFAULT COVER CONSTRAINT CONST CLOCKING CHANDLE CASE BYTE BIT BIND BEGIN BACKSLASH AUTOMATIC ASSIGN ASSERT ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS
follow(generate_module_named_block_5) = XOR XNOR WOR WIRE WAND UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TIME TASK SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SIMPLE_IDENTIFIER SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RNMOS REG REALTIME REAL RCMOS PULLUP PULLDOWN PROPERTY PMOS OR NOTIF1 NOTIF0 NOT NOR NMOS NAND LONGINT LOGIC INTEGER INITIAL IMPORT IF GENVAR FUNCTION FOR FINAL EXPORT EVENT ENUM END DEFPARAM DEFAULT COVER CONSTRAINT CONST CMOS CLOCKING CHANDLE CASE BYTE BUFIF1 BUFIF0 BUF BIT BIND BEGIN BACKSLASH AUTOMATIC ASSIGN ASSERT AND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS
follow(generate_module_named_block) = XOR XNOR WOR WIRE WAND VBAR UNSIGNED_NUMBER UNSIGNED UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TIME TILDE_VBAR TILDE TASK SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RNMOS REG REALTIME REAL RCMOS P_XNOR P_NXOR P_NAND PULLUP PULLDOWN PROPERTY PMOS PLUS PLING OR OCTAL_BASE NOTIF1 NOTIF0 NOT NOR NMOS NAND MINUS LPAREN LONGINT LOGIC LCURLY INTEGER INITIAL IMPORT IF HEX_BASE GENVAR FUNCTION FOR FINAL EXPORT EVENT ENUM ENDGENERATE ENDCASE END ELSE DOUBLE_QUOTES DEFPARAM DEFAULT DECIMAL_BASE COVER CONSTRAINT CONST CMOS CLOCKING CHANDLE CASE CARET BYTE BUFIF1 BUFIF0 BUF BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC ASSIGN ASSERT AND AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS
follow(generate_module_item) = XOR XNOR WOR WIRE WAND VBAR UNSIGNED_NUMBER UNSIGNED UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TIME TILDE_VBAR TILDE TASK SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RNMOS REG REALTIME REAL RCMOS P_XNOR P_NXOR P_NAND PULLUP PULLDOWN PROPERTY PMOS PLUS PLING OR OCTAL_BASE NOTIF1 NOTIF0 NOT NOR NMOS NAND MINUS LPAREN LONGINT LOGIC LCURLY INTEGER INITIAL IMPORT IF HEX_BASE GENVAR FUNCTION FOR FINAL EXPORT EVENT ENUM ENDGENERATE ENDCASE END ELSE DOUBLE_QUOTES DEFPARAM DEFAULT DECIMAL_BASE COVER CONSTRAINT CONST CMOS CLOCKING CHANDLE CASE CARET BYTE BUFIF1 BUFIF0 BUF BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC ASSIGN ASSERT AND AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS
follow(generate_module_case_statement_7) = VBAR UNSIGNED_NUMBER UNSIGNED TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TIME TILDE_VBAR TILDE SVINT SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REALTIME REAL P_XNOR P_NXOR P_NAND PLUS PLING OCTAL_BASE MINUS LPAREN LONGINT LOGIC LCURLY INTEGER HEX_BASE ENDCASE DOUBLE_QUOTES DEFAULT DECIMAL_BASE CARET BYTE BIT BINARY_BASE BACKSLASH AMPERSAND
follow(generate_module_block_4) = XOR XNOR WOR WIRE WAND UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TIME TASK SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SIMPLE_IDENTIFIER SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RNMOS REG REALTIME REAL RCMOS PULLUP PULLDOWN PROPERTY PMOS OR NOTIF1 NOTIF0 NOT NOR NMOS NAND LONGINT LOGIC INTEGER INITIAL IMPORT IF GENVAR FUNCTION FOR FINAL EXPORT EVENT ENUM END DEFPARAM DEFAULT COVER CONSTRAINT CONST CMOS CLOCKING CHANDLE CASE BYTE BUFIF1 BUFIF0 BUF BIT BIND BEGIN BACKSLASH AUTOMATIC ASSIGN ASSERT AND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS
follow(generate_interface_named_block_5) = WOR WIRE WAND UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TIME TASK SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SIMPLE_IDENTIFIER SHORTREAL SHORTINT SEQUENCE SEMICOLON REG REALTIME REAL PROPERTY PARAMETER MODPORT LONGINT LOGIC LOCALPARAM INTEGER INITIAL IMPORT IF GENVAR FUNCTION FOR FINAL EXTERN EXPORT EVENT ENUM END DEFAULT COVER CONSTRAINT CONST CLOCKING CHANDLE CASE BYTE BIT BIND BEGIN BACKSLASH AUTOMATIC ASSIGN ASSERT ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS
follow(generate_interface_named_block) = WOR WIRE WAND VBAR UNSIGNED_NUMBER UNSIGNED UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TIME TILDE_VBAR TILDE TASK SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON REG REALTIME REAL P_XNOR P_NXOR P_NAND PROPERTY PLUS PLING PARAMETER OCTAL_BASE MODPORT MINUS LPAREN LONGINT LOGIC LOCALPARAM LCURLY INTEGER INITIAL IMPORT IF HEX_BASE GENVAR FUNCTION FOR FINAL EXTERN EXPORT EVENT ENUM ENDGENERATE ENDCASE END ELSE DOUBLE_QUOTES DEFAULT DECIMAL_BASE COVER CONSTRAINT CONST CLOCKING CHANDLE CASE CARET BYTE BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC ASSIGN ASSERT AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS
follow(generate_interface_item) = WOR WIRE WAND VBAR UNSIGNED_NUMBER UNSIGNED UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TIME TILDE_VBAR TILDE TASK SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON REG REALTIME REAL P_XNOR P_NXOR P_NAND PROPERTY PLUS PLING PARAMETER OCTAL_BASE MODPORT MINUS LPAREN LONGINT LOGIC LOCALPARAM LCURLY INTEGER INITIAL IMPORT IF HEX_BASE GENVAR FUNCTION FOR FINAL EXTERN EXPORT EVENT ENUM ENDGENERATE ENDCASE END ELSE DOUBLE_QUOTES DEFAULT DECIMAL_BASE COVER CONSTRAINT CONST CLOCKING CHANDLE CASE CARET BYTE BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC ASSIGN ASSERT AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS
follow(generate_interface_case_statement_7) = VBAR UNSIGNED_NUMBER UNSIGNED TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TIME TILDE_VBAR TILDE SVINT SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REALTIME REAL P_XNOR P_NXOR P_NAND PLUS PLING OCTAL_BASE MINUS LPAREN LONGINT LOGIC LCURLY INTEGER HEX_BASE ENDCASE DOUBLE_QUOTES DEFAULT DECIMAL_BASE CARET BYTE BIT BINARY_BASE BACKSLASH AMPERSAND
follow(generate_interface_block_4) = WOR WIRE WAND UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TIME TASK SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SIMPLE_IDENTIFIER SHORTREAL SHORTINT SEQUENCE SEMICOLON REG REALTIME REAL PROPERTY PARAMETER MODPORT LONGINT LOGIC LOCALPARAM INTEGER INITIAL IMPORT IF GENVAR FUNCTION FOR FINAL EXTERN EXPORT EVENT ENUM END DEFAULT COVER CONSTRAINT CONST CLOCKING CHANDLE CASE BYTE BIT BIND BEGIN BACKSLASH AUTOMATIC ASSIGN ASSERT ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS
follow(gate_instantiation_55) = SEMICOLON COMMA
follow(gate_instantiation_5) = SEMICOLON COMMA
follow(gate_instantiation_49) = SEMICOLON COMMA
follow(gate_instantiation_43) = SEMICOLON COMMA
follow(gate_instantiation_38) = SEMICOLON COMMA
follow(gate_instantiation_32) = SEMICOLON COMMA
follow(gate_instantiation_25) = SEMICOLON COMMA
follow(gate_instantiation_18) = SEMICOLON COMMA
follow(gate_instantiation_12) = SEMICOLON COMMA
follow(gate_instantiation) = XOR XNOR WOR WIRE WAND VIRTUAL VBAR UNSIGNED_NUMBER UNSIGNED UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TIME TILDE_VBAR TILDE TASK SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SPECPARAM SPECIFY SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RNMOS REG REF REALTIME REAL RCMOS P_XNOR P_NXOR P_NAND PULLUP PULLDOWN PROPERTY PMOS PLUS PLING PARAMETER OUTPUT OR OCTAL_BASE NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULE MINUS MACROMODULE LPAREN LONGINT LOGIC LOCALPARAM LCURLY INTEGER INPUT INOUT INITIAL IMPORT IF HEX_BASE GENVAR GENERATE FUNCTION FOR FINAL EXTERN EXPORT EVENT ENUM ENDMODULE ENDGENERATE ENDCASE END ELSE DOUBLE_QUOTES DEFPARAM DEFAULT DECIMAL_BASE COVER CONSTRAINT CONST CMOS CLOCKING CLASS CHANDLE CASE CARET BYTE BUFIF1 BUFIF0 BUF BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC ASSIGN ASSERT AND AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS
follow(function_statement_or_null) = XOR XNOR WOR WIRE WHILE WAND VOID VIRTUAL VBAR UNSIGNED_NUMBER UNSIGNED UNIQUE UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS TASK SYSTEM_TASK_IDENTIFIER SYSTEM_FUNCTION_IDENTIFIER SVINT SUPPLY1 SUPPLY0 SUPER STRUCT STRING STATIC SPECPARAM SPECIFY SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RNMOS RETURN REPEAT REG REF REALTIME REAL RCMOS P_XNOR P_NXOR P_NAND PULLUP PULLDOWN PROPERTY PROGRAM PRIORITY PMOS PLUS PLING PARAMETER OUTPUT OR OCTAL_BASE NULL NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULE MODPORT MINUS MACROMODULE LPAREN LONGINT LOGIC LOCALPARAM LCURLY INTERFACE INTEGER INPUT INOUT INITIAL IMPORT IF HEX_BASE GENVAR GENERATE FUNCTION FOREVER FOR FINAL EXTERN EXPORT EVENT ENUM ENDMODULE ENDINTERFACE ENDGENERATE ENDFUNCTION ENDCASE END ELSE DOUBLE_QUOTES DO DISABLE DEFPARAM DEFAULT DECIMAL_BASE COVER CONTINUE CONSTRAINT CONST CMOS CLOCKING CLASS CHANDLE CASEZ CASEX CASE CARET BYTE BUFIF1 BUFIF0 BUF BREAK BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC ASSIGN ASSERT AND AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS
follow(function_statement_item) = XOR XNOR WOR WIRE WHILE WAND VOID VIRTUAL VBAR UNSIGNED_NUMBER UNSIGNED UNIQUE UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS TASK SYSTEM_TASK_IDENTIFIER SYSTEM_FUNCTION_IDENTIFIER SVINT SUPPLY1 SUPPLY0 SUPER STRUCT STRING STATIC SPECPARAM SPECIFY SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RNMOS RETURN REPEAT REG REF REALTIME REAL RCMOS P_XNOR P_NXOR P_NAND PULLUP PULLDOWN PROPERTY PROGRAM PRIORITY PMOS PLUS PLING PARAMETER OUTPUT OR OCTAL_BASE NULL NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULE MODPORT MINUS MACROMODULE LPAREN LONGINT LOGIC LOCALPARAM LCURLY INTERFACE INTEGER INPUT INOUT INITIAL IMPORT IF HEX_BASE GENVAR GENERATE FUNCTION FOREVER FOR FINAL EXTERN EXPORT EVENT ENUM ENDMODULE ENDINTERFACE ENDGENERATE ENDFUNCTION ENDCASE END ELSE DOUBLE_QUOTES DO DISABLE DEFPARAM DEFAULT DECIMAL_BASE COVER CONTINUE CONSTRAINT CONST CMOS CLOCKING CLASS CHANDLE CASEZ CASEX CASE CARET BYTE BUFIF1 BUFIF0 BUF BREAK BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC ASSIGN ASSERT AND AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS
follow(function_seq_block_4) = WHILE UNIQUE TOKEN_PLUS_PLUS TOKEN_DASH_DASH SYSTEM_TASK_IDENTIFIER SIMPLE_IDENTIFIER SEMICOLON RETURN REPEAT PRIORITY LCURLY IF FOREVER FOR END DO DISABLE CONTINUE CASEZ CASEX CASE BREAK BEGIN BACKSLASH
follow(function_seq_block_3_5) = WHILE UNIQUE UNION TYPEDEF TOKEN_PLUS_PLUS TOKEN_DASH_DASH TIME SYSTEM_TASK_IDENTIFIER SVINT STRUCT STRING STATIC SIMPLE_IDENTIFIER SHORTREAL SHORTINT SEMICOLON RETURN REPEAT REG REALTIME REAL PRIORITY PARAMETER LONGINT LOGIC LOCALPARAM LCURLY INTEGER IF FOREVER FOR EVENT ENUM END DO DISABLE CONTINUE CONST CHANDLE CASEZ CASEX CASE BYTE BREAK BIT BEGIN BACKSLASH AUTOMATIC
follow(function_proto_formal) = RPAREN COMMA
follow(function_port_list_3) = RPAREN COMMA
follow(function_port_item) = RPAREN COMMA
follow(function_loop_statement_25) = RPAREN COMMA
follow(function_loop_statement_20) = SEMICOLON COMMA
follow(function_loop_statement) = XOR XNOR WOR WIRE WHILE WAND VOID VIRTUAL VBAR UNSIGNED_NUMBER UNSIGNED UNIQUE UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS TASK SYSTEM_TASK_IDENTIFIER SYSTEM_FUNCTION_IDENTIFIER SVINT SUPPLY1 SUPPLY0 SUPER STRUCT STRING STATIC SPECPARAM SPECIFY SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RNMOS RETURN REPEAT REG REF REALTIME REAL RCMOS P_XNOR P_NXOR P_NAND PULLUP PULLDOWN PROPERTY PROGRAM PRIORITY PMOS PLUS PLING PARAMETER OUTPUT OR OCTAL_BASE NULL NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULE MODPORT MINUS MACROMODULE LPAREN LONGINT LOGIC LOCALPARAM LCURLY INTERFACE INTEGER INPUT INOUT INITIAL IMPORT IF HEX_BASE GENVAR GENERATE FUNCTION FOREVER FOR FINAL EXTERN EXPORT EVENT ENUM ENDMODULE ENDINTERFACE ENDGENERATE ENDFUNCTION ENDCASE END ELSE DOUBLE_QUOTES DO DISABLE DEFPARAM DEFAULT DECIMAL_BASE COVER CONTINUE CONSTRAINT CONST CMOS CLOCKING CLASS CHANDLE CASEZ CASEX CASE CARET BYTE BUFIF1 BUFIF0 BUF BREAK BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC ASSIGN ASSERT AND AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS
follow(function_item_declaration) = WHILE UNIQUE UNION TYPEDEF TOKEN_PLUS_PLUS TOKEN_DASH_DASH TIME SYSTEM_TASK_IDENTIFIER SVINT STRUCT STRING STATIC SIMPLE_IDENTIFIER SHORTREAL SHORTINT SEMICOLON RETURN REPEAT REG REF REALTIME REAL PRIORITY PARAMETER OUTPUT LONGINT LOGIC LOCALPARAM LCURLY INTEGER INPUT INOUT IF FOREVER FOR EVENT ENUM ENDFUNCTION DO DISABLE CONTINUE CONST CHANDLE CASEZ CASEX CASE BYTE BREAK BIT BEGIN BACKSLASH AUTOMATIC
follow(function_if_else_if_statement_8) = XOR XNOR WOR WIRE WHILE WAND VOID VIRTUAL VBAR UNSIGNED_NUMBER UNSIGNED UNIQUE UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS TASK SYSTEM_TASK_IDENTIFIER SYSTEM_FUNCTION_IDENTIFIER SVINT SUPPLY1 SUPPLY0 SUPER STRUCT STRING STATIC SPECPARAM SPECIFY SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RNMOS RETURN REPEAT REG REF REALTIME REAL RCMOS P_XNOR P_NXOR P_NAND PULLUP PULLDOWN PROPERTY PROGRAM PRIORITY PMOS PLUS PLING PARAMETER OUTPUT OR OCTAL_BASE NULL NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULE MODPORT MINUS MACROMODULE LPAREN LONGINT LOGIC LOCALPARAM LCURLY INTERFACE INTEGER INPUT INOUT INITIAL IMPORT IF HEX_BASE GENVAR GENERATE FUNCTION FOREVER FOR FINAL EXTERN EXPORT EVENT ENUM ENDMODULE ENDINTERFACE ENDGENERATE ENDFUNCTION ENDCASE END ELSE DOUBLE_QUOTES DO DISABLE DEFPARAM DEFAULT DECIMAL_BASE COVER CONTINUE CONSTRAINT CONST CMOS CLOCKING CLASS CHANDLE CASEZ CASEX CASE CARET BYTE BUFIF1 BUFIF0 BUF BREAK BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC ASSIGN ASSERT AND AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS
follow(function_data_type_9) = SIMPLE_IDENTIFIER LBRACK BACKSLASH
follow(function_data_type_32) = RCURLY COMMA
follow(function_data_type_3) = SIMPLE_IDENTIFIER LBRACK BACKSLASH
follow(function_data_type_28_4) = LCURLY LBRACK
follow(function_data_type_25) = SIMPLE_IDENTIFIER LBRACK BACKSLASH
follow(function_data_type_23) = UNION TIME SVINT STRUCT STRING SIMPLE_IDENTIFIER SHORTREAL SHORTINT REG REALTIME REAL RCURLY LONGINT LOGIC INTEGER EVENT ENUM CHANDLE BYTE BIT BACKSLASH
follow(function_data_type_18) = SIMPLE_IDENTIFIER LBRACK BACKSLASH
follow(function_data_type_16) = UNION TIME SVINT STRUCT STRING SIMPLE_IDENTIFIER SHORTREAL SHORTINT REG REALTIME REAL RCURLY LONGINT LOGIC INTEGER EVENT ENUM CHANDLE BYTE BIT BACKSLASH
follow(function_data_type) = SIMPLE_IDENTIFIER BACKSLASH
follow(function_conditional_statement) = XOR XNOR WOR WIRE WHILE WAND VOID VIRTUAL VBAR UNSIGNED_NUMBER UNSIGNED UNIQUE UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS TASK SYSTEM_TASK_IDENTIFIER SYSTEM_FUNCTION_IDENTIFIER SVINT SUPPLY1 SUPPLY0 SUPER STRUCT STRING STATIC SPECPARAM SPECIFY SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RNMOS RETURN REPEAT REG REF REALTIME REAL RCMOS P_XNOR P_NXOR P_NAND PULLUP PULLDOWN PROPERTY PROGRAM PRIORITY PMOS PLUS PLING PARAMETER OUTPUT OR OCTAL_BASE NULL NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULE MODPORT MINUS MACROMODULE LPAREN LONGINT LOGIC LOCALPARAM LCURLY INTERFACE INTEGER INPUT INOUT INITIAL IMPORT IF HEX_BASE GENVAR GENERATE FUNCTION FOREVER FOR FINAL EXTERN EXPORT EVENT ENUM ENDMODULE ENDINTERFACE ENDGENERATE ENDFUNCTION ENDCASE END ELSE DOUBLE_QUOTES DO DISABLE DEFPARAM DEFAULT DECIMAL_BASE COVER CONTINUE CONSTRAINT CONST CMOS CLOCKING CLASS CHANDLE CASEZ CASEX CASE CARET BYTE BUFIF1 BUFIF0 BUF BREAK BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC ASSIGN ASSERT AND AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS
follow(function_case_statement_8) = VOID VBAR UNSIGNED_NUMBER UNSIGNED TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS SYSTEM_FUNCTION_IDENTIFIER SVINT SUPER SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REALTIME REAL P_XNOR P_NXOR P_NAND PLUS PLING OCTAL_BASE NULL MINUS LPAREN LONGINT LOGIC LCURLY INTEGER HEX_BASE ENDCASE DOUBLE_QUOTES DEFAULT DECIMAL_BASE CARET BYTE BIT BINARY_BASE BACKSLASH AMPERSAND
follow(function_case_statement_26) = VOID VBAR UNSIGNED_NUMBER UNSIGNED TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS SYSTEM_FUNCTION_IDENTIFIER SVINT SUPER SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REALTIME REAL P_XNOR P_NXOR P_NAND PLUS PLING OCTAL_BASE NULL MINUS LPAREN LONGINT LOGIC LCURLY INTEGER HEX_BASE ENDCASE DOUBLE_QUOTES DEFAULT DECIMAL_BASE CARET BYTE BIT BINARY_BASE BACKSLASH AMPERSAND
follow(function_case_statement_17) = VOID VBAR UNSIGNED_NUMBER UNSIGNED TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS SYSTEM_FUNCTION_IDENTIFIER SVINT SUPER SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REALTIME REAL P_XNOR P_NXOR P_NAND PLUS PLING OCTAL_BASE NULL MINUS LPAREN LONGINT LOGIC LCURLY INTEGER HEX_BASE ENDCASE DOUBLE_QUOTES DEFAULT DECIMAL_BASE CARET BYTE BIT BINARY_BASE BACKSLASH AMPERSAND
follow(function_case_statement) = XOR XNOR WOR WIRE WHILE WAND VOID VIRTUAL VBAR UNSIGNED_NUMBER UNSIGNED UNIQUE UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS TASK SYSTEM_TASK_IDENTIFIER SYSTEM_FUNCTION_IDENTIFIER SVINT SUPPLY1 SUPPLY0 SUPER STRUCT STRING STATIC SPECPARAM SPECIFY SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RNMOS RETURN REPEAT REG REF REALTIME REAL RCMOS P_XNOR P_NXOR P_NAND PULLUP PULLDOWN PROPERTY PROGRAM PRIORITY PMOS PLUS PLING PARAMETER OUTPUT OR OCTAL_BASE NULL NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULE MODPORT MINUS MACROMODULE LPAREN LONGINT LOGIC LOCALPARAM LCURLY INTERFACE INTEGER INPUT INOUT INITIAL IMPORT IF HEX_BASE GENVAR GENERATE FUNCTION FOREVER FOR FINAL EXTERN EXPORT EVENT ENUM ENDMODULE ENDINTERFACE ENDGENERATE ENDFUNCTION ENDCASE END ELSE DOUBLE_QUOTES DO DISABLE DEFPARAM DEFAULT DECIMAL_BASE COVER CONTINUE CONSTRAINT CONST CMOS CLOCKING CLASS CHANDLE CASEZ CASEX CASE CARET BYTE BUFIF1 BUFIF0 BUF BREAK BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC ASSIGN ASSERT AND AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS
follow(function_case_item_3) = COMMA COLON
follow(function_case_item) = VOID VBAR UNSIGNED_NUMBER UNSIGNED TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS SYSTEM_FUNCTION_IDENTIFIER SVINT SUPER SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REALTIME REAL P_XNOR P_NXOR P_NAND PLUS PLING OCTAL_BASE NULL MINUS LPAREN LONGINT LOGIC LCURLY INTEGER HEX_BASE ENDCASE DOUBLE_QUOTES DEFAULT DECIMAL_BASE CARET BYTE BIT BINARY_BASE BACKSLASH AMPERSAND
follow(function_body_declaration_8) = WHILE UNIQUE TOKEN_PLUS_PLUS TOKEN_DASH_DASH SYSTEM_TASK_IDENTIFIER SIMPLE_IDENTIFIER SEMICOLON RETURN REPEAT PRIORITY LCURLY IF FOREVER FOR ENDFUNCTION DO DISABLE CONTINUE CASEZ CASEX CASE BREAK BEGIN BACKSLASH
follow(function_body_declaration_7) = WHILE UNIQUE UNION TYPEDEF TOKEN_PLUS_PLUS TOKEN_DASH_DASH TIME SYSTEM_TASK_IDENTIFIER SVINT STRUCT STRING STATIC SIMPLE_IDENTIFIER SHORTREAL SHORTINT SEMICOLON RETURN REPEAT REG REF REALTIME REAL PRIORITY PARAMETER OUTPUT LONGINT LOGIC LOCALPARAM LCURLY INTEGER INPUT INOUT IF FOREVER FOR EVENT ENUM ENDFUNCTION DO DISABLE CONTINUE CONST CHANDLE CASEZ CASEX CASE BYTE BREAK BIT BEGIN BACKSLASH AUTOMATIC
follow(function_body_declaration_21) = WHILE UNIQUE TOKEN_PLUS_PLUS TOKEN_DASH_DASH SYSTEM_TASK_IDENTIFIER SIMPLE_IDENTIFIER SEMICOLON RETURN REPEAT PRIORITY LCURLY IF FOREVER FOR ENDFUNCTION DO DISABLE CONTINUE CASEZ CASEX CASE BREAK BEGIN BACKSLASH
follow(function_body_declaration_20) = WHILE UNIQUE UNION TYPEDEF TOKEN_PLUS_PLUS TOKEN_DASH_DASH TIME SYSTEM_TASK_IDENTIFIER SVINT STRUCT STRING STATIC SIMPLE_IDENTIFIER SHORTREAL SHORTINT SEMICOLON RETURN REPEAT REG REALTIME REAL PRIORITY PARAMETER LONGINT LOGIC LOCALPARAM LCURLY INTEGER IF FOREVER FOR EVENT ENUM ENDFUNCTION DO DISABLE CONTINUE CONST CHANDLE CASEZ CASEX CASE BYTE BREAK BIT BEGIN BACKSLASH AUTOMATIC
follow(function_body_declaration) = XOR XNOR WOR WIRE WHILE WAND WAIT_ORDER WAIT VIRTUAL VBAR UNSIGNED_NUMBER UNSIGNED UNIQUE UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE TASK SYSTEM_TASK_IDENTIFIER SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SPECPARAM SPECIFY SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RNMOS RETURN REPEAT RELEASE REG REF REALTIME REAL RCMOS RANDC RAND P_XNOR P_POUNDPOUND P_NXOR P_NAND P_MINUSGT PULLUP PULLDOWN PROTECTED PROPERTY PROGRAM PRIORITY PRIMITIVE PMOS PLUS PLING PARAMETER OUTPUT OR OCTAL_BASE NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULE MODPORT MINUS MACROMODULE LPAREN LONGINT LOGIC LOCALPARAM LOCAL LCURLY INTERFACE INTEGER INPUT INOUT INITIAL IMPORT IF HEX_BASE HASH GENVAR GENERATE FUNCTION FORK FOREVER FORCE FOR FINAL EXTERN EXPORT EVENT ENUM ENDPROGRAM ENDMODULE ENDINTERFACE ENDGENERATE ENDCLASS ENDCASE END ELSE DOUBLE_QUOTES DO DISABLE DEFPARAM DEFAULT DECIMAL_BASE DEASSIGN DASH_GT_GT COVER CONTINUE CONSTRAINT CONST CMOS CLOCKING CLASS CHANDLE CASEZ CASEX CASE CARET BYTE BUFIF1 BUFIF0 BUF BREAK BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT AND AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS #
follow(extern_tf_declaration) = WOR WIRE WAND VIRTUAL VBAR UNSIGNED_NUMBER UNSIGNED UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TIME TILDE_VBAR TILDE TASK SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SPECPARAM SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON REG REF REALTIME REAL P_XNOR P_NXOR P_NAND PROPERTY PROGRAM PLUS PLING PARAMETER OUTPUT OCTAL_BASE MODPORT MINUS LPAREN LONGINT LOGIC LOCALPARAM LCURLY INTERFACE INTEGER INPUT INOUT INITIAL IMPORT IF HEX_BASE GENVAR GENERATE FUNCTION FOR FINAL EXTERN EXPORT EVENT ENUM ENDINTERFACE ENDGENERATE ENDCASE END ELSE DOUBLE_QUOTES DEFAULT DECIMAL_BASE COVER CONSTRAINT CONST CLOCKING CLASS CHANDLE CASE CARET BYTE BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC ASSIGN ASSERT AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS
follow(extern_method_declaration) = XOR XNOR WOR WIRE WHILE WAND WAIT_ORDER WAIT VIRTUAL VBAR UNSIGNED_NUMBER UNSIGNED UNIQUE UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE TASK SYSTEM_TASK_IDENTIFIER SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SPECPARAM SPECIFY SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RNMOS RETURN REPEAT RELEASE REG REF REALTIME REAL RCMOS P_XNOR P_POUNDPOUND P_NXOR P_NAND P_MINUSGT PULLUP PULLDOWN PROPERTY PROGRAM PRIORITY PRIMITIVE PMOS PLUS PLING PARAMETER OUTPUT OR OCTAL_BASE NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULE MODPORT MINUS MACROMODULE LPAREN LONGINT LOGIC LOCALPARAM LCURLY INTERFACE INTEGER INPUT INOUT INITIAL IMPORT IF HEX_BASE HASH GENVAR GENERATE FUNCTION FORK FOREVER FORCE FOR FINAL EXTERN EXPORT EVENT ENUM ENDPROGRAM ENDMODULE ENDINTERFACE ENDGENERATE ENDCASE END ELSE DOUBLE_QUOTES DO DISABLE DEFPARAM DEFAULT DECIMAL_BASE DEASSIGN DASH_GT_GT COVER CONTINUE CONSTRAINT CONST CMOS CLOCKING CLASS CHANDLE CASEZ CASEX CASE CARET BYTE BUFIF1 BUFIF0 BUF BREAK BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT AND AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS #
follow(extern_constraint_declaration_8) = VOID VBAR UNSIGNED_NUMBER UNSIGNED TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS SYSTEM_FUNCTION_IDENTIFIER SVINT SUPER SOLVE SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REALTIME REAL RCURLY P_XNOR P_NXOR P_NAND PLUS PLING OCTAL_BASE NULL MINUS LPAREN LONGINT LOGIC LCURLY INTEGER IF HEX_BASE DOUBLE_QUOTES DECIMAL_BASE CARET BYTE BIT BINARY_BASE BACKSLASH AMPERSAND
follow(expression) = XOR XNOR WOR WITHIN WIRE WHILE WAND WAIT_ORDER WAIT VOID VIRTUAL VBAR_DASH_GT VBAR UNSIGNED_NUMBER UNSIGNED UNIQUE UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TOKEN_VBAR_VBAR TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_PLING_QUERY_EQUALS TOKEN_PLING_EQUALS_GT TOKEN_ONE TOKEN_NINE TOKEN_LBRACK_STAR_EQUALS TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIMES TIME TILDE_VBAR TILDE THROUGHOUT THIS TASK SYSTEM_TASK_IDENTIFIER SYSTEM_FUNCTION_IDENTIFIER SVINT SUPPLY1 SUPPLY0 SUPER STRUCT STRING STATIC SPECPARAM SPECIFY SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RPAREN RNMOS RETURN REPEAT RELEASE REG REF REALTIME REAL RCURLY RCMOS RBRACK QUERY P_XNOR P_SSRIGHT3 P_SRIGHT P_SLEFT3 P_SLEFT P_POW P_POUNDPOUND P_PLUSCOLON P_NXOR P_NOTEQUAL P_NAND P_MINUSGT P_MINUSCOLON P_LTE P_GTE P_EQUAL P_EQGT P_COLONEQ P_COLONDIV P_CASENOTEQUAL P_CASEEQUAL P_ANDAND PULLUP PULLDOWN PROPERTY PROGRAM PRIORITY PRIMITIVE PMOS PLUS PLING PARAMETER OUTPUT OR OCTAL_BASE NULL NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULO MODULE MODPORT MINUS MACROMODULE LPAREN LONGINT LOGIC LOCALPARAM LESS LCURLY LBRACK_STAR_DASH_GT LBRACK_STAR JOIN_NONE JOIN_ANY JOIN INTERSECT INTERFACE INTEGER INSIDE INPUT INOUT INITIAL IMPORT IFF IF HEX_BASE HASH GREATER GENVAR GENERATE FUNCTION FORK FOREVER FORCE FOR FINAL EXTERN EXPORT EVENT EQUALS_QUERY_EQUALS ENUM ENDTASK ENDPROGRAM ENDMODULE ENDINTERFACE ENDGENERATE ENDCASE END ELSE DOUBLE_QUOTES DO DIVIDE DIST DISABLE DEFPARAM DEFAULT DECIMAL_BASE DEASSIGN DASH_GT_GT COVER CONTINUE CONSTRAINT CONST COMMA COLON CMOS CLOCKING CLASS CHANDLE CASEZ CASEX CASE CARET BYTE BUFIF1 BUFIF0 BUF BREAK BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT AND AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS #
follow(event_trigger) = XOR XNOR WOR WIRE WHILE WAND WAIT_ORDER WAIT VOID VIRTUAL VBAR UNSIGNED_NUMBER UNSIGNED UNIQUE UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS TASK SYSTEM_TASK_IDENTIFIER SYSTEM_FUNCTION_IDENTIFIER SVINT SUPPLY1 SUPPLY0 SUPER STRUCT STRING STATIC SPECPARAM SPECIFY SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RNMOS RETURN REPEAT RELEASE REG REF REALTIME REAL RCMOS P_XNOR P_POUNDPOUND P_NXOR P_NAND P_MINUSGT PULLUP PULLDOWN PROPERTY PROGRAM PRIORITY PRIMITIVE PMOS PLUS PLING PARAMETER OUTPUT OR OCTAL_BASE NULL NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULE MODPORT MINUS MACROMODULE LPAREN LONGINT LOGIC LOCALPARAM LCURLY JOIN_NONE JOIN_ANY JOIN INTERFACE INTEGER INPUT INOUT INITIAL IMPORT IF HEX_BASE HASH GENVAR GENERATE FUNCTION FORK FOREVER FORCE FOR FINAL EXTERN EXPORT EVENT ENUM ENDTASK ENDPROGRAM ENDMODULE ENDINTERFACE ENDGENERATE ENDCASE END ELSE DOUBLE_QUOTES DO DISABLE DEFPARAM DEFAULT DECIMAL_BASE DEASSIGN DASH_GT_GT COVER CONTINUE CONSTRAINT CONST CMOS CLOCKING CLASS CHANDLE CASEZ CASEX CASE CARET BYTE BUFIF1 BUFIF0 BUF BREAK BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT AND AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS #
follow(event_expression) = RPAREN OR COMMA
follow(event_control) = WHILE WAIT_ORDER WAIT VOID VBAR UNSIGNED_NUMBER UNSIGNED UNIQUE TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS SYSTEM_TASK_IDENTIFIER SYSTEM_FUNCTION_IDENTIFIER SVINT SUPER SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEMICOLON RETURN REPEAT RELEASE REG REALTIME REAL P_XNOR P_POUNDPOUND P_NXOR P_NAND P_MINUSGT PRIORITY PLUS PLING OCTAL_BASE NULL MINUS LPAREN LONGINT LOGIC LCURLY INTEGER IF HEX_BASE HASH FORK FOREVER FORCE FOR DOUBLE_QUOTES DO DISABLE DECIMAL_BASE DEASSIGN DASH_GT_GT COVER CONTINUE CASEZ CASEX CASE CARET BYTE BREAK BIT BINARY_BASE BEGIN BACKSLASH AT_STAR AT ASSIGN ASSERT AMPERSAND
follow(escaped_hierarchical_identifier_3) = XOR XNOR WOR WITHIN WIRE WHILE WAND WAIT_ORDER WAIT VOID VIRTUAL VBAR_DASH_GT VBAR UNSIGNED_NUMBER UNSIGNED UNIQUE UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TOKEN_VBAR_VBAR TOKEN_VBAR_EQUALS TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_PLING_QUERY_EQUALS TOKEN_PLING_EQUALS_GT TOKEN_ONE TOKEN_NINE TOKEN_LBRACK_STAR_EQUALS TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIMES TIME TILDE_VBAR TILDE THROUGHOUT THIS TASK SYSTEM_TASK_IDENTIFIER SYSTEM_FUNCTION_IDENTIFIER SVINT SUPPLY1 SUPPLY0 SUPER STRUCT STRING STATIC SPECPARAM SPECIFY SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RPAREN RNMOS RETURN REPEAT RELEASE REG REF REALTIME REAL RCURLY RCMOS RBRACK QUERY P_XOREQ P_XNOR P_TIMESEQ P_SSRIGHT3EQ P_SSRIGHT3 P_SRIGHTEQ P_SRIGHT P_SLEFTEQ P_SLEFT3EQ P_SLEFT3 P_SLEFT P_POW P_POUNDPOUND P_PLUSEQ P_PLUSCOLON P_NXOR P_NOTEQUAL P_NAND P_MODEQ P_MINUSGT P_MINUSEQ P_MINUSCOLON P_LTE P_GTE P_EQUAL P_EQGT P_DIVEQ P_COLONEQ P_COLONDIV P_CASENOTEQUAL P_CASEEQUAL P_ANDEQ P_ANDAND PULLUP PULLDOWN PROPERTY PROGRAM PRIORITY PRIMITIVE PMOS PLUS PLING PARAMETER OUTPUT OR OCTAL_BASE NULL NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULO MODULE MODPORT MINUS MACROMODULE LPAREN LONGINT LOGIC LOCALPARAM LESS LCURLY LBRACK_STAR_DASH_GT LBRACK_STAR LBRACK JOIN_NONE JOIN_ANY JOIN INTERSECT INTERFACE INTEGER INSIDE INPUT INOUT INITIAL IMPORT IFF IF HEX_BASE HASH GREATER GENVAR GENERATE FUNCTION FORK FOREVER FORCE FOR FINAL EXTERN EXPORT EVENT EQUALS_QUERY_EQUALS EQUALS ENUM ENDTASK ENDPROGRAM ENDMODULE ENDINTERFACE ENDGENERATE ENDCASE END ELSE DOUBLE_QUOTES DOT DO DIVIDE DIST DISABLE DEFPARAM DEFAULT DECIMAL_BASE DEASSIGN DASH_GT_GT COVER CONTINUE CONSTRAINT CONST COMMA COLON CMOS CLOCKING CLASS CHANDLE CASEZ CASEX CASE CARET BYTE BUFIF1 BUFIF0 BUF BREAK BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT AND AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS #
follow(escaped_hierarchical_branch_4_3_6) = XOR XNOR WOR WITHIN WIRE WHILE WAND WAIT_ORDER WAIT VOID VIRTUAL VBAR_DASH_GT VBAR UNSIGNED_NUMBER UNSIGNED UNIQUE UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TOKEN_VBAR_VBAR TOKEN_VBAR_EQUALS TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_PLING_QUERY_EQUALS TOKEN_PLING_EQUALS_GT TOKEN_ONE TOKEN_NINE TOKEN_LBRACK_STAR_EQUALS TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIMES TIME TILDE_VBAR TILDE THROUGHOUT THIS TASK SYSTEM_TASK_IDENTIFIER SYSTEM_FUNCTION_IDENTIFIER SVINT SUPPLY1 SUPPLY0 SUPER STRUCT STRING STATIC SPECPARAM SPECIFY SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RPAREN RNMOS RETURN REPEAT RELEASE REG REF REALTIME REAL RCURLY RCMOS RBRACK QUERY P_XOREQ P_XNOR P_TIMESEQ P_SSRIGHT3EQ P_SSRIGHT3 P_SRIGHTEQ P_SRIGHT P_SLEFTEQ P_SLEFT3EQ P_SLEFT3 P_SLEFT P_POW P_POUNDPOUND P_PLUSEQ P_PLUSCOLON P_NXOR P_NOTEQUAL P_NAND P_MODEQ P_MINUSGT P_MINUSEQ P_MINUSCOLON P_LTE P_GTE P_EQUAL P_EQGT P_DIVEQ P_COLONEQ P_COLONDIV P_CASENOTEQUAL P_CASEEQUAL P_ANDEQ P_ANDAND PULLUP PULLDOWN PROPERTY PROGRAM PRIORITY PRIMITIVE PMOS PLUS PLING PARAMETER OUTPUT OR OCTAL_BASE NULL NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULO MODULE MODPORT MINUS MACROMODULE LPAREN LONGINT LOGIC LOCALPARAM LESS LCURLY LBRACK_STAR_DASH_GT LBRACK_STAR LBRACK JOIN_NONE JOIN_ANY JOIN INTERSECT INTERFACE INTEGER INSIDE INPUT INOUT INITIAL IMPORT IFF IF HEX_BASE HASH GREATER GENVAR GENERATE FUNCTION FORK FOREVER FORCE FOR FINAL EXTERN EXPORT EVENT EQUALS_QUERY_EQUALS EQUALS ENUM ENDTASK ENDPROGRAM ENDMODULE ENDINTERFACE ENDGENERATE ENDCASE END ELSE DOUBLE_QUOTES DOT DO DIVIDE DIST DISABLE DEFPARAM DEFAULT DECIMAL_BASE DEASSIGN DASH_GT_GT COVER CONTINUE CONSTRAINT CONST COMMA COLON CMOS CLOCKING CLASS CHANDLE CASEZ CASEX CASE CARET BYTE BUFIF1 BUFIF0 BUF BREAK BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT AND AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS #
follow(escaped_hierarchical_branch_4_3) = XOR XNOR WOR WITHIN WIRE WHILE WAND WAIT_ORDER WAIT VOID VIRTUAL VBAR_DASH_GT VBAR UNSIGNED_NUMBER UNSIGNED UNIQUE UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TOKEN_VBAR_VBAR TOKEN_VBAR_EQUALS TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_PLING_QUERY_EQUALS TOKEN_PLING_EQUALS_GT TOKEN_ONE TOKEN_NINE TOKEN_LBRACK_STAR_EQUALS TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIMES TIME TILDE_VBAR TILDE THROUGHOUT THIS TASK SYSTEM_TASK_IDENTIFIER SYSTEM_FUNCTION_IDENTIFIER SVINT SUPPLY1 SUPPLY0 SUPER STRUCT STRING STATIC SPECPARAM SPECIFY SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RPAREN RNMOS RETURN REPEAT RELEASE REG REF REALTIME REAL RCURLY RCMOS RBRACK QUERY P_XOREQ P_XNOR P_TIMESEQ P_SSRIGHT3EQ P_SSRIGHT3 P_SRIGHTEQ P_SRIGHT P_SLEFTEQ P_SLEFT3EQ P_SLEFT3 P_SLEFT P_POW P_POUNDPOUND P_PLUSEQ P_PLUSCOLON P_NXOR P_NOTEQUAL P_NAND P_MODEQ P_MINUSGT P_MINUSEQ P_MINUSCOLON P_LTE P_GTE P_EQUAL P_EQGT P_DIVEQ P_COLONEQ P_COLONDIV P_CASENOTEQUAL P_CASEEQUAL P_ANDEQ P_ANDAND PULLUP PULLDOWN PROPERTY PROGRAM PRIORITY PRIMITIVE PMOS PLUS PLING PARAMETER OUTPUT OR OCTAL_BASE NULL NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULO MODULE MODPORT MINUS MACROMODULE LPAREN LONGINT LOGIC LOCALPARAM LESS LCURLY LBRACK_STAR_DASH_GT LBRACK_STAR LBRACK JOIN_NONE JOIN_ANY JOIN INTERSECT INTERFACE INTEGER INSIDE INPUT INOUT INITIAL IMPORT IFF IF HEX_BASE HASH GREATER GENVAR GENERATE FUNCTION FORK FOREVER FORCE FOR FINAL EXTERN EXPORT EVENT EQUALS_QUERY_EQUALS EQUALS ENUM ENDTASK ENDPROGRAM ENDMODULE ENDINTERFACE ENDGENERATE ENDCASE END ELSE DOUBLE_QUOTES DOT DO DIVIDE DIST DISABLE DEFPARAM DEFAULT DECIMAL_BASE DEASSIGN DASH_GT_GT COVER CONTINUE CONSTRAINT CONST COMMA COLON CMOS CLOCKING CLASS CHANDLE CASEZ CASEX CASE CARET BYTE BUFIF1 BUFIF0 BUF BREAK BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT AND AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS #
follow(escaped_hierarchical_branch_3) = XOR XNOR WOR WITHIN WIRE WHILE WAND WAIT_ORDER WAIT VOID VIRTUAL VBAR_DASH_GT VBAR UNSIGNED_NUMBER UNSIGNED UNIQUE UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TOKEN_VBAR_VBAR TOKEN_VBAR_EQUALS TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_PLING_QUERY_EQUALS TOKEN_PLING_EQUALS_GT TOKEN_ONE TOKEN_NINE TOKEN_LBRACK_STAR_EQUALS TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIMES TIME TILDE_VBAR TILDE THROUGHOUT THIS TASK SYSTEM_TASK_IDENTIFIER SYSTEM_FUNCTION_IDENTIFIER SVINT SUPPLY1 SUPPLY0 SUPER STRUCT STRING STATIC SPECPARAM SPECIFY SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RPAREN RNMOS RETURN REPEAT RELEASE REG REF REALTIME REAL RCURLY RCMOS RBRACK QUERY P_XOREQ P_XNOR P_TIMESEQ P_SSRIGHT3EQ P_SSRIGHT3 P_SRIGHTEQ P_SRIGHT P_SLEFTEQ P_SLEFT3EQ P_SLEFT3 P_SLEFT P_POW P_POUNDPOUND P_PLUSEQ P_PLUSCOLON P_NXOR P_NOTEQUAL P_NAND P_MODEQ P_MINUSGT P_MINUSEQ P_MINUSCOLON P_LTE P_GTE P_EQUAL P_EQGT P_DIVEQ P_COLONEQ P_COLONDIV P_CASENOTEQUAL P_CASEEQUAL P_ANDEQ P_ANDAND PULLUP PULLDOWN PROPERTY PROGRAM PRIORITY PRIMITIVE PMOS PLUS PLING PARAMETER OUTPUT OR OCTAL_BASE NULL NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULO MODULE MODPORT MINUS MACROMODULE LPAREN LONGINT LOGIC LOCALPARAM LESS LCURLY LBRACK_STAR_DASH_GT LBRACK_STAR LBRACK JOIN_NONE JOIN_ANY JOIN INTERSECT INTERFACE INTEGER INSIDE INPUT INOUT INITIAL IMPORT IFF IF HEX_BASE HASH GREATER GENVAR GENERATE FUNCTION FORK FOREVER FORCE FOR FINAL EXTERN EXPORT EVENT EQUALS_QUERY_EQUALS EQUALS ENUM ENDTASK ENDPROGRAM ENDMODULE ENDINTERFACE ENDGENERATE ENDCASE END ELSE DOUBLE_QUOTES DOT DO DIVIDE DIST DISABLE DEFPARAM DEFAULT DECIMAL_BASE DEASSIGN DASH_GT_GT COVER CONTINUE CONSTRAINT CONST COMMA COLON CMOS CLOCKING CLASS CHANDLE CASEZ CASEX CASE CARET BYTE BUFIF1 BUFIF0 BUF BREAK BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT AND AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS #
follow(enable_gatetype) = SIMPLE_IDENTIFIER LPAREN HASH BACKSLASH
follow(edge_sensitive_path_declaration) = SEMICOLON
follow(edge_input_list_4) = LEVEL_SYMBOL COLON
follow(edge_input_list_2) = LPAREN LEVEL_SYMBOL EDGE_SYMBOL
follow(edge_indicator) = LEVEL_SYMBOL COLON
follow(edge_identifier) = VOID VBAR UNSIGNED_NUMBER UNSIGNED TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS SYSTEM_FUNCTION_IDENTIFIER SVINT SUPER SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEMICOLON REG REALTIME REAL P_XNOR P_NXOR P_NAND PLUS PLING OUTPUT OCTAL_BASE NULL MINUS LPAREN LONGINT LOGIC LCURLY INTEGER HEX_BASE HASH DOUBLE_QUOTES DECIMAL_BASE CARET BYTE BIT BINARY_BASE BACKSLASH AMPERSAND
follow(edge_descriptor) = RBRACK COMMA
follow(edge_control_specifier_5) = RBRACK COMMA
follow(drive_strength) = VECTORED UNSIGNED SIMPLE_IDENTIFIER SIGNED SCALARED NAME_OF_UDP_INSTANCE LPAREN LCURLY LBRACK HASH BACKSLASH
follow(dpi_proto_formal_3_5) = RPAREN COMMA
follow(dpi_import_property) = VOID UNSIGNED UNION TIME SVINT STRUCT STRING SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REALTIME REAL LONGINT LOGIC INTEGER ENUM C_IDENTIFIER CHANDLE BYTE BIT BACKSLASH
follow(dpi_import_export) = XOR XNOR WOR WIRE WHILE WAND WAIT_ORDER WAIT VIRTUAL VBAR UNSIGNED_NUMBER UNSIGNED UNIQUE UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE TASK SYSTEM_TASK_IDENTIFIER SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SPECPARAM SPECIFY SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RNMOS RETURN REPEAT RELEASE REG REF REALTIME REAL RCMOS P_XNOR P_POUNDPOUND P_NXOR P_NAND P_MINUSGT PULLUP PULLDOWN PROPERTY PROGRAM PRIORITY PRIMITIVE PMOS PLUS PLING PARAMETER OUTPUT OR OCTAL_BASE NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULE MODPORT MINUS MACROMODULE LPAREN LONGINT LOGIC LOCALPARAM LCURLY INTERFACE INTEGER INPUT INOUT INITIAL IMPORT IF HEX_BASE HASH GENVAR GENERATE FUNCTION FORK FOREVER FORCE FOR FINAL EXTERN EXPORT EVENT ENUM ENDPROGRAM ENDMODULE ENDINTERFACE ENDGENERATE ENDCASE END ELSE DOUBLE_QUOTES DO DISABLE DEFPARAM DEFAULT DECIMAL_BASE DEASSIGN DASH_GT_GT COVER CONTINUE CONSTRAINT CONST CMOS CLOCKING CLASS CHANDLE CASEZ CASEX CASE CARET BYTE BUFIF1 BUFIF0 BUF BREAK BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT AND AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS #
follow(dpi_function_proto) = SEMICOLON
follow(dpi_dimension_4) = RPAREN LBRACK COMMA
follow(dpi_dimension) = RPAREN COMMA
follow(dot_named_port_connection) = RPAREN COMMA
follow(dist_list_3) = RCURLY COMMA
follow(dist_item) = RCURLY COMMA
follow(disable_statement) = XOR XNOR WOR WIRE WHILE WAND WAIT_ORDER WAIT VOID VIRTUAL VBAR UNSIGNED_NUMBER UNSIGNED UNIQUE UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS TASK SYSTEM_TASK_IDENTIFIER SYSTEM_FUNCTION_IDENTIFIER SVINT SUPPLY1 SUPPLY0 SUPER STRUCT STRING STATIC SPECPARAM SPECIFY SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RNMOS RETURN REPEAT RELEASE REG REF REALTIME REAL RCMOS P_XNOR P_POUNDPOUND P_NXOR P_NAND P_MINUSGT PULLUP PULLDOWN PROPERTY PROGRAM PRIORITY PRIMITIVE PMOS PLUS PLING PARAMETER OUTPUT OR OCTAL_BASE NULL NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULE MODPORT MINUS MACROMODULE LPAREN LONGINT LOGIC LOCALPARAM LCURLY JOIN_NONE JOIN_ANY JOIN INTERFACE INTEGER INPUT INOUT INITIAL IMPORT IF HEX_BASE HASH GENVAR GENERATE FUNCTION FORK FOREVER FORCE FOR FINAL EXTERN EXPORT EVENT ENUM ENDTASK ENDPROGRAM ENDMODULE ENDINTERFACE ENDGENERATE ENDFUNCTION ENDCASE END ELSE DOUBLE_QUOTES DO DISABLE DEFPARAM DEFAULT DECIMAL_BASE DEASSIGN DASH_GT_GT COVER CONTINUE CONSTRAINT CONST CMOS CLOCKING CLASS CHANDLE CASEZ CASEX CASE CARET BYTE BUFIF1 BUFIF0 BUF BREAK BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT AND AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS #
follow(description) = WOR WIRE WHILE WAND WAIT_ORDER WAIT VIRTUAL UNIQUE UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TOKEN_PLUS_PLUS TOKEN_DASH_DASH TIME TASK SYSTEM_TASK_IDENTIFIER SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SIMPLE_IDENTIFIER SHORTREAL SHORTINT SEQUENCE SEMICOLON RETURN REPEAT RELEASE REG REALTIME REAL P_POUNDPOUND P_MINUSGT PROPERTY PROGRAM PRIORITY PRIMITIVE MODULE MACROMODULE LONGINT LOGIC LOCALPARAM LCURLY INTERFACE INTEGER IMPORT IF HASH GENVAR FUNCTION FORK FOREVER FORCE FOR EXTERN EXPORT EVENT ENUM DO DISABLE DEFAULT DEASSIGN DASH_GT_GT COVER CONTINUE CONSTRAINT CONST CLOCKING CLASS CHANDLE CASEZ CASEX CASE BYTE BREAK BIT BIND BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT #
follow(delayed_reference) = RPAREN COMMA
follow(delayed_data) = RPAREN
follow(delay_value) = WHILE WAIT_ORDER WAIT VOID VBAR UNSIGNED_NUMBER UNSIGNED UNIQUE TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS SYSTEM_TASK_IDENTIFIER SYSTEM_FUNCTION_IDENTIFIER SVINT SUPER SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEMICOLON RETURN REPEAT RELEASE REG REALTIME REAL P_XNOR P_POUNDPOUND P_NXOR P_NAND P_MINUSGT PRIORITY PLUS PLING OUTPUT OCTAL_BASE NULL NAME_OF_UDP_INSTANCE MINUS LPAREN LONGINT LOGIC LCURLY LBRACK INTEGER IF HEX_BASE HASH FORK FOREVER FORCE FOR DOUBLE_QUOTES DO DISABLE DECIMAL_BASE DEASSIGN DASH_GT_GT COVER CONTINUE CASEZ CASEX CASE CARET BYTE BREAK BIT BINARY_BASE BEGIN BACKSLASH AT_STAR AT ASSIGN ASSERT AMPERSAND
follow(delay_or_event_control) = VOID VBAR UNSIGNED_NUMBER UNSIGNED TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS SYSTEM_FUNCTION_IDENTIFIER SVINT SUPER SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REALTIME REAL P_XNOR P_NXOR P_NAND PLUS PLING OCTAL_BASE NULL MINUS LPAREN LONGINT LOGIC LCURLY INTEGER HEX_BASE DOUBLE_QUOTES DECIMAL_BASE CARET BYTE BIT BINARY_BASE BACKSLASH AMPERSAND
follow(delay_control) = WHILE WAIT_ORDER WAIT VOID VBAR UNSIGNED_NUMBER UNSIGNED UNIQUE TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS SYSTEM_TASK_IDENTIFIER SYSTEM_FUNCTION_IDENTIFIER SVINT SUPER SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEMICOLON RETURN REPEAT RELEASE REG REALTIME REAL P_XNOR P_POUNDPOUND P_NXOR P_NAND P_MINUSGT PRIORITY PLUS PLING OUTPUT OCTAL_BASE NULL MINUS LPAREN LONGINT LOGIC LCURLY INTEGER IF HEX_BASE HASH FORK FOREVER FORCE FOR DOUBLE_QUOTES DO DISABLE DECIMAL_BASE DEASSIGN DASH_GT_GT COVER CONTINUE CASEZ CASEX CASE CARET BYTE BREAK BIT BINARY_BASE BEGIN BACKSLASH AT_STAR AT ASSIGN ASSERT AMPERSAND
follow(delay3) = SIMPLE_IDENTIFIER LPAREN LCURLY BACKSLASH
follow(delay2) = SIMPLE_IDENTIFIER NAME_OF_UDP_INSTANCE LPAREN LBRACK BACKSLASH
follow(default_skew) = SEMICOLON
follow(decimal_number_16) = XOR XNOR WOR WITHIN WIRE WHILE WAND WAIT_ORDER WAIT VOID VIRTUAL VBAR_DASH_GT VBAR UNSIGNED_NUMBER UNSIGNED UNIQUE UNION UNDERSCORE TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TOKEN_VBAR_VBAR TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_PLING_QUERY_EQUALS TOKEN_PLING_EQUALS_GT TOKEN_ONE TOKEN_NINE TOKEN_LBRACK_STAR_EQUALS TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIMES TIME TILDE_VBAR TILDE THROUGHOUT THIS TASK SYSTEM_TASK_IDENTIFIER SYSTEM_FUNCTION_IDENTIFIER SVINT SUPPLY1 SUPPLY0 SUPER STRUCT STRING STATIC SQUOTE SPECPARAM SPECIFY SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RPAREN RNMOS RETURN REPEAT RELEASE REG REF REALTIME REAL RCURLY RCMOS RBRACK QUERY P_XNOR P_SSRIGHT3 P_SRIGHT P_SLEFT3 P_SLEFT P_POW P_POUNDPOUND P_PLUSCOLON P_NXOR P_NOTEQUAL P_NAND P_MINUSGT P_MINUSCOLON P_LTE P_GTE P_EQUAL P_EQGT P_COLONEQ P_COLONDIV P_CASENOTEQUAL P_CASEEQUAL P_ANDAND PULLUP PULLDOWN PROPERTY PROGRAM PRIORITY PRIMITIVE PMOS PLUS PLING PARAMETER OUTPUT OR OCTAL_BASE NULL NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULO MODULE MODPORT MINUS MACROMODULE LPAREN LONGINT LOGIC LOCALPARAM LESS LCURLY LBRACK_STAR_DASH_GT LBRACK_STAR JOIN_NONE JOIN_ANY JOIN INTERSECT INTERFACE INTEGER INSIDE INPUT INOUT INITIAL IMPORT IFF IF HEX_BASE HASH GREATER GENVAR GENERATE FUNCTION FORK FOREVER FORCE FOR FIRST_MATCH FINAL EXTERN EXPORT EVENT EQUALS_QUERY_EQUALS ENUM ENDTASK ENDPROGRAM ENDMODULE ENDINTERFACE ENDGENERATE ENDCASE END ELSE DOUBLE_QUOTES DO DIVIDE DIST DISABLE DEFPARAM DEFAULT DECIMAL_BASE DEASSIGN DASH_GT_GT COVER CONTINUE CONSTRAINT CONST COMMA COLON CMOS CLOCKING CLASS CHANDLE CASEZ CASEX CASE CARET BYTE BUFIF1 BUFIF0 BUF BREAK BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT AND AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS #
follow(decimal_number_11) = XOR XNOR WOR WITHIN WIRE WHILE WAND WAIT_ORDER WAIT VOID VIRTUAL VBAR_DASH_GT VBAR UNSIGNED_NUMBER UNSIGNED UNIQUE UNION UNDERSCORE TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TOKEN_VBAR_VBAR TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_PLING_QUERY_EQUALS TOKEN_PLING_EQUALS_GT TOKEN_ONE TOKEN_NINE TOKEN_LBRACK_STAR_EQUALS TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIMES TIME TILDE_VBAR TILDE THROUGHOUT THIS TASK SYSTEM_TASK_IDENTIFIER SYSTEM_FUNCTION_IDENTIFIER SVINT SUPPLY1 SUPPLY0 SUPER STRUCT STRING STATIC SQUOTE SPECPARAM SPECIFY SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RPAREN RNMOS RETURN REPEAT RELEASE REG REF REALTIME REAL RCURLY RCMOS RBRACK QUERY P_XNOR P_SSRIGHT3 P_SRIGHT P_SLEFT3 P_SLEFT P_POW P_POUNDPOUND P_PLUSCOLON P_NXOR P_NOTEQUAL P_NAND P_MINUSGT P_MINUSCOLON P_LTE P_GTE P_EQUAL P_EQGT P_COLONEQ P_COLONDIV P_CASENOTEQUAL P_CASEEQUAL P_ANDAND PULLUP PULLDOWN PROPERTY PROGRAM PRIORITY PRIMITIVE PMOS PLUS PLING PARAMETER OUTPUT OR OCTAL_BASE NULL NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULO MODULE MODPORT MINUS MACROMODULE LPAREN LONGINT LOGIC LOCALPARAM LESS LCURLY LBRACK_STAR_DASH_GT LBRACK_STAR JOIN_NONE JOIN_ANY JOIN INTERSECT INTERFACE INTEGER INSIDE INPUT INOUT INITIAL IMPORT IFF IF HEX_BASE HASH GREATER GENVAR GENERATE FUNCTION FORK FOREVER FORCE FOR FIRST_MATCH FINAL EXTERN EXPORT EVENT EQUALS_QUERY_EQUALS ENUM ENDTASK ENDPROGRAM ENDMODULE ENDINTERFACE ENDGENERATE ENDCASE END ELSE DOUBLE_QUOTES DO DIVIDE DIST DISABLE DEFPARAM DEFAULT DECIMAL_BASE DEASSIGN DASH_GT_GT COVER CONTINUE CONSTRAINT CONST COMMA COLON CMOS CLOCKING CLASS CHANDLE CASEZ CASEX CASE CARET BYTE BUFIF1 BUFIF0 BUF BREAK BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT AND AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS #
follow(decimal_number) = XOR XNOR WOR WITHIN WIRE WHILE WAND WAIT_ORDER WAIT VOID VIRTUAL VBAR_DASH_GT VBAR UNSIGNED_NUMBER UNSIGNED UNIQUE UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TOKEN_VBAR_VBAR TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_PLING_QUERY_EQUALS TOKEN_PLING_EQUALS_GT TOKEN_ONE TOKEN_NINE TOKEN_LBRACK_STAR_EQUALS TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIMES TIME TILDE_VBAR TILDE THROUGHOUT THIS TASK SYSTEM_TASK_IDENTIFIER SYSTEM_FUNCTION_IDENTIFIER SVINT SUPPLY1 SUPPLY0 SUPER STRUCT STRING STATIC SQUOTE SPECPARAM SPECIFY SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RPAREN RNMOS RETURN REPEAT RELEASE REG REF REALTIME REAL RCURLY RCMOS RBRACK QUERY P_XNOR P_SSRIGHT3 P_SRIGHT P_SLEFT3 P_SLEFT P_POW P_POUNDPOUND P_PLUSCOLON P_NXOR P_NOTEQUAL P_NAND P_MINUSGT P_MINUSCOLON P_LTE P_GTE P_EQUAL P_EQGT P_COLONEQ P_COLONDIV P_CASENOTEQUAL P_CASEEQUAL P_ANDAND PULLUP PULLDOWN PROPERTY PROGRAM PRIORITY PRIMITIVE PMOS PLUS PLING PARAMETER OUTPUT OR OCTAL_BASE NULL NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULO MODULE MODPORT MINUS MACROMODULE LPAREN LONGINT LOGIC LOCALPARAM LESS LCURLY LBRACK_STAR_DASH_GT LBRACK_STAR JOIN_NONE JOIN_ANY JOIN INTERSECT INTERFACE INTEGER INSIDE INPUT INOUT INITIAL IMPORT IFF IF HEX_BASE HASH GREATER GENVAR GENERATE FUNCTION FORK FOREVER FORCE FOR FIRST_MATCH FINAL EXTERN EXPORT EVENT EQUALS_QUERY_EQUALS ENUM ENDTASK ENDPROGRAM ENDMODULE ENDINTERFACE ENDGENERATE ENDCASE END ELSE DOUBLE_QUOTES DO DIVIDE DIST DISABLE DEFPARAM DEFAULT DECIMAL_BASE DEASSIGN DASH_GT_GT COVER CONTINUE CONSTRAINT CONST COMMA COLON CMOS CLOCKING CLASS CHANDLE CASEZ CASEX CASE CARET BYTE BUFIF1 BUFIF0 BUF BREAK BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT AND AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS #
follow(decimal_digit) = UNDERSCORE OCTAL_BASE HEX_BASE DECIMAL_BASE BINARY_BASE
follow(data_type_48) = RCURLY COMMA
follow(data_type_44_5) = LCURLY LBRACK
follow(data_type_40) = UNION TIME SVINT STRUCT STRING SIMPLE_IDENTIFIER SHORTREAL SHORTINT REG REALTIME REAL RCURLY LONGINT LOGIC INTEGER EVENT ENUM CHANDLE BYTE BIT BACKSLASH
follow(data_type_4) = SIMPLE_IDENTIFIER SEMICOLON RPAREN RBRACK LBRACK COMMA BACKSLASH
follow(data_type_34) = UNION TIME SVINT STRUCT STRING SIMPLE_IDENTIFIER SHORTREAL SHORTINT REG REALTIME REAL RCURLY LONGINT LOGIC INTEGER EVENT ENUM CHANDLE BYTE BIT BACKSLASH
follow(data_type_29) = SIMPLE_IDENTIFIER SEMICOLON RPAREN RBRACK LBRACK COMMA BACKSLASH
follow(data_type_27) = UNION TIME SVINT STRUCT STRING SIMPLE_IDENTIFIER SHORTREAL SHORTINT REG REALTIME REAL RCURLY LONGINT LOGIC INTEGER EVENT ENUM CHANDLE BYTE BIT BACKSLASH
follow(data_type_21) = SIMPLE_IDENTIFIER SEMICOLON RPAREN RBRACK LBRACK COMMA BACKSLASH
follow(data_type_19) = UNION TIME SVINT STRUCT STRING SIMPLE_IDENTIFIER SHORTREAL SHORTINT REG REALTIME REAL RCURLY LONGINT LOGIC INTEGER EVENT ENUM CHANDLE BYTE BIT BACKSLASH
follow(data_type_11) = SIMPLE_IDENTIFIER SEMICOLON RPAREN RBRACK LBRACK COMMA BACKSLASH
follow(data_type) = SIMPLE_IDENTIFIER SEMICOLON RPAREN RBRACK COMMA BACKSLASH
follow(data_declaration) = XOR XNOR WOR WIRE WHILE WAND WAIT_ORDER WAIT VIRTUAL VBAR UNSIGNED_NUMBER UNSIGNED UNIQUE UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE TASK SYSTEM_TASK_IDENTIFIER SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SPECPARAM SPECIFY SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RNMOS RETURN REPEAT RELEASE REG REF REALTIME REAL RCMOS RANDC RAND P_XNOR P_POUNDPOUND P_NXOR P_NAND P_MINUSGT PULLUP PULLDOWN PROTECTED PROPERTY PROGRAM PRIORITY PRIMITIVE PMOS PLUS PLING PARAMETER OUTPUT OR OCTAL_BASE NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULE MODPORT MINUS MACROMODULE LPAREN LONGINT LOGIC LOCALPARAM LOCAL LCURLY INTERFACE INTEGER INPUT INOUT INITIAL IMPORT IF HEX_BASE HASH GENVAR GENERATE FUNCTION FORK FOREVER FORCE FOR FINAL EXTERN EXPORT EVENT ENUM ENDPROGRAM ENDMODULE ENDINTERFACE ENDGENERATE ENDCLASS ENDCASE END ELSE DOUBLE_QUOTES DO DISABLE DEFPARAM DEFAULT DECIMAL_BASE DEASSIGN DASH_GT_GT COVER CONTINUE CONSTRAINT CONST CMOS CLOCKING CLASS CHANDLE CASEZ CASEX CASE CARET BYTE BUFIF1 BUFIF0 BUF BREAK BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT AND AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS #
follow(cycle_delay_range) = VOID VBAR UNSIGNED_NUMBER UNSIGNED TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS SYSTEM_FUNCTION_IDENTIFIER SVINT SUPER SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REALTIME REAL P_XNOR P_POUNDPOUND P_NXOR P_NAND PLUS PLING OCTAL_BASE NULL MINUS LPAREN LONGINT LOGIC LCURLY INTEGER HEX_BASE FIRST_MATCH DOUBLE_QUOTES DECIMAL_BASE CARET BYTE BIT BINARY_BASE BACKSLASH AMPERSAND
follow(cycle_delay_const_range_expression) = RBRACK
follow(cover_property_statement) = XOR XNOR WOR WIRE WHILE WAND WAIT_ORDER WAIT VOID VIRTUAL VBAR UNSIGNED_NUMBER UNSIGNED UNIQUE UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS TASK SYSTEM_TASK_IDENTIFIER SYSTEM_FUNCTION_IDENTIFIER SVINT SUPPLY1 SUPPLY0 SUPER STRUCT STRING STATIC SPECPARAM SPECIFY SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RNMOS RETURN REPEAT RELEASE REG REF REALTIME REAL RCMOS P_XNOR P_POUNDPOUND P_NXOR P_NAND P_MINUSGT PULLUP PULLDOWN PROPERTY PROGRAM PRIORITY PRIMITIVE PMOS PLUS PLING PARAMETER OUTPUT OR OCTAL_BASE NULL NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULE MODPORT MINUS MACROMODULE LPAREN LONGINT LOGIC LOCALPARAM LCURLY JOIN_NONE JOIN_ANY JOIN INTERFACE INTEGER INPUT INOUT INITIAL IMPORT IF HEX_BASE HASH GENVAR GENERATE FUNCTION FORK FOREVER FORCE FOR FINAL EXTERN EXPORT EVENT ENUM ENDTASK ENDPROGRAM ENDMODULE ENDINTERFACE ENDGENERATE ENDCASE END ELSE DOUBLE_QUOTES DO DISABLE DEFPARAM DEFAULT DECIMAL_BASE DEASSIGN DASH_GT_GT COVER CONTINUE CONSTRAINT CONST CMOS CLOCKING CLASS CHANDLE CASEZ CASEX CASE CARET BYTE BUFIF1 BUFIF0 BUF BREAK BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT AND AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS #
follow(continuous_assign) = XOR XNOR WOR WIRE WAND VIRTUAL VBAR UNSIGNED_NUMBER UNSIGNED UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TIME TILDE_VBAR TILDE TASK SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SPECPARAM SPECIFY SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RNMOS REG REF REALTIME REAL RCMOS P_XNOR P_NXOR P_NAND PULLUP PULLDOWN PROPERTY PROGRAM PMOS PLUS PLING PARAMETER OUTPUT OR OCTAL_BASE NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULE MODPORT MINUS MACROMODULE LPAREN LONGINT LOGIC LOCALPARAM LCURLY INTERFACE INTEGER INPUT INOUT INITIAL IMPORT IF HEX_BASE GENVAR GENERATE FUNCTION FOR FINAL EXTERN EXPORT EVENT ENUM ENDPROGRAM ENDMODULE ENDINTERFACE ENDGENERATE ENDCASE END ELSE DOUBLE_QUOTES DEFPARAM DEFAULT DECIMAL_BASE COVER CONSTRAINT CONST CMOS CLOCKING CLASS CHANDLE CASE CARET BYTE BUFIF1 BUFIF0 BUF BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC ASSIGN ASSERT AND AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS
follow(constraint_set_5) = VOID VBAR UNSIGNED_NUMBER UNSIGNED TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS SYSTEM_FUNCTION_IDENTIFIER SVINT SUPER SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REALTIME REAL RCURLY P_XNOR P_NXOR P_NAND PLUS PLING OCTAL_BASE NULL MINUS LPAREN LONGINT LOGIC LCURLY INTEGER IF HEX_BASE DOUBLE_QUOTES DECIMAL_BASE CARET BYTE BIT BINARY_BASE BACKSLASH AMPERSAND
follow(constraint_set) = VOID VBAR UNSIGNED_NUMBER UNSIGNED TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS SYSTEM_FUNCTION_IDENTIFIER SVINT SUPER SOLVE SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEMICOLON REG REALTIME REAL RCURLY P_XNOR P_NXOR P_NAND PLUS PLING OCTAL_BASE NULL MINUS LPAREN LONGINT LOGIC LCURLY INTEGER IF HEX_BASE ELSE DOUBLE_QUOTES DECIMAL_BASE CARET BYTE BIT BINARY_BASE BACKSLASH AMPERSAND
follow(constraint_expression) = VOID VBAR UNSIGNED_NUMBER UNSIGNED TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS SYSTEM_FUNCTION_IDENTIFIER SVINT SUPER SOLVE SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEMICOLON REG REALTIME REAL RCURLY P_XNOR P_NXOR P_NAND PLUS PLING OCTAL_BASE NULL MINUS LPAREN LONGINT LOGIC LCURLY INTEGER IF HEX_BASE ELSE DOUBLE_QUOTES DECIMAL_BASE CARET BYTE BIT BINARY_BASE BACKSLASH AMPERSAND
follow(constraint_declaration_6) = VOID VBAR UNSIGNED_NUMBER UNSIGNED TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS SYSTEM_FUNCTION_IDENTIFIER SVINT SUPER SOLVE SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REALTIME REAL RCURLY P_XNOR P_NXOR P_NAND PLUS PLING OCTAL_BASE NULL MINUS LPAREN LONGINT LOGIC LCURLY INTEGER IF HEX_BASE DOUBLE_QUOTES DECIMAL_BASE CARET BYTE BIT BINARY_BASE BACKSLASH AMPERSAND
follow(constraint_block) = VOID VBAR UNSIGNED_NUMBER UNSIGNED TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS SYSTEM_FUNCTION_IDENTIFIER SVINT SUPER SOLVE SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEMICOLON REG REALTIME REAL RCURLY P_XNOR P_NXOR P_NAND PLUS PLING OCTAL_BASE NULL MINUS LPAREN LONGINT LOGIC LCURLY INTEGER IF HEX_BASE DOUBLE_QUOTES DECIMAL_BASE CARET BYTE BIT BINARY_BASE BACKSLASH AMPERSAND
follow(constant_range_expression) = RBRACK
follow(constant_primary) = VOID VBAR UNSIGNED_NUMBER UNSIGNED TOKEN_VBAR_VBAR TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_PLING_QUERY_EQUALS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIMES TIME TILDE_VBAR TILDE THIS SYSTEM_FUNCTION_IDENTIFIER SVINT SUPER SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEMICOLON RPAREN REG REALTIME REAL RCURLY RBRACK QUERY P_XNOR P_SSRIGHT3 P_SRIGHT P_SLEFT3 P_SLEFT P_POW P_POUNDPOUND P_PLUSCOLON P_NXOR P_NOTEQUAL P_NAND P_MINUSCOLON P_LTE P_GTE P_EQUAL P_CASENOTEQUAL P_CASEEQUAL P_ANDAND PLUS PLING OCTAL_BASE NULL MODULO MINUS LPAREN LONGINT LOGIC LESS LCURLY INTEGER HEX_BASE GREATER FIRST_MATCH EQUALS_QUERY_EQUALS DOUBLE_QUOTES DIVIDE DECIMAL_BASE COMMA COLON CARET BYTE BIT BINARY_BASE BACKSLASH AMPERSAND
follow(constant_mintypmax_expression) = SEMICOLON RPAREN RBRACK COMMA
follow(constant_expression) = VOID VBAR UNSIGNED_NUMBER UNSIGNED TOKEN_VBAR_VBAR TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_PLING_QUERY_EQUALS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIMES TIME TILDE_VBAR TILDE THIS SYSTEM_FUNCTION_IDENTIFIER SVINT SUPER SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEMICOLON RPAREN REG REALTIME REAL RCURLY RBRACK QUERY P_XNOR P_SSRIGHT3 P_SRIGHT P_SLEFT3 P_SLEFT P_POW P_POUNDPOUND P_PLUSCOLON P_NXOR P_NOTEQUAL P_NAND P_MINUSCOLON P_LTE P_GTE P_EQUAL P_CASENOTEQUAL P_CASEEQUAL P_ANDAND PLUS PLING OCTAL_BASE NULL MODULO MINUS LPAREN LONGINT LOGIC LESS LCURLY INTEGER HEX_BASE GREATER FIRST_MATCH EQUALS_QUERY_EQUALS DOUBLE_QUOTES DIVIDE DECIMAL_BASE COMMA COLON CARET BYTE BIT BINARY_BASE BACKSLASH AMPERSAND
follow(constant_concatenation_4) = RCURLY COMMA
follow(constant_concatenation_18) = RCURLY COMMA
follow(constant_concatenation_11) = RCURLY COMMA
follow(constant_concatenation) = VOID VBAR UNSIGNED_NUMBER UNSIGNED TOKEN_VBAR_VBAR TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_PLING_QUERY_EQUALS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIMES TIME TILDE_VBAR TILDE THIS SYSTEM_FUNCTION_IDENTIFIER SVINT SUPER SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEMICOLON RPAREN REG REALTIME REAL RCURLY RBRACK QUERY P_XNOR P_SSRIGHT3 P_SRIGHT P_SLEFT3 P_SLEFT P_POW P_POUNDPOUND P_PLUSCOLON P_NXOR P_NOTEQUAL P_NAND P_MINUSCOLON P_LTE P_GTE P_EQUAL P_CASENOTEQUAL P_CASEEQUAL P_ANDAND PLUS PLING OCTAL_BASE NULL MODULO MINUS LPAREN LONGINT LOGIC LESS LCURLY INTEGER HEX_BASE GREATER FIRST_MATCH EQUALS_QUERY_EQUALS DOUBLE_QUOTES DIVIDE DECIMAL_BASE COMMA COLON CARET BYTE BIT BINARY_BASE BACKSLASH AMPERSAND
follow(const_or_range_expression) = RBRACK
follow(conditional_statement) = XOR XNOR WOR WIRE WHILE WAND WAIT_ORDER WAIT VOID VIRTUAL VBAR UNSIGNED_NUMBER UNSIGNED UNIQUE UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS TASK SYSTEM_TASK_IDENTIFIER SYSTEM_FUNCTION_IDENTIFIER SVINT SUPPLY1 SUPPLY0 SUPER STRUCT STRING STATIC SPECPARAM SPECIFY SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RNMOS RETURN REPEAT RELEASE REG REF REALTIME REAL RCMOS P_XNOR P_POUNDPOUND P_NXOR P_NAND P_MINUSGT PULLUP PULLDOWN PROPERTY PROGRAM PRIORITY PRIMITIVE PMOS PLUS PLING PARAMETER OUTPUT OR OCTAL_BASE NULL NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULE MODPORT MINUS MACROMODULE LPAREN LONGINT LOGIC LOCALPARAM LCURLY JOIN_NONE JOIN_ANY JOIN INTERFACE INTEGER INPUT INOUT INITIAL IMPORT IF HEX_BASE HASH GENVAR GENERATE FUNCTION FORK FOREVER FORCE FOR FINAL EXTERN EXPORT EVENT ENUM ENDTASK ENDPROGRAM ENDMODULE ENDINTERFACE ENDGENERATE ENDCASE END ELSE DOUBLE_QUOTES DO DISABLE DEFPARAM DEFAULT DECIMAL_BASE DEASSIGN DASH_GT_GT COVER CONTINUE CONSTRAINT CONST CMOS CLOCKING CLASS CHANDLE CASEZ CASEX CASE CARET BYTE BUFIF1 BUFIF0 BUF BREAK BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT AND AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS #
follow(concurrent_assertion_item_declaration) = XOR XNOR WOR WIRE WHILE WAND WAIT_ORDER WAIT VIRTUAL VBAR UNSIGNED_NUMBER UNSIGNED UNIQUE UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE TASK SYSTEM_TASK_IDENTIFIER SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SPECPARAM SPECIFY SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RNMOS RETURN REPEAT RELEASE REG REF REALTIME REAL RCMOS P_XNOR P_POUNDPOUND P_NXOR P_NAND P_MINUSGT PULLUP PULLDOWN PROPERTY PROGRAM PRIORITY PRIMITIVE PMOS PLUS PLING PARAMETER OUTPUT OR OCTAL_BASE NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULE MODPORT MINUS MACROMODULE LPAREN LONGINT LOGIC LOCALPARAM LCURLY INTERFACE INTEGER INPUT INOUT INITIAL IMPORT IF HEX_BASE HASH GENVAR GENERATE FUNCTION FORK FOREVER FORCE FOR FINAL EXTERN EXPORT EVENT ENUM ENDPROGRAM ENDMODULE ENDINTERFACE ENDGENERATE ENDCLOCKING ENDCASE END ELSE DOUBLE_QUOTES DO DISABLE DEFPARAM DEFAULT DECIMAL_BASE DEASSIGN DASH_GT_GT COVER CONTINUE CONSTRAINT CONST CMOS CLOCKING CLASS CHANDLE CASEZ CASEX CASE CARET BYTE BUFIF1 BUFIF0 BUF BREAK BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT AND AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS #
follow(concurrent_assertion_item) = XOR XNOR WOR WIRE WHILE WAND WAIT_ORDER WAIT VIRTUAL VBAR UNSIGNED_NUMBER UNSIGNED UNIQUE UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE TASK SYSTEM_TASK_IDENTIFIER SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SPECPARAM SPECIFY SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RNMOS RETURN REPEAT RELEASE REG REF REALTIME REAL RCMOS P_XNOR P_POUNDPOUND P_NXOR P_NAND P_MINUSGT PULLUP PULLDOWN PROPERTY PROGRAM PRIORITY PRIMITIVE PMOS PLUS PLING PARAMETER OUTPUT OR OCTAL_BASE NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULE MODPORT MINUS MACROMODULE LPAREN LONGINT LOGIC LOCALPARAM LCURLY INTERFACE INTEGER INPUT INOUT INITIAL IMPORT IF HEX_BASE HASH GENVAR GENERATE FUNCTION FORK FOREVER FORCE FOR FINAL EXTERN EXPORT EVENT ENUM ENDPROGRAM ENDMODULE ENDINTERFACE ENDGENERATE ENDCASE END ELSE DOUBLE_QUOTES DO DISABLE DEFPARAM DEFAULT DECIMAL_BASE DEASSIGN DASH_GT_GT COVER CONTINUE CONSTRAINT CONST CMOS CLOCKING CLASS CHANDLE CASEZ CASEX CASE CARET BYTE BUFIF1 BUFIF0 BUF BREAK BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT AND AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS #
follow(concatenation_4) = RCURLY COMMA
follow(concatenation_18) = RCURLY COMMA
follow(concatenation_11) = RCURLY COMMA
follow(concatenation) = XOR XNOR WOR WITHIN WIRE WHILE WAND WAIT_ORDER WAIT VOID VIRTUAL VBAR_DASH_GT VBAR UNSIGNED_NUMBER UNSIGNED UNIQUE UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TOKEN_VBAR_VBAR TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_PLING_QUERY_EQUALS TOKEN_PLING_EQUALS_GT TOKEN_ONE TOKEN_NINE TOKEN_LBRACK_STAR_EQUALS TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIMES TIME TILDE_VBAR TILDE THROUGHOUT THIS TASK SYSTEM_TASK_IDENTIFIER SYSTEM_FUNCTION_IDENTIFIER SVINT SUPPLY1 SUPPLY0 SUPER STRUCT STRING STATIC SPECPARAM SPECIFY SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RPAREN RNMOS RETURN REPEAT RELEASE REG REF REALTIME REAL RCURLY RCMOS RBRACK QUERY P_XNOR P_SSRIGHT3 P_SRIGHT P_SLEFT3 P_SLEFT P_POW P_POUNDPOUND P_PLUSCOLON P_NXOR P_NOTEQUAL P_NAND P_MINUSGT P_MINUSCOLON P_LTE P_GTE P_EQUAL P_EQGT P_COLONEQ P_COLONDIV P_CASENOTEQUAL P_CASEEQUAL P_ANDAND PULLUP PULLDOWN PROPERTY PROGRAM PRIORITY PRIMITIVE PMOS PLUS PLING PARAMETER OUTPUT OR OCTAL_BASE NULL NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULO MODULE MODPORT MINUS MACROMODULE LPAREN LONGINT LOGIC LOCALPARAM LESS LCURLY LBRACK_STAR_DASH_GT LBRACK_STAR JOIN_NONE JOIN_ANY JOIN INTERSECT INTERFACE INTEGER INSIDE INPUT INOUT INITIAL IMPORT IFF IF HEX_BASE HASH GREATER GENVAR GENERATE FUNCTION FORK FOREVER FORCE FOR FINAL EXTERN EXPORT EVENT EQUALS_QUERY_EQUALS ENUM ENDTASK ENDPROGRAM ENDMODULE ENDINTERFACE ENDGENERATE ENDCASE END ELSE DOUBLE_QUOTES DO DIVIDE DIST DISABLE DEFPARAM DEFAULT DECIMAL_BASE DEASSIGN DASH_GT_GT COVER CONTINUE CONSTRAINT CONST COMMA COLON CMOS CLOCKING CLASS CHANDLE CASEZ CASEX CASE CARET BYTE BUFIF1 BUFIF0 BUF BREAK BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT AND AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS #
follow(combinational_body_4) = LEVEL_SYMBOL ENDTABLE
follow(cmos_switchtype) = SIMPLE_IDENTIFIER LPAREN HASH BACKSLASH
follow(clockvar_expression) = P_LTE
follow(clocking_skew) = SIMPLE_IDENTIFIER SEMICOLON OUTPUT BACKSLASH
follow(clocking_item) = SEQUENCE PROPERTY OUTPUT INPUT INOUT ENDCLOCKING DEFAULT
follow(clocking_event) = VOID VBAR UNSIGNED_NUMBER UNSIGNED TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS SYSTEM_FUNCTION_IDENTIFIER SVINT SUPER SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEMICOLON REG REALTIME REAL P_XNOR P_POUNDPOUND P_NXOR P_NAND PLUS PLING OCTAL_BASE NULL MINUS LPAREN LONGINT LOGIC LCURLY INTEGER HEX_BASE FIRST_MATCH DOUBLE_QUOTES DISABLE DECIMAL_BASE CARET BYTE BIT BINARY_BASE BACKSLASH AMPERSAND
follow(clocking_drive) = XOR XNOR WOR WIRE WHILE WAND WAIT_ORDER WAIT VOID VIRTUAL VBAR UNSIGNED_NUMBER UNSIGNED UNIQUE UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS TASK SYSTEM_TASK_IDENTIFIER SYSTEM_FUNCTION_IDENTIFIER SVINT SUPPLY1 SUPPLY0 SUPER STRUCT STRING STATIC SPECPARAM SPECIFY SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RNMOS RETURN REPEAT RELEASE REG REF REALTIME REAL RCMOS P_XNOR P_POUNDPOUND P_NXOR P_NAND P_MINUSGT PULLUP PULLDOWN PROPERTY PROGRAM PRIORITY PRIMITIVE PMOS PLUS PLING PARAMETER OUTPUT OR OCTAL_BASE NULL NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULE MODPORT MINUS MACROMODULE LPAREN LONGINT LOGIC LOCALPARAM LCURLY JOIN_NONE JOIN_ANY JOIN INTERFACE INTEGER INPUT INOUT INITIAL IMPORT IF HEX_BASE HASH GENVAR GENERATE FUNCTION FORK FOREVER FORCE FOR FINAL EXTERN EXPORT EVENT ENUM ENDTASK ENDPROGRAM ENDMODULE ENDINTERFACE ENDGENERATE ENDCASE END ELSE DOUBLE_QUOTES DO DISABLE DEFPARAM DEFAULT DECIMAL_BASE DEASSIGN DASH_GT_GT COVER CONTINUE CONSTRAINT CONST CMOS CLOCKING CLASS CHANDLE CASEZ CASEX CASE CARET BYTE BUFIF1 BUFIF0 BUF BREAK BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT AND AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS #
follow(clocking_direction) = SIMPLE_IDENTIFIER BACKSLASH
follow(clocking_decl_7) = SEQUENCE PROPERTY OUTPUT INPUT INOUT ENDCLOCKING DEFAULT
follow(class_scope_type_identifier_9) = SIMPLE_IDENTIFIER BACKSLASH
follow(class_scope_type_identifier_4) = SIMPLE_IDENTIFIER BACKSLASH
follow(class_scope_type_identifier) = SIMPLE_IDENTIFIER SEMICOLON RPAREN RBRACK COMMA BACKSLASH
follow(class_property_6) = UNION TIME SVINT STRUCT STRING STATIC SIMPLE_IDENTIFIER SHORTREAL SHORTINT REG REALTIME REAL PROTECTED LONGINT LOGIC LOCAL INTEGER EVENT ENUM CHANDLE BYTE BIT BACKSLASH
follow(class_property_2) = UNION TYPEDEF TIME SVINT STRUCT STRING STATIC SIMPLE_IDENTIFIER SHORTREAL SHORTINT REG REALTIME REAL RANDC RAND PROTECTED LONGINT LOGIC LOCAL INTEGER EVENT ENUM CONST CHANDLE BYTE BIT BACKSLASH AUTOMATIC
follow(class_property) = VIRTUAL UNION TYPEDEF TIME TASK SVINT STRUCT STRING STATIC SIMPLE_IDENTIFIER SHORTREAL SHORTINT REG REALTIME REAL RANDC RAND PROTECTED LONGINT LOGIC LOCAL INTEGER FUNCTION EXTERN EVENT ENUM ENDCLASS CONSTRAINT CONST CHANDLE BYTE BIT BACKSLASH AUTOMATIC
follow(class_method_9) = VIRTUAL TASK STATIC PROTECTED LOCAL FUNCTION
follow(class_method_5) = VIRTUAL STATIC PROTECTED LOCAL FUNCTION
follow(class_method_2) = VIRTUAL TASK STATIC PROTECTED LOCAL
follow(class_method) = VIRTUAL UNION TYPEDEF TIME TASK SVINT STRUCT STRING STATIC SIMPLE_IDENTIFIER SHORTREAL SHORTINT REG REALTIME REAL RANDC RAND PROTECTED LONGINT LOGIC LOCAL INTEGER FUNCTION EXTERN EVENT ENUM ENDCLASS CONSTRAINT CONST CHANDLE BYTE BIT BACKSLASH AUTOMATIC
follow(class_item_qualifier) = VIRTUAL UNION TYPEDEF TIME TASK SVINT STRUCT STRING STATIC SIMPLE_IDENTIFIER SHORTREAL SHORTINT REG REALTIME REAL RANDC RAND PROTECTED LONGINT LOGIC LOCAL INTEGER FUNCTION EVENT ENUM CONST CHANDLE BYTE BIT BACKSLASH AUTOMATIC
follow(class_item) = VIRTUAL UNION TYPEDEF TIME TASK SVINT STRUCT STRING STATIC SIMPLE_IDENTIFIER SHORTREAL SHORTINT REG REALTIME REAL RANDC RAND PROTECTED LONGINT LOGIC LOCAL INTEGER FUNCTION EXTERN EVENT ENUM ENDCLASS CONSTRAINT CONST CHANDLE BYTE BIT BACKSLASH AUTOMATIC
follow(class_declaration_11) = VIRTUAL UNION TYPEDEF TIME TASK SVINT STRUCT STRING STATIC SIMPLE_IDENTIFIER SHORTREAL SHORTINT REG REALTIME REAL RANDC RAND PROTECTED LONGINT LOGIC LOCAL INTEGER FUNCTION EXTERN EVENT ENUM ENDCLASS CONSTRAINT CONST CHANDLE BYTE BIT BACKSLASH AUTOMATIC
follow(class_constraint) = VIRTUAL UNION TYPEDEF TIME TASK SVINT STRUCT STRING STATIC SIMPLE_IDENTIFIER SHORTREAL SHORTINT REG REALTIME REAL RANDC RAND PROTECTED LONGINT LOGIC LOCAL INTEGER FUNCTION EXTERN EVENT ENUM ENDCLASS CONSTRAINT CONST CHANDLE BYTE BIT BACKSLASH AUTOMATIC
follow(charge_strength) = VECTORED UNSIGNED SIMPLE_IDENTIFIER SIGNED SCALARED LBRACK HASH BACKSLASH
follow(casting_type) = SQUOTE
follow(case_statement_8) = VOID VBAR UNSIGNED_NUMBER UNSIGNED TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS SYSTEM_FUNCTION_IDENTIFIER SVINT SUPER SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REALTIME REAL P_XNOR P_NXOR P_NAND PLUS PLING OCTAL_BASE NULL MINUS LPAREN LONGINT LOGIC LCURLY INTEGER HEX_BASE ENDCASE DOUBLE_QUOTES DEFAULT DECIMAL_BASE CARET BYTE BIT BINARY_BASE BACKSLASH AMPERSAND
follow(case_statement_26) = VOID VBAR UNSIGNED_NUMBER UNSIGNED TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS SYSTEM_FUNCTION_IDENTIFIER SVINT SUPER SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REALTIME REAL P_XNOR P_NXOR P_NAND PLUS PLING OCTAL_BASE NULL MINUS LPAREN LONGINT LOGIC LCURLY INTEGER HEX_BASE ENDCASE DOUBLE_QUOTES DEFAULT DECIMAL_BASE CARET BYTE BIT BINARY_BASE BACKSLASH AMPERSAND
follow(case_statement_17) = VOID VBAR UNSIGNED_NUMBER UNSIGNED TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS SYSTEM_FUNCTION_IDENTIFIER SVINT SUPER SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REALTIME REAL P_XNOR P_NXOR P_NAND PLUS PLING OCTAL_BASE NULL MINUS LPAREN LONGINT LOGIC LCURLY INTEGER HEX_BASE ENDCASE DOUBLE_QUOTES DEFAULT DECIMAL_BASE CARET BYTE BIT BINARY_BASE BACKSLASH AMPERSAND
follow(case_statement) = XOR XNOR WOR WIRE WHILE WAND WAIT_ORDER WAIT VOID VIRTUAL VBAR UNSIGNED_NUMBER UNSIGNED UNIQUE UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS TASK SYSTEM_TASK_IDENTIFIER SYSTEM_FUNCTION_IDENTIFIER SVINT SUPPLY1 SUPPLY0 SUPER STRUCT STRING STATIC SPECPARAM SPECIFY SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RNMOS RETURN REPEAT RELEASE REG REF REALTIME REAL RCMOS P_XNOR P_POUNDPOUND P_NXOR P_NAND P_MINUSGT PULLUP PULLDOWN PROPERTY PROGRAM PRIORITY PRIMITIVE PMOS PLUS PLING PARAMETER OUTPUT OR OCTAL_BASE NULL NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULE MODPORT MINUS MACROMODULE LPAREN LONGINT LOGIC LOCALPARAM LCURLY JOIN_NONE JOIN_ANY JOIN INTERFACE INTEGER INPUT INOUT INITIAL IMPORT IF HEX_BASE HASH GENVAR GENERATE FUNCTION FORK FOREVER FORCE FOR FINAL EXTERN EXPORT EVENT ENUM ENDTASK ENDPROGRAM ENDMODULE ENDINTERFACE ENDGENERATE ENDCASE END ELSE DOUBLE_QUOTES DO DISABLE DEFPARAM DEFAULT DECIMAL_BASE DEASSIGN DASH_GT_GT COVER CONTINUE CONSTRAINT CONST CMOS CLOCKING CLASS CHANDLE CASEZ CASEX CASE CARET BYTE BUFIF1 BUFIF0 BUF BREAK BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT AND AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS #
follow(case_item_3) = COMMA COLON
follow(case_item) = VOID VBAR UNSIGNED_NUMBER UNSIGNED TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS SYSTEM_FUNCTION_IDENTIFIER SVINT SUPER SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REALTIME REAL P_XNOR P_NXOR P_NAND PLUS PLING OCTAL_BASE NULL MINUS LPAREN LONGINT LOGIC LCURLY INTEGER HEX_BASE ENDCASE DOUBLE_QUOTES DEFAULT DECIMAL_BASE CARET BYTE BIT BINARY_BASE BACKSLASH AMPERSAND
follow(boolean_abbrev) = WITHIN VBAR_DASH_GT TOKEN_PLING_EQUALS_GT SEMICOLON RPAREN P_POUNDPOUND OR INTERSECT AND
follow(blocking_assignment) = SEMICOLON
follow(block_variable_declaration) = WHILE WAIT_ORDER WAIT UNIQUE UNION TYPEDEF TOKEN_PLUS_PLUS TOKEN_DASH_DASH TIME SYSTEM_TASK_IDENTIFIER SVINT STRUCT STRING STATIC SIMPLE_IDENTIFIER SHORTREAL SHORTINT SEMICOLON RETURN REPEAT RELEASE REG REF REALTIME REAL P_POUNDPOUND P_MINUSGT PRIORITY PARAMETER OUTPUT LONGINT LOGIC LOCALPARAM LCURLY JOIN_NONE JOIN_ANY JOIN INTEGER INPUT INOUT IF HASH FORK FOREVER FORCE FOR EVENT ENUM ENDTASK ENDFUNCTION END DO DISABLE DEASSIGN DASH_GT_GT COVER CONTINUE CONST CHANDLE CASEZ CASEX CASE BYTE BREAK BIT BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT
follow(block_item_declaration) = WHILE WAIT_ORDER WAIT UNIQUE UNION TYPEDEF TOKEN_PLUS_PLUS TOKEN_DASH_DASH TIME SYSTEM_TASK_IDENTIFIER SVINT STRUCT STRING STATIC SIMPLE_IDENTIFIER SHORTREAL SHORTINT SEMICOLON RETURN REPEAT RELEASE REG REF REALTIME REAL P_POUNDPOUND P_MINUSGT PRIORITY PARAMETER OUTPUT LONGINT LOGIC LOCALPARAM LCURLY JOIN_NONE JOIN_ANY JOIN INTEGER INPUT INOUT IF HASH FORK FOREVER FORCE FOR EVENT ENUM ENDTASK ENDFUNCTION END DO DISABLE DEASSIGN DASH_GT_GT COVER CONTINUE CONST CHANDLE CASEZ CASEX CASE BYTE BREAK BIT BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT
follow(block_data_declaration) = WHILE WAIT_ORDER WAIT UNIQUE UNION TYPEDEF TOKEN_PLUS_PLUS TOKEN_DASH_DASH TIME SYSTEM_TASK_IDENTIFIER SVINT STRUCT STRING STATIC SIMPLE_IDENTIFIER SHORTREAL SHORTINT SEMICOLON RETURN REPEAT RELEASE REG REF REALTIME REAL P_POUNDPOUND P_MINUSGT PRIORITY PARAMETER OUTPUT LONGINT LOGIC LOCALPARAM LCURLY JOIN_NONE JOIN_ANY JOIN INTEGER INPUT INOUT IF HASH FORK FOREVER FORCE FOR EVENT ENUM ENDTASK ENDFUNCTION END DO DISABLE DEASSIGN DASH_GT_GT COVER CONTINUE CONST CHANDLE CASEZ CASEX CASE BYTE BREAK BIT BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT
follow(bind_instantiation) = SEMICOLON
follow(bind_directive) = XOR XNOR WOR WIRE WHILE WAND WAIT_ORDER WAIT VIRTUAL VBAR UNSIGNED_NUMBER UNSIGNED UNIQUE UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE TASK SYSTEM_TASK_IDENTIFIER SVINT SUPPLY1 SUPPLY0 STRUCT STRING STATIC SPECPARAM SPECIFY SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RNMOS RETURN REPEAT RELEASE REG REF REALTIME REAL RCMOS P_XNOR P_POUNDPOUND P_NXOR P_NAND P_MINUSGT PULLUP PULLDOWN PROPERTY PROGRAM PRIORITY PRIMITIVE PMOS PLUS PLING PARAMETER OUTPUT OR OCTAL_BASE NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULE MODPORT MINUS MACROMODULE LPAREN LONGINT LOGIC LOCALPARAM LCURLY INTERFACE INTEGER INPUT INOUT INITIAL IMPORT IF HEX_BASE HASH GENVAR GENERATE FUNCTION FORK FOREVER FORCE FOR FINAL EXTERN EXPORT EVENT ENUM ENDMODULE ENDINTERFACE ENDGENERATE ENDCASE END ELSE DOUBLE_QUOTES DO DISABLE DEFPARAM DEFAULT DECIMAL_BASE DEASSIGN DASH_GT_GT COVER CONTINUE CONSTRAINT CONST CMOS CLOCKING CLASS CHANDLE CASEZ CASEX CASE CARET BYTE BUFIF1 BUFIF0 BUF BREAK BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT AND AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS #
follow(binary_value_3) = XOR XNOR WOR WITHIN WIRE WHILE WAND WAIT_ORDER WAIT VOID VIRTUAL VBAR_DASH_GT VBAR UNSIGNED_NUMBER UNSIGNED UNIQUE UNION UNDERSCORE TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TOKEN_VBAR_VBAR TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_PLING_QUERY_EQUALS TOKEN_PLING_EQUALS_GT TOKEN_ONE TOKEN_NINE TOKEN_LBRACK_STAR_EQUALS TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIMES TIME TILDE_VBAR TILDE THROUGHOUT THIS TASK SYSTEM_TASK_IDENTIFIER SYSTEM_FUNCTION_IDENTIFIER SVINT SUPPLY1 SUPPLY0 SUPER STRUCT STRING STATIC SQUOTE SPECPARAM SPECIFY SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RPAREN RNMOS RETURN REPEAT RELEASE REG REF REALTIME REAL RCURLY RCMOS RBRACK QUERY P_XNOR P_SSRIGHT3 P_SRIGHT P_SLEFT3 P_SLEFT P_POW P_POUNDPOUND P_PLUSCOLON P_NXOR P_NOTEQUAL P_NAND P_MINUSGT P_MINUSCOLON P_LTE P_GTE P_EQUAL P_EQGT P_COLONEQ P_COLONDIV P_CASENOTEQUAL P_CASEEQUAL P_ANDAND PULLUP PULLDOWN PROPERTY PROGRAM PRIORITY PRIMITIVE PMOS PLUS PLING PARAMETER OUTPUT OR OCTAL_BASE NULL NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULO MODULE MODPORT MINUS MACROMODULE LPAREN LONGINT LOGIC LOCALPARAM LESS LCURLY LBRACK_STAR_DASH_GT LBRACK_STAR JOIN_NONE JOIN_ANY JOIN INTERSECT INTERFACE INTEGER INSIDE INPUT INOUT INITIAL IMPORT IFF IF HEX_BASE HASH GREATER GENVAR GENERATE FUNCTION FORK FOREVER FORCE FOR FIRST_MATCH FINAL EXTERN EXPORT EVENT EQUALS_QUERY_EQUALS ENUM ENDTASK ENDPROGRAM ENDMODULE ENDINTERFACE ENDGENERATE ENDCASE END ELSE DOUBLE_QUOTES DO DIVIDE DIST DISABLE DEFPARAM DEFAULT DECIMAL_BASE DEASSIGN DASH_GT_GT COVER CONTINUE CONSTRAINT CONST COMMA COLON CMOS CLOCKING CLASS CHANDLE CASEZ CASEX CASE CARET BYTE BUFIF1 BUFIF0 BUF BREAK BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT AND AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS #
follow(binary_operator) = VOID VBAR UNSIGNED_NUMBER UNSIGNED TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS SYSTEM_FUNCTION_IDENTIFIER SVINT SUPER SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REALTIME REAL P_XNOR P_NXOR P_NAND PLUS PLING OCTAL_BASE NULL MINUS LPAREN LONGINT LOGIC LCURLY INTEGER HEX_BASE DOUBLE_QUOTES DECIMAL_BASE CARET BYTE BIT BINARY_BASE BACKSLASH AMPERSAND
follow(binary_module_path_operator) = VBAR UNSIGNED_NUMBER TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TILDE_VBAR TILDE SYSTEM_FUNCTION_IDENTIFIER SIMPLE_IDENTIFIER P_XNOR P_NXOR P_NAND PLING OCTAL_BASE LPAREN LCURLY HEX_BASE DECIMAL_BASE CARET BINARY_BASE BACKSLASH AMPERSAND
follow(binary_digit) = Z_DIGIT X_DIGIT XOR XNOR WOR WITHIN WIRE WHILE WAND WAIT_ORDER WAIT VOID VIRTUAL VBAR_DASH_GT VBAR UNSIGNED_NUMBER UNSIGNED UNIQUE UNION UNDERSCORE TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TOKEN_ZERO TOKEN_VBAR_VBAR TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_PLING_QUERY_EQUALS TOKEN_PLING_EQUALS_GT TOKEN_ONE TOKEN_NINE TOKEN_LBRACK_STAR_EQUALS TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIMES TIME TILDE_VBAR TILDE THROUGHOUT THIS TASK SYSTEM_TASK_IDENTIFIER SYSTEM_FUNCTION_IDENTIFIER SVINT SUPPLY1 SUPPLY0 SUPER STRUCT STRING STATIC SQUOTE SPECPARAM SPECIFY SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RPAREN RNMOS RETURN REPEAT RELEASE REG REF REALTIME REAL RCURLY RCMOS RBRACK QUERY P_XNOR P_SSRIGHT3 P_SRIGHT P_SLEFT3 P_SLEFT P_POW P_POUNDPOUND P_PLUSCOLON P_NXOR P_NOTEQUAL P_NAND P_MINUSGT P_MINUSCOLON P_LTE P_GTE P_EQUAL P_EQGT P_COLONEQ P_COLONDIV P_CASENOTEQUAL P_CASEEQUAL P_ANDAND PULLUP PULLDOWN PROPERTY PROGRAM PRIORITY PRIMITIVE PMOS PLUS PLING PARAMETER OUTPUT OR OCTAL_BASE NULL NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULO MODULE MODPORT MINUS MACROMODULE LPAREN LONGINT LOGIC LOCALPARAM LESS LCURLY LBRACK_STAR_DASH_GT LBRACK_STAR JOIN_NONE JOIN_ANY JOIN INTERSECT INTERFACE INTEGER INSIDE INPUT INOUT INITIAL IMPORT IFF IF HEX_BASE HASH GREATER GENVAR GENERATE FUNCTION FORK FOREVER FORCE FOR FIRST_MATCH FINAL EXTERN EXPORT EVENT EQUALS_QUERY_EQUALS ENUM ENDTASK ENDPROGRAM ENDMODULE ENDINTERFACE ENDGENERATE ENDCASE END ELSE DOUBLE_QUOTES DO DIVIDE DIST DISABLE DEFPARAM DEFAULT DECIMAL_BASE DEASSIGN DASH_GT_GT COVER CONTINUE CONSTRAINT CONST COMMA COLON CMOS CLOCKING CLASS CHANDLE CASEZ CASEX CASE CARET BYTE BUFIF1 BUFIF0 BUF BREAK BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT AND AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS #
follow(associative_dimension) = SEMICOLON RPAREN EQUALS COMMA
follow(assignment_operator) = VOID VBAR UNSIGNED_NUMBER UNSIGNED TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS SYSTEM_FUNCTION_IDENTIFIER SVINT SUPER SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT REG REALTIME REAL P_XNOR P_NXOR P_NAND PLUS PLING OCTAL_BASE NULL MINUS LPAREN LONGINT LOGIC LCURLY INTEGER HEX_BASE DOUBLE_QUOTES DECIMAL_BASE CARET BYTE BIT BINARY_BASE BACKSLASH AMPERSAND
follow(assert_property_statement) = XOR XNOR WOR WIRE WHILE WAND WAIT_ORDER WAIT VOID VIRTUAL VBAR UNSIGNED_NUMBER UNSIGNED UNIQUE UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS TASK SYSTEM_TASK_IDENTIFIER SYSTEM_FUNCTION_IDENTIFIER SVINT SUPPLY1 SUPPLY0 SUPER STRUCT STRING STATIC SPECPARAM SPECIFY SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RNMOS RETURN REPEAT RELEASE REG REF REALTIME REAL RCMOS P_XNOR P_POUNDPOUND P_NXOR P_NAND P_MINUSGT PULLUP PULLDOWN PROPERTY PROGRAM PRIORITY PRIMITIVE PMOS PLUS PLING PARAMETER OUTPUT OR OCTAL_BASE NULL NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULE MODPORT MINUS MACROMODULE LPAREN LONGINT LOGIC LOCALPARAM LCURLY JOIN_NONE JOIN_ANY JOIN INTERFACE INTEGER INPUT INOUT INITIAL IMPORT IF HEX_BASE HASH GENVAR GENERATE FUNCTION FORK FOREVER FORCE FOR FINAL EXTERN EXPORT EVENT ENUM ENDTASK ENDPROGRAM ENDMODULE ENDINTERFACE ENDGENERATE ENDCASE END ELSE DOUBLE_QUOTES DO DISABLE DEFPARAM DEFAULT DECIMAL_BASE DEASSIGN DASH_GT_GT COVER CONTINUE CONSTRAINT CONST CMOS CLOCKING CLASS CHANDLE CASEZ CASEX CASE CARET BYTE BUFIF1 BUFIF0 BUF BREAK BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT AND AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS #
follow(array_member_label) = COLON
follow(actual_arg_list_4) = RPAREN COMMA
follow(actual_arg_list_13) = RPAREN COMMA
follow(actual_arg_list) = RPAREN
follow(action_block) = XOR XNOR WOR WIRE WHILE WAND WAIT_ORDER WAIT VOID VIRTUAL VBAR UNSIGNED_NUMBER UNSIGNED UNIQUE UNION TYPEDEF TRIREG TRIOR TRIAND TRI1 TRI0 TRI TRANIF1 TRANIF0 TRAN TOKEN_TWO TOKEN_THREE TOKEN_SIX TOKEN_SEVEN TOKEN_QUOTE_Z2 TOKEN_QUOTE_Z1 TOKEN_QUOTE_X2 TOKEN_QUOTE_X1 TOKEN_QUOTE_TRUE TOKEN_QUOTE_FALSE TOKEN_PLUS_PLUS TOKEN_ONE TOKEN_NINE TOKEN_FOUR TOKEN_FIVE TOKEN_EIGHT TOKEN_DASH_DASH TIME TILDE_VBAR TILDE THIS TASK SYSTEM_TASK_IDENTIFIER SYSTEM_FUNCTION_IDENTIFIER SVINT SUPPLY1 SUPPLY0 SUPER STRUCT STRING STATIC SPECPARAM SPECIFY SIMPLE_IDENTIFIER SIGNED SHORTREAL SHORTINT SEQUENCE SEMICOLON RTRANIF1 RTRANIF0 RTRAN RPMOS RNMOS RETURN REPEAT RELEASE REG REF REALTIME REAL RCMOS P_XNOR P_POUNDPOUND P_NXOR P_NAND P_MINUSGT PULLUP PULLDOWN PROPERTY PROGRAM PRIORITY PRIMITIVE PMOS PLUS PLING PARAMETER OUTPUT OR OCTAL_BASE NULL NOTIF1 NOTIF0 NOT NOR NMOS NAND MODULE MODPORT MINUS MACROMODULE LPAREN LONGINT LOGIC LOCALPARAM LCURLY JOIN_NONE JOIN_ANY JOIN INTERFACE INTEGER INPUT INOUT INITIAL IMPORT IF HEX_BASE HASH GENVAR GENERATE FUNCTION FORK FOREVER FORCE FOR FINAL EXTERN EXPORT EVENT ENUM ENDTASK ENDPROGRAM ENDMODULE ENDINTERFACE ENDGENERATE ENDCASE END ELSE DOUBLE_QUOTES DO DISABLE DEFPARAM DEFAULT DECIMAL_BASE DEASSIGN DASH_GT_GT COVER CONTINUE CONSTRAINT CONST CMOS CLOCKING CLASS CHANDLE CASEZ CASEX CASE CARET BYTE BUFIF1 BUFIF0 BUF BREAK BIT BIND BINARY_BASE BEGIN BACKSLASH AUTOMATIC AT_STAR AT ASSIGN ASSERT AND AMPERSAND ALWAYS_LATCH ALWAYS_FF ALWAYS_COMB ALWAYS ALIAS #
Built an LR(0) automaton with 16534 states.
The grammar is not SLR(1) -- 1554 states have a conflict.
The construction mode is pager.
Built an LR(1) automaton with 16538 states.
Warning: 1392 states have shift/reduce conflicts.
Warning: 1245 states have reduce/reduce conflicts.
Warning: 5132 shift/reduce conflicts were arbitrarily resolved.
Warning: 7328 reduce/reduce conflicts were arbitrarily resolved.
Warning: 742 end-of-stream conflicts were arbitrarily resolved.
File "sysver.mly", line 11593, characters 31-31:
Warning: production class_scope_type_identifier_9 -> is never reduced.
File "sysver.mly", line 8251, characters 3-21:
Warning: production constant_primary -> identifier is never reduced.
File "sysver.mly", line 8253, characters 3-21:
Warning: production constant_primary -> identifier is never reduced.
File "sysver.mly", line 8254, characters 3-21:
Warning: production constant_primary -> identifier is never reduced.
File "sysver.mly", line 8322, characters 3-51:
Warning: production disable_statement -> DISABLE hierarchical_identifier SEMICOLON is never reduced.
File "sysver.mly", line 10491, characters 17-17:
Warning: production dpi_dimension_4 -> is never reduced.
File "sysver.mly", line 10277, characters 3-121:
Warning: production dpi_function_proto -> function_data_type identifier LPAREN RPAREN is never reduced.
File "sysver.mly", line 10277, characters 3-121:
Warning: production dpi_function_proto -> signing function_data_type identifier LPAREN RPAREN is never reduced.
File "sysver.mly", line 12727, characters 3-81:
Warning: production escaped_hierarchical_identifier_3 -> escaped_hierarchical_identifier_3 DOT SIMPLE_IDENTIFIER simple_hierarchical_branch_3 is never reduced.
File "sysver.mly", line 12728, characters 3-41:
Warning: production escaped_hierarchical_identifier_3 -> DOT BACKSLASH TOKEN_ANY_ASCII white_space escaped_hierarchical_branch_3 is never reduced.
File "sysver.mly", line 12686, characters 33-33:
Warning: production function_if_else_if_statement_8 -> is never reduced.
File "sysver.mly", line 12687, characters 3-157:
Warning: production function_if_else_if_statement_8 -> function_if_else_if_statement_8 ELSE IF LPAREN expression RPAREN function_statement_or_null is never reduced.
File "sysver.mly", line 12687, characters 3-157:
Warning: production function_if_else_if_statement_8 -> function_if_else_if_statement_8 ELSE unique_priority IF LPAREN expression RPAREN function_statement_or_null is never reduced.
File "sysver.mly", line 12262, characters 24-24:
Warning: production if_else_if_statement_8 -> is never reduced.
File "sysver.mly", line 12263, characters 3-130:
Warning: production if_else_if_statement_8 -> if_else_if_statement_8 ELSE IF LPAREN expression RPAREN statement_or_null is never reduced.
File "sysver.mly", line 12263, characters 3-130:
Warning: production if_else_if_statement_8 -> if_else_if_statement_8 ELSE unique_priority IF LPAREN expression RPAREN statement_or_null is never reduced.
File "sysver.mly", line 9933, characters 24-54:
Warning: production implicit_class_handle -> is never reduced.
File "sysver.mly", line 9934, characters 3-33:
Warning: production implicit_class_handle -> is never reduced.
File "sysver.mly", line 9827, characters 3-20:
Warning: production input_identifier -> identifier is never reduced.
File "sysver.mly", line 9440, characters 3-33:
Warning: production module_path_primary -> identifier is never reduced.
File "sysver.mly", line 8315, characters 3-20:
Warning: production output_identifier -> identifier is never reduced.
File "sysver.mly", line 11710, characters 18-18:
Warning: production sequence_expr_17 -> is never reduced.
File "sysver.mly", line 549, characters 7-25:
Warning: production start -> source_text_3 is never reduced.
File "sysver.mly", line 549, characters 7-25:
Warning: production start -> timeunits_declaration source_text_3 is never reduced.
File "sysver.mly", line 8416, characters 3-22:
Warning: production statement_item -> hierarchical_identifier SEMICOLON is never reduced.
File "sysver.mly", line 8416, characters 3-22:
Warning: production statement_item -> hierarchical_identifier LPAREN list_of_arguments RPAREN SEMICOLON is never reduced.
File "sysver.mly", line 8664, characters 3-20:
Warning: production struct_member_label -> identifier is never reduced.
File "sysver.mly", line 9634, characters 3-20:
Warning: production task_or_function_identifier -> identifier is never reduced.
File "sysver.mly", line 10119, characters 3-10:
Warning: production tf_data_type -> CHANDLE is never reduced.
Warning: in total, 29 productions are never reduced.
4989 out of 16538 states have a default reduction.
5810 out of 16538 states are represented.
0 out of 1012 symbols keep track of their start position.
0 out of 1012 symbols keep track of their end position.
3881 out of 5222 productions exploit shiftreduce optimization.
0 out of 16538 states can peek at an error.
38746 functions before inlining, 1365 functions after inlining.
