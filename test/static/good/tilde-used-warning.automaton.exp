State 0:
main' -> . main [ # ]
-- On A shift to state 1
-- On main shift to state 3
-- On hop(paire(A,B)) shift to state 4

State 1:
hop(paire(A,B)) -> A . B [ A ]
-- On B shift to state 2

State 2:
hop(paire(A,B)) -> A B . [ A ]
-- On A reduce production hop(paire(A,B)) -> A B

State 3:
main' -> main . [ # ]
-- On # accept main

State 4:
main -> hop(paire(A,B)) . A B fst(paire(A,B)) bizarre_fst(paire(A,B)) snd(paire(A,B)) odd C D EOF [ # ]
-- On A shift to state 5

State 5:
main -> hop(paire(A,B)) A . B fst(paire(A,B)) bizarre_fst(paire(A,B)) snd(paire(A,B)) odd C D EOF [ # ]
-- On B shift to state 6

State 6:
main -> hop(paire(A,B)) A B . fst(paire(A,B)) bizarre_fst(paire(A,B)) snd(paire(A,B)) odd C D EOF [ # ]
-- On A shift to state 7
-- On fst(paire(A,B)) shift to state 9

State 7:
fst(paire(A,B)) -> A . B [ A ]
-- On B shift to state 8

State 8:
fst(paire(A,B)) -> A B . [ A ]
-- On A reduce production fst(paire(A,B)) -> A B

State 9:
main -> hop(paire(A,B)) A B fst(paire(A,B)) . bizarre_fst(paire(A,B)) snd(paire(A,B)) odd C D EOF [ # ]
-- On A shift to state 10
-- On bizarre_fst(paire(A,B)) shift to state 12

State 10:
bizarre_fst(paire(A,B)) -> A . B [ A ]
-- On B shift to state 11

State 11:
bizarre_fst(paire(A,B)) -> A B . [ A ]
-- On A reduce production bizarre_fst(paire(A,B)) -> A B

State 12:
main -> hop(paire(A,B)) A B fst(paire(A,B)) bizarre_fst(paire(A,B)) . snd(paire(A,B)) odd C D EOF [ # ]
-- On A shift to state 13
-- On snd(paire(A,B)) shift to state 15

State 13:
snd(paire(A,B)) -> A . B [ A ]
-- On B shift to state 14

State 14:
snd(paire(A,B)) -> A B . [ A ]
-- On A reduce production snd(paire(A,B)) -> A B

State 15:
main -> hop(paire(A,B)) A B fst(paire(A,B)) bizarre_fst(paire(A,B)) snd(paire(A,B)) . odd C D EOF [ # ]
-- On A shift to state 16
-- On odd shift to state 17
-- On a shift to state 21

State 16:
a -> A . [ B ]
-- On B reduce production a -> A

State 17:
main -> hop(paire(A,B)) A B fst(paire(A,B)) bizarre_fst(paire(A,B)) snd(paire(A,B)) odd . C D EOF [ # ]
-- On C shift to state 18

State 18:
main -> hop(paire(A,B)) A B fst(paire(A,B)) bizarre_fst(paire(A,B)) snd(paire(A,B)) odd C . D EOF [ # ]
-- On D shift to state 19

State 19:
main -> hop(paire(A,B)) A B fst(paire(A,B)) bizarre_fst(paire(A,B)) snd(paire(A,B)) odd C D . EOF [ # ]
-- On EOF shift to state 20

State 20:
main -> hop(paire(A,B)) A B fst(paire(A,B)) bizarre_fst(paire(A,B)) snd(paire(A,B)) odd C D EOF . [ # ]
-- On # reduce production main -> hop(paire(A,B)) A B fst(paire(A,B)) bizarre_fst(paire(A,B)) snd(paire(A,B)) odd C D EOF

State 21:
odd -> a . b [ C ]
-- On B shift to state 22
-- On b shift to state 23

State 22:
b -> B . [ C ]
-- On C reduce production b -> B

State 23:
odd -> a b . [ C ]
-- On C reduce production odd -> a b

