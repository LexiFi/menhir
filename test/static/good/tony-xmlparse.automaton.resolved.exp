State 0:
## Known stack suffix:
##
## LR(1) items:
document' -> . document [ # ]
## Transitions:
-- On XMLOPEN shift to state 1
-- On xmlopen shift to state 2
-- On xmldecl shift to state 19
-- On prolog shift to state 44
-- On misc shift to state 71
-- On document shift to state 74
## Reductions:
-- On PIOPEN reduce production misc ->
-- On OPEN reduce production misc ->
-- On DTDOPEN reduce production misc ->
-- On COMMENT reduce production misc ->
-- On CHUNK reduce production misc ->

State 1:
## Known stack suffix:
## XMLOPEN
## LR(1) items:
xmlopen -> XMLOPEN . [ VERSION ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production xmlopen -> XMLOPEN

State 2:
## Known stack suffix:
## xmlopen
## LR(1) items:
xmldecl -> xmlopen . xmlinfo xmlclose [ PIOPEN OPEN DTDOPEN COMMENT CHUNK ]
## Transitions:
-- On VERSION shift to state 3
-- On xmlinfo shift to state 6
-- On version shift to state 9
## Reductions:

State 3:
## Known stack suffix:
## VERSION
## LR(1) items:
version -> VERSION . EQ STRING [ XMLCLOSE STANDALONE ENCODING ]
## Transitions:
-- On EQ shift to state 4
## Reductions:

State 4:
## Known stack suffix:
## VERSION EQ
## LR(1) items:
version -> VERSION EQ . STRING [ XMLCLOSE STANDALONE ENCODING ]
## Transitions:
-- On STRING shift to state 5
## Reductions:

State 5:
## Known stack suffix:
## VERSION EQ STRING
## LR(1) items:
version -> VERSION EQ STRING . [ XMLCLOSE STANDALONE ENCODING ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production version -> VERSION EQ STRING

State 6:
## Known stack suffix:
## xmlopen xmlinfo
## LR(1) items:
xmldecl -> xmlopen xmlinfo . xmlclose [ PIOPEN OPEN DTDOPEN COMMENT CHUNK ]
## Transitions:
-- On XMLCLOSE shift to state 7
-- On xmlclose shift to state 8
## Reductions:

State 7:
## Known stack suffix:
## XMLCLOSE
## LR(1) items:
xmlclose -> XMLCLOSE . [ PIOPEN OPEN DTDOPEN COMMENT CHUNK ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production xmlclose -> XMLCLOSE

State 8:
## Known stack suffix:
## xmlopen xmlinfo xmlclose
## LR(1) items:
xmldecl -> xmlopen xmlinfo xmlclose . [ PIOPEN OPEN DTDOPEN COMMENT CHUNK ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production xmldecl -> xmlopen xmlinfo xmlclose

State 9:
## Known stack suffix:
## version
## LR(1) items:
xmlinfo -> version . encoding sddecl [ XMLCLOSE ]
xmlinfo -> version . [ XMLCLOSE ]
xmlinfo -> version . encoding [ XMLCLOSE ]
xmlinfo -> version . sddecl [ XMLCLOSE ]
## Transitions:
-- On STANDALONE shift to state 10
-- On ENCODING shift to state 13
-- On sddecl shift to state 16
-- On encoding shift to state 17
## Reductions:
-- On XMLCLOSE reduce production xmlinfo -> version

State 10:
## Known stack suffix:
## STANDALONE
## LR(1) items:
sddecl -> STANDALONE . EQ STRING [ XMLCLOSE ]
## Transitions:
-- On EQ shift to state 11
## Reductions:

State 11:
## Known stack suffix:
## STANDALONE EQ
## LR(1) items:
sddecl -> STANDALONE EQ . STRING [ XMLCLOSE ]
## Transitions:
-- On STRING shift to state 12
## Reductions:

State 12:
## Known stack suffix:
## STANDALONE EQ STRING
## LR(1) items:
sddecl -> STANDALONE EQ STRING . [ XMLCLOSE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production sddecl -> STANDALONE EQ STRING

State 13:
## Known stack suffix:
## ENCODING
## LR(1) items:
encoding -> ENCODING . EQ STRING [ XMLCLOSE STANDALONE ]
## Transitions:
-- On EQ shift to state 14
## Reductions:

State 14:
## Known stack suffix:
## ENCODING EQ
## LR(1) items:
encoding -> ENCODING EQ . STRING [ XMLCLOSE STANDALONE ]
## Transitions:
-- On STRING shift to state 15
## Reductions:

State 15:
## Known stack suffix:
## ENCODING EQ STRING
## LR(1) items:
encoding -> ENCODING EQ STRING . [ XMLCLOSE STANDALONE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production encoding -> ENCODING EQ STRING

State 16:
## Known stack suffix:
## version sddecl
## LR(1) items:
xmlinfo -> version sddecl . [ XMLCLOSE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production xmlinfo -> version sddecl

State 17:
## Known stack suffix:
## version encoding
## LR(1) items:
xmlinfo -> version encoding . sddecl [ XMLCLOSE ]
xmlinfo -> version encoding . [ XMLCLOSE ]
## Transitions:
-- On STANDALONE shift to state 10
-- On sddecl shift to state 18
## Reductions:
-- On XMLCLOSE reduce production xmlinfo -> version encoding

State 18:
## Known stack suffix:
## version encoding sddecl
## LR(1) items:
xmlinfo -> version encoding sddecl . [ XMLCLOSE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production xmlinfo -> version encoding sddecl

State 19:
## Known stack suffix:
## xmldecl
## LR(1) items:
prolog -> xmldecl . misc [ OPEN ]
prolog -> xmldecl . misc doctype misc [ OPEN ]
## Transitions:
-- On misc shift to state 20
## Default reduction:
-- After reading the next token, reduce production misc ->

State 20:
## Known stack suffix:
## xmldecl misc
## LR(1) items:
misc -> misc . pi [ PIOPEN OPEN DTDOPEN COMMENT CHUNK ]
misc -> misc . CHUNK [ PIOPEN OPEN DTDOPEN COMMENT CHUNK ]
misc -> misc . COMMENT [ PIOPEN OPEN DTDOPEN COMMENT CHUNK ]
prolog -> xmldecl misc . [ OPEN ]
prolog -> xmldecl misc . doctype misc [ OPEN ]
## Transitions:
-- On PIOPEN shift to state 21
-- On DTDOPEN shift to state 22
-- On COMMENT shift to state 23
-- On CHUNK shift to state 24
-- On piopen shift to state 25
-- On pi shift to state 29
-- On dtdopen shift to state 30
-- On doctype shift to state 42
## Reductions:
-- On OPEN reduce production prolog -> xmldecl misc

State 21:
## Known stack suffix:
## PIOPEN
## LR(1) items:
piopen -> PIOPEN . [ WORD PICLOSE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production piopen -> PIOPEN

State 22:
## Known stack suffix:
## DTDOPEN
## LR(1) items:
dtdopen -> DTDOPEN . [ NAME ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dtdopen -> DTDOPEN

State 23:
## Known stack suffix:
## misc COMMENT
## LR(1) items:
misc -> misc COMMENT . [ PIOPEN OPEN EOF DTDOPEN COMMENT CHUNK ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production misc -> misc COMMENT

State 24:
## Known stack suffix:
## misc CHUNK
## LR(1) items:
misc -> misc CHUNK . [ PIOPEN OPEN EOF DTDOPEN COMMENT CHUNK ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production misc -> misc CHUNK

State 25:
## Known stack suffix:
## piopen
## LR(1) items:
pi -> piopen . picontent PICLOSE [ PIOPEN OPENSLASH OPEN EOF DTDOPEN COMMENT CHUNK ]
## Transitions:
-- On picontent shift to state 26
## Default reduction:
-- After reading the next token, reduce production picontent ->

State 26:
## Known stack suffix:
## piopen picontent
## LR(1) items:
pi -> piopen picontent . PICLOSE [ PIOPEN OPENSLASH OPEN EOF DTDOPEN COMMENT CHUNK ]
picontent -> picontent . WORD [ WORD PICLOSE ]
## Transitions:
-- On WORD shift to state 27
-- On PICLOSE shift to state 28
## Reductions:

State 27:
## Known stack suffix:
## picontent WORD
## LR(1) items:
picontent -> picontent WORD . [ WORD PICLOSE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production picontent -> picontent WORD

State 28:
## Known stack suffix:
## piopen picontent PICLOSE
## LR(1) items:
pi -> piopen picontent PICLOSE . [ PIOPEN OPENSLASH OPEN EOF DTDOPEN COMMENT CHUNK ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pi -> piopen picontent PICLOSE

State 29:
## Known stack suffix:
## misc pi
## LR(1) items:
misc -> misc pi . [ PIOPEN OPEN EOF DTDOPEN COMMENT CHUNK ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production misc -> misc pi

State 30:
## Known stack suffix:
## dtdopen
## LR(1) items:
doctype -> dtdopen . NAME ext markup dtdclose [ PIOPEN OPEN COMMENT CHUNK ]
## Transitions:
-- On NAME shift to state 31
## Reductions:

State 31:
## Known stack suffix:
## dtdopen NAME
## LR(1) items:
doctype -> dtdopen NAME . ext markup dtdclose [ PIOPEN OPEN COMMENT CHUNK ]
## Transitions:
-- On SYSTEM shift to state 32
-- On PUBLIC shift to state 34
-- On ext shift to state 37
## Reductions:
-- On error reduce production ext ->
-- On DTDCLOSE reduce production ext ->

State 32:
## Known stack suffix:
## SYSTEM
## LR(1) items:
ext -> SYSTEM . STRING [ error DTDCLOSE ]
## Transitions:
-- On STRING shift to state 33
## Reductions:

State 33:
## Known stack suffix:
## SYSTEM STRING
## LR(1) items:
ext -> SYSTEM STRING . [ error DTDCLOSE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ext -> SYSTEM STRING

State 34:
## Known stack suffix:
## PUBLIC
## LR(1) items:
ext -> PUBLIC . STRING STRING [ error DTDCLOSE ]
## Transitions:
-- On STRING shift to state 35
## Reductions:

State 35:
## Known stack suffix:
## PUBLIC STRING
## LR(1) items:
ext -> PUBLIC STRING . STRING [ error DTDCLOSE ]
## Transitions:
-- On STRING shift to state 36
## Reductions:

State 36:
## Known stack suffix:
## PUBLIC STRING STRING
## LR(1) items:
ext -> PUBLIC STRING STRING . [ error DTDCLOSE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ext -> PUBLIC STRING STRING

State 37:
## Known stack suffix:
## dtdopen NAME ext
## LR(1) items:
doctype -> dtdopen NAME ext . markup dtdclose [ PIOPEN OPEN COMMENT CHUNK ]
## Transitions:
-- On error shift to state 38
-- On markup shift to state 39
## Reductions:
-- On DTDCLOSE reduce production markup ->

State 38:
## Known stack suffix:
## error
## LR(1) items:
markup -> error . [ DTDCLOSE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production markup -> error

State 39:
## Known stack suffix:
## dtdopen NAME ext markup
## LR(1) items:
doctype -> dtdopen NAME ext markup . dtdclose [ PIOPEN OPEN COMMENT CHUNK ]
## Transitions:
-- On DTDCLOSE shift to state 40
-- On dtdclose shift to state 41
## Reductions:

State 40:
## Known stack suffix:
## DTDCLOSE
## LR(1) items:
dtdclose -> DTDCLOSE . [ PIOPEN OPEN COMMENT CHUNK ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dtdclose -> DTDCLOSE

State 41:
## Known stack suffix:
## dtdopen NAME ext markup dtdclose
## LR(1) items:
doctype -> dtdopen NAME ext markup dtdclose . [ PIOPEN OPEN COMMENT CHUNK ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production doctype -> dtdopen NAME ext markup dtdclose

State 42:
## Known stack suffix:
## xmldecl misc doctype
## LR(1) items:
prolog -> xmldecl misc doctype . misc [ OPEN ]
## Transitions:
-- On misc shift to state 43
## Default reduction:
-- After reading the next token, reduce production misc ->

State 43:
## Known stack suffix:
## xmldecl misc doctype misc
## LR(1) items:
misc -> misc . pi [ PIOPEN OPEN COMMENT CHUNK ]
misc -> misc . CHUNK [ PIOPEN OPEN COMMENT CHUNK ]
misc -> misc . COMMENT [ PIOPEN OPEN COMMENT CHUNK ]
prolog -> xmldecl misc doctype misc . [ OPEN ]
## Transitions:
-- On PIOPEN shift to state 21
-- On COMMENT shift to state 23
-- On CHUNK shift to state 24
-- On piopen shift to state 25
-- On pi shift to state 29
## Reductions:
-- On OPEN reduce production prolog -> xmldecl misc doctype misc

State 44:
## Known stack suffix:
## prolog
## LR(1) items:
document -> prolog . topelement misc EOF [ # ]
## Transitions:
-- On OPEN shift to state 45
-- On topelement shift to state 46
-- On sTag shift to state 49
-- On opn shift to state 58
-- On emptyElemTag shift to state 67
-- On element shift to state 70
## Reductions:

State 45:
## Known stack suffix:
## OPEN
## LR(1) items:
opn -> OPEN . [ SLASHCLOSE NAME CLOSE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production opn -> OPEN

State 46:
## Known stack suffix:
## prolog topelement
## LR(1) items:
document -> prolog topelement . misc EOF [ # ]
## Transitions:
-- On misc shift to state 47
## Default reduction:
-- After reading the next token, reduce production misc ->

State 47:
## Known stack suffix:
## prolog topelement misc
## LR(1) items:
document -> prolog topelement misc . EOF [ # ]
misc -> misc . pi [ PIOPEN EOF COMMENT CHUNK ]
misc -> misc . CHUNK [ PIOPEN EOF COMMENT CHUNK ]
misc -> misc . COMMENT [ PIOPEN EOF COMMENT CHUNK ]
## Transitions:
-- On PIOPEN shift to state 21
-- On EOF shift to state 48
-- On COMMENT shift to state 23
-- On CHUNK shift to state 24
-- On piopen shift to state 25
-- On pi shift to state 29
## Reductions:

State 48:
## Known stack suffix:
## prolog topelement misc EOF
## LR(1) items:
document -> prolog topelement misc EOF . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production document -> prolog topelement misc EOF

State 49:
## Known stack suffix:
## sTag
## LR(1) items:
element -> sTag . content eTag [ PIOPEN OPENSLASH OPEN EOF COMMENT CHUNK ]
## Transitions:
-- On content shift to state 50
## Default reduction:
-- After reading the next token, reduce production content ->

State 50:
## Known stack suffix:
## sTag content
## LR(1) items:
content -> content . CHUNK [ PIOPEN OPENSLASH OPEN COMMENT CHUNK ]
content -> content . element [ PIOPEN OPENSLASH OPEN COMMENT CHUNK ]
content -> content . pi [ PIOPEN OPENSLASH OPEN COMMENT CHUNK ]
content -> content . COMMENT [ PIOPEN OPENSLASH OPEN COMMENT CHUNK ]
element -> sTag content . eTag [ PIOPEN OPENSLASH OPEN EOF COMMENT CHUNK ]
## Transitions:
-- On PIOPEN shift to state 21
-- On OPENSLASH shift to state 51
-- On OPEN shift to state 45
-- On COMMENT shift to state 52
-- On CHUNK shift to state 53
-- On sTag shift to state 49
-- On piopen shift to state 25
-- On pi shift to state 54
-- On opnslash shift to state 55
-- On opn shift to state 58
-- On emptyElemTag shift to state 67
-- On element shift to state 68
-- On eTag shift to state 69
## Reductions:

State 51:
## Known stack suffix:
## OPENSLASH
## LR(1) items:
opnslash -> OPENSLASH . [ CLOSE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production opnslash -> OPENSLASH

State 52:
## Known stack suffix:
## content COMMENT
## LR(1) items:
content -> content COMMENT . [ PIOPEN OPENSLASH OPEN COMMENT CHUNK ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production content -> content COMMENT

State 53:
## Known stack suffix:
## content CHUNK
## LR(1) items:
content -> content CHUNK . [ PIOPEN OPENSLASH OPEN COMMENT CHUNK ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production content -> content CHUNK

State 54:
## Known stack suffix:
## content pi
## LR(1) items:
content -> content pi . [ PIOPEN OPENSLASH OPEN COMMENT CHUNK ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production content -> content pi

State 55:
## Known stack suffix:
## opnslash
## LR(1) items:
eTag -> opnslash . cls [ PIOPEN OPENSLASH OPEN EOF COMMENT CHUNK ]
## Transitions:
-- On CLOSE shift to state 56
-- On cls shift to state 57
## Reductions:

State 56:
## Known stack suffix:
## CLOSE
## LR(1) items:
cls -> CLOSE . [ PIOPEN OPENSLASH OPEN EOF COMMENT CHUNK ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production cls -> CLOSE

State 57:
## Known stack suffix:
## opnslash cls
## LR(1) items:
eTag -> opnslash cls . [ PIOPEN OPENSLASH OPEN EOF COMMENT CHUNK ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production eTag -> opnslash cls

State 58:
## Known stack suffix:
## opn
## LR(1) items:
emptyElemTag -> opn . attributes slashcls [ PIOPEN OPENSLASH OPEN EOF COMMENT CHUNK ]
sTag -> opn . attributes cls [ PIOPEN OPENSLASH OPEN COMMENT CHUNK ]
## Transitions:
-- On attributes shift to state 59
## Default reduction:
-- After reading the next token, reduce production attributes ->

State 59:
## Known stack suffix:
## opn attributes
## LR(1) items:
attributes -> attributes . attribute [ SLASHCLOSE NAME CLOSE ]
emptyElemTag -> opn attributes . slashcls [ PIOPEN OPENSLASH OPEN EOF COMMENT CHUNK ]
sTag -> opn attributes . cls [ PIOPEN OPENSLASH OPEN COMMENT CHUNK ]
## Transitions:
-- On SLASHCLOSE shift to state 60
-- On NAME shift to state 61
-- On CLOSE shift to state 56
-- On slashcls shift to state 64
-- On cls shift to state 65
-- On attribute shift to state 66
## Reductions:

State 60:
## Known stack suffix:
## SLASHCLOSE
## LR(1) items:
slashcls -> SLASHCLOSE . [ PIOPEN OPENSLASH OPEN EOF COMMENT CHUNK ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production slashcls -> SLASHCLOSE

State 61:
## Known stack suffix:
## NAME
## LR(1) items:
attribute -> NAME . EQ STRING [ SLASHCLOSE NAME CLOSE ]
## Transitions:
-- On EQ shift to state 62
## Reductions:

State 62:
## Known stack suffix:
## NAME EQ
## LR(1) items:
attribute -> NAME EQ . STRING [ SLASHCLOSE NAME CLOSE ]
## Transitions:
-- On STRING shift to state 63
## Reductions:

State 63:
## Known stack suffix:
## NAME EQ STRING
## LR(1) items:
attribute -> NAME EQ STRING . [ SLASHCLOSE NAME CLOSE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production attribute -> NAME EQ STRING

State 64:
## Known stack suffix:
## opn attributes slashcls
## LR(1) items:
emptyElemTag -> opn attributes slashcls . [ PIOPEN OPENSLASH OPEN EOF COMMENT CHUNK ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production emptyElemTag -> opn attributes slashcls

State 65:
## Known stack suffix:
## opn attributes cls
## LR(1) items:
sTag -> opn attributes cls . [ PIOPEN OPENSLASH OPEN COMMENT CHUNK ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production sTag -> opn attributes cls

State 66:
## Known stack suffix:
## attributes attribute
## LR(1) items:
attributes -> attributes attribute . [ SLASHCLOSE NAME CLOSE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production attributes -> attributes attribute

State 67:
## Known stack suffix:
## emptyElemTag
## LR(1) items:
element -> emptyElemTag . [ PIOPEN OPENSLASH OPEN EOF COMMENT CHUNK ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production element -> emptyElemTag

State 68:
## Known stack suffix:
## content element
## LR(1) items:
content -> content element . [ PIOPEN OPENSLASH OPEN COMMENT CHUNK ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production content -> content element

State 69:
## Known stack suffix:
## sTag content eTag
## LR(1) items:
element -> sTag content eTag . [ PIOPEN OPENSLASH OPEN EOF COMMENT CHUNK ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production element -> sTag content eTag

State 70:
## Known stack suffix:
## element
## LR(1) items:
topelement -> element . [ PIOPEN EOF COMMENT CHUNK ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production topelement -> element

State 71:
## Known stack suffix:
## misc
## LR(1) items:
misc -> misc . pi [ PIOPEN OPEN DTDOPEN COMMENT CHUNK ]
misc -> misc . CHUNK [ PIOPEN OPEN DTDOPEN COMMENT CHUNK ]
misc -> misc . COMMENT [ PIOPEN OPEN DTDOPEN COMMENT CHUNK ]
prolog -> misc . doctype misc [ OPEN ]
prolog -> misc . [ OPEN ]
## Transitions:
-- On PIOPEN shift to state 21
-- On DTDOPEN shift to state 22
-- On COMMENT shift to state 23
-- On CHUNK shift to state 24
-- On piopen shift to state 25
-- On pi shift to state 29
-- On dtdopen shift to state 30
-- On doctype shift to state 72
## Reductions:
-- On OPEN reduce production prolog -> misc

State 72:
## Known stack suffix:
## misc doctype
## LR(1) items:
prolog -> misc doctype . misc [ OPEN ]
## Transitions:
-- On misc shift to state 73
## Default reduction:
-- After reading the next token, reduce production misc ->

State 73:
## Known stack suffix:
## misc doctype misc
## LR(1) items:
misc -> misc . pi [ PIOPEN OPEN COMMENT CHUNK ]
misc -> misc . CHUNK [ PIOPEN OPEN COMMENT CHUNK ]
misc -> misc . COMMENT [ PIOPEN OPEN COMMENT CHUNK ]
prolog -> misc doctype misc . [ OPEN ]
## Transitions:
-- On PIOPEN shift to state 21
-- On COMMENT shift to state 23
-- On CHUNK shift to state 24
-- On piopen shift to state 25
-- On pi shift to state 29
## Reductions:
-- On OPEN reduce production prolog -> misc doctype misc

State 74:
## Known stack suffix:
## document
## LR(1) items:
document' -> document . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept document

