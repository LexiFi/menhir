File "toy.mly", line 48, characters 7-9:
Warning: the token OF is unused.
File "toy.mly", line 58, characters 7-9:
Warning: the token TO is unused.
File "toy.mly", line 61, characters 7-11:
Warning: the token TYPE is unused.
File "toy.mly", line 64, characters 7-12:
Warning: the token VALUE is unused.
Grammar has 19 nonterminal symbols, among which 1 start symbols.
Grammar has 50 terminal symbols.
Grammar has 77 productions.
nullable(try_match) = false
nullable(simple_pattern_list) = false
nullable(simple_pattern) = false
nullable(phrase) = false
nullable(pattern) = false
nullable(label_pattern_list) = true
nullable(label_expression_list) = true
nullable(label_expression) = false
nullable(function_match) = false
nullable(fun_match) = false
nullable(expression3) = false
nullable(expression2) = false
nullable(expression1) = false
nullable(expression0) = false
nullable(expression) = false
nullable(expr_semi_list) = true
nullable(constant) = false
nullable(binding_list) = false
nullable(binding) = false
first(try_match) = UNIT UNDERSCORE TRUE STRINGCONST REF LPAREN LBRACE INTCONST IDENT FLOATCONST FALSE CONSTRUCTOR CHARCONST
first(simple_pattern_list) = UNIT UNDERSCORE TRUE STRINGCONST LPAREN LBRACE INTCONST IDENT FLOATCONST FALSE CONSTRUCTOR CHARCONST
first(simple_pattern) = UNIT UNDERSCORE TRUE STRINGCONST LPAREN LBRACE INTCONST IDENT FLOATCONST FALSE CONSTRUCTOR CHARCONST
first(phrase) = UNIT TRY TRUE STRINGCONST SHARP REF REC MATCH LPAREN LET LBRACKETBAR LBRACE INTCONST INCLUDE IF IDENT FUNCTION FUN FLOATCONST FALSE CONSTRUCTOR CHARCONST BANG
first(pattern) = UNIT UNDERSCORE TRUE STRINGCONST REF LPAREN LBRACE INTCONST IDENT FLOATCONST FALSE CONSTRUCTOR CHARCONST
first(label_pattern_list) = IDENT
first(label_expression_list) = IDENT
first(label_expression) = IDENT
first(function_match) = UNIT UNDERSCORE TRUE STRINGCONST REF LPAREN LBRACE INTCONST IDENT FLOATCONST FALSE CONSTRUCTOR CHARCONST
first(fun_match) = UNIT UNDERSCORE TRUE STRINGCONST LPAREN LBRACE INTCONST IDENT FLOATCONST FALSE CONSTRUCTOR CHARCONST
first(expression3) = UNIT TRUE STRINGCONST REF LPAREN LBRACKETBAR LBRACE INTCONST IF IDENT FLOATCONST FALSE CONSTRUCTOR CHARCONST BANG
first(expression2) = UNIT TRUE STRINGCONST REF LPAREN LBRACKETBAR LBRACE INTCONST IF IDENT FLOATCONST FALSE CONSTRUCTOR CHARCONST BANG
first(expression1) = UNIT TRUE STRINGCONST REF LPAREN LBRACKETBAR LBRACE INTCONST IDENT FLOATCONST FALSE CONSTRUCTOR CHARCONST BANG
first(expression0) = UNIT TRUE STRINGCONST LPAREN LBRACKETBAR LBRACE INTCONST IDENT FLOATCONST FALSE CONSTRUCTOR CHARCONST BANG
first(expression) = UNIT TRY TRUE STRINGCONST REF REC MATCH LPAREN LET LBRACKETBAR LBRACE INTCONST IF IDENT FUNCTION FUN FLOATCONST FALSE CONSTRUCTOR CHARCONST BANG
first(expr_semi_list) = UNIT TRUE STRINGCONST REF LPAREN LBRACKETBAR LBRACE INTCONST IF IDENT FLOATCONST FALSE CONSTRUCTOR CHARCONST BANG
first(constant) = UNIT TRUE STRINGCONST INTCONST FLOATCONST FALSE CHARCONST
first(binding_list) = UNIT UNDERSCORE TRUE STRINGCONST REF LPAREN LBRACE INTCONST IDENT FLOATCONST FALSE CONSTRUCTOR CHARCONST
first(binding) = UNIT UNDERSCORE TRUE STRINGCONST REF LPAREN LBRACE INTCONST IDENT FLOATCONST FALSE CONSTRUCTOR CHARCONST
minimal(try_match) = (* 3 *) UNDERSCORE ARROW IDENT
minimal(simple_pattern_list) = (* 1 *) UNDERSCORE
minimal(simple_pattern) = (* 1 *) UNDERSCORE
minimal(phrase) = (* 2 *) SHARP IDENT
minimal(pattern) = (* 1 *) UNDERSCORE
minimal(label_pattern_list) = (* 0 *)
minimal(label_expression_list) = (* 0 *)
minimal(label_expression) = (* 3 *) IDENT EQUAL IDENT
minimal(function_match) = (* 3 *) UNDERSCORE ARROW IDENT
minimal(fun_match) = (* 3 *) UNDERSCORE ARROW IDENT
minimal(expression3) = (* 1 *) IDENT
minimal(expression2) = (* 1 *) IDENT
minimal(expression1) = (* 1 *) IDENT
minimal(expression0) = (* 1 *) IDENT
minimal(expression) = (* 1 *) IDENT
minimal(expr_semi_list) = (* 0 *)
minimal(constant) = (* 1 *) INTCONST
minimal(binding_list) = (* 3 *) UNDERSCORE EQUAL IDENT
minimal(binding) = (* 3 *) UNDERSCORE EQUAL IDENT
follow(try_match) = WITH SEMISEMI RPAREN IN BAR AND
follow(simple_pattern_list) = EQUAL ARROW
follow(simple_pattern) = UNIT UNDERSCORE TRUE STRINGCONST SEMI RPAREN RBRACE LPAREN LBRACE INTCONST IN IDENT FLOATCONST FALSE EQUAL CONSTRUCTOR COMMA CHARCONST BAR AS ARROW
follow(phrase) = #
follow(pattern) = SEMI RPAREN RBRACE IN EQUAL COMMA BAR AS ARROW
follow(label_pattern_list) = RBRACE
follow(label_expression_list) = RBRACE
follow(label_expression) = SEMI RBRACE
follow(function_match) = WITH SEMISEMI RPAREN IN BAR AND
follow(fun_match) = WITH SEMISEMI RPAREN IN BAR AND
follow(expression3) = WITH SEMISEMI RPAREN IN BAR AND
follow(expression2) = WITH SEMISEMI SEMI RPAREN RBRACE IN ELSE BARRBRACKET BAR AND
follow(expression1) = WITH UNIT TRUE THEN STRINGCONST SETMINUS SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND
follow(expression0) = WITH UNIT TRUE THEN STRINGCONST SETMINUS SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND
follow(expression) = WITH SEMISEMI RPAREN IN BAR AND
follow(expr_semi_list) = BARRBRACKET
follow(constant) = WITH UNIT UNDERSCORE TRUE THEN STRINGCONST SETMINUS SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACE INTCONST IN IDENT FLOATCONST FALSE EQUAL ELSE DOT CONSTRUCTOR COMMA CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AS ARROW AND
follow(binding_list) = SEMISEMI IN
follow(binding) = SEMISEMI IN AND
Built an LR(0) automaton with 154 states.
The grammar is not SLR(1) -- 17 states have a conflict.
The construction mode is pager.
Built an LR(1) automaton with 154 states.
Warning: 15 states have shift/reduce conflicts.
Warning: 85 shift/reduce conflicts were arbitrarily resolved.
51 out of 154 states have a default reduction.
60 out of 154 states are represented.
0 out of 72 symbols keep track of their start position.
0 out of 72 symbols keep track of their end position.
32 out of 78 productions exploit shiftreduce optimization.
0 out of 154 states can peek at an error.
410 functions before inlining, 70 functions after inlining.
