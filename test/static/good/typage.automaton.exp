State 0:
expression' -> . expression [ # ]
-- On SND shift to state 1
-- On OP shift to state 2
-- On LPAREN shift to state 3
-- On LET shift to state 4
-- On LBRACE shift to state 7
-- On INT shift to state 10
-- On IDENT shift to state 11
-- On FUN shift to state 22
-- On FST shift to state 12
-- On expression shift to state 43
-- On expr shift to state 44
-- On closed_expr shift to state 16
-- On application shift to state 28

State 1:
application -> SND . closed_expr [ SEMI RPAREN RBRACE OP LPAREN LBRACE INT IN IDENT EOF COMMA AT ]
-- On OP shift to state 2
-- On LPAREN shift to state 3
-- On LBRACE shift to state 7
-- On INT shift to state 10
-- On IDENT shift to state 11
-- On closed_expr shift to state 42

State 2:
closed_expr -> OP . [ SEMI RPAREN RBRACE OP LPAREN LBRACE INT IN IDENT EOF DOT COMMA AT ]
-- On SEMI reduce production closed_expr -> OP 
-- On RPAREN reduce production closed_expr -> OP 
-- On RBRACE reduce production closed_expr -> OP 
-- On OP reduce production closed_expr -> OP 
-- On LPAREN reduce production closed_expr -> OP 
-- On LBRACE reduce production closed_expr -> OP 
-- On INT reduce production closed_expr -> OP 
-- On IN reduce production closed_expr -> OP 
-- On IDENT reduce production closed_expr -> OP 
-- On EOF reduce production closed_expr -> OP 
-- On DOT reduce production closed_expr -> OP 
-- On COMMA reduce production closed_expr -> OP 
-- On AT reduce production closed_expr -> OP 

State 3:
closed_expr -> LPAREN . expr RPAREN [ SEMI RPAREN RBRACE OP LPAREN LBRACE INT IN IDENT EOF DOT COMMA AT ]
-- On SND shift to state 1
-- On OP shift to state 2
-- On LPAREN shift to state 3
-- On LET shift to state 4
-- On LBRACE shift to state 7
-- On INT shift to state 10
-- On IDENT shift to state 11
-- On FUN shift to state 22
-- On FST shift to state 12
-- On expr shift to state 40
-- On closed_expr shift to state 16
-- On application shift to state 28

State 4:
expr -> LET . IDENT EQUAL expr IN expr [ RPAREN RBRACE IN EOF COMMA ]
-- On IDENT shift to state 5

State 5:
expr -> LET IDENT . EQUAL expr IN expr [ RPAREN RBRACE IN EOF COMMA ]
-- On EQUAL shift to state 6

State 6:
expr -> LET IDENT EQUAL . expr IN expr [ RPAREN RBRACE IN EOF COMMA ]
-- On SND shift to state 1
-- On OP shift to state 2
-- On LPAREN shift to state 3
-- On LET shift to state 4
-- On LBRACE shift to state 7
-- On INT shift to state 10
-- On IDENT shift to state 11
-- On FUN shift to state 22
-- On FST shift to state 12
-- On expr shift to state 37
-- On closed_expr shift to state 16
-- On application shift to state 28

State 7:
closed_expr -> LBRACE . entries RBRACE [ SEMI RPAREN RBRACE OP LPAREN LBRACE INT IN IDENT EOF DOT COMMA AT ]
-- On IDENT shift to state 8
-- On entry shift to state 32
-- On entries shift to state 33

State 8:
entry -> IDENT . EQUAL application [ SEMI RBRACE ]
-- On EQUAL shift to state 9

State 9:
entry -> IDENT EQUAL . application [ SEMI RBRACE ]
-- On SND shift to state 1
-- On OP shift to state 2
-- On LPAREN shift to state 3
-- On LBRACE shift to state 7
-- On INT shift to state 10
-- On IDENT shift to state 11
-- On FST shift to state 12
-- On closed_expr shift to state 16
-- On application shift to state 17

State 10:
closed_expr -> INT . [ SEMI RPAREN RBRACE OP LPAREN LBRACE INT IN IDENT EOF DOT COMMA AT ]
-- On SEMI reduce production closed_expr -> INT 
-- On RPAREN reduce production closed_expr -> INT 
-- On RBRACE reduce production closed_expr -> INT 
-- On OP reduce production closed_expr -> INT 
-- On LPAREN reduce production closed_expr -> INT 
-- On LBRACE reduce production closed_expr -> INT 
-- On INT reduce production closed_expr -> INT 
-- On IN reduce production closed_expr -> INT 
-- On IDENT reduce production closed_expr -> INT 
-- On EOF reduce production closed_expr -> INT 
-- On DOT reduce production closed_expr -> INT 
-- On COMMA reduce production closed_expr -> INT 
-- On AT reduce production closed_expr -> INT 

State 11:
closed_expr -> IDENT . [ SEMI RPAREN RBRACE OP LPAREN LBRACE INT IN IDENT EOF DOT COMMA AT ]
-- On SEMI reduce production closed_expr -> IDENT 
-- On RPAREN reduce production closed_expr -> IDENT 
-- On RBRACE reduce production closed_expr -> IDENT 
-- On OP reduce production closed_expr -> IDENT 
-- On LPAREN reduce production closed_expr -> IDENT 
-- On LBRACE reduce production closed_expr -> IDENT 
-- On INT reduce production closed_expr -> IDENT 
-- On IN reduce production closed_expr -> IDENT 
-- On IDENT reduce production closed_expr -> IDENT 
-- On EOF reduce production closed_expr -> IDENT 
-- On DOT reduce production closed_expr -> IDENT 
-- On COMMA reduce production closed_expr -> IDENT 
-- On AT reduce production closed_expr -> IDENT 

State 12:
application -> FST . closed_expr [ SEMI RPAREN RBRACE OP LPAREN LBRACE INT IN IDENT EOF COMMA AT ]
-- On OP shift to state 2
-- On LPAREN shift to state 3
-- On LBRACE shift to state 7
-- On INT shift to state 10
-- On IDENT shift to state 11
-- On closed_expr shift to state 13

State 13:
application -> FST closed_expr . [ SEMI RPAREN RBRACE OP LPAREN LBRACE INT IN IDENT EOF COMMA AT ]
closed_expr -> closed_expr . DOT IDENT [ SEMI RPAREN RBRACE OP LPAREN LBRACE INT IN IDENT EOF DOT COMMA AT ]
-- On DOT shift to state 14
-- On SEMI reduce production application -> FST closed_expr 
-- On RPAREN reduce production application -> FST closed_expr 
-- On RBRACE reduce production application -> FST closed_expr 
-- On OP reduce production application -> FST closed_expr 
-- On LPAREN reduce production application -> FST closed_expr 
-- On LBRACE reduce production application -> FST closed_expr 
-- On INT reduce production application -> FST closed_expr 
-- On IN reduce production application -> FST closed_expr 
-- On IDENT reduce production application -> FST closed_expr 
-- On EOF reduce production application -> FST closed_expr 
-- On COMMA reduce production application -> FST closed_expr 
-- On AT reduce production application -> FST closed_expr 

State 14:
closed_expr -> closed_expr DOT . IDENT [ SEMI RPAREN RBRACE OP LPAREN LBRACE INT IN IDENT EOF DOT COMMA AT ]
-- On IDENT shift to state 15

State 15:
closed_expr -> closed_expr DOT IDENT . [ SEMI RPAREN RBRACE OP LPAREN LBRACE INT IN IDENT EOF DOT COMMA AT ]
-- On SEMI reduce production closed_expr -> closed_expr DOT IDENT 
-- On RPAREN reduce production closed_expr -> closed_expr DOT IDENT 
-- On RBRACE reduce production closed_expr -> closed_expr DOT IDENT 
-- On OP reduce production closed_expr -> closed_expr DOT IDENT 
-- On LPAREN reduce production closed_expr -> closed_expr DOT IDENT 
-- On LBRACE reduce production closed_expr -> closed_expr DOT IDENT 
-- On INT reduce production closed_expr -> closed_expr DOT IDENT 
-- On IN reduce production closed_expr -> closed_expr DOT IDENT 
-- On IDENT reduce production closed_expr -> closed_expr DOT IDENT 
-- On EOF reduce production closed_expr -> closed_expr DOT IDENT 
-- On DOT reduce production closed_expr -> closed_expr DOT IDENT 
-- On COMMA reduce production closed_expr -> closed_expr DOT IDENT 
-- On AT reduce production closed_expr -> closed_expr DOT IDENT 

State 16:
application -> closed_expr . [ SEMI RPAREN RBRACE OP LPAREN LBRACE INT IN IDENT EOF COMMA AT ]
closed_expr -> closed_expr . DOT IDENT [ SEMI RPAREN RBRACE OP LPAREN LBRACE INT IN IDENT EOF DOT COMMA AT ]
-- On DOT shift to state 14
-- On SEMI reduce production application -> closed_expr 
-- On RPAREN reduce production application -> closed_expr 
-- On RBRACE reduce production application -> closed_expr 
-- On OP reduce production application -> closed_expr 
-- On LPAREN reduce production application -> closed_expr 
-- On LBRACE reduce production application -> closed_expr 
-- On INT reduce production application -> closed_expr 
-- On IN reduce production application -> closed_expr 
-- On IDENT reduce production application -> closed_expr 
-- On EOF reduce production application -> closed_expr 
-- On COMMA reduce production application -> closed_expr 
-- On AT reduce production application -> closed_expr 

State 17:
application -> application . closed_expr [ SEMI RBRACE OP LPAREN LBRACE INT IDENT AT ]
application -> application . AT LBRACE IDENT EQUAL expr RBRACE [ SEMI RBRACE OP LPAREN LBRACE INT IDENT AT ]
entry -> IDENT EQUAL application . [ SEMI RBRACE ]
-- On OP shift to state 2
-- On LPAREN shift to state 3
-- On LBRACE shift to state 7
-- On INT shift to state 10
-- On IDENT shift to state 11
-- On AT shift to state 18
-- On closed_expr shift to state 29
-- On SEMI reduce production entry -> IDENT EQUAL application 
-- On RBRACE reduce production entry -> IDENT EQUAL application 

State 18:
application -> application AT . LBRACE IDENT EQUAL expr RBRACE [ SEMI RPAREN RBRACE OP LPAREN LBRACE INT IN IDENT EOF COMMA AT ]
-- On LBRACE shift to state 19

State 19:
application -> application AT LBRACE . IDENT EQUAL expr RBRACE [ SEMI RPAREN RBRACE OP LPAREN LBRACE INT IN IDENT EOF COMMA AT ]
-- On IDENT shift to state 20

State 20:
application -> application AT LBRACE IDENT . EQUAL expr RBRACE [ SEMI RPAREN RBRACE OP LPAREN LBRACE INT IN IDENT EOF COMMA AT ]
-- On EQUAL shift to state 21

State 21:
application -> application AT LBRACE IDENT EQUAL . expr RBRACE [ SEMI RPAREN RBRACE OP LPAREN LBRACE INT IN IDENT EOF COMMA AT ]
-- On SND shift to state 1
-- On OP shift to state 2
-- On LPAREN shift to state 3
-- On LET shift to state 4
-- On LBRACE shift to state 7
-- On INT shift to state 10
-- On IDENT shift to state 11
-- On FUN shift to state 22
-- On FST shift to state 12
-- On expr shift to state 30
-- On closed_expr shift to state 16
-- On application shift to state 28

State 22:
expr -> FUN . IDENT ARROW expr [ RPAREN RBRACE IN EOF COMMA ]
-- On IDENT shift to state 23

State 23:
expr -> FUN IDENT . ARROW expr [ RPAREN RBRACE IN EOF COMMA ]
-- On ARROW shift to state 24

State 24:
expr -> FUN IDENT ARROW . expr [ RPAREN RBRACE IN EOF COMMA ]
-- On SND shift to state 1
-- On OP shift to state 2
-- On LPAREN shift to state 3
-- On LET shift to state 4
-- On LBRACE shift to state 7
-- On INT shift to state 10
-- On IDENT shift to state 11
-- On FUN shift to state 22
-- On FST shift to state 12
-- On expr shift to state 25
-- On closed_expr shift to state 16
-- On application shift to state 28

State 25:
expr -> expr . COMMA expr [ RPAREN RBRACE IN EOF COMMA ]
expr -> FUN IDENT ARROW expr . [ RPAREN RBRACE IN EOF COMMA ]
-- On COMMA shift to state 26
-- On RPAREN reduce production expr -> FUN IDENT ARROW expr 
-- On RBRACE reduce production expr -> FUN IDENT ARROW expr 
-- On IN reduce production expr -> FUN IDENT ARROW expr 
-- On EOF reduce production expr -> FUN IDENT ARROW expr 

State 26:
expr -> expr COMMA . expr [ RPAREN RBRACE IN EOF COMMA ]
-- On SND shift to state 1
-- On OP shift to state 2
-- On LPAREN shift to state 3
-- On LET shift to state 4
-- On LBRACE shift to state 7
-- On INT shift to state 10
-- On IDENT shift to state 11
-- On FUN shift to state 22
-- On FST shift to state 12
-- On expr shift to state 27
-- On closed_expr shift to state 16
-- On application shift to state 28

State 27:
expr -> expr . COMMA expr [ RPAREN RBRACE IN EOF COMMA ]
expr -> expr COMMA expr . [ RPAREN RBRACE IN EOF COMMA ]
-- On COMMA shift to state 26
-- On RPAREN reduce production expr -> expr COMMA expr 
-- On RBRACE reduce production expr -> expr COMMA expr 
-- On IN reduce production expr -> expr COMMA expr 
-- On EOF reduce production expr -> expr COMMA expr 

State 28:
application -> application . closed_expr [ RPAREN RBRACE OP LPAREN LBRACE INT IN IDENT EOF COMMA AT ]
application -> application . AT LBRACE IDENT EQUAL expr RBRACE [ RPAREN RBRACE OP LPAREN LBRACE INT IN IDENT EOF COMMA AT ]
expr -> application . [ RPAREN RBRACE IN EOF COMMA ]
-- On OP shift to state 2
-- On LPAREN shift to state 3
-- On LBRACE shift to state 7
-- On INT shift to state 10
-- On IDENT shift to state 11
-- On AT shift to state 18
-- On closed_expr shift to state 29
-- On RPAREN reduce production expr -> application 
-- On RBRACE reduce production expr -> application 
-- On IN reduce production expr -> application 
-- On EOF reduce production expr -> application 
-- On COMMA reduce production expr -> application 

State 29:
application -> application closed_expr . [ SEMI RPAREN RBRACE OP LPAREN LBRACE INT IN IDENT EOF COMMA AT ]
closed_expr -> closed_expr . DOT IDENT [ SEMI RPAREN RBRACE OP LPAREN LBRACE INT IN IDENT EOF DOT COMMA AT ]
-- On DOT shift to state 14
-- On SEMI reduce production application -> application closed_expr 
-- On RPAREN reduce production application -> application closed_expr 
-- On RBRACE reduce production application -> application closed_expr 
-- On OP reduce production application -> application closed_expr 
-- On LPAREN reduce production application -> application closed_expr 
-- On LBRACE reduce production application -> application closed_expr 
-- On INT reduce production application -> application closed_expr 
-- On IN reduce production application -> application closed_expr 
-- On IDENT reduce production application -> application closed_expr 
-- On EOF reduce production application -> application closed_expr 
-- On COMMA reduce production application -> application closed_expr 
-- On AT reduce production application -> application closed_expr 

State 30:
application -> application AT LBRACE IDENT EQUAL expr . RBRACE [ SEMI RPAREN RBRACE OP LPAREN LBRACE INT IN IDENT EOF COMMA AT ]
expr -> expr . COMMA expr [ RBRACE COMMA ]
-- On RBRACE shift to state 31
-- On COMMA shift to state 26

State 31:
application -> application AT LBRACE IDENT EQUAL expr RBRACE . [ SEMI RPAREN RBRACE OP LPAREN LBRACE INT IN IDENT EOF COMMA AT ]
-- On SEMI reduce production application -> application AT LBRACE IDENT EQUAL expr RBRACE 
-- On RPAREN reduce production application -> application AT LBRACE IDENT EQUAL expr RBRACE 
-- On RBRACE reduce production application -> application AT LBRACE IDENT EQUAL expr RBRACE 
-- On OP reduce production application -> application AT LBRACE IDENT EQUAL expr RBRACE 
-- On LPAREN reduce production application -> application AT LBRACE IDENT EQUAL expr RBRACE 
-- On LBRACE reduce production application -> application AT LBRACE IDENT EQUAL expr RBRACE 
-- On INT reduce production application -> application AT LBRACE IDENT EQUAL expr RBRACE 
-- On IN reduce production application -> application AT LBRACE IDENT EQUAL expr RBRACE 
-- On IDENT reduce production application -> application AT LBRACE IDENT EQUAL expr RBRACE 
-- On EOF reduce production application -> application AT LBRACE IDENT EQUAL expr RBRACE 
-- On COMMA reduce production application -> application AT LBRACE IDENT EQUAL expr RBRACE 
-- On AT reduce production application -> application AT LBRACE IDENT EQUAL expr RBRACE 

State 32:
entries -> entry . [ SEMI RBRACE ]
-- On SEMI reduce production entries -> entry 
-- On RBRACE reduce production entries -> entry 

State 33:
closed_expr -> LBRACE entries . RBRACE [ SEMI RPAREN RBRACE OP LPAREN LBRACE INT IN IDENT EOF DOT COMMA AT ]
entries -> entries . SEMI entry [ SEMI RBRACE ]
-- On SEMI shift to state 34
-- On RBRACE shift to state 36

State 34:
entries -> entries SEMI . entry [ SEMI RBRACE ]
-- On IDENT shift to state 8
-- On entry shift to state 35

State 35:
entries -> entries SEMI entry . [ SEMI RBRACE ]
-- On SEMI reduce production entries -> entries SEMI entry 
-- On RBRACE reduce production entries -> entries SEMI entry 

State 36:
closed_expr -> LBRACE entries RBRACE . [ SEMI RPAREN RBRACE OP LPAREN LBRACE INT IN IDENT EOF DOT COMMA AT ]
-- On SEMI reduce production closed_expr -> LBRACE entries RBRACE 
-- On RPAREN reduce production closed_expr -> LBRACE entries RBRACE 
-- On RBRACE reduce production closed_expr -> LBRACE entries RBRACE 
-- On OP reduce production closed_expr -> LBRACE entries RBRACE 
-- On LPAREN reduce production closed_expr -> LBRACE entries RBRACE 
-- On LBRACE reduce production closed_expr -> LBRACE entries RBRACE 
-- On INT reduce production closed_expr -> LBRACE entries RBRACE 
-- On IN reduce production closed_expr -> LBRACE entries RBRACE 
-- On IDENT reduce production closed_expr -> LBRACE entries RBRACE 
-- On EOF reduce production closed_expr -> LBRACE entries RBRACE 
-- On DOT reduce production closed_expr -> LBRACE entries RBRACE 
-- On COMMA reduce production closed_expr -> LBRACE entries RBRACE 
-- On AT reduce production closed_expr -> LBRACE entries RBRACE 

State 37:
expr -> expr . COMMA expr [ IN COMMA ]
expr -> LET IDENT EQUAL expr . IN expr [ RPAREN RBRACE IN EOF COMMA ]
-- On IN shift to state 38
-- On COMMA shift to state 26

State 38:
expr -> LET IDENT EQUAL expr IN . expr [ RPAREN RBRACE IN EOF COMMA ]
-- On SND shift to state 1
-- On OP shift to state 2
-- On LPAREN shift to state 3
-- On LET shift to state 4
-- On LBRACE shift to state 7
-- On INT shift to state 10
-- On IDENT shift to state 11
-- On FUN shift to state 22
-- On FST shift to state 12
-- On expr shift to state 39
-- On closed_expr shift to state 16
-- On application shift to state 28

State 39:
expr -> expr . COMMA expr [ RPAREN RBRACE IN EOF COMMA ]
expr -> LET IDENT EQUAL expr IN expr . [ RPAREN RBRACE IN EOF COMMA ]
-- On COMMA shift to state 26
-- On RPAREN reduce production expr -> LET IDENT EQUAL expr IN expr 
-- On RBRACE reduce production expr -> LET IDENT EQUAL expr IN expr 
-- On IN reduce production expr -> LET IDENT EQUAL expr IN expr 
-- On EOF reduce production expr -> LET IDENT EQUAL expr IN expr 

State 40:
closed_expr -> LPAREN expr . RPAREN [ SEMI RPAREN RBRACE OP LPAREN LBRACE INT IN IDENT EOF DOT COMMA AT ]
expr -> expr . COMMA expr [ RPAREN COMMA ]
-- On RPAREN shift to state 41
-- On COMMA shift to state 26

State 41:
closed_expr -> LPAREN expr RPAREN . [ SEMI RPAREN RBRACE OP LPAREN LBRACE INT IN IDENT EOF DOT COMMA AT ]
-- On SEMI reduce production closed_expr -> LPAREN expr RPAREN 
-- On RPAREN reduce production closed_expr -> LPAREN expr RPAREN 
-- On RBRACE reduce production closed_expr -> LPAREN expr RPAREN 
-- On OP reduce production closed_expr -> LPAREN expr RPAREN 
-- On LPAREN reduce production closed_expr -> LPAREN expr RPAREN 
-- On LBRACE reduce production closed_expr -> LPAREN expr RPAREN 
-- On INT reduce production closed_expr -> LPAREN expr RPAREN 
-- On IN reduce production closed_expr -> LPAREN expr RPAREN 
-- On IDENT reduce production closed_expr -> LPAREN expr RPAREN 
-- On EOF reduce production closed_expr -> LPAREN expr RPAREN 
-- On DOT reduce production closed_expr -> LPAREN expr RPAREN 
-- On COMMA reduce production closed_expr -> LPAREN expr RPAREN 
-- On AT reduce production closed_expr -> LPAREN expr RPAREN 

State 42:
application -> SND closed_expr . [ SEMI RPAREN RBRACE OP LPAREN LBRACE INT IN IDENT EOF COMMA AT ]
closed_expr -> closed_expr . DOT IDENT [ SEMI RPAREN RBRACE OP LPAREN LBRACE INT IN IDENT EOF DOT COMMA AT ]
-- On DOT shift to state 14
-- On SEMI reduce production application -> SND closed_expr 
-- On RPAREN reduce production application -> SND closed_expr 
-- On RBRACE reduce production application -> SND closed_expr 
-- On OP reduce production application -> SND closed_expr 
-- On LPAREN reduce production application -> SND closed_expr 
-- On LBRACE reduce production application -> SND closed_expr 
-- On INT reduce production application -> SND closed_expr 
-- On IN reduce production application -> SND closed_expr 
-- On IDENT reduce production application -> SND closed_expr 
-- On EOF reduce production application -> SND closed_expr 
-- On COMMA reduce production application -> SND closed_expr 
-- On AT reduce production application -> SND closed_expr 

State 43:
expression' -> expression . [ # ]
-- On # accept expression

State 44:
expr -> expr . COMMA expr [ EOF COMMA ]
expression -> expr . EOF [ # ]
-- On EOF shift to state 45
-- On COMMA shift to state 26

State 45:
expression -> expr EOF . [ # ]
-- On # reduce production expression -> expr EOF 

