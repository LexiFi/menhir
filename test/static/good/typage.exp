Grammar has 6 nonterminal symbols, among which 1 start symbols.
Grammar has 19 terminal symbols.
Grammar has 19 productions.
nullable(expression) = false
nullable(expr) = false
nullable(entry) = false
nullable(entries) = false
nullable(closed_expr) = false
nullable(application) = false
first(expression) = SND OP LPAREN LET LBRACE INT IDENT FUN FST
first(expr) = SND OP LPAREN LET LBRACE INT IDENT FUN FST
first(entry) = IDENT
first(entries) = IDENT
first(closed_expr) = OP LPAREN LBRACE INT IDENT
first(application) = SND OP LPAREN LBRACE INT IDENT FST
minimal(expression) = (* 2 *) IDENT EOF
minimal(expr) = (* 1 *) IDENT
minimal(entry) = (* 3 *) IDENT EQUAL IDENT
minimal(entries) = (* 3 *) IDENT EQUAL IDENT
minimal(closed_expr) = (* 1 *) IDENT
minimal(application) = (* 1 *) IDENT
follow(expression) = #
follow(expr) = RPAREN RBRACE IN EOF COMMA
follow(entry) = SEMI RBRACE
follow(entries) = SEMI RBRACE
follow(closed_expr) = SEMI RPAREN RBRACE OP LPAREN LBRACE INT IN IDENT EOF DOT COMMA AT
follow(application) = SEMI RPAREN RBRACE OP LPAREN LBRACE INT IN IDENT EOF COMMA AT
Built an LR(0) automaton with 46 states.
The grammar is not SLR(1) -- 3 states have a conflict.
The construction mode is pager.
Built an LR(1) automaton with 46 states.
3 shift/reduce conflicts were silently solved.
11 out of 46 states have a default reduction.
14 out of 46 states are represented.
0 out of 28 symbols keep track of their start position.
0 out of 28 symbols keep track of their end position.
11 out of 20 productions exploit shiftreduce optimization.
77 functions before inlining, 21 functions after inlining.
