A :: *
B :: *
anonymous :: (*) -> *
append :: (*, *) -> *
boption :: (*) -> *
delimited :: (*, *, *) -> *
embedded :: (*) -> *
endrule :: (*) -> *
error :: *
flatten :: (*) -> *
foo :: (*) -> *
ioption :: (*) -> *
list :: (*) -> *
loption :: (*) -> *
main :: *
midrule :: (*) -> *
nonempty_list :: (*) -> *
option :: (*) -> *
pair :: (*, *) -> *
preceded :: (*, *) -> *
rev :: (*) -> *
separated_list :: (*, *) -> *
separated_nonempty_list :: (*, *) -> *
separated_pair :: (*, *, *) -> *
terminated :: (*, *) -> *
%start main
%token A
%token B
%type <unit> main
%%

main:
  _1 = A _2 = B
    {      ()}

%%
