
** Conflict (shift/reduce) in state 410.
** Token involved: SEMICOL
** This state is reached from program after reading:

decls classhead 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOFX 
decls decl 
      cl 
      (?)

** In state 410, looking ahead at SEMICOL, shifting is permitted
** because of the following sub-derivation:

classhead . SEMICOL END 

** In state 410, looking ahead at SEMICOL, reducing production
** methods -> 
** is permitted because of the following sub-derivation:

classhead methods optsemi initiallysection END // lookahead token appears because optsemi can begin with SEMICOL
          . 

** Conflict (shift/reduce) in state 384.
** Token involved: AND
** This state is reached from program after reading:

decls prochead error WHILE expr DO expr 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOFX 
decls decl 
      proc 
      prochead error procbody END 
                     nexpr SEMICOL procbody 
                     expr 
                     (?)

** In state 384, looking ahead at AND, shifting is permitted
** because of the following sub-derivation:

expr1a 
expr1 
expr2 
expr3 
expr4 
expr5 
expr6 
expr7 
expr8 
expr9 
expr10 
expr11 
kwhile 
WHILE expr DO expr 
              expr . AND expr1a 

** In state 384, looking ahead at AND, reducing production
** kwhile -> WHILE expr DO expr 
** is permitted because of the following sub-derivation:

expr AND expr1a // lookahead token appears
expr1a // lookahead token is inherited
expr1 // lookahead token is inherited
expr2 // lookahead token is inherited
expr3 // lookahead token is inherited
expr4 // lookahead token is inherited
expr5 // lookahead token is inherited
expr6 // lookahead token is inherited
expr7 // lookahead token is inherited
expr8 // lookahead token is inherited
expr9 // lookahead token is inherited
expr10 // lookahead token is inherited
expr11 // lookahead token is inherited
kwhile // lookahead token is inherited
WHILE expr DO expr . 

** Conflict (shift/reduce) in state 382.
** Tokens involved: DO AND
** The following explanations concentrate on token AND.
** This state is reached from program after reading:

decls prochead error WHILE expr 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOFX 
decls decl 
      proc 
      prochead error procbody END 
                     nexpr SEMICOL procbody 
                     expr 
                     (?)

** In state 382, looking ahead at AND, shifting is permitted
** because of the following sub-derivation:

expr1a 
expr1 
expr2 
expr3 
expr4 
expr5 
expr6 
expr7 
expr8 
expr9 
expr10 
expr11 
kwhile 
WHILE expr 
      expr . AND expr1a 

** In state 382, looking ahead at AND, reducing production
** kwhile -> WHILE expr 
** is permitted because of the following sub-derivation:

expr AND expr1a // lookahead token appears
expr1a // lookahead token is inherited
expr1 // lookahead token is inherited
expr2 // lookahead token is inherited
expr3 // lookahead token is inherited
expr4 // lookahead token is inherited
expr5 // lookahead token is inherited
expr6 // lookahead token is inherited
expr7 // lookahead token is inherited
expr8 // lookahead token is inherited
expr9 // lookahead token is inherited
expr10 // lookahead token is inherited
expr11 // lookahead token is inherited
kwhile // lookahead token is inherited
WHILE expr . 

** Conflict (shift/reduce) in state 381.
** Token involved: AND
** This state is reached from program after reading:

decls prochead error UNTIL expr DO expr 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOFX 
decls decl 
      proc 
      prochead error procbody END 
                     nexpr SEMICOL procbody 
                     expr 
                     (?)

** In state 381, looking ahead at AND, shifting is permitted
** because of the following sub-derivation:

expr1a 
expr1 
expr2 
expr3 
expr4 
expr5 
expr6 
expr7 
expr8 
expr9 
expr10 
expr11 
until 
UNTIL expr DO expr 
              expr . AND expr1a 

** In state 381, looking ahead at AND, reducing production
** until -> UNTIL expr DO expr 
** is permitted because of the following sub-derivation:

expr AND expr1a // lookahead token appears
expr1a // lookahead token is inherited
expr1 // lookahead token is inherited
expr2 // lookahead token is inherited
expr3 // lookahead token is inherited
expr4 // lookahead token is inherited
expr5 // lookahead token is inherited
expr6 // lookahead token is inherited
expr7 // lookahead token is inherited
expr8 // lookahead token is inherited
expr9 // lookahead token is inherited
expr10 // lookahead token is inherited
expr11 // lookahead token is inherited
until // lookahead token is inherited
UNTIL expr DO expr . 

** Conflict (shift/reduce) in state 379.
** Tokens involved: DO AND
** The following explanations concentrate on token AND.
** This state is reached from program after reading:

decls prochead error UNTIL expr 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOFX 
decls decl 
      proc 
      prochead error procbody END 
                     nexpr SEMICOL procbody 
                     expr 
                     (?)

** In state 379, looking ahead at AND, shifting is permitted
** because of the following sub-derivation:

expr1a 
expr1 
expr2 
expr3 
expr4 
expr5 
expr6 
expr7 
expr8 
expr9 
expr10 
expr11 
until 
UNTIL expr 
      expr . AND expr1a 

** In state 379, looking ahead at AND, reducing production
** until -> UNTIL expr 
** is permitted because of the following sub-derivation:

expr AND expr1a // lookahead token appears
expr1a // lookahead token is inherited
expr1 // lookahead token is inherited
expr2 // lookahead token is inherited
expr3 // lookahead token is inherited
expr4 // lookahead token is inherited
expr5 // lookahead token is inherited
expr6 // lookahead token is inherited
expr7 // lookahead token is inherited
expr8 // lookahead token is inherited
expr9 // lookahead token is inherited
expr10 // lookahead token is inherited
expr11 // lookahead token is inherited
until // lookahead token is inherited
UNTIL expr . 

** Conflict (shift/reduce) in state 376.
** Token involved: AND
** This state is reached from program after reading:

decls prochead error SUSPEND expr DO expr 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOFX 
decls decl 
      proc 
      prochead error procbody END 
                     nexpr SEMICOL procbody 
                     expr 
                     (?)

** In state 376, looking ahead at AND, shifting is permitted
** because of the following sub-derivation:

expr1a 
expr1 
expr2 
expr3 
expr4 
expr5 
expr6 
expr7 
expr8 
expr9 
expr10 
expr11 
return 
SUSPEND expr DO expr 
                expr . AND expr1a 

** In state 376, looking ahead at AND, reducing production
** return -> SUSPEND expr DO expr 
** is permitted because of the following sub-derivation:

expr AND expr1a // lookahead token appears
expr1a // lookahead token is inherited
expr1 // lookahead token is inherited
expr2 // lookahead token is inherited
expr3 // lookahead token is inherited
expr4 // lookahead token is inherited
expr5 // lookahead token is inherited
expr6 // lookahead token is inherited
expr7 // lookahead token is inherited
expr8 // lookahead token is inherited
expr9 // lookahead token is inherited
expr10 // lookahead token is inherited
expr11 // lookahead token is inherited
return // lookahead token is inherited
SUSPEND expr DO expr . 

** Conflict (shift/reduce) in state 374.
** Tokens involved: DO AND
** The following explanations concentrate on token AND.
** This state is reached from program after reading:

decls prochead error SUSPEND expr 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOFX 
decls decl 
      proc 
      prochead error procbody END 
                     nexpr SEMICOL procbody 
                     expr 
                     (?)

** In state 374, looking ahead at AND, shifting is permitted
** because of the following sub-derivation:

expr1a 
expr1 
expr2 
expr3 
expr4 
expr5 
expr6 
expr7 
expr8 
expr9 
expr10 
expr11 
return 
SUSPEND expr DO expr 
        expr . AND expr1a 

** In state 374, looking ahead at AND, reducing production
** nexpr -> expr 
** is permitted because of the following sub-derivation:

expr AND expr1a // lookahead token appears
expr1a // lookahead token is inherited
expr1 // lookahead token is inherited
expr2 // lookahead token is inherited
expr3 // lookahead token is inherited
expr4 // lookahead token is inherited
expr5 // lookahead token is inherited
expr6 // lookahead token is inherited
expr7 // lookahead token is inherited
expr8 // lookahead token is inherited
expr9 // lookahead token is inherited
expr10 // lookahead token is inherited
expr11 // lookahead token is inherited
return // lookahead token is inherited
SUSPEND nexpr // lookahead token is inherited
        expr . 

** Conflict (shift/reduce) in state 367.
** Token involved: AND
** This state is reached from program after reading:

decls prochead error REPEAT expr 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOFX 
decls decl 
      proc 
      prochead error procbody END 
                     nexpr SEMICOL procbody 
                     expr 
                     (?)

** In state 367, looking ahead at AND, shifting is permitted
** because of the following sub-derivation:

expr1a 
expr1 
expr2 
expr3 
expr4 
expr5 
expr6 
expr7 
expr8 
expr9 
expr10 
expr11 
repeat 
REPEAT expr 
       expr . AND expr1a 

** In state 367, looking ahead at AND, reducing production
** repeat -> REPEAT expr 
** is permitted because of the following sub-derivation:

expr AND expr1a // lookahead token appears
expr1a // lookahead token is inherited
expr1 // lookahead token is inherited
expr2 // lookahead token is inherited
expr3 // lookahead token is inherited
expr4 // lookahead token is inherited
expr5 // lookahead token is inherited
expr6 // lookahead token is inherited
expr7 // lookahead token is inherited
expr8 // lookahead token is inherited
expr9 // lookahead token is inherited
expr10 // lookahead token is inherited
expr11 // lookahead token is inherited
repeat // lookahead token is inherited
REPEAT expr . 

** Conflict (shift/reduce) in state 348.
** Token involved: AND
** This state is reached from program after reading:

decls prochead error IF expr THEN expr ELSE expr 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOFX 
decls decl 
      proc 
      prochead error procbody END 
                     nexpr SEMICOL procbody 
                     expr 
                     (?)

** In state 348, looking ahead at AND, shifting is permitted
** because of the following sub-derivation:

expr1a 
expr1 
expr2 
expr3 
expr4 
expr5 
expr6 
expr7 
expr8 
expr9 
expr10 
expr11 
kif 
IF expr THEN expr ELSE expr 
                       expr . AND expr1a 

** In state 348, looking ahead at AND, reducing production
** kif -> IF expr THEN expr ELSE expr 
** is permitted because of the following sub-derivation:

expr AND expr1a // lookahead token appears
expr1a // lookahead token is inherited
expr1 // lookahead token is inherited
expr2 // lookahead token is inherited
expr3 // lookahead token is inherited
expr4 // lookahead token is inherited
expr5 // lookahead token is inherited
expr6 // lookahead token is inherited
expr7 // lookahead token is inherited
expr8 // lookahead token is inherited
expr9 // lookahead token is inherited
expr10 // lookahead token is inherited
expr11 // lookahead token is inherited
kif // lookahead token is inherited
IF expr THEN expr ELSE expr . 

** Conflict (shift/reduce) in state 346.
** Tokens involved: ELSE AND
** The following explanations concentrate on token AND.
** This state is reached from program after reading:

decls prochead error IF expr THEN expr 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOFX 
decls decl 
      proc 
      prochead error procbody END 
                     nexpr SEMICOL procbody 
                     expr 
                     (?)

** In state 346, looking ahead at AND, shifting is permitted
** because of the following sub-derivation:

expr1a 
expr1 
expr2 
expr3 
expr4 
expr5 
expr6 
expr7 
expr8 
expr9 
expr10 
expr11 
kif 
IF expr THEN expr 
             expr . AND expr1a 

** In state 346, looking ahead at AND, reducing production
** kif -> IF expr THEN expr 
** is permitted because of the following sub-derivation:

expr AND expr1a // lookahead token appears
expr1a // lookahead token is inherited
expr1 // lookahead token is inherited
expr2 // lookahead token is inherited
expr3 // lookahead token is inherited
expr4 // lookahead token is inherited
expr5 // lookahead token is inherited
expr6 // lookahead token is inherited
expr7 // lookahead token is inherited
expr8 // lookahead token is inherited
expr9 // lookahead token is inherited
expr10 // lookahead token is inherited
expr11 // lookahead token is inherited
kif // lookahead token is inherited
IF expr THEN expr . 

** Conflict (shift/reduce) in state 343.
** Token involved: AND
** This state is reached from program after reading:

decls prochead error EVERY expr DO expr 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOFX 
decls decl 
      proc 
      prochead error procbody END 
                     nexpr SEMICOL procbody 
                     expr 
                     (?)

** In state 343, looking ahead at AND, reducing production
** every -> EVERY expr DO expr 
** is permitted because of the following sub-derivation:

expr AND expr1a // lookahead token appears
expr1a // lookahead token is inherited
expr1 // lookahead token is inherited
expr2 // lookahead token is inherited
expr3 // lookahead token is inherited
expr4 // lookahead token is inherited
expr5 // lookahead token is inherited
expr6 // lookahead token is inherited
expr7 // lookahead token is inherited
expr8 // lookahead token is inherited
expr9 // lookahead token is inherited
expr10 // lookahead token is inherited
expr11 // lookahead token is inherited
every // lookahead token is inherited
EVERY expr DO expr . 

** In state 343, looking ahead at AND, shifting is permitted
** because of the following sub-derivation:

expr1a 
expr1 
expr2 
expr3 
expr4 
expr5 
expr6 
expr7 
expr8 
expr9 
expr10 
expr11 
every 
EVERY expr DO expr 
              expr . AND expr1a 

** Conflict (shift/reduce) in state 341.
** Tokens involved: DO AND
** The following explanations concentrate on token AND.
** This state is reached from program after reading:

decls prochead error EVERY expr 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOFX 
decls decl 
      proc 
      prochead error procbody END 
                     nexpr SEMICOL procbody 
                     expr 
                     (?)

** In state 341, looking ahead at AND, reducing production
** every -> EVERY expr 
** is permitted because of the following sub-derivation:

expr AND expr1a // lookahead token appears
expr1a // lookahead token is inherited
expr1 // lookahead token is inherited
expr2 // lookahead token is inherited
expr3 // lookahead token is inherited
expr4 // lookahead token is inherited
expr5 // lookahead token is inherited
expr6 // lookahead token is inherited
expr7 // lookahead token is inherited
expr8 // lookahead token is inherited
expr9 // lookahead token is inherited
expr10 // lookahead token is inherited
expr11 // lookahead token is inherited
every // lookahead token is inherited
EVERY expr . 

** In state 341, looking ahead at AND, shifting is permitted
** because of the following sub-derivation:

expr1a 
expr1 
expr2 
expr3 
expr4 
expr5 
expr6 
expr7 
expr8 
expr9 
expr10 
expr11 
every 
EVERY expr 
      expr . AND expr1a 

** Conflict (shift/reduce) in state 337.
** Token involved: AND
** This state is reached from program after reading:

decls prochead error CREATE expr 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOFX 
decls decl 
      proc 
      prochead error procbody END 
                     nexpr SEMICOL procbody 
                     expr 
                     (?)

** In state 337, looking ahead at AND, shifting is permitted
** because of the following sub-derivation:

expr1a 
expr1 
expr2 
expr3 
expr4 
expr5 
expr6 
expr7 
expr8 
expr9 
expr10 
expr11 
CREATE expr 
       expr . AND expr1a 

** In state 337, looking ahead at AND, reducing production
** expr11 -> CREATE expr 
** is permitted because of the following sub-derivation:

expr AND expr1a // lookahead token appears
expr1a // lookahead token is inherited
expr1 // lookahead token is inherited
expr2 // lookahead token is inherited
expr3 // lookahead token is inherited
expr4 // lookahead token is inherited
expr5 // lookahead token is inherited
expr6 // lookahead token is inherited
expr7 // lookahead token is inherited
expr8 // lookahead token is inherited
expr9 // lookahead token is inherited
expr10 // lookahead token is inherited
expr11 // lookahead token is inherited
CREATE expr . 

** Conflict (shift/reduce) in state 287.
** Token involved: RBRACE
** This state is reached from program after reading:

decls prochead error expr11 LBRACE 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOFX 
decls decl 
      proc 
      prochead error procbody END 
                     nexpr SEMICOL procbody 
                     expr 
                     expr1a 
                     expr1 
                     expr2 
                     expr3 
                     expr4 
                     expr5 
                     expr6 
                     expr7 
                     expr8 
                     expr9 
                     expr10 
                     expr11 
                     (?)

** In state 287, looking ahead at RBRACE, shifting is permitted
** because of the following sub-derivation:

expr11 LBRACE . RBRACE 

** In state 287, looking ahead at RBRACE, reducing production
** nexpr -> 
** is permitted because of the following sub-derivation:

expr11 LBRACE pdcolist RBRACE // lookahead token appears
              nexpr // lookahead token is inherited
              . 

** Conflict (shift/reduce) in state 276.
** Token involved: QMARK
** This state is reached from program after reading:

decls prochead error WHILE expr AND expr1a 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOFX 
decls decl 
      proc 
      prochead error procbody END 
                     nexpr SEMICOL procbody 
                     expr 
                     expr1a 
                     (?)

** In state 276, looking ahead at QMARK, reducing production
** expr -> expr AND expr1a 
** is permitted because of the following sub-derivation:

expr1a QMARK expr1 // lookahead token appears
expr1 // lookahead token is inherited
expr2 // lookahead token is inherited
expr3 // lookahead token is inherited
expr4 // lookahead token is inherited
expr5 // lookahead token is inherited
expr6 // lookahead token is inherited
expr7 // lookahead token is inherited
expr8 // lookahead token is inherited
expr9 // lookahead token is inherited
expr10 // lookahead token is inherited
expr11 // lookahead token is inherited
kwhile // lookahead token is inherited
WHILE expr // lookahead token is inherited
      expr AND expr1a . 

** In state 276, looking ahead at QMARK, shifting is permitted
** because of the following sub-derivation:

expr1 
expr2 
expr3 
expr4 
expr5 
expr6 
expr7 
expr8 
expr9 
expr10 
expr11 
kwhile 
WHILE expr 
      expr AND expr1a 
               expr1a . QMARK expr1 

** Conflict (shift/reduce) in state 274.
** Token involved: AND
** This state is reached from program after reading:

decls prochead error RETURN expr 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOFX 
decls decl 
      proc 
      prochead error procbody END 
                     nexpr SEMICOL procbody 
                     expr 
                     (?)

** In state 274, looking ahead at AND, shifting is permitted
** because of the following sub-derivation:

expr1a 
expr1 
expr2 
expr3 
expr4 
expr5 
expr6 
expr7 
expr8 
expr9 
expr10 
expr11 
return 
RETURN nexpr 
       expr 
       expr . AND expr1a 

** In state 274, looking ahead at AND, reducing production
** nexpr -> expr 
** is permitted because of the following sub-derivation:

expr AND expr1a // lookahead token appears
expr1a // lookahead token is inherited
expr1 // lookahead token is inherited
expr2 // lookahead token is inherited
expr3 // lookahead token is inherited
expr4 // lookahead token is inherited
expr5 // lookahead token is inherited
expr6 // lookahead token is inherited
expr7 // lookahead token is inherited
expr8 // lookahead token is inherited
expr9 // lookahead token is inherited
expr10 // lookahead token is inherited
expr11 // lookahead token is inherited
return // lookahead token is inherited
RETURN nexpr // lookahead token is inherited
       expr . 

** Conflict (shift/reduce) in state 270.
** Token involved: QMARK
** This state is reached from program after reading:

decls prochead error WHILE expr1a 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOFX 
decls decl 
      proc 
      prochead error procbody END 
                     nexpr SEMICOL procbody 
                     expr 
                     expr1a 
                     (?)

** In state 270, looking ahead at QMARK, reducing production
** expr -> expr1a 
** is permitted because of the following sub-derivation:

expr1a QMARK expr1 // lookahead token appears
expr1 // lookahead token is inherited
expr2 // lookahead token is inherited
expr3 // lookahead token is inherited
expr4 // lookahead token is inherited
expr5 // lookahead token is inherited
expr6 // lookahead token is inherited
expr7 // lookahead token is inherited
expr8 // lookahead token is inherited
expr9 // lookahead token is inherited
expr10 // lookahead token is inherited
expr11 // lookahead token is inherited
kwhile // lookahead token is inherited
WHILE expr // lookahead token is inherited
      expr1a . 

** In state 270, looking ahead at QMARK, shifting is permitted
** because of the following sub-derivation:

expr1 
expr2 
expr3 
expr4 
expr5 
expr6 
expr7 
expr8 
expr9 
expr10 
expr11 
kwhile 
WHILE expr 
      expr1a 
      expr1a . QMARK expr1 

** Conflict (shift/reduce) in state 203.
** Token involved: BY
** This state is reached from program after reading:

decls prochead error expr2 TO WHILE expr2 TO expr3 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOFX 
decls decl 
      proc 
      prochead error procbody END 
                     nexpr SEMICOL procbody 
                     expr 
                     expr1a 
                     expr1 
                     expr2 
                     (?)

** In state 203, looking ahead at BY, reducing production
** expr2 -> expr2 TO expr3 
** is permitted because of the following sub-derivation:

expr2 TO expr3 BY expr3 // lookahead token appears
         expr4 // lookahead token is inherited
         expr5 // lookahead token is inherited
         expr6 // lookahead token is inherited
         expr7 // lookahead token is inherited
         expr8 // lookahead token is inherited
         expr9 // lookahead token is inherited
         expr10 // lookahead token is inherited
         expr11 // lookahead token is inherited
         kwhile // lookahead token is inherited
         WHILE expr // lookahead token is inherited
               expr1a // lookahead token is inherited
               expr1 // lookahead token is inherited
               expr2 // lookahead token is inherited
               expr2 TO expr3 . 

** In state 203, looking ahead at BY, shifting is permitted
** because of the following sub-derivation:

expr2 TO expr3 
         expr4 
         expr5 
         expr6 
         expr7 
         expr8 
         expr9 
         expr10 
         expr11 
         kwhile 
         WHILE expr 
               expr1a 
               expr1 
               expr2 
               expr2 TO expr3 . BY expr3 

** Conflict (shift/reduce) in state 201.
** Tokens involved: TO SWAP REVSWAP REVASSIGN AUGUNION AUGSTAR AUGSNE AUGSLT AUGSLE AUGSLASH AUGSGT AUGSGE AUGSEQ AUGQMARK AUGPLUS AUGNMNE AUGNMLT AUGNMLE AUGNMGT AUGNMGE AUGNMEQ AUGNEQUIV AUGMOD AUGMINUS AUGLCONCAT AUGINTER AUGEQUIV AUGDIFF AUGCONCAT AUGCARET AUGAT AUGAND ASSIGN
** The following explanations concentrate on token TO.
** This state is reached from program after reading:

decls prochead error WHILE expr2 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOFX 
decls decl 
      proc 
      prochead error procbody END 
                     nexpr SEMICOL procbody 
                     expr 
                     expr1a 
                     expr1 
                     expr2 
                     (?)

** In state 201, looking ahead at TO, reducing production
** expr1 -> expr2 
** is permitted because of the following sub-derivation:

expr2 TO expr3 // lookahead token appears
expr3 // lookahead token is inherited
expr4 // lookahead token is inherited
expr5 // lookahead token is inherited
expr6 // lookahead token is inherited
expr7 // lookahead token is inherited
expr8 // lookahead token is inherited
expr9 // lookahead token is inherited
expr10 // lookahead token is inherited
expr11 // lookahead token is inherited
kwhile // lookahead token is inherited
WHILE expr // lookahead token is inherited
      expr1a // lookahead token is inherited
      expr1 // lookahead token is inherited
      expr2 . 

** In state 201, looking ahead at TO, shifting is permitted
** because of the following sub-derivation:

expr3 
expr4 
expr5 
expr6 
expr7 
expr8 
expr9 
expr10 
expr11 
kwhile 
WHILE expr 
      expr1a 
      expr1 
      expr2 
      expr2 . TO expr3 

** Conflict (shift/reduce) in state 197.
** Tokens involved: LCONCAT CONCAT
** The following explanations concentrate on token LCONCAT.
** This state is reached from program after reading:

decls prochead error WHILE expr4 EQUIV expr5 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOFX 
decls decl 
      proc 
      prochead error procbody END 
                     nexpr SEMICOL procbody 
                     expr 
                     expr1a 
                     expr1 
                     expr2 
                     expr3 
                     expr4 
                     expr5 
                     (?)

** In state 197, looking ahead at LCONCAT, reducing production
** expr4 -> expr4 EQUIV expr5 
** is permitted because of the following sub-derivation:

expr5 LCONCAT expr6 // lookahead token appears
expr6 // lookahead token is inherited
expr7 // lookahead token is inherited
expr8 // lookahead token is inherited
expr9 // lookahead token is inherited
expr10 // lookahead token is inherited
expr11 // lookahead token is inherited
kwhile // lookahead token is inherited
WHILE expr // lookahead token is inherited
      expr1a // lookahead token is inherited
      expr1 // lookahead token is inherited
      expr2 // lookahead token is inherited
      expr3 // lookahead token is inherited
      expr4 // lookahead token is inherited
      expr4 EQUIV expr5 . 

** In state 197, looking ahead at LCONCAT, shifting is permitted
** because of the following sub-derivation:

expr6 
expr7 
expr8 
expr9 
expr10 
expr11 
kwhile 
WHILE expr 
      expr1a 
      expr1 
      expr2 
      expr3 
      expr4 
      expr4 EQUIV expr5 
                  expr5 . LCONCAT expr6 

** Conflict (shift/reduce) in state 195.
** Tokens involved: LCONCAT CONCAT
** The following explanations concentrate on token LCONCAT.
** This state is reached from program after reading:

decls prochead error WHILE expr4 NEQUIV expr5 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOFX 
decls decl 
      proc 
      prochead error procbody END 
                     nexpr SEMICOL procbody 
                     expr 
                     expr1a 
                     expr1 
                     expr2 
                     expr3 
                     expr4 
                     expr5 
                     (?)

** In state 195, looking ahead at LCONCAT, reducing production
** expr4 -> expr4 NEQUIV expr5 
** is permitted because of the following sub-derivation:

expr5 LCONCAT expr6 // lookahead token appears
expr6 // lookahead token is inherited
expr7 // lookahead token is inherited
expr8 // lookahead token is inherited
expr9 // lookahead token is inherited
expr10 // lookahead token is inherited
expr11 // lookahead token is inherited
kwhile // lookahead token is inherited
WHILE expr // lookahead token is inherited
      expr1a // lookahead token is inherited
      expr1 // lookahead token is inherited
      expr2 // lookahead token is inherited
      expr3 // lookahead token is inherited
      expr4 // lookahead token is inherited
      expr4 NEQUIV expr5 . 

** In state 195, looking ahead at LCONCAT, shifting is permitted
** because of the following sub-derivation:

expr6 
expr7 
expr8 
expr9 
expr10 
expr11 
kwhile 
WHILE expr 
      expr1a 
      expr1 
      expr2 
      expr3 
      expr4 
      expr4 NEQUIV expr5 
                   expr5 . LCONCAT expr6 

** Conflict (shift/reduce) in state 193.
** Tokens involved: LCONCAT CONCAT
** The following explanations concentrate on token LCONCAT.
** This state is reached from program after reading:

decls prochead error WHILE expr4 NMEQ expr5 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOFX 
decls decl 
      proc 
      prochead error procbody END 
                     nexpr SEMICOL procbody 
                     expr 
                     expr1a 
                     expr1 
                     expr2 
                     expr3 
                     expr4 
                     expr5 
                     (?)

** In state 193, looking ahead at LCONCAT, reducing production
** expr4 -> expr4 NMEQ expr5 
** is permitted because of the following sub-derivation:

expr5 LCONCAT expr6 // lookahead token appears
expr6 // lookahead token is inherited
expr7 // lookahead token is inherited
expr8 // lookahead token is inherited
expr9 // lookahead token is inherited
expr10 // lookahead token is inherited
expr11 // lookahead token is inherited
kwhile // lookahead token is inherited
WHILE expr // lookahead token is inherited
      expr1a // lookahead token is inherited
      expr1 // lookahead token is inherited
      expr2 // lookahead token is inherited
      expr3 // lookahead token is inherited
      expr4 // lookahead token is inherited
      expr4 NMEQ expr5 . 

** In state 193, looking ahead at LCONCAT, shifting is permitted
** because of the following sub-derivation:

expr6 
expr7 
expr8 
expr9 
expr10 
expr11 
kwhile 
WHILE expr 
      expr1a 
      expr1 
      expr2 
      expr3 
      expr4 
      expr4 NMEQ expr5 
                 expr5 . LCONCAT expr6 

** Conflict (shift/reduce) in state 191.
** Tokens involved: LCONCAT CONCAT
** The following explanations concentrate on token LCONCAT.
** This state is reached from program after reading:

decls prochead error WHILE expr4 NMGE expr5 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOFX 
decls decl 
      proc 
      prochead error procbody END 
                     nexpr SEMICOL procbody 
                     expr 
                     expr1a 
                     expr1 
                     expr2 
                     expr3 
                     expr4 
                     expr5 
                     (?)

** In state 191, looking ahead at LCONCAT, reducing production
** expr4 -> expr4 NMGE expr5 
** is permitted because of the following sub-derivation:

expr5 LCONCAT expr6 // lookahead token appears
expr6 // lookahead token is inherited
expr7 // lookahead token is inherited
expr8 // lookahead token is inherited
expr9 // lookahead token is inherited
expr10 // lookahead token is inherited
expr11 // lookahead token is inherited
kwhile // lookahead token is inherited
WHILE expr // lookahead token is inherited
      expr1a // lookahead token is inherited
      expr1 // lookahead token is inherited
      expr2 // lookahead token is inherited
      expr3 // lookahead token is inherited
      expr4 // lookahead token is inherited
      expr4 NMGE expr5 . 

** In state 191, looking ahead at LCONCAT, shifting is permitted
** because of the following sub-derivation:

expr6 
expr7 
expr8 
expr9 
expr10 
expr11 
kwhile 
WHILE expr 
      expr1a 
      expr1 
      expr2 
      expr3 
      expr4 
      expr4 NMGE expr5 
                 expr5 . LCONCAT expr6 

** Conflict (shift/reduce) in state 189.
** Tokens involved: LCONCAT CONCAT
** The following explanations concentrate on token LCONCAT.
** This state is reached from program after reading:

decls prochead error WHILE expr4 NMGT expr5 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOFX 
decls decl 
      proc 
      prochead error procbody END 
                     nexpr SEMICOL procbody 
                     expr 
                     expr1a 
                     expr1 
                     expr2 
                     expr3 
                     expr4 
                     expr5 
                     (?)

** In state 189, looking ahead at LCONCAT, reducing production
** expr4 -> expr4 NMGT expr5 
** is permitted because of the following sub-derivation:

expr5 LCONCAT expr6 // lookahead token appears
expr6 // lookahead token is inherited
expr7 // lookahead token is inherited
expr8 // lookahead token is inherited
expr9 // lookahead token is inherited
expr10 // lookahead token is inherited
expr11 // lookahead token is inherited
kwhile // lookahead token is inherited
WHILE expr // lookahead token is inherited
      expr1a // lookahead token is inherited
      expr1 // lookahead token is inherited
      expr2 // lookahead token is inherited
      expr3 // lookahead token is inherited
      expr4 // lookahead token is inherited
      expr4 NMGT expr5 . 

** In state 189, looking ahead at LCONCAT, shifting is permitted
** because of the following sub-derivation:

expr6 
expr7 
expr8 
expr9 
expr10 
expr11 
kwhile 
WHILE expr 
      expr1a 
      expr1 
      expr2 
      expr3 
      expr4 
      expr4 NMGT expr5 
                 expr5 . LCONCAT expr6 

** Conflict (shift/reduce) in state 187.
** Tokens involved: LCONCAT CONCAT
** The following explanations concentrate on token LCONCAT.
** This state is reached from program after reading:

decls prochead error WHILE expr4 NMLE expr5 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOFX 
decls decl 
      proc 
      prochead error procbody END 
                     nexpr SEMICOL procbody 
                     expr 
                     expr1a 
                     expr1 
                     expr2 
                     expr3 
                     expr4 
                     expr5 
                     (?)

** In state 187, looking ahead at LCONCAT, reducing production
** expr4 -> expr4 NMLE expr5 
** is permitted because of the following sub-derivation:

expr5 LCONCAT expr6 // lookahead token appears
expr6 // lookahead token is inherited
expr7 // lookahead token is inherited
expr8 // lookahead token is inherited
expr9 // lookahead token is inherited
expr10 // lookahead token is inherited
expr11 // lookahead token is inherited
kwhile // lookahead token is inherited
WHILE expr // lookahead token is inherited
      expr1a // lookahead token is inherited
      expr1 // lookahead token is inherited
      expr2 // lookahead token is inherited
      expr3 // lookahead token is inherited
      expr4 // lookahead token is inherited
      expr4 NMLE expr5 . 

** In state 187, looking ahead at LCONCAT, shifting is permitted
** because of the following sub-derivation:

expr6 
expr7 
expr8 
expr9 
expr10 
expr11 
kwhile 
WHILE expr 
      expr1a 
      expr1 
      expr2 
      expr3 
      expr4 
      expr4 NMLE expr5 
                 expr5 . LCONCAT expr6 

** Conflict (shift/reduce) in state 185.
** Tokens involved: LCONCAT CONCAT
** The following explanations concentrate on token LCONCAT.
** This state is reached from program after reading:

decls prochead error WHILE expr4 NMLT expr5 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOFX 
decls decl 
      proc 
      prochead error procbody END 
                     nexpr SEMICOL procbody 
                     expr 
                     expr1a 
                     expr1 
                     expr2 
                     expr3 
                     expr4 
                     expr5 
                     (?)

** In state 185, looking ahead at LCONCAT, reducing production
** expr4 -> expr4 NMLT expr5 
** is permitted because of the following sub-derivation:

expr5 LCONCAT expr6 // lookahead token appears
expr6 // lookahead token is inherited
expr7 // lookahead token is inherited
expr8 // lookahead token is inherited
expr9 // lookahead token is inherited
expr10 // lookahead token is inherited
expr11 // lookahead token is inherited
kwhile // lookahead token is inherited
WHILE expr // lookahead token is inherited
      expr1a // lookahead token is inherited
      expr1 // lookahead token is inherited
      expr2 // lookahead token is inherited
      expr3 // lookahead token is inherited
      expr4 // lookahead token is inherited
      expr4 NMLT expr5 . 

** In state 185, looking ahead at LCONCAT, shifting is permitted
** because of the following sub-derivation:

expr6 
expr7 
expr8 
expr9 
expr10 
expr11 
kwhile 
WHILE expr 
      expr1a 
      expr1 
      expr2 
      expr3 
      expr4 
      expr4 NMLT expr5 
                 expr5 . LCONCAT expr6 

** Conflict (shift/reduce) in state 183.
** Tokens involved: LCONCAT CONCAT
** The following explanations concentrate on token LCONCAT.
** This state is reached from program after reading:

decls prochead error WHILE expr4 NMNE expr5 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOFX 
decls decl 
      proc 
      prochead error procbody END 
                     nexpr SEMICOL procbody 
                     expr 
                     expr1a 
                     expr1 
                     expr2 
                     expr3 
                     expr4 
                     expr5 
                     (?)

** In state 183, looking ahead at LCONCAT, reducing production
** expr4 -> expr4 NMNE expr5 
** is permitted because of the following sub-derivation:

expr5 LCONCAT expr6 // lookahead token appears
expr6 // lookahead token is inherited
expr7 // lookahead token is inherited
expr8 // lookahead token is inherited
expr9 // lookahead token is inherited
expr10 // lookahead token is inherited
expr11 // lookahead token is inherited
kwhile // lookahead token is inherited
WHILE expr // lookahead token is inherited
      expr1a // lookahead token is inherited
      expr1 // lookahead token is inherited
      expr2 // lookahead token is inherited
      expr3 // lookahead token is inherited
      expr4 // lookahead token is inherited
      expr4 NMNE expr5 . 

** In state 183, looking ahead at LCONCAT, shifting is permitted
** because of the following sub-derivation:

expr6 
expr7 
expr8 
expr9 
expr10 
expr11 
kwhile 
WHILE expr 
      expr1a 
      expr1 
      expr2 
      expr3 
      expr4 
      expr4 NMNE expr5 
                 expr5 . LCONCAT expr6 

** Conflict (shift/reduce) in state 181.
** Tokens involved: LCONCAT CONCAT
** The following explanations concentrate on token LCONCAT.
** This state is reached from program after reading:

decls prochead error WHILE expr4 SEQ expr5 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOFX 
decls decl 
      proc 
      prochead error procbody END 
                     nexpr SEMICOL procbody 
                     expr 
                     expr1a 
                     expr1 
                     expr2 
                     expr3 
                     expr4 
                     expr5 
                     (?)

** In state 181, looking ahead at LCONCAT, reducing production
** expr4 -> expr4 SEQ expr5 
** is permitted because of the following sub-derivation:

expr5 LCONCAT expr6 // lookahead token appears
expr6 // lookahead token is inherited
expr7 // lookahead token is inherited
expr8 // lookahead token is inherited
expr9 // lookahead token is inherited
expr10 // lookahead token is inherited
expr11 // lookahead token is inherited
kwhile // lookahead token is inherited
WHILE expr // lookahead token is inherited
      expr1a // lookahead token is inherited
      expr1 // lookahead token is inherited
      expr2 // lookahead token is inherited
      expr3 // lookahead token is inherited
      expr4 // lookahead token is inherited
      expr4 SEQ expr5 . 

** In state 181, looking ahead at LCONCAT, shifting is permitted
** because of the following sub-derivation:

expr6 
expr7 
expr8 
expr9 
expr10 
expr11 
kwhile 
WHILE expr 
      expr1a 
      expr1 
      expr2 
      expr3 
      expr4 
      expr4 SEQ expr5 
                expr5 . LCONCAT expr6 

** Conflict (shift/reduce) in state 179.
** Tokens involved: LCONCAT CONCAT
** The following explanations concentrate on token LCONCAT.
** This state is reached from program after reading:

decls prochead error WHILE expr4 SGE expr5 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOFX 
decls decl 
      proc 
      prochead error procbody END 
                     nexpr SEMICOL procbody 
                     expr 
                     expr1a 
                     expr1 
                     expr2 
                     expr3 
                     expr4 
                     expr5 
                     (?)

** In state 179, looking ahead at LCONCAT, reducing production
** expr4 -> expr4 SGE expr5 
** is permitted because of the following sub-derivation:

expr5 LCONCAT expr6 // lookahead token appears
expr6 // lookahead token is inherited
expr7 // lookahead token is inherited
expr8 // lookahead token is inherited
expr9 // lookahead token is inherited
expr10 // lookahead token is inherited
expr11 // lookahead token is inherited
kwhile // lookahead token is inherited
WHILE expr // lookahead token is inherited
      expr1a // lookahead token is inherited
      expr1 // lookahead token is inherited
      expr2 // lookahead token is inherited
      expr3 // lookahead token is inherited
      expr4 // lookahead token is inherited
      expr4 SGE expr5 . 

** In state 179, looking ahead at LCONCAT, shifting is permitted
** because of the following sub-derivation:

expr6 
expr7 
expr8 
expr9 
expr10 
expr11 
kwhile 
WHILE expr 
      expr1a 
      expr1 
      expr2 
      expr3 
      expr4 
      expr4 SGE expr5 
                expr5 . LCONCAT expr6 

** Conflict (shift/reduce) in state 177.
** Tokens involved: LCONCAT CONCAT
** The following explanations concentrate on token LCONCAT.
** This state is reached from program after reading:

decls prochead error WHILE expr4 SGT expr5 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOFX 
decls decl 
      proc 
      prochead error procbody END 
                     nexpr SEMICOL procbody 
                     expr 
                     expr1a 
                     expr1 
                     expr2 
                     expr3 
                     expr4 
                     expr5 
                     (?)

** In state 177, looking ahead at LCONCAT, reducing production
** expr4 -> expr4 SGT expr5 
** is permitted because of the following sub-derivation:

expr5 LCONCAT expr6 // lookahead token appears
expr6 // lookahead token is inherited
expr7 // lookahead token is inherited
expr8 // lookahead token is inherited
expr9 // lookahead token is inherited
expr10 // lookahead token is inherited
expr11 // lookahead token is inherited
kwhile // lookahead token is inherited
WHILE expr // lookahead token is inherited
      expr1a // lookahead token is inherited
      expr1 // lookahead token is inherited
      expr2 // lookahead token is inherited
      expr3 // lookahead token is inherited
      expr4 // lookahead token is inherited
      expr4 SGT expr5 . 

** In state 177, looking ahead at LCONCAT, shifting is permitted
** because of the following sub-derivation:

expr6 
expr7 
expr8 
expr9 
expr10 
expr11 
kwhile 
WHILE expr 
      expr1a 
      expr1 
      expr2 
      expr3 
      expr4 
      expr4 SGT expr5 
                expr5 . LCONCAT expr6 

** Conflict (shift/reduce) in state 175.
** Tokens involved: LCONCAT CONCAT
** The following explanations concentrate on token LCONCAT.
** This state is reached from program after reading:

decls prochead error WHILE expr4 SLE expr5 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOFX 
decls decl 
      proc 
      prochead error procbody END 
                     nexpr SEMICOL procbody 
                     expr 
                     expr1a 
                     expr1 
                     expr2 
                     expr3 
                     expr4 
                     expr5 
                     (?)

** In state 175, looking ahead at LCONCAT, reducing production
** expr4 -> expr4 SLE expr5 
** is permitted because of the following sub-derivation:

expr5 LCONCAT expr6 // lookahead token appears
expr6 // lookahead token is inherited
expr7 // lookahead token is inherited
expr8 // lookahead token is inherited
expr9 // lookahead token is inherited
expr10 // lookahead token is inherited
expr11 // lookahead token is inherited
kwhile // lookahead token is inherited
WHILE expr // lookahead token is inherited
      expr1a // lookahead token is inherited
      expr1 // lookahead token is inherited
      expr2 // lookahead token is inherited
      expr3 // lookahead token is inherited
      expr4 // lookahead token is inherited
      expr4 SLE expr5 . 

** In state 175, looking ahead at LCONCAT, shifting is permitted
** because of the following sub-derivation:

expr6 
expr7 
expr8 
expr9 
expr10 
expr11 
kwhile 
WHILE expr 
      expr1a 
      expr1 
      expr2 
      expr3 
      expr4 
      expr4 SLE expr5 
                expr5 . LCONCAT expr6 

** Conflict (shift/reduce) in state 173.
** Tokens involved: LCONCAT CONCAT
** The following explanations concentrate on token LCONCAT.
** This state is reached from program after reading:

decls prochead error WHILE expr4 SLT expr5 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOFX 
decls decl 
      proc 
      prochead error procbody END 
                     nexpr SEMICOL procbody 
                     expr 
                     expr1a 
                     expr1 
                     expr2 
                     expr3 
                     expr4 
                     expr5 
                     (?)

** In state 173, looking ahead at LCONCAT, reducing production
** expr4 -> expr4 SLT expr5 
** is permitted because of the following sub-derivation:

expr5 LCONCAT expr6 // lookahead token appears
expr6 // lookahead token is inherited
expr7 // lookahead token is inherited
expr8 // lookahead token is inherited
expr9 // lookahead token is inherited
expr10 // lookahead token is inherited
expr11 // lookahead token is inherited
kwhile // lookahead token is inherited
WHILE expr // lookahead token is inherited
      expr1a // lookahead token is inherited
      expr1 // lookahead token is inherited
      expr2 // lookahead token is inherited
      expr3 // lookahead token is inherited
      expr4 // lookahead token is inherited
      expr4 SLT expr5 . 

** In state 173, looking ahead at LCONCAT, shifting is permitted
** because of the following sub-derivation:

expr6 
expr7 
expr8 
expr9 
expr10 
expr11 
kwhile 
WHILE expr 
      expr1a 
      expr1 
      expr2 
      expr3 
      expr4 
      expr4 SLT expr5 
                expr5 . LCONCAT expr6 

** Conflict (shift/reduce) in state 171.
** Tokens involved: LCONCAT CONCAT
** The following explanations concentrate on token LCONCAT.
** This state is reached from program after reading:

decls prochead error WHILE expr4 SNE expr5 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOFX 
decls decl 
      proc 
      prochead error procbody END 
                     nexpr SEMICOL procbody 
                     expr 
                     expr1a 
                     expr1 
                     expr2 
                     expr3 
                     expr4 
                     expr5 
                     (?)

** In state 171, looking ahead at LCONCAT, reducing production
** expr4 -> expr4 SNE expr5 
** is permitted because of the following sub-derivation:

expr5 LCONCAT expr6 // lookahead token appears
expr6 // lookahead token is inherited
expr7 // lookahead token is inherited
expr8 // lookahead token is inherited
expr9 // lookahead token is inherited
expr10 // lookahead token is inherited
expr11 // lookahead token is inherited
kwhile // lookahead token is inherited
WHILE expr // lookahead token is inherited
      expr1a // lookahead token is inherited
      expr1 // lookahead token is inherited
      expr2 // lookahead token is inherited
      expr3 // lookahead token is inherited
      expr4 // lookahead token is inherited
      expr4 SNE expr5 . 

** In state 171, looking ahead at LCONCAT, shifting is permitted
** because of the following sub-derivation:

expr6 
expr7 
expr8 
expr9 
expr10 
expr11 
kwhile 
WHILE expr 
      expr1a 
      expr1 
      expr2 
      expr3 
      expr4 
      expr4 SNE expr5 
                expr5 . LCONCAT expr6 

** Conflict (shift/reduce) in state 169.
** Tokens involved: SNE SLT SLE SGT SGE SEQ NMNE NMLT NMLE NMGT NMGE NMEQ NEQUIV EQUIV BAR
** The following explanations concentrate on token SNE.
** This state is reached from program after reading:

decls prochead error WHILE expr4 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOFX 
decls decl 
      proc 
      prochead error procbody END 
                     nexpr SEMICOL procbody 
                     expr 
                     expr1a 
                     expr1 
                     expr2 
                     expr3 
                     expr4 
                     (?)

** In state 169, looking ahead at SNE, reducing production
** expr3 -> expr4 
** is permitted because of the following sub-derivation:

expr4 SNE expr5 // lookahead token appears
expr5 // lookahead token is inherited
expr6 // lookahead token is inherited
expr7 // lookahead token is inherited
expr8 // lookahead token is inherited
expr9 // lookahead token is inherited
expr10 // lookahead token is inherited
expr11 // lookahead token is inherited
kwhile // lookahead token is inherited
WHILE expr // lookahead token is inherited
      expr1a // lookahead token is inherited
      expr1 // lookahead token is inherited
      expr2 // lookahead token is inherited
      expr3 // lookahead token is inherited
      expr4 . 

** In state 169, looking ahead at SNE, shifting is permitted
** because of the following sub-derivation:

expr5 
expr6 
expr7 
expr8 
expr9 
expr10 
expr11 
kwhile 
WHILE expr 
      expr1a 
      expr1 
      expr2 
      expr3 
      expr4 
      expr4 . SNE expr5 

** Conflict (shift/reduce) in state 168.
** Tokens involved: UNION PLUS MINUS DIFF
** The following explanations concentrate on token UNION.
** This state is reached from program after reading:

decls prochead error WHILE expr5 CONCAT expr6 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOFX 
decls decl 
      proc 
      prochead error procbody END 
                     nexpr SEMICOL procbody 
                     expr 
                     expr1a 
                     expr1 
                     expr2 
                     expr3 
                     expr4 
                     expr5 
                     expr6 
                     (?)

** In state 168, looking ahead at UNION, reducing production
** expr5 -> expr5 CONCAT expr6 
** is permitted because of the following sub-derivation:

expr6 UNION expr7 // lookahead token appears
expr7 // lookahead token is inherited
expr8 // lookahead token is inherited
expr9 // lookahead token is inherited
expr10 // lookahead token is inherited
expr11 // lookahead token is inherited
kwhile // lookahead token is inherited
WHILE expr // lookahead token is inherited
      expr1a // lookahead token is inherited
      expr1 // lookahead token is inherited
      expr2 // lookahead token is inherited
      expr3 // lookahead token is inherited
      expr4 // lookahead token is inherited
      expr5 // lookahead token is inherited
      expr5 CONCAT expr6 . 

** In state 168, looking ahead at UNION, shifting is permitted
** because of the following sub-derivation:

expr7 
expr8 
expr9 
expr10 
expr11 
kwhile 
WHILE expr 
      expr1a 
      expr1 
      expr2 
      expr3 
      expr4 
      expr5 
      expr5 CONCAT expr6 
                   expr6 . UNION expr7 

** Conflict (shift/reduce) in state 166.
** Tokens involved: UNION PLUS MINUS DIFF
** The following explanations concentrate on token UNION.
** This state is reached from program after reading:

decls prochead error WHILE expr5 LCONCAT expr6 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOFX 
decls decl 
      proc 
      prochead error procbody END 
                     nexpr SEMICOL procbody 
                     expr 
                     expr1a 
                     expr1 
                     expr2 
                     expr3 
                     expr4 
                     expr5 
                     expr6 
                     (?)

** In state 166, looking ahead at UNION, reducing production
** expr5 -> expr5 LCONCAT expr6 
** is permitted because of the following sub-derivation:

expr6 UNION expr7 // lookahead token appears
expr7 // lookahead token is inherited
expr8 // lookahead token is inherited
expr9 // lookahead token is inherited
expr10 // lookahead token is inherited
expr11 // lookahead token is inherited
kwhile // lookahead token is inherited
WHILE expr // lookahead token is inherited
      expr1a // lookahead token is inherited
      expr1 // lookahead token is inherited
      expr2 // lookahead token is inherited
      expr3 // lookahead token is inherited
      expr4 // lookahead token is inherited
      expr5 // lookahead token is inherited
      expr5 LCONCAT expr6 . 

** In state 166, looking ahead at UNION, shifting is permitted
** because of the following sub-derivation:

expr7 
expr8 
expr9 
expr10 
expr11 
kwhile 
WHILE expr 
      expr1a 
      expr1 
      expr2 
      expr3 
      expr4 
      expr5 
      expr5 LCONCAT expr6 
                    expr6 . UNION expr7 

** Conflict (shift/reduce) in state 164.
** Tokens involved: LCONCAT CONCAT
** The following explanations concentrate on token LCONCAT.
** This state is reached from program after reading:

decls prochead error WHILE expr5 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOFX 
decls decl 
      proc 
      prochead error procbody END 
                     nexpr SEMICOL procbody 
                     expr 
                     expr1a 
                     expr1 
                     expr2 
                     expr3 
                     expr4 
                     expr5 
                     (?)

** In state 164, looking ahead at LCONCAT, reducing production
** expr4 -> expr5 
** is permitted because of the following sub-derivation:

expr5 LCONCAT expr6 // lookahead token appears
expr6 // lookahead token is inherited
expr7 // lookahead token is inherited
expr8 // lookahead token is inherited
expr9 // lookahead token is inherited
expr10 // lookahead token is inherited
expr11 // lookahead token is inherited
kwhile // lookahead token is inherited
WHILE expr // lookahead token is inherited
      expr1a // lookahead token is inherited
      expr1 // lookahead token is inherited
      expr2 // lookahead token is inherited
      expr3 // lookahead token is inherited
      expr4 // lookahead token is inherited
      expr5 . 

** In state 164, looking ahead at LCONCAT, shifting is permitted
** because of the following sub-derivation:

expr6 
expr7 
expr8 
expr9 
expr10 
expr11 
kwhile 
WHILE expr 
      expr1a 
      expr1 
      expr2 
      expr3 
      expr4 
      expr5 
      expr5 . LCONCAT expr6 

** Conflict (shift/reduce) in state 163.
** Tokens involved: STAR SLASH MOD INTER
** The following explanations concentrate on token STAR.
** This state is reached from program after reading:

decls prochead error WHILE expr6 DIFF expr7 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOFX 
decls decl 
      proc 
      prochead error procbody END 
                     nexpr SEMICOL procbody 
                     expr 
                     expr1a 
                     expr1 
                     expr2 
                     expr3 
                     expr4 
                     expr5 
                     expr6 
                     expr7 
                     (?)

** In state 163, looking ahead at STAR, reducing production
** expr6 -> expr6 DIFF expr7 
** is permitted because of the following sub-derivation:

expr7 STAR expr8 // lookahead token appears
expr8 // lookahead token is inherited
expr9 // lookahead token is inherited
expr10 // lookahead token is inherited
expr11 // lookahead token is inherited
kwhile // lookahead token is inherited
WHILE expr // lookahead token is inherited
      expr1a // lookahead token is inherited
      expr1 // lookahead token is inherited
      expr2 // lookahead token is inherited
      expr3 // lookahead token is inherited
      expr4 // lookahead token is inherited
      expr5 // lookahead token is inherited
      expr6 // lookahead token is inherited
      expr6 DIFF expr7 . 

** In state 163, looking ahead at STAR, shifting is permitted
** because of the following sub-derivation:

expr8 
expr9 
expr10 
expr11 
kwhile 
WHILE expr 
      expr1a 
      expr1 
      expr2 
      expr3 
      expr4 
      expr5 
      expr6 
      expr6 DIFF expr7 
                 expr7 . STAR expr8 

** Conflict (shift/reduce) in state 161.
** Tokens involved: STAR SLASH MOD INTER
** The following explanations concentrate on token STAR.
** This state is reached from program after reading:

decls prochead error WHILE expr6 MINUS expr7 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOFX 
decls decl 
      proc 
      prochead error procbody END 
                     nexpr SEMICOL procbody 
                     expr 
                     expr1a 
                     expr1 
                     expr2 
                     expr3 
                     expr4 
                     expr5 
                     expr6 
                     expr7 
                     (?)

** In state 161, looking ahead at STAR, reducing production
** expr6 -> expr6 MINUS expr7 
** is permitted because of the following sub-derivation:

expr7 STAR expr8 // lookahead token appears
expr8 // lookahead token is inherited
expr9 // lookahead token is inherited
expr10 // lookahead token is inherited
expr11 // lookahead token is inherited
kwhile // lookahead token is inherited
WHILE expr // lookahead token is inherited
      expr1a // lookahead token is inherited
      expr1 // lookahead token is inherited
      expr2 // lookahead token is inherited
      expr3 // lookahead token is inherited
      expr4 // lookahead token is inherited
      expr5 // lookahead token is inherited
      expr6 // lookahead token is inherited
      expr6 MINUS expr7 . 

** In state 161, looking ahead at STAR, shifting is permitted
** because of the following sub-derivation:

expr8 
expr9 
expr10 
expr11 
kwhile 
WHILE expr 
      expr1a 
      expr1 
      expr2 
      expr3 
      expr4 
      expr5 
      expr6 
      expr6 MINUS expr7 
                  expr7 . STAR expr8 

** Conflict (shift/reduce) in state 159.
** Tokens involved: STAR SLASH MOD INTER
** The following explanations concentrate on token STAR.
** This state is reached from program after reading:

decls prochead error WHILE expr6 PLUS expr7 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOFX 
decls decl 
      proc 
      prochead error procbody END 
                     nexpr SEMICOL procbody 
                     expr 
                     expr1a 
                     expr1 
                     expr2 
                     expr3 
                     expr4 
                     expr5 
                     expr6 
                     expr7 
                     (?)

** In state 159, looking ahead at STAR, reducing production
** expr6 -> expr6 PLUS expr7 
** is permitted because of the following sub-derivation:

expr7 STAR expr8 // lookahead token appears
expr8 // lookahead token is inherited
expr9 // lookahead token is inherited
expr10 // lookahead token is inherited
expr11 // lookahead token is inherited
kwhile // lookahead token is inherited
WHILE expr // lookahead token is inherited
      expr1a // lookahead token is inherited
      expr1 // lookahead token is inherited
      expr2 // lookahead token is inherited
      expr3 // lookahead token is inherited
      expr4 // lookahead token is inherited
      expr5 // lookahead token is inherited
      expr6 // lookahead token is inherited
      expr6 PLUS expr7 . 

** In state 159, looking ahead at STAR, shifting is permitted
** because of the following sub-derivation:

expr8 
expr9 
expr10 
expr11 
kwhile 
WHILE expr 
      expr1a 
      expr1 
      expr2 
      expr3 
      expr4 
      expr5 
      expr6 
      expr6 PLUS expr7 
                 expr7 . STAR expr8 

** Conflict (shift/reduce) in state 157.
** Tokens involved: STAR SLASH MOD INTER
** The following explanations concentrate on token STAR.
** This state is reached from program after reading:

decls prochead error WHILE expr6 UNION expr7 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOFX 
decls decl 
      proc 
      prochead error procbody END 
                     nexpr SEMICOL procbody 
                     expr 
                     expr1a 
                     expr1 
                     expr2 
                     expr3 
                     expr4 
                     expr5 
                     expr6 
                     expr7 
                     (?)

** In state 157, looking ahead at STAR, reducing production
** expr6 -> expr6 UNION expr7 
** is permitted because of the following sub-derivation:

expr7 STAR expr8 // lookahead token appears
expr8 // lookahead token is inherited
expr9 // lookahead token is inherited
expr10 // lookahead token is inherited
expr11 // lookahead token is inherited
kwhile // lookahead token is inherited
WHILE expr // lookahead token is inherited
      expr1a // lookahead token is inherited
      expr1 // lookahead token is inherited
      expr2 // lookahead token is inherited
      expr3 // lookahead token is inherited
      expr4 // lookahead token is inherited
      expr5 // lookahead token is inherited
      expr6 // lookahead token is inherited
      expr6 UNION expr7 . 

** In state 157, looking ahead at STAR, shifting is permitted
** because of the following sub-derivation:

expr8 
expr9 
expr10 
expr11 
kwhile 
WHILE expr 
      expr1a 
      expr1 
      expr2 
      expr3 
      expr4 
      expr5 
      expr6 
      expr6 UNION expr7 
                  expr7 . STAR expr8 

** Conflict (shift/reduce) in state 155.
** Tokens involved: UNION PLUS MINUS DIFF
** The following explanations concentrate on token UNION.
** This state is reached from program after reading:

decls prochead error WHILE expr6 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOFX 
decls decl 
      proc 
      prochead error procbody END 
                     nexpr SEMICOL procbody 
                     expr 
                     expr1a 
                     expr1 
                     expr2 
                     expr3 
                     expr4 
                     expr5 
                     expr6 
                     (?)

** In state 155, looking ahead at UNION, reducing production
** expr5 -> expr6 
** is permitted because of the following sub-derivation:

expr6 UNION expr7 // lookahead token appears
expr7 // lookahead token is inherited
expr8 // lookahead token is inherited
expr9 // lookahead token is inherited
expr10 // lookahead token is inherited
expr11 // lookahead token is inherited
kwhile // lookahead token is inherited
WHILE expr // lookahead token is inherited
      expr1a // lookahead token is inherited
      expr1 // lookahead token is inherited
      expr2 // lookahead token is inherited
      expr3 // lookahead token is inherited
      expr4 // lookahead token is inherited
      expr5 // lookahead token is inherited
      expr6 . 

** In state 155, looking ahead at UNION, shifting is permitted
** because of the following sub-derivation:

expr7 
expr8 
expr9 
expr10 
expr11 
kwhile 
WHILE expr 
      expr1a 
      expr1 
      expr2 
      expr3 
      expr4 
      expr5 
      expr6 
      expr6 . UNION expr7 

** Conflict (shift/reduce) in state 146.
** Tokens involved: STAR SLASH MOD INTER
** The following explanations concentrate on token STAR.
** This state is reached from program after reading:

decls prochead error WHILE expr7 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOFX 
decls decl 
      proc 
      prochead error procbody END 
                     nexpr SEMICOL procbody 
                     expr 
                     expr1a 
                     expr1 
                     expr2 
                     expr3 
                     expr4 
                     expr5 
                     expr6 
                     expr7 
                     (?)

** In state 146, looking ahead at STAR, reducing production
** expr6 -> expr7 
** is permitted because of the following sub-derivation:

expr7 STAR expr8 // lookahead token appears
expr8 // lookahead token is inherited
expr9 // lookahead token is inherited
expr10 // lookahead token is inherited
expr11 // lookahead token is inherited
kwhile // lookahead token is inherited
WHILE expr // lookahead token is inherited
      expr1a // lookahead token is inherited
      expr1 // lookahead token is inherited
      expr2 // lookahead token is inherited
      expr3 // lookahead token is inherited
      expr4 // lookahead token is inherited
      expr5 // lookahead token is inherited
      expr6 // lookahead token is inherited
      expr7 . 

** In state 146, looking ahead at STAR, shifting is permitted
** because of the following sub-derivation:

expr8 
expr9 
expr10 
expr11 
kwhile 
WHILE expr 
      expr1a 
      expr1 
      expr2 
      expr3 
      expr4 
      expr5 
      expr6 
      expr7 
      expr7 . STAR expr8 

** Conflict (shift/reduce) in state 133.
** Tokens involved: CARET BANG BACKSLASH AT
** The following explanations concentrate on token CARET.
** This state is reached from program after reading:

decls prochead error WHILE expr9 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOFX 
decls decl 
      proc 
      prochead error procbody END 
                     nexpr SEMICOL procbody 
                     expr 
                     expr1a 
                     expr1 
                     expr2 
                     expr3 
                     expr4 
                     expr5 
                     expr6 
                     expr7 
                     expr8 
                     (?)

** In state 133, looking ahead at CARET, reducing production
** expr8 -> expr9 
** is permitted because of the following sub-derivation:

expr9 CARET expr8 // lookahead token appears
expr10 // lookahead token is inherited
expr11 // lookahead token is inherited
kwhile // lookahead token is inherited
WHILE expr // lookahead token is inherited
      expr1a // lookahead token is inherited
      expr1 // lookahead token is inherited
      expr2 // lookahead token is inherited
      expr3 // lookahead token is inherited
      expr4 // lookahead token is inherited
      expr5 // lookahead token is inherited
      expr6 // lookahead token is inherited
      expr7 // lookahead token is inherited
      expr8 // lookahead token is inherited
      expr9 . 

** In state 133, looking ahead at CARET, shifting is permitted
** because of the following sub-derivation:

expr9 
expr10 
expr11 
kwhile 
WHILE expr 
      expr1a 
      expr1 
      expr2 
      expr3 
      expr4 
      expr5 
      expr6 
      expr7 
      expr8 
      expr9 . CARET expr8 

** Conflict (shift/reduce) in state 126.
** Tokens involved: LPAREN LBRACK LBRACE DOT DOLLAR
** The following explanations concentrate on token LPAREN.
** This state is reached from program after reading:

decls prochead error WHILE expr11 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOFX 
decls decl 
      proc 
      prochead error procbody END 
                     nexpr SEMICOL procbody 
                     expr 
                     expr1a 
                     expr1 
                     expr2 
                     expr3 
                     expr4 
                     expr5 
                     expr6 
                     expr7 
                     expr8 
                     expr9 
                     expr10 
                     expr11 
                     (?)

** In state 126, looking ahead at LPAREN, reducing production
** expr10 -> expr11 
** is permitted because of the following sub-derivation:

expr11 LPAREN exprlist RPAREN // lookahead token appears
kwhile // lookahead token is inherited
WHILE expr // lookahead token is inherited
      expr1a // lookahead token is inherited
      expr1 // lookahead token is inherited
      expr2 // lookahead token is inherited
      expr3 // lookahead token is inherited
      expr4 // lookahead token is inherited
      expr5 // lookahead token is inherited
      expr6 // lookahead token is inherited
      expr7 // lookahead token is inherited
      expr8 // lookahead token is inherited
      expr9 // lookahead token is inherited
      expr10 // lookahead token is inherited
      expr11 . 

** In state 126, looking ahead at LPAREN, shifting is permitted
** because of the following sub-derivation:

kwhile 
WHILE expr 
      expr1a 
      expr1 
      expr2 
      expr3 
      expr4 
      expr5 
      expr6 
      expr7 
      expr8 
      expr9 
      expr10 
      expr11 
      expr11 . LPAREN exprlist RPAREN 

** Conflict (shift/reduce) in state 110.
** Tokens involved: UNION STAR SNE SLASH SEQ QMARK PLUS NMNE NMEQ NEQUIV MINUS LPAREN LCONCAT LBRACK LBRACE INTER EQUIV DOT DIFF CONCAT CARET BAR BANG BACKSLASH AT AND
** The following explanations concentrate on token UNION.
** This state is reached from program after reading:

decls prochead error BREAK 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOFX 
decls decl 
      proc 
      prochead error procbody END 
                     nexpr SEMICOL procbody 
                     expr 
                     expr1a 
                     expr1 
                     expr2 
                     expr3 
                     expr4 
                     expr5 
                     expr6 
                     (?)

** In state 110, looking ahead at UNION, shifting is permitted
** because of the following sub-derivation:

expr7 
expr8 
expr9 
expr10 
expr11 
BREAK nexpr 
      expr 
      expr1a 
      expr1 
      expr2 
      expr3 
      expr4 
      expr5 
      expr6 
      expr7 
      expr8 
      expr9 
      expr10 
      . UNION expr10 

** In state 110, looking ahead at UNION, reducing production
** nexpr -> 
** is permitted because of the following sub-derivation:

expr6 UNION expr7 // lookahead token appears
expr7 // lookahead token is inherited
expr8 // lookahead token is inherited
expr9 // lookahead token is inherited
expr10 // lookahead token is inherited
expr11 // lookahead token is inherited
BREAK nexpr // lookahead token is inherited
      . 

** Conflict (shift/reduce) in state 84.
** Tokens involved: UNION STAR SNE SLASH SEQ QMARK PLUS NMNE NMEQ NEQUIV MINUS LPAREN LCONCAT LBRACK LBRACE INTER EQUIV DOT DIFF CONCAT CARET BAR BANG BACKSLASH AT AND
** The following explanations concentrate on token UNION.
** This state is reached from program after reading:

decls prochead error RETURN 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOFX 
decls decl 
      proc 
      prochead error procbody END 
                     nexpr SEMICOL procbody 
                     expr 
                     expr1a 
                     expr1 
                     expr2 
                     expr3 
                     expr4 
                     expr5 
                     expr6 
                     (?)

** In state 84, looking ahead at UNION, shifting is permitted
** because of the following sub-derivation:

expr7 
expr8 
expr9 
expr10 
expr11 
return 
RETURN nexpr 
       expr 
       expr1a 
       expr1 
       expr2 
       expr3 
       expr4 
       expr5 
       expr6 
       expr7 
       expr8 
       expr9 
       expr10 
       . UNION expr10 

** In state 84, looking ahead at UNION, reducing production
** nexpr -> 
** is permitted because of the following sub-derivation:

expr6 UNION expr7 // lookahead token appears
expr7 // lookahead token is inherited
expr8 // lookahead token is inherited
expr9 // lookahead token is inherited
expr10 // lookahead token is inherited
expr11 // lookahead token is inherited
return // lookahead token is inherited
RETURN nexpr // lookahead token is inherited
       . 

** Conflict (shift/reduce) in state 79.
** Tokens involved: UNION STAR SNE SLASH SEQ QMARK PLUS NMNE NMEQ NEQUIV MINUS LPAREN LCONCAT LBRACK LBRACE INTER EQUIV DOT DIFF CONCAT CARET BAR BANG BACKSLASH AT AND
** The following explanations concentrate on token UNION.
** This state is reached from program after reading:

decls prochead error SUSPEND 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOFX 
decls decl 
      proc 
      prochead error procbody END 
                     nexpr SEMICOL procbody 
                     expr 
                     expr1a 
                     expr1 
                     expr2 
                     expr3 
                     expr4 
                     expr5 
                     expr6 
                     (?)

** In state 79, looking ahead at UNION, shifting is permitted
** because of the following sub-derivation:

expr7 
expr8 
expr9 
expr10 
expr11 
return 
SUSPEND expr DO expr 
        expr1a 
        expr1 
        expr2 
        expr3 
        expr4 
        expr5 
        expr6 
        expr7 
        expr8 
        expr9 
        expr10 
        . UNION expr10 

** In state 79, looking ahead at UNION, reducing production
** nexpr -> 
** is permitted because of the following sub-derivation:

expr6 UNION expr7 // lookahead token appears
expr7 // lookahead token is inherited
expr8 // lookahead token is inherited
expr9 // lookahead token is inherited
expr10 // lookahead token is inherited
expr11 // lookahead token is inherited
return // lookahead token is inherited
SUSPEND nexpr // lookahead token is inherited
        . 
