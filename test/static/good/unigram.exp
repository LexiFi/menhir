Grammar has 62 nonterminal symbols, among which 1 start symbols.
Grammar has 119 terminal symbols.
Grammar has 237 productions.
nullable(until) = false
nullable(supers) = true
nullable(sectop) = false
nullable(section) = false
nullable(return) = false
nullable(retention) = false
nullable(repeat) = false
nullable(record) = false
nullable(program) = false
nullable(prochead) = false
nullable(procbody) = true
nullable(proc) = false
nullable(pdcolist) = true
nullable(parmlist) = false
nullable(packageref) = false
nullable(package) = false
nullable(optsemi) = true
nullable(nexpr) = true
nullable(methods) = true
nullable(methhead) = false
nullable(meth) = false
nullable(locals) = true
nullable(lnklist) = false
nullable(lnkfile) = false
nullable(literal) = false
nullable(link) = false
nullable(kwhile) = false
nullable(kif) = false
nullable(invocop) = false
nullable(invoclist) = false
nullable(invocable) = false
nullable(initiallysection) = true
nullable(initial) = true
nullable(import) = false
nullable(idlist) = false
nullable(global) = false
nullable(fldlist) = true
nullable(exprlist) = true
nullable(expr9) = false
nullable(expr8) = false
nullable(expr7) = false
nullable(expr6) = false
nullable(expr5) = false
nullable(expr4) = false
nullable(expr3) = false
nullable(expr2) = false
nullable(expr1a) = false
nullable(expr11) = false
nullable(expr10) = false
nullable(expr1) = false
nullable(expr) = false
nullable(every) = false
nullable(decls) = true
nullable(decl) = false
nullable(compound) = true
nullable(classhead) = false
nullable(cl) = false
nullable(cclause) = false
nullable(caselist) = false
nullable(case) = false
nullable(arglist) = true
nullable(arg) = false
first(until) = UNTIL
first(supers) = COLON
first(sectop) = PCOLON MCOLON COLON
first(section) = WHILE UNTIL SUSPEND STRINGLIT RETURN REPEAT REALLIT NEXT LPAREN LBRACK LBRACE INTLIT IF IDENT FAIL EVERY CSETLIT CREATE COLONCOLON CASE BREAK AND
first(return) = SUSPEND RETURN FAIL
first(retention) = STATIC LOCAL
first(repeat) = REPEAT
first(record) = RECORD
first(program) = error RECORD PROCEDURE PACKAGE LINK INVOCABLE IMPORT GLOBAL EOFX CLASS
first(prochead) = PROCEDURE
first(procbody) = error WHILE UNTIL UNION TILDE SUSPEND STRINGLIT STAR SNE SLASH SEQ SEMICOL RETURN REPEAT REALLIT QMARK PLUS NOT NMNE NMEQ NEXT NEQUIV MINUS LPAREN LCONCAT LBRACK LBRACE INTLIT INTER IF IDENT FAIL EVERY EQUIV DOT DIFF CSETLIT CREATE CONCAT COLONCOLON CASE CARET BREAK BAR BANG BACKSLASH AT AND
first(proc) = PROCEDURE
first(pdcolist) = error WHILE UNTIL UNION TILDE SUSPEND STRINGLIT STAR SNE SLASH SEQ RETURN REPEAT REALLIT QMARK PLUS NOT NMNE NMEQ NEXT NEQUIV MINUS LPAREN LCONCAT LBRACK LBRACE INTLIT INTER IF IDENT FAIL EVERY EQUIV DOT DIFF CSETLIT CREATE CONCAT COMMA COLONCOLON CASE CARET BREAK BAR BANG BACKSLASH AT AND
first(parmlist) = IDENT
first(packageref) = IDENT COLONCOLON
first(package) = PACKAGE
first(optsemi) = SEMICOL
first(nexpr) = error WHILE UNTIL UNION TILDE SUSPEND STRINGLIT STAR SNE SLASH SEQ RETURN REPEAT REALLIT QMARK PLUS NOT NMNE NMEQ NEXT NEQUIV MINUS LPAREN LCONCAT LBRACK LBRACE INTLIT INTER IF IDENT FAIL EVERY EQUIV DOT DIFF CSETLIT CREATE CONCAT COLONCOLON CASE CARET BREAK BAR BANG BACKSLASH AT AND
first(methods) = RECORD METHOD GLOBAL ABSTRACT
first(methhead) = METHOD
first(meth) = METHOD ABSTRACT
first(locals) = STATIC LOCAL
first(lnklist) = STRINGLIT IDENT
first(lnkfile) = STRINGLIT IDENT
first(literal) = STRINGLIT REALLIT INTLIT CSETLIT
first(link) = LINK
first(kwhile) = WHILE
first(kif) = IF
first(invocop) = STRINGLIT IDENT
first(invoclist) = STRINGLIT IDENT
first(invocable) = INVOCABLE
first(initiallysection) = INITIALLY
first(initial) = ICONINITIAL
first(import) = IMPORT
first(idlist) = IDENT
first(global) = GLOBAL
first(fldlist) = IDENT
first(exprlist) = error WHILE UNTIL UNION TILDE SUSPEND STRINGLIT STAR SNE SLASH SEQ RETURN REPEAT REALLIT QMARK PLUS NOT NMNE NMEQ NEXT NEQUIV MINUS LPAREN LCONCAT LBRACK LBRACE INTLIT INTER IF IDENT FAIL EVERY EQUIV DOT DIFF CSETLIT CREATE CONCAT COMMA COLONCOLON CASE CARET BREAK BAR BANG BACKSLASH AT AND
first(expr9) = WHILE UNTIL UNION TILDE SUSPEND STRINGLIT STAR SNE SLASH SEQ RETURN REPEAT REALLIT QMARK PLUS NOT NMNE NMEQ NEXT NEQUIV MINUS LPAREN LCONCAT LBRACK LBRACE INTLIT INTER IF IDENT FAIL EVERY EQUIV DOT DIFF CSETLIT CREATE CONCAT COLONCOLON CASE CARET BREAK BAR BANG BACKSLASH AT AND
first(expr8) = WHILE UNTIL UNION TILDE SUSPEND STRINGLIT STAR SNE SLASH SEQ RETURN REPEAT REALLIT QMARK PLUS NOT NMNE NMEQ NEXT NEQUIV MINUS LPAREN LCONCAT LBRACK LBRACE INTLIT INTER IF IDENT FAIL EVERY EQUIV DOT DIFF CSETLIT CREATE CONCAT COLONCOLON CASE CARET BREAK BAR BANG BACKSLASH AT AND
first(expr7) = WHILE UNTIL UNION TILDE SUSPEND STRINGLIT STAR SNE SLASH SEQ RETURN REPEAT REALLIT QMARK PLUS NOT NMNE NMEQ NEXT NEQUIV MINUS LPAREN LCONCAT LBRACK LBRACE INTLIT INTER IF IDENT FAIL EVERY EQUIV DOT DIFF CSETLIT CREATE CONCAT COLONCOLON CASE CARET BREAK BAR BANG BACKSLASH AT AND
first(expr6) = WHILE UNTIL UNION TILDE SUSPEND STRINGLIT STAR SNE SLASH SEQ RETURN REPEAT REALLIT QMARK PLUS NOT NMNE NMEQ NEXT NEQUIV MINUS LPAREN LCONCAT LBRACK LBRACE INTLIT INTER IF IDENT FAIL EVERY EQUIV DOT DIFF CSETLIT CREATE CONCAT COLONCOLON CASE CARET BREAK BAR BANG BACKSLASH AT AND
first(expr5) = WHILE UNTIL UNION TILDE SUSPEND STRINGLIT STAR SNE SLASH SEQ RETURN REPEAT REALLIT QMARK PLUS NOT NMNE NMEQ NEXT NEQUIV MINUS LPAREN LCONCAT LBRACK LBRACE INTLIT INTER IF IDENT FAIL EVERY EQUIV DOT DIFF CSETLIT CREATE CONCAT COLONCOLON CASE CARET BREAK BAR BANG BACKSLASH AT AND
first(expr4) = WHILE UNTIL UNION TILDE SUSPEND STRINGLIT STAR SNE SLASH SEQ RETURN REPEAT REALLIT QMARK PLUS NOT NMNE NMEQ NEXT NEQUIV MINUS LPAREN LCONCAT LBRACK LBRACE INTLIT INTER IF IDENT FAIL EVERY EQUIV DOT DIFF CSETLIT CREATE CONCAT COLONCOLON CASE CARET BREAK BAR BANG BACKSLASH AT AND
first(expr3) = WHILE UNTIL UNION TILDE SUSPEND STRINGLIT STAR SNE SLASH SEQ RETURN REPEAT REALLIT QMARK PLUS NOT NMNE NMEQ NEXT NEQUIV MINUS LPAREN LCONCAT LBRACK LBRACE INTLIT INTER IF IDENT FAIL EVERY EQUIV DOT DIFF CSETLIT CREATE CONCAT COLONCOLON CASE CARET BREAK BAR BANG BACKSLASH AT AND
first(expr2) = WHILE UNTIL UNION TILDE SUSPEND STRINGLIT STAR SNE SLASH SEQ RETURN REPEAT REALLIT QMARK PLUS NOT NMNE NMEQ NEXT NEQUIV MINUS LPAREN LCONCAT LBRACK LBRACE INTLIT INTER IF IDENT FAIL EVERY EQUIV DOT DIFF CSETLIT CREATE CONCAT COLONCOLON CASE CARET BREAK BAR BANG BACKSLASH AT AND
first(expr1a) = WHILE UNTIL UNION TILDE SUSPEND STRINGLIT STAR SNE SLASH SEQ RETURN REPEAT REALLIT QMARK PLUS NOT NMNE NMEQ NEXT NEQUIV MINUS LPAREN LCONCAT LBRACK LBRACE INTLIT INTER IF IDENT FAIL EVERY EQUIV DOT DIFF CSETLIT CREATE CONCAT COLONCOLON CASE CARET BREAK BAR BANG BACKSLASH AT AND
first(expr11) = WHILE UNTIL SUSPEND STRINGLIT RETURN REPEAT REALLIT NEXT LPAREN LBRACK LBRACE INTLIT IF IDENT FAIL EVERY CSETLIT CREATE COLONCOLON CASE BREAK AND
first(expr10) = WHILE UNTIL UNION TILDE SUSPEND STRINGLIT STAR SNE SLASH SEQ RETURN REPEAT REALLIT QMARK PLUS NOT NMNE NMEQ NEXT NEQUIV MINUS LPAREN LCONCAT LBRACK LBRACE INTLIT INTER IF IDENT FAIL EVERY EQUIV DOT DIFF CSETLIT CREATE CONCAT COLONCOLON CASE CARET BREAK BAR BANG BACKSLASH AT AND
first(expr1) = WHILE UNTIL UNION TILDE SUSPEND STRINGLIT STAR SNE SLASH SEQ RETURN REPEAT REALLIT QMARK PLUS NOT NMNE NMEQ NEXT NEQUIV MINUS LPAREN LCONCAT LBRACK LBRACE INTLIT INTER IF IDENT FAIL EVERY EQUIV DOT DIFF CSETLIT CREATE CONCAT COLONCOLON CASE CARET BREAK BAR BANG BACKSLASH AT AND
first(expr) = error WHILE UNTIL UNION TILDE SUSPEND STRINGLIT STAR SNE SLASH SEQ RETURN REPEAT REALLIT QMARK PLUS NOT NMNE NMEQ NEXT NEQUIV MINUS LPAREN LCONCAT LBRACK LBRACE INTLIT INTER IF IDENT FAIL EVERY EQUIV DOT DIFF CSETLIT CREATE CONCAT COLONCOLON CASE CARET BREAK BAR BANG BACKSLASH AT AND
first(every) = EVERY
first(decls) = RECORD PROCEDURE PACKAGE LINK INVOCABLE IMPORT GLOBAL CLASS
first(decl) = RECORD PROCEDURE PACKAGE LINK INVOCABLE IMPORT GLOBAL CLASS
first(compound) = error WHILE UNTIL UNION TILDE SUSPEND STRINGLIT STAR SNE SLASH SEQ SEMICOL RETURN REPEAT REALLIT QMARK PLUS NOT NMNE NMEQ NEXT NEQUIV MINUS LPAREN LCONCAT LBRACK LBRACE INTLIT INTER IF IDENT FAIL EVERY EQUIV DOT DIFF CSETLIT CREATE CONCAT COLONCOLON CASE CARET BREAK BAR BANG BACKSLASH AT AND
first(classhead) = CLASS
first(cl) = CLASS
first(cclause) = error WHILE UNTIL UNION TILDE SUSPEND STRINGLIT STAR SNE SLASH SEQ RETURN REPEAT REALLIT QMARK PLUS NOT NMNE NMEQ NEXT NEQUIV MINUS LPAREN LCONCAT LBRACK LBRACE INTLIT INTER IF IDENT FAIL EVERY EQUIV DOT DIFF DEFAULT CSETLIT CREATE CONCAT COLONCOLON CASE CARET BREAK BAR BANG BACKSLASH AT AND
first(caselist) = error WHILE UNTIL UNION TILDE SUSPEND STRINGLIT STAR SNE SLASH SEQ RETURN REPEAT REALLIT QMARK PLUS NOT NMNE NMEQ NEXT NEQUIV MINUS LPAREN LCONCAT LBRACK LBRACE INTLIT INTER IF IDENT FAIL EVERY EQUIV DOT DIFF DEFAULT CSETLIT CREATE CONCAT COLONCOLON CASE CARET BREAK BAR BANG BACKSLASH AT AND
first(case) = CASE
first(arglist) = IDENT
first(arg) = IDENT
minimal(until) = (* 2 *) UNTIL INTLIT
minimal(supers) = (* 0 *)
minimal(sectop) = (* 1 *) COLON
minimal(section) = (* 6 *) INTLIT LBRACK INTLIT COLON INTLIT RBRACK
minimal(return) = (* 1 *) FAIL
minimal(retention) = (* 1 *) LOCAL
minimal(repeat) = (* 2 *) REPEAT INTLIT
minimal(record) = (* 4 *) RECORD IDENT LPAREN RPAREN
minimal(program) = (* 1 *) EOFX
minimal(prochead) = (* 4 *) PROCEDURE IDENT LPAREN RPAREN
minimal(procbody) = (* 0 *)
minimal(proc) = (* 6 *) PROCEDURE IDENT LPAREN RPAREN error END
minimal(pdcolist) = (* 0 *)
minimal(parmlist) = (* 1 *) IDENT
minimal(packageref) = (* 2 *) COLONCOLON IDENT
minimal(package) = (* 2 *) PACKAGE IDENT
minimal(optsemi) = (* 0 *)
minimal(nexpr) = (* 0 *)
minimal(methods) = (* 0 *)
minimal(methhead) = (* 4 *) METHOD IDENT LPAREN RPAREN
minimal(meth) = (* 5 *) ABSTRACT METHOD IDENT LPAREN RPAREN
minimal(locals) = (* 0 *)
minimal(lnklist) = (* 1 *) IDENT
minimal(lnkfile) = (* 1 *) IDENT
minimal(literal) = (* 1 *) INTLIT
minimal(link) = (* 2 *) LINK IDENT
minimal(kwhile) = (* 2 *) WHILE INTLIT
minimal(kif) = (* 4 *) IF INTLIT THEN INTLIT
minimal(invocop) = (* 1 *) IDENT
minimal(invoclist) = (* 1 *) IDENT
minimal(invocable) = (* 2 *) INVOCABLE IDENT
minimal(initiallysection) = (* 0 *)
minimal(initial) = (* 0 *)
minimal(import) = (* 2 *) IMPORT IDENT
minimal(idlist) = (* 1 *) IDENT
minimal(global) = (* 2 *) GLOBAL IDENT
minimal(fldlist) = (* 0 *)
minimal(exprlist) = (* 0 *)
minimal(expr9) = (* 1 *) INTLIT
minimal(expr8) = (* 1 *) INTLIT
minimal(expr7) = (* 1 *) INTLIT
minimal(expr6) = (* 1 *) INTLIT
minimal(expr5) = (* 1 *) INTLIT
minimal(expr4) = (* 1 *) INTLIT
minimal(expr3) = (* 1 *) INTLIT
minimal(expr2) = (* 1 *) INTLIT
minimal(expr1a) = (* 1 *) INTLIT
minimal(expr11) = (* 1 *) INTLIT
minimal(expr10) = (* 1 *) INTLIT
minimal(expr1) = (* 1 *) INTLIT
minimal(expr) = (* 1 *) INTLIT
minimal(every) = (* 2 *) EVERY INTLIT
minimal(decls) = (* 0 *)
minimal(decl) = (* 2 *) GLOBAL IDENT
minimal(compound) = (* 0 *)
minimal(classhead) = (* 4 *) CLASS IDENT LPAREN RPAREN
minimal(cl) = (* 5 *) CLASS IDENT LPAREN RPAREN END
minimal(cclause) = (* 3 *) DEFAULT COLON INTLIT
minimal(caselist) = (* 3 *) DEFAULT COLON INTLIT
minimal(case) = (* 8 *) CASE INTLIT OF LBRACE DEFAULT COLON INTLIT RBRACE
minimal(arglist) = (* 0 *)
minimal(arg) = (* 1 *) IDENT
follow(until) = UNION TO THEN SWAP STAR SNE SLT SLE SLASH SGT SGE SEQ SEMICOL RPAREN REVSWAP REVASSIGN RBRACK RBRACE QMARK PLUS PCOLON OF NMNE NMLT NMLE NMGT NMGE NMEQ NEQUIV MOD MINUS MCOLON LPAREN LCONCAT LBRACK LBRACE INTER EQUIV ELSE DOT DOLLAR DO DIFF CONCAT COMMA COLON CARET BY BAR BANG BACKSLASH AUGUNION AUGSTAR AUGSNE AUGSLT AUGSLE AUGSLASH AUGSGT AUGSGE AUGSEQ AUGQMARK AUGPLUS AUGNMNE AUGNMLT AUGNMLE AUGNMGT AUGNMGE AUGNMEQ AUGNEQUIV AUGMOD AUGMINUS AUGLCONCAT AUGINTER AUGEQUIV AUGDIFF AUGCONCAT AUGCARET AUGAT AUGAND AT ASSIGN AND
follow(supers) = LPAREN
follow(sectop) = error WHILE UNTIL UNION TILDE SUSPEND STRINGLIT STAR SNE SLASH SEQ RETURN REPEAT REALLIT QMARK PLUS NOT NMNE NMEQ NEXT NEQUIV MINUS LPAREN LCONCAT LBRACK LBRACE INTLIT INTER IF IDENT FAIL EVERY EQUIV DOT DIFF CSETLIT CREATE CONCAT COLONCOLON CASE CARET BREAK BAR BANG BACKSLASH AT AND
follow(section) = UNION TO THEN SWAP STAR SNE SLT SLE SLASH SGT SGE SEQ SEMICOL RPAREN REVSWAP REVASSIGN RBRACK RBRACE QMARK PLUS PCOLON OF NMNE NMLT NMLE NMGT NMGE NMEQ NEQUIV MOD MINUS MCOLON LPAREN LCONCAT LBRACK LBRACE INTER EQUIV ELSE DOT DOLLAR DO DIFF CONCAT COMMA COLON CARET BY BAR BANG BACKSLASH AUGUNION AUGSTAR AUGSNE AUGSLT AUGSLE AUGSLASH AUGSGT AUGSGE AUGSEQ AUGQMARK AUGPLUS AUGNMNE AUGNMLT AUGNMLE AUGNMGT AUGNMGE AUGNMEQ AUGNEQUIV AUGMOD AUGMINUS AUGLCONCAT AUGINTER AUGEQUIV AUGDIFF AUGCONCAT AUGCARET AUGAT AUGAND AT ASSIGN AND
follow(return) = UNION TO THEN SWAP STAR SNE SLT SLE SLASH SGT SGE SEQ SEMICOL RPAREN REVSWAP REVASSIGN RBRACK RBRACE QMARK PLUS PCOLON OF NMNE NMLT NMLE NMGT NMGE NMEQ NEQUIV MOD MINUS MCOLON LPAREN LCONCAT LBRACK LBRACE INTER EQUIV ELSE DOT DOLLAR DO DIFF CONCAT COMMA COLON CARET BY BAR BANG BACKSLASH AUGUNION AUGSTAR AUGSNE AUGSLT AUGSLE AUGSLASH AUGSGT AUGSGE AUGSEQ AUGQMARK AUGPLUS AUGNMNE AUGNMLT AUGNMLE AUGNMGT AUGNMGE AUGNMEQ AUGNEQUIV AUGMOD AUGMINUS AUGLCONCAT AUGINTER AUGEQUIV AUGDIFF AUGCONCAT AUGCARET AUGAT AUGAND AT ASSIGN AND
follow(retention) = IDENT
follow(repeat) = UNION TO THEN SWAP STAR SNE SLT SLE SLASH SGT SGE SEQ SEMICOL RPAREN REVSWAP REVASSIGN RBRACK RBRACE QMARK PLUS PCOLON OF NMNE NMLT NMLE NMGT NMGE NMEQ NEQUIV MOD MINUS MCOLON LPAREN LCONCAT LBRACK LBRACE INTER EQUIV ELSE DOT DOLLAR DO DIFF CONCAT COMMA COLON CARET BY BAR BANG BACKSLASH AUGUNION AUGSTAR AUGSNE AUGSLT AUGSLE AUGSLASH AUGSGT AUGSGE AUGSEQ AUGQMARK AUGPLUS AUGNMNE AUGNMLT AUGNMLE AUGNMGT AUGNMGE AUGNMEQ AUGNEQUIV AUGMOD AUGMINUS AUGLCONCAT AUGINTER AUGEQUIV AUGDIFF AUGCONCAT AUGCARET AUGAT AUGAND AT ASSIGN AND
follow(record) = SEMICOL RECORD PROCEDURE PACKAGE METHOD LINK INVOCABLE INITIALLY IMPORT GLOBAL EOFX END CLASS ABSTRACT
follow(program) = #
follow(prochead) = error SEMICOL
follow(procbody) = END
follow(proc) = RECORD PROCEDURE PACKAGE LINK INVOCABLE IMPORT GLOBAL EOFX CLASS
follow(pdcolist) = RBRACE COMMA
follow(parmlist) = RPAREN LBRACK COMMA
follow(packageref) = UNION TO THEN SWAP STAR SNE SLT SLE SLASH SGT SGE SEQ SEMICOL RPAREN REVSWAP REVASSIGN RBRACK RBRACE QMARK PLUS PCOLON OF NMNE NMLT NMLE NMGT NMGE NMEQ NEQUIV MOD MINUS MCOLON LPAREN LCONCAT LBRACK LBRACE INTER EQUIV ELSE DOT DOLLAR DO DIFF CONCAT COMMA COLON CARET BY BAR BANG BACKSLASH AUGUNION AUGSTAR AUGSNE AUGSLT AUGSLE AUGSLASH AUGSGT AUGSGE AUGSEQ AUGQMARK AUGPLUS AUGNMNE AUGNMLT AUGNMLE AUGNMGT AUGNMGE AUGNMEQ AUGNEQUIV AUGMOD AUGMINUS AUGLCONCAT AUGINTER AUGEQUIV AUGDIFF AUGCONCAT AUGCARET AUGAT AUGAND AT ASSIGN AND
follow(package) = RECORD PROCEDURE PACKAGE LINK INVOCABLE IMPORT GLOBAL EOFX CLASS
follow(optsemi) = INITIALLY END
follow(nexpr) = UNION TO THEN SWAP STAR SNE SLT SLE SLASH SGT SGE SEQ SEMICOL RPAREN REVSWAP REVASSIGN RBRACK RBRACE QMARK PLUS PCOLON OF NMNE NMLT NMLE NMGT NMGE NMEQ NEQUIV MOD MINUS MCOLON LPAREN LCONCAT LBRACK LBRACE INTER EQUIV ELSE DOT DOLLAR DO DIFF CONCAT COMMA COLON CARET BY BAR BANG BACKSLASH AUGUNION AUGSTAR AUGSNE AUGSLT AUGSLE AUGSLASH AUGSGT AUGSGE AUGSEQ AUGQMARK AUGPLUS AUGNMNE AUGNMLT AUGNMLE AUGNMGT AUGNMGE AUGNMEQ AUGNEQUIV AUGMOD AUGMINUS AUGLCONCAT AUGINTER AUGEQUIV AUGDIFF AUGCONCAT AUGCARET AUGAT AUGAND AT ASSIGN AND
follow(methods) = SEMICOL INITIALLY END
follow(methhead) = SEMICOL RECORD METHOD INITIALLY GLOBAL END ABSTRACT
follow(meth) = SEMICOL RECORD METHOD INITIALLY GLOBAL END ABSTRACT
follow(locals) = error WHILE UNTIL UNION TILDE SUSPEND STRINGLIT STATIC STAR SNE SLASH SEQ SEMICOL RETURN REPEAT REALLIT QMARK PLUS NOT NMNE NMEQ NEXT NEQUIV MINUS LPAREN LOCAL LCONCAT LBRACK LBRACE INTLIT INTER IF IDENT ICONINITIAL FAIL EVERY EQUIV END DOT DIFF CSETLIT CREATE CONCAT COLONCOLON CASE CARET BREAK BAR BANG BACKSLASH AT AND
follow(lnklist) = RECORD PROCEDURE PACKAGE LINK INVOCABLE IMPORT GLOBAL EOFX COMMA CLASS
follow(lnkfile) = RECORD PROCEDURE PACKAGE LINK INVOCABLE IMPORT GLOBAL EOFX COMMA CLASS
follow(literal) = UNION TO THEN SWAP STAR SNE SLT SLE SLASH SGT SGE SEQ SEMICOL RPAREN REVSWAP REVASSIGN RBRACK RBRACE QMARK PLUS PCOLON OF NMNE NMLT NMLE NMGT NMGE NMEQ NEQUIV MOD MINUS MCOLON LPAREN LCONCAT LBRACK LBRACE INTER EQUIV ELSE DOT DOLLAR DO DIFF CONCAT COMMA COLON CARET BY BAR BANG BACKSLASH AUGUNION AUGSTAR AUGSNE AUGSLT AUGSLE AUGSLASH AUGSGT AUGSGE AUGSEQ AUGQMARK AUGPLUS AUGNMNE AUGNMLT AUGNMLE AUGNMGT AUGNMGE AUGNMEQ AUGNEQUIV AUGMOD AUGMINUS AUGLCONCAT AUGINTER AUGEQUIV AUGDIFF AUGCONCAT AUGCARET AUGAT AUGAND AT ASSIGN AND
follow(link) = RECORD PROCEDURE PACKAGE LINK INVOCABLE IMPORT GLOBAL EOFX CLASS
follow(kwhile) = UNION TO THEN SWAP STAR SNE SLT SLE SLASH SGT SGE SEQ SEMICOL RPAREN REVSWAP REVASSIGN RBRACK RBRACE QMARK PLUS PCOLON OF NMNE NMLT NMLE NMGT NMGE NMEQ NEQUIV MOD MINUS MCOLON LPAREN LCONCAT LBRACK LBRACE INTER EQUIV ELSE DOT DOLLAR DO DIFF CONCAT COMMA COLON CARET BY BAR BANG BACKSLASH AUGUNION AUGSTAR AUGSNE AUGSLT AUGSLE AUGSLASH AUGSGT AUGSGE AUGSEQ AUGQMARK AUGPLUS AUGNMNE AUGNMLT AUGNMLE AUGNMGT AUGNMGE AUGNMEQ AUGNEQUIV AUGMOD AUGMINUS AUGLCONCAT AUGINTER AUGEQUIV AUGDIFF AUGCONCAT AUGCARET AUGAT AUGAND AT ASSIGN AND
follow(kif) = UNION TO THEN SWAP STAR SNE SLT SLE SLASH SGT SGE SEQ SEMICOL RPAREN REVSWAP REVASSIGN RBRACK RBRACE QMARK PLUS PCOLON OF NMNE NMLT NMLE NMGT NMGE NMEQ NEQUIV MOD MINUS MCOLON LPAREN LCONCAT LBRACK LBRACE INTER EQUIV ELSE DOT DOLLAR DO DIFF CONCAT COMMA COLON CARET BY BAR BANG BACKSLASH AUGUNION AUGSTAR AUGSNE AUGSLT AUGSLE AUGSLASH AUGSGT AUGSGE AUGSEQ AUGQMARK AUGPLUS AUGNMNE AUGNMLT AUGNMLE AUGNMGT AUGNMGE AUGNMEQ AUGNEQUIV AUGMOD AUGMINUS AUGLCONCAT AUGINTER AUGEQUIV AUGDIFF AUGCONCAT AUGCARET AUGAT AUGAND AT ASSIGN AND
follow(invocop) = RECORD PROCEDURE PACKAGE LINK INVOCABLE IMPORT GLOBAL EOFX COMMA CLASS
follow(invoclist) = RECORD PROCEDURE PACKAGE LINK INVOCABLE IMPORT GLOBAL EOFX COMMA CLASS
follow(invocable) = RECORD PROCEDURE PACKAGE LINK INVOCABLE IMPORT GLOBAL EOFX CLASS
follow(initiallysection) = END
follow(initial) = error WHILE UNTIL UNION TILDE SUSPEND STRINGLIT STAR SNE SLASH SEQ SEMICOL RETURN REPEAT REALLIT QMARK PLUS NOT NMNE NMEQ NEXT NEQUIV MINUS LPAREN LCONCAT LBRACK LBRACE INTLIT INTER IF IDENT FAIL EVERY EQUIV END DOT DIFF CSETLIT CREATE CONCAT COLONCOLON CASE CARET BREAK BAR BANG BACKSLASH AT AND
follow(import) = RECORD PROCEDURE PACKAGE LINK INVOCABLE IMPORT GLOBAL EOFX CLASS
follow(idlist) = SEMICOL RPAREN RECORD PROCEDURE PACKAGE METHOD LINK INVOCABLE INITIALLY IMPORT GLOBAL EOFX END COMMA CLASS ABSTRACT
follow(global) = SEMICOL RECORD PROCEDURE PACKAGE METHOD LINK INVOCABLE INITIALLY IMPORT GLOBAL EOFX END CLASS ABSTRACT
follow(fldlist) = RPAREN
follow(exprlist) = RPAREN RBRACK COMMA
follow(expr9) = UNION TO THEN SWAP STAR SNE SLT SLE SLASH SGT SGE SEQ SEMICOL RPAREN REVSWAP REVASSIGN RBRACK RBRACE QMARK PLUS PCOLON OF NMNE NMLT NMLE NMGT NMGE NMEQ NEQUIV MOD MINUS MCOLON LPAREN LCONCAT LBRACK LBRACE INTER EQUIV ELSE DOT DOLLAR DO DIFF CONCAT COMMA COLON CARET BY BAR BANG BACKSLASH AUGUNION AUGSTAR AUGSNE AUGSLT AUGSLE AUGSLASH AUGSGT AUGSGE AUGSEQ AUGQMARK AUGPLUS AUGNMNE AUGNMLT AUGNMLE AUGNMGT AUGNMGE AUGNMEQ AUGNEQUIV AUGMOD AUGMINUS AUGLCONCAT AUGINTER AUGEQUIV AUGDIFF AUGCONCAT AUGCARET AUGAT AUGAND AT ASSIGN AND
follow(expr8) = UNION TO THEN SWAP STAR SNE SLT SLE SLASH SGT SGE SEQ SEMICOL RPAREN REVSWAP REVASSIGN RBRACK RBRACE QMARK PLUS PCOLON OF NMNE NMLT NMLE NMGT NMGE NMEQ NEQUIV MOD MINUS MCOLON LPAREN LCONCAT LBRACK LBRACE INTER EQUIV ELSE DOT DOLLAR DO DIFF CONCAT COMMA COLON CARET BY BAR BANG BACKSLASH AUGUNION AUGSTAR AUGSNE AUGSLT AUGSLE AUGSLASH AUGSGT AUGSGE AUGSEQ AUGQMARK AUGPLUS AUGNMNE AUGNMLT AUGNMLE AUGNMGT AUGNMGE AUGNMEQ AUGNEQUIV AUGMOD AUGMINUS AUGLCONCAT AUGINTER AUGEQUIV AUGDIFF AUGCONCAT AUGCARET AUGAT AUGAND AT ASSIGN AND
follow(expr7) = UNION TO THEN SWAP STAR SNE SLT SLE SLASH SGT SGE SEQ SEMICOL RPAREN REVSWAP REVASSIGN RBRACK RBRACE QMARK PLUS PCOLON OF NMNE NMLT NMLE NMGT NMGE NMEQ NEQUIV MOD MINUS MCOLON LPAREN LCONCAT LBRACK LBRACE INTER EQUIV ELSE DOT DOLLAR DO DIFF CONCAT COMMA COLON CARET BY BAR BANG BACKSLASH AUGUNION AUGSTAR AUGSNE AUGSLT AUGSLE AUGSLASH AUGSGT AUGSGE AUGSEQ AUGQMARK AUGPLUS AUGNMNE AUGNMLT AUGNMLE AUGNMGT AUGNMGE AUGNMEQ AUGNEQUIV AUGMOD AUGMINUS AUGLCONCAT AUGINTER AUGEQUIV AUGDIFF AUGCONCAT AUGCARET AUGAT AUGAND AT ASSIGN AND
follow(expr6) = UNION TO THEN SWAP STAR SNE SLT SLE SLASH SGT SGE SEQ SEMICOL RPAREN REVSWAP REVASSIGN RBRACK RBRACE QMARK PLUS PCOLON OF NMNE NMLT NMLE NMGT NMGE NMEQ NEQUIV MOD MINUS MCOLON LPAREN LCONCAT LBRACK LBRACE INTER EQUIV ELSE DOT DOLLAR DO DIFF CONCAT COMMA COLON CARET BY BAR BANG BACKSLASH AUGUNION AUGSTAR AUGSNE AUGSLT AUGSLE AUGSLASH AUGSGT AUGSGE AUGSEQ AUGQMARK AUGPLUS AUGNMNE AUGNMLT AUGNMLE AUGNMGT AUGNMGE AUGNMEQ AUGNEQUIV AUGMOD AUGMINUS AUGLCONCAT AUGINTER AUGEQUIV AUGDIFF AUGCONCAT AUGCARET AUGAT AUGAND AT ASSIGN AND
follow(expr5) = UNION TO THEN SWAP STAR SNE SLT SLE SLASH SGT SGE SEQ SEMICOL RPAREN REVSWAP REVASSIGN RBRACK RBRACE QMARK PLUS PCOLON OF NMNE NMLT NMLE NMGT NMGE NMEQ NEQUIV MOD MINUS MCOLON LPAREN LCONCAT LBRACK LBRACE INTER EQUIV ELSE DOT DOLLAR DO DIFF CONCAT COMMA COLON CARET BY BAR BANG BACKSLASH AUGUNION AUGSTAR AUGSNE AUGSLT AUGSLE AUGSLASH AUGSGT AUGSGE AUGSEQ AUGQMARK AUGPLUS AUGNMNE AUGNMLT AUGNMLE AUGNMGT AUGNMGE AUGNMEQ AUGNEQUIV AUGMOD AUGMINUS AUGLCONCAT AUGINTER AUGEQUIV AUGDIFF AUGCONCAT AUGCARET AUGAT AUGAND AT ASSIGN AND
follow(expr4) = UNION TO THEN SWAP STAR SNE SLT SLE SLASH SGT SGE SEQ SEMICOL RPAREN REVSWAP REVASSIGN RBRACK RBRACE QMARK PLUS PCOLON OF NMNE NMLT NMLE NMGT NMGE NMEQ NEQUIV MOD MINUS MCOLON LPAREN LCONCAT LBRACK LBRACE INTER EQUIV ELSE DOT DOLLAR DO DIFF CONCAT COMMA COLON CARET BY BAR BANG BACKSLASH AUGUNION AUGSTAR AUGSNE AUGSLT AUGSLE AUGSLASH AUGSGT AUGSGE AUGSEQ AUGQMARK AUGPLUS AUGNMNE AUGNMLT AUGNMLE AUGNMGT AUGNMGE AUGNMEQ AUGNEQUIV AUGMOD AUGMINUS AUGLCONCAT AUGINTER AUGEQUIV AUGDIFF AUGCONCAT AUGCARET AUGAT AUGAND AT ASSIGN AND
follow(expr3) = UNION TO THEN SWAP STAR SNE SLT SLE SLASH SGT SGE SEQ SEMICOL RPAREN REVSWAP REVASSIGN RBRACK RBRACE QMARK PLUS PCOLON OF NMNE NMLT NMLE NMGT NMGE NMEQ NEQUIV MOD MINUS MCOLON LPAREN LCONCAT LBRACK LBRACE INTER EQUIV ELSE DOT DOLLAR DO DIFF CONCAT COMMA COLON CARET BY BAR BANG BACKSLASH AUGUNION AUGSTAR AUGSNE AUGSLT AUGSLE AUGSLASH AUGSGT AUGSGE AUGSEQ AUGQMARK AUGPLUS AUGNMNE AUGNMLT AUGNMLE AUGNMGT AUGNMGE AUGNMEQ AUGNEQUIV AUGMOD AUGMINUS AUGLCONCAT AUGINTER AUGEQUIV AUGDIFF AUGCONCAT AUGCARET AUGAT AUGAND AT ASSIGN AND
follow(expr2) = UNION TO THEN SWAP STAR SNE SLT SLE SLASH SGT SGE SEQ SEMICOL RPAREN REVSWAP REVASSIGN RBRACK RBRACE QMARK PLUS PCOLON OF NMNE NMLT NMLE NMGT NMGE NMEQ NEQUIV MOD MINUS MCOLON LPAREN LCONCAT LBRACK LBRACE INTER EQUIV ELSE DOT DOLLAR DO DIFF CONCAT COMMA COLON CARET BY BAR BANG BACKSLASH AUGUNION AUGSTAR AUGSNE AUGSLT AUGSLE AUGSLASH AUGSGT AUGSGE AUGSEQ AUGQMARK AUGPLUS AUGNMNE AUGNMLT AUGNMLE AUGNMGT AUGNMGE AUGNMEQ AUGNEQUIV AUGMOD AUGMINUS AUGLCONCAT AUGINTER AUGEQUIV AUGDIFF AUGCONCAT AUGCARET AUGAT AUGAND AT ASSIGN AND
follow(expr1a) = UNION TO THEN SWAP STAR SNE SLT SLE SLASH SGT SGE SEQ SEMICOL RPAREN REVSWAP REVASSIGN RBRACK RBRACE QMARK PLUS PCOLON OF NMNE NMLT NMLE NMGT NMGE NMEQ NEQUIV MOD MINUS MCOLON LPAREN LCONCAT LBRACK LBRACE INTER EQUIV ELSE DOT DOLLAR DO DIFF CONCAT COMMA COLON CARET BY BAR BANG BACKSLASH AUGUNION AUGSTAR AUGSNE AUGSLT AUGSLE AUGSLASH AUGSGT AUGSGE AUGSEQ AUGQMARK AUGPLUS AUGNMNE AUGNMLT AUGNMLE AUGNMGT AUGNMGE AUGNMEQ AUGNEQUIV AUGMOD AUGMINUS AUGLCONCAT AUGINTER AUGEQUIV AUGDIFF AUGCONCAT AUGCARET AUGAT AUGAND AT ASSIGN AND
follow(expr11) = UNION TO THEN SWAP STAR SNE SLT SLE SLASH SGT SGE SEQ SEMICOL RPAREN REVSWAP REVASSIGN RBRACK RBRACE QMARK PLUS PCOLON OF NMNE NMLT NMLE NMGT NMGE NMEQ NEQUIV MOD MINUS MCOLON LPAREN LCONCAT LBRACK LBRACE INTER EQUIV ELSE DOT DOLLAR DO DIFF CONCAT COMMA COLON CARET BY BAR BANG BACKSLASH AUGUNION AUGSTAR AUGSNE AUGSLT AUGSLE AUGSLASH AUGSGT AUGSGE AUGSEQ AUGQMARK AUGPLUS AUGNMNE AUGNMLT AUGNMLE AUGNMGT AUGNMGE AUGNMEQ AUGNEQUIV AUGMOD AUGMINUS AUGLCONCAT AUGINTER AUGEQUIV AUGDIFF AUGCONCAT AUGCARET AUGAT AUGAND AT ASSIGN AND
follow(expr10) = UNION TO THEN SWAP STAR SNE SLT SLE SLASH SGT SGE SEQ SEMICOL RPAREN REVSWAP REVASSIGN RBRACK RBRACE QMARK PLUS PCOLON OF NMNE NMLT NMLE NMGT NMGE NMEQ NEQUIV MOD MINUS MCOLON LPAREN LCONCAT LBRACK LBRACE INTER EQUIV ELSE DOT DOLLAR DO DIFF CONCAT COMMA COLON CARET BY BAR BANG BACKSLASH AUGUNION AUGSTAR AUGSNE AUGSLT AUGSLE AUGSLASH AUGSGT AUGSGE AUGSEQ AUGQMARK AUGPLUS AUGNMNE AUGNMLT AUGNMLE AUGNMGT AUGNMGE AUGNMEQ AUGNEQUIV AUGMOD AUGMINUS AUGLCONCAT AUGINTER AUGEQUIV AUGDIFF AUGCONCAT AUGCARET AUGAT AUGAND AT ASSIGN AND
follow(expr1) = UNION TO THEN SWAP STAR SNE SLT SLE SLASH SGT SGE SEQ SEMICOL RPAREN REVSWAP REVASSIGN RBRACK RBRACE QMARK PLUS PCOLON OF NMNE NMLT NMLE NMGT NMGE NMEQ NEQUIV MOD MINUS MCOLON LPAREN LCONCAT LBRACK LBRACE INTER EQUIV ELSE DOT DOLLAR DO DIFF CONCAT COMMA COLON CARET BY BAR BANG BACKSLASH AUGUNION AUGSTAR AUGSNE AUGSLT AUGSLE AUGSLASH AUGSGT AUGSGE AUGSEQ AUGQMARK AUGPLUS AUGNMNE AUGNMLT AUGNMLE AUGNMGT AUGNMGE AUGNMEQ AUGNEQUIV AUGMOD AUGMINUS AUGLCONCAT AUGINTER AUGEQUIV AUGDIFF AUGCONCAT AUGCARET AUGAT AUGAND AT ASSIGN AND
follow(expr) = UNION TO THEN SWAP STAR SNE SLT SLE SLASH SGT SGE SEQ SEMICOL RPAREN REVSWAP REVASSIGN RBRACK RBRACE QMARK PLUS PCOLON OF NMNE NMLT NMLE NMGT NMGE NMEQ NEQUIV MOD MINUS MCOLON LPAREN LCONCAT LBRACK LBRACE INTER EQUIV ELSE DOT DOLLAR DO DIFF CONCAT COMMA COLON CARET BY BAR BANG BACKSLASH AUGUNION AUGSTAR AUGSNE AUGSLT AUGSLE AUGSLASH AUGSGT AUGSGE AUGSEQ AUGQMARK AUGPLUS AUGNMNE AUGNMLT AUGNMLE AUGNMGT AUGNMGE AUGNMEQ AUGNEQUIV AUGMOD AUGMINUS AUGLCONCAT AUGINTER AUGEQUIV AUGDIFF AUGCONCAT AUGCARET AUGAT AUGAND AT ASSIGN AND
follow(every) = UNION TO THEN SWAP STAR SNE SLT SLE SLASH SGT SGE SEQ SEMICOL RPAREN REVSWAP REVASSIGN RBRACK RBRACE QMARK PLUS PCOLON OF NMNE NMLT NMLE NMGT NMGE NMEQ NEQUIV MOD MINUS MCOLON LPAREN LCONCAT LBRACK LBRACE INTER EQUIV ELSE DOT DOLLAR DO DIFF CONCAT COMMA COLON CARET BY BAR BANG BACKSLASH AUGUNION AUGSTAR AUGSNE AUGSLT AUGSLE AUGSLASH AUGSGT AUGSGE AUGSEQ AUGQMARK AUGPLUS AUGNMNE AUGNMLT AUGNMLE AUGNMGT AUGNMGE AUGNMEQ AUGNEQUIV AUGMOD AUGMINUS AUGLCONCAT AUGINTER AUGEQUIV AUGDIFF AUGCONCAT AUGCARET AUGAT AUGAND AT ASSIGN AND
follow(decls) = RECORD PROCEDURE PACKAGE LINK INVOCABLE IMPORT GLOBAL EOFX CLASS
follow(decl) = RECORD PROCEDURE PACKAGE LINK INVOCABLE IMPORT GLOBAL EOFX CLASS
follow(compound) = RBRACE
follow(classhead) = SEMICOL RECORD METHOD INITIALLY GLOBAL END ABSTRACT
follow(cl) = RECORD PROCEDURE PACKAGE LINK INVOCABLE IMPORT GLOBAL EOFX CLASS
follow(cclause) = SEMICOL RBRACE
follow(caselist) = SEMICOL RBRACE
follow(case) = UNION TO THEN SWAP STAR SNE SLT SLE SLASH SGT SGE SEQ SEMICOL RPAREN REVSWAP REVASSIGN RBRACK RBRACE QMARK PLUS PCOLON OF NMNE NMLT NMLE NMGT NMGE NMEQ NEQUIV MOD MINUS MCOLON LPAREN LCONCAT LBRACK LBRACE INTER EQUIV ELSE DOT DOLLAR DO DIFF CONCAT COMMA COLON CARET BY BAR BANG BACKSLASH AUGUNION AUGSTAR AUGSNE AUGSLT AUGSLE AUGSLASH AUGSGT AUGSGE AUGSEQ AUGQMARK AUGPLUS AUGNMNE AUGNMLT AUGNMLE AUGNMGT AUGNMGE AUGNMEQ AUGNEQUIV AUGMOD AUGMINUS AUGLCONCAT AUGINTER AUGEQUIV AUGDIFF AUGCONCAT AUGCARET AUGAT AUGAND AT ASSIGN AND
follow(arglist) = RPAREN
follow(arg) = RPAREN LBRACK COMMA
Built an LR(0) automaton with 453 states.
The grammar is not SLR(1) -- 67 states have a conflict.
The construction mode is pager.
Built an LR(1) automaton with 453 states.
Warning: 48 states have shift/reduce conflicts.
Warning: 220 shift/reduce conflicts were arbitrarily resolved.
176 out of 453 states have a default reduction.
170 out of 453 states are represented.
0 out of 184 symbols keep track of their start position.
0 out of 184 symbols keep track of their end position.
147 out of 238 productions exploit shiftreduce optimization.
10 out of 453 states can peek at an error.
1211 functions before inlining, 148 functions after inlining.
