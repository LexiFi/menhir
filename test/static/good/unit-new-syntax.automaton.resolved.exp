State 0:
## Known stack suffix:
##
## LR(1) items:
bar' -> . bar [ # ]
## Transitions:
-- On A shift to state 1
-- On foo shift to state 2
-- On bar shift to state 4
## Reductions:

State 1:
## Known stack suffix:
## A
## LR(1) items:
foo -> A . [ EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production foo -> A

State 2:
## Known stack suffix:
## foo
## LR(1) items:
bar -> foo . EOF [ # ]
## Transitions:
-- On EOF shift to state 3
## Reductions:

State 3:
## Known stack suffix:
## foo EOF
## LR(1) items:
bar -> foo EOF . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production bar -> foo EOF

State 4:
## Known stack suffix:
## bar
## LR(1) items:
bar' -> bar . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept bar

