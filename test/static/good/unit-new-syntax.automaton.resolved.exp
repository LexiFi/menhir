State 0:
## Known stack suffix:
##
## LR(1) items:
main' -> . main [ # ]
## Transitions:
-- On A shift to state 1
-- On main shift to state 2
-- On a shift to state 3
## Reductions:

State 1:
## Known stack suffix:
## A
## LR(1) items:
a -> A . [ EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production a -> A

State 2:
## Known stack suffix:
## main
## LR(1) items:
main' -> main . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept main

State 3:
## Known stack suffix:
## a
## LR(1) items:
main -> a . EOF [ # ]
## Transitions:
-- On EOF shift to state 4
## Reductions:

State 4:
## Known stack suffix:
## a EOF
## LR(1) items:
main -> a EOF . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production main -> a EOF

