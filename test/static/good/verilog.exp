File "verilog.mly", line 2347, characters 0-13:
Warning: symbol unused_tokens is unreachable from any of the start symbol(s).
Grammar has 223 nonterminal symbols, among which 1 start symbols.
Grammar has 308 terminal symbols.
Grammar has 3490 productions.
nullable(zero_or_one) = false
nullable(vrdList) = false
nullable(varReg) = false
nullable(varRefMem) = false
nullable(varRefDotBit) = false
nullable(varRefBase) = false
nullable(varNet) = false
nullable(varLParam) = false
nullable(varGenVar) = false
nullable(varGParam) = false
nullable(varDeclListE) = true
nullable(varDeclList) = false
nullable(varDecl) = false
nullable(v2kVarDeclE) = true
nullable(unary_module_path_operator) = false
nullable(trowList) = true
nullable(trow) = false
nullable(tregoutList) = false
nullable(tregout) = false
nullable(tinList) = false
nullable(tin) = false
nullable(timing_check_event_control) = false
nullable(timing_check_condition) = false
nullable(taskVarList) = true
nullable(taskVar) = false
nullable(taskRef) = false
nullable(taskDecl) = false
nullable(taskArgs) = true
nullable(tableDecl) = false
nullable(system_timing_check) = false
nullable(strengthList) = true
nullable(strAsText) = false
nullable(strAsInt) = false
nullable(stmtListE) = true
nullable(stmtList) = false
nullable(stmtBlock) = false
nullable(stmt) = false
nullable(state_dependent_path_declaration) = false
nullable(stateCaseForIf) = false
nullable(start) = false
nullable(specify_terminal_descriptor) = false
nullable(specify_output_terminal_descriptor_3) = true
nullable(specify_output_terminal_descriptor) = false
nullable(specify_item) = false
nullable(specify_block) = true
nullable(simple_path_declaration) = false
nullable(signingE) = true
nullable(signedE) = true
nullable(sigId) = false
nullable(sigAttrListE) = true
nullable(sigAndAttr) = false
nullable(showcancelled_declaration) = false
nullable(senitemVar) = false
nullable(senitemEdge) = false
nullable(senitem) = false
nullable(senList) = false
nullable(scalar_timing_check_condition) = false
nullable(scalar_constant) = false
nullable(regsigList) = false
nullable(regsig) = false
nullable(regrangeE) = true
nullable(readmem) = false
nullable(pulsestyle_declaration) = false
nullable(pulse_control_specparam) = false
nullable(property_spec_disable) = true
nullable(property_spec) = false
nullable(primItemList) = false
nullable(primItem) = false
nullable(primDecl) = false
nullable(preproc) = false
nullable(polarity_operator) = false
nullable(path_delay_value) = false
nullable(path_declaration) = false
nullable(parenE) = true
nullable(paramList) = false
nullable(param) = false
nullable(number) = false
nullable(netSigList) = false
nullable(netSig) = false
nullable(monText) = true
nullable(monListE) = true
nullable(monList) = true
nullable(module_path_primary) = false
nullable(module_path_mintypmax_expression) = false
nullable(module_path_expression) = false
nullable(module_path_concatenation_4) = true
nullable(moduleDecl) = false
nullable(modprimDecl) = false
nullable(modPortsE) = true
nullable(modParSecond) = false
nullable(modParList) = false
nullable(modParE) = true
nullable(modParDecl) = false
nullable(modParArgs) = false
nullable(modOrGenItem) = false
nullable(modItemListE) = true
nullable(modItem) = false
nullable(mintypmax_expression) = false
nullable(minTypMax) = false
nullable(list_of_specparam_assignments_3) = true
nullable(list_of_path_outputs_3) = true
nullable(list_of_path_inputs_3) = true
nullable(lifetimeE) = true
nullable(labeledStmt) = false
nullable(instnameParen) = false
nullable(instnameList) = false
nullable(instRangeE) = true
nullable(instDecl) = false
nullable(identifier) = false
nullable(idDotted) = false
nullable(idArrayed) = false
nullable(generateRegion) = false
nullable(genTopBlock) = false
nullable(genItemList) = false
nullable(genItemBlock) = false
nullable(genItemBegin) = false
nullable(genItem) = false
nullable(genCaseListE) = true
nullable(genCaseList) = false
nullable(gateXorPinList) = false
nullable(gateXorList) = false
nullable(gateXor) = false
nullable(gateXnorList) = false
nullable(gateXnor) = false
nullable(gateUdpPinList) = false
nullable(gateTranList) = false
nullable(gateTranIfList) = false
nullable(gateTranIf) = false
nullable(gateTran) = false
nullable(gatePullupList) = false
nullable(gatePullup) = false
nullable(gateOrPinList) = false
nullable(gateOrList) = false
nullable(gateOr) = false
nullable(gateNotList) = false
nullable(gateNot) = false
nullable(gateNorList) = false
nullable(gateNor) = false
nullable(gateNandList) = false
nullable(gateNand) = false
nullable(gateMosList) = false
nullable(gateMos) = false
nullable(gateIdE) = true
nullable(gateDecl) = false
nullable(gateBufList) = false
nullable(gateBufIfPinList) = false
nullable(gateBufIfList) = false
nullable(gateBufIf) = false
nullable(gateBuf) = false
nullable(gateAndPinList) = false
nullable(gateAndList) = false
nullable(gateAnd) = false
nullable(funcVarList) = true
nullable(funcVar) = false
nullable(funcTypeE) = true
nullable(funcRef) = false
nullable(funcDecl) = false
nullable(funcArgs) = true
nullable(floatnum) = false
nullable(expression) = false
nullable(exprStrText) = false
nullable(exprNoStr) = false
nullable(exprList) = true
nullable(expr) = false
nullable(eventControl) = false
nullable(endLabelE) = true
nullable(edge_sensitive_path_declaration) = false
nullable(edge_identifier) = false
nullable(edge_descriptor) = false
nullable(edge_control_specifier_5) = true
nullable(edge2) = false
nullable(edge1) = false
nullable(dlyTerm) = false
nullable(delayrange) = true
nullable(delayed_reference) = false
nullable(delayed_data) = false
nullable(delayStrength) = true
nullable(delayE) = true
nullable(delay) = false
nullable(defpOne) = false
nullable(defpList) = false
nullable(csr_edge_sensitive_path_description) = false
nullable(cover_property_statement) = false
nullable(constant_range_expression) = false
nullable(constant_mintypmax_expression) = false
nullable(constant_expression) = false
nullable(constExpr) = false
nullable(concurrent_assertion_statement) = false
nullable(concurrent_assertion_item) = false
nullable(concIdList) = false
nullable(commaVRDListE) = true
nullable(commaEListE) = true
nullable(colon_identifier) = false
nullable(clocking_declaration) = false
nullable(cellpinList) = true
nullable(cellpinItem) = false
nullable(cellpinItList) = true
nullable(cateList) = false
nullable(caseListE) = true
nullable(caseList) = false
nullable(caseCondList) = false
nullable(caseAttrE) = true
nullable(case) = false
nullable(cStrList) = false
nullable(binary_module_path_operator) = false
nullable(attrDecl) = false
nullable(RangeListE) = true
nullable(RangeList) = false
nullable(PortV2kSig) = false
nullable(PortV2kSecond) = false
nullable(PortV2kList) = false
nullable(PortV2kInit) = false
nullable(PortV2kDecl) = false
nullable(PortV2kArgs) = false
nullable(PortRangeE) = true
nullable(PortList) = false
nullable(PortDirection) = false
nullable(PortDecl) = false
nullable(Port) = false
nullable(AssignOne) = false
nullable(AssignList) = false
nullable(AssertStmt) = false
nullable(Anyrange) = false
first(zero_or_one) = TOKEN_ZERO TOKEN_ONE
first(vrdList) = ID
first(varReg) = REG REAL INTEGER EVENT
first(varRefMem) = ID
first(varRefDotBit) = ID
first(varRefBase) = ID
first(varNet) = WIRE TRI1 TRI0 SUPPLY1 SUPPLY0
first(varLParam) = LOCALPARAM
first(varGenVar) = GENVAR
first(varGParam) = PARAMETER
first(varDeclListE) = WIRE TRI1 TRI0 SUPPLY1 SUPPLY0 REG REAL PARAMETER LOCALPARAM INTEGER GENVAR EVENT
first(varDeclList) = WIRE TRI1 TRI0 SUPPLY1 SUPPLY0 REG REAL PARAMETER LOCALPARAM INTEGER GENVAR EVENT
first(varDecl) = WIRE TRI1 TRI0 SUPPLY1 SUPPLY0 REG REAL PARAMETER LOCALPARAM INTEGER GENVAR EVENT
first(v2kVarDeclE) = WIRE TRI1 TRI0 SUPPLY1 SUPPLY0 REG REAL INTEGER EVENT
first(unary_module_path_operator) = VBAR TILDE_VBAR TILDE P_XNOR P_NXOR P_NAND PLING CARET AMPERSAND
first(trowList) = TIMES QUERY LPAREN INTNUM ID
first(trow) = TIMES QUERY LPAREN INTNUM ID
first(tregoutList) = QUERY MINUS INTNUM ID
first(tregout) = QUERY MINUS INTNUM ID
first(tinList) = TIMES QUERY LPAREN INTNUM ID
first(tin) = TIMES QUERY LPAREN INTNUM ID
first(timing_check_event_control) = POSEDGE NEGEDGE EDGE
first(timing_check_condition) = VBAR TILDE P_XNOR P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_NOR P_NAND P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PREPROC PRAGMATIC PLUS PLING OCTNUM MINUS LPAREN LCURLY INTNUM ID HEXNUM FLOATNUM D_UNSIGNED D_TIME D_TEST_PLUSARGS D_STIME D_SSCANF D_SIGNED D_RANDOM D_ONEHOT0 D_ONEHOT D_ISUNKNOWN D_FSCANF D_FGETS D_FGETC D_FEOF D_COUNTONES D_COUNTDRIVERS D_CLOG2 D_C D_BITS DECNUM CARET BINNUM ASCNUM AMPERSAND
first(taskVarList) = WIRE TRI1 TRI0 SUPPLY1 SUPPLY0 REG REAL PARAMETER OUTPUT LOCALPARAM INTEGER INPUT INOUT GENVAR EVENT
first(taskVar) = WIRE TRI1 TRI0 SUPPLY1 SUPPLY0 REG REAL PARAMETER OUTPUT LOCALPARAM INTEGER INPUT INOUT GENVAR EVENT
first(taskRef) = ID
first(taskDecl) = TASK
first(taskArgs) = LPAREN
first(tableDecl) = TABLE
first(system_timing_check) = NOCHANGE FULLSKEW D_WIDTH D_TIMESKEW D_SKEW D_SETUPHOLD D_SETUP D_REMOVAL D_RECREM D_RECOVERY D_PERIOD D_HOLD
first(strengthList) = COMMA
first(strAsText) = ASCNUM
first(strAsInt) = ASCNUM
first(stmtListE) = WHILE SEMICOLON REPEAT P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_MINUSGT P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PREPROC PRAGMATIC LCURLY IF ID HASH FOREVER FOR D_WRITE D_WARNING D_STOP D_READMEMH D_READMEMB D_MONITOR D_INFO D_FWRITEH D_FWRITE D_FINISH D_FFLUSH D_FDISPLAY D_FCLOSE D_FATAL D_ERROR D_DISPLAY D_C DO DISABLE DEASSIGN CASEZ CASEX CASE BEGIN AT ASSIGN ASSERT
first(stmtList) = WHILE SEMICOLON REPEAT P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_MINUSGT P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PREPROC PRAGMATIC LCURLY IF ID HASH FOREVER FOR D_WRITE D_WARNING D_STOP D_READMEMH D_READMEMB D_MONITOR D_INFO D_FWRITEH D_FWRITE D_FINISH D_FFLUSH D_FDISPLAY D_FCLOSE D_FATAL D_ERROR D_DISPLAY D_C DO DISABLE DEASSIGN CASEZ CASEX CASE BEGIN AT ASSIGN ASSERT
first(stmtBlock) = WHILE SEMICOLON REPEAT P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_MINUSGT P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PREPROC PRAGMATIC LCURLY IF ID HASH FOREVER FOR D_WRITE D_WARNING D_STOP D_READMEMH D_READMEMB D_MONITOR D_INFO D_FWRITEH D_FWRITE D_FINISH D_FFLUSH D_FDISPLAY D_FCLOSE D_FATAL D_ERROR D_DISPLAY D_C DO DISABLE DEASSIGN CASEZ CASEX CASE BEGIN AT ASSIGN ASSERT
first(stmt) = WHILE SEMICOLON REPEAT P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_MINUSGT P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PREPROC PRAGMATIC LCURLY IF ID HASH FOREVER FOR D_WRITE D_WARNING D_STOP D_READMEMH D_READMEMB D_MONITOR D_INFO D_FWRITEH D_FWRITE D_FINISH D_FFLUSH D_FDISPLAY D_FCLOSE D_FATAL D_ERROR D_DISPLAY D_C DO DISABLE DEASSIGN CASEZ CASEX CASE AT ASSIGN ASSERT
first(state_dependent_path_declaration) = IF_NONE IF
first(stateCaseForIf) = WHILE IF FOR DO CASEZ CASEX CASE
first(start) = P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PRIMITIVE PREPROC PRAGMATIC MODULE ENDOFFILE
first(specify_terminal_descriptor) = ID
first(specify_output_terminal_descriptor_3) = LBRACK
first(specify_output_terminal_descriptor) = ID
first(specify_item) = SPECPARAM SHOWCANCELLED PULSESTYLE_ONEVENT PULSESTYLE_ONDETECT NOSHOWCANCELLED NOCHANGE LPAREN IF_NONE IF FULLSKEW D_WIDTH D_TIMESKEW D_SKEW D_SETUPHOLD D_SETUP D_REMOVAL D_RECREM D_RECOVERY D_PERIOD D_HOLD
first(specify_block) = SPECPARAM SHOWCANCELLED PULSESTYLE_ONEVENT PULSESTYLE_ONDETECT NOSHOWCANCELLED NOCHANGE LPAREN IF_NONE IF FULLSKEW D_WIDTH D_TIMESKEW D_SKEW D_SETUPHOLD D_SETUP D_REMOVAL D_RECREM D_RECOVERY D_PERIOD D_HOLD
first(simple_path_declaration) = LPAREN
first(signingE) = UNSIGNED SIGNED
first(signedE) = SIGNED
first(sigId) = ID
first(sigAttrListE) = 
first(sigAndAttr) = ID
first(showcancelled_declaration) = SHOWCANCELLED NOSHOWCANCELLED
first(senitemVar) = ID
first(senitemEdge) = POSEDGE NEGEDGE
first(senitem) = POSEDGE NEGEDGE LPAREN ID
first(senList) = POSEDGE NEGEDGE LPAREN ID
first(scalar_timing_check_condition) = VBAR TILDE P_XNOR P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_NOR P_NAND P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PREPROC PRAGMATIC PLUS PLING OCTNUM MINUS LPAREN LCURLY INTNUM ID HEXNUM FLOATNUM D_UNSIGNED D_TIME D_TEST_PLUSARGS D_STIME D_SSCANF D_SIGNED D_RANDOM D_ONEHOT0 D_ONEHOT D_ISUNKNOWN D_FSCANF D_FGETS D_FGETC D_FEOF D_COUNTONES D_COUNTDRIVERS D_CLOG2 D_C D_BITS DECNUM CARET BINNUM ASCNUM AMPERSAND
first(scalar_constant) = OCTNUM INTNUM HEXNUM DECNUM BINNUM
first(regsigList) = ID
first(regsig) = ID
first(regrangeE) = LBRACK
first(readmem) = D_READMEMH D_READMEMB
first(pulsestyle_declaration) = PULSESTYLE_ONEVENT PULSESTYLE_ONDETECT
first(pulse_control_specparam) = PATHPULSE
first(property_spec_disable) = DISABLE
first(property_spec) = VBAR TILDE P_XNOR P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_NOR P_NAND P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PREPROC PRAGMATIC PLUS PLING OCTNUM MINUS LPAREN LCURLY INTNUM ID HEXNUM FLOATNUM D_UNSIGNED D_TIME D_TEST_PLUSARGS D_STIME D_SSCANF D_SIGNED D_RANDOM D_ONEHOT0 D_ONEHOT D_ISUNKNOWN D_FSCANF D_FGETS D_FGETC D_FEOF D_COUNTONES D_COUNTDRIVERS D_CLOG2 D_C D_BITS DISABLE DECNUM CARET BINNUM AT ASCNUM AMPERSAND
first(primItemList) = WIRE TRI1 TRI0 TABLE SUPPLY1 SUPPLY0 REG REAL PARAMETER OUTPUT LOCALPARAM INTEGER INPUT INOUT GENVAR EVENT
first(primItem) = WIRE TRI1 TRI0 TABLE SUPPLY1 SUPPLY0 REG REAL PARAMETER OUTPUT LOCALPARAM INTEGER INPUT INOUT GENVAR EVENT
first(primDecl) = PRIMITIVE
first(preproc) = P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PREPROC PRAGMATIC
first(polarity_operator) = PLUS MINUS
first(path_delay_value) = VBAR TILDE P_XNOR P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_NOR P_NAND P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PREPROC PRAGMATIC PLUS PLING OCTNUM MINUS LPAREN LCURLY INTNUM ID HEXNUM FLOATNUM D_UNSIGNED D_TIME D_TEST_PLUSARGS D_STIME D_SSCANF D_SIGNED D_RANDOM D_ONEHOT0 D_ONEHOT D_ISUNKNOWN D_FSCANF D_FGETS D_FGETC D_FEOF D_COUNTONES D_COUNTDRIVERS D_CLOG2 D_C D_BITS DECNUM CARET BINNUM ASCNUM AMPERSAND
first(path_declaration) = LPAREN IF_NONE IF
first(parenE) = LPAREN
first(paramList) = ID
first(param) = ID
first(number) = OCTNUM INTNUM HEXNUM DECNUM BINNUM
first(netSigList) = ID
first(netSig) = ID
first(monText) = VBAR TILDE P_XNOR P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_NOR P_NAND P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PREPROC PRAGMATIC PLUS PLING OCTNUM MINUS LPAREN LCURLY INTNUM ID HEXNUM FLOATNUM D_UNSIGNED D_TIME D_TEST_PLUSARGS D_STIME D_SSCANF D_SIGNED D_RANDOM D_ONEHOT0 D_ONEHOT D_ISUNKNOWN D_FSCANF D_FGETS D_FGETC D_FEOF D_COUNTONES D_COUNTDRIVERS D_CLOG2 D_C D_BITS DECNUM CARET BINNUM ASCNUM AMPERSAND
first(monListE) = COMMA
first(monList) = VBAR TILDE P_XNOR P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_NOR P_NAND P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PREPROC PRAGMATIC PLUS PLING OCTNUM MINUS LPAREN LCURLY INTNUM ID HEXNUM FLOATNUM D_UNSIGNED D_TIME D_TEST_PLUSARGS D_STIME D_SSCANF D_SIGNED D_RANDOM D_ONEHOT0 D_ONEHOT D_ISUNKNOWN D_FSCANF D_FGETS D_FGETC D_FEOF D_COUNTONES D_COUNTDRIVERS D_CLOG2 D_C D_BITS DECNUM COMMA CARET BINNUM ASCNUM AMPERSAND
first(module_path_primary) = OCTNUM LPAREN LCURLY INTNUM ID HEXNUM DECNUM BINNUM
first(module_path_mintypmax_expression) = VBAR TILDE_VBAR TILDE P_XNOR P_NXOR P_NAND PLING OCTNUM LPAREN LCURLY INTNUM ID HEXNUM DECNUM CARET BINNUM AMPERSAND
first(module_path_expression) = VBAR TILDE_VBAR TILDE P_XNOR P_NXOR P_NAND PLING OCTNUM LPAREN LCURLY INTNUM ID HEXNUM DECNUM CARET BINNUM AMPERSAND
first(module_path_concatenation_4) = COMMA
first(moduleDecl) = MODULE
first(modprimDecl) = P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PRIMITIVE PREPROC PRAGMATIC MODULE
first(modPortsE) = LPAREN
first(modParSecond) = PARAMETER ID
first(modParList) = PARAMETER ID
first(modParE) = HASH
first(modParDecl) = PARAMETER
first(modParArgs) = PARAMETER
first(modOrGenItem) = XOR XNOR WIRE TRI1 TRI0 TRANIF TRAN TASK TABLE SUPPLY1 SUPPLY0 REG REAL PULLUP PMOS PARAMETER OUTPUT OR NOTIF NOT NOR NMOS NAND LOCALPARAM INTEGER INPUT INOUT INITIAL ID GENVAR FUNCTION FINAL EVENT D_ATTRIBUTE DEFPARAM DEFAULT COVER BUFIF BUF ASSIGN AND ALWAYS
first(modItemListE) = XOR XNOR WIRE TRI1 TRI0 TRANIF TRAN TASK TABLE SUPPLY1 SUPPLY0 SPECIFY REG REAL P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PULLUP PREPROC PRAGMATIC PMOS PARAMETER OUTPUT OR NOTIF NOT NOR NMOS NAND LOCALPARAM INTEGER INPUT INOUT INITIAL ID GENVAR GENERATE FUNCTION FINAL EVENT D_ATTRIBUTE DEFPARAM DEFAULT COVER BUFIF BUF ASSIGN AND ALWAYS
first(modItem) = XOR XNOR WIRE TRI1 TRI0 TRANIF TRAN TASK TABLE SUPPLY1 SUPPLY0 SPECIFY REG REAL PULLUP PMOS PARAMETER OUTPUT OR NOTIF NOT NOR NMOS NAND LOCALPARAM INTEGER INPUT INOUT INITIAL ID GENVAR GENERATE FUNCTION FINAL EVENT D_ATTRIBUTE DEFPARAM DEFAULT COVER BUFIF BUF ASSIGN AND ALWAYS
first(mintypmax_expression) = VBAR TILDE P_XNOR P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_NOR P_NAND P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PREPROC PRAGMATIC PLUS PLING OCTNUM MINUS LPAREN LCURLY INTNUM ID HEXNUM FLOATNUM D_UNSIGNED D_TIME D_TEST_PLUSARGS D_STIME D_SSCANF D_SIGNED D_RANDOM D_ONEHOT0 D_ONEHOT D_ISUNKNOWN D_FSCANF D_FGETS D_FGETC D_FEOF D_COUNTONES D_COUNTDRIVERS D_CLOG2 D_C D_BITS DECNUM CARET BINNUM ASCNUM AMPERSAND
first(minTypMax) = MINUS INTNUM ID FLOATNUM
first(list_of_specparam_assignments_3) = COMMA
first(list_of_path_outputs_3) = COMMA
first(list_of_path_inputs_3) = COMMA
first(lifetimeE) = STATIC AUTOMATIC
first(labeledStmt) = ASSERT
first(instnameParen) = ID
first(instnameList) = ID
first(instRangeE) = LBRACK
first(instDecl) = ID
first(identifier) = ID
first(idDotted) = ID
first(idArrayed) = ID
first(generateRegion) = GENERATE
first(genTopBlock) = XOR XNOR WIRE TRI1 TRI0 TRANIF TRAN TASK TABLE SUPPLY1 SUPPLY0 REG REAL PULLUP PMOS PARAMETER OUTPUT OR NOTIF NOT NOR NMOS NAND LOCALPARAM INTEGER INPUT INOUT INITIAL IF ID GENVAR FUNCTION FOR FINAL EVENT D_ATTRIBUTE DEFPARAM DEFAULT COVER CASE BUFIF BUF BEGIN ASSIGN AND ALWAYS
first(genItemList) = XOR XNOR WIRE TRI1 TRI0 TRANIF TRAN TASK TABLE SUPPLY1 SUPPLY0 REG REAL PULLUP PMOS PARAMETER OUTPUT OR NOTIF NOT NOR NMOS NAND LOCALPARAM INTEGER INPUT INOUT INITIAL IF ID GENVAR FUNCTION FOR FINAL EVENT D_ATTRIBUTE DEFPARAM DEFAULT COVER CASE BUFIF BUF ASSIGN AND ALWAYS
first(genItemBlock) = XOR XNOR WIRE TRI1 TRI0 TRANIF TRAN TASK TABLE SUPPLY1 SUPPLY0 REG REAL PULLUP PMOS PARAMETER OUTPUT OR NOTIF NOT NOR NMOS NAND LOCALPARAM INTEGER INPUT INOUT INITIAL IF ID GENVAR FUNCTION FOR FINAL EVENT D_ATTRIBUTE DEFPARAM DEFAULT COVER CASE BUFIF BUF BEGIN ASSIGN AND ALWAYS
first(genItemBegin) = BEGIN
first(genItem) = XOR XNOR WIRE TRI1 TRI0 TRANIF TRAN TASK TABLE SUPPLY1 SUPPLY0 REG REAL PULLUP PMOS PARAMETER OUTPUT OR NOTIF NOT NOR NMOS NAND LOCALPARAM INTEGER INPUT INOUT INITIAL IF ID GENVAR FUNCTION FOR FINAL EVENT D_ATTRIBUTE DEFPARAM DEFAULT COVER CASE BUFIF BUF ASSIGN AND ALWAYS
first(genCaseListE) = VBAR TILDE P_XNOR P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_NOR P_NAND P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PREPROC PRAGMATIC PLUS PLING OCTNUM MINUS LPAREN LCURLY INTNUM ID HEXNUM FLOATNUM D_UNSIGNED D_TIME D_TEST_PLUSARGS D_STIME D_SSCANF D_SIGNED D_RANDOM D_ONEHOT0 D_ONEHOT D_ISUNKNOWN D_FSCANF D_FGETS D_FGETC D_FEOF D_COUNTONES D_COUNTDRIVERS D_CLOG2 D_C D_BITS DEFAULT DECNUM CARET BINNUM ASCNUM AMPERSAND
first(genCaseList) = VBAR TILDE P_XNOR P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_NOR P_NAND P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PREPROC PRAGMATIC PLUS PLING OCTNUM MINUS LPAREN LCURLY INTNUM ID HEXNUM FLOATNUM D_UNSIGNED D_TIME D_TEST_PLUSARGS D_STIME D_SSCANF D_SIGNED D_RANDOM D_ONEHOT0 D_ONEHOT D_ISUNKNOWN D_FSCANF D_FGETS D_FGETC D_FEOF D_COUNTONES D_COUNTDRIVERS D_CLOG2 D_C D_BITS DEFAULT DECNUM CARET BINNUM ASCNUM AMPERSAND
first(gateXorPinList) = VBAR TILDE P_XNOR P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_NOR P_NAND P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PREPROC PRAGMATIC PLUS PLING OCTNUM MINUS LPAREN LCURLY INTNUM ID HEXNUM FLOATNUM D_UNSIGNED D_TIME D_TEST_PLUSARGS D_STIME D_SSCANF D_SIGNED D_RANDOM D_ONEHOT0 D_ONEHOT D_ISUNKNOWN D_FSCANF D_FGETS D_FGETC D_FEOF D_COUNTONES D_COUNTDRIVERS D_CLOG2 D_C D_BITS DECNUM CARET BINNUM ASCNUM AMPERSAND
first(gateXorList) = LPAREN LBRACK ID
first(gateXor) = LPAREN LBRACK ID
first(gateXnorList) = LPAREN LBRACK ID
first(gateXnor) = LPAREN LBRACK ID
first(gateUdpPinList) = VBAR TILDE P_XNOR P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_NOR P_NAND P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PREPROC PRAGMATIC PLUS PLING OCTNUM MINUS LPAREN LCURLY INTNUM ID HEXNUM FLOATNUM D_UNSIGNED D_TIME D_TEST_PLUSARGS D_STIME D_SSCANF D_SIGNED D_RANDOM D_ONEHOT0 D_ONEHOT D_ISUNKNOWN D_FSCANF D_FGETS D_FGETC D_FEOF D_COUNTONES D_COUNTDRIVERS D_CLOG2 D_C D_BITS DECNUM CARET BINNUM ASCNUM AMPERSAND
first(gateTranList) = LPAREN LBRACK ID
first(gateTranIfList) = LPAREN LBRACK ID
first(gateTranIf) = LPAREN LBRACK ID
first(gateTran) = LPAREN LBRACK ID
first(gatePullupList) = LPAREN LBRACK ID
first(gatePullup) = LPAREN LBRACK ID
first(gateOrPinList) = VBAR TILDE P_XNOR P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_NOR P_NAND P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PREPROC PRAGMATIC PLUS PLING OCTNUM MINUS LPAREN LCURLY INTNUM ID HEXNUM FLOATNUM D_UNSIGNED D_TIME D_TEST_PLUSARGS D_STIME D_SSCANF D_SIGNED D_RANDOM D_ONEHOT0 D_ONEHOT D_ISUNKNOWN D_FSCANF D_FGETS D_FGETC D_FEOF D_COUNTONES D_COUNTDRIVERS D_CLOG2 D_C D_BITS DECNUM CARET BINNUM ASCNUM AMPERSAND
first(gateOrList) = LPAREN LBRACK ID
first(gateOr) = LPAREN LBRACK ID
first(gateNotList) = LPAREN LBRACK ID
first(gateNot) = LPAREN LBRACK ID
first(gateNorList) = LPAREN LBRACK ID
first(gateNor) = LPAREN LBRACK ID
first(gateNandList) = LPAREN LBRACK ID
first(gateNand) = LPAREN LBRACK ID
first(gateMosList) = LPAREN LBRACK ID
first(gateMos) = LPAREN LBRACK ID
first(gateIdE) = ID
first(gateDecl) = XOR XNOR TRANIF TRAN PULLUP PMOS OR NOTIF NOT NOR NMOS NAND BUFIF BUF AND
first(gateBufList) = LPAREN LBRACK ID
first(gateBufIfPinList) = VBAR TILDE P_XNOR P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_NOR P_NAND P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PREPROC PRAGMATIC PLUS PLING OCTNUM MINUS LPAREN LCURLY INTNUM ID HEXNUM FLOATNUM D_UNSIGNED D_TIME D_TEST_PLUSARGS D_STIME D_SSCANF D_SIGNED D_RANDOM D_ONEHOT0 D_ONEHOT D_ISUNKNOWN D_FSCANF D_FGETS D_FGETC D_FEOF D_COUNTONES D_COUNTDRIVERS D_CLOG2 D_C D_BITS DECNUM CARET BINNUM ASCNUM AMPERSAND
first(gateBufIfList) = LPAREN LBRACK ID
first(gateBufIf) = LPAREN LBRACK ID
first(gateBuf) = LPAREN LBRACK ID
first(gateAndPinList) = VBAR TILDE P_XNOR P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_NOR P_NAND P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PREPROC PRAGMATIC PLUS PLING OCTNUM MINUS LPAREN LCURLY INTNUM ID HEXNUM FLOATNUM D_UNSIGNED D_TIME D_TEST_PLUSARGS D_STIME D_SSCANF D_SIGNED D_RANDOM D_ONEHOT0 D_ONEHOT D_ISUNKNOWN D_FSCANF D_FGETS D_FGETC D_FEOF D_COUNTONES D_COUNTDRIVERS D_CLOG2 D_C D_BITS DECNUM CARET BINNUM ASCNUM AMPERSAND
first(gateAndList) = LPAREN LBRACK ID
first(gateAnd) = LPAREN LBRACK ID
first(funcVarList) = WIRE TRI1 TRI0 SUPPLY1 SUPPLY0 REG REAL PARAMETER OUTPUT LOCALPARAM INTEGER INPUT INOUT GENVAR EVENT
first(funcVar) = WIRE TRI1 TRI0 SUPPLY1 SUPPLY0 REG REAL PARAMETER OUTPUT LOCALPARAM INTEGER INPUT INOUT GENVAR EVENT
first(funcTypeE) = REAL LBRACK INTEGER
first(funcRef) = ID
first(funcDecl) = FUNCTION
first(funcArgs) = LPAREN
first(floatnum) = MINUS INTNUM FLOATNUM
first(expression) = VBAR TILDE P_XNOR P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_NOR P_NAND P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PREPROC PRAGMATIC PLUS PLING OCTNUM MINUS LPAREN LCURLY INTNUM ID HEXNUM FLOATNUM D_UNSIGNED D_TIME D_TEST_PLUSARGS D_STIME D_SSCANF D_SIGNED D_RANDOM D_ONEHOT0 D_ONEHOT D_ISUNKNOWN D_FSCANF D_FGETS D_FGETC D_FEOF D_COUNTONES D_COUNTDRIVERS D_CLOG2 D_C D_BITS DECNUM CARET BINNUM ASCNUM AMPERSAND
first(exprStrText) = VBAR TILDE P_XNOR P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_NOR P_NAND P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PREPROC PRAGMATIC PLUS PLING OCTNUM MINUS LPAREN LCURLY INTNUM ID HEXNUM FLOATNUM D_UNSIGNED D_TIME D_TEST_PLUSARGS D_STIME D_SSCANF D_SIGNED D_RANDOM D_ONEHOT0 D_ONEHOT D_ISUNKNOWN D_FSCANF D_FGETS D_FGETC D_FEOF D_COUNTONES D_COUNTDRIVERS D_CLOG2 D_C D_BITS DECNUM CARET BINNUM ASCNUM AMPERSAND
first(exprNoStr) = VBAR TILDE P_XNOR P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_NOR P_NAND P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PREPROC PRAGMATIC PLUS PLING OCTNUM MINUS LPAREN LCURLY INTNUM ID HEXNUM FLOATNUM D_UNSIGNED D_TIME D_TEST_PLUSARGS D_STIME D_SSCANF D_SIGNED D_RANDOM D_ONEHOT0 D_ONEHOT D_ISUNKNOWN D_FSCANF D_FGETS D_FGETC D_FEOF D_COUNTONES D_COUNTDRIVERS D_CLOG2 D_C D_BITS DECNUM CARET BINNUM ASCNUM AMPERSAND
first(exprList) = VBAR TILDE P_XNOR P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_NOR P_NAND P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PREPROC PRAGMATIC PLUS PLING OCTNUM MINUS LPAREN LCURLY INTNUM ID HEXNUM FLOATNUM D_UNSIGNED D_TIME D_TEST_PLUSARGS D_STIME D_SSCANF D_SIGNED D_RANDOM D_ONEHOT0 D_ONEHOT D_ISUNKNOWN D_FSCANF D_FGETS D_FGETC D_FEOF D_COUNTONES D_COUNTDRIVERS D_CLOG2 D_C D_BITS DECNUM COMMA CARET BINNUM ASCNUM AMPERSAND
first(expr) = VBAR TILDE P_XNOR P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_NOR P_NAND P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PREPROC PRAGMATIC PLUS PLING OCTNUM MINUS LPAREN LCURLY INTNUM ID HEXNUM FLOATNUM D_UNSIGNED D_TIME D_TEST_PLUSARGS D_STIME D_SSCANF D_SIGNED D_RANDOM D_ONEHOT0 D_ONEHOT D_ISUNKNOWN D_FSCANF D_FGETS D_FGETC D_FEOF D_COUNTONES D_COUNTDRIVERS D_CLOG2 D_C D_BITS DECNUM CARET BINNUM ASCNUM AMPERSAND
first(eventControl) = HASH AT
first(endLabelE) = ENDOFFILE COLON
first(edge_sensitive_path_declaration) = LPAREN
first(edge_identifier) = POSEDGE NEGEDGE
first(edge_descriptor) = Z_OR_X TOKEN_ZERO TOKEN_ONE TOKEN_EDGE_10 TOKEN_EDGE01
first(edge_control_specifier_5) = COMMA
first(edge2) = INTNUM ID
first(edge1) = QUERY INTNUM ILLEGAL ID
first(dlyTerm) = MINUS INTNUM ID FLOATNUM
first(delayrange) = VECTORED SCALARED LBRACK HASH
first(delayed_reference) = ID
first(delayed_data) = ID
first(delayStrength) = PWEAK HASH
first(delayE) = HASH
first(delay) = HASH
first(defpOne) = ID
first(defpList) = ID
first(csr_edge_sensitive_path_description) = LPAREN
first(cover_property_statement) = COVER
first(constant_range_expression) = VBAR TILDE P_XNOR P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_NOR P_NAND P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PREPROC PRAGMATIC PLUS PLING OCTNUM MINUS LPAREN LCURLY INTNUM ID HEXNUM FLOATNUM D_UNSIGNED D_TIME D_TEST_PLUSARGS D_STIME D_SSCANF D_SIGNED D_RANDOM D_ONEHOT0 D_ONEHOT D_ISUNKNOWN D_FSCANF D_FGETS D_FGETC D_FEOF D_COUNTONES D_COUNTDRIVERS D_CLOG2 D_C D_BITS DECNUM CARET BINNUM ASCNUM AMPERSAND
first(constant_mintypmax_expression) = VBAR TILDE P_XNOR P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_NOR P_NAND P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PREPROC PRAGMATIC PLUS PLING OCTNUM MINUS LPAREN LCURLY INTNUM ID HEXNUM FLOATNUM D_UNSIGNED D_TIME D_TEST_PLUSARGS D_STIME D_SSCANF D_SIGNED D_RANDOM D_ONEHOT0 D_ONEHOT D_ISUNKNOWN D_FSCANF D_FGETS D_FGETC D_FEOF D_COUNTONES D_COUNTDRIVERS D_CLOG2 D_C D_BITS DECNUM CARET BINNUM ASCNUM AMPERSAND
first(constant_expression) = VBAR TILDE P_XNOR P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_NOR P_NAND P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PREPROC PRAGMATIC PLUS PLING OCTNUM MINUS LPAREN LCURLY INTNUM ID HEXNUM FLOATNUM D_UNSIGNED D_TIME D_TEST_PLUSARGS D_STIME D_SSCANF D_SIGNED D_RANDOM D_ONEHOT0 D_ONEHOT D_ISUNKNOWN D_FSCANF D_FGETS D_FGETC D_FEOF D_COUNTONES D_COUNTDRIVERS D_CLOG2 D_C D_BITS DECNUM CARET BINNUM ASCNUM AMPERSAND
first(constExpr) = VBAR TILDE P_XNOR P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_NOR P_NAND P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PREPROC PRAGMATIC PLUS PLING OCTNUM MINUS LPAREN LCURLY INTNUM ID HEXNUM FLOATNUM D_UNSIGNED D_TIME D_TEST_PLUSARGS D_STIME D_SSCANF D_SIGNED D_RANDOM D_ONEHOT0 D_ONEHOT D_ISUNKNOWN D_FSCANF D_FGETS D_FGETC D_FEOF D_COUNTONES D_COUNTDRIVERS D_CLOG2 D_C D_BITS DECNUM CARET BINNUM ASCNUM AMPERSAND
first(concurrent_assertion_statement) = COVER
first(concurrent_assertion_item) = ID COVER
first(concIdList) = ID
first(commaVRDListE) = COMMA
first(commaEListE) = COMMA
first(colon_identifier) = P_PLUSCOLON P_MINUSCOLON COLON
first(clocking_declaration) = DEFAULT
first(cellpinList) = VBAR TILDE P_XNOR P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_NOR P_NAND P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DOTSTAR P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PREPROC PRAGMATIC PLUS PLING OCTNUM MINUS LPAREN LCURLY INTNUM ID HEXNUM FLOATNUM D_UNSIGNED D_TIME D_TEST_PLUSARGS D_STIME D_SSCANF D_SIGNED D_RANDOM D_ONEHOT0 D_ONEHOT D_ISUNKNOWN D_FSCANF D_FGETS D_FGETC D_FEOF D_COUNTONES D_COUNTDRIVERS D_CLOG2 D_C D_BITS DOT DECNUM COMMA CARET BINNUM ASCNUM AMPERSAND
first(cellpinItem) = VBAR TILDE P_XNOR P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_NOR P_NAND P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DOTSTAR P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PREPROC PRAGMATIC PLUS PLING OCTNUM MINUS LPAREN LCURLY INTNUM ID HEXNUM FLOATNUM D_UNSIGNED D_TIME D_TEST_PLUSARGS D_STIME D_SSCANF D_SIGNED D_RANDOM D_ONEHOT0 D_ONEHOT D_ISUNKNOWN D_FSCANF D_FGETS D_FGETC D_FEOF D_COUNTONES D_COUNTDRIVERS D_CLOG2 D_C D_BITS DOT DECNUM CARET BINNUM ASCNUM AMPERSAND
first(cellpinItList) = VBAR TILDE P_XNOR P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_NOR P_NAND P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DOTSTAR P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PREPROC PRAGMATIC PLUS PLING OCTNUM MINUS LPAREN LCURLY INTNUM ID HEXNUM FLOATNUM D_UNSIGNED D_TIME D_TEST_PLUSARGS D_STIME D_SSCANF D_SIGNED D_RANDOM D_ONEHOT0 D_ONEHOT D_ISUNKNOWN D_FSCANF D_FGETS D_FGETC D_FEOF D_COUNTONES D_COUNTDRIVERS D_CLOG2 D_C D_BITS DOT DECNUM COMMA CARET BINNUM ASCNUM AMPERSAND
first(cateList) = VBAR TILDE P_XNOR P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_NOR P_NAND P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PREPROC PRAGMATIC PLUS PLING OCTNUM MINUS LPAREN LCURLY INTNUM ID HEXNUM FLOATNUM D_UNSIGNED D_TIME D_TEST_PLUSARGS D_STIME D_SSCANF D_SIGNED D_RANDOM D_ONEHOT0 D_ONEHOT D_ISUNKNOWN D_FSCANF D_FGETS D_FGETC D_FEOF D_COUNTONES D_COUNTDRIVERS D_CLOG2 D_C D_BITS DECNUM CARET BINNUM ASCNUM AMPERSAND
first(caseListE) = VBAR TILDE P_XNOR P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_NOR P_NAND P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PREPROC PRAGMATIC PLUS PLING OCTNUM MINUS LPAREN LCURLY INTNUM ID HEXNUM FLOATNUM D_UNSIGNED D_TIME D_TEST_PLUSARGS D_STIME D_SSCANF D_SIGNED D_RANDOM D_ONEHOT0 D_ONEHOT D_ISUNKNOWN D_FSCANF D_FGETS D_FGETC D_FEOF D_COUNTONES D_COUNTDRIVERS D_CLOG2 D_C D_BITS DEFAULT DECNUM CARET BINNUM ASCNUM AMPERSAND
first(caseList) = VBAR TILDE P_XNOR P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_NOR P_NAND P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PREPROC PRAGMATIC PLUS PLING OCTNUM MINUS LPAREN LCURLY INTNUM ID HEXNUM FLOATNUM D_UNSIGNED D_TIME D_TEST_PLUSARGS D_STIME D_SSCANF D_SIGNED D_RANDOM D_ONEHOT0 D_ONEHOT D_ISUNKNOWN D_FSCANF D_FGETS D_FGETC D_FEOF D_COUNTONES D_COUNTDRIVERS D_CLOG2 D_C D_BITS DEFAULT DECNUM CARET BINNUM ASCNUM AMPERSAND
first(caseCondList) = VBAR TILDE P_XNOR P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_NOR P_NAND P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PREPROC PRAGMATIC PLUS PLING OCTNUM MINUS LPAREN LCURLY INTNUM ID HEXNUM FLOATNUM D_UNSIGNED D_TIME D_TEST_PLUSARGS D_STIME D_SSCANF D_SIGNED D_RANDOM D_ONEHOT0 D_ONEHOT D_ISUNKNOWN D_FSCANF D_FGETS D_FGETC D_FEOF D_COUNTONES D_COUNTDRIVERS D_CLOG2 D_C D_BITS DECNUM CARET BINNUM ASCNUM AMPERSAND
first(caseAttrE) = 
first(case) = CASEZ CASEX CASE
first(cStrList) = VBAR TILDE P_XNOR P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_NOR P_NAND P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PREPROC PRAGMATIC PLUS PLING OCTNUM MINUS LPAREN LCURLY INTNUM ID HEXNUM FLOATNUM D_UNSIGNED D_TIME D_TEST_PLUSARGS D_STIME D_SSCANF D_SIGNED D_RANDOM D_ONEHOT0 D_ONEHOT D_ISUNKNOWN D_FSCANF D_FGETS D_FGETC D_FEOF D_COUNTONES D_COUNTDRIVERS D_CLOG2 D_C D_BITS DECNUM CARET BINNUM ASCNUM AMPERSAND
first(binary_module_path_operator) = VBAR P_XNOR P_OROR P_NXOR P_NOTEQUAL P_EQUAL P_ANDAND CARET AMPERSAND
first(attrDecl) = D_ATTRIBUTE
first(RangeListE) = LBRACK
first(RangeList) = LBRACK
first(PortV2kSig) = ID
first(PortV2kSecond) = OUTPUT INPUT INOUT ID
first(PortV2kList) = OUTPUT INPUT INOUT ID
first(PortV2kInit) = ID
first(PortV2kDecl) = OUTPUT INPUT INOUT
first(PortV2kArgs) = OUTPUT INPUT INOUT
first(PortRangeE) = LBRACK
first(PortList) = ID DOT
first(PortDirection) = OUTPUT INPUT INOUT
first(PortDecl) = OUTPUT INPUT INOUT
first(Port) = ID DOT
first(AssignOne) = LCURLY ID
first(AssignList) = LCURLY ID
first(AssertStmt) = ASSERT
first(Anyrange) = LBRACK
minimal(zero_or_one) = (* 1 *) TOKEN_ZERO
minimal(vrdList) = (* 1 *) ID
minimal(varReg) = (* 1 *) REG
minimal(varRefMem) = (* 1 *) ID
minimal(varRefDotBit) = (* 1 *) ID
minimal(varRefBase) = (* 1 *) ID
minimal(varNet) = (* 1 *) SUPPLY0
minimal(varLParam) = (* 1 *) LOCALPARAM
minimal(varGenVar) = (* 1 *) GENVAR
minimal(varGParam) = (* 1 *) PARAMETER
minimal(varDeclListE) = (* 0 *)
minimal(varDeclList) = (* 3 *) REG ID SEMICOLON
minimal(varDecl) = (* 3 *) REG ID SEMICOLON
minimal(v2kVarDeclE) = (* 0 *)
minimal(unary_module_path_operator) = (* 1 *) PLING
minimal(trowList) = (* 0 *)
minimal(trow) = (* 3 *) INTNUM COLON INTNUM
minimal(tregoutList) = (* 1 *) INTNUM
minimal(tregout) = (* 1 *) INTNUM
minimal(tinList) = (* 1 *) INTNUM
minimal(tin) = (* 1 *) INTNUM
minimal(timing_check_event_control) = (* 1 *) POSEDGE
minimal(timing_check_condition) = (* 1 *) D_RANDOM
minimal(taskVarList) = (* 0 *)
minimal(taskVar) = (* 3 *) INPUT ID SEMICOLON
minimal(taskRef) = (* 1 *) ID
minimal(taskDecl) = (* 5 *) TASK ID SEMICOLON SEMICOLON ENDTASK
minimal(taskArgs) = (* 0 *)
minimal(tableDecl) = (* 2 *) TABLE ENDTABLE
minimal(system_timing_check) = (* 8 *) D_PERIOD LPAREN POSEDGE ID COMMA D_RANDOM RPAREN SEMICOLON
minimal(strengthList) = (* 0 *)
minimal(strAsText) = (* 1 *) ASCNUM
minimal(strAsInt) = (* 1 *) ASCNUM
minimal(stmtListE) = (* 0 *)
minimal(stmtList) = (* 1 *) SEMICOLON
minimal(stmtBlock) = (* 1 *) SEMICOLON
minimal(stmt) = (* 1 *) SEMICOLON
minimal(state_dependent_path_declaration) = (* 8 *) IF_NONE LPAREN ID P_EQGT ID RPAREN EQUALS D_RANDOM
minimal(stateCaseForIf) = (* 5 *) CASE LPAREN D_RANDOM RPAREN ENDCASE
minimal(start) = (* 1 *) ENDOFFILE
minimal(specify_terminal_descriptor) = (* 1 *) ID
minimal(specify_output_terminal_descriptor_3) = (* 0 *)
minimal(specify_output_terminal_descriptor) = (* 1 *) ID
minimal(specify_item) = (* 3 *) PULSESTYLE_ONEVENT ID SEMICOLON
minimal(specify_block) = (* 0 *)
minimal(simple_path_declaration) = (* 7 *) LPAREN ID P_EQGT ID RPAREN EQUALS D_RANDOM
minimal(signingE) = (* 0 *)
minimal(signedE) = (* 0 *)
minimal(sigId) = (* 1 *) ID
minimal(sigAttrListE) = (* 0 *)
minimal(sigAndAttr) = (* 1 *) ID
minimal(showcancelled_declaration) = (* 3 *) SHOWCANCELLED ID SEMICOLON
minimal(senitemVar) = (* 1 *) ID
minimal(senitemEdge) = (* 2 *) POSEDGE ID
minimal(senitem) = (* 1 *) ID
minimal(senList) = (* 1 *) ID
minimal(scalar_timing_check_condition) = (* 1 *) D_RANDOM
minimal(scalar_constant) = (* 1 *) INTNUM
minimal(regsigList) = (* 1 *) ID
minimal(regsig) = (* 1 *) ID
minimal(regrangeE) = (* 0 *)
minimal(readmem) = (* 1 *) D_READMEMB
minimal(pulsestyle_declaration) = (* 3 *) PULSESTYLE_ONEVENT ID SEMICOLON
minimal(pulse_control_specparam) = (* 6 *) PATHPULSE EQUALS LPAREN D_RANDOM RPAREN SEMICOLON
minimal(property_spec_disable) = (* 0 *)
minimal(property_spec) = (* 1 *) D_RANDOM
minimal(primItemList) = (* 2 *) TABLE ENDTABLE
minimal(primItem) = (* 2 *) TABLE ENDTABLE
minimal(primDecl) = (* 6 *) PRIMITIVE ID SEMICOLON TABLE ENDTABLE ENDPRIMITIVE
minimal(preproc) = (* 1 *) P_CELLDEFINE
minimal(polarity_operator) = (* 1 *) PLUS
minimal(path_delay_value) = (* 1 *) D_RANDOM
minimal(path_declaration) = (* 8 *) LPAREN ID P_EQGT ID RPAREN EQUALS D_RANDOM SEMICOLON
minimal(parenE) = (* 0 *)
minimal(paramList) = (* 3 *) ID EQUALS D_RANDOM
minimal(param) = (* 3 *) ID EQUALS D_RANDOM
minimal(number) = (* 1 *) INTNUM
minimal(netSigList) = (* 1 *) ID
minimal(netSig) = (* 1 *) ID
minimal(monText) = (* 0 *)
minimal(monListE) = (* 0 *)
minimal(monList) = (* 0 *)
minimal(module_path_primary) = (* 1 *) INTNUM
minimal(module_path_mintypmax_expression) = (* 1 *) INTNUM
minimal(module_path_expression) = (* 1 *) INTNUM
minimal(module_path_concatenation_4) = (* 0 *)
minimal(moduleDecl) = (* 4 *) MODULE ID SEMICOLON ENDMODULE
minimal(modprimDecl) = (* 1 *) P_CELLDEFINE
minimal(modPortsE) = (* 0 *)
minimal(modParSecond) = (* 3 *) ID EQUALS D_RANDOM
minimal(modParList) = (* 3 *) ID EQUALS D_RANDOM
minimal(modParE) = (* 0 *)
minimal(modParDecl) = (* 4 *) PARAMETER ID EQUALS D_RANDOM
minimal(modParArgs) = (* 4 *) PARAMETER ID EQUALS D_RANDOM
minimal(modOrGenItem) = (* 2 *) ALWAYS SEMICOLON
minimal(modItemListE) = (* 0 *)
minimal(modItem) = (* 2 *) ALWAYS SEMICOLON
minimal(mintypmax_expression) = (* 1 *) D_RANDOM
minimal(minTypMax) = (* 1 *) ID
minimal(list_of_specparam_assignments_3) = (* 0 *)
minimal(list_of_path_outputs_3) = (* 0 *)
minimal(list_of_path_inputs_3) = (* 0 *)
minimal(lifetimeE) = (* 0 *)
minimal(labeledStmt) = (* 5 *) ASSERT LPAREN D_RANDOM RPAREN SEMICOLON
minimal(instnameParen) = (* 1 *) ID
minimal(instnameList) = (* 1 *) ID
minimal(instRangeE) = (* 0 *)
minimal(instDecl) = (* 3 *) ID ID SEMICOLON
minimal(identifier) = (* 1 *) ID
minimal(idDotted) = (* 1 *) ID
minimal(idArrayed) = (* 1 *) ID
minimal(generateRegion) = (* 4 *) GENERATE ALWAYS SEMICOLON ENDGENERATE
minimal(genTopBlock) = (* 2 *) ALWAYS SEMICOLON
minimal(genItemList) = (* 2 *) ALWAYS SEMICOLON
minimal(genItemBlock) = (* 2 *) BEGIN END
minimal(genItemBegin) = (* 2 *) BEGIN END
minimal(genItem) = (* 2 *) ALWAYS SEMICOLON
minimal(genCaseListE) = (* 0 *)
minimal(genCaseList) = (* 3 *) DEFAULT BEGIN END
minimal(gateXorPinList) = (* 1 *) D_RANDOM
minimal(gateXorList) = (* 5 *) LPAREN ID COMMA D_RANDOM RPAREN
minimal(gateXor) = (* 5 *) LPAREN ID COMMA D_RANDOM RPAREN
minimal(gateXnorList) = (* 5 *) LPAREN ID COMMA D_RANDOM RPAREN
minimal(gateXnor) = (* 5 *) LPAREN ID COMMA D_RANDOM RPAREN
minimal(gateUdpPinList) = (* 1 *) D_RANDOM
minimal(gateTranList) = (* 5 *) LPAREN ID COMMA ID RPAREN
minimal(gateTranIfList) = (* 7 *) LPAREN ID COMMA ID COMMA D_RANDOM RPAREN
minimal(gateTranIf) = (* 7 *) LPAREN ID COMMA ID COMMA D_RANDOM RPAREN
minimal(gateTran) = (* 5 *) LPAREN ID COMMA ID RPAREN
minimal(gatePullupList) = (* 3 *) LPAREN ID RPAREN
minimal(gatePullup) = (* 3 *) LPAREN ID RPAREN
minimal(gateOrPinList) = (* 1 *) D_RANDOM
minimal(gateOrList) = (* 5 *) LPAREN ID COMMA D_RANDOM RPAREN
minimal(gateOr) = (* 5 *) LPAREN ID COMMA D_RANDOM RPAREN
minimal(gateNotList) = (* 5 *) LPAREN ID COMMA D_RANDOM RPAREN
minimal(gateNot) = (* 5 *) LPAREN ID COMMA D_RANDOM RPAREN
minimal(gateNorList) = (* 5 *) LPAREN ID COMMA D_RANDOM RPAREN
minimal(gateNor) = (* 5 *) LPAREN ID COMMA D_RANDOM RPAREN
minimal(gateNandList) = (* 5 *) LPAREN ID COMMA D_RANDOM RPAREN
minimal(gateNand) = (* 5 *) LPAREN ID COMMA D_RANDOM RPAREN
minimal(gateMosList) = (* 7 *) LPAREN ID COMMA ID COMMA D_RANDOM RPAREN
minimal(gateMos) = (* 7 *) LPAREN ID COMMA ID COMMA D_RANDOM RPAREN
minimal(gateIdE) = (* 0 *)
minimal(gateDecl) = (* 5 *) PULLUP LPAREN ID RPAREN SEMICOLON
minimal(gateBufList) = (* 5 *) LPAREN ID COMMA D_RANDOM RPAREN
minimal(gateBufIfPinList) = (* 1 *) D_RANDOM
minimal(gateBufIfList) = (* 5 *) LPAREN ID COMMA D_RANDOM RPAREN
minimal(gateBufIf) = (* 5 *) LPAREN ID COMMA D_RANDOM RPAREN
minimal(gateBuf) = (* 5 *) LPAREN ID COMMA D_RANDOM RPAREN
minimal(gateAndPinList) = (* 1 *) D_RANDOM
minimal(gateAndList) = (* 5 *) LPAREN ID COMMA D_RANDOM RPAREN
minimal(gateAnd) = (* 5 *) LPAREN ID COMMA D_RANDOM RPAREN
minimal(funcVarList) = (* 0 *)
minimal(funcVar) = (* 3 *) INPUT ID SEMICOLON
minimal(funcTypeE) = (* 0 *)
minimal(funcRef) = (* 3 *) ID LPAREN RPAREN
minimal(funcDecl) = (* 5 *) FUNCTION ID SEMICOLON SEMICOLON ENDFUNCTION
minimal(funcArgs) = (* 0 *)
minimal(floatnum) = (* 1 *) INTNUM
minimal(expression) = (* 1 *) D_RANDOM
minimal(exprStrText) = (* 1 *) ASCNUM
minimal(exprNoStr) = (* 1 *) D_RANDOM
minimal(exprList) = (* 0 *)
minimal(expr) = (* 1 *) D_RANDOM
minimal(eventControl) = (* 2 *) AT ID
minimal(endLabelE) = (* 0 *)
minimal(edge_sensitive_path_declaration) = (* 9 *) LPAREN ID P_EQGT ID COLON D_RANDOM RPAREN EQUALS D_RANDOM
minimal(edge_identifier) = (* 1 *) POSEDGE
minimal(edge_descriptor) = (* 1 *) TOKEN_EDGE01
minimal(edge_control_specifier_5) = (* 0 *)
minimal(edge2) = (* 1 *) INTNUM
minimal(edge1) = (* 1 *) INTNUM
minimal(dlyTerm) = (* 1 *) ID
minimal(delayrange) = (* 0 *)
minimal(delayed_reference) = (* 1 *) ID
minimal(delayed_data) = (* 1 *) ID
minimal(delayStrength) = (* 0 *)
minimal(delayE) = (* 0 *)
minimal(delay) = (* 2 *) HASH ID
minimal(defpOne) = (* 5 *) ID DOT ID EQUALS D_RANDOM
minimal(defpList) = (* 5 *) ID DOT ID EQUALS D_RANDOM
minimal(csr_edge_sensitive_path_description) = (* 10 *) LPAREN POSEDGE ID P_EQGT LPAREN ID P_PLUSCOLON INTNUM RPAREN RPAREN
minimal(cover_property_statement) = (* 6 *) COVER PROPERTY LPAREN D_RANDOM RPAREN SEMICOLON
minimal(constant_range_expression) = (* 1 *) D_RANDOM
minimal(constant_mintypmax_expression) = (* 1 *) D_RANDOM
minimal(constant_expression) = (* 1 *) D_RANDOM
minimal(constExpr) = (* 1 *) D_RANDOM
minimal(concurrent_assertion_statement) = (* 6 *) COVER PROPERTY LPAREN D_RANDOM RPAREN SEMICOLON
minimal(concurrent_assertion_item) = (* 6 *) COVER PROPERTY LPAREN D_RANDOM RPAREN SEMICOLON
minimal(concIdList) = (* 1 *) ID
minimal(commaVRDListE) = (* 0 *)
minimal(commaEListE) = (* 0 *)
minimal(colon_identifier) = (* 1 *) P_PLUSCOLON
minimal(clocking_declaration) = (* 9 *) DEFAULT CLOCKING AT LPAREN POSEDGE ID RPAREN SEMICOLON ENDCLOCKING
minimal(cellpinList) = (* 0 *)
minimal(cellpinItem) = (* 1 *) P_DOTSTAR
minimal(cellpinItList) = (* 0 *)
minimal(cateList) = (* 1 *) D_RANDOM
minimal(caseListE) = (* 0 *)
minimal(caseList) = (* 2 *) DEFAULT SEMICOLON
minimal(caseCondList) = (* 1 *) D_RANDOM
minimal(caseAttrE) = (* 0 *)
minimal(case) = (* 1 *) CASE
minimal(cStrList) = (* 1 *) ASCNUM
minimal(binary_module_path_operator) = (* 1 *) P_EQUAL
minimal(attrDecl) = (* 4 *) D_ATTRIBUTE LPAREN RPAREN SEMICOLON
minimal(RangeListE) = (* 0 *)
minimal(RangeList) = (* 5 *) LBRACK D_RANDOM COLON D_RANDOM RBRACK
minimal(PortV2kSig) = (* 1 *) ID
minimal(PortV2kSecond) = (* 1 *) ID
minimal(PortV2kList) = (* 1 *) ID
minimal(PortV2kInit) = (* 1 *) ID
minimal(PortV2kDecl) = (* 2 *) INPUT ID
minimal(PortV2kArgs) = (* 2 *) INPUT ID
minimal(PortRangeE) = (* 0 *)
minimal(PortList) = (* 1 *) ID
minimal(PortDirection) = (* 1 *) INPUT
minimal(PortDecl) = (* 3 *) INPUT ID SEMICOLON
minimal(Port) = (* 1 *) ID
minimal(AssignOne) = (* 3 *) ID EQUALS D_RANDOM
minimal(AssignList) = (* 3 *) ID EQUALS D_RANDOM
minimal(AssertStmt) = (* 5 *) ASSERT LPAREN D_RANDOM RPAREN SEMICOLON
minimal(Anyrange) = (* 5 *) LBRACK D_RANDOM COLON D_RANDOM RBRACK
follow(zero_or_one) = Z_OR_X RBRACK COMMA
follow(vrdList) = RPAREN COMMA
follow(varReg) = UNSIGNED SIGNED LBRACK ID
follow(varRefMem) = RPAREN COMMA
follow(varRefDotBit) = WHILE VBAR TIMES SEMICOLON RPAREN REPEAT RCURLY RBRACK QUERY P_XNOR P_WILDNOTEQUAL P_WILDEQUAL P_TIMESCALE P_SUPPRESS_FAULTS P_SSRIGHT P_SRIGHT P_SLEFT P_RESETALL P_PROTECT P_POW P_PLUSCOLON P_OROR P_NOTEQUAL P_NOSUPPRESS_FAULTS P_NOR P_NAND P_MINUSGT P_MINUSCOLON P_LTE P_GTE P_EQUAL P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE P_CASENOTEQUAL P_CASEEQUAL P_ANDAND PREPROC PRAGMATIC PLUS OR MODULO MINUS LESS LCURLY IF ID HASH GREATER FOREVER FOR EQUALS D_WRITE D_WARNING D_STOP D_READMEMH D_READMEMB D_MONITOR D_INFO D_FWRITEH D_FWRITE D_FINISH D_FFLUSH D_FDISPLAY D_FCLOSE D_FATAL D_ERROR D_DISPLAY D_C DO DIVIDE DISABLE DEASSIGN COMMA COLON CASEZ CASEX CASE CARET BEGIN AT ASSIGN ASSERT AMPERSAND
follow(varRefBase) = EQUALS
follow(varNet) = VECTORED UNSIGNED SIGNED SCALARED LBRACK ID HASH
follow(varLParam) = UNSIGNED SIGNED LBRACK ID
follow(varGenVar) = UNSIGNED SIGNED ID
follow(varGParam) = UNSIGNED SIGNED LBRACK ID
follow(varDeclListE) = WHILE SEMICOLON REPEAT P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_MINUSGT P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PREPROC PRAGMATIC LCURLY IF ID HASH FOREVER FOR END D_WRITE D_WARNING D_STOP D_READMEMH D_READMEMB D_MONITOR D_INFO D_FWRITEH D_FWRITE D_FINISH D_FFLUSH D_FDISPLAY D_FCLOSE D_FATAL D_ERROR D_DISPLAY D_C DO DISABLE DEASSIGN CASEZ CASEX CASE BEGIN AT ASSIGN ASSERT
follow(varDeclList) = WHILE SEMICOLON REPEAT P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_MINUSGT P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PREPROC PRAGMATIC LCURLY IF ID HASH FOREVER FOR END D_WRITE D_WARNING D_STOP D_READMEMH D_READMEMB D_MONITOR D_INFO D_FWRITEH D_FWRITE D_FINISH D_FFLUSH D_FDISPLAY D_FCLOSE D_FATAL D_ERROR D_DISPLAY D_C DO DISABLE DEASSIGN CASEZ CASEX CASE BEGIN AT ASSIGN ASSERT
follow(varDecl) = XOR XNOR WIRE WHILE VBAR TRI1 TRI0 TRANIF TRAN TILDE TASK TABLE SUPPLY1 SUPPLY0 SPECIFY SEMICOLON REPEAT REG REAL P_XNOR P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_NOR P_NAND P_MINUSGT P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PULLUP PREPROC PRAGMATIC PMOS PLUS PLING PARAMETER OUTPUT OR OCTNUM NOTIF NOT NOR NMOS NAND MINUS LPAREN LOCALPARAM LCURLY INTNUM INTEGER INPUT INOUT INITIAL IF ID HEXNUM HASH GENVAR GENERATE FUNCTION FOREVER FOR FLOATNUM FINAL EVENT ENDPRIMITIVE ENDMODULE ENDGENERATE ENDCASE END ELSE D_WRITE D_WARNING D_UNSIGNED D_TIME D_TEST_PLUSARGS D_STOP D_STIME D_SSCANF D_SIGNED D_READMEMH D_READMEMB D_RANDOM D_ONEHOT0 D_ONEHOT D_MONITOR D_ISUNKNOWN D_INFO D_FWRITEH D_FWRITE D_FSCANF D_FINISH D_FGETS D_FGETC D_FFLUSH D_FEOF D_FDISPLAY D_FCLOSE D_FATAL D_ERROR D_DISPLAY D_COUNTONES D_COUNTDRIVERS D_CLOG2 D_C D_BITS D_ATTRIBUTE DO DISABLE DEFPARAM DEFAULT DECNUM DEASSIGN COVER CASEZ CASEX CASE CARET BUFIF BUF BINNUM BEGIN AT ASSIGN ASSERT ASCNUM AND AMPERSAND ALWAYS
follow(v2kVarDeclE) = UNSIGNED SIGNED LBRACK ID
follow(unary_module_path_operator) = OCTNUM LPAREN LCURLY INTNUM ID HEXNUM DECNUM BINNUM
follow(trowList) = ENDTABLE
follow(trow) = SEMICOLON ENDTABLE
follow(tregoutList) = SEMICOLON ENDTABLE COLON
follow(tregout) = SEMICOLON QUERY MINUS INTNUM ID ENDTABLE COLON
follow(tinList) = COLON
follow(tin) = TIMES QUERY LPAREN INTNUM ID COLON
follow(timing_check_event_control) = ID
follow(timing_check_condition) = COMMA
follow(taskVarList) = WHILE SEMICOLON REPEAT P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_MINUSGT P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PREPROC PRAGMATIC LCURLY IF ID HASH FOREVER FOR D_WRITE D_WARNING D_STOP D_READMEMH D_READMEMB D_MONITOR D_INFO D_FWRITEH D_FWRITE D_FINISH D_FFLUSH D_FDISPLAY D_FCLOSE D_FATAL D_ERROR D_DISPLAY D_C DO DISABLE DEASSIGN CASEZ CASEX CASE BEGIN AT ASSIGN ASSERT
follow(taskVar) = WIRE WHILE TRI1 TRI0 SUPPLY1 SUPPLY0 SEMICOLON REPEAT REG REAL P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_MINUSGT P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PREPROC PRAGMATIC PARAMETER OUTPUT LOCALPARAM LCURLY INTEGER INPUT INOUT IF ID HASH GENVAR FOREVER FOR EVENT D_WRITE D_WARNING D_STOP D_READMEMH D_READMEMB D_MONITOR D_INFO D_FWRITEH D_FWRITE D_FINISH D_FFLUSH D_FDISPLAY D_FCLOSE D_FATAL D_ERROR D_DISPLAY D_C DO DISABLE DEASSIGN CASEZ CASEX CASE BEGIN AT ASSIGN ASSERT
follow(taskRef) = SEMICOLON
follow(taskDecl) = XOR XNOR WIRE VBAR TRI1 TRI0 TRANIF TRAN TILDE TASK TABLE SUPPLY1 SUPPLY0 SPECIFY REG REAL P_XNOR P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_NOR P_NAND P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PULLUP PREPROC PRAGMATIC PMOS PLUS PLING PARAMETER OUTPUT OR OCTNUM NOTIF NOT NOR NMOS NAND MINUS LPAREN LOCALPARAM LCURLY INTNUM INTEGER INPUT INOUT INITIAL IF ID HEXNUM GENVAR GENERATE FUNCTION FOR FLOATNUM FINAL EVENT ENDMODULE ENDGENERATE ENDCASE END ELSE D_UNSIGNED D_TIME D_TEST_PLUSARGS D_STIME D_SSCANF D_SIGNED D_RANDOM D_ONEHOT0 D_ONEHOT D_ISUNKNOWN D_FSCANF D_FGETS D_FGETC D_FEOF D_COUNTONES D_COUNTDRIVERS D_CLOG2 D_C D_BITS D_ATTRIBUTE DEFPARAM DEFAULT DECNUM COVER CASE CARET BUFIF BUF BINNUM ASSIGN ASCNUM AND AMPERSAND ALWAYS
follow(taskArgs) = SEMICOLON
follow(tableDecl) = XOR XNOR WIRE VBAR TRI1 TRI0 TRANIF TRAN TILDE TASK TABLE SUPPLY1 SUPPLY0 SPECIFY REG REAL P_XNOR P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_NOR P_NAND P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PULLUP PREPROC PRAGMATIC PMOS PLUS PLING PARAMETER OUTPUT OR OCTNUM NOTIF NOT NOR NMOS NAND MINUS LPAREN LOCALPARAM LCURLY INTNUM INTEGER INPUT INOUT INITIAL IF ID HEXNUM GENVAR GENERATE FUNCTION FOR FLOATNUM FINAL EVENT ENDPRIMITIVE ENDMODULE ENDGENERATE ENDCASE END ELSE D_UNSIGNED D_TIME D_TEST_PLUSARGS D_STIME D_SSCANF D_SIGNED D_RANDOM D_ONEHOT0 D_ONEHOT D_ISUNKNOWN D_FSCANF D_FGETS D_FGETC D_FEOF D_COUNTONES D_COUNTDRIVERS D_CLOG2 D_C D_BITS D_ATTRIBUTE DEFPARAM DEFAULT DECNUM COVER CASE CARET BUFIF BUF BINNUM ASSIGN ASCNUM AND AMPERSAND ALWAYS
follow(system_timing_check) = SPECPARAM SHOWCANCELLED PULSESTYLE_ONEVENT PULSESTYLE_ONDETECT NOSHOWCANCELLED NOCHANGE LPAREN IF_NONE IF FULLSKEW ENDSPECIFY D_WIDTH D_TIMESKEW D_SKEW D_SETUPHOLD D_SETUP D_REMOVAL D_RECREM D_RECOVERY D_PERIOD D_HOLD
follow(strengthList) = RPAREN
follow(strAsText) = RPAREN COMMA
follow(strAsInt) = VBAR TIMES SEMICOLON RPAREN RCURLY RBRACK QUERY P_XNOR P_WILDNOTEQUAL P_WILDEQUAL P_SSRIGHT P_SRIGHT P_SLEFT P_POW P_PLUSCOLON P_OROR P_NOTEQUAL P_NOR P_NAND P_MINUSCOLON P_LTE P_GTE P_EQUAL P_CASENOTEQUAL P_CASEEQUAL P_ANDAND PLUS MODULO MINUS LESS LCURLY GREATER DIVIDE COMMA COLON CARET AMPERSAND
follow(stmtListE) = END
follow(stmtList) = WHILE SEMICOLON REPEAT P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_MINUSGT P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PREPROC PRAGMATIC LCURLY IF ID HASH FOREVER FOR END D_WRITE D_WARNING D_STOP D_READMEMH D_READMEMB D_MONITOR D_INFO D_FWRITEH D_FWRITE D_FINISH D_FFLUSH D_FDISPLAY D_FCLOSE D_FATAL D_ERROR D_DISPLAY D_C DO DISABLE DEASSIGN CASEZ CASEX CASE BEGIN AT ASSIGN ASSERT
follow(stmtBlock) = XOR XNOR WIRE WHILE VBAR TRI1 TRI0 TRANIF TRAN TILDE TASK TABLE SUPPLY1 SUPPLY0 SPECIFY SEMICOLON REPEAT REG REAL P_XNOR P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_NOR P_NAND P_MINUSGT P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PULLUP PREPROC PRAGMATIC PMOS PLUS PLING PARAMETER OUTPUT OR OCTNUM NOTIF NOT NOR NMOS NAND MINUS LPAREN LOCALPARAM LCURLY INTNUM INTEGER INPUT INOUT INITIAL IF ID HEXNUM HASH GENVAR GENERATE FUNCTION FOREVER FOR FLOATNUM FINAL EVENT ENDTASK ENDMODULE ENDGENERATE ENDFUNCTION ENDCASE END ELSE D_WRITE D_WARNING D_UNSIGNED D_TIME D_TEST_PLUSARGS D_STOP D_STIME D_SSCANF D_SIGNED D_READMEMH D_READMEMB D_RANDOM D_ONEHOT0 D_ONEHOT D_MONITOR D_ISUNKNOWN D_INFO D_FWRITEH D_FWRITE D_FSCANF D_FINISH D_FGETS D_FGETC D_FFLUSH D_FEOF D_FDISPLAY D_FCLOSE D_FATAL D_ERROR D_DISPLAY D_COUNTONES D_COUNTDRIVERS D_CLOG2 D_C D_BITS D_ATTRIBUTE DO DISABLE DEFPARAM DEFAULT DECNUM DEASSIGN COVER CASEZ CASEX CASE CARET BUFIF BUF BINNUM BEGIN AT ASSIGN ASSERT ASCNUM AND AMPERSAND ALWAYS
follow(stmt) = XOR XNOR WIRE WHILE VBAR TRI1 TRI0 TRANIF TRAN TILDE TASK TABLE SUPPLY1 SUPPLY0 SPECIFY SEMICOLON REPEAT REG REAL P_XNOR P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_NOR P_NAND P_MINUSGT P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PULLUP PREPROC PRAGMATIC PMOS PLUS PLING PARAMETER OUTPUT OR OCTNUM NOTIF NOT NOR NMOS NAND MINUS LPAREN LOCALPARAM LCURLY INTNUM INTEGER INPUT INOUT INITIAL IF ID HEXNUM HASH GENVAR GENERATE FUNCTION FOREVER FOR FLOATNUM FINAL EVENT ENDTASK ENDMODULE ENDGENERATE ENDFUNCTION ENDCASE END ELSE D_WRITE D_WARNING D_UNSIGNED D_TIME D_TEST_PLUSARGS D_STOP D_STIME D_SSCANF D_SIGNED D_READMEMH D_READMEMB D_RANDOM D_ONEHOT0 D_ONEHOT D_MONITOR D_ISUNKNOWN D_INFO D_FWRITEH D_FWRITE D_FSCANF D_FINISH D_FGETS D_FGETC D_FFLUSH D_FEOF D_FDISPLAY D_FCLOSE D_FATAL D_ERROR D_DISPLAY D_COUNTONES D_COUNTDRIVERS D_CLOG2 D_C D_BITS D_ATTRIBUTE DO DISABLE DEFPARAM DEFAULT DECNUM DEASSIGN COVER CASEZ CASEX CASE CARET BUFIF BUF BINNUM BEGIN AT ASSIGN ASSERT ASCNUM AND AMPERSAND ALWAYS
follow(state_dependent_path_declaration) = SEMICOLON
follow(stateCaseForIf) = XOR XNOR WIRE WHILE VBAR TRI1 TRI0 TRANIF TRAN TILDE TASK TABLE SUPPLY1 SUPPLY0 SPECIFY SEMICOLON REPEAT REG REAL P_XNOR P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_NOR P_NAND P_MINUSGT P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PULLUP PREPROC PRAGMATIC PMOS PLUS PLING PARAMETER OUTPUT OR OCTNUM NOTIF NOT NOR NMOS NAND MINUS LPAREN LOCALPARAM LCURLY INTNUM INTEGER INPUT INOUT INITIAL IF ID HEXNUM HASH GENVAR GENERATE FUNCTION FOREVER FOR FLOATNUM FINAL EVENT ENDTASK ENDMODULE ENDGENERATE ENDFUNCTION ENDCASE END ELSE D_WRITE D_WARNING D_UNSIGNED D_TIME D_TEST_PLUSARGS D_STOP D_STIME D_SSCANF D_SIGNED D_READMEMH D_READMEMB D_RANDOM D_ONEHOT0 D_ONEHOT D_MONITOR D_ISUNKNOWN D_INFO D_FWRITEH D_FWRITE D_FSCANF D_FINISH D_FGETS D_FGETC D_FFLUSH D_FEOF D_FDISPLAY D_FCLOSE D_FATAL D_ERROR D_DISPLAY D_COUNTONES D_COUNTDRIVERS D_CLOG2 D_C D_BITS D_ATTRIBUTE DO DISABLE DEFPARAM DEFAULT DECNUM DEASSIGN COVER CASEZ CASEX CASE CARET BUFIF BUF BINNUM BEGIN AT ASSIGN ASSERT ASCNUM AND AMPERSAND ALWAYS
follow(start) = #
follow(specify_terminal_descriptor) = P_ANDANDAND COMMA
follow(specify_output_terminal_descriptor_3) = SEMICOLON RPAREN P_PLUSCOLON P_MINUSCOLON P_ANDANDAND PLUS MINUS EQUALS COMMA COLON
follow(specify_output_terminal_descriptor) = SEMICOLON RPAREN P_PLUSCOLON P_MINUSCOLON P_ANDANDAND PLUS MINUS EQUALS COMMA COLON
follow(specify_item) = SPECPARAM SHOWCANCELLED PULSESTYLE_ONEVENT PULSESTYLE_ONDETECT NOSHOWCANCELLED NOCHANGE LPAREN IF_NONE IF FULLSKEW ENDSPECIFY D_WIDTH D_TIMESKEW D_SKEW D_SETUPHOLD D_SETUP D_REMOVAL D_RECREM D_RECOVERY D_PERIOD D_HOLD
follow(specify_block) = SPECPARAM SHOWCANCELLED PULSESTYLE_ONEVENT PULSESTYLE_ONDETECT NOSHOWCANCELLED NOCHANGE LPAREN IF_NONE IF FULLSKEW ENDSPECIFY D_WIDTH D_TIMESKEW D_SKEW D_SETUPHOLD D_SETUP D_REMOVAL D_RECREM D_RECOVERY D_PERIOD D_HOLD
follow(simple_path_declaration) = SEMICOLON
follow(signingE) = VECTORED SCALARED LBRACK ID HASH
follow(signedE) = REAL LBRACK INTEGER ID
follow(sigId) = SEMICOLON RPAREN EQUALS COMMA
follow(sigAttrListE) = SEMICOLON RPAREN EQUALS COMMA
follow(sigAndAttr) = RPAREN EQUALS COMMA
follow(showcancelled_declaration) = SPECPARAM SHOWCANCELLED PULSESTYLE_ONEVENT PULSESTYLE_ONDETECT NOSHOWCANCELLED NOCHANGE LPAREN IF_NONE IF FULLSKEW ENDSPECIFY D_WIDTH D_TIMESKEW D_SKEW D_SETUPHOLD D_SETUP D_REMOVAL D_RECREM D_RECOVERY D_PERIOD D_HOLD
follow(senitemVar) = WHILE SEMICOLON RPAREN REPEAT P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_MINUSGT P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PREPROC PRAGMATIC OR LCURLY IF ID HASH FOREVER FOR D_WRITE D_WARNING D_STOP D_READMEMH D_READMEMB D_MONITOR D_INFO D_FWRITEH D_FWRITE D_FINISH D_FFLUSH D_FDISPLAY D_FCLOSE D_FATAL D_ERROR D_DISPLAY D_C DO DISABLE DEASSIGN COMMA CASEZ CASEX CASE BEGIN AT ASSIGN ASSERT
follow(senitemEdge) = RPAREN OR COMMA
follow(senitem) = RPAREN OR COMMA
follow(senList) = RPAREN OR COMMA
follow(scalar_timing_check_condition) = RPAREN COMMA
follow(scalar_constant) = RPAREN COMMA
follow(regsigList) = SEMICOLON COMMA
follow(regsig) = SEMICOLON COMMA
follow(regrangeE) = ID HASH
follow(readmem) = LPAREN
follow(pulsestyle_declaration) = SPECPARAM SHOWCANCELLED PULSESTYLE_ONEVENT PULSESTYLE_ONDETECT NOSHOWCANCELLED NOCHANGE LPAREN IF_NONE IF FULLSKEW ENDSPECIFY D_WIDTH D_TIMESKEW D_SKEW D_SETUPHOLD D_SETUP D_REMOVAL D_RECREM D_RECOVERY D_PERIOD D_HOLD
follow(pulse_control_specparam) = SEMICOLON COMMA
follow(property_spec_disable) = VBAR TILDE P_XNOR P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_NOR P_NAND P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PREPROC PRAGMATIC PLUS PLING OCTNUM MINUS LPAREN LCURLY INTNUM ID HEXNUM FLOATNUM D_UNSIGNED D_TIME D_TEST_PLUSARGS D_STIME D_SSCANF D_SIGNED D_RANDOM D_ONEHOT0 D_ONEHOT D_ISUNKNOWN D_FSCANF D_FGETS D_FGETC D_FEOF D_COUNTONES D_COUNTDRIVERS D_CLOG2 D_C D_BITS DECNUM CARET BINNUM ASCNUM AMPERSAND
follow(property_spec) = RPAREN
follow(primItemList) = ENDPRIMITIVE
follow(primItem) = WIRE TRI1 TRI0 TABLE SUPPLY1 SUPPLY0 REG REAL PARAMETER OUTPUT LOCALPARAM INTEGER INPUT INOUT GENVAR EVENT ENDPRIMITIVE
follow(primDecl) = #
follow(preproc) = XOR XNOR WIRE WHILE VBAR TRI1 TRI0 TRANIF TRAN TIMES TILDE TASK TABLE SUPPLY1 SUPPLY0 SPECIFY SEMICOLON RPAREN REPEAT REG REAL RCURLY RBRACK QUERY P_XNOR P_WILDNOTEQUAL P_WILDEQUAL P_TIMESCALE P_SUPPRESS_FAULTS P_SSRIGHT P_SRIGHT P_SLEFT P_RESETALL P_PROTECT P_POW P_PLUSCOLON P_OROR P_NOTEQUAL P_NOSUPPRESS_FAULTS P_NOR P_NAND P_MINUSGT P_MINUSCOLON P_LTE P_GTE P_EQUAL P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE P_CASENOTEQUAL P_CASEEQUAL P_ANDAND PULLUP PREPROC PRAGMATIC PMOS PLUS PLING PARAMETER OUTPUT OR OCTNUM NOTIF NOT NOR NMOS NAND MODULO MINUS LPAREN LOCALPARAM LESS LCURLY INTNUM INTEGER INPUT INOUT INITIAL IF ID HEXNUM HASH GREATER GENVAR GENERATE FUNCTION FOREVER FOR FLOATNUM FINAL EVENT ENDTASK ENDMODULE ENDGENERATE ENDFUNCTION ENDCASE END ELSE D_WRITE D_WARNING D_UNSIGNED D_TIME D_TEST_PLUSARGS D_STOP D_STIME D_SSCANF D_SIGNED D_READMEMH D_READMEMB D_RANDOM D_ONEHOT0 D_ONEHOT D_MONITOR D_ISUNKNOWN D_INFO D_FWRITEH D_FWRITE D_FSCANF D_FINISH D_FGETS D_FGETC D_FFLUSH D_FEOF D_FDISPLAY D_FCLOSE D_FATAL D_ERROR D_DISPLAY D_COUNTONES D_COUNTDRIVERS D_CLOG2 D_C D_BITS D_ATTRIBUTE DO DIVIDE DISABLE DEFPARAM DEFAULT DECNUM DEASSIGN COVER COMMA COLON CASEZ CASEX CASE CARET BUFIF BUF BINNUM BEGIN AT ASSIGN ASSERT ASCNUM AND AMPERSAND ALWAYS #
follow(polarity_operator) = P_EQGT P_ASTGT COLON
follow(path_delay_value) = SEMICOLON
follow(path_declaration) = SPECPARAM SHOWCANCELLED PULSESTYLE_ONEVENT PULSESTYLE_ONDETECT NOSHOWCANCELLED NOCHANGE LPAREN IF_NONE IF FULLSKEW ENDSPECIFY D_WIDTH D_TIMESKEW D_SKEW D_SETUPHOLD D_SETUP D_REMOVAL D_RECREM D_RECOVERY D_PERIOD D_HOLD
follow(parenE) = SEMICOLON
follow(paramList) = SEMICOLON COMMA
follow(param) = SEMICOLON RPAREN COMMA
follow(number) = VBAR RPAREN RCURLY QUERY P_XNOR P_OROR P_NXOR P_NOTEQUAL P_EQUAL P_ANDAND COMMA COLON CARET AMPERSAND
follow(netSigList) = SEMICOLON COMMA
follow(netSig) = SEMICOLON COMMA
follow(monText) = RPAREN COMMA
follow(monListE) = RPAREN
follow(monList) = RPAREN
follow(module_path_primary) = VBAR RPAREN RCURLY QUERY P_XNOR P_OROR P_NXOR P_NOTEQUAL P_EQUAL P_ANDAND COMMA COLON CARET AMPERSAND
follow(module_path_mintypmax_expression) = RPAREN
follow(module_path_expression) = VBAR RPAREN RCURLY QUERY P_XNOR P_OROR P_NXOR P_NOTEQUAL P_EQUAL P_ANDAND COMMA COLON CARET AMPERSAND
follow(module_path_concatenation_4) = RCURLY COMMA
follow(moduleDecl) = #
follow(modprimDecl) = #
follow(modPortsE) = SEMICOLON
follow(modParSecond) = RPAREN COMMA
follow(modParList) = RPAREN COMMA
follow(modParE) = SEMICOLON LPAREN
follow(modParDecl) = RPAREN COMMA
follow(modParArgs) = RPAREN
follow(modOrGenItem) = XOR XNOR WIRE VBAR TRI1 TRI0 TRANIF TRAN TILDE TASK TABLE SUPPLY1 SUPPLY0 SPECIFY REG REAL P_XNOR P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_NOR P_NAND P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PULLUP PREPROC PRAGMATIC PMOS PLUS PLING PARAMETER OUTPUT OR OCTNUM NOTIF NOT NOR NMOS NAND MINUS LPAREN LOCALPARAM LCURLY INTNUM INTEGER INPUT INOUT INITIAL IF ID HEXNUM GENVAR GENERATE FUNCTION FOR FLOATNUM FINAL EVENT ENDMODULE ENDGENERATE ENDCASE END ELSE D_UNSIGNED D_TIME D_TEST_PLUSARGS D_STIME D_SSCANF D_SIGNED D_RANDOM D_ONEHOT0 D_ONEHOT D_ISUNKNOWN D_FSCANF D_FGETS D_FGETC D_FEOF D_COUNTONES D_COUNTDRIVERS D_CLOG2 D_C D_BITS D_ATTRIBUTE DEFPARAM DEFAULT DECNUM COVER CASE CARET BUFIF BUF BINNUM ASSIGN ASCNUM AND AMPERSAND ALWAYS
follow(modItemListE) = ENDMODULE
follow(modItem) = XOR XNOR WIRE TRI1 TRI0 TRANIF TRAN TASK TABLE SUPPLY1 SUPPLY0 SPECIFY REG REAL P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PULLUP PREPROC PRAGMATIC PMOS PARAMETER OUTPUT OR NOTIF NOT NOR NMOS NAND LOCALPARAM INTEGER INPUT INOUT INITIAL ID GENVAR GENERATE FUNCTION FINAL EVENT ENDMODULE D_ATTRIBUTE DEFPARAM DEFAULT COVER BUFIF BUF ASSIGN AND ALWAYS
follow(mintypmax_expression) = RPAREN COMMA
follow(minTypMax) = RPAREN COMMA
follow(list_of_specparam_assignments_3) = SEMICOLON COMMA
follow(list_of_path_outputs_3) = SEMICOLON RPAREN PLUS MINUS COMMA COLON
follow(list_of_path_inputs_3) = P_ASTGT PLUS MINUS COMMA
follow(lifetimeE) = SIGNED REAL LBRACK INTEGER ID
follow(labeledStmt) = XOR XNOR WIRE WHILE VBAR TRI1 TRI0 TRANIF TRAN TILDE TASK TABLE SUPPLY1 SUPPLY0 SPECIFY SEMICOLON REPEAT REG REAL P_XNOR P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_NOR P_NAND P_MINUSGT P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PULLUP PREPROC PRAGMATIC PMOS PLUS PLING PARAMETER OUTPUT OR OCTNUM NOTIF NOT NOR NMOS NAND MINUS LPAREN LOCALPARAM LCURLY INTNUM INTEGER INPUT INOUT INITIAL IF ID HEXNUM HASH GENVAR GENERATE FUNCTION FOREVER FOR FLOATNUM FINAL EVENT ENDTASK ENDMODULE ENDGENERATE ENDFUNCTION ENDCASE END ELSE D_WRITE D_WARNING D_UNSIGNED D_TIME D_TEST_PLUSARGS D_STOP D_STIME D_SSCANF D_SIGNED D_READMEMH D_READMEMB D_RANDOM D_ONEHOT0 D_ONEHOT D_MONITOR D_ISUNKNOWN D_INFO D_FWRITEH D_FWRITE D_FSCANF D_FINISH D_FGETS D_FGETC D_FFLUSH D_FEOF D_FDISPLAY D_FCLOSE D_FATAL D_ERROR D_DISPLAY D_COUNTONES D_COUNTDRIVERS D_CLOG2 D_C D_BITS D_ATTRIBUTE DO DISABLE DEFPARAM DEFAULT DECNUM DEASSIGN COVER CASEZ CASEX CASE CARET BUFIF BUF BINNUM BEGIN AT ASSIGN ASSERT ASCNUM AND AMPERSAND ALWAYS
follow(instnameParen) = SEMICOLON COMMA
follow(instnameList) = SEMICOLON COMMA
follow(instRangeE) = SEMICOLON LPAREN COMMA
follow(instDecl) = XOR XNOR WIRE VBAR TRI1 TRI0 TRANIF TRAN TILDE TASK TABLE SUPPLY1 SUPPLY0 SPECIFY REG REAL P_XNOR P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_NOR P_NAND P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PULLUP PREPROC PRAGMATIC PMOS PLUS PLING PARAMETER OUTPUT OR OCTNUM NOTIF NOT NOR NMOS NAND MINUS LPAREN LOCALPARAM LCURLY INTNUM INTEGER INPUT INOUT INITIAL IF ID HEXNUM GENVAR GENERATE FUNCTION FOR FLOATNUM FINAL EVENT ENDMODULE ENDGENERATE ENDCASE END ELSE D_UNSIGNED D_TIME D_TEST_PLUSARGS D_STIME D_SSCANF D_SIGNED D_RANDOM D_ONEHOT0 D_ONEHOT D_ISUNKNOWN D_FSCANF D_FGETS D_FGETC D_FEOF D_COUNTONES D_COUNTDRIVERS D_CLOG2 D_C D_BITS D_ATTRIBUTE DEFPARAM DEFAULT DECNUM COVER CASE CARET BUFIF BUF BINNUM ASSIGN ASCNUM AND AMPERSAND ALWAYS
follow(identifier) = XOR XNOR WIRE WHILE VBAR TRI1 TRI0 TRANIF TRAN TIMES TILDE TASK TABLE SUPPLY1 SUPPLY0 SPECIFY SEMICOLON RPAREN REPEAT REG REAL RCURLY RBRACK QUERY P_XNOR P_WILDNOTEQUAL P_WILDEQUAL P_TIMESCALE P_SUPPRESS_FAULTS P_SSRIGHT P_SRIGHT P_SLEFT P_RESETALL P_PROTECT P_POW P_PLUSCOLON P_OROR P_NXOR P_NOTEQUAL P_NOSUPPRESS_FAULTS P_NOR P_NAND P_MINUSGT P_MINUSCOLON P_LTE P_GTE P_EQUAL P_EQGT P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE P_CASENOTEQUAL P_CASEEQUAL P_ASTGT P_ANDANDAND P_ANDAND PULLUP PREPROC PRAGMATIC PMOS PLUS PLING PARAMETER OUTPUT OR OCTNUM NOTIF NOT NOR NMOS NAND MODULO MINUS LPAREN LOCALPARAM LESS LCURLY LBRACK INTNUM INTEGER INPUT INOUT INITIAL IF ID HEXNUM HASH GREATER GENVAR GENERATE FUNCTION FOREVER FOR FLOATNUM FINAL EVENT EQUALS ENDTASK ENDMODULE ENDGENERATE ENDFUNCTION ENDCASE END ELSE D_WRITE D_WARNING D_UNSIGNED D_TIME D_TEST_PLUSARGS D_STOP D_STIME D_SSCANF D_SIGNED D_READMEMH D_READMEMB D_RANDOM D_ONEHOT0 D_ONEHOT D_MONITOR D_ISUNKNOWN D_INFO D_FWRITEH D_FWRITE D_FSCANF D_FINISH D_FGETS D_FGETC D_FFLUSH D_FEOF D_FDISPLAY D_FCLOSE D_FATAL D_ERROR D_DISPLAY D_COUNTONES D_COUNTDRIVERS D_CLOG2 D_C D_BITS D_ATTRIBUTE DOT DOLLAR DO DIVIDE DISABLE DEFPARAM DEFAULT DECNUM DEASSIGN COVER COMMA COLON CASEZ CASEX CASE CARET BUFIF BUF BINNUM BEGIN AT ASSIGN ASSERT ASCNUM AND AMPERSAND ALWAYS
follow(idDotted) = WHILE VBAR TIMES SEMICOLON RPAREN REPEAT RCURLY RBRACK QUERY P_XNOR P_WILDNOTEQUAL P_WILDEQUAL P_TIMESCALE P_SUPPRESS_FAULTS P_SSRIGHT P_SRIGHT P_SLEFT P_RESETALL P_PROTECT P_POW P_PLUSCOLON P_OROR P_NOTEQUAL P_NOSUPPRESS_FAULTS P_NOR P_NAND P_MINUSGT P_MINUSCOLON P_LTE P_GTE P_EQUAL P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE P_CASENOTEQUAL P_CASEEQUAL P_ANDAND PREPROC PRAGMATIC PLUS OR MODULO MINUS LPAREN LESS LCURLY IF ID HASH GREATER FOREVER FOR EQUALS D_WRITE D_WARNING D_STOP D_READMEMH D_READMEMB D_MONITOR D_INFO D_FWRITEH D_FWRITE D_FINISH D_FFLUSH D_FDISPLAY D_FCLOSE D_FATAL D_ERROR D_DISPLAY D_C DOT DO DIVIDE DISABLE DEASSIGN COMMA COLON CASEZ CASEX CASE CARET BEGIN AT ASSIGN ASSERT AMPERSAND
follow(idArrayed) = WHILE VBAR TIMES SEMICOLON RPAREN REPEAT RCURLY RBRACK QUERY P_XNOR P_WILDNOTEQUAL P_WILDEQUAL P_TIMESCALE P_SUPPRESS_FAULTS P_SSRIGHT P_SRIGHT P_SLEFT P_RESETALL P_PROTECT P_POW P_PLUSCOLON P_OROR P_NOTEQUAL P_NOSUPPRESS_FAULTS P_NOR P_NAND P_MINUSGT P_MINUSCOLON P_LTE P_GTE P_EQUAL P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE P_CASENOTEQUAL P_CASEEQUAL P_ANDAND PREPROC PRAGMATIC PLUS OR MODULO MINUS LPAREN LESS LCURLY LBRACK IF ID HASH GREATER FOREVER FOR EQUALS D_WRITE D_WARNING D_STOP D_READMEMH D_READMEMB D_MONITOR D_INFO D_FWRITEH D_FWRITE D_FINISH D_FFLUSH D_FDISPLAY D_FCLOSE D_FATAL D_ERROR D_DISPLAY D_C DOT DO DIVIDE DISABLE DEASSIGN COMMA COLON CASEZ CASEX CASE CARET BEGIN AT ASSIGN ASSERT AMPERSAND
follow(generateRegion) = XOR XNOR WIRE TRI1 TRI0 TRANIF TRAN TASK TABLE SUPPLY1 SUPPLY0 SPECIFY REG REAL P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PULLUP PREPROC PRAGMATIC PMOS PARAMETER OUTPUT OR NOTIF NOT NOR NMOS NAND LOCALPARAM INTEGER INPUT INOUT INITIAL ID GENVAR GENERATE FUNCTION FINAL EVENT ENDMODULE D_ATTRIBUTE DEFPARAM DEFAULT COVER BUFIF BUF ASSIGN AND ALWAYS
follow(genTopBlock) = ENDGENERATE
follow(genItemList) = ENDGENERATE END
follow(genItemBlock) = XOR XNOR WIRE VBAR TRI1 TRI0 TRANIF TRAN TILDE TASK TABLE SUPPLY1 SUPPLY0 REG REAL P_XNOR P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_NOR P_NAND P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PULLUP PREPROC PRAGMATIC PMOS PLUS PLING PARAMETER OUTPUT OR OCTNUM NOTIF NOT NOR NMOS NAND MINUS LPAREN LOCALPARAM LCURLY INTNUM INTEGER INPUT INOUT INITIAL IF ID HEXNUM GENVAR FUNCTION FOR FLOATNUM FINAL EVENT ENDGENERATE ENDCASE END ELSE D_UNSIGNED D_TIME D_TEST_PLUSARGS D_STIME D_SSCANF D_SIGNED D_RANDOM D_ONEHOT0 D_ONEHOT D_ISUNKNOWN D_FSCANF D_FGETS D_FGETC D_FEOF D_COUNTONES D_COUNTDRIVERS D_CLOG2 D_C D_BITS D_ATTRIBUTE DEFPARAM DEFAULT DECNUM COVER CASE CARET BUFIF BUF BINNUM ASSIGN ASCNUM AND AMPERSAND ALWAYS
follow(genItemBegin) = XOR XNOR WIRE VBAR TRI1 TRI0 TRANIF TRAN TILDE TASK TABLE SUPPLY1 SUPPLY0 REG REAL P_XNOR P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_NOR P_NAND P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PULLUP PREPROC PRAGMATIC PMOS PLUS PLING PARAMETER OUTPUT OR OCTNUM NOTIF NOT NOR NMOS NAND MINUS LPAREN LOCALPARAM LCURLY INTNUM INTEGER INPUT INOUT INITIAL IF ID HEXNUM GENVAR FUNCTION FOR FLOATNUM FINAL EVENT ENDGENERATE ENDCASE END ELSE D_UNSIGNED D_TIME D_TEST_PLUSARGS D_STIME D_SSCANF D_SIGNED D_RANDOM D_ONEHOT0 D_ONEHOT D_ISUNKNOWN D_FSCANF D_FGETS D_FGETC D_FEOF D_COUNTONES D_COUNTDRIVERS D_CLOG2 D_C D_BITS D_ATTRIBUTE DEFPARAM DEFAULT DECNUM COVER CASE CARET BUFIF BUF BINNUM ASSIGN ASCNUM AND AMPERSAND ALWAYS
follow(genItem) = XOR XNOR WIRE VBAR TRI1 TRI0 TRANIF TRAN TILDE TASK TABLE SUPPLY1 SUPPLY0 REG REAL P_XNOR P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_NOR P_NAND P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PULLUP PREPROC PRAGMATIC PMOS PLUS PLING PARAMETER OUTPUT OR OCTNUM NOTIF NOT NOR NMOS NAND MINUS LPAREN LOCALPARAM LCURLY INTNUM INTEGER INPUT INOUT INITIAL IF ID HEXNUM GENVAR FUNCTION FOR FLOATNUM FINAL EVENT ENDGENERATE ENDCASE END ELSE D_UNSIGNED D_TIME D_TEST_PLUSARGS D_STIME D_SSCANF D_SIGNED D_RANDOM D_ONEHOT0 D_ONEHOT D_ISUNKNOWN D_FSCANF D_FGETS D_FGETC D_FEOF D_COUNTONES D_COUNTDRIVERS D_CLOG2 D_C D_BITS D_ATTRIBUTE DEFPARAM DEFAULT DECNUM COVER CASE CARET BUFIF BUF BINNUM ASSIGN ASCNUM AND AMPERSAND ALWAYS
follow(genCaseListE) = ENDCASE
follow(genCaseList) = VBAR TILDE P_XNOR P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_NOR P_NAND P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PREPROC PRAGMATIC PLUS PLING OCTNUM MINUS LPAREN LCURLY INTNUM ID HEXNUM FLOATNUM ENDCASE D_UNSIGNED D_TIME D_TEST_PLUSARGS D_STIME D_SSCANF D_SIGNED D_RANDOM D_ONEHOT0 D_ONEHOT D_ISUNKNOWN D_FSCANF D_FGETS D_FGETC D_FEOF D_COUNTONES D_COUNTDRIVERS D_CLOG2 D_C D_BITS DEFAULT DECNUM CARET BINNUM ASCNUM AMPERSAND
follow(gateXorPinList) = RPAREN COMMA
follow(gateXorList) = SEMICOLON COMMA
follow(gateXor) = SEMICOLON COMMA
follow(gateXnorList) = SEMICOLON COMMA
follow(gateXnor) = SEMICOLON COMMA
follow(gateUdpPinList) = RPAREN COMMA
follow(gateTranList) = SEMICOLON
follow(gateTranIfList) = SEMICOLON COMMA
follow(gateTranIf) = SEMICOLON COMMA
follow(gateTran) = SEMICOLON
follow(gatePullupList) = SEMICOLON COMMA
follow(gatePullup) = SEMICOLON COMMA
follow(gateOrPinList) = RPAREN COMMA
follow(gateOrList) = SEMICOLON COMMA
follow(gateOr) = SEMICOLON COMMA
follow(gateNotList) = SEMICOLON COMMA
follow(gateNot) = SEMICOLON COMMA
follow(gateNorList) = SEMICOLON COMMA
follow(gateNor) = SEMICOLON COMMA
follow(gateNandList) = SEMICOLON COMMA
follow(gateNand) = SEMICOLON COMMA
follow(gateMosList) = SEMICOLON COMMA
follow(gateMos) = SEMICOLON COMMA
follow(gateIdE) = LPAREN LBRACK
follow(gateDecl) = XOR XNOR WIRE VBAR TRI1 TRI0 TRANIF TRAN TILDE TASK TABLE SUPPLY1 SUPPLY0 SPECIFY REG REAL P_XNOR P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_NOR P_NAND P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PULLUP PREPROC PRAGMATIC PMOS PLUS PLING PARAMETER OUTPUT OR OCTNUM NOTIF NOT NOR NMOS NAND MINUS LPAREN LOCALPARAM LCURLY INTNUM INTEGER INPUT INOUT INITIAL IF ID HEXNUM GENVAR GENERATE FUNCTION FOR FLOATNUM FINAL EVENT ENDMODULE ENDGENERATE ENDCASE END ELSE D_UNSIGNED D_TIME D_TEST_PLUSARGS D_STIME D_SSCANF D_SIGNED D_RANDOM D_ONEHOT0 D_ONEHOT D_ISUNKNOWN D_FSCANF D_FGETS D_FGETC D_FEOF D_COUNTONES D_COUNTDRIVERS D_CLOG2 D_C D_BITS D_ATTRIBUTE DEFPARAM DEFAULT DECNUM COVER CASE CARET BUFIF BUF BINNUM ASSIGN ASCNUM AND AMPERSAND ALWAYS
follow(gateBufList) = SEMICOLON COMMA
follow(gateBufIfPinList) = RPAREN COMMA
follow(gateBufIfList) = SEMICOLON COMMA
follow(gateBufIf) = SEMICOLON COMMA
follow(gateBuf) = SEMICOLON COMMA
follow(gateAndPinList) = RPAREN COMMA
follow(gateAndList) = SEMICOLON COMMA
follow(gateAnd) = SEMICOLON COMMA
follow(funcVarList) = WHILE SEMICOLON REPEAT P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_MINUSGT P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PREPROC PRAGMATIC LCURLY IF ID HASH FOREVER FOR D_WRITE D_WARNING D_STOP D_READMEMH D_READMEMB D_MONITOR D_INFO D_FWRITEH D_FWRITE D_FINISH D_FFLUSH D_FDISPLAY D_FCLOSE D_FATAL D_ERROR D_DISPLAY D_C DO DISABLE DEASSIGN CASEZ CASEX CASE BEGIN AT ASSIGN ASSERT
follow(funcVar) = WIRE WHILE TRI1 TRI0 SUPPLY1 SUPPLY0 SEMICOLON REPEAT REG REAL P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_MINUSGT P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PREPROC PRAGMATIC PARAMETER OUTPUT LOCALPARAM LCURLY INTEGER INPUT INOUT IF ID HASH GENVAR FOREVER FOR EVENT D_WRITE D_WARNING D_STOP D_READMEMH D_READMEMB D_MONITOR D_INFO D_FWRITEH D_FWRITE D_FINISH D_FFLUSH D_FDISPLAY D_FCLOSE D_FATAL D_ERROR D_DISPLAY D_C DO DISABLE DEASSIGN CASEZ CASEX CASE BEGIN AT ASSIGN ASSERT
follow(funcTypeE) = ID
follow(funcRef) = VBAR TIMES SEMICOLON RPAREN RCURLY RBRACK QUERY P_XNOR P_WILDNOTEQUAL P_WILDEQUAL P_SSRIGHT P_SRIGHT P_SLEFT P_POW P_PLUSCOLON P_OROR P_NOTEQUAL P_NOR P_NAND P_MINUSCOLON P_LTE P_GTE P_EQUAL P_CASENOTEQUAL P_CASEEQUAL P_ANDAND PLUS MODULO MINUS LESS LCURLY GREATER DIVIDE COMMA COLON CARET AMPERSAND
follow(funcDecl) = XOR XNOR WIRE VBAR TRI1 TRI0 TRANIF TRAN TILDE TASK TABLE SUPPLY1 SUPPLY0 SPECIFY REG REAL P_XNOR P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_NOR P_NAND P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PULLUP PREPROC PRAGMATIC PMOS PLUS PLING PARAMETER OUTPUT OR OCTNUM NOTIF NOT NOR NMOS NAND MINUS LPAREN LOCALPARAM LCURLY INTNUM INTEGER INPUT INOUT INITIAL IF ID HEXNUM GENVAR GENERATE FUNCTION FOR FLOATNUM FINAL EVENT ENDMODULE ENDGENERATE ENDCASE END ELSE D_UNSIGNED D_TIME D_TEST_PLUSARGS D_STIME D_SSCANF D_SIGNED D_RANDOM D_ONEHOT0 D_ONEHOT D_ISUNKNOWN D_FSCANF D_FGETS D_FGETC D_FEOF D_COUNTONES D_COUNTDRIVERS D_CLOG2 D_C D_BITS D_ATTRIBUTE DEFPARAM DEFAULT DECNUM COVER CASE CARET BUFIF BUF BINNUM ASSIGN ASCNUM AND AMPERSAND ALWAYS
follow(funcArgs) = SEMICOLON
follow(floatnum) = WHILE VBAR TIMES TILDE SEMICOLON RPAREN REPEAT RCURLY RBRACK QUERY P_XNOR P_WILDNOTEQUAL P_WILDEQUAL P_TIMESCALE P_SUPPRESS_FAULTS P_SSRIGHT P_SRIGHT P_SLEFT P_RESETALL P_PROTECT P_POW P_PLUSCOLON P_OROR P_NOTEQUAL P_NOSUPPRESS_FAULTS P_NOR P_NAND P_MINUSGT P_MINUSCOLON P_LTE P_GTE P_EQUAL P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE P_CASENOTEQUAL P_CASEEQUAL P_ANDAND PREPROC PRAGMATIC PLUS PLING OCTNUM MODULO MINUS LPAREN LESS LCURLY LBRACK INTNUM IF ID HEXNUM HASH GREATER FOREVER FOR FLOATNUM D_WRITE D_WARNING D_UNSIGNED D_TIME D_TEST_PLUSARGS D_STOP D_STIME D_SSCANF D_SIGNED D_READMEMH D_READMEMB D_RANDOM D_ONEHOT0 D_ONEHOT D_MONITOR D_ISUNKNOWN D_INFO D_FWRITEH D_FWRITE D_FSCANF D_FINISH D_FGETS D_FGETC D_FFLUSH D_FEOF D_FDISPLAY D_FCLOSE D_FATAL D_ERROR D_DISPLAY D_COUNTONES D_COUNTDRIVERS D_CLOG2 D_C D_BITS DO DIVIDE DISABLE DECNUM DEASSIGN COMMA COLON CASEZ CASEX CASE CARET BINNUM BEGIN AT ASSIGN ASSERT ASCNUM AMPERSAND
follow(expression) = RPAREN P_NOTEQUAL P_EQUAL P_CASENOTEQUAL P_CASEEQUAL COMMA COLON
follow(exprStrText) = RPAREN COMMA
follow(exprNoStr) = VBAR TIMES SEMICOLON RPAREN RCURLY RBRACK QUERY P_XNOR P_WILDNOTEQUAL P_WILDEQUAL P_SSRIGHT P_SRIGHT P_SLEFT P_POW P_PLUSCOLON P_OROR P_NOTEQUAL P_NOR P_NAND P_MINUSCOLON P_LTE P_GTE P_EQUAL P_CASENOTEQUAL P_CASEEQUAL P_ANDAND PLUS MODULO MINUS LESS LCURLY GREATER DIVIDE COMMA COLON CARET AMPERSAND
follow(exprList) = RPAREN COMMA
follow(expr) = VBAR TIMES SEMICOLON RPAREN RCURLY RBRACK QUERY P_XNOR P_WILDNOTEQUAL P_WILDEQUAL P_SSRIGHT P_SRIGHT P_SLEFT P_POW P_PLUSCOLON P_OROR P_NOTEQUAL P_NOR P_NAND P_MINUSCOLON P_LTE P_GTE P_EQUAL P_CASENOTEQUAL P_CASEEQUAL P_ANDAND PLUS MODULO MINUS LESS LCURLY GREATER DIVIDE COMMA COLON CARET AMPERSAND
follow(eventControl) = WHILE SEMICOLON REPEAT P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_MINUSGT P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PREPROC PRAGMATIC LCURLY IF ID HASH FOREVER FOR D_WRITE D_WARNING D_STOP D_READMEMH D_READMEMB D_MONITOR D_INFO D_FWRITEH D_FWRITE D_FINISH D_FFLUSH D_FDISPLAY D_FCLOSE D_FATAL D_ERROR D_DISPLAY D_C DO DISABLE DEASSIGN CASEZ CASEX CASE BEGIN AT ASSIGN ASSERT
follow(endLabelE) = XOR XNOR WIRE WHILE VBAR TRI1 TRI0 TRANIF TRAN TILDE TASK TABLE SUPPLY1 SUPPLY0 SPECIFY SEMICOLON REPEAT REG REAL P_XNOR P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_NOR P_NAND P_MINUSGT P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PULLUP PREPROC PRAGMATIC PMOS PLUS PLING PARAMETER OUTPUT OR OCTNUM NOTIF NOT NOR NMOS NAND MINUS LPAREN LOCALPARAM LCURLY INTNUM INTEGER INPUT INOUT INITIAL IF ID HEXNUM HASH GENVAR GENERATE FUNCTION FOREVER FOR FLOATNUM FINAL EVENT ENDTASK ENDMODULE ENDGENERATE ENDFUNCTION ENDCASE END ELSE D_WRITE D_WARNING D_UNSIGNED D_TIME D_TEST_PLUSARGS D_STOP D_STIME D_SSCANF D_SIGNED D_READMEMH D_READMEMB D_RANDOM D_ONEHOT0 D_ONEHOT D_MONITOR D_ISUNKNOWN D_INFO D_FWRITEH D_FWRITE D_FSCANF D_FINISH D_FGETS D_FGETC D_FFLUSH D_FEOF D_FDISPLAY D_FCLOSE D_FATAL D_ERROR D_DISPLAY D_COUNTONES D_COUNTDRIVERS D_CLOG2 D_C D_BITS D_ATTRIBUTE DO DISABLE DEFPARAM DEFAULT DECNUM DEASSIGN COVER CASEZ CASEX CASE CARET BUFIF BUF BINNUM BEGIN AT ASSIGN ASSERT ASCNUM AND AMPERSAND ALWAYS
follow(edge_sensitive_path_declaration) = SEMICOLON
follow(edge_identifier) = ID
follow(edge_descriptor) = RBRACK COMMA
follow(edge_control_specifier_5) = RBRACK COMMA
follow(edge2) = RPAREN
follow(edge1) = RPAREN QUERY INTNUM ILLEGAL ID
follow(dlyTerm) = WHILE VBAR TILDE SEMICOLON RPAREN REPEAT P_XNOR P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_NOR P_NAND P_MINUSGT P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PREPROC PRAGMATIC PLUS PLING OCTNUM MINUS LPAREN LCURLY LBRACK INTNUM IF ID HEXNUM HASH FOREVER FOR FLOATNUM D_WRITE D_WARNING D_UNSIGNED D_TIME D_TEST_PLUSARGS D_STOP D_STIME D_SSCANF D_SIGNED D_READMEMH D_READMEMB D_RANDOM D_ONEHOT0 D_ONEHOT D_MONITOR D_ISUNKNOWN D_INFO D_FWRITEH D_FWRITE D_FSCANF D_FINISH D_FGETS D_FGETC D_FFLUSH D_FEOF D_FDISPLAY D_FCLOSE D_FATAL D_ERROR D_DISPLAY D_COUNTONES D_COUNTDRIVERS D_CLOG2 D_C D_BITS DO DISABLE DECNUM DEASSIGN COMMA COLON CASEZ CASEX CASE CARET BINNUM BEGIN AT ASSIGN ASSERT ASCNUM AMPERSAND
follow(delayrange) = ID
follow(delayed_reference) = RPAREN COMMA
follow(delayed_data) = RPAREN
follow(delayStrength) = VBAR TILDE P_XNOR P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_NOR P_NAND P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PREPROC PRAGMATIC PLUS PLING OCTNUM MINUS LPAREN LCURLY LBRACK INTNUM ID HEXNUM FLOATNUM D_UNSIGNED D_TIME D_TEST_PLUSARGS D_STIME D_SSCANF D_SIGNED D_RANDOM D_ONEHOT0 D_ONEHOT D_ISUNKNOWN D_FSCANF D_FGETS D_FGETC D_FEOF D_COUNTONES D_COUNTDRIVERS D_CLOG2 D_C D_BITS DECNUM CARET BINNUM ASCNUM AMPERSAND
follow(delayE) = VBAR TILDE P_XNOR P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_NOR P_NAND P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PREPROC PRAGMATIC PLUS PLING OCTNUM MINUS LPAREN LCURLY INTNUM ID HEXNUM FLOATNUM D_UNSIGNED D_TIME D_TEST_PLUSARGS D_STIME D_SSCANF D_SIGNED D_RANDOM D_ONEHOT0 D_ONEHOT D_ISUNKNOWN D_FSCANF D_FGETS D_FGETC D_FEOF D_COUNTONES D_COUNTDRIVERS D_CLOG2 D_C D_BITS DECNUM CARET BINNUM ASCNUM AMPERSAND
follow(delay) = WHILE VBAR TILDE SEMICOLON REPEAT P_XNOR P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_NOR P_NAND P_MINUSGT P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PREPROC PRAGMATIC PLUS PLING OCTNUM MINUS LPAREN LCURLY INTNUM IF ID HEXNUM HASH FOREVER FOR FLOATNUM D_WRITE D_WARNING D_UNSIGNED D_TIME D_TEST_PLUSARGS D_STOP D_STIME D_SSCANF D_SIGNED D_READMEMH D_READMEMB D_RANDOM D_ONEHOT0 D_ONEHOT D_MONITOR D_ISUNKNOWN D_INFO D_FWRITEH D_FWRITE D_FSCANF D_FINISH D_FGETS D_FGETC D_FFLUSH D_FEOF D_FDISPLAY D_FCLOSE D_FATAL D_ERROR D_DISPLAY D_COUNTONES D_COUNTDRIVERS D_CLOG2 D_C D_BITS DO DISABLE DECNUM DEASSIGN CASEZ CASEX CASE CARET BINNUM BEGIN AT ASSIGN ASSERT ASCNUM AMPERSAND
follow(defpOne) = SEMICOLON COMMA
follow(defpList) = SEMICOLON COMMA
follow(csr_edge_sensitive_path_description) = EQUALS
follow(cover_property_statement) = XOR XNOR WIRE VBAR TRI1 TRI0 TRANIF TRAN TILDE TASK TABLE SUPPLY1 SUPPLY0 SPECIFY REG REAL P_XNOR P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_NOR P_NAND P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PULLUP PREPROC PRAGMATIC PMOS PLUS PLING PARAMETER OUTPUT OR OCTNUM NOTIF NOT NOR NMOS NAND MINUS LPAREN LOCALPARAM LCURLY INTNUM INTEGER INPUT INOUT INITIAL IF ID HEXNUM GENVAR GENERATE FUNCTION FOR FLOATNUM FINAL EVENT ENDMODULE ENDGENERATE ENDCASE END ELSE D_UNSIGNED D_TIME D_TEST_PLUSARGS D_STIME D_SSCANF D_SIGNED D_RANDOM D_ONEHOT0 D_ONEHOT D_ISUNKNOWN D_FSCANF D_FGETS D_FGETC D_FEOF D_COUNTONES D_COUNTDRIVERS D_CLOG2 D_C D_BITS D_ATTRIBUTE DEFPARAM DEFAULT DECNUM COVER CASE CARET BUFIF BUF BINNUM ASSIGN ASCNUM AND AMPERSAND ALWAYS
follow(constant_range_expression) = RBRACK
follow(constant_mintypmax_expression) = SEMICOLON RPAREN RBRACK COMMA
follow(constant_expression) = SEMICOLON RPAREN RBRACK P_PLUSCOLON P_MINUSCOLON LCURLY COMMA COLON
follow(constExpr) = SEMICOLON RBRACK LCURLY COMMA COLON
follow(concurrent_assertion_statement) = XOR XNOR WIRE VBAR TRI1 TRI0 TRANIF TRAN TILDE TASK TABLE SUPPLY1 SUPPLY0 SPECIFY REG REAL P_XNOR P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_NOR P_NAND P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PULLUP PREPROC PRAGMATIC PMOS PLUS PLING PARAMETER OUTPUT OR OCTNUM NOTIF NOT NOR NMOS NAND MINUS LPAREN LOCALPARAM LCURLY INTNUM INTEGER INPUT INOUT INITIAL IF ID HEXNUM GENVAR GENERATE FUNCTION FOR FLOATNUM FINAL EVENT ENDMODULE ENDGENERATE ENDCASE END ELSE D_UNSIGNED D_TIME D_TEST_PLUSARGS D_STIME D_SSCANF D_SIGNED D_RANDOM D_ONEHOT0 D_ONEHOT D_ISUNKNOWN D_FSCANF D_FGETS D_FGETC D_FEOF D_COUNTONES D_COUNTDRIVERS D_CLOG2 D_C D_BITS D_ATTRIBUTE DEFPARAM DEFAULT DECNUM COVER CASE CARET BUFIF BUF BINNUM ASSIGN ASCNUM AND AMPERSAND ALWAYS
follow(concurrent_assertion_item) = XOR XNOR WIRE VBAR TRI1 TRI0 TRANIF TRAN TILDE TASK TABLE SUPPLY1 SUPPLY0 SPECIFY REG REAL P_XNOR P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_NOR P_NAND P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PULLUP PREPROC PRAGMATIC PMOS PLUS PLING PARAMETER OUTPUT OR OCTNUM NOTIF NOT NOR NMOS NAND MINUS LPAREN LOCALPARAM LCURLY INTNUM INTEGER INPUT INOUT INITIAL IF ID HEXNUM GENVAR GENERATE FUNCTION FOR FLOATNUM FINAL EVENT ENDMODULE ENDGENERATE ENDCASE END ELSE D_UNSIGNED D_TIME D_TEST_PLUSARGS D_STIME D_SSCANF D_SIGNED D_RANDOM D_ONEHOT0 D_ONEHOT D_ISUNKNOWN D_FSCANF D_FGETS D_FGETC D_FEOF D_COUNTONES D_COUNTDRIVERS D_CLOG2 D_C D_BITS D_ATTRIBUTE DEFPARAM DEFAULT DECNUM COVER CASE CARET BUFIF BUF BINNUM ASSIGN ASCNUM AND AMPERSAND ALWAYS
follow(concIdList) = RCURLY COMMA
follow(commaVRDListE) = RPAREN
follow(commaEListE) = RPAREN
follow(colon_identifier) = VBAR TILDE_VBAR TILDE P_XNOR P_NXOR P_NAND PLING OCTNUM LPAREN LCURLY INTNUM ID HEXNUM DECNUM CARET BINNUM AMPERSAND
follow(clocking_declaration) = XOR XNOR WIRE VBAR TRI1 TRI0 TRANIF TRAN TILDE TASK TABLE SUPPLY1 SUPPLY0 SPECIFY REG REAL P_XNOR P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_NOR P_NAND P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PULLUP PREPROC PRAGMATIC PMOS PLUS PLING PARAMETER OUTPUT OR OCTNUM NOTIF NOT NOR NMOS NAND MINUS LPAREN LOCALPARAM LCURLY INTNUM INTEGER INPUT INOUT INITIAL IF ID HEXNUM GENVAR GENERATE FUNCTION FOR FLOATNUM FINAL EVENT ENDMODULE ENDGENERATE ENDCASE END ELSE D_UNSIGNED D_TIME D_TEST_PLUSARGS D_STIME D_SSCANF D_SIGNED D_RANDOM D_ONEHOT0 D_ONEHOT D_ISUNKNOWN D_FSCANF D_FGETS D_FGETC D_FEOF D_COUNTONES D_COUNTDRIVERS D_CLOG2 D_C D_BITS D_ATTRIBUTE DEFPARAM DEFAULT DECNUM COVER CASE CARET BUFIF BUF BINNUM ASSIGN ASCNUM AND AMPERSAND ALWAYS
follow(cellpinList) = RPAREN
follow(cellpinItem) = RPAREN COMMA
follow(cellpinItList) = RPAREN COMMA
follow(cateList) = RCURLY COMMA
follow(caseListE) = ENDCASE
follow(caseList) = VBAR TILDE P_XNOR P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_NOR P_NAND P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PREPROC PRAGMATIC PLUS PLING OCTNUM MINUS LPAREN LCURLY INTNUM ID HEXNUM FLOATNUM ENDCASE D_UNSIGNED D_TIME D_TEST_PLUSARGS D_STIME D_SSCANF D_SIGNED D_RANDOM D_ONEHOT0 D_ONEHOT D_ISUNKNOWN D_FSCANF D_FGETS D_FGETC D_FEOF D_COUNTONES D_COUNTDRIVERS D_CLOG2 D_C D_BITS DEFAULT DECNUM CARET BINNUM ASCNUM AMPERSAND
follow(caseCondList) = COMMA COLON
follow(caseAttrE) = VBAR TILDE P_XNOR P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_NOR P_NAND P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PREPROC PRAGMATIC PLUS PLING OCTNUM MINUS LPAREN LCURLY INTNUM ID HEXNUM FLOATNUM ENDCASE D_UNSIGNED D_TIME D_TEST_PLUSARGS D_STIME D_SSCANF D_SIGNED D_RANDOM D_ONEHOT0 D_ONEHOT D_ISUNKNOWN D_FSCANF D_FGETS D_FGETC D_FEOF D_COUNTONES D_COUNTDRIVERS D_CLOG2 D_C D_BITS DEFAULT DECNUM CARET BINNUM ASCNUM AMPERSAND
follow(case) = LPAREN
follow(cStrList) = RPAREN
follow(binary_module_path_operator) = VBAR TILDE_VBAR TILDE P_XNOR P_NXOR P_NAND PLING OCTNUM LPAREN LCURLY INTNUM ID HEXNUM DECNUM CARET BINNUM AMPERSAND
follow(attrDecl) = XOR XNOR WIRE VBAR TRI1 TRI0 TRANIF TRAN TILDE TASK TABLE SUPPLY1 SUPPLY0 SPECIFY REG REAL P_XNOR P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_NOR P_NAND P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PULLUP PREPROC PRAGMATIC PMOS PLUS PLING PARAMETER OUTPUT OR OCTNUM NOTIF NOT NOR NMOS NAND MINUS LPAREN LOCALPARAM LCURLY INTNUM INTEGER INPUT INOUT INITIAL IF ID HEXNUM GENVAR GENERATE FUNCTION FOR FLOATNUM FINAL EVENT ENDMODULE ENDGENERATE ENDCASE END ELSE D_UNSIGNED D_TIME D_TEST_PLUSARGS D_STIME D_SSCANF D_SIGNED D_RANDOM D_ONEHOT0 D_ONEHOT D_ISUNKNOWN D_FSCANF D_FGETS D_FGETC D_FEOF D_COUNTONES D_COUNTDRIVERS D_CLOG2 D_C D_BITS D_ATTRIBUTE DEFPARAM DEFAULT DECNUM COVER CASE CARET BUFIF BUF BINNUM ASSIGN ASCNUM AND AMPERSAND ALWAYS
follow(RangeListE) = SEMICOLON EQUALS COMMA
follow(RangeList) = SEMICOLON LBRACK EQUALS COMMA
follow(PortV2kSig) = RPAREN EQUALS COMMA
follow(PortV2kSecond) = RPAREN COMMA
follow(PortV2kList) = RPAREN
follow(PortV2kInit) = RPAREN COMMA
follow(PortV2kDecl) = RPAREN COMMA
follow(PortV2kArgs) = RPAREN
follow(PortRangeE) = RPAREN COMMA
follow(PortList) = RPAREN
follow(PortDirection) = WIRE UNSIGNED TRI1 TRI0 SUPPLY1 SUPPLY0 SIGNED REG REAL LBRACK INTEGER ID EVENT
follow(PortDecl) = XOR XNOR WIRE WHILE VBAR TRI1 TRI0 TRANIF TRAN TILDE TASK TABLE SUPPLY1 SUPPLY0 SPECIFY SEMICOLON REPEAT REG REAL P_XNOR P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_NOR P_NAND P_MINUSGT P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PULLUP PREPROC PRAGMATIC PMOS PLUS PLING PARAMETER OUTPUT OR OCTNUM NOTIF NOT NOR NMOS NAND MINUS LPAREN LOCALPARAM LCURLY INTNUM INTEGER INPUT INOUT INITIAL IF ID HEXNUM HASH GENVAR GENERATE FUNCTION FOREVER FOR FLOATNUM FINAL EVENT ENDPRIMITIVE ENDMODULE ENDGENERATE ENDCASE END ELSE D_WRITE D_WARNING D_UNSIGNED D_TIME D_TEST_PLUSARGS D_STOP D_STIME D_SSCANF D_SIGNED D_READMEMH D_READMEMB D_RANDOM D_ONEHOT0 D_ONEHOT D_MONITOR D_ISUNKNOWN D_INFO D_FWRITEH D_FWRITE D_FSCANF D_FINISH D_FGETS D_FGETC D_FFLUSH D_FEOF D_FDISPLAY D_FCLOSE D_FATAL D_ERROR D_DISPLAY D_COUNTONES D_COUNTDRIVERS D_CLOG2 D_C D_BITS D_ATTRIBUTE DO DISABLE DEFPARAM DEFAULT DECNUM DEASSIGN COVER CASEZ CASEX CASE CARET BUFIF BUF BINNUM BEGIN AT ASSIGN ASSERT ASCNUM AND AMPERSAND ALWAYS
follow(Port) = RPAREN COMMA
follow(AssignOne) = SEMICOLON COMMA
follow(AssignList) = SEMICOLON COMMA
follow(AssertStmt) = XOR XNOR WIRE WHILE VBAR TRI1 TRI0 TRANIF TRAN TILDE TASK TABLE SUPPLY1 SUPPLY0 SPECIFY SEMICOLON REPEAT REG REAL P_XNOR P_TIMESCALE P_SUPPRESS_FAULTS P_RESETALL P_PROTECT P_NOSUPPRESS_FAULTS P_NOR P_NAND P_MINUSGT P_ENDPROTECT P_ENDCELLDEFINE P_ENABLE_PORTFAULTS P_DISABLE_PORTFAULTS P_DELAY_MODE_PATH P_CELLDEFINE PULLUP PREPROC PRAGMATIC PMOS PLUS PLING PARAMETER OUTPUT OR OCTNUM NOTIF NOT NOR NMOS NAND MINUS LPAREN LOCALPARAM LCURLY INTNUM INTEGER INPUT INOUT INITIAL IF ID HEXNUM HASH GENVAR GENERATE FUNCTION FOREVER FOR FLOATNUM FINAL EVENT ENDTASK ENDMODULE ENDGENERATE ENDFUNCTION ENDCASE END ELSE D_WRITE D_WARNING D_UNSIGNED D_TIME D_TEST_PLUSARGS D_STOP D_STIME D_SSCANF D_SIGNED D_READMEMH D_READMEMB D_RANDOM D_ONEHOT0 D_ONEHOT D_MONITOR D_ISUNKNOWN D_INFO D_FWRITEH D_FWRITE D_FSCANF D_FINISH D_FGETS D_FGETC D_FFLUSH D_FEOF D_FDISPLAY D_FCLOSE D_FATAL D_ERROR D_DISPLAY D_COUNTONES D_COUNTDRIVERS D_CLOG2 D_C D_BITS D_ATTRIBUTE DO DISABLE DEFPARAM DEFAULT DECNUM DEASSIGN COVER CASEZ CASEX CASE CARET BUFIF BUF BINNUM BEGIN AT ASSIGN ASSERT ASCNUM AND AMPERSAND ALWAYS
follow(Anyrange) = SEMICOLON LBRACK ID HASH EQUALS COMMA
Built an LR(0) automaton with 10811 states.
The grammar is not SLR(1) -- 79 states have a conflict.
The construction mode is pager.
Built an LR(1) automaton with 10829 states.
1104 shift/reduce conflicts were silently solved.
Warning: 14 states have shift/reduce conflicts.
Warning: 14 states have reduce/reduce conflicts.
Warning: 81 shift/reduce conflicts were arbitrarily resolved.
Warning: 260 reduce/reduce conflicts were arbitrarily resolved.
3376 out of 10829 states have a default reduction.
2375 out of 10829 states are represented.
0 out of 534 symbols keep track of their start position.
0 out of 534 symbols keep track of their end position.
3207 out of 3491 productions exploit shiftreduce optimization.
14547 functions before inlining, 524 functions after inlining.
