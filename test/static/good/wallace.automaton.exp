State 0:
## Known stack suffix:
##
## LR(1) items:
phrase' -> . phrase [ # ]
## Transitions:
-- On VALUE shift to state 1
-- On UNIT shift to state 108
-- On TYPE shift to state 109
-- On TRY shift to state 121
-- On TRUE shift to state 122
-- On STRINGCONST shift to state 123
-- On SHARP shift to state 278
-- On REF shift to state 124
-- On REC shift to state 126
-- On RAISE shift to state 160
-- On MATCH shift to state 163
-- On LPAREN shift to state 125
-- On LET shift to state 280
-- On LBRACKETBAR shift to state 161
-- On LBRACKET shift to state 162
-- On LBRACE shift to state 169
-- On INTCONST shift to state 133
-- On INCLUDE shift to state 286
-- On IF shift to state 172
-- On IDENT shift to state 173
-- On FUNCTION shift to state 206
-- On FUN shift to state 209
-- On FLOATCONST shift to state 135
-- On FALSE shift to state 136
-- On CONSTRUCTOR shift to state 174
-- On CHARCONST shift to state 139
-- On BANG shift to state 176
-- On phrase shift to state 288
-- On expression3 shift to state 212
-- On expression2 shift to state 213
-- On expression1 shift to state 195
-- On expression0 shift to state 186
-- On expression shift to state 289
-- On constant shift to state 185
## Reductions:

State 1:
## Known stack suffix:
## VALUE
## LR(1) items:
phrase -> VALUE . IDENT COLON type_scheme SEMISEMI [ # ]
## Transitions:
-- On IDENT shift to state 2
## Reductions:

State 2:
## Known stack suffix:
## VALUE IDENT
## LR(1) items:
phrase -> VALUE IDENT . COLON type_scheme SEMISEMI [ # ]
## Transitions:
-- On COLON shift to state 3
## Reductions:

State 3:
## Known stack suffix:
## VALUE IDENT COLON
## LR(1) items:
phrase -> VALUE IDENT COLON . type_scheme SEMISEMI [ # ]
## Transitions:
-- On UNIT shift to state 4
-- On STRING shift to state 5
-- On QUOTE shift to state 6
-- On PLUS shift to state 7
-- On PERCENT shift to state 8
-- On MINUS shift to state 9
-- On LPAREN shift to state 10
-- On LBRACKET shift to state 11
-- On LBRACE shift to state 13
-- On INTCONST shift to state 16
-- On INT shift to state 17
-- On IDENT shift to state 18
-- On FLOAT shift to state 19
-- On COERCE shift to state 62
-- On CHAR shift to state 20
-- On BOOL shift to state 21
-- On variable_leader shift to state 22
-- On type_scheme shift to state 95
-- On type1 shift to state 97
-- On type0 shift to state 25
## Reductions:

State 4:
## Known stack suffix:
## UNIT
## LR(1) items:
type0 -> UNIT . [ STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE RAISES IDENT EQUAL COMMA COERCEBACK COERCE BAR ARROW ]
## Transitions:
## Reductions:
-- On STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE RAISES IDENT EQUAL COMMA COERCEBACK COERCE BAR ARROW
--   reduce production type0 -> UNIT

State 5:
## Known stack suffix:
## STRING
## LR(1) items:
type0 -> STRING . [ STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE RAISES IDENT EQUAL COMMA COERCEBACK COERCE BAR ARROW ]
## Transitions:
## Reductions:
-- On STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE RAISES IDENT EQUAL COMMA COERCEBACK COERCE BAR ARROW
--   reduce production type0 -> STRING

State 6:
## Known stack suffix:
## QUOTE
## LR(1) items:
variable_leader -> QUOTE . [ IDENT ]
## Transitions:
## Reductions:
-- On IDENT
--   reduce production variable_leader -> QUOTE

State 7:
## Known stack suffix:
## PLUS
## LR(1) items:
variable_leader -> PLUS . [ IDENT ]
## Transitions:
## Reductions:
-- On IDENT
--   reduce production variable_leader -> PLUS

State 8:
## Known stack suffix:
## PERCENT
## LR(1) items:
variable_leader -> PERCENT . [ IDENT ]
## Transitions:
## Reductions:
-- On IDENT
--   reduce production variable_leader -> PERCENT

State 9:
## Known stack suffix:
## MINUS
## LR(1) items:
variable_leader -> MINUS . [ IDENT ]
## Transitions:
## Reductions:
-- On IDENT
--   reduce production variable_leader -> MINUS

State 10:
## Known stack suffix:
## LPAREN
## LR(1) items:
type0 -> LPAREN . type1 COMMA type_comma_list RPAREN IDENT [ STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE RAISES IDENT EQUAL COMMA COERCEBACK COERCE BAR ARROW ]
type0 -> LPAREN . type1 COMMA type_comma_list RPAREN REF [ STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE RAISES IDENT EQUAL COMMA COERCEBACK COERCE BAR ARROW ]
type0 -> LPAREN . type1 RPAREN [ STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE RAISES IDENT EQUAL COMMA COERCEBACK COERCE BAR ARROW ]
## Transitions:
-- On UNIT shift to state 4
-- On STRING shift to state 5
-- On QUOTE shift to state 6
-- On PLUS shift to state 7
-- On PERCENT shift to state 8
-- On MINUS shift to state 9
-- On LPAREN shift to state 10
-- On LBRACKET shift to state 11
-- On LBRACE shift to state 13
-- On INTCONST shift to state 16
-- On INT shift to state 17
-- On IDENT shift to state 18
-- On FLOAT shift to state 19
-- On CHAR shift to state 20
-- On BOOL shift to state 21
-- On variable_leader shift to state 22
-- On type1 shift to state 52
-- On type0 shift to state 25
## Reductions:

State 11:
## Known stack suffix:
## LBRACKET
## LR(1) items:
type0 -> LBRACKET . variant_row RBRACKET [ STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE RAISES IDENT EQUAL COMMA COERCEBACK COERCE BAR ARROW ]
## Transitions:
-- On UNIT shift to state 4
-- On STRING shift to state 5
-- On QUOTE shift to state 6
-- On PRE shift to state 12
-- On PLUS shift to state 7
-- On PERCENT shift to state 8
-- On MISSING shift to state 14
-- On MINUS shift to state 9
-- On MAYBE shift to state 15
-- On LPAREN shift to state 10
-- On LBRACKET shift to state 11
-- On LBRACE shift to state 13
-- On INTCONST shift to state 16
-- On INT shift to state 17
-- On IDENT shift to state 18
-- On FLOAT shift to state 19
-- On CONSTRUCTOR shift to state 44
-- On CHAR shift to state 20
-- On BOOL shift to state 21
-- On ABS shift to state 35
-- On variant_row shift to state 50
-- On variable_leader shift to state 22
-- On type1 shift to state 36
-- On type0 shift to state 25
-- On row_type shift to state 49
## Reductions:

State 12:
## Known stack suffix:
## PRE
## LR(1) items:
row_type -> PRE . type1 [ SEMI RBRACKET RBRACE ]
## Transitions:
-- On UNIT shift to state 4
-- On STRING shift to state 5
-- On QUOTE shift to state 6
-- On PLUS shift to state 7
-- On PERCENT shift to state 8
-- On MINUS shift to state 9
-- On LPAREN shift to state 10
-- On LBRACKET shift to state 11
-- On LBRACE shift to state 13
-- On INTCONST shift to state 16
-- On INT shift to state 17
-- On IDENT shift to state 18
-- On FLOAT shift to state 19
-- On CHAR shift to state 20
-- On BOOL shift to state 21
-- On variable_leader shift to state 22
-- On type1 shift to state 43
-- On type0 shift to state 25
## Reductions:

State 13:
## Known stack suffix:
## LBRACE
## LR(1) items:
type0 -> LBRACE . record_row RBRACE [ STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE RAISES IDENT EQUAL COMMA COERCEBACK COERCE BAR ARROW ]
## Transitions:
-- On UNIT shift to state 4
-- On STRING shift to state 5
-- On QUOTE shift to state 6
-- On PRE shift to state 12
-- On PLUS shift to state 7
-- On PERCENT shift to state 8
-- On MISSING shift to state 14
-- On MINUS shift to state 9
-- On MAYBE shift to state 15
-- On LPAREN shift to state 10
-- On LBRACKET shift to state 11
-- On LBRACE shift to state 13
-- On INTCONST shift to state 16
-- On INT shift to state 17
-- On IDENT shift to state 33
-- On FLOAT shift to state 19
-- On CHAR shift to state 20
-- On BOOL shift to state 21
-- On ABS shift to state 35
-- On variable_leader shift to state 22
-- On type1 shift to state 36
-- On type0 shift to state 25
-- On row_type shift to state 39
-- On record_row shift to state 41
## Reductions:

State 14:
## Known stack suffix:
## MISSING
## LR(1) items:
row_type -> MISSING . [ SEMI RBRACKET RBRACE ]
## Transitions:
## Reductions:
-- On SEMI RBRACKET RBRACE
--   reduce production row_type -> MISSING

State 15:
## Known stack suffix:
## MAYBE
## LR(1) items:
row_type -> MAYBE . type1 [ SEMI RBRACKET RBRACE ]
## Transitions:
-- On UNIT shift to state 4
-- On STRING shift to state 5
-- On QUOTE shift to state 6
-- On PLUS shift to state 7
-- On PERCENT shift to state 8
-- On MINUS shift to state 9
-- On LPAREN shift to state 10
-- On LBRACKET shift to state 11
-- On LBRACE shift to state 13
-- On INTCONST shift to state 16
-- On INT shift to state 17
-- On IDENT shift to state 18
-- On FLOAT shift to state 19
-- On CHAR shift to state 20
-- On BOOL shift to state 21
-- On variable_leader shift to state 22
-- On type1 shift to state 24
-- On type0 shift to state 25
## Reductions:

State 16:
## Known stack suffix:
## INTCONST
## LR(1) items:
type0 -> INTCONST . [ STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE RAISES IDENT EQUAL COMMA COERCEBACK COERCE BAR ARROW ]
## Transitions:
## Reductions:
-- On STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE RAISES IDENT EQUAL COMMA COERCEBACK COERCE BAR ARROW
--   reduce production type0 -> INTCONST

State 17:
## Known stack suffix:
## INT
## LR(1) items:
type0 -> INT . [ STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE RAISES IDENT EQUAL COMMA COERCEBACK COERCE BAR ARROW ]
## Transitions:
## Reductions:
-- On STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE RAISES IDENT EQUAL COMMA COERCEBACK COERCE BAR ARROW
--   reduce production type0 -> INT

State 18:
## Known stack suffix:
## IDENT
## LR(1) items:
type0 -> IDENT . [ STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE RAISES IDENT EQUAL COMMA COERCEBACK COERCE BAR ARROW ]
## Transitions:
## Reductions:
-- On STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE RAISES IDENT EQUAL COMMA COERCEBACK COERCE BAR ARROW
--   reduce production type0 -> IDENT

State 19:
## Known stack suffix:
## FLOAT
## LR(1) items:
type0 -> FLOAT . [ STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE RAISES IDENT EQUAL COMMA COERCEBACK COERCE BAR ARROW ]
## Transitions:
## Reductions:
-- On STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE RAISES IDENT EQUAL COMMA COERCEBACK COERCE BAR ARROW
--   reduce production type0 -> FLOAT

State 20:
## Known stack suffix:
## CHAR
## LR(1) items:
type0 -> CHAR . [ STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE RAISES IDENT EQUAL COMMA COERCEBACK COERCE BAR ARROW ]
## Transitions:
## Reductions:
-- On STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE RAISES IDENT EQUAL COMMA COERCEBACK COERCE BAR ARROW
--   reduce production type0 -> CHAR

State 21:
## Known stack suffix:
## BOOL
## LR(1) items:
type0 -> BOOL . [ STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE RAISES IDENT EQUAL COMMA COERCEBACK COERCE BAR ARROW ]
## Transitions:
## Reductions:
-- On STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE RAISES IDENT EQUAL COMMA COERCEBACK COERCE BAR ARROW
--   reduce production type0 -> BOOL

State 22:
## Known stack suffix:
## variable_leader
## LR(1) items:
type0 -> variable_leader . IDENT [ STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE RAISES IDENT EQUAL COMMA COERCEBACK COERCE BAR ARROW ]
## Transitions:
-- On IDENT shift to state 23
## Reductions:

State 23:
## Known stack suffix:
## variable_leader IDENT
## LR(1) items:
type0 -> variable_leader IDENT . [ STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE RAISES IDENT EQUAL COMMA COERCEBACK COERCE BAR ARROW ]
## Transitions:
## Reductions:
-- On STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE RAISES IDENT EQUAL COMMA COERCEBACK COERCE BAR ARROW
--   reduce production type0 -> variable_leader IDENT

State 24:
## Known stack suffix:
## MAYBE type1
## LR(1) items:
row_type -> MAYBE type1 . [ SEMI RBRACKET RBRACE ]
## Transitions:
## Reductions:
-- On SEMI RBRACKET RBRACE
--   reduce production row_type -> MAYBE type1

State 25:
## Known stack suffix:
## type0
## LR(1) items:
type0 -> type0 . STAR type0 [ STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE RAISES IDENT EQUAL COMMA COERCEBACK COERCE BAR ARROW ]
type0 -> type0 . IDENT [ STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE RAISES IDENT EQUAL COMMA COERCEBACK COERCE BAR ARROW ]
type1 -> type0 . [ SEMISEMI SEMI RPAREN RBRACKET RBRACE RAISES EQUAL COMMA COERCEBACK COERCE BAR ]
type1 -> type0 . ARROW type1 RAISES type0 [ SEMISEMI SEMI RPAREN RBRACKET RBRACE RAISES EQUAL COMMA COERCEBACK COERCE BAR ]
## Transitions:
-- On STAR shift to state 26
-- On IDENT shift to state 28
-- On ARROW shift to state 29
## Reductions:
-- On SEMISEMI SEMI RPAREN RBRACKET RBRACE RAISES EQUAL COMMA COERCEBACK COERCE BAR
--   reduce production type1 -> type0

State 26:
## Known stack suffix:
## type0 STAR
## LR(1) items:
type0 -> type0 STAR . type0 [ STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE RAISES IDENT EQUAL COMMA COERCEBACK COERCE BAR ARROW ]
## Transitions:
-- On UNIT shift to state 4
-- On STRING shift to state 5
-- On QUOTE shift to state 6
-- On PLUS shift to state 7
-- On PERCENT shift to state 8
-- On MINUS shift to state 9
-- On LPAREN shift to state 10
-- On LBRACKET shift to state 11
-- On LBRACE shift to state 13
-- On INTCONST shift to state 16
-- On INT shift to state 17
-- On IDENT shift to state 18
-- On FLOAT shift to state 19
-- On CHAR shift to state 20
-- On BOOL shift to state 21
-- On variable_leader shift to state 22
-- On type0 shift to state 27
## Reductions:

State 27:
## Known stack suffix:
## type0 STAR type0
## LR(1) items:
type0 -> type0 . STAR type0 [ STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE RAISES IDENT EQUAL COMMA COERCEBACK COERCE BAR ARROW ]
type0 -> type0 STAR type0 . [ STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE RAISES IDENT EQUAL COMMA COERCEBACK COERCE BAR ARROW ]
type0 -> type0 . IDENT [ STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE RAISES IDENT EQUAL COMMA COERCEBACK COERCE BAR ARROW ]
## Transitions:
-- On STAR shift to state 26
-- On IDENT shift to state 28
## Reductions:
-- On STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE RAISES IDENT EQUAL COMMA COERCEBACK COERCE BAR ARROW
--   reduce production type0 -> type0 STAR type0
** Conflict on STAR IDENT

State 28:
## Known stack suffix:
## type0 IDENT
## LR(1) items:
type0 -> type0 IDENT . [ STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE RAISES IDENT EQUAL COMMA COERCEBACK COERCE BAR ARROW ]
## Transitions:
## Reductions:
-- On STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE RAISES IDENT EQUAL COMMA COERCEBACK COERCE BAR ARROW
--   reduce production type0 -> type0 IDENT

State 29:
## Known stack suffix:
## type0 ARROW
## LR(1) items:
type1 -> type0 ARROW . type1 RAISES type0 [ SEMISEMI SEMI RPAREN RBRACKET RBRACE RAISES EQUAL COMMA COERCEBACK COERCE BAR ]
## Transitions:
-- On UNIT shift to state 4
-- On STRING shift to state 5
-- On QUOTE shift to state 6
-- On PLUS shift to state 7
-- On PERCENT shift to state 8
-- On MINUS shift to state 9
-- On LPAREN shift to state 10
-- On LBRACKET shift to state 11
-- On LBRACE shift to state 13
-- On INTCONST shift to state 16
-- On INT shift to state 17
-- On IDENT shift to state 18
-- On FLOAT shift to state 19
-- On CHAR shift to state 20
-- On BOOL shift to state 21
-- On variable_leader shift to state 22
-- On type1 shift to state 30
-- On type0 shift to state 25
## Reductions:

State 30:
## Known stack suffix:
## type0 ARROW type1
## LR(1) items:
type1 -> type0 ARROW type1 . RAISES type0 [ SEMISEMI SEMI RPAREN RBRACKET RBRACE RAISES EQUAL COMMA COERCEBACK COERCE BAR ]
## Transitions:
-- On RAISES shift to state 31
## Reductions:

State 31:
## Known stack suffix:
## type0 ARROW type1 RAISES
## LR(1) items:
type1 -> type0 ARROW type1 RAISES . type0 [ SEMISEMI SEMI RPAREN RBRACKET RBRACE RAISES EQUAL COMMA COERCEBACK COERCE BAR ]
## Transitions:
-- On UNIT shift to state 4
-- On STRING shift to state 5
-- On QUOTE shift to state 6
-- On PLUS shift to state 7
-- On PERCENT shift to state 8
-- On MINUS shift to state 9
-- On LPAREN shift to state 10
-- On LBRACKET shift to state 11
-- On LBRACE shift to state 13
-- On INTCONST shift to state 16
-- On INT shift to state 17
-- On IDENT shift to state 18
-- On FLOAT shift to state 19
-- On CHAR shift to state 20
-- On BOOL shift to state 21
-- On variable_leader shift to state 22
-- On type0 shift to state 32
## Reductions:

State 32:
## Known stack suffix:
## type0 ARROW type1 RAISES type0
## LR(1) items:
type0 -> type0 . STAR type0 [ STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE RAISES IDENT EQUAL COMMA COERCEBACK COERCE BAR ]
type0 -> type0 . IDENT [ STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE RAISES IDENT EQUAL COMMA COERCEBACK COERCE BAR ]
type1 -> type0 ARROW type1 RAISES type0 . [ SEMISEMI SEMI RPAREN RBRACKET RBRACE RAISES EQUAL COMMA COERCEBACK COERCE BAR ]
## Transitions:
-- On STAR shift to state 26
-- On IDENT shift to state 28
## Reductions:
-- On SEMISEMI SEMI RPAREN RBRACKET RBRACE RAISES EQUAL COMMA COERCEBACK COERCE BAR
--   reduce production type1 -> type0 ARROW type1 RAISES type0

State 33:
## Known stack suffix:
## IDENT
## LR(1) items:
record_row -> IDENT . COLON row_type SEMI record_row [ RBRACE ]
type0 -> IDENT . [ STAR RBRACE IDENT ARROW ]
## Transitions:
-- On COLON shift to state 34
## Reductions:
-- On STAR RBRACE IDENT ARROW
--   reduce production type0 -> IDENT

State 34:
## Known stack suffix:
## IDENT COLON
## LR(1) items:
record_row -> IDENT COLON . row_type SEMI record_row [ RBRACE ]
## Transitions:
-- On UNIT shift to state 4
-- On STRING shift to state 5
-- On QUOTE shift to state 6
-- On PRE shift to state 12
-- On PLUS shift to state 7
-- On PERCENT shift to state 8
-- On MISSING shift to state 14
-- On MINUS shift to state 9
-- On MAYBE shift to state 15
-- On LPAREN shift to state 10
-- On LBRACKET shift to state 11
-- On LBRACE shift to state 13
-- On INTCONST shift to state 16
-- On INT shift to state 17
-- On IDENT shift to state 18
-- On FLOAT shift to state 19
-- On CHAR shift to state 20
-- On BOOL shift to state 21
-- On ABS shift to state 35
-- On variable_leader shift to state 22
-- On type1 shift to state 36
-- On type0 shift to state 25
-- On row_type shift to state 37
## Reductions:

State 35:
## Known stack suffix:
## ABS
## LR(1) items:
row_type -> ABS . [ SEMI RBRACKET RBRACE ]
## Transitions:
## Reductions:
-- On SEMI RBRACKET RBRACE
--   reduce production row_type -> ABS

State 36:
## Known stack suffix:
## type1
## LR(1) items:
row_type -> type1 . [ SEMI RBRACKET RBRACE ]
## Transitions:
## Reductions:
-- On SEMI RBRACKET RBRACE
--   reduce production row_type -> type1

State 37:
## Known stack suffix:
## IDENT COLON row_type
## LR(1) items:
record_row -> IDENT COLON row_type . SEMI record_row [ RBRACE ]
## Transitions:
-- On SEMI shift to state 38
## Reductions:

State 38:
## Known stack suffix:
## IDENT COLON row_type SEMI
## LR(1) items:
record_row -> IDENT COLON row_type SEMI . record_row [ RBRACE ]
## Transitions:
-- On UNIT shift to state 4
-- On STRING shift to state 5
-- On QUOTE shift to state 6
-- On PRE shift to state 12
-- On PLUS shift to state 7
-- On PERCENT shift to state 8
-- On MISSING shift to state 14
-- On MINUS shift to state 9
-- On MAYBE shift to state 15
-- On LPAREN shift to state 10
-- On LBRACKET shift to state 11
-- On LBRACE shift to state 13
-- On INTCONST shift to state 16
-- On INT shift to state 17
-- On IDENT shift to state 33
-- On FLOAT shift to state 19
-- On CHAR shift to state 20
-- On BOOL shift to state 21
-- On ABS shift to state 35
-- On variable_leader shift to state 22
-- On type1 shift to state 36
-- On type0 shift to state 25
-- On row_type shift to state 39
-- On record_row shift to state 40
## Reductions:

State 39:
## Known stack suffix:
## row_type
## LR(1) items:
record_row -> row_type . [ RBRACE ]
## Transitions:
## Reductions:
-- On RBRACE
--   reduce production record_row -> row_type

State 40:
## Known stack suffix:
## IDENT COLON row_type SEMI record_row
## LR(1) items:
record_row -> IDENT COLON row_type SEMI record_row . [ RBRACE ]
## Transitions:
## Reductions:
-- On RBRACE
--   reduce production record_row -> IDENT COLON row_type SEMI record_row

State 41:
## Known stack suffix:
## LBRACE record_row
## LR(1) items:
type0 -> LBRACE record_row . RBRACE [ STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE RAISES IDENT EQUAL COMMA COERCEBACK COERCE BAR ARROW ]
## Transitions:
-- On RBRACE shift to state 42
## Reductions:

State 42:
## Known stack suffix:
## LBRACE record_row RBRACE
## LR(1) items:
type0 -> LBRACE record_row RBRACE . [ STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE RAISES IDENT EQUAL COMMA COERCEBACK COERCE BAR ARROW ]
## Transitions:
## Reductions:
-- On STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE RAISES IDENT EQUAL COMMA COERCEBACK COERCE BAR ARROW
--   reduce production type0 -> LBRACE record_row RBRACE

State 43:
## Known stack suffix:
## PRE type1
## LR(1) items:
row_type -> PRE type1 . [ SEMI RBRACKET RBRACE ]
## Transitions:
## Reductions:
-- On SEMI RBRACKET RBRACE
--   reduce production row_type -> PRE type1

State 44:
## Known stack suffix:
## CONSTRUCTOR
## LR(1) items:
variant_row -> CONSTRUCTOR . COLON row_type SEMI variant_row [ RBRACKET ]
## Transitions:
-- On COLON shift to state 45
## Reductions:

State 45:
## Known stack suffix:
## CONSTRUCTOR COLON
## LR(1) items:
variant_row -> CONSTRUCTOR COLON . row_type SEMI variant_row [ RBRACKET ]
## Transitions:
-- On UNIT shift to state 4
-- On STRING shift to state 5
-- On QUOTE shift to state 6
-- On PRE shift to state 12
-- On PLUS shift to state 7
-- On PERCENT shift to state 8
-- On MISSING shift to state 14
-- On MINUS shift to state 9
-- On MAYBE shift to state 15
-- On LPAREN shift to state 10
-- On LBRACKET shift to state 11
-- On LBRACE shift to state 13
-- On INTCONST shift to state 16
-- On INT shift to state 17
-- On IDENT shift to state 18
-- On FLOAT shift to state 19
-- On CHAR shift to state 20
-- On BOOL shift to state 21
-- On ABS shift to state 35
-- On variable_leader shift to state 22
-- On type1 shift to state 36
-- On type0 shift to state 25
-- On row_type shift to state 46
## Reductions:

State 46:
## Known stack suffix:
## CONSTRUCTOR COLON row_type
## LR(1) items:
variant_row -> CONSTRUCTOR COLON row_type . SEMI variant_row [ RBRACKET ]
## Transitions:
-- On SEMI shift to state 47
## Reductions:

State 47:
## Known stack suffix:
## CONSTRUCTOR COLON row_type SEMI
## LR(1) items:
variant_row -> CONSTRUCTOR COLON row_type SEMI . variant_row [ RBRACKET ]
## Transitions:
-- On UNIT shift to state 4
-- On STRING shift to state 5
-- On QUOTE shift to state 6
-- On PRE shift to state 12
-- On PLUS shift to state 7
-- On PERCENT shift to state 8
-- On MISSING shift to state 14
-- On MINUS shift to state 9
-- On MAYBE shift to state 15
-- On LPAREN shift to state 10
-- On LBRACKET shift to state 11
-- On LBRACE shift to state 13
-- On INTCONST shift to state 16
-- On INT shift to state 17
-- On IDENT shift to state 18
-- On FLOAT shift to state 19
-- On CONSTRUCTOR shift to state 44
-- On CHAR shift to state 20
-- On BOOL shift to state 21
-- On ABS shift to state 35
-- On variant_row shift to state 48
-- On variable_leader shift to state 22
-- On type1 shift to state 36
-- On type0 shift to state 25
-- On row_type shift to state 49
## Reductions:

State 48:
## Known stack suffix:
## CONSTRUCTOR COLON row_type SEMI variant_row
## LR(1) items:
variant_row -> CONSTRUCTOR COLON row_type SEMI variant_row . [ RBRACKET ]
## Transitions:
## Reductions:
-- On RBRACKET
--   reduce production variant_row -> CONSTRUCTOR COLON row_type SEMI variant_row

State 49:
## Known stack suffix:
## row_type
## LR(1) items:
variant_row -> row_type . [ RBRACKET ]
## Transitions:
## Reductions:
-- On RBRACKET
--   reduce production variant_row -> row_type

State 50:
## Known stack suffix:
## LBRACKET variant_row
## LR(1) items:
type0 -> LBRACKET variant_row . RBRACKET [ STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE RAISES IDENT EQUAL COMMA COERCEBACK COERCE BAR ARROW ]
## Transitions:
-- On RBRACKET shift to state 51
## Reductions:

State 51:
## Known stack suffix:
## LBRACKET variant_row RBRACKET
## LR(1) items:
type0 -> LBRACKET variant_row RBRACKET . [ STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE RAISES IDENT EQUAL COMMA COERCEBACK COERCE BAR ARROW ]
## Transitions:
## Reductions:
-- On STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE RAISES IDENT EQUAL COMMA COERCEBACK COERCE BAR ARROW
--   reduce production type0 -> LBRACKET variant_row RBRACKET

State 52:
## Known stack suffix:
## LPAREN type1
## LR(1) items:
type0 -> LPAREN type1 . COMMA type_comma_list RPAREN IDENT [ STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE RAISES IDENT EQUAL COMMA COERCEBACK COERCE BAR ARROW ]
type0 -> LPAREN type1 . COMMA type_comma_list RPAREN REF [ STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE RAISES IDENT EQUAL COMMA COERCEBACK COERCE BAR ARROW ]
type0 -> LPAREN type1 . RPAREN [ STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE RAISES IDENT EQUAL COMMA COERCEBACK COERCE BAR ARROW ]
## Transitions:
-- On RPAREN shift to state 53
-- On COMMA shift to state 54
## Reductions:

State 53:
## Known stack suffix:
## LPAREN type1 RPAREN
## LR(1) items:
type0 -> LPAREN type1 RPAREN . [ STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE RAISES IDENT EQUAL COMMA COERCEBACK COERCE BAR ARROW ]
## Transitions:
## Reductions:
-- On STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE RAISES IDENT EQUAL COMMA COERCEBACK COERCE BAR ARROW
--   reduce production type0 -> LPAREN type1 RPAREN

State 54:
## Known stack suffix:
## LPAREN type1 COMMA
## LR(1) items:
type0 -> LPAREN type1 COMMA . type_comma_list RPAREN IDENT [ STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE RAISES IDENT EQUAL COMMA COERCEBACK COERCE BAR ARROW ]
type0 -> LPAREN type1 COMMA . type_comma_list RPAREN REF [ STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE RAISES IDENT EQUAL COMMA COERCEBACK COERCE BAR ARROW ]
## Transitions:
-- On UNIT shift to state 4
-- On STRING shift to state 5
-- On QUOTE shift to state 6
-- On PLUS shift to state 7
-- On PERCENT shift to state 8
-- On MINUS shift to state 9
-- On LPAREN shift to state 10
-- On LBRACKET shift to state 11
-- On LBRACE shift to state 13
-- On INTCONST shift to state 16
-- On INT shift to state 17
-- On IDENT shift to state 18
-- On FLOAT shift to state 19
-- On CHAR shift to state 20
-- On BOOL shift to state 21
-- On variable_leader shift to state 22
-- On type_comma_list shift to state 55
-- On type1 shift to state 59
-- On type0 shift to state 25
## Reductions:

State 55:
## Known stack suffix:
## LPAREN type1 COMMA type_comma_list
## LR(1) items:
type0 -> LPAREN type1 COMMA type_comma_list . RPAREN IDENT [ STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE RAISES IDENT EQUAL COMMA COERCEBACK COERCE BAR ARROW ]
type0 -> LPAREN type1 COMMA type_comma_list . RPAREN REF [ STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE RAISES IDENT EQUAL COMMA COERCEBACK COERCE BAR ARROW ]
## Transitions:
-- On RPAREN shift to state 56
## Reductions:

State 56:
## Known stack suffix:
## LPAREN type1 COMMA type_comma_list RPAREN
## LR(1) items:
type0 -> LPAREN type1 COMMA type_comma_list RPAREN . IDENT [ STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE RAISES IDENT EQUAL COMMA COERCEBACK COERCE BAR ARROW ]
type0 -> LPAREN type1 COMMA type_comma_list RPAREN . REF [ STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE RAISES IDENT EQUAL COMMA COERCEBACK COERCE BAR ARROW ]
## Transitions:
-- On REF shift to state 57
-- On IDENT shift to state 58
## Reductions:

State 57:
## Known stack suffix:
## LPAREN type1 COMMA type_comma_list RPAREN REF
## LR(1) items:
type0 -> LPAREN type1 COMMA type_comma_list RPAREN REF . [ STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE RAISES IDENT EQUAL COMMA COERCEBACK COERCE BAR ARROW ]
## Transitions:
## Reductions:
-- On STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE RAISES IDENT EQUAL COMMA COERCEBACK COERCE BAR ARROW
--   reduce production type0 -> LPAREN type1 COMMA type_comma_list RPAREN REF

State 58:
## Known stack suffix:
## LPAREN type1 COMMA type_comma_list RPAREN IDENT
## LR(1) items:
type0 -> LPAREN type1 COMMA type_comma_list RPAREN IDENT . [ STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE RAISES IDENT EQUAL COMMA COERCEBACK COERCE BAR ARROW ]
## Transitions:
## Reductions:
-- On STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE RAISES IDENT EQUAL COMMA COERCEBACK COERCE BAR ARROW
--   reduce production type0 -> LPAREN type1 COMMA type_comma_list RPAREN IDENT

State 59:
## Known stack suffix:
## type1
## LR(1) items:
type_comma_list -> type1 . [ SEMI RPAREN RBRACE COERCE ]
type_comma_list -> type1 . COMMA type_comma_list [ SEMI RPAREN RBRACE COERCE ]
## Transitions:
-- On COMMA shift to state 60
## Reductions:
-- On SEMI RPAREN RBRACE COERCE
--   reduce production type_comma_list -> type1

State 60:
## Known stack suffix:
## type1 COMMA
## LR(1) items:
type_comma_list -> type1 COMMA . type_comma_list [ SEMI RPAREN RBRACE COERCE ]
## Transitions:
-- On UNIT shift to state 4
-- On STRING shift to state 5
-- On QUOTE shift to state 6
-- On PLUS shift to state 7
-- On PERCENT shift to state 8
-- On MINUS shift to state 9
-- On LPAREN shift to state 10
-- On LBRACKET shift to state 11
-- On LBRACE shift to state 13
-- On INTCONST shift to state 16
-- On INT shift to state 17
-- On IDENT shift to state 18
-- On FLOAT shift to state 19
-- On CHAR shift to state 20
-- On BOOL shift to state 21
-- On variable_leader shift to state 22
-- On type_comma_list shift to state 61
-- On type1 shift to state 59
-- On type0 shift to state 25
## Reductions:

State 61:
## Known stack suffix:
## type1 COMMA type_comma_list
## LR(1) items:
type_comma_list -> type1 COMMA type_comma_list . [ SEMI RPAREN RBRACE COERCE ]
## Transitions:
## Reductions:
-- On SEMI RPAREN RBRACE COERCE
--   reduce production type_comma_list -> type1 COMMA type_comma_list

State 62:
## Known stack suffix:
## COERCE
## LR(1) items:
type_scheme -> COERCE . context COERCEBACK IMPLIES type1 [ SEMISEMI RPAREN ]
type_scheme -> COERCE . context COERCEBACK IMPLIES type1 RAISES type1 [ SEMISEMI RPAREN ]
type_scheme -> COERCE . context COERCEBACK IMPLIES type1 BAR LBRACE coercion_list RBRACE [ SEMISEMI RPAREN ]
type_scheme -> COERCE . context COERCEBACK IMPLIES type1 RAISES type1 BAR LBRACE coercion_list RBRACE [ SEMISEMI RPAREN ]
## Transitions:
-- On IDENT shift to state 63
-- On context_entry shift to state 66
-- On context shift to state 69
## Reductions:

State 63:
## Known stack suffix:
## IDENT
## LR(1) items:
context_entry -> IDENT . COLON type1 [ SEMI COERCEBACK ]
## Transitions:
-- On COLON shift to state 64
## Reductions:

State 64:
## Known stack suffix:
## IDENT COLON
## LR(1) items:
context_entry -> IDENT COLON . type1 [ SEMI COERCEBACK ]
## Transitions:
-- On UNIT shift to state 4
-- On STRING shift to state 5
-- On QUOTE shift to state 6
-- On PLUS shift to state 7
-- On PERCENT shift to state 8
-- On MINUS shift to state 9
-- On LPAREN shift to state 10
-- On LBRACKET shift to state 11
-- On LBRACE shift to state 13
-- On INTCONST shift to state 16
-- On INT shift to state 17
-- On IDENT shift to state 18
-- On FLOAT shift to state 19
-- On CHAR shift to state 20
-- On BOOL shift to state 21
-- On variable_leader shift to state 22
-- On type1 shift to state 65
-- On type0 shift to state 25
## Reductions:

State 65:
## Known stack suffix:
## IDENT COLON type1
## LR(1) items:
context_entry -> IDENT COLON type1 . [ SEMI COERCEBACK ]
## Transitions:
## Reductions:
-- On SEMI COERCEBACK
--   reduce production context_entry -> IDENT COLON type1

State 66:
## Known stack suffix:
## context_entry
## LR(1) items:
context -> context_entry . [ COERCEBACK ]
context -> context_entry . SEMI context [ COERCEBACK ]
## Transitions:
-- On SEMI shift to state 67
## Reductions:
-- On COERCEBACK
--   reduce production context -> context_entry

State 67:
## Known stack suffix:
## context_entry SEMI
## LR(1) items:
context -> context_entry SEMI . context [ COERCEBACK ]
## Transitions:
-- On IDENT shift to state 63
-- On context_entry shift to state 66
-- On context shift to state 68
## Reductions:

State 68:
## Known stack suffix:
## context_entry SEMI context
## LR(1) items:
context -> context_entry SEMI context . [ COERCEBACK ]
## Transitions:
## Reductions:
-- On COERCEBACK
--   reduce production context -> context_entry SEMI context

State 69:
## Known stack suffix:
## COERCE context
## LR(1) items:
type_scheme -> COERCE context . COERCEBACK IMPLIES type1 [ SEMISEMI RPAREN ]
type_scheme -> COERCE context . COERCEBACK IMPLIES type1 RAISES type1 [ SEMISEMI RPAREN ]
type_scheme -> COERCE context . COERCEBACK IMPLIES type1 BAR LBRACE coercion_list RBRACE [ SEMISEMI RPAREN ]
type_scheme -> COERCE context . COERCEBACK IMPLIES type1 RAISES type1 BAR LBRACE coercion_list RBRACE [ SEMISEMI RPAREN ]
## Transitions:
-- On COERCEBACK shift to state 70
## Reductions:

State 70:
## Known stack suffix:
## COERCE context COERCEBACK
## LR(1) items:
type_scheme -> COERCE context COERCEBACK . IMPLIES type1 [ SEMISEMI RPAREN ]
type_scheme -> COERCE context COERCEBACK . IMPLIES type1 RAISES type1 [ SEMISEMI RPAREN ]
type_scheme -> COERCE context COERCEBACK . IMPLIES type1 BAR LBRACE coercion_list RBRACE [ SEMISEMI RPAREN ]
type_scheme -> COERCE context COERCEBACK . IMPLIES type1 RAISES type1 BAR LBRACE coercion_list RBRACE [ SEMISEMI RPAREN ]
## Transitions:
-- On IMPLIES shift to state 71
## Reductions:

State 71:
## Known stack suffix:
## COERCE context COERCEBACK IMPLIES
## LR(1) items:
type_scheme -> COERCE context COERCEBACK IMPLIES . type1 [ SEMISEMI RPAREN ]
type_scheme -> COERCE context COERCEBACK IMPLIES . type1 RAISES type1 [ SEMISEMI RPAREN ]
type_scheme -> COERCE context COERCEBACK IMPLIES . type1 BAR LBRACE coercion_list RBRACE [ SEMISEMI RPAREN ]
type_scheme -> COERCE context COERCEBACK IMPLIES . type1 RAISES type1 BAR LBRACE coercion_list RBRACE [ SEMISEMI RPAREN ]
## Transitions:
-- On UNIT shift to state 4
-- On STRING shift to state 5
-- On QUOTE shift to state 6
-- On PLUS shift to state 7
-- On PERCENT shift to state 8
-- On MINUS shift to state 9
-- On LPAREN shift to state 10
-- On LBRACKET shift to state 11
-- On LBRACE shift to state 13
-- On INTCONST shift to state 16
-- On INT shift to state 17
-- On IDENT shift to state 18
-- On FLOAT shift to state 19
-- On CHAR shift to state 20
-- On BOOL shift to state 21
-- On variable_leader shift to state 22
-- On type1 shift to state 72
-- On type0 shift to state 25
## Reductions:

State 72:
## Known stack suffix:
## COERCE context COERCEBACK IMPLIES type1
## LR(1) items:
type_scheme -> COERCE context COERCEBACK IMPLIES type1 . [ SEMISEMI RPAREN ]
type_scheme -> COERCE context COERCEBACK IMPLIES type1 . RAISES type1 [ SEMISEMI RPAREN ]
type_scheme -> COERCE context COERCEBACK IMPLIES type1 . BAR LBRACE coercion_list RBRACE [ SEMISEMI RPAREN ]
type_scheme -> COERCE context COERCEBACK IMPLIES type1 . RAISES type1 BAR LBRACE coercion_list RBRACE [ SEMISEMI RPAREN ]
## Transitions:
-- On RAISES shift to state 73
-- On BAR shift to state 91
## Reductions:
-- On SEMISEMI RPAREN
--   reduce production type_scheme -> COERCE context COERCEBACK IMPLIES type1

State 73:
## Known stack suffix:
## COERCE context COERCEBACK IMPLIES type1 RAISES
## LR(1) items:
type_scheme -> COERCE context COERCEBACK IMPLIES type1 RAISES . type1 [ SEMISEMI RPAREN ]
type_scheme -> COERCE context COERCEBACK IMPLIES type1 RAISES . type1 BAR LBRACE coercion_list RBRACE [ SEMISEMI RPAREN ]
## Transitions:
-- On UNIT shift to state 4
-- On STRING shift to state 5
-- On QUOTE shift to state 6
-- On PLUS shift to state 7
-- On PERCENT shift to state 8
-- On MINUS shift to state 9
-- On LPAREN shift to state 10
-- On LBRACKET shift to state 11
-- On LBRACE shift to state 13
-- On INTCONST shift to state 16
-- On INT shift to state 17
-- On IDENT shift to state 18
-- On FLOAT shift to state 19
-- On CHAR shift to state 20
-- On BOOL shift to state 21
-- On variable_leader shift to state 22
-- On type1 shift to state 74
-- On type0 shift to state 25
## Reductions:

State 74:
## Known stack suffix:
## COERCE context COERCEBACK IMPLIES type1 RAISES type1
## LR(1) items:
type_scheme -> COERCE context COERCEBACK IMPLIES type1 RAISES type1 . [ SEMISEMI RPAREN ]
type_scheme -> COERCE context COERCEBACK IMPLIES type1 RAISES type1 . BAR LBRACE coercion_list RBRACE [ SEMISEMI RPAREN ]
## Transitions:
-- On BAR shift to state 75
## Reductions:
-- On SEMISEMI RPAREN
--   reduce production type_scheme -> COERCE context COERCEBACK IMPLIES type1 RAISES type1

State 75:
## Known stack suffix:
## COERCE context COERCEBACK IMPLIES type1 RAISES type1 BAR
## LR(1) items:
type_scheme -> COERCE context COERCEBACK IMPLIES type1 RAISES type1 BAR . LBRACE coercion_list RBRACE [ SEMISEMI RPAREN ]
## Transitions:
-- On LBRACE shift to state 76
## Reductions:

State 76:
## Known stack suffix:
## COERCE context COERCEBACK IMPLIES type1 RAISES type1 BAR LBRACE
## LR(1) items:
type_scheme -> COERCE context COERCEBACK IMPLIES type1 RAISES type1 BAR LBRACE . coercion_list RBRACE [ SEMISEMI RPAREN ]
## Transitions:
-- On UNIT shift to state 4
-- On STRING shift to state 5
-- On QUOTE shift to state 6
-- On PLUS shift to state 7
-- On PERCENT shift to state 8
-- On MINUS shift to state 9
-- On LPAREN shift to state 10
-- On LBRACKET shift to state 11
-- On LBRACE shift to state 13
-- On INTCONST shift to state 16
-- On INT shift to state 17
-- On IDENT shift to state 18
-- On FLOAT shift to state 19
-- On CHAR shift to state 20
-- On BOOL shift to state 21
-- On variable_leader shift to state 22
-- On type_comma_list shift to state 77
-- On type1 shift to state 83
-- On type0 shift to state 25
-- On coercion_list shift to state 86
-- On coercion shift to state 88
## Reductions:

State 77:
## Known stack suffix:
## type_comma_list
## LR(1) items:
coercion -> type_comma_list . COERCE type_comma_list [ SEMI RBRACE ]
coercion -> type_comma_list . COERCE type1 COERCE type_comma_list [ SEMI RBRACE ]
## Transitions:
-- On COERCE shift to state 78
## Reductions:

State 78:
## Known stack suffix:
## type_comma_list COERCE
## LR(1) items:
coercion -> type_comma_list COERCE . type_comma_list [ SEMI RBRACE ]
coercion -> type_comma_list COERCE . type1 COERCE type_comma_list [ SEMI RBRACE ]
## Transitions:
-- On UNIT shift to state 4
-- On STRING shift to state 5
-- On QUOTE shift to state 6
-- On PLUS shift to state 7
-- On PERCENT shift to state 8
-- On MINUS shift to state 9
-- On LPAREN shift to state 10
-- On LBRACKET shift to state 11
-- On LBRACE shift to state 13
-- On INTCONST shift to state 16
-- On INT shift to state 17
-- On IDENT shift to state 18
-- On FLOAT shift to state 19
-- On CHAR shift to state 20
-- On BOOL shift to state 21
-- On variable_leader shift to state 22
-- On type_comma_list shift to state 79
-- On type1 shift to state 80
-- On type0 shift to state 25
## Reductions:

State 79:
## Known stack suffix:
## type_comma_list COERCE type_comma_list
## LR(1) items:
coercion -> type_comma_list COERCE type_comma_list . [ SEMI RBRACE ]
## Transitions:
## Reductions:
-- On SEMI RBRACE
--   reduce production coercion -> type_comma_list COERCE type_comma_list

State 80:
## Known stack suffix:
## type_comma_list COERCE type1
## LR(1) items:
coercion -> type_comma_list COERCE type1 . COERCE type_comma_list [ SEMI RBRACE ]
type_comma_list -> type1 . [ SEMI RBRACE ]
type_comma_list -> type1 . COMMA type_comma_list [ SEMI RBRACE ]
## Transitions:
-- On COMMA shift to state 60
-- On COERCE shift to state 81
## Reductions:
-- On SEMI RBRACE
--   reduce production type_comma_list -> type1

State 81:
## Known stack suffix:
## type_comma_list COERCE type1 COERCE
## LR(1) items:
coercion -> type_comma_list COERCE type1 COERCE . type_comma_list [ SEMI RBRACE ]
## Transitions:
-- On UNIT shift to state 4
-- On STRING shift to state 5
-- On QUOTE shift to state 6
-- On PLUS shift to state 7
-- On PERCENT shift to state 8
-- On MINUS shift to state 9
-- On LPAREN shift to state 10
-- On LBRACKET shift to state 11
-- On LBRACE shift to state 13
-- On INTCONST shift to state 16
-- On INT shift to state 17
-- On IDENT shift to state 18
-- On FLOAT shift to state 19
-- On CHAR shift to state 20
-- On BOOL shift to state 21
-- On variable_leader shift to state 22
-- On type_comma_list shift to state 82
-- On type1 shift to state 59
-- On type0 shift to state 25
## Reductions:

State 82:
## Known stack suffix:
## type_comma_list COERCE type1 COERCE type_comma_list
## LR(1) items:
coercion -> type_comma_list COERCE type1 COERCE type_comma_list . [ SEMI RBRACE ]
## Transitions:
## Reductions:
-- On SEMI RBRACE
--   reduce production coercion -> type_comma_list COERCE type1 COERCE type_comma_list

State 83:
## Known stack suffix:
## type1
## LR(1) items:
coercion -> type1 . EQUAL type1 [ SEMI RBRACE ]
type_comma_list -> type1 . [ COERCE ]
type_comma_list -> type1 . COMMA type_comma_list [ COERCE ]
## Transitions:
-- On EQUAL shift to state 84
-- On COMMA shift to state 60
## Reductions:
-- On COERCE
--   reduce production type_comma_list -> type1

State 84:
## Known stack suffix:
## type1 EQUAL
## LR(1) items:
coercion -> type1 EQUAL . type1 [ SEMI RBRACE ]
## Transitions:
-- On UNIT shift to state 4
-- On STRING shift to state 5
-- On QUOTE shift to state 6
-- On PLUS shift to state 7
-- On PERCENT shift to state 8
-- On MINUS shift to state 9
-- On LPAREN shift to state 10
-- On LBRACKET shift to state 11
-- On LBRACE shift to state 13
-- On INTCONST shift to state 16
-- On INT shift to state 17
-- On IDENT shift to state 18
-- On FLOAT shift to state 19
-- On CHAR shift to state 20
-- On BOOL shift to state 21
-- On variable_leader shift to state 22
-- On type1 shift to state 85
-- On type0 shift to state 25
## Reductions:

State 85:
## Known stack suffix:
## type1 EQUAL type1
## LR(1) items:
coercion -> type1 EQUAL type1 . [ SEMI RBRACE ]
## Transitions:
## Reductions:
-- On SEMI RBRACE
--   reduce production coercion -> type1 EQUAL type1

State 86:
## Known stack suffix:
## COERCE context COERCEBACK IMPLIES type1 RAISES type1 BAR LBRACE coercion_list
## LR(1) items:
type_scheme -> COERCE context COERCEBACK IMPLIES type1 RAISES type1 BAR LBRACE coercion_list . RBRACE [ SEMISEMI RPAREN ]
## Transitions:
-- On RBRACE shift to state 87
## Reductions:

State 87:
## Known stack suffix:
## COERCE context COERCEBACK IMPLIES type1 RAISES type1 BAR LBRACE coercion_list RBRACE
## LR(1) items:
type_scheme -> COERCE context COERCEBACK IMPLIES type1 RAISES type1 BAR LBRACE coercion_list RBRACE . [ SEMISEMI RPAREN ]
## Transitions:
## Reductions:
-- On SEMISEMI RPAREN
--   reduce production type_scheme -> COERCE context COERCEBACK IMPLIES type1 RAISES type1 BAR LBRACE coercion_list RBRACE

State 88:
## Known stack suffix:
## coercion
## LR(1) items:
coercion_list -> coercion . [ RBRACE ]
coercion_list -> coercion . SEMI coercion_list [ RBRACE ]
## Transitions:
-- On SEMI shift to state 89
## Reductions:
-- On RBRACE
--   reduce production coercion_list -> coercion

State 89:
## Known stack suffix:
## coercion SEMI
## LR(1) items:
coercion_list -> coercion SEMI . coercion_list [ RBRACE ]
## Transitions:
-- On UNIT shift to state 4
-- On STRING shift to state 5
-- On QUOTE shift to state 6
-- On PLUS shift to state 7
-- On PERCENT shift to state 8
-- On MINUS shift to state 9
-- On LPAREN shift to state 10
-- On LBRACKET shift to state 11
-- On LBRACE shift to state 13
-- On INTCONST shift to state 16
-- On INT shift to state 17
-- On IDENT shift to state 18
-- On FLOAT shift to state 19
-- On CHAR shift to state 20
-- On BOOL shift to state 21
-- On variable_leader shift to state 22
-- On type_comma_list shift to state 77
-- On type1 shift to state 83
-- On type0 shift to state 25
-- On coercion_list shift to state 90
-- On coercion shift to state 88
## Reductions:

State 90:
## Known stack suffix:
## coercion SEMI coercion_list
## LR(1) items:
coercion_list -> coercion SEMI coercion_list . [ RBRACE ]
## Transitions:
## Reductions:
-- On RBRACE
--   reduce production coercion_list -> coercion SEMI coercion_list

State 91:
## Known stack suffix:
## COERCE context COERCEBACK IMPLIES type1 BAR
## LR(1) items:
type_scheme -> COERCE context COERCEBACK IMPLIES type1 BAR . LBRACE coercion_list RBRACE [ SEMISEMI RPAREN ]
## Transitions:
-- On LBRACE shift to state 92
## Reductions:

State 92:
## Known stack suffix:
## COERCE context COERCEBACK IMPLIES type1 BAR LBRACE
## LR(1) items:
type_scheme -> COERCE context COERCEBACK IMPLIES type1 BAR LBRACE . coercion_list RBRACE [ SEMISEMI RPAREN ]
## Transitions:
-- On UNIT shift to state 4
-- On STRING shift to state 5
-- On QUOTE shift to state 6
-- On PLUS shift to state 7
-- On PERCENT shift to state 8
-- On MINUS shift to state 9
-- On LPAREN shift to state 10
-- On LBRACKET shift to state 11
-- On LBRACE shift to state 13
-- On INTCONST shift to state 16
-- On INT shift to state 17
-- On IDENT shift to state 18
-- On FLOAT shift to state 19
-- On CHAR shift to state 20
-- On BOOL shift to state 21
-- On variable_leader shift to state 22
-- On type_comma_list shift to state 77
-- On type1 shift to state 83
-- On type0 shift to state 25
-- On coercion_list shift to state 93
-- On coercion shift to state 88
## Reductions:

State 93:
## Known stack suffix:
## COERCE context COERCEBACK IMPLIES type1 BAR LBRACE coercion_list
## LR(1) items:
type_scheme -> COERCE context COERCEBACK IMPLIES type1 BAR LBRACE coercion_list . RBRACE [ SEMISEMI RPAREN ]
## Transitions:
-- On RBRACE shift to state 94
## Reductions:

State 94:
## Known stack suffix:
## COERCE context COERCEBACK IMPLIES type1 BAR LBRACE coercion_list RBRACE
## LR(1) items:
type_scheme -> COERCE context COERCEBACK IMPLIES type1 BAR LBRACE coercion_list RBRACE . [ SEMISEMI RPAREN ]
## Transitions:
## Reductions:
-- On SEMISEMI RPAREN
--   reduce production type_scheme -> COERCE context COERCEBACK IMPLIES type1 BAR LBRACE coercion_list RBRACE

State 95:
## Known stack suffix:
## VALUE IDENT COLON type_scheme
## LR(1) items:
phrase -> VALUE IDENT COLON type_scheme . SEMISEMI [ # ]
## Transitions:
-- On SEMISEMI shift to state 96
## Reductions:

State 96:
## Known stack suffix:
## VALUE IDENT COLON type_scheme SEMISEMI
## LR(1) items:
phrase -> VALUE IDENT COLON type_scheme SEMISEMI . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production phrase -> VALUE IDENT COLON type_scheme SEMISEMI

State 97:
## Known stack suffix:
## type1
## LR(1) items:
type_scheme -> type1 . [ SEMISEMI RPAREN ]
type_scheme -> type1 . RAISES type1 [ SEMISEMI RPAREN ]
type_scheme -> type1 . BAR LBRACE coercion_list RBRACE [ SEMISEMI RPAREN ]
type_scheme -> type1 . RAISES type1 BAR LBRACE coercion_list RBRACE [ SEMISEMI RPAREN ]
## Transitions:
-- On RAISES shift to state 98
-- On BAR shift to state 104
## Reductions:
-- On SEMISEMI RPAREN
--   reduce production type_scheme -> type1

State 98:
## Known stack suffix:
## type1 RAISES
## LR(1) items:
type_scheme -> type1 RAISES . type1 [ SEMISEMI RPAREN ]
type_scheme -> type1 RAISES . type1 BAR LBRACE coercion_list RBRACE [ SEMISEMI RPAREN ]
## Transitions:
-- On UNIT shift to state 4
-- On STRING shift to state 5
-- On QUOTE shift to state 6
-- On PLUS shift to state 7
-- On PERCENT shift to state 8
-- On MINUS shift to state 9
-- On LPAREN shift to state 10
-- On LBRACKET shift to state 11
-- On LBRACE shift to state 13
-- On INTCONST shift to state 16
-- On INT shift to state 17
-- On IDENT shift to state 18
-- On FLOAT shift to state 19
-- On CHAR shift to state 20
-- On BOOL shift to state 21
-- On variable_leader shift to state 22
-- On type1 shift to state 99
-- On type0 shift to state 25
## Reductions:

State 99:
## Known stack suffix:
## type1 RAISES type1
## LR(1) items:
type_scheme -> type1 RAISES type1 . [ SEMISEMI RPAREN ]
type_scheme -> type1 RAISES type1 . BAR LBRACE coercion_list RBRACE [ SEMISEMI RPAREN ]
## Transitions:
-- On BAR shift to state 100
## Reductions:
-- On SEMISEMI RPAREN
--   reduce production type_scheme -> type1 RAISES type1

State 100:
## Known stack suffix:
## type1 RAISES type1 BAR
## LR(1) items:
type_scheme -> type1 RAISES type1 BAR . LBRACE coercion_list RBRACE [ SEMISEMI RPAREN ]
## Transitions:
-- On LBRACE shift to state 101
## Reductions:

State 101:
## Known stack suffix:
## type1 RAISES type1 BAR LBRACE
## LR(1) items:
type_scheme -> type1 RAISES type1 BAR LBRACE . coercion_list RBRACE [ SEMISEMI RPAREN ]
## Transitions:
-- On UNIT shift to state 4
-- On STRING shift to state 5
-- On QUOTE shift to state 6
-- On PLUS shift to state 7
-- On PERCENT shift to state 8
-- On MINUS shift to state 9
-- On LPAREN shift to state 10
-- On LBRACKET shift to state 11
-- On LBRACE shift to state 13
-- On INTCONST shift to state 16
-- On INT shift to state 17
-- On IDENT shift to state 18
-- On FLOAT shift to state 19
-- On CHAR shift to state 20
-- On BOOL shift to state 21
-- On variable_leader shift to state 22
-- On type_comma_list shift to state 77
-- On type1 shift to state 83
-- On type0 shift to state 25
-- On coercion_list shift to state 102
-- On coercion shift to state 88
## Reductions:

State 102:
## Known stack suffix:
## type1 RAISES type1 BAR LBRACE coercion_list
## LR(1) items:
type_scheme -> type1 RAISES type1 BAR LBRACE coercion_list . RBRACE [ SEMISEMI RPAREN ]
## Transitions:
-- On RBRACE shift to state 103
## Reductions:

State 103:
## Known stack suffix:
## type1 RAISES type1 BAR LBRACE coercion_list RBRACE
## LR(1) items:
type_scheme -> type1 RAISES type1 BAR LBRACE coercion_list RBRACE . [ SEMISEMI RPAREN ]
## Transitions:
## Reductions:
-- On SEMISEMI RPAREN
--   reduce production type_scheme -> type1 RAISES type1 BAR LBRACE coercion_list RBRACE

State 104:
## Known stack suffix:
## type1 BAR
## LR(1) items:
type_scheme -> type1 BAR . LBRACE coercion_list RBRACE [ SEMISEMI RPAREN ]
## Transitions:
-- On LBRACE shift to state 105
## Reductions:

State 105:
## Known stack suffix:
## type1 BAR LBRACE
## LR(1) items:
type_scheme -> type1 BAR LBRACE . coercion_list RBRACE [ SEMISEMI RPAREN ]
## Transitions:
-- On UNIT shift to state 4
-- On STRING shift to state 5
-- On QUOTE shift to state 6
-- On PLUS shift to state 7
-- On PERCENT shift to state 8
-- On MINUS shift to state 9
-- On LPAREN shift to state 10
-- On LBRACKET shift to state 11
-- On LBRACE shift to state 13
-- On INTCONST shift to state 16
-- On INT shift to state 17
-- On IDENT shift to state 18
-- On FLOAT shift to state 19
-- On CHAR shift to state 20
-- On BOOL shift to state 21
-- On variable_leader shift to state 22
-- On type_comma_list shift to state 77
-- On type1 shift to state 83
-- On type0 shift to state 25
-- On coercion_list shift to state 106
-- On coercion shift to state 88
## Reductions:

State 106:
## Known stack suffix:
## type1 BAR LBRACE coercion_list
## LR(1) items:
type_scheme -> type1 BAR LBRACE coercion_list . RBRACE [ SEMISEMI RPAREN ]
## Transitions:
-- On RBRACE shift to state 107
## Reductions:

State 107:
## Known stack suffix:
## type1 BAR LBRACE coercion_list RBRACE
## LR(1) items:
type_scheme -> type1 BAR LBRACE coercion_list RBRACE . [ SEMISEMI RPAREN ]
## Transitions:
## Reductions:
-- On SEMISEMI RPAREN
--   reduce production type_scheme -> type1 BAR LBRACE coercion_list RBRACE

State 108:
## Known stack suffix:
## UNIT
## LR(1) items:
constant -> UNIT . [ WITH UNIT UNDERSCORE TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE EQUAL ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AS ARROW AND ]
## Transitions:
## Reductions:
-- On WITH UNIT UNDERSCORE TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE EQUAL ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AS ARROW AND
--   reduce production constant -> UNIT

State 109:
## Known stack suffix:
## TYPE
## LR(1) items:
phrase -> TYPE . IDENT SEMISEMI [ # ]
phrase -> TYPE . IDENT LPAREN variance_comma_list RPAREN SEMISEMI [ # ]
## Transitions:
-- On IDENT shift to state 110
## Reductions:

State 110:
## Known stack suffix:
## TYPE IDENT
## LR(1) items:
phrase -> TYPE IDENT . SEMISEMI [ # ]
phrase -> TYPE IDENT . LPAREN variance_comma_list RPAREN SEMISEMI [ # ]
## Transitions:
-- On SEMISEMI shift to state 111
-- On LPAREN shift to state 112
## Reductions:

State 111:
## Known stack suffix:
## TYPE IDENT SEMISEMI
## LR(1) items:
phrase -> TYPE IDENT SEMISEMI . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production phrase -> TYPE IDENT SEMISEMI

State 112:
## Known stack suffix:
## TYPE IDENT LPAREN
## LR(1) items:
phrase -> TYPE IDENT LPAREN . variance_comma_list RPAREN SEMISEMI [ # ]
## Transitions:
-- On PLUS shift to state 113
-- On MINUS shift to state 114
-- On variance_comma_list shift to state 115
-- On variance shift to state 118
## Reductions:

State 113:
## Known stack suffix:
## PLUS
## LR(1) items:
variance -> PLUS . [ RPAREN COMMA ]
## Transitions:
## Reductions:
-- On RPAREN COMMA
--   reduce production variance -> PLUS

State 114:
## Known stack suffix:
## MINUS
## LR(1) items:
variance -> MINUS . [ RPAREN COMMA ]
## Transitions:
## Reductions:
-- On RPAREN COMMA
--   reduce production variance -> MINUS

State 115:
## Known stack suffix:
## TYPE IDENT LPAREN variance_comma_list
## LR(1) items:
phrase -> TYPE IDENT LPAREN variance_comma_list . RPAREN SEMISEMI [ # ]
## Transitions:
-- On RPAREN shift to state 116
## Reductions:

State 116:
## Known stack suffix:
## TYPE IDENT LPAREN variance_comma_list RPAREN
## LR(1) items:
phrase -> TYPE IDENT LPAREN variance_comma_list RPAREN . SEMISEMI [ # ]
## Transitions:
-- On SEMISEMI shift to state 117
## Reductions:

State 117:
## Known stack suffix:
## TYPE IDENT LPAREN variance_comma_list RPAREN SEMISEMI
## LR(1) items:
phrase -> TYPE IDENT LPAREN variance_comma_list RPAREN SEMISEMI . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production phrase -> TYPE IDENT LPAREN variance_comma_list RPAREN SEMISEMI

State 118:
## Known stack suffix:
## variance
## LR(1) items:
variance_comma_list -> variance . [ RPAREN ]
variance_comma_list -> variance . COMMA variance_comma_list [ RPAREN ]
## Transitions:
-- On COMMA shift to state 119
## Reductions:
-- On RPAREN
--   reduce production variance_comma_list -> variance

State 119:
## Known stack suffix:
## variance COMMA
## LR(1) items:
variance_comma_list -> variance COMMA . variance_comma_list [ RPAREN ]
## Transitions:
-- On PLUS shift to state 113
-- On MINUS shift to state 114
-- On variance_comma_list shift to state 120
-- On variance shift to state 118
## Reductions:

State 120:
## Known stack suffix:
## variance COMMA variance_comma_list
## LR(1) items:
variance_comma_list -> variance COMMA variance_comma_list . [ RPAREN ]
## Transitions:
## Reductions:
-- On RPAREN
--   reduce production variance_comma_list -> variance COMMA variance_comma_list

State 121:
## Known stack suffix:
## TRY
## LR(1) items:
expression -> TRY . expression WITH try_match [ WITH SEMISEMI RPAREN IN COLON BAR AND ]
## Transitions:
-- On UNIT shift to state 108
-- On TRY shift to state 121
-- On TRUE shift to state 122
-- On STRINGCONST shift to state 123
-- On REF shift to state 124
-- On REC shift to state 126
-- On RAISE shift to state 160
-- On MATCH shift to state 163
-- On LPAREN shift to state 125
-- On LET shift to state 164
-- On LBRACKETBAR shift to state 161
-- On LBRACKET shift to state 162
-- On LBRACE shift to state 169
-- On INTCONST shift to state 133
-- On IF shift to state 172
-- On IDENT shift to state 173
-- On FUNCTION shift to state 206
-- On FUN shift to state 209
-- On FLOATCONST shift to state 135
-- On FALSE shift to state 136
-- On CONSTRUCTOR shift to state 174
-- On CHARCONST shift to state 139
-- On BANG shift to state 176
-- On expression3 shift to state 212
-- On expression2 shift to state 213
-- On expression1 shift to state 195
-- On expression0 shift to state 186
-- On expression shift to state 270
-- On constant shift to state 185
## Reductions:

State 122:
## Known stack suffix:
## TRUE
## LR(1) items:
constant -> TRUE . [ WITH UNIT UNDERSCORE TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE EQUAL ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AS ARROW AND ]
## Transitions:
## Reductions:
-- On WITH UNIT UNDERSCORE TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE EQUAL ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AS ARROW AND
--   reduce production constant -> TRUE

State 123:
## Known stack suffix:
## STRINGCONST
## LR(1) items:
constant -> STRINGCONST . [ WITH UNIT UNDERSCORE TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE EQUAL ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AS ARROW AND ]
## Transitions:
## Reductions:
-- On WITH UNIT UNDERSCORE TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE EQUAL ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AS ARROW AND
--   reduce production constant -> STRINGCONST

State 124:
## Known stack suffix:
## REF
## LR(1) items:
expression1 -> REF . expression0 [ WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND ]
## Transitions:
-- On UNIT shift to state 108
-- On TRUE shift to state 122
-- On STRINGCONST shift to state 123
-- On LPAREN shift to state 125
-- On LBRACKETBAR shift to state 161
-- On LBRACKET shift to state 162
-- On LBRACE shift to state 169
-- On INTCONST shift to state 133
-- On IDENT shift to state 173
-- On FLOATCONST shift to state 135
-- On FALSE shift to state 136
-- On CONSTRUCTOR shift to state 175
-- On CHARCONST shift to state 139
-- On BANG shift to state 176
-- On expression0 shift to state 269
-- On constant shift to state 185
## Reductions:

State 125:
## Known stack suffix:
## LPAREN
## LR(1) items:
expression0 -> LPAREN . expression COLON type_scheme RPAREN [ WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND ]
expression0 -> LPAREN . expression RPAREN [ WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND ]
## Transitions:
-- On UNIT shift to state 108
-- On TRY shift to state 121
-- On TRUE shift to state 122
-- On STRINGCONST shift to state 123
-- On REF shift to state 124
-- On REC shift to state 126
-- On RAISE shift to state 160
-- On MATCH shift to state 163
-- On LPAREN shift to state 125
-- On LET shift to state 164
-- On LBRACKETBAR shift to state 161
-- On LBRACKET shift to state 162
-- On LBRACE shift to state 169
-- On INTCONST shift to state 133
-- On IF shift to state 172
-- On IDENT shift to state 173
-- On FUNCTION shift to state 206
-- On FUN shift to state 209
-- On FLOATCONST shift to state 135
-- On FALSE shift to state 136
-- On CONSTRUCTOR shift to state 174
-- On CHARCONST shift to state 139
-- On BANG shift to state 176
-- On expression3 shift to state 212
-- On expression2 shift to state 213
-- On expression1 shift to state 195
-- On expression0 shift to state 186
-- On expression shift to state 264
-- On constant shift to state 185
## Reductions:

State 126:
## Known stack suffix:
## REC
## LR(1) items:
expression -> REC . pattern IN expression [ WITH SEMISEMI RPAREN IN COLON BAR AND ]
## Transitions:
-- On UNIT shift to state 108
-- On UNDERSCORE shift to state 127
-- On TRUE shift to state 122
-- On STRINGCONST shift to state 123
-- On REF shift to state 128
-- On LPAREN shift to state 129
-- On LBRACE shift to state 130
-- On INTCONST shift to state 133
-- On IDENT shift to state 134
-- On FLOATCONST shift to state 135
-- On FALSE shift to state 136
-- On CONSTRUCTOR shift to state 137
-- On CHARCONST shift to state 139
-- On simple_pattern shift to state 142
-- On pattern shift to state 158
-- On constant shift to state 141
## Reductions:

State 127:
## Known stack suffix:
## UNDERSCORE
## LR(1) items:
simple_pattern -> UNDERSCORE . [ UNIT UNDERSCORE TRUE STRINGCONST SEMI RPAREN RBRACE LPAREN LBRACE INTCONST IN IDENT FLOATCONST FALSE EQUAL CONSTRUCTOR COMMA CHARCONST BAR AS ARROW ]
## Transitions:
## Reductions:
-- On UNIT UNDERSCORE TRUE STRINGCONST SEMI RPAREN RBRACE LPAREN LBRACE INTCONST IN IDENT FLOATCONST FALSE EQUAL CONSTRUCTOR COMMA CHARCONST BAR AS ARROW
--   reduce production simple_pattern -> UNDERSCORE

State 128:
## Known stack suffix:
## REF
## LR(1) items:
pattern -> REF . simple_pattern [ SEMI RPAREN RBRACE IN EQUAL COMMA BAR AS ARROW ]
## Transitions:
-- On UNIT shift to state 108
-- On UNDERSCORE shift to state 127
-- On TRUE shift to state 122
-- On STRINGCONST shift to state 123
-- On LPAREN shift to state 129
-- On LBRACE shift to state 130
-- On INTCONST shift to state 133
-- On IDENT shift to state 134
-- On FLOATCONST shift to state 135
-- On FALSE shift to state 136
-- On CONSTRUCTOR shift to state 138
-- On CHARCONST shift to state 139
-- On simple_pattern shift to state 157
-- On constant shift to state 141
## Reductions:

State 129:
## Known stack suffix:
## LPAREN
## LR(1) items:
simple_pattern -> LPAREN . pattern RPAREN [ UNIT UNDERSCORE TRUE STRINGCONST SEMI RPAREN RBRACE LPAREN LBRACE INTCONST IN IDENT FLOATCONST FALSE EQUAL CONSTRUCTOR COMMA CHARCONST BAR AS ARROW ]
## Transitions:
-- On UNIT shift to state 108
-- On UNDERSCORE shift to state 127
-- On TRUE shift to state 122
-- On STRINGCONST shift to state 123
-- On REF shift to state 128
-- On LPAREN shift to state 129
-- On LBRACE shift to state 130
-- On INTCONST shift to state 133
-- On IDENT shift to state 134
-- On FLOATCONST shift to state 135
-- On FALSE shift to state 136
-- On CONSTRUCTOR shift to state 137
-- On CHARCONST shift to state 139
-- On simple_pattern shift to state 142
-- On pattern shift to state 155
-- On constant shift to state 141
## Reductions:

State 130:
## Known stack suffix:
## LBRACE
## LR(1) items:
simple_pattern -> LBRACE . label_pattern_list RBRACE [ UNIT UNDERSCORE TRUE STRINGCONST SEMI RPAREN RBRACE LPAREN LBRACE INTCONST IN IDENT FLOATCONST FALSE EQUAL CONSTRUCTOR COMMA CHARCONST BAR AS ARROW ]
## Transitions:
-- On IDENT shift to state 131
-- On label_pattern_list shift to state 150
-- On label_pattern shift to state 152
## Reductions:
-- On RBRACE
--   reduce production label_pattern_list ->

State 131:
## Known stack suffix:
## IDENT
## LR(1) items:
label_pattern -> IDENT . EQUAL pattern [ SEMI RBRACE ]
## Transitions:
-- On EQUAL shift to state 132
## Reductions:

State 132:
## Known stack suffix:
## IDENT EQUAL
## LR(1) items:
label_pattern -> IDENT EQUAL . pattern [ SEMI RBRACE ]
## Transitions:
-- On UNIT shift to state 108
-- On UNDERSCORE shift to state 127
-- On TRUE shift to state 122
-- On STRINGCONST shift to state 123
-- On REF shift to state 128
-- On LPAREN shift to state 129
-- On LBRACE shift to state 130
-- On INTCONST shift to state 133
-- On IDENT shift to state 134
-- On FLOATCONST shift to state 135
-- On FALSE shift to state 136
-- On CONSTRUCTOR shift to state 137
-- On CHARCONST shift to state 139
-- On simple_pattern shift to state 142
-- On pattern shift to state 143
-- On constant shift to state 141
## Reductions:

State 133:
## Known stack suffix:
## INTCONST
## LR(1) items:
constant -> INTCONST . [ WITH UNIT UNDERSCORE TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE EQUAL ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AS ARROW AND ]
## Transitions:
## Reductions:
-- On WITH UNIT UNDERSCORE TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE EQUAL ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AS ARROW AND
--   reduce production constant -> INTCONST

State 134:
## Known stack suffix:
## IDENT
## LR(1) items:
simple_pattern -> IDENT . [ UNIT UNDERSCORE TRUE STRINGCONST SEMI RPAREN RBRACE LPAREN LBRACE INTCONST IN IDENT FLOATCONST FALSE EQUAL CONSTRUCTOR COMMA CHARCONST BAR AS ARROW ]
## Transitions:
## Reductions:
-- On UNIT UNDERSCORE TRUE STRINGCONST SEMI RPAREN RBRACE LPAREN LBRACE INTCONST IN IDENT FLOATCONST FALSE EQUAL CONSTRUCTOR COMMA CHARCONST BAR AS ARROW
--   reduce production simple_pattern -> IDENT

State 135:
## Known stack suffix:
## FLOATCONST
## LR(1) items:
constant -> FLOATCONST . [ WITH UNIT UNDERSCORE TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE EQUAL ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AS ARROW AND ]
## Transitions:
## Reductions:
-- On WITH UNIT UNDERSCORE TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE EQUAL ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AS ARROW AND
--   reduce production constant -> FLOATCONST

State 136:
## Known stack suffix:
## FALSE
## LR(1) items:
constant -> FALSE . [ WITH UNIT UNDERSCORE TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE EQUAL ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AS ARROW AND ]
## Transitions:
## Reductions:
-- On WITH UNIT UNDERSCORE TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE EQUAL ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AS ARROW AND
--   reduce production constant -> FALSE

State 137:
## Known stack suffix:
## CONSTRUCTOR
## LR(1) items:
pattern -> CONSTRUCTOR . simple_pattern [ SEMI RPAREN RBRACE IN EQUAL COMMA BAR AS ARROW ]
simple_pattern -> CONSTRUCTOR . [ SEMI RPAREN RBRACE IN EQUAL COMMA BAR AS ARROW ]
## Transitions:
-- On UNIT shift to state 108
-- On UNDERSCORE shift to state 127
-- On TRUE shift to state 122
-- On STRINGCONST shift to state 123
-- On LPAREN shift to state 129
-- On LBRACE shift to state 130
-- On INTCONST shift to state 133
-- On IDENT shift to state 134
-- On FLOATCONST shift to state 135
-- On FALSE shift to state 136
-- On CONSTRUCTOR shift to state 138
-- On CHARCONST shift to state 139
-- On simple_pattern shift to state 140
-- On constant shift to state 141
## Reductions:
-- On SEMI RPAREN RBRACE IN EQUAL COMMA BAR AS ARROW
--   reduce production simple_pattern -> CONSTRUCTOR

State 138:
## Known stack suffix:
## CONSTRUCTOR
## LR(1) items:
simple_pattern -> CONSTRUCTOR . [ UNIT UNDERSCORE TRUE STRINGCONST SEMI RPAREN RBRACE LPAREN LBRACE INTCONST IN IDENT FLOATCONST FALSE EQUAL CONSTRUCTOR COMMA CHARCONST BAR AS ARROW ]
## Transitions:
## Reductions:
-- On UNIT UNDERSCORE TRUE STRINGCONST SEMI RPAREN RBRACE LPAREN LBRACE INTCONST IN IDENT FLOATCONST FALSE EQUAL CONSTRUCTOR COMMA CHARCONST BAR AS ARROW
--   reduce production simple_pattern -> CONSTRUCTOR

State 139:
## Known stack suffix:
## CHARCONST
## LR(1) items:
constant -> CHARCONST . [ WITH UNIT UNDERSCORE TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE EQUAL ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AS ARROW AND ]
## Transitions:
## Reductions:
-- On WITH UNIT UNDERSCORE TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE EQUAL ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AS ARROW AND
--   reduce production constant -> CHARCONST

State 140:
## Known stack suffix:
## CONSTRUCTOR simple_pattern
## LR(1) items:
pattern -> CONSTRUCTOR simple_pattern . [ SEMI RPAREN RBRACE IN EQUAL COMMA BAR AS ARROW ]
## Transitions:
## Reductions:
-- On SEMI RPAREN RBRACE IN EQUAL COMMA BAR AS ARROW
--   reduce production pattern -> CONSTRUCTOR simple_pattern

State 141:
## Known stack suffix:
## constant
## LR(1) items:
simple_pattern -> constant . [ UNIT UNDERSCORE TRUE STRINGCONST SEMI RPAREN RBRACE LPAREN LBRACE INTCONST IN IDENT FLOATCONST FALSE EQUAL CONSTRUCTOR COMMA CHARCONST BAR AS ARROW ]
## Transitions:
## Reductions:
-- On UNIT UNDERSCORE TRUE STRINGCONST SEMI RPAREN RBRACE LPAREN LBRACE INTCONST IN IDENT FLOATCONST FALSE EQUAL CONSTRUCTOR COMMA CHARCONST BAR AS ARROW
--   reduce production simple_pattern -> constant

State 142:
## Known stack suffix:
## simple_pattern
## LR(1) items:
pattern -> simple_pattern . [ SEMI RPAREN RBRACE IN EQUAL COMMA BAR AS ARROW ]
## Transitions:
## Reductions:
-- On SEMI RPAREN RBRACE IN EQUAL COMMA BAR AS ARROW
--   reduce production pattern -> simple_pattern

State 143:
## Known stack suffix:
## IDENT EQUAL pattern
## LR(1) items:
label_pattern -> IDENT EQUAL pattern . [ SEMI RBRACE ]
pattern -> pattern . AS IDENT [ SEMI RBRACE COMMA BAR AS ]
pattern -> pattern . COMMA pattern [ SEMI RBRACE COMMA BAR AS ]
pattern -> pattern . BAR pattern [ SEMI RBRACE COMMA BAR AS ]
## Transitions:
-- On COMMA shift to state 144
-- On BAR shift to state 146
-- On AS shift to state 148
## Reductions:
-- On SEMI RBRACE
--   reduce production label_pattern -> IDENT EQUAL pattern

State 144:
## Known stack suffix:
## pattern COMMA
## LR(1) items:
pattern -> pattern COMMA . pattern [ SEMI RPAREN RBRACE IN EQUAL COMMA BAR AS ARROW ]
## Transitions:
-- On UNIT shift to state 108
-- On UNDERSCORE shift to state 127
-- On TRUE shift to state 122
-- On STRINGCONST shift to state 123
-- On REF shift to state 128
-- On LPAREN shift to state 129
-- On LBRACE shift to state 130
-- On INTCONST shift to state 133
-- On IDENT shift to state 134
-- On FLOATCONST shift to state 135
-- On FALSE shift to state 136
-- On CONSTRUCTOR shift to state 137
-- On CHARCONST shift to state 139
-- On simple_pattern shift to state 142
-- On pattern shift to state 145
-- On constant shift to state 141
## Reductions:

State 145:
## Known stack suffix:
## pattern COMMA pattern
## LR(1) items:
pattern -> pattern . AS IDENT [ SEMI RPAREN RBRACE IN EQUAL COMMA BAR AS ARROW ]
pattern -> pattern . COMMA pattern [ SEMI RPAREN RBRACE IN EQUAL COMMA BAR AS ARROW ]
pattern -> pattern COMMA pattern . [ SEMI RPAREN RBRACE IN EQUAL COMMA BAR AS ARROW ]
pattern -> pattern . BAR pattern [ SEMI RPAREN RBRACE IN EQUAL COMMA BAR AS ARROW ]
## Transitions:
-- On COMMA shift to state 144
-- On BAR shift to state 146
-- On AS shift to state 148
## Reductions:
-- On SEMI RPAREN RBRACE IN EQUAL COMMA BAR AS ARROW
--   reduce production pattern -> pattern COMMA pattern
** Conflict on COMMA BAR AS

State 146:
## Known stack suffix:
## pattern BAR
## LR(1) items:
pattern -> pattern BAR . pattern [ SEMI RPAREN RBRACE IN EQUAL COMMA BAR AS ARROW ]
## Transitions:
-- On UNIT shift to state 108
-- On UNDERSCORE shift to state 127
-- On TRUE shift to state 122
-- On STRINGCONST shift to state 123
-- On REF shift to state 128
-- On LPAREN shift to state 129
-- On LBRACE shift to state 130
-- On INTCONST shift to state 133
-- On IDENT shift to state 134
-- On FLOATCONST shift to state 135
-- On FALSE shift to state 136
-- On CONSTRUCTOR shift to state 137
-- On CHARCONST shift to state 139
-- On simple_pattern shift to state 142
-- On pattern shift to state 147
-- On constant shift to state 141
## Reductions:

State 147:
## Known stack suffix:
## pattern BAR pattern
## LR(1) items:
pattern -> pattern . AS IDENT [ SEMI RPAREN RBRACE IN EQUAL COMMA BAR AS ARROW ]
pattern -> pattern . COMMA pattern [ SEMI RPAREN RBRACE IN EQUAL COMMA BAR AS ARROW ]
pattern -> pattern . BAR pattern [ SEMI RPAREN RBRACE IN EQUAL COMMA BAR AS ARROW ]
pattern -> pattern BAR pattern . [ SEMI RPAREN RBRACE IN EQUAL COMMA BAR AS ARROW ]
## Transitions:
-- On COMMA shift to state 144
-- On BAR shift to state 146
-- On AS shift to state 148
## Reductions:
-- On SEMI RPAREN RBRACE IN EQUAL COMMA BAR AS ARROW
--   reduce production pattern -> pattern BAR pattern
** Conflict on COMMA BAR AS

State 148:
## Known stack suffix:
## pattern AS
## LR(1) items:
pattern -> pattern AS . IDENT [ SEMI RPAREN RBRACE IN EQUAL COMMA BAR AS ARROW ]
## Transitions:
-- On IDENT shift to state 149
## Reductions:

State 149:
## Known stack suffix:
## pattern AS IDENT
## LR(1) items:
pattern -> pattern AS IDENT . [ SEMI RPAREN RBRACE IN EQUAL COMMA BAR AS ARROW ]
## Transitions:
## Reductions:
-- On SEMI RPAREN RBRACE IN EQUAL COMMA BAR AS ARROW
--   reduce production pattern -> pattern AS IDENT

State 150:
## Known stack suffix:
## LBRACE label_pattern_list
## LR(1) items:
simple_pattern -> LBRACE label_pattern_list . RBRACE [ UNIT UNDERSCORE TRUE STRINGCONST SEMI RPAREN RBRACE LPAREN LBRACE INTCONST IN IDENT FLOATCONST FALSE EQUAL CONSTRUCTOR COMMA CHARCONST BAR AS ARROW ]
## Transitions:
-- On RBRACE shift to state 151
## Reductions:

State 151:
## Known stack suffix:
## LBRACE label_pattern_list RBRACE
## LR(1) items:
simple_pattern -> LBRACE label_pattern_list RBRACE . [ UNIT UNDERSCORE TRUE STRINGCONST SEMI RPAREN RBRACE LPAREN LBRACE INTCONST IN IDENT FLOATCONST FALSE EQUAL CONSTRUCTOR COMMA CHARCONST BAR AS ARROW ]
## Transitions:
## Reductions:
-- On UNIT UNDERSCORE TRUE STRINGCONST SEMI RPAREN RBRACE LPAREN LBRACE INTCONST IN IDENT FLOATCONST FALSE EQUAL CONSTRUCTOR COMMA CHARCONST BAR AS ARROW
--   reduce production simple_pattern -> LBRACE label_pattern_list RBRACE

State 152:
## Known stack suffix:
## label_pattern
## LR(1) items:
label_pattern_list -> label_pattern . [ RBRACE ]
label_pattern_list -> label_pattern . SEMI label_pattern_list [ RBRACE ]
## Transitions:
-- On SEMI shift to state 153
## Reductions:
-- On RBRACE
--   reduce production label_pattern_list -> label_pattern

State 153:
## Known stack suffix:
## label_pattern SEMI
## LR(1) items:
label_pattern_list -> label_pattern SEMI . label_pattern_list [ RBRACE ]
## Transitions:
-- On IDENT shift to state 131
-- On label_pattern_list shift to state 154
-- On label_pattern shift to state 152
## Reductions:
-- On RBRACE
--   reduce production label_pattern_list ->

State 154:
## Known stack suffix:
## label_pattern SEMI label_pattern_list
## LR(1) items:
label_pattern_list -> label_pattern SEMI label_pattern_list . [ RBRACE ]
## Transitions:
## Reductions:
-- On RBRACE
--   reduce production label_pattern_list -> label_pattern SEMI label_pattern_list

State 155:
## Known stack suffix:
## LPAREN pattern
## LR(1) items:
pattern -> pattern . AS IDENT [ RPAREN COMMA BAR AS ]
pattern -> pattern . COMMA pattern [ RPAREN COMMA BAR AS ]
pattern -> pattern . BAR pattern [ RPAREN COMMA BAR AS ]
simple_pattern -> LPAREN pattern . RPAREN [ UNIT UNDERSCORE TRUE STRINGCONST SEMI RPAREN RBRACE LPAREN LBRACE INTCONST IN IDENT FLOATCONST FALSE EQUAL CONSTRUCTOR COMMA CHARCONST BAR AS ARROW ]
## Transitions:
-- On RPAREN shift to state 156
-- On COMMA shift to state 144
-- On BAR shift to state 146
-- On AS shift to state 148
## Reductions:

State 156:
## Known stack suffix:
## LPAREN pattern RPAREN
## LR(1) items:
simple_pattern -> LPAREN pattern RPAREN . [ UNIT UNDERSCORE TRUE STRINGCONST SEMI RPAREN RBRACE LPAREN LBRACE INTCONST IN IDENT FLOATCONST FALSE EQUAL CONSTRUCTOR COMMA CHARCONST BAR AS ARROW ]
## Transitions:
## Reductions:
-- On UNIT UNDERSCORE TRUE STRINGCONST SEMI RPAREN RBRACE LPAREN LBRACE INTCONST IN IDENT FLOATCONST FALSE EQUAL CONSTRUCTOR COMMA CHARCONST BAR AS ARROW
--   reduce production simple_pattern -> LPAREN pattern RPAREN

State 157:
## Known stack suffix:
## REF simple_pattern
## LR(1) items:
pattern -> REF simple_pattern . [ SEMI RPAREN RBRACE IN EQUAL COMMA BAR AS ARROW ]
## Transitions:
## Reductions:
-- On SEMI RPAREN RBRACE IN EQUAL COMMA BAR AS ARROW
--   reduce production pattern -> REF simple_pattern

State 158:
## Known stack suffix:
## REC pattern
## LR(1) items:
expression -> REC pattern . IN expression [ WITH SEMISEMI RPAREN IN COLON BAR AND ]
pattern -> pattern . AS IDENT [ IN COMMA BAR AS ]
pattern -> pattern . COMMA pattern [ IN COMMA BAR AS ]
pattern -> pattern . BAR pattern [ IN COMMA BAR AS ]
## Transitions:
-- On IN shift to state 159
-- On COMMA shift to state 144
-- On BAR shift to state 146
-- On AS shift to state 148
## Reductions:

State 159:
## Known stack suffix:
## REC pattern IN
## LR(1) items:
expression -> REC pattern IN . expression [ WITH SEMISEMI RPAREN IN COLON BAR AND ]
## Transitions:
-- On UNIT shift to state 108
-- On TRY shift to state 121
-- On TRUE shift to state 122
-- On STRINGCONST shift to state 123
-- On REF shift to state 124
-- On REC shift to state 126
-- On RAISE shift to state 160
-- On MATCH shift to state 163
-- On LPAREN shift to state 125
-- On LET shift to state 164
-- On LBRACKETBAR shift to state 161
-- On LBRACKET shift to state 162
-- On LBRACE shift to state 169
-- On INTCONST shift to state 133
-- On IF shift to state 172
-- On IDENT shift to state 173
-- On FUNCTION shift to state 206
-- On FUN shift to state 209
-- On FLOATCONST shift to state 135
-- On FALSE shift to state 136
-- On CONSTRUCTOR shift to state 174
-- On CHARCONST shift to state 139
-- On BANG shift to state 176
-- On expression3 shift to state 212
-- On expression2 shift to state 213
-- On expression1 shift to state 195
-- On expression0 shift to state 186
-- On expression shift to state 263
-- On constant shift to state 185
## Reductions:

State 160:
## Known stack suffix:
## RAISE
## LR(1) items:
expression1 -> RAISE . expression0 [ WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND ]
## Transitions:
-- On UNIT shift to state 108
-- On TRUE shift to state 122
-- On STRINGCONST shift to state 123
-- On LPAREN shift to state 125
-- On LBRACKETBAR shift to state 161
-- On LBRACKET shift to state 162
-- On LBRACE shift to state 169
-- On INTCONST shift to state 133
-- On IDENT shift to state 173
-- On FLOATCONST shift to state 135
-- On FALSE shift to state 136
-- On CONSTRUCTOR shift to state 175
-- On CHARCONST shift to state 139
-- On BANG shift to state 176
-- On expression0 shift to state 262
-- On constant shift to state 185
## Reductions:

State 161:
## Known stack suffix:
## LBRACKETBAR
## LR(1) items:
expression0 -> LBRACKETBAR . expr_semi_list BARRBRACKET [ WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND ]
## Transitions:
-- On UNIT shift to state 108
-- On TRUE shift to state 122
-- On STRINGCONST shift to state 123
-- On REF shift to state 124
-- On RAISE shift to state 160
-- On LPAREN shift to state 125
-- On LBRACKETBAR shift to state 161
-- On LBRACKET shift to state 162
-- On LBRACE shift to state 169
-- On INTCONST shift to state 133
-- On IF shift to state 172
-- On IDENT shift to state 173
-- On FLOATCONST shift to state 135
-- On FALSE shift to state 136
-- On CONSTRUCTOR shift to state 174
-- On CHARCONST shift to state 139
-- On BANG shift to state 176
-- On expression2 shift to state 257
-- On expression1 shift to state 195
-- On expression0 shift to state 186
-- On expr_semi_list shift to state 260
-- On constant shift to state 185
## Reductions:
-- On BARRBRACKET
--   reduce production expr_semi_list ->

State 162:
## Known stack suffix:
## LBRACKET
## LR(1) items:
expression0 -> LBRACKET . expression COLON constrained_type RBRACKET [ WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND ]
## Transitions:
-- On UNIT shift to state 108
-- On TRY shift to state 121
-- On TRUE shift to state 122
-- On STRINGCONST shift to state 123
-- On REF shift to state 124
-- On REC shift to state 126
-- On RAISE shift to state 160
-- On MATCH shift to state 163
-- On LPAREN shift to state 125
-- On LET shift to state 164
-- On LBRACKETBAR shift to state 161
-- On LBRACKET shift to state 162
-- On LBRACE shift to state 169
-- On INTCONST shift to state 133
-- On IF shift to state 172
-- On IDENT shift to state 173
-- On FUNCTION shift to state 206
-- On FUN shift to state 209
-- On FLOATCONST shift to state 135
-- On FALSE shift to state 136
-- On CONSTRUCTOR shift to state 174
-- On CHARCONST shift to state 139
-- On BANG shift to state 176
-- On expression3 shift to state 212
-- On expression2 shift to state 213
-- On expression1 shift to state 195
-- On expression0 shift to state 186
-- On expression shift to state 242
-- On constant shift to state 185
## Reductions:

State 163:
## Known stack suffix:
## MATCH
## LR(1) items:
expression -> MATCH . expression WITH function_match [ WITH SEMISEMI RPAREN IN COLON BAR AND ]
## Transitions:
-- On UNIT shift to state 108
-- On TRY shift to state 121
-- On TRUE shift to state 122
-- On STRINGCONST shift to state 123
-- On REF shift to state 124
-- On REC shift to state 126
-- On RAISE shift to state 160
-- On MATCH shift to state 163
-- On LPAREN shift to state 125
-- On LET shift to state 164
-- On LBRACKETBAR shift to state 161
-- On LBRACKET shift to state 162
-- On LBRACE shift to state 169
-- On INTCONST shift to state 133
-- On IF shift to state 172
-- On IDENT shift to state 173
-- On FUNCTION shift to state 206
-- On FUN shift to state 209
-- On FLOATCONST shift to state 135
-- On FALSE shift to state 136
-- On CONSTRUCTOR shift to state 174
-- On CHARCONST shift to state 139
-- On BANG shift to state 176
-- On expression3 shift to state 212
-- On expression2 shift to state 213
-- On expression1 shift to state 195
-- On expression0 shift to state 186
-- On expression shift to state 239
-- On constant shift to state 185
## Reductions:

State 164:
## Known stack suffix:
## LET
## LR(1) items:
expression -> LET . binding_list IN expression [ WITH SEMISEMI RPAREN IN COLON BAR AND ]
expression -> LET . REC binding_list IN expression [ WITH SEMISEMI RPAREN IN COLON BAR AND ]
## Transitions:
-- On UNIT shift to state 108
-- On UNDERSCORE shift to state 127
-- On TRUE shift to state 122
-- On STRINGCONST shift to state 123
-- On REF shift to state 128
-- On REC shift to state 165
-- On LPAREN shift to state 129
-- On LBRACE shift to state 130
-- On INTCONST shift to state 133
-- On IDENT shift to state 166
-- On FLOATCONST shift to state 135
-- On FALSE shift to state 136
-- On CONSTRUCTOR shift to state 137
-- On CHARCONST shift to state 139
-- On simple_pattern shift to state 142
-- On pattern shift to state 227
-- On constant shift to state 141
-- On binding_list shift to state 236
-- On binding shift to state 233
## Reductions:

State 165:
## Known stack suffix:
## LET REC
## LR(1) items:
expression -> LET REC . binding_list IN expression [ WITH SEMISEMI RPAREN IN COLON BAR AND ]
## Transitions:
-- On UNIT shift to state 108
-- On UNDERSCORE shift to state 127
-- On TRUE shift to state 122
-- On STRINGCONST shift to state 123
-- On REF shift to state 128
-- On LPAREN shift to state 129
-- On LBRACE shift to state 130
-- On INTCONST shift to state 133
-- On IDENT shift to state 166
-- On FLOATCONST shift to state 135
-- On FALSE shift to state 136
-- On CONSTRUCTOR shift to state 137
-- On CHARCONST shift to state 139
-- On simple_pattern shift to state 142
-- On pattern shift to state 227
-- On constant shift to state 141
-- On binding_list shift to state 230
-- On binding shift to state 233
## Reductions:

State 166:
## Known stack suffix:
## IDENT
## LR(1) items:
binding -> IDENT . simple_pattern_list EQUAL expression [ SEMISEMI IN AND ]
simple_pattern -> IDENT . [ EQUAL COMMA BAR AS ]
## Transitions:
-- On UNIT shift to state 108
-- On UNDERSCORE shift to state 127
-- On TRUE shift to state 122
-- On STRINGCONST shift to state 123
-- On LPAREN shift to state 129
-- On LBRACE shift to state 130
-- On INTCONST shift to state 133
-- On IDENT shift to state 134
-- On FLOATCONST shift to state 135
-- On FALSE shift to state 136
-- On CONSTRUCTOR shift to state 138
-- On CHARCONST shift to state 139
-- On simple_pattern_list shift to state 167
-- On simple_pattern shift to state 218
-- On constant shift to state 141
## Reductions:
-- On EQUAL COMMA BAR AS
--   reduce production simple_pattern -> IDENT

State 167:
## Known stack suffix:
## IDENT simple_pattern_list
## LR(1) items:
binding -> IDENT simple_pattern_list . EQUAL expression [ SEMISEMI IN AND ]
## Transitions:
-- On EQUAL shift to state 168
## Reductions:

State 168:
## Known stack suffix:
## IDENT simple_pattern_list EQUAL
## LR(1) items:
binding -> IDENT simple_pattern_list EQUAL . expression [ SEMISEMI IN AND ]
## Transitions:
-- On UNIT shift to state 108
-- On TRY shift to state 121
-- On TRUE shift to state 122
-- On STRINGCONST shift to state 123
-- On REF shift to state 124
-- On REC shift to state 126
-- On RAISE shift to state 160
-- On MATCH shift to state 163
-- On LPAREN shift to state 125
-- On LET shift to state 164
-- On LBRACKETBAR shift to state 161
-- On LBRACKET shift to state 162
-- On LBRACE shift to state 169
-- On INTCONST shift to state 133
-- On IF shift to state 172
-- On IDENT shift to state 173
-- On FUNCTION shift to state 206
-- On FUN shift to state 209
-- On FLOATCONST shift to state 135
-- On FALSE shift to state 136
-- On CONSTRUCTOR shift to state 174
-- On CHARCONST shift to state 139
-- On BANG shift to state 176
-- On expression3 shift to state 212
-- On expression2 shift to state 213
-- On expression1 shift to state 195
-- On expression0 shift to state 186
-- On expression shift to state 226
-- On constant shift to state 185
## Reductions:

State 169:
## Known stack suffix:
## LBRACE
## LR(1) items:
expression0 -> LBRACE . label_expression_list RBRACE [ WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND ]
## Transitions:
-- On IDENT shift to state 170
-- On label_expression_list shift to state 201
-- On label_expression shift to state 203
## Reductions:
-- On RBRACE
--   reduce production label_expression_list ->

State 170:
## Known stack suffix:
## IDENT
## LR(1) items:
label_expression -> IDENT . EQUAL expression2 [ SEMI RBRACE ]
## Transitions:
-- On EQUAL shift to state 171
## Reductions:

State 171:
## Known stack suffix:
## IDENT EQUAL
## LR(1) items:
label_expression -> IDENT EQUAL . expression2 [ SEMI RBRACE ]
## Transitions:
-- On UNIT shift to state 108
-- On TRUE shift to state 122
-- On STRINGCONST shift to state 123
-- On REF shift to state 124
-- On RAISE shift to state 160
-- On LPAREN shift to state 125
-- On LBRACKETBAR shift to state 161
-- On LBRACKET shift to state 162
-- On LBRACE shift to state 169
-- On INTCONST shift to state 133
-- On IF shift to state 172
-- On IDENT shift to state 173
-- On FLOATCONST shift to state 135
-- On FALSE shift to state 136
-- On CONSTRUCTOR shift to state 174
-- On CHARCONST shift to state 139
-- On BANG shift to state 176
-- On expression2 shift to state 200
-- On expression1 shift to state 195
-- On expression0 shift to state 186
-- On constant shift to state 185
## Reductions:

State 172:
## Known stack suffix:
## IF
## LR(1) items:
expression2 -> IF . expression1 THEN expression2 ELSE expression2 [ WITH SEMISEMI SEMI RPAREN RBRACE IN ELSE COLON BARRBRACKET BAR AND ]
## Transitions:
-- On UNIT shift to state 108
-- On TRUE shift to state 122
-- On STRINGCONST shift to state 123
-- On REF shift to state 124
-- On RAISE shift to state 160
-- On LPAREN shift to state 125
-- On LBRACKETBAR shift to state 161
-- On LBRACKET shift to state 162
-- On LBRACE shift to state 169
-- On INTCONST shift to state 133
-- On IDENT shift to state 173
-- On FLOATCONST shift to state 135
-- On FALSE shift to state 136
-- On CONSTRUCTOR shift to state 174
-- On CHARCONST shift to state 139
-- On BANG shift to state 176
-- On expression1 shift to state 190
-- On expression0 shift to state 186
-- On constant shift to state 185
## Reductions:

State 173:
## Known stack suffix:
## IDENT
## LR(1) items:
expression0 -> IDENT . [ WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND ]
## Transitions:
## Reductions:
-- On WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND
--   reduce production expression0 -> IDENT

State 174:
## Known stack suffix:
## CONSTRUCTOR
## LR(1) items:
expression0 -> CONSTRUCTOR . [ WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND ]
expression1 -> CONSTRUCTOR . expression0 [ WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND ]
## Transitions:
-- On UNIT shift to state 108
-- On TRUE shift to state 122
-- On STRINGCONST shift to state 123
-- On LPAREN shift to state 125
-- On LBRACKETBAR shift to state 161
-- On LBRACKET shift to state 162
-- On LBRACE shift to state 169
-- On INTCONST shift to state 133
-- On IDENT shift to state 173
-- On FLOATCONST shift to state 135
-- On FALSE shift to state 136
-- On CONSTRUCTOR shift to state 175
-- On CHARCONST shift to state 139
-- On BANG shift to state 176
-- On expression0 shift to state 189
-- On constant shift to state 185
## Reductions:
-- On WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND
--   reduce production expression0 -> CONSTRUCTOR
** Conflict on UNIT TRUE STRINGCONST LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IDENT FLOATCONST FALSE CONSTRUCTOR CHARCONST BANG

State 175:
## Known stack suffix:
## CONSTRUCTOR
## LR(1) items:
expression0 -> CONSTRUCTOR . [ WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND ]
## Transitions:
## Reductions:
-- On WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND
--   reduce production expression0 -> CONSTRUCTOR

State 176:
## Known stack suffix:
## BANG
## LR(1) items:
expression0 -> BANG . expression0 [ WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND ]
## Transitions:
-- On UNIT shift to state 108
-- On TRUE shift to state 122
-- On STRINGCONST shift to state 123
-- On LPAREN shift to state 125
-- On LBRACKETBAR shift to state 161
-- On LBRACKET shift to state 162
-- On LBRACE shift to state 169
-- On INTCONST shift to state 133
-- On IDENT shift to state 173
-- On FLOATCONST shift to state 135
-- On FALSE shift to state 136
-- On CONSTRUCTOR shift to state 175
-- On CHARCONST shift to state 139
-- On BANG shift to state 176
-- On expression0 shift to state 177
-- On constant shift to state 185
## Reductions:

State 177:
## Known stack suffix:
## BANG expression0
## LR(1) items:
expression0 -> BANG expression0 . [ WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND ]
expression0 -> expression0 . DOT IDENT LEFTARROW expression1 [ WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND ]
expression0 -> expression0 . DOT IDENT [ WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND ]
expression0 -> expression0 . AT expression1 [ WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND ]
expression0 -> expression0 . ATAT expression1 [ WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND ]
## Transitions:
-- On DOT shift to state 178
-- On ATAT shift to state 183
-- On AT shift to state 187
## Reductions:
-- On WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND
--   reduce production expression0 -> BANG expression0
** Conflict on DOT ATAT AT

State 178:
## Known stack suffix:
## expression0 DOT
## LR(1) items:
expression0 -> expression0 DOT . IDENT LEFTARROW expression1 [ WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND ]
expression0 -> expression0 DOT . IDENT [ WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND ]
## Transitions:
-- On IDENT shift to state 179
## Reductions:

State 179:
## Known stack suffix:
## expression0 DOT IDENT
## LR(1) items:
expression0 -> expression0 DOT IDENT . LEFTARROW expression1 [ WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND ]
expression0 -> expression0 DOT IDENT . [ WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND ]
## Transitions:
-- On LEFTARROW shift to state 180
## Reductions:
-- On WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND
--   reduce production expression0 -> expression0 DOT IDENT

State 180:
## Known stack suffix:
## expression0 DOT IDENT LEFTARROW
## LR(1) items:
expression0 -> expression0 DOT IDENT LEFTARROW . expression1 [ WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND ]
## Transitions:
-- On UNIT shift to state 108
-- On TRUE shift to state 122
-- On STRINGCONST shift to state 123
-- On REF shift to state 124
-- On RAISE shift to state 160
-- On LPAREN shift to state 125
-- On LBRACKETBAR shift to state 161
-- On LBRACKET shift to state 162
-- On LBRACE shift to state 169
-- On INTCONST shift to state 133
-- On IDENT shift to state 173
-- On FLOATCONST shift to state 135
-- On FALSE shift to state 136
-- On CONSTRUCTOR shift to state 174
-- On CHARCONST shift to state 139
-- On BANG shift to state 176
-- On expression1 shift to state 181
-- On expression0 shift to state 186
-- On constant shift to state 185
## Reductions:

State 181:
## Known stack suffix:
## expression0 DOT IDENT LEFTARROW expression1
## LR(1) items:
expression0 -> expression0 DOT IDENT LEFTARROW expression1 . [ WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND ]
expression1 -> expression1 . expression0 [ WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND ]
## Transitions:
-- On UNIT shift to state 108
-- On TRUE shift to state 122
-- On STRINGCONST shift to state 123
-- On LPAREN shift to state 125
-- On LBRACKETBAR shift to state 161
-- On LBRACKET shift to state 162
-- On LBRACE shift to state 169
-- On INTCONST shift to state 133
-- On IDENT shift to state 173
-- On FLOATCONST shift to state 135
-- On FALSE shift to state 136
-- On CONSTRUCTOR shift to state 175
-- On CHARCONST shift to state 139
-- On BANG shift to state 176
-- On expression0 shift to state 182
-- On constant shift to state 185
## Reductions:
-- On WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND
--   reduce production expression0 -> expression0 DOT IDENT LEFTARROW expression1
** Conflict on UNIT TRUE STRINGCONST LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IDENT FLOATCONST FALSE CONSTRUCTOR CHARCONST BANG

State 182:
## Known stack suffix:
## expression1 expression0
## LR(1) items:
expression0 -> expression0 . DOT IDENT LEFTARROW expression1 [ WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND ]
expression0 -> expression0 . DOT IDENT [ WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND ]
expression0 -> expression0 . AT expression1 [ WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND ]
expression0 -> expression0 . ATAT expression1 [ WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND ]
expression1 -> expression1 expression0 . [ WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND ]
## Transitions:
-- On DOT shift to state 178
-- On ATAT shift to state 183
-- On AT shift to state 187
## Reductions:
-- On WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND
--   reduce production expression1 -> expression1 expression0
** Conflict on DOT ATAT AT

State 183:
## Known stack suffix:
## expression0 ATAT
## LR(1) items:
expression0 -> expression0 ATAT . expression1 [ WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND ]
## Transitions:
-- On UNIT shift to state 108
-- On TRUE shift to state 122
-- On STRINGCONST shift to state 123
-- On REF shift to state 124
-- On RAISE shift to state 160
-- On LPAREN shift to state 125
-- On LBRACKETBAR shift to state 161
-- On LBRACKET shift to state 162
-- On LBRACE shift to state 169
-- On INTCONST shift to state 133
-- On IDENT shift to state 173
-- On FLOATCONST shift to state 135
-- On FALSE shift to state 136
-- On CONSTRUCTOR shift to state 174
-- On CHARCONST shift to state 139
-- On BANG shift to state 176
-- On expression1 shift to state 184
-- On expression0 shift to state 186
-- On constant shift to state 185
## Reductions:

State 184:
## Known stack suffix:
## expression0 ATAT expression1
## LR(1) items:
expression0 -> expression0 ATAT expression1 . [ WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND ]
expression1 -> expression1 . expression0 [ WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND ]
## Transitions:
-- On UNIT shift to state 108
-- On TRUE shift to state 122
-- On STRINGCONST shift to state 123
-- On LPAREN shift to state 125
-- On LBRACKETBAR shift to state 161
-- On LBRACKET shift to state 162
-- On LBRACE shift to state 169
-- On INTCONST shift to state 133
-- On IDENT shift to state 173
-- On FLOATCONST shift to state 135
-- On FALSE shift to state 136
-- On CONSTRUCTOR shift to state 175
-- On CHARCONST shift to state 139
-- On BANG shift to state 176
-- On expression0 shift to state 182
-- On constant shift to state 185
## Reductions:
-- On WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND
--   reduce production expression0 -> expression0 ATAT expression1
** Conflict on UNIT TRUE STRINGCONST LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IDENT FLOATCONST FALSE CONSTRUCTOR CHARCONST BANG

State 185:
## Known stack suffix:
## constant
## LR(1) items:
expression0 -> constant . [ WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND ]
## Transitions:
## Reductions:
-- On WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND
--   reduce production expression0 -> constant

State 186:
## Known stack suffix:
## expression0
## LR(1) items:
expression0 -> expression0 . DOT IDENT LEFTARROW expression1 [ WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND ]
expression0 -> expression0 . DOT IDENT [ WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND ]
expression0 -> expression0 . AT expression1 [ WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND ]
expression0 -> expression0 . ATAT expression1 [ WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND ]
expression1 -> expression0 . [ WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND ]
## Transitions:
-- On DOT shift to state 178
-- On ATAT shift to state 183
-- On AT shift to state 187
## Reductions:
-- On WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND
--   reduce production expression1 -> expression0
** Conflict on DOT ATAT AT

State 187:
## Known stack suffix:
## expression0 AT
## LR(1) items:
expression0 -> expression0 AT . expression1 [ WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND ]
## Transitions:
-- On UNIT shift to state 108
-- On TRUE shift to state 122
-- On STRINGCONST shift to state 123
-- On REF shift to state 124
-- On RAISE shift to state 160
-- On LPAREN shift to state 125
-- On LBRACKETBAR shift to state 161
-- On LBRACKET shift to state 162
-- On LBRACE shift to state 169
-- On INTCONST shift to state 133
-- On IDENT shift to state 173
-- On FLOATCONST shift to state 135
-- On FALSE shift to state 136
-- On CONSTRUCTOR shift to state 174
-- On CHARCONST shift to state 139
-- On BANG shift to state 176
-- On expression1 shift to state 188
-- On expression0 shift to state 186
-- On constant shift to state 185
## Reductions:

State 188:
## Known stack suffix:
## expression0 AT expression1
## LR(1) items:
expression0 -> expression0 AT expression1 . [ WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND ]
expression1 -> expression1 . expression0 [ WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND ]
## Transitions:
-- On UNIT shift to state 108
-- On TRUE shift to state 122
-- On STRINGCONST shift to state 123
-- On LPAREN shift to state 125
-- On LBRACKETBAR shift to state 161
-- On LBRACKET shift to state 162
-- On LBRACE shift to state 169
-- On INTCONST shift to state 133
-- On IDENT shift to state 173
-- On FLOATCONST shift to state 135
-- On FALSE shift to state 136
-- On CONSTRUCTOR shift to state 175
-- On CHARCONST shift to state 139
-- On BANG shift to state 176
-- On expression0 shift to state 182
-- On constant shift to state 185
## Reductions:
-- On WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND
--   reduce production expression0 -> expression0 AT expression1
** Conflict on UNIT TRUE STRINGCONST LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IDENT FLOATCONST FALSE CONSTRUCTOR CHARCONST BANG

State 189:
## Known stack suffix:
## CONSTRUCTOR expression0
## LR(1) items:
expression0 -> expression0 . DOT IDENT LEFTARROW expression1 [ WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND ]
expression0 -> expression0 . DOT IDENT [ WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND ]
expression0 -> expression0 . AT expression1 [ WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND ]
expression0 -> expression0 . ATAT expression1 [ WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND ]
expression1 -> CONSTRUCTOR expression0 . [ WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND ]
## Transitions:
-- On DOT shift to state 178
-- On ATAT shift to state 183
-- On AT shift to state 187
## Reductions:
-- On WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND
--   reduce production expression1 -> CONSTRUCTOR expression0
** Conflict on DOT ATAT AT

State 190:
## Known stack suffix:
## IF expression1
## LR(1) items:
expression1 -> expression1 . expression0 [ UNIT TRUE THEN STRINGCONST LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IDENT FLOATCONST FALSE CONSTRUCTOR CHARCONST BANG ]
expression2 -> IF expression1 . THEN expression2 ELSE expression2 [ WITH SEMISEMI SEMI RPAREN RBRACE IN ELSE COLON BARRBRACKET BAR AND ]
## Transitions:
-- On UNIT shift to state 108
-- On TRUE shift to state 122
-- On THEN shift to state 191
-- On STRINGCONST shift to state 123
-- On LPAREN shift to state 125
-- On LBRACKETBAR shift to state 161
-- On LBRACKET shift to state 162
-- On LBRACE shift to state 169
-- On INTCONST shift to state 133
-- On IDENT shift to state 173
-- On FLOATCONST shift to state 135
-- On FALSE shift to state 136
-- On CONSTRUCTOR shift to state 175
-- On CHARCONST shift to state 139
-- On BANG shift to state 176
-- On expression0 shift to state 182
-- On constant shift to state 185
## Reductions:

State 191:
## Known stack suffix:
## IF expression1 THEN
## LR(1) items:
expression2 -> IF expression1 THEN . expression2 ELSE expression2 [ WITH SEMISEMI SEMI RPAREN RBRACE IN ELSE COLON BARRBRACKET BAR AND ]
## Transitions:
-- On UNIT shift to state 108
-- On TRUE shift to state 122
-- On STRINGCONST shift to state 123
-- On REF shift to state 124
-- On RAISE shift to state 160
-- On LPAREN shift to state 125
-- On LBRACKETBAR shift to state 161
-- On LBRACKET shift to state 162
-- On LBRACE shift to state 169
-- On INTCONST shift to state 133
-- On IF shift to state 172
-- On IDENT shift to state 173
-- On FLOATCONST shift to state 135
-- On FALSE shift to state 136
-- On CONSTRUCTOR shift to state 174
-- On CHARCONST shift to state 139
-- On BANG shift to state 176
-- On expression2 shift to state 192
-- On expression1 shift to state 195
-- On expression0 shift to state 186
-- On constant shift to state 185
## Reductions:

State 192:
## Known stack suffix:
## IF expression1 THEN expression2
## LR(1) items:
expression2 -> IF expression1 THEN expression2 . ELSE expression2 [ WITH SEMISEMI SEMI RPAREN RBRACE IN ELSE COLON BARRBRACKET BAR AND ]
## Transitions:
-- On ELSE shift to state 193
## Reductions:

State 193:
## Known stack suffix:
## IF expression1 THEN expression2 ELSE
## LR(1) items:
expression2 -> IF expression1 THEN expression2 ELSE . expression2 [ WITH SEMISEMI SEMI RPAREN RBRACE IN ELSE COLON BARRBRACKET BAR AND ]
## Transitions:
-- On UNIT shift to state 108
-- On TRUE shift to state 122
-- On STRINGCONST shift to state 123
-- On REF shift to state 124
-- On RAISE shift to state 160
-- On LPAREN shift to state 125
-- On LBRACKETBAR shift to state 161
-- On LBRACKET shift to state 162
-- On LBRACE shift to state 169
-- On INTCONST shift to state 133
-- On IF shift to state 172
-- On IDENT shift to state 173
-- On FLOATCONST shift to state 135
-- On FALSE shift to state 136
-- On CONSTRUCTOR shift to state 174
-- On CHARCONST shift to state 139
-- On BANG shift to state 176
-- On expression2 shift to state 194
-- On expression1 shift to state 195
-- On expression0 shift to state 186
-- On constant shift to state 185
## Reductions:

State 194:
## Known stack suffix:
## IF expression1 THEN expression2 ELSE expression2
## LR(1) items:
expression2 -> IF expression1 THEN expression2 ELSE expression2 . [ WITH SEMISEMI SEMI RPAREN RBRACE IN ELSE COLON BARRBRACKET BAR AND ]
## Transitions:
## Reductions:
-- On WITH SEMISEMI SEMI RPAREN RBRACE IN ELSE COLON BARRBRACKET BAR AND
--   reduce production expression2 -> IF expression1 THEN expression2 ELSE expression2

State 195:
## Known stack suffix:
## expression1
## LR(1) items:
expression1 -> expression1 . expression0 [ WITH UNIT TRUE STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ASSIGN AND ]
expression2 -> expression1 . [ WITH SEMISEMI SEMI RPAREN RBRACE IN ELSE COLON BARRBRACKET BAR AND ]
expression2 -> expression1 . COMMA expression2 [ WITH SEMISEMI SEMI RPAREN RBRACE IN ELSE COLON BARRBRACKET BAR AND ]
expression2 -> expression1 . ASSIGN expression1 [ WITH SEMISEMI SEMI RPAREN RBRACE IN ELSE COLON BARRBRACKET BAR AND ]
## Transitions:
-- On UNIT shift to state 108
-- On TRUE shift to state 122
-- On STRINGCONST shift to state 123
-- On LPAREN shift to state 125
-- On LBRACKETBAR shift to state 161
-- On LBRACKET shift to state 162
-- On LBRACE shift to state 169
-- On INTCONST shift to state 133
-- On IDENT shift to state 173
-- On FLOATCONST shift to state 135
-- On FALSE shift to state 136
-- On CONSTRUCTOR shift to state 175
-- On COMMA shift to state 196
-- On CHARCONST shift to state 139
-- On BANG shift to state 176
-- On ASSIGN shift to state 198
-- On expression0 shift to state 182
-- On constant shift to state 185
## Reductions:
-- On WITH SEMISEMI SEMI RPAREN RBRACE IN ELSE COLON BARRBRACKET BAR AND
--   reduce production expression2 -> expression1

State 196:
## Known stack suffix:
## expression1 COMMA
## LR(1) items:
expression2 -> expression1 COMMA . expression2 [ WITH SEMISEMI SEMI RPAREN RBRACE IN ELSE COLON BARRBRACKET BAR AND ]
## Transitions:
-- On UNIT shift to state 108
-- On TRUE shift to state 122
-- On STRINGCONST shift to state 123
-- On REF shift to state 124
-- On RAISE shift to state 160
-- On LPAREN shift to state 125
-- On LBRACKETBAR shift to state 161
-- On LBRACKET shift to state 162
-- On LBRACE shift to state 169
-- On INTCONST shift to state 133
-- On IF shift to state 172
-- On IDENT shift to state 173
-- On FLOATCONST shift to state 135
-- On FALSE shift to state 136
-- On CONSTRUCTOR shift to state 174
-- On CHARCONST shift to state 139
-- On BANG shift to state 176
-- On expression2 shift to state 197
-- On expression1 shift to state 195
-- On expression0 shift to state 186
-- On constant shift to state 185
## Reductions:

State 197:
## Known stack suffix:
## expression1 COMMA expression2
## LR(1) items:
expression2 -> expression1 COMMA expression2 . [ WITH SEMISEMI SEMI RPAREN RBRACE IN ELSE COLON BARRBRACKET BAR AND ]
## Transitions:
## Reductions:
-- On WITH SEMISEMI SEMI RPAREN RBRACE IN ELSE COLON BARRBRACKET BAR AND
--   reduce production expression2 -> expression1 COMMA expression2

State 198:
## Known stack suffix:
## expression1 ASSIGN
## LR(1) items:
expression2 -> expression1 ASSIGN . expression1 [ WITH SEMISEMI SEMI RPAREN RBRACE IN ELSE COLON BARRBRACKET BAR AND ]
## Transitions:
-- On UNIT shift to state 108
-- On TRUE shift to state 122
-- On STRINGCONST shift to state 123
-- On REF shift to state 124
-- On RAISE shift to state 160
-- On LPAREN shift to state 125
-- On LBRACKETBAR shift to state 161
-- On LBRACKET shift to state 162
-- On LBRACE shift to state 169
-- On INTCONST shift to state 133
-- On IDENT shift to state 173
-- On FLOATCONST shift to state 135
-- On FALSE shift to state 136
-- On CONSTRUCTOR shift to state 174
-- On CHARCONST shift to state 139
-- On BANG shift to state 176
-- On expression1 shift to state 199
-- On expression0 shift to state 186
-- On constant shift to state 185
## Reductions:

State 199:
## Known stack suffix:
## expression1 ASSIGN expression1
## LR(1) items:
expression1 -> expression1 . expression0 [ WITH UNIT TRUE STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE CONSTRUCTOR COLON CHARCONST BARRBRACKET BAR BANG AND ]
expression2 -> expression1 ASSIGN expression1 . [ WITH SEMISEMI SEMI RPAREN RBRACE IN ELSE COLON BARRBRACKET BAR AND ]
## Transitions:
-- On UNIT shift to state 108
-- On TRUE shift to state 122
-- On STRINGCONST shift to state 123
-- On LPAREN shift to state 125
-- On LBRACKETBAR shift to state 161
-- On LBRACKET shift to state 162
-- On LBRACE shift to state 169
-- On INTCONST shift to state 133
-- On IDENT shift to state 173
-- On FLOATCONST shift to state 135
-- On FALSE shift to state 136
-- On CONSTRUCTOR shift to state 175
-- On CHARCONST shift to state 139
-- On BANG shift to state 176
-- On expression0 shift to state 182
-- On constant shift to state 185
## Reductions:
-- On WITH SEMISEMI SEMI RPAREN RBRACE IN ELSE COLON BARRBRACKET BAR AND
--   reduce production expression2 -> expression1 ASSIGN expression1

State 200:
## Known stack suffix:
## IDENT EQUAL expression2
## LR(1) items:
label_expression -> IDENT EQUAL expression2 . [ SEMI RBRACE ]
## Transitions:
## Reductions:
-- On SEMI RBRACE
--   reduce production label_expression -> IDENT EQUAL expression2

State 201:
## Known stack suffix:
## LBRACE label_expression_list
## LR(1) items:
expression0 -> LBRACE label_expression_list . RBRACE [ WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND ]
## Transitions:
-- On RBRACE shift to state 202
## Reductions:

State 202:
## Known stack suffix:
## LBRACE label_expression_list RBRACE
## LR(1) items:
expression0 -> LBRACE label_expression_list RBRACE . [ WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND ]
## Transitions:
## Reductions:
-- On WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND
--   reduce production expression0 -> LBRACE label_expression_list RBRACE

State 203:
## Known stack suffix:
## label_expression
## LR(1) items:
label_expression_list -> label_expression . [ RBRACE ]
label_expression_list -> label_expression . SEMI label_expression_list [ RBRACE ]
## Transitions:
-- On SEMI shift to state 204
## Reductions:
-- On RBRACE
--   reduce production label_expression_list -> label_expression

State 204:
## Known stack suffix:
## label_expression SEMI
## LR(1) items:
label_expression_list -> label_expression SEMI . label_expression_list [ RBRACE ]
## Transitions:
-- On IDENT shift to state 170
-- On label_expression_list shift to state 205
-- On label_expression shift to state 203
## Reductions:
-- On RBRACE
--   reduce production label_expression_list ->

State 205:
## Known stack suffix:
## label_expression SEMI label_expression_list
## LR(1) items:
label_expression_list -> label_expression SEMI label_expression_list . [ RBRACE ]
## Transitions:
## Reductions:
-- On RBRACE
--   reduce production label_expression_list -> label_expression SEMI label_expression_list

State 206:
## Known stack suffix:
## FUNCTION
## LR(1) items:
expression -> FUNCTION . function_match [ WITH SEMISEMI RPAREN IN COLON BAR AND ]
## Transitions:
-- On UNIT shift to state 108
-- On UNDERSCORE shift to state 127
-- On TRUE shift to state 122
-- On STRINGCONST shift to state 123
-- On REF shift to state 128
-- On LPAREN shift to state 129
-- On LBRACE shift to state 130
-- On INTCONST shift to state 133
-- On IDENT shift to state 134
-- On FLOATCONST shift to state 135
-- On FALSE shift to state 136
-- On CONSTRUCTOR shift to state 137
-- On CHARCONST shift to state 139
-- On simple_pattern shift to state 142
-- On pattern shift to state 207
-- On function_match shift to state 225
-- On constant shift to state 141
## Reductions:

State 207:
## Known stack suffix:
## pattern
## LR(1) items:
function_match -> pattern . ARROW expression BAR function_match [ WITH SEMISEMI RPAREN IN COLON BAR AND ]
function_match -> pattern . ARROW expression [ WITH SEMISEMI RPAREN IN COLON BAR AND ]
pattern -> pattern . AS IDENT [ COMMA BAR AS ARROW ]
pattern -> pattern . COMMA pattern [ COMMA BAR AS ARROW ]
pattern -> pattern . BAR pattern [ COMMA BAR AS ARROW ]
## Transitions:
-- On COMMA shift to state 144
-- On BAR shift to state 146
-- On AS shift to state 148
-- On ARROW shift to state 208
## Reductions:

State 208:
## Known stack suffix:
## pattern ARROW
## LR(1) items:
function_match -> pattern ARROW . expression BAR function_match [ WITH SEMISEMI RPAREN IN COLON BAR AND ]
function_match -> pattern ARROW . expression [ WITH SEMISEMI RPAREN IN COLON BAR AND ]
## Transitions:
-- On UNIT shift to state 108
-- On TRY shift to state 121
-- On TRUE shift to state 122
-- On STRINGCONST shift to state 123
-- On REF shift to state 124
-- On REC shift to state 126
-- On RAISE shift to state 160
-- On MATCH shift to state 163
-- On LPAREN shift to state 125
-- On LET shift to state 164
-- On LBRACKETBAR shift to state 161
-- On LBRACKET shift to state 162
-- On LBRACE shift to state 169
-- On INTCONST shift to state 133
-- On IF shift to state 172
-- On IDENT shift to state 173
-- On FUNCTION shift to state 206
-- On FUN shift to state 209
-- On FLOATCONST shift to state 135
-- On FALSE shift to state 136
-- On CONSTRUCTOR shift to state 174
-- On CHARCONST shift to state 139
-- On BANG shift to state 176
-- On expression3 shift to state 212
-- On expression2 shift to state 213
-- On expression1 shift to state 195
-- On expression0 shift to state 186
-- On expression shift to state 222
-- On constant shift to state 185
## Reductions:

State 209:
## Known stack suffix:
## FUN
## LR(1) items:
expression -> FUN . fun_match [ WITH SEMISEMI RPAREN IN COLON BAR AND ]
## Transitions:
-- On UNIT shift to state 108
-- On UNDERSCORE shift to state 127
-- On TRUE shift to state 122
-- On STRINGCONST shift to state 123
-- On LPAREN shift to state 129
-- On LBRACE shift to state 130
-- On INTCONST shift to state 133
-- On IDENT shift to state 134
-- On FLOATCONST shift to state 135
-- On FALSE shift to state 136
-- On CONSTRUCTOR shift to state 138
-- On CHARCONST shift to state 139
-- On simple_pattern_list shift to state 210
-- On simple_pattern shift to state 218
-- On fun_match shift to state 221
-- On constant shift to state 141
## Reductions:

State 210:
## Known stack suffix:
## simple_pattern_list
## LR(1) items:
fun_match -> simple_pattern_list . ARROW expression BAR fun_match [ WITH SEMISEMI RPAREN IN COLON BAR AND ]
fun_match -> simple_pattern_list . ARROW expression [ WITH SEMISEMI RPAREN IN COLON BAR AND ]
## Transitions:
-- On ARROW shift to state 211
## Reductions:

State 211:
## Known stack suffix:
## simple_pattern_list ARROW
## LR(1) items:
fun_match -> simple_pattern_list ARROW . expression BAR fun_match [ WITH SEMISEMI RPAREN IN COLON BAR AND ]
fun_match -> simple_pattern_list ARROW . expression [ WITH SEMISEMI RPAREN IN COLON BAR AND ]
## Transitions:
-- On UNIT shift to state 108
-- On TRY shift to state 121
-- On TRUE shift to state 122
-- On STRINGCONST shift to state 123
-- On REF shift to state 124
-- On REC shift to state 126
-- On RAISE shift to state 160
-- On MATCH shift to state 163
-- On LPAREN shift to state 125
-- On LET shift to state 164
-- On LBRACKETBAR shift to state 161
-- On LBRACKET shift to state 162
-- On LBRACE shift to state 169
-- On INTCONST shift to state 133
-- On IF shift to state 172
-- On IDENT shift to state 173
-- On FUNCTION shift to state 206
-- On FUN shift to state 209
-- On FLOATCONST shift to state 135
-- On FALSE shift to state 136
-- On CONSTRUCTOR shift to state 174
-- On CHARCONST shift to state 139
-- On BANG shift to state 176
-- On expression3 shift to state 212
-- On expression2 shift to state 213
-- On expression1 shift to state 195
-- On expression0 shift to state 186
-- On expression shift to state 216
-- On constant shift to state 185
## Reductions:

State 212:
## Known stack suffix:
## expression3
## LR(1) items:
expression -> expression3 . [ WITH SEMISEMI RPAREN IN COLON BAR AND ]
## Transitions:
## Reductions:
-- On WITH SEMISEMI RPAREN IN COLON BAR AND
--   reduce production expression -> expression3

State 213:
## Known stack suffix:
## expression2
## LR(1) items:
expression3 -> expression2 . [ WITH SEMISEMI RPAREN IN COLON BAR AND ]
expression3 -> expression2 . SEMI expression [ WITH SEMISEMI RPAREN IN COLON BAR AND ]
## Transitions:
-- On SEMI shift to state 214
## Reductions:
-- On WITH SEMISEMI RPAREN IN COLON BAR AND
--   reduce production expression3 -> expression2

State 214:
## Known stack suffix:
## expression2 SEMI
## LR(1) items:
expression3 -> expression2 SEMI . expression [ WITH SEMISEMI RPAREN IN COLON BAR AND ]
## Transitions:
-- On UNIT shift to state 108
-- On TRY shift to state 121
-- On TRUE shift to state 122
-- On STRINGCONST shift to state 123
-- On REF shift to state 124
-- On REC shift to state 126
-- On RAISE shift to state 160
-- On MATCH shift to state 163
-- On LPAREN shift to state 125
-- On LET shift to state 164
-- On LBRACKETBAR shift to state 161
-- On LBRACKET shift to state 162
-- On LBRACE shift to state 169
-- On INTCONST shift to state 133
-- On IF shift to state 172
-- On IDENT shift to state 173
-- On FUNCTION shift to state 206
-- On FUN shift to state 209
-- On FLOATCONST shift to state 135
-- On FALSE shift to state 136
-- On CONSTRUCTOR shift to state 174
-- On CHARCONST shift to state 139
-- On BANG shift to state 176
-- On expression3 shift to state 212
-- On expression2 shift to state 213
-- On expression1 shift to state 195
-- On expression0 shift to state 186
-- On expression shift to state 215
-- On constant shift to state 185
## Reductions:

State 215:
## Known stack suffix:
## expression2 SEMI expression
## LR(1) items:
expression3 -> expression2 SEMI expression . [ WITH SEMISEMI RPAREN IN COLON BAR AND ]
## Transitions:
## Reductions:
-- On WITH SEMISEMI RPAREN IN COLON BAR AND
--   reduce production expression3 -> expression2 SEMI expression

State 216:
## Known stack suffix:
## simple_pattern_list ARROW expression
## LR(1) items:
fun_match -> simple_pattern_list ARROW expression . BAR fun_match [ WITH SEMISEMI RPAREN IN COLON BAR AND ]
fun_match -> simple_pattern_list ARROW expression . [ WITH SEMISEMI RPAREN IN COLON BAR AND ]
## Transitions:
-- On BAR shift to state 217
## Reductions:
-- On WITH SEMISEMI RPAREN IN COLON BAR AND
--   reduce production fun_match -> simple_pattern_list ARROW expression
** Conflict on BAR

State 217:
## Known stack suffix:
## simple_pattern_list ARROW expression BAR
## LR(1) items:
fun_match -> simple_pattern_list ARROW expression BAR . fun_match [ WITH SEMISEMI RPAREN IN COLON BAR AND ]
## Transitions:
-- On UNIT shift to state 108
-- On UNDERSCORE shift to state 127
-- On TRUE shift to state 122
-- On STRINGCONST shift to state 123
-- On LPAREN shift to state 129
-- On LBRACE shift to state 130
-- On INTCONST shift to state 133
-- On IDENT shift to state 134
-- On FLOATCONST shift to state 135
-- On FALSE shift to state 136
-- On CONSTRUCTOR shift to state 138
-- On CHARCONST shift to state 139
-- On simple_pattern_list shift to state 210
-- On simple_pattern shift to state 218
-- On fun_match shift to state 220
-- On constant shift to state 141
## Reductions:

State 218:
## Known stack suffix:
## simple_pattern
## LR(1) items:
simple_pattern_list -> simple_pattern . [ EQUAL ARROW ]
simple_pattern_list -> simple_pattern . simple_pattern_list [ EQUAL ARROW ]
## Transitions:
-- On UNIT shift to state 108
-- On UNDERSCORE shift to state 127
-- On TRUE shift to state 122
-- On STRINGCONST shift to state 123
-- On LPAREN shift to state 129
-- On LBRACE shift to state 130
-- On INTCONST shift to state 133
-- On IDENT shift to state 134
-- On FLOATCONST shift to state 135
-- On FALSE shift to state 136
-- On CONSTRUCTOR shift to state 138
-- On CHARCONST shift to state 139
-- On simple_pattern_list shift to state 219
-- On simple_pattern shift to state 218
-- On constant shift to state 141
## Reductions:
-- On EQUAL ARROW
--   reduce production simple_pattern_list -> simple_pattern

State 219:
## Known stack suffix:
## simple_pattern simple_pattern_list
## LR(1) items:
simple_pattern_list -> simple_pattern simple_pattern_list . [ EQUAL ARROW ]
## Transitions:
## Reductions:
-- On EQUAL ARROW
--   reduce production simple_pattern_list -> simple_pattern simple_pattern_list

State 220:
## Known stack suffix:
## simple_pattern_list ARROW expression BAR fun_match
## LR(1) items:
fun_match -> simple_pattern_list ARROW expression BAR fun_match . [ WITH SEMISEMI RPAREN IN COLON BAR AND ]
## Transitions:
## Reductions:
-- On WITH SEMISEMI RPAREN IN COLON BAR AND
--   reduce production fun_match -> simple_pattern_list ARROW expression BAR fun_match

State 221:
## Known stack suffix:
## FUN fun_match
## LR(1) items:
expression -> FUN fun_match . [ WITH SEMISEMI RPAREN IN COLON BAR AND ]
## Transitions:
## Reductions:
-- On WITH SEMISEMI RPAREN IN COLON BAR AND
--   reduce production expression -> FUN fun_match

State 222:
## Known stack suffix:
## pattern ARROW expression
## LR(1) items:
function_match -> pattern ARROW expression . BAR function_match [ WITH SEMISEMI RPAREN IN COLON BAR AND ]
function_match -> pattern ARROW expression . [ WITH SEMISEMI RPAREN IN COLON BAR AND ]
## Transitions:
-- On BAR shift to state 223
## Reductions:
-- On WITH SEMISEMI RPAREN IN COLON BAR AND
--   reduce production function_match -> pattern ARROW expression
** Conflict on BAR

State 223:
## Known stack suffix:
## pattern ARROW expression BAR
## LR(1) items:
function_match -> pattern ARROW expression BAR . function_match [ WITH SEMISEMI RPAREN IN COLON BAR AND ]
## Transitions:
-- On UNIT shift to state 108
-- On UNDERSCORE shift to state 127
-- On TRUE shift to state 122
-- On STRINGCONST shift to state 123
-- On REF shift to state 128
-- On LPAREN shift to state 129
-- On LBRACE shift to state 130
-- On INTCONST shift to state 133
-- On IDENT shift to state 134
-- On FLOATCONST shift to state 135
-- On FALSE shift to state 136
-- On CONSTRUCTOR shift to state 137
-- On CHARCONST shift to state 139
-- On simple_pattern shift to state 142
-- On pattern shift to state 207
-- On function_match shift to state 224
-- On constant shift to state 141
## Reductions:

State 224:
## Known stack suffix:
## pattern ARROW expression BAR function_match
## LR(1) items:
function_match -> pattern ARROW expression BAR function_match . [ WITH SEMISEMI RPAREN IN COLON BAR AND ]
## Transitions:
## Reductions:
-- On WITH SEMISEMI RPAREN IN COLON BAR AND
--   reduce production function_match -> pattern ARROW expression BAR function_match

State 225:
## Known stack suffix:
## FUNCTION function_match
## LR(1) items:
expression -> FUNCTION function_match . [ WITH SEMISEMI RPAREN IN COLON BAR AND ]
## Transitions:
## Reductions:
-- On WITH SEMISEMI RPAREN IN COLON BAR AND
--   reduce production expression -> FUNCTION function_match

State 226:
## Known stack suffix:
## IDENT simple_pattern_list EQUAL expression
## LR(1) items:
binding -> IDENT simple_pattern_list EQUAL expression . [ SEMISEMI IN AND ]
## Transitions:
## Reductions:
-- On SEMISEMI IN AND
--   reduce production binding -> IDENT simple_pattern_list EQUAL expression

State 227:
## Known stack suffix:
## pattern
## LR(1) items:
binding -> pattern . EQUAL expression [ SEMISEMI IN AND ]
pattern -> pattern . AS IDENT [ EQUAL COMMA BAR AS ]
pattern -> pattern . COMMA pattern [ EQUAL COMMA BAR AS ]
pattern -> pattern . BAR pattern [ EQUAL COMMA BAR AS ]
## Transitions:
-- On EQUAL shift to state 228
-- On COMMA shift to state 144
-- On BAR shift to state 146
-- On AS shift to state 148
## Reductions:

State 228:
## Known stack suffix:
## pattern EQUAL
## LR(1) items:
binding -> pattern EQUAL . expression [ SEMISEMI IN AND ]
## Transitions:
-- On UNIT shift to state 108
-- On TRY shift to state 121
-- On TRUE shift to state 122
-- On STRINGCONST shift to state 123
-- On REF shift to state 124
-- On REC shift to state 126
-- On RAISE shift to state 160
-- On MATCH shift to state 163
-- On LPAREN shift to state 125
-- On LET shift to state 164
-- On LBRACKETBAR shift to state 161
-- On LBRACKET shift to state 162
-- On LBRACE shift to state 169
-- On INTCONST shift to state 133
-- On IF shift to state 172
-- On IDENT shift to state 173
-- On FUNCTION shift to state 206
-- On FUN shift to state 209
-- On FLOATCONST shift to state 135
-- On FALSE shift to state 136
-- On CONSTRUCTOR shift to state 174
-- On CHARCONST shift to state 139
-- On BANG shift to state 176
-- On expression3 shift to state 212
-- On expression2 shift to state 213
-- On expression1 shift to state 195
-- On expression0 shift to state 186
-- On expression shift to state 229
-- On constant shift to state 185
## Reductions:

State 229:
## Known stack suffix:
## pattern EQUAL expression
## LR(1) items:
binding -> pattern EQUAL expression . [ SEMISEMI IN AND ]
## Transitions:
## Reductions:
-- On SEMISEMI IN AND
--   reduce production binding -> pattern EQUAL expression

State 230:
## Known stack suffix:
## LET REC binding_list
## LR(1) items:
expression -> LET REC binding_list . IN expression [ WITH SEMISEMI RPAREN IN COLON BAR AND ]
## Transitions:
-- On IN shift to state 231
## Reductions:

State 231:
## Known stack suffix:
## LET REC binding_list IN
## LR(1) items:
expression -> LET REC binding_list IN . expression [ WITH SEMISEMI RPAREN IN COLON BAR AND ]
## Transitions:
-- On UNIT shift to state 108
-- On TRY shift to state 121
-- On TRUE shift to state 122
-- On STRINGCONST shift to state 123
-- On REF shift to state 124
-- On REC shift to state 126
-- On RAISE shift to state 160
-- On MATCH shift to state 163
-- On LPAREN shift to state 125
-- On LET shift to state 164
-- On LBRACKETBAR shift to state 161
-- On LBRACKET shift to state 162
-- On LBRACE shift to state 169
-- On INTCONST shift to state 133
-- On IF shift to state 172
-- On IDENT shift to state 173
-- On FUNCTION shift to state 206
-- On FUN shift to state 209
-- On FLOATCONST shift to state 135
-- On FALSE shift to state 136
-- On CONSTRUCTOR shift to state 174
-- On CHARCONST shift to state 139
-- On BANG shift to state 176
-- On expression3 shift to state 212
-- On expression2 shift to state 213
-- On expression1 shift to state 195
-- On expression0 shift to state 186
-- On expression shift to state 232
-- On constant shift to state 185
## Reductions:

State 232:
## Known stack suffix:
## LET REC binding_list IN expression
## LR(1) items:
expression -> LET REC binding_list IN expression . [ WITH SEMISEMI RPAREN IN COLON BAR AND ]
## Transitions:
## Reductions:
-- On WITH SEMISEMI RPAREN IN COLON BAR AND
--   reduce production expression -> LET REC binding_list IN expression

State 233:
## Known stack suffix:
## binding
## LR(1) items:
binding_list -> binding . AND binding_list [ SEMISEMI IN ]
binding_list -> binding . [ SEMISEMI IN ]
## Transitions:
-- On AND shift to state 234
## Reductions:
-- On SEMISEMI IN
--   reduce production binding_list -> binding

State 234:
## Known stack suffix:
## binding AND
## LR(1) items:
binding_list -> binding AND . binding_list [ SEMISEMI IN ]
## Transitions:
-- On UNIT shift to state 108
-- On UNDERSCORE shift to state 127
-- On TRUE shift to state 122
-- On STRINGCONST shift to state 123
-- On REF shift to state 128
-- On LPAREN shift to state 129
-- On LBRACE shift to state 130
-- On INTCONST shift to state 133
-- On IDENT shift to state 166
-- On FLOATCONST shift to state 135
-- On FALSE shift to state 136
-- On CONSTRUCTOR shift to state 137
-- On CHARCONST shift to state 139
-- On simple_pattern shift to state 142
-- On pattern shift to state 227
-- On constant shift to state 141
-- On binding_list shift to state 235
-- On binding shift to state 233
## Reductions:

State 235:
## Known stack suffix:
## binding AND binding_list
## LR(1) items:
binding_list -> binding AND binding_list . [ SEMISEMI IN ]
## Transitions:
## Reductions:
-- On SEMISEMI IN
--   reduce production binding_list -> binding AND binding_list

State 236:
## Known stack suffix:
## LET binding_list
## LR(1) items:
expression -> LET binding_list . IN expression [ WITH SEMISEMI RPAREN IN COLON BAR AND ]
## Transitions:
-- On IN shift to state 237
## Reductions:

State 237:
## Known stack suffix:
## LET binding_list IN
## LR(1) items:
expression -> LET binding_list IN . expression [ WITH SEMISEMI RPAREN IN COLON BAR AND ]
## Transitions:
-- On UNIT shift to state 108
-- On TRY shift to state 121
-- On TRUE shift to state 122
-- On STRINGCONST shift to state 123
-- On REF shift to state 124
-- On REC shift to state 126
-- On RAISE shift to state 160
-- On MATCH shift to state 163
-- On LPAREN shift to state 125
-- On LET shift to state 164
-- On LBRACKETBAR shift to state 161
-- On LBRACKET shift to state 162
-- On LBRACE shift to state 169
-- On INTCONST shift to state 133
-- On IF shift to state 172
-- On IDENT shift to state 173
-- On FUNCTION shift to state 206
-- On FUN shift to state 209
-- On FLOATCONST shift to state 135
-- On FALSE shift to state 136
-- On CONSTRUCTOR shift to state 174
-- On CHARCONST shift to state 139
-- On BANG shift to state 176
-- On expression3 shift to state 212
-- On expression2 shift to state 213
-- On expression1 shift to state 195
-- On expression0 shift to state 186
-- On expression shift to state 238
-- On constant shift to state 185
## Reductions:

State 238:
## Known stack suffix:
## LET binding_list IN expression
## LR(1) items:
expression -> LET binding_list IN expression . [ WITH SEMISEMI RPAREN IN COLON BAR AND ]
## Transitions:
## Reductions:
-- On WITH SEMISEMI RPAREN IN COLON BAR AND
--   reduce production expression -> LET binding_list IN expression

State 239:
## Known stack suffix:
## MATCH expression
## LR(1) items:
expression -> MATCH expression . WITH function_match [ WITH SEMISEMI RPAREN IN COLON BAR AND ]
## Transitions:
-- On WITH shift to state 240
## Reductions:

State 240:
## Known stack suffix:
## MATCH expression WITH
## LR(1) items:
expression -> MATCH expression WITH . function_match [ WITH SEMISEMI RPAREN IN COLON BAR AND ]
## Transitions:
-- On UNIT shift to state 108
-- On UNDERSCORE shift to state 127
-- On TRUE shift to state 122
-- On STRINGCONST shift to state 123
-- On REF shift to state 128
-- On LPAREN shift to state 129
-- On LBRACE shift to state 130
-- On INTCONST shift to state 133
-- On IDENT shift to state 134
-- On FLOATCONST shift to state 135
-- On FALSE shift to state 136
-- On CONSTRUCTOR shift to state 137
-- On CHARCONST shift to state 139
-- On simple_pattern shift to state 142
-- On pattern shift to state 207
-- On function_match shift to state 241
-- On constant shift to state 141
## Reductions:

State 241:
## Known stack suffix:
## MATCH expression WITH function_match
## LR(1) items:
expression -> MATCH expression WITH function_match . [ WITH SEMISEMI RPAREN IN COLON BAR AND ]
## Transitions:
## Reductions:
-- On WITH SEMISEMI RPAREN IN COLON BAR AND
--   reduce production expression -> MATCH expression WITH function_match

State 242:
## Known stack suffix:
## LBRACKET expression
## LR(1) items:
expression0 -> LBRACKET expression . COLON constrained_type RBRACKET [ WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND ]
## Transitions:
-- On COLON shift to state 243
## Reductions:

State 243:
## Known stack suffix:
## LBRACKET expression COLON
## LR(1) items:
expression0 -> LBRACKET expression COLON . constrained_type RBRACKET [ WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND ]
## Transitions:
-- On UNIT shift to state 4
-- On STRING shift to state 5
-- On QUOTE shift to state 6
-- On PLUS shift to state 7
-- On PERCENT shift to state 8
-- On MINUS shift to state 9
-- On LPAREN shift to state 10
-- On LBRACKET shift to state 11
-- On LBRACE shift to state 13
-- On INTCONST shift to state 16
-- On INT shift to state 17
-- On IDENT shift to state 18
-- On FLOAT shift to state 19
-- On CHAR shift to state 20
-- On BOOL shift to state 21
-- On variable_leader shift to state 22
-- On type1 shift to state 244
-- On type0 shift to state 25
-- On constrained_type shift to state 255
## Reductions:

State 244:
## Known stack suffix:
## type1
## LR(1) items:
constrained_type -> type1 . [ RBRACKET ]
constrained_type -> type1 . RAISES type1 [ RBRACKET ]
constrained_type -> type1 . BAR LBRACE coercion_list RBRACE [ RBRACKET ]
constrained_type -> type1 . RAISES type1 BAR LBRACE coercion_list RBRACE [ RBRACKET ]
## Transitions:
-- On RAISES shift to state 245
-- On BAR shift to state 251
## Reductions:
-- On RBRACKET
--   reduce production constrained_type -> type1

State 245:
## Known stack suffix:
## type1 RAISES
## LR(1) items:
constrained_type -> type1 RAISES . type1 [ RBRACKET ]
constrained_type -> type1 RAISES . type1 BAR LBRACE coercion_list RBRACE [ RBRACKET ]
## Transitions:
-- On UNIT shift to state 4
-- On STRING shift to state 5
-- On QUOTE shift to state 6
-- On PLUS shift to state 7
-- On PERCENT shift to state 8
-- On MINUS shift to state 9
-- On LPAREN shift to state 10
-- On LBRACKET shift to state 11
-- On LBRACE shift to state 13
-- On INTCONST shift to state 16
-- On INT shift to state 17
-- On IDENT shift to state 18
-- On FLOAT shift to state 19
-- On CHAR shift to state 20
-- On BOOL shift to state 21
-- On variable_leader shift to state 22
-- On type1 shift to state 246
-- On type0 shift to state 25
## Reductions:

State 246:
## Known stack suffix:
## type1 RAISES type1
## LR(1) items:
constrained_type -> type1 RAISES type1 . [ RBRACKET ]
constrained_type -> type1 RAISES type1 . BAR LBRACE coercion_list RBRACE [ RBRACKET ]
## Transitions:
-- On BAR shift to state 247
## Reductions:
-- On RBRACKET
--   reduce production constrained_type -> type1 RAISES type1

State 247:
## Known stack suffix:
## type1 RAISES type1 BAR
## LR(1) items:
constrained_type -> type1 RAISES type1 BAR . LBRACE coercion_list RBRACE [ RBRACKET ]
## Transitions:
-- On LBRACE shift to state 248
## Reductions:

State 248:
## Known stack suffix:
## type1 RAISES type1 BAR LBRACE
## LR(1) items:
constrained_type -> type1 RAISES type1 BAR LBRACE . coercion_list RBRACE [ RBRACKET ]
## Transitions:
-- On UNIT shift to state 4
-- On STRING shift to state 5
-- On QUOTE shift to state 6
-- On PLUS shift to state 7
-- On PERCENT shift to state 8
-- On MINUS shift to state 9
-- On LPAREN shift to state 10
-- On LBRACKET shift to state 11
-- On LBRACE shift to state 13
-- On INTCONST shift to state 16
-- On INT shift to state 17
-- On IDENT shift to state 18
-- On FLOAT shift to state 19
-- On CHAR shift to state 20
-- On BOOL shift to state 21
-- On variable_leader shift to state 22
-- On type_comma_list shift to state 77
-- On type1 shift to state 83
-- On type0 shift to state 25
-- On coercion_list shift to state 249
-- On coercion shift to state 88
## Reductions:

State 249:
## Known stack suffix:
## type1 RAISES type1 BAR LBRACE coercion_list
## LR(1) items:
constrained_type -> type1 RAISES type1 BAR LBRACE coercion_list . RBRACE [ RBRACKET ]
## Transitions:
-- On RBRACE shift to state 250
## Reductions:

State 250:
## Known stack suffix:
## type1 RAISES type1 BAR LBRACE coercion_list RBRACE
## LR(1) items:
constrained_type -> type1 RAISES type1 BAR LBRACE coercion_list RBRACE . [ RBRACKET ]
## Transitions:
## Reductions:
-- On RBRACKET
--   reduce production constrained_type -> type1 RAISES type1 BAR LBRACE coercion_list RBRACE

State 251:
## Known stack suffix:
## type1 BAR
## LR(1) items:
constrained_type -> type1 BAR . LBRACE coercion_list RBRACE [ RBRACKET ]
## Transitions:
-- On LBRACE shift to state 252
## Reductions:

State 252:
## Known stack suffix:
## type1 BAR LBRACE
## LR(1) items:
constrained_type -> type1 BAR LBRACE . coercion_list RBRACE [ RBRACKET ]
## Transitions:
-- On UNIT shift to state 4
-- On STRING shift to state 5
-- On QUOTE shift to state 6
-- On PLUS shift to state 7
-- On PERCENT shift to state 8
-- On MINUS shift to state 9
-- On LPAREN shift to state 10
-- On LBRACKET shift to state 11
-- On LBRACE shift to state 13
-- On INTCONST shift to state 16
-- On INT shift to state 17
-- On IDENT shift to state 18
-- On FLOAT shift to state 19
-- On CHAR shift to state 20
-- On BOOL shift to state 21
-- On variable_leader shift to state 22
-- On type_comma_list shift to state 77
-- On type1 shift to state 83
-- On type0 shift to state 25
-- On coercion_list shift to state 253
-- On coercion shift to state 88
## Reductions:

State 253:
## Known stack suffix:
## type1 BAR LBRACE coercion_list
## LR(1) items:
constrained_type -> type1 BAR LBRACE coercion_list . RBRACE [ RBRACKET ]
## Transitions:
-- On RBRACE shift to state 254
## Reductions:

State 254:
## Known stack suffix:
## type1 BAR LBRACE coercion_list RBRACE
## LR(1) items:
constrained_type -> type1 BAR LBRACE coercion_list RBRACE . [ RBRACKET ]
## Transitions:
## Reductions:
-- On RBRACKET
--   reduce production constrained_type -> type1 BAR LBRACE coercion_list RBRACE

State 255:
## Known stack suffix:
## LBRACKET expression COLON constrained_type
## LR(1) items:
expression0 -> LBRACKET expression COLON constrained_type . RBRACKET [ WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND ]
## Transitions:
-- On RBRACKET shift to state 256
## Reductions:

State 256:
## Known stack suffix:
## LBRACKET expression COLON constrained_type RBRACKET
## LR(1) items:
expression0 -> LBRACKET expression COLON constrained_type RBRACKET . [ WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND ]
## Transitions:
## Reductions:
-- On WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND
--   reduce production expression0 -> LBRACKET expression COLON constrained_type RBRACKET

State 257:
## Known stack suffix:
## expression2
## LR(1) items:
expr_semi_list -> expression2 . [ BARRBRACKET ]
expr_semi_list -> expression2 . SEMI expr_semi_list [ BARRBRACKET ]
## Transitions:
-- On SEMI shift to state 258
## Reductions:
-- On BARRBRACKET
--   reduce production expr_semi_list -> expression2

State 258:
## Known stack suffix:
## expression2 SEMI
## LR(1) items:
expr_semi_list -> expression2 SEMI . expr_semi_list [ BARRBRACKET ]
## Transitions:
-- On UNIT shift to state 108
-- On TRUE shift to state 122
-- On STRINGCONST shift to state 123
-- On REF shift to state 124
-- On RAISE shift to state 160
-- On LPAREN shift to state 125
-- On LBRACKETBAR shift to state 161
-- On LBRACKET shift to state 162
-- On LBRACE shift to state 169
-- On INTCONST shift to state 133
-- On IF shift to state 172
-- On IDENT shift to state 173
-- On FLOATCONST shift to state 135
-- On FALSE shift to state 136
-- On CONSTRUCTOR shift to state 174
-- On CHARCONST shift to state 139
-- On BANG shift to state 176
-- On expression2 shift to state 257
-- On expression1 shift to state 195
-- On expression0 shift to state 186
-- On expr_semi_list shift to state 259
-- On constant shift to state 185
## Reductions:
-- On BARRBRACKET
--   reduce production expr_semi_list ->

State 259:
## Known stack suffix:
## expression2 SEMI expr_semi_list
## LR(1) items:
expr_semi_list -> expression2 SEMI expr_semi_list . [ BARRBRACKET ]
## Transitions:
## Reductions:
-- On BARRBRACKET
--   reduce production expr_semi_list -> expression2 SEMI expr_semi_list

State 260:
## Known stack suffix:
## LBRACKETBAR expr_semi_list
## LR(1) items:
expression0 -> LBRACKETBAR expr_semi_list . BARRBRACKET [ WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND ]
## Transitions:
-- On BARRBRACKET shift to state 261
## Reductions:

State 261:
## Known stack suffix:
## LBRACKETBAR expr_semi_list BARRBRACKET
## LR(1) items:
expression0 -> LBRACKETBAR expr_semi_list BARRBRACKET . [ WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND ]
## Transitions:
## Reductions:
-- On WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND
--   reduce production expression0 -> LBRACKETBAR expr_semi_list BARRBRACKET

State 262:
## Known stack suffix:
## RAISE expression0
## LR(1) items:
expression0 -> expression0 . DOT IDENT LEFTARROW expression1 [ WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND ]
expression0 -> expression0 . DOT IDENT [ WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND ]
expression0 -> expression0 . AT expression1 [ WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND ]
expression0 -> expression0 . ATAT expression1 [ WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND ]
expression1 -> RAISE expression0 . [ WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND ]
## Transitions:
-- On DOT shift to state 178
-- On ATAT shift to state 183
-- On AT shift to state 187
## Reductions:
-- On WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND
--   reduce production expression1 -> RAISE expression0
** Conflict on DOT ATAT AT

State 263:
## Known stack suffix:
## REC pattern IN expression
## LR(1) items:
expression -> REC pattern IN expression . [ WITH SEMISEMI RPAREN IN COLON BAR AND ]
## Transitions:
## Reductions:
-- On WITH SEMISEMI RPAREN IN COLON BAR AND
--   reduce production expression -> REC pattern IN expression

State 264:
## Known stack suffix:
## LPAREN expression
## LR(1) items:
expression0 -> LPAREN expression . COLON type_scheme RPAREN [ WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND ]
expression0 -> LPAREN expression . RPAREN [ WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND ]
## Transitions:
-- On RPAREN shift to state 265
-- On COLON shift to state 266
## Reductions:

State 265:
## Known stack suffix:
## LPAREN expression RPAREN
## LR(1) items:
expression0 -> LPAREN expression RPAREN . [ WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND ]
## Transitions:
## Reductions:
-- On WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND
--   reduce production expression0 -> LPAREN expression RPAREN

State 266:
## Known stack suffix:
## LPAREN expression COLON
## LR(1) items:
expression0 -> LPAREN expression COLON . type_scheme RPAREN [ WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND ]
## Transitions:
-- On UNIT shift to state 4
-- On STRING shift to state 5
-- On QUOTE shift to state 6
-- On PLUS shift to state 7
-- On PERCENT shift to state 8
-- On MINUS shift to state 9
-- On LPAREN shift to state 10
-- On LBRACKET shift to state 11
-- On LBRACE shift to state 13
-- On INTCONST shift to state 16
-- On INT shift to state 17
-- On IDENT shift to state 18
-- On FLOAT shift to state 19
-- On COERCE shift to state 62
-- On CHAR shift to state 20
-- On BOOL shift to state 21
-- On variable_leader shift to state 22
-- On type_scheme shift to state 267
-- On type1 shift to state 97
-- On type0 shift to state 25
## Reductions:

State 267:
## Known stack suffix:
## LPAREN expression COLON type_scheme
## LR(1) items:
expression0 -> LPAREN expression COLON type_scheme . RPAREN [ WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND ]
## Transitions:
-- On RPAREN shift to state 268
## Reductions:

State 268:
## Known stack suffix:
## LPAREN expression COLON type_scheme RPAREN
## LR(1) items:
expression0 -> LPAREN expression COLON type_scheme RPAREN . [ WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND ]
## Transitions:
## Reductions:
-- On WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND
--   reduce production expression0 -> LPAREN expression COLON type_scheme RPAREN

State 269:
## Known stack suffix:
## REF expression0
## LR(1) items:
expression0 -> expression0 . DOT IDENT LEFTARROW expression1 [ WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND ]
expression0 -> expression0 . DOT IDENT [ WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND ]
expression0 -> expression0 . AT expression1 [ WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND ]
expression0 -> expression0 . ATAT expression1 [ WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND ]
expression1 -> REF expression0 . [ WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND ]
## Transitions:
-- On DOT shift to state 178
-- On ATAT shift to state 183
-- On AT shift to state 187
## Reductions:
-- On WITH UNIT TRUE THEN STRINGCONST SEMISEMI SEMI RPAREN RBRACE LPAREN LBRACKETBAR LBRACKET LBRACE INTCONST IN IDENT FLOATCONST FALSE ELSE DOT CONSTRUCTOR COMMA COLON CHARCONST BARRBRACKET BAR BANG ATAT AT ASSIGN AND
--   reduce production expression1 -> REF expression0
** Conflict on DOT ATAT AT

State 270:
## Known stack suffix:
## TRY expression
## LR(1) items:
expression -> TRY expression . WITH try_match [ WITH SEMISEMI RPAREN IN COLON BAR AND ]
## Transitions:
-- On WITH shift to state 271
## Reductions:

State 271:
## Known stack suffix:
## TRY expression WITH
## LR(1) items:
expression -> TRY expression WITH . try_match [ WITH SEMISEMI RPAREN IN COLON BAR AND ]
## Transitions:
-- On UNIT shift to state 108
-- On UNDERSCORE shift to state 127
-- On TRUE shift to state 122
-- On STRINGCONST shift to state 123
-- On REF shift to state 128
-- On LPAREN shift to state 129
-- On LBRACE shift to state 130
-- On INTCONST shift to state 133
-- On IDENT shift to state 134
-- On FLOATCONST shift to state 135
-- On FALSE shift to state 136
-- On CONSTRUCTOR shift to state 137
-- On CHARCONST shift to state 139
-- On try_match shift to state 272
-- On simple_pattern shift to state 142
-- On pattern shift to state 273
-- On constant shift to state 141
## Reductions:

State 272:
## Known stack suffix:
## TRY expression WITH try_match
## LR(1) items:
expression -> TRY expression WITH try_match . [ WITH SEMISEMI RPAREN IN COLON BAR AND ]
## Transitions:
## Reductions:
-- On WITH SEMISEMI RPAREN IN COLON BAR AND
--   reduce production expression -> TRY expression WITH try_match

State 273:
## Known stack suffix:
## pattern
## LR(1) items:
pattern -> pattern . AS IDENT [ COMMA BAR AS ARROW ]
pattern -> pattern . COMMA pattern [ COMMA BAR AS ARROW ]
pattern -> pattern . BAR pattern [ COMMA BAR AS ARROW ]
try_match -> pattern . ARROW expression BAR try_match [ WITH SEMISEMI RPAREN IN COLON BAR AND ]
try_match -> pattern . ARROW expression [ WITH SEMISEMI RPAREN IN COLON BAR AND ]
## Transitions:
-- On COMMA shift to state 144
-- On BAR shift to state 146
-- On AS shift to state 148
-- On ARROW shift to state 274
## Reductions:

State 274:
## Known stack suffix:
## pattern ARROW
## LR(1) items:
try_match -> pattern ARROW . expression BAR try_match [ WITH SEMISEMI RPAREN IN COLON BAR AND ]
try_match -> pattern ARROW . expression [ WITH SEMISEMI RPAREN IN COLON BAR AND ]
## Transitions:
-- On UNIT shift to state 108
-- On TRY shift to state 121
-- On TRUE shift to state 122
-- On STRINGCONST shift to state 123
-- On REF shift to state 124
-- On REC shift to state 126
-- On RAISE shift to state 160
-- On MATCH shift to state 163
-- On LPAREN shift to state 125
-- On LET shift to state 164
-- On LBRACKETBAR shift to state 161
-- On LBRACKET shift to state 162
-- On LBRACE shift to state 169
-- On INTCONST shift to state 133
-- On IF shift to state 172
-- On IDENT shift to state 173
-- On FUNCTION shift to state 206
-- On FUN shift to state 209
-- On FLOATCONST shift to state 135
-- On FALSE shift to state 136
-- On CONSTRUCTOR shift to state 174
-- On CHARCONST shift to state 139
-- On BANG shift to state 176
-- On expression3 shift to state 212
-- On expression2 shift to state 213
-- On expression1 shift to state 195
-- On expression0 shift to state 186
-- On expression shift to state 275
-- On constant shift to state 185
## Reductions:

State 275:
## Known stack suffix:
## pattern ARROW expression
## LR(1) items:
try_match -> pattern ARROW expression . BAR try_match [ WITH SEMISEMI RPAREN IN COLON BAR AND ]
try_match -> pattern ARROW expression . [ WITH SEMISEMI RPAREN IN COLON BAR AND ]
## Transitions:
-- On BAR shift to state 276
## Reductions:
-- On WITH SEMISEMI RPAREN IN COLON BAR AND
--   reduce production try_match -> pattern ARROW expression
** Conflict on BAR

State 276:
## Known stack suffix:
## pattern ARROW expression BAR
## LR(1) items:
try_match -> pattern ARROW expression BAR . try_match [ WITH SEMISEMI RPAREN IN COLON BAR AND ]
## Transitions:
-- On UNIT shift to state 108
-- On UNDERSCORE shift to state 127
-- On TRUE shift to state 122
-- On STRINGCONST shift to state 123
-- On REF shift to state 128
-- On LPAREN shift to state 129
-- On LBRACE shift to state 130
-- On INTCONST shift to state 133
-- On IDENT shift to state 134
-- On FLOATCONST shift to state 135
-- On FALSE shift to state 136
-- On CONSTRUCTOR shift to state 137
-- On CHARCONST shift to state 139
-- On try_match shift to state 277
-- On simple_pattern shift to state 142
-- On pattern shift to state 273
-- On constant shift to state 141
## Reductions:

State 277:
## Known stack suffix:
## pattern ARROW expression BAR try_match
## LR(1) items:
try_match -> pattern ARROW expression BAR try_match . [ WITH SEMISEMI RPAREN IN COLON BAR AND ]
## Transitions:
## Reductions:
-- On WITH SEMISEMI RPAREN IN COLON BAR AND
--   reduce production try_match -> pattern ARROW expression BAR try_match

State 278:
## Known stack suffix:
## SHARP
## LR(1) items:
phrase -> SHARP . IDENT [ # ]
## Transitions:
-- On IDENT shift to state 279
## Reductions:

State 279:
## Known stack suffix:
## SHARP IDENT
## LR(1) items:
phrase -> SHARP IDENT . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production phrase -> SHARP IDENT

State 280:
## Known stack suffix:
## LET
## LR(1) items:
expression -> LET . binding_list IN expression [ SEMISEMI ]
expression -> LET . REC binding_list IN expression [ SEMISEMI ]
phrase -> LET . binding_list SEMISEMI [ # ]
phrase -> LET . REC binding_list SEMISEMI [ # ]
## Transitions:
-- On UNIT shift to state 108
-- On UNDERSCORE shift to state 127
-- On TRUE shift to state 122
-- On STRINGCONST shift to state 123
-- On REF shift to state 128
-- On REC shift to state 281
-- On LPAREN shift to state 129
-- On LBRACE shift to state 130
-- On INTCONST shift to state 133
-- On IDENT shift to state 166
-- On FLOATCONST shift to state 135
-- On FALSE shift to state 136
-- On CONSTRUCTOR shift to state 137
-- On CHARCONST shift to state 139
-- On simple_pattern shift to state 142
-- On pattern shift to state 227
-- On constant shift to state 141
-- On binding_list shift to state 284
-- On binding shift to state 233
## Reductions:

State 281:
## Known stack suffix:
## LET REC
## LR(1) items:
expression -> LET REC . binding_list IN expression [ SEMISEMI ]
phrase -> LET REC . binding_list SEMISEMI [ # ]
## Transitions:
-- On UNIT shift to state 108
-- On UNDERSCORE shift to state 127
-- On TRUE shift to state 122
-- On STRINGCONST shift to state 123
-- On REF shift to state 128
-- On LPAREN shift to state 129
-- On LBRACE shift to state 130
-- On INTCONST shift to state 133
-- On IDENT shift to state 166
-- On FLOATCONST shift to state 135
-- On FALSE shift to state 136
-- On CONSTRUCTOR shift to state 137
-- On CHARCONST shift to state 139
-- On simple_pattern shift to state 142
-- On pattern shift to state 227
-- On constant shift to state 141
-- On binding_list shift to state 282
-- On binding shift to state 233
## Reductions:

State 282:
## Known stack suffix:
## LET REC binding_list
## LR(1) items:
expression -> LET REC binding_list . IN expression [ SEMISEMI ]
phrase -> LET REC binding_list . SEMISEMI [ # ]
## Transitions:
-- On SEMISEMI shift to state 283
-- On IN shift to state 231
## Reductions:

State 283:
## Known stack suffix:
## LET REC binding_list SEMISEMI
## LR(1) items:
phrase -> LET REC binding_list SEMISEMI . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production phrase -> LET REC binding_list SEMISEMI

State 284:
## Known stack suffix:
## LET binding_list
## LR(1) items:
expression -> LET binding_list . IN expression [ SEMISEMI ]
phrase -> LET binding_list . SEMISEMI [ # ]
## Transitions:
-- On SEMISEMI shift to state 285
-- On IN shift to state 237
## Reductions:

State 285:
## Known stack suffix:
## LET binding_list SEMISEMI
## LR(1) items:
phrase -> LET binding_list SEMISEMI . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production phrase -> LET binding_list SEMISEMI

State 286:
## Known stack suffix:
## INCLUDE
## LR(1) items:
phrase -> INCLUDE . STRINGCONST [ # ]
## Transitions:
-- On STRINGCONST shift to state 287
## Reductions:

State 287:
## Known stack suffix:
## INCLUDE STRINGCONST
## LR(1) items:
phrase -> INCLUDE STRINGCONST . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production phrase -> INCLUDE STRINGCONST

State 288:
## Known stack suffix:
## phrase
## LR(1) items:
phrase' -> phrase . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept phrase

State 289:
## Known stack suffix:
## expression
## LR(1) items:
phrase -> expression . SEMISEMI [ # ]
## Transitions:
-- On SEMISEMI shift to state 290
## Reductions:

State 290:
## Known stack suffix:
## expression SEMISEMI
## LR(1) items:
phrase -> expression SEMISEMI . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production phrase -> expression SEMISEMI

