State 0:
file' -> . file [ # ]
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPE_NAME shift to state 5
-- On TYPEDEF shift to state 6
-- On STRUCT shift to state 7
-- On STATIC shift to state 8
-- On STAR shift to state 9
-- On SPEC shift to state 17
-- On SIGNED shift to state 18
-- On SHORT shift to state 19
-- On RESTRICT shift to state 10
-- On REGISTER shift to state 20
-- On LPAR shift to state 21
-- On LONG shift to state 37
-- On INT shift to state 38
-- On IDENTIFIER shift to state 23
-- On FLOAT shift to state 140
-- On EXTERN shift to state 182
-- On EOF shift to state 391
-- On ENUM shift to state 141
-- On DOUBLE shift to state 156
-- On DECL shift to state 368
-- On CONST shift to state 11
-- On CHAR shift to state 157
-- On AUTO shift to state 183
-- On type_specifier_no_name shift to state 158
-- On type_specifier shift to state 184
-- On type_qualifier shift to state 187
-- On translation_unit shift to state 392
-- On struct_or_union_specifier shift to state 162
-- On struct_or_union shift to state 163
-- On storage_class_specifier shift to state 188
-- On pointer shift to state 24
-- On identifier shift to state 25
-- On function_prototype shift to state 394
-- On function_definition shift to state 396
-- On file shift to state 400
-- On external_declaration shift to state 401
-- On enum_specifier shift to state 167
-- On direct_declarator shift to state 178
-- On declarator shift to state 385
-- On declaration_specifiers shift to state 398
-- On declaration shift to state 399

State 1:
type_qualifier -> VOLATILE . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LSQUARE LPAR LONG INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On VOLATILE reduce production type_qualifier -> VOLATILE
-- On VOID reduce production type_qualifier -> VOLATILE
-- On UNSIGNED reduce production type_qualifier -> VOLATILE
-- On UNION reduce production type_qualifier -> VOLATILE
-- On TYPE_NAME reduce production type_qualifier -> VOLATILE
-- On TYPEDEF reduce production type_qualifier -> VOLATILE
-- On STRUCT reduce production type_qualifier -> VOLATILE
-- On STATIC reduce production type_qualifier -> VOLATILE
-- On STAR reduce production type_qualifier -> VOLATILE
-- On SIGNED reduce production type_qualifier -> VOLATILE
-- On SHORT reduce production type_qualifier -> VOLATILE
-- On SEMICOLON reduce production type_qualifier -> VOLATILE
-- On RPAR reduce production type_qualifier -> VOLATILE
-- On RESTRICT reduce production type_qualifier -> VOLATILE
-- On REGISTER reduce production type_qualifier -> VOLATILE
-- On LSQUARE reduce production type_qualifier -> VOLATILE
-- On LPAR reduce production type_qualifier -> VOLATILE
-- On LONG reduce production type_qualifier -> VOLATILE
-- On INT reduce production type_qualifier -> VOLATILE
-- On IDENTIFIER reduce production type_qualifier -> VOLATILE
-- On FLOAT reduce production type_qualifier -> VOLATILE
-- On EXTERN reduce production type_qualifier -> VOLATILE
-- On ENUM reduce production type_qualifier -> VOLATILE
-- On DOUBLE reduce production type_qualifier -> VOLATILE
-- On CONST reduce production type_qualifier -> VOLATILE
-- On COMMA reduce production type_qualifier -> VOLATILE
-- On COLON reduce production type_qualifier -> VOLATILE
-- On CHAR reduce production type_qualifier -> VOLATILE
-- On AUTO reduce production type_qualifier -> VOLATILE

State 2:
type_specifier_no_name -> VOID . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LSQUARE LPAR LONG INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On VOLATILE reduce production type_specifier_no_name -> VOID
-- On VOID reduce production type_specifier_no_name -> VOID
-- On UNSIGNED reduce production type_specifier_no_name -> VOID
-- On UNION reduce production type_specifier_no_name -> VOID
-- On TYPE_NAME reduce production type_specifier_no_name -> VOID
-- On TYPEDEF reduce production type_specifier_no_name -> VOID
-- On STRUCT reduce production type_specifier_no_name -> VOID
-- On STATIC reduce production type_specifier_no_name -> VOID
-- On STAR reduce production type_specifier_no_name -> VOID
-- On SIGNED reduce production type_specifier_no_name -> VOID
-- On SHORT reduce production type_specifier_no_name -> VOID
-- On SEMICOLON reduce production type_specifier_no_name -> VOID
-- On RPAR reduce production type_specifier_no_name -> VOID
-- On RESTRICT reduce production type_specifier_no_name -> VOID
-- On REGISTER reduce production type_specifier_no_name -> VOID
-- On LSQUARE reduce production type_specifier_no_name -> VOID
-- On LPAR reduce production type_specifier_no_name -> VOID
-- On LONG reduce production type_specifier_no_name -> VOID
-- On INT reduce production type_specifier_no_name -> VOID
-- On IDENTIFIER reduce production type_specifier_no_name -> VOID
-- On FLOAT reduce production type_specifier_no_name -> VOID
-- On EXTERN reduce production type_specifier_no_name -> VOID
-- On ENUM reduce production type_specifier_no_name -> VOID
-- On DOUBLE reduce production type_specifier_no_name -> VOID
-- On CONST reduce production type_specifier_no_name -> VOID
-- On COMMA reduce production type_specifier_no_name -> VOID
-- On COLON reduce production type_specifier_no_name -> VOID
-- On CHAR reduce production type_specifier_no_name -> VOID
-- On AUTO reduce production type_specifier_no_name -> VOID

State 3:
type_specifier_no_name -> UNSIGNED . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LSQUARE LPAR LONG INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On VOLATILE reduce production type_specifier_no_name -> UNSIGNED
-- On VOID reduce production type_specifier_no_name -> UNSIGNED
-- On UNSIGNED reduce production type_specifier_no_name -> UNSIGNED
-- On UNION reduce production type_specifier_no_name -> UNSIGNED
-- On TYPE_NAME reduce production type_specifier_no_name -> UNSIGNED
-- On TYPEDEF reduce production type_specifier_no_name -> UNSIGNED
-- On STRUCT reduce production type_specifier_no_name -> UNSIGNED
-- On STATIC reduce production type_specifier_no_name -> UNSIGNED
-- On STAR reduce production type_specifier_no_name -> UNSIGNED
-- On SIGNED reduce production type_specifier_no_name -> UNSIGNED
-- On SHORT reduce production type_specifier_no_name -> UNSIGNED
-- On SEMICOLON reduce production type_specifier_no_name -> UNSIGNED
-- On RPAR reduce production type_specifier_no_name -> UNSIGNED
-- On RESTRICT reduce production type_specifier_no_name -> UNSIGNED
-- On REGISTER reduce production type_specifier_no_name -> UNSIGNED
-- On LSQUARE reduce production type_specifier_no_name -> UNSIGNED
-- On LPAR reduce production type_specifier_no_name -> UNSIGNED
-- On LONG reduce production type_specifier_no_name -> UNSIGNED
-- On INT reduce production type_specifier_no_name -> UNSIGNED
-- On IDENTIFIER reduce production type_specifier_no_name -> UNSIGNED
-- On FLOAT reduce production type_specifier_no_name -> UNSIGNED
-- On EXTERN reduce production type_specifier_no_name -> UNSIGNED
-- On ENUM reduce production type_specifier_no_name -> UNSIGNED
-- On DOUBLE reduce production type_specifier_no_name -> UNSIGNED
-- On CONST reduce production type_specifier_no_name -> UNSIGNED
-- On COMMA reduce production type_specifier_no_name -> UNSIGNED
-- On COLON reduce production type_specifier_no_name -> UNSIGNED
-- On CHAR reduce production type_specifier_no_name -> UNSIGNED
-- On AUTO reduce production type_specifier_no_name -> UNSIGNED

State 4:
struct_or_union -> UNION . [ TYPE_NAME LBRACE IDENTIFIER ]
-- On TYPE_NAME reduce production struct_or_union -> UNION
-- On LBRACE reduce production struct_or_union -> UNION
-- On IDENTIFIER reduce production struct_or_union -> UNION

State 5:
identifier -> TYPE_NAME . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC SPEC SIGNED SHORT RPAR RESTRICT REGISTER LSQUARE LPAR LONG LBRACE INT FLOAT EXTERN ENUM DOUBLE DECL CONST COLON CHAR AUTO ]
type_specifier -> TYPE_NAME . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LSQUARE LPAR LONG INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA CHAR AUTO ]
-- On VOLATILE reduce production type_specifier -> TYPE_NAME
-- On VOID reduce production type_specifier -> TYPE_NAME
-- On UNSIGNED reduce production type_specifier -> TYPE_NAME
-- On UNION reduce production type_specifier -> TYPE_NAME
-- On TYPE_NAME reduce production type_specifier -> TYPE_NAME
-- On TYPEDEF reduce production type_specifier -> TYPE_NAME
-- On STRUCT reduce production type_specifier -> TYPE_NAME
-- On STATIC reduce production type_specifier -> TYPE_NAME
-- On STAR reduce production type_specifier -> TYPE_NAME
-- On SPEC reduce production identifier -> TYPE_NAME
-- On SIGNED reduce production type_specifier -> TYPE_NAME
-- On SHORT reduce production type_specifier -> TYPE_NAME
-- On SEMICOLON reduce production type_specifier -> TYPE_NAME
-- On RPAR reduce production type_specifier -> TYPE_NAME
-- On RESTRICT reduce production type_specifier -> TYPE_NAME
-- On REGISTER reduce production type_specifier -> TYPE_NAME
-- On LSQUARE reduce production type_specifier -> TYPE_NAME
-- On LPAR reduce production type_specifier -> TYPE_NAME
-- On LONG reduce production type_specifier -> TYPE_NAME
-- On LBRACE reduce production identifier -> TYPE_NAME
-- On INT reduce production type_specifier -> TYPE_NAME
-- On IDENTIFIER reduce production type_specifier -> TYPE_NAME
-- On FLOAT reduce production type_specifier -> TYPE_NAME
-- On EXTERN reduce production type_specifier -> TYPE_NAME
-- On ENUM reduce production type_specifier -> TYPE_NAME
-- On DOUBLE reduce production type_specifier -> TYPE_NAME
-- On DECL reduce production identifier -> TYPE_NAME
-- On CONST reduce production type_specifier -> TYPE_NAME
-- On COMMA reduce production type_specifier -> TYPE_NAME
-- On COLON reduce production identifier -> TYPE_NAME
-- On CHAR reduce production type_specifier -> TYPE_NAME
-- On AUTO reduce production type_specifier -> TYPE_NAME

State 6:
storage_class_specifier -> TYPEDEF . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LSQUARE LPAR LONG INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA CHAR AUTO ]
-- On VOLATILE reduce production storage_class_specifier -> TYPEDEF
-- On VOID reduce production storage_class_specifier -> TYPEDEF
-- On UNSIGNED reduce production storage_class_specifier -> TYPEDEF
-- On UNION reduce production storage_class_specifier -> TYPEDEF
-- On TYPE_NAME reduce production storage_class_specifier -> TYPEDEF
-- On TYPEDEF reduce production storage_class_specifier -> TYPEDEF
-- On STRUCT reduce production storage_class_specifier -> TYPEDEF
-- On STATIC reduce production storage_class_specifier -> TYPEDEF
-- On STAR reduce production storage_class_specifier -> TYPEDEF
-- On SIGNED reduce production storage_class_specifier -> TYPEDEF
-- On SHORT reduce production storage_class_specifier -> TYPEDEF
-- On SEMICOLON reduce production storage_class_specifier -> TYPEDEF
-- On RPAR reduce production storage_class_specifier -> TYPEDEF
-- On RESTRICT reduce production storage_class_specifier -> TYPEDEF
-- On REGISTER reduce production storage_class_specifier -> TYPEDEF
-- On LSQUARE reduce production storage_class_specifier -> TYPEDEF
-- On LPAR reduce production storage_class_specifier -> TYPEDEF
-- On LONG reduce production storage_class_specifier -> TYPEDEF
-- On INT reduce production storage_class_specifier -> TYPEDEF
-- On IDENTIFIER reduce production storage_class_specifier -> TYPEDEF
-- On FLOAT reduce production storage_class_specifier -> TYPEDEF
-- On EXTERN reduce production storage_class_specifier -> TYPEDEF
-- On ENUM reduce production storage_class_specifier -> TYPEDEF
-- On DOUBLE reduce production storage_class_specifier -> TYPEDEF
-- On CONST reduce production storage_class_specifier -> TYPEDEF
-- On COMMA reduce production storage_class_specifier -> TYPEDEF
-- On CHAR reduce production storage_class_specifier -> TYPEDEF
-- On AUTO reduce production storage_class_specifier -> TYPEDEF

State 7:
struct_or_union -> STRUCT . [ TYPE_NAME LBRACE IDENTIFIER ]
-- On TYPE_NAME reduce production struct_or_union -> STRUCT
-- On LBRACE reduce production struct_or_union -> STRUCT
-- On IDENTIFIER reduce production struct_or_union -> STRUCT

State 8:
storage_class_specifier -> STATIC . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LSQUARE LPAR LONG INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA CHAR AUTO ]
-- On VOLATILE reduce production storage_class_specifier -> STATIC
-- On VOID reduce production storage_class_specifier -> STATIC
-- On UNSIGNED reduce production storage_class_specifier -> STATIC
-- On UNION reduce production storage_class_specifier -> STATIC
-- On TYPE_NAME reduce production storage_class_specifier -> STATIC
-- On TYPEDEF reduce production storage_class_specifier -> STATIC
-- On STRUCT reduce production storage_class_specifier -> STATIC
-- On STATIC reduce production storage_class_specifier -> STATIC
-- On STAR reduce production storage_class_specifier -> STATIC
-- On SIGNED reduce production storage_class_specifier -> STATIC
-- On SHORT reduce production storage_class_specifier -> STATIC
-- On SEMICOLON reduce production storage_class_specifier -> STATIC
-- On RPAR reduce production storage_class_specifier -> STATIC
-- On RESTRICT reduce production storage_class_specifier -> STATIC
-- On REGISTER reduce production storage_class_specifier -> STATIC
-- On LSQUARE reduce production storage_class_specifier -> STATIC
-- On LPAR reduce production storage_class_specifier -> STATIC
-- On LONG reduce production storage_class_specifier -> STATIC
-- On INT reduce production storage_class_specifier -> STATIC
-- On IDENTIFIER reduce production storage_class_specifier -> STATIC
-- On FLOAT reduce production storage_class_specifier -> STATIC
-- On EXTERN reduce production storage_class_specifier -> STATIC
-- On ENUM reduce production storage_class_specifier -> STATIC
-- On DOUBLE reduce production storage_class_specifier -> STATIC
-- On CONST reduce production storage_class_specifier -> STATIC
-- On COMMA reduce production storage_class_specifier -> STATIC
-- On CHAR reduce production storage_class_specifier -> STATIC
-- On AUTO reduce production storage_class_specifier -> STATIC

State 9:
pointer -> STAR . [ TYPE_NAME RPAR LSQUARE LPAR IDENTIFIER COMMA ]
pointer -> STAR . type_qualifier_list [ TYPE_NAME RPAR LSQUARE LPAR IDENTIFIER COMMA ]
pointer -> STAR . pointer [ TYPE_NAME RPAR LSQUARE LPAR IDENTIFIER COMMA ]
pointer -> STAR . type_qualifier_list pointer [ TYPE_NAME RPAR LSQUARE LPAR IDENTIFIER COMMA ]
-- On VOLATILE shift to state 1
-- On STAR shift to state 9
-- On RESTRICT shift to state 10
-- On CONST shift to state 11
-- On type_qualifier_list shift to state 12
-- On type_qualifier shift to state 15
-- On pointer shift to state 16
-- On TYPE_NAME reduce production pointer -> STAR
-- On RPAR reduce production pointer -> STAR
-- On LSQUARE reduce production pointer -> STAR
-- On LPAR reduce production pointer -> STAR
-- On IDENTIFIER reduce production pointer -> STAR
-- On COMMA reduce production pointer -> STAR

State 10:
type_qualifier -> RESTRICT . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LSQUARE LPAR LONG INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On VOLATILE reduce production type_qualifier -> RESTRICT
-- On VOID reduce production type_qualifier -> RESTRICT
-- On UNSIGNED reduce production type_qualifier -> RESTRICT
-- On UNION reduce production type_qualifier -> RESTRICT
-- On TYPE_NAME reduce production type_qualifier -> RESTRICT
-- On TYPEDEF reduce production type_qualifier -> RESTRICT
-- On STRUCT reduce production type_qualifier -> RESTRICT
-- On STATIC reduce production type_qualifier -> RESTRICT
-- On STAR reduce production type_qualifier -> RESTRICT
-- On SIGNED reduce production type_qualifier -> RESTRICT
-- On SHORT reduce production type_qualifier -> RESTRICT
-- On SEMICOLON reduce production type_qualifier -> RESTRICT
-- On RPAR reduce production type_qualifier -> RESTRICT
-- On RESTRICT reduce production type_qualifier -> RESTRICT
-- On REGISTER reduce production type_qualifier -> RESTRICT
-- On LSQUARE reduce production type_qualifier -> RESTRICT
-- On LPAR reduce production type_qualifier -> RESTRICT
-- On LONG reduce production type_qualifier -> RESTRICT
-- On INT reduce production type_qualifier -> RESTRICT
-- On IDENTIFIER reduce production type_qualifier -> RESTRICT
-- On FLOAT reduce production type_qualifier -> RESTRICT
-- On EXTERN reduce production type_qualifier -> RESTRICT
-- On ENUM reduce production type_qualifier -> RESTRICT
-- On DOUBLE reduce production type_qualifier -> RESTRICT
-- On CONST reduce production type_qualifier -> RESTRICT
-- On COMMA reduce production type_qualifier -> RESTRICT
-- On COLON reduce production type_qualifier -> RESTRICT
-- On CHAR reduce production type_qualifier -> RESTRICT
-- On AUTO reduce production type_qualifier -> RESTRICT

State 11:
type_qualifier -> CONST . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LSQUARE LPAR LONG INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On VOLATILE reduce production type_qualifier -> CONST
-- On VOID reduce production type_qualifier -> CONST
-- On UNSIGNED reduce production type_qualifier -> CONST
-- On UNION reduce production type_qualifier -> CONST
-- On TYPE_NAME reduce production type_qualifier -> CONST
-- On TYPEDEF reduce production type_qualifier -> CONST
-- On STRUCT reduce production type_qualifier -> CONST
-- On STATIC reduce production type_qualifier -> CONST
-- On STAR reduce production type_qualifier -> CONST
-- On SIGNED reduce production type_qualifier -> CONST
-- On SHORT reduce production type_qualifier -> CONST
-- On SEMICOLON reduce production type_qualifier -> CONST
-- On RPAR reduce production type_qualifier -> CONST
-- On RESTRICT reduce production type_qualifier -> CONST
-- On REGISTER reduce production type_qualifier -> CONST
-- On LSQUARE reduce production type_qualifier -> CONST
-- On LPAR reduce production type_qualifier -> CONST
-- On LONG reduce production type_qualifier -> CONST
-- On INT reduce production type_qualifier -> CONST
-- On IDENTIFIER reduce production type_qualifier -> CONST
-- On FLOAT reduce production type_qualifier -> CONST
-- On EXTERN reduce production type_qualifier -> CONST
-- On ENUM reduce production type_qualifier -> CONST
-- On DOUBLE reduce production type_qualifier -> CONST
-- On CONST reduce production type_qualifier -> CONST
-- On COMMA reduce production type_qualifier -> CONST
-- On COLON reduce production type_qualifier -> CONST
-- On CHAR reduce production type_qualifier -> CONST
-- On AUTO reduce production type_qualifier -> CONST

State 12:
pointer -> STAR type_qualifier_list . [ TYPE_NAME RPAR LSQUARE LPAR IDENTIFIER COMMA ]
pointer -> STAR type_qualifier_list . pointer [ TYPE_NAME RPAR LSQUARE LPAR IDENTIFIER COMMA ]
type_qualifier_list -> type_qualifier_list . type_qualifier [ VOLATILE TYPE_NAME STAR RPAR RESTRICT LSQUARE LPAR IDENTIFIER CONST COMMA ]
-- On VOLATILE shift to state 1
-- On STAR shift to state 9
-- On RESTRICT shift to state 10
-- On CONST shift to state 11
-- On type_qualifier shift to state 13
-- On pointer shift to state 14
-- On TYPE_NAME reduce production pointer -> STAR type_qualifier_list
-- On RPAR reduce production pointer -> STAR type_qualifier_list
-- On LSQUARE reduce production pointer -> STAR type_qualifier_list
-- On LPAR reduce production pointer -> STAR type_qualifier_list
-- On IDENTIFIER reduce production pointer -> STAR type_qualifier_list
-- On COMMA reduce production pointer -> STAR type_qualifier_list

State 13:
type_qualifier_list -> type_qualifier_list type_qualifier . [ VOLATILE TYPE_NAME STAR RPAR RESTRICT LSQUARE LPAR IDENTIFIER CONST COMMA ]
-- On VOLATILE reduce production type_qualifier_list -> type_qualifier_list type_qualifier
-- On TYPE_NAME reduce production type_qualifier_list -> type_qualifier_list type_qualifier
-- On STAR reduce production type_qualifier_list -> type_qualifier_list type_qualifier
-- On RPAR reduce production type_qualifier_list -> type_qualifier_list type_qualifier
-- On RESTRICT reduce production type_qualifier_list -> type_qualifier_list type_qualifier
-- On LSQUARE reduce production type_qualifier_list -> type_qualifier_list type_qualifier
-- On LPAR reduce production type_qualifier_list -> type_qualifier_list type_qualifier
-- On IDENTIFIER reduce production type_qualifier_list -> type_qualifier_list type_qualifier
-- On CONST reduce production type_qualifier_list -> type_qualifier_list type_qualifier
-- On COMMA reduce production type_qualifier_list -> type_qualifier_list type_qualifier

State 14:
pointer -> STAR type_qualifier_list pointer . [ TYPE_NAME RPAR LSQUARE LPAR IDENTIFIER COMMA ]
-- On TYPE_NAME reduce production pointer -> STAR type_qualifier_list pointer
-- On RPAR reduce production pointer -> STAR type_qualifier_list pointer
-- On LSQUARE reduce production pointer -> STAR type_qualifier_list pointer
-- On LPAR reduce production pointer -> STAR type_qualifier_list pointer
-- On IDENTIFIER reduce production pointer -> STAR type_qualifier_list pointer
-- On COMMA reduce production pointer -> STAR type_qualifier_list pointer

State 15:
type_qualifier_list -> type_qualifier . [ VOLATILE TYPE_NAME STAR RPAR RESTRICT LSQUARE LPAR IDENTIFIER CONST COMMA ]
-- On VOLATILE reduce production type_qualifier_list -> type_qualifier
-- On TYPE_NAME reduce production type_qualifier_list -> type_qualifier
-- On STAR reduce production type_qualifier_list -> type_qualifier
-- On RPAR reduce production type_qualifier_list -> type_qualifier
-- On RESTRICT reduce production type_qualifier_list -> type_qualifier
-- On LSQUARE reduce production type_qualifier_list -> type_qualifier
-- On LPAR reduce production type_qualifier_list -> type_qualifier
-- On IDENTIFIER reduce production type_qualifier_list -> type_qualifier
-- On CONST reduce production type_qualifier_list -> type_qualifier
-- On COMMA reduce production type_qualifier_list -> type_qualifier

State 16:
pointer -> STAR pointer . [ TYPE_NAME RPAR LSQUARE LPAR IDENTIFIER COMMA ]
-- On TYPE_NAME reduce production pointer -> STAR pointer
-- On RPAR reduce production pointer -> STAR pointer
-- On LSQUARE reduce production pointer -> STAR pointer
-- On LPAR reduce production pointer -> STAR pointer
-- On IDENTIFIER reduce production pointer -> STAR pointer
-- On COMMA reduce production pointer -> STAR pointer

State 17:
declaration -> SPEC . declaration_specifiers init_declarator_list attributes_opt SEMICOLON [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SPEC SIGNED SHORT RESTRICT REGISTER LPAR LONG INT IDENTIFIER FLOAT EXTERN EOF ENUM DOUBLE DECL CONST CHAR AUTO ]
function_definition -> SPEC . function_prototype compound_statement [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SPEC SIGNED SHORT RESTRICT REGISTER LPAR LONG INT IDENTIFIER FLOAT EXTERN EOF ENUM DOUBLE DECL CONST CHAR AUTO ]
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPE_NAME shift to state 5
-- On TYPEDEF shift to state 6
-- On STRUCT shift to state 7
-- On STATIC shift to state 8
-- On STAR shift to state 9
-- On SIGNED shift to state 18
-- On SHORT shift to state 19
-- On RESTRICT shift to state 10
-- On REGISTER shift to state 20
-- On LPAR shift to state 21
-- On LONG shift to state 37
-- On INT shift to state 38
-- On IDENTIFIER shift to state 23
-- On FLOAT shift to state 140
-- On EXTERN shift to state 182
-- On ENUM shift to state 141
-- On DOUBLE shift to state 156
-- On CONST shift to state 11
-- On CHAR shift to state 157
-- On AUTO shift to state 183
-- On type_specifier_no_name shift to state 158
-- On type_specifier shift to state 184
-- On type_qualifier shift to state 187
-- On struct_or_union_specifier shift to state 162
-- On struct_or_union shift to state 163
-- On storage_class_specifier shift to state 188
-- On pointer shift to state 24
-- On identifier shift to state 25
-- On function_prototype shift to state 258
-- On enum_specifier shift to state 167
-- On direct_declarator shift to state 178
-- On declarator shift to state 385
-- On declaration_specifiers shift to state 388

State 18:
type_specifier_no_name -> SIGNED . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LSQUARE LPAR LONG INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On VOLATILE reduce production type_specifier_no_name -> SIGNED
-- On VOID reduce production type_specifier_no_name -> SIGNED
-- On UNSIGNED reduce production type_specifier_no_name -> SIGNED
-- On UNION reduce production type_specifier_no_name -> SIGNED
-- On TYPE_NAME reduce production type_specifier_no_name -> SIGNED
-- On TYPEDEF reduce production type_specifier_no_name -> SIGNED
-- On STRUCT reduce production type_specifier_no_name -> SIGNED
-- On STATIC reduce production type_specifier_no_name -> SIGNED
-- On STAR reduce production type_specifier_no_name -> SIGNED
-- On SIGNED reduce production type_specifier_no_name -> SIGNED
-- On SHORT reduce production type_specifier_no_name -> SIGNED
-- On SEMICOLON reduce production type_specifier_no_name -> SIGNED
-- On RPAR reduce production type_specifier_no_name -> SIGNED
-- On RESTRICT reduce production type_specifier_no_name -> SIGNED
-- On REGISTER reduce production type_specifier_no_name -> SIGNED
-- On LSQUARE reduce production type_specifier_no_name -> SIGNED
-- On LPAR reduce production type_specifier_no_name -> SIGNED
-- On LONG reduce production type_specifier_no_name -> SIGNED
-- On INT reduce production type_specifier_no_name -> SIGNED
-- On IDENTIFIER reduce production type_specifier_no_name -> SIGNED
-- On FLOAT reduce production type_specifier_no_name -> SIGNED
-- On EXTERN reduce production type_specifier_no_name -> SIGNED
-- On ENUM reduce production type_specifier_no_name -> SIGNED
-- On DOUBLE reduce production type_specifier_no_name -> SIGNED
-- On CONST reduce production type_specifier_no_name -> SIGNED
-- On COMMA reduce production type_specifier_no_name -> SIGNED
-- On COLON reduce production type_specifier_no_name -> SIGNED
-- On CHAR reduce production type_specifier_no_name -> SIGNED
-- On AUTO reduce production type_specifier_no_name -> SIGNED

State 19:
type_specifier_no_name -> SHORT . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LSQUARE LPAR LONG INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On VOLATILE reduce production type_specifier_no_name -> SHORT
-- On VOID reduce production type_specifier_no_name -> SHORT
-- On UNSIGNED reduce production type_specifier_no_name -> SHORT
-- On UNION reduce production type_specifier_no_name -> SHORT
-- On TYPE_NAME reduce production type_specifier_no_name -> SHORT
-- On TYPEDEF reduce production type_specifier_no_name -> SHORT
-- On STRUCT reduce production type_specifier_no_name -> SHORT
-- On STATIC reduce production type_specifier_no_name -> SHORT
-- On STAR reduce production type_specifier_no_name -> SHORT
-- On SIGNED reduce production type_specifier_no_name -> SHORT
-- On SHORT reduce production type_specifier_no_name -> SHORT
-- On SEMICOLON reduce production type_specifier_no_name -> SHORT
-- On RPAR reduce production type_specifier_no_name -> SHORT
-- On RESTRICT reduce production type_specifier_no_name -> SHORT
-- On REGISTER reduce production type_specifier_no_name -> SHORT
-- On LSQUARE reduce production type_specifier_no_name -> SHORT
-- On LPAR reduce production type_specifier_no_name -> SHORT
-- On LONG reduce production type_specifier_no_name -> SHORT
-- On INT reduce production type_specifier_no_name -> SHORT
-- On IDENTIFIER reduce production type_specifier_no_name -> SHORT
-- On FLOAT reduce production type_specifier_no_name -> SHORT
-- On EXTERN reduce production type_specifier_no_name -> SHORT
-- On ENUM reduce production type_specifier_no_name -> SHORT
-- On DOUBLE reduce production type_specifier_no_name -> SHORT
-- On CONST reduce production type_specifier_no_name -> SHORT
-- On COMMA reduce production type_specifier_no_name -> SHORT
-- On COLON reduce production type_specifier_no_name -> SHORT
-- On CHAR reduce production type_specifier_no_name -> SHORT
-- On AUTO reduce production type_specifier_no_name -> SHORT

State 20:
storage_class_specifier -> REGISTER . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LSQUARE LPAR LONG INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA CHAR AUTO ]
-- On VOLATILE reduce production storage_class_specifier -> REGISTER
-- On VOID reduce production storage_class_specifier -> REGISTER
-- On UNSIGNED reduce production storage_class_specifier -> REGISTER
-- On UNION reduce production storage_class_specifier -> REGISTER
-- On TYPE_NAME reduce production storage_class_specifier -> REGISTER
-- On TYPEDEF reduce production storage_class_specifier -> REGISTER
-- On STRUCT reduce production storage_class_specifier -> REGISTER
-- On STATIC reduce production storage_class_specifier -> REGISTER
-- On STAR reduce production storage_class_specifier -> REGISTER
-- On SIGNED reduce production storage_class_specifier -> REGISTER
-- On SHORT reduce production storage_class_specifier -> REGISTER
-- On SEMICOLON reduce production storage_class_specifier -> REGISTER
-- On RPAR reduce production storage_class_specifier -> REGISTER
-- On RESTRICT reduce production storage_class_specifier -> REGISTER
-- On REGISTER reduce production storage_class_specifier -> REGISTER
-- On LSQUARE reduce production storage_class_specifier -> REGISTER
-- On LPAR reduce production storage_class_specifier -> REGISTER
-- On LONG reduce production storage_class_specifier -> REGISTER
-- On INT reduce production storage_class_specifier -> REGISTER
-- On IDENTIFIER reduce production storage_class_specifier -> REGISTER
-- On FLOAT reduce production storage_class_specifier -> REGISTER
-- On EXTERN reduce production storage_class_specifier -> REGISTER
-- On ENUM reduce production storage_class_specifier -> REGISTER
-- On DOUBLE reduce production storage_class_specifier -> REGISTER
-- On CONST reduce production storage_class_specifier -> REGISTER
-- On COMMA reduce production storage_class_specifier -> REGISTER
-- On CHAR reduce production storage_class_specifier -> REGISTER
-- On AUTO reduce production storage_class_specifier -> REGISTER

State 21:
direct_declarator -> LPAR . declarator RPAR [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC SPEC SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LSQUARE LPAR LONG LBRACE INT FLOAT EXTERN EQUAL ENUM DOUBLE DECL CONST COMMA COLON CHAR AUTO ATTRIBUTE ]
-- On TYPE_NAME shift to state 22
-- On STAR shift to state 9
-- On LPAR shift to state 21
-- On IDENTIFIER shift to state 23
-- On pointer shift to state 24
-- On identifier shift to state 25
-- On direct_declarator shift to state 178
-- On declarator shift to state 223

State 22:
identifier -> TYPE_NAME . [ XOR_ASSIGN VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF SUB_ASSIGN STRUCT STATIC STAR SPEC SLASH SIGNED SHORT SEMICOLON RSQUARE RPAR RIGHT_OP RIGHT_ASSIGN RESTRICT REGISTER RBRACE QUESTION PTR_OP PLUS PIPE PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LSQUARE LPAR LONG LE_OP LEFT_OP LEFT_ASSIGN LBRACE INT INC_OP IDENTIFIER HAT GT GE_OP FLOAT EXTERN EQ_OP EQUAL ENUM DOUBLE DOT DIV_ASSIGN DEC_OP DECL CONST COMMA COLON CHAR AUTO ATTRIBUTE AND_OP AND_ASSIGN AMP ADD_ASSIGN ]
-- On XOR_ASSIGN reduce production identifier -> TYPE_NAME
-- On VOLATILE reduce production identifier -> TYPE_NAME
-- On VOID reduce production identifier -> TYPE_NAME
-- On UNSIGNED reduce production identifier -> TYPE_NAME
-- On UNION reduce production identifier -> TYPE_NAME
-- On TYPE_NAME reduce production identifier -> TYPE_NAME
-- On TYPEDEF reduce production identifier -> TYPE_NAME
-- On SUB_ASSIGN reduce production identifier -> TYPE_NAME
-- On STRUCT reduce production identifier -> TYPE_NAME
-- On STATIC reduce production identifier -> TYPE_NAME
-- On STAR reduce production identifier -> TYPE_NAME
-- On SPEC reduce production identifier -> TYPE_NAME
-- On SLASH reduce production identifier -> TYPE_NAME
-- On SIGNED reduce production identifier -> TYPE_NAME
-- On SHORT reduce production identifier -> TYPE_NAME
-- On SEMICOLON reduce production identifier -> TYPE_NAME
-- On RSQUARE reduce production identifier -> TYPE_NAME
-- On RPAR reduce production identifier -> TYPE_NAME
-- On RIGHT_OP reduce production identifier -> TYPE_NAME
-- On RIGHT_ASSIGN reduce production identifier -> TYPE_NAME
-- On RESTRICT reduce production identifier -> TYPE_NAME
-- On REGISTER reduce production identifier -> TYPE_NAME
-- On RBRACE reduce production identifier -> TYPE_NAME
-- On QUESTION reduce production identifier -> TYPE_NAME
-- On PTR_OP reduce production identifier -> TYPE_NAME
-- On PLUS reduce production identifier -> TYPE_NAME
-- On PIPE reduce production identifier -> TYPE_NAME
-- On PERCENT reduce production identifier -> TYPE_NAME
-- On OR_OP reduce production identifier -> TYPE_NAME
-- On OR_ASSIGN reduce production identifier -> TYPE_NAME
-- On NE_OP reduce production identifier -> TYPE_NAME
-- On MUL_ASSIGN reduce production identifier -> TYPE_NAME
-- On MOD_ASSIGN reduce production identifier -> TYPE_NAME
-- On MINUS reduce production identifier -> TYPE_NAME
-- On LT reduce production identifier -> TYPE_NAME
-- On LSQUARE reduce production identifier -> TYPE_NAME
-- On LPAR reduce production identifier -> TYPE_NAME
-- On LONG reduce production identifier -> TYPE_NAME
-- On LE_OP reduce production identifier -> TYPE_NAME
-- On LEFT_OP reduce production identifier -> TYPE_NAME
-- On LEFT_ASSIGN reduce production identifier -> TYPE_NAME
-- On LBRACE reduce production identifier -> TYPE_NAME
-- On INT reduce production identifier -> TYPE_NAME
-- On INC_OP reduce production identifier -> TYPE_NAME
-- On IDENTIFIER reduce production identifier -> TYPE_NAME
-- On HAT reduce production identifier -> TYPE_NAME
-- On GT reduce production identifier -> TYPE_NAME
-- On GE_OP reduce production identifier -> TYPE_NAME
-- On FLOAT reduce production identifier -> TYPE_NAME
-- On EXTERN reduce production identifier -> TYPE_NAME
-- On EQ_OP reduce production identifier -> TYPE_NAME
-- On EQUAL reduce production identifier -> TYPE_NAME
-- On ENUM reduce production identifier -> TYPE_NAME
-- On DOUBLE reduce production identifier -> TYPE_NAME
-- On DOT reduce production identifier -> TYPE_NAME
-- On DIV_ASSIGN reduce production identifier -> TYPE_NAME
-- On DEC_OP reduce production identifier -> TYPE_NAME
-- On DECL reduce production identifier -> TYPE_NAME
-- On CONST reduce production identifier -> TYPE_NAME
-- On COMMA reduce production identifier -> TYPE_NAME
-- On COLON reduce production identifier -> TYPE_NAME
-- On CHAR reduce production identifier -> TYPE_NAME
-- On AUTO reduce production identifier -> TYPE_NAME
-- On ATTRIBUTE reduce production identifier -> TYPE_NAME
-- On AND_OP reduce production identifier -> TYPE_NAME
-- On AND_ASSIGN reduce production identifier -> TYPE_NAME
-- On AMP reduce production identifier -> TYPE_NAME
-- On ADD_ASSIGN reduce production identifier -> TYPE_NAME

State 23:
identifier -> IDENTIFIER . [ XOR_ASSIGN VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF SUB_ASSIGN STRUCT STATIC STAR SPEC SLASH SIGNED SHORT SEMICOLON RSQUARE RPAR RIGHT_OP RIGHT_ASSIGN RESTRICT REGISTER RBRACE QUESTION PTR_OP PLUS PIPE PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LSQUARE LPAR LONG LE_OP LEFT_OP LEFT_ASSIGN LBRACE INT INC_OP IDENTIFIER HAT GT GE_OP FLOAT EXTERN EQ_OP EQUAL ENUM DOUBLE DOT DIV_ASSIGN DEC_OP DECL CONST COMMA COLON CHAR AUTO ATTRIBUTE AND_OP AND_ASSIGN AMP ADD_ASSIGN ]
-- On XOR_ASSIGN reduce production identifier -> IDENTIFIER
-- On VOLATILE reduce production identifier -> IDENTIFIER
-- On VOID reduce production identifier -> IDENTIFIER
-- On UNSIGNED reduce production identifier -> IDENTIFIER
-- On UNION reduce production identifier -> IDENTIFIER
-- On TYPE_NAME reduce production identifier -> IDENTIFIER
-- On TYPEDEF reduce production identifier -> IDENTIFIER
-- On SUB_ASSIGN reduce production identifier -> IDENTIFIER
-- On STRUCT reduce production identifier -> IDENTIFIER
-- On STATIC reduce production identifier -> IDENTIFIER
-- On STAR reduce production identifier -> IDENTIFIER
-- On SPEC reduce production identifier -> IDENTIFIER
-- On SLASH reduce production identifier -> IDENTIFIER
-- On SIGNED reduce production identifier -> IDENTIFIER
-- On SHORT reduce production identifier -> IDENTIFIER
-- On SEMICOLON reduce production identifier -> IDENTIFIER
-- On RSQUARE reduce production identifier -> IDENTIFIER
-- On RPAR reduce production identifier -> IDENTIFIER
-- On RIGHT_OP reduce production identifier -> IDENTIFIER
-- On RIGHT_ASSIGN reduce production identifier -> IDENTIFIER
-- On RESTRICT reduce production identifier -> IDENTIFIER
-- On REGISTER reduce production identifier -> IDENTIFIER
-- On RBRACE reduce production identifier -> IDENTIFIER
-- On QUESTION reduce production identifier -> IDENTIFIER
-- On PTR_OP reduce production identifier -> IDENTIFIER
-- On PLUS reduce production identifier -> IDENTIFIER
-- On PIPE reduce production identifier -> IDENTIFIER
-- On PERCENT reduce production identifier -> IDENTIFIER
-- On OR_OP reduce production identifier -> IDENTIFIER
-- On OR_ASSIGN reduce production identifier -> IDENTIFIER
-- On NE_OP reduce production identifier -> IDENTIFIER
-- On MUL_ASSIGN reduce production identifier -> IDENTIFIER
-- On MOD_ASSIGN reduce production identifier -> IDENTIFIER
-- On MINUS reduce production identifier -> IDENTIFIER
-- On LT reduce production identifier -> IDENTIFIER
-- On LSQUARE reduce production identifier -> IDENTIFIER
-- On LPAR reduce production identifier -> IDENTIFIER
-- On LONG reduce production identifier -> IDENTIFIER
-- On LE_OP reduce production identifier -> IDENTIFIER
-- On LEFT_OP reduce production identifier -> IDENTIFIER
-- On LEFT_ASSIGN reduce production identifier -> IDENTIFIER
-- On LBRACE reduce production identifier -> IDENTIFIER
-- On INT reduce production identifier -> IDENTIFIER
-- On INC_OP reduce production identifier -> IDENTIFIER
-- On IDENTIFIER reduce production identifier -> IDENTIFIER
-- On HAT reduce production identifier -> IDENTIFIER
-- On GT reduce production identifier -> IDENTIFIER
-- On GE_OP reduce production identifier -> IDENTIFIER
-- On FLOAT reduce production identifier -> IDENTIFIER
-- On EXTERN reduce production identifier -> IDENTIFIER
-- On EQ_OP reduce production identifier -> IDENTIFIER
-- On EQUAL reduce production identifier -> IDENTIFIER
-- On ENUM reduce production identifier -> IDENTIFIER
-- On DOUBLE reduce production identifier -> IDENTIFIER
-- On DOT reduce production identifier -> IDENTIFIER
-- On DIV_ASSIGN reduce production identifier -> IDENTIFIER
-- On DEC_OP reduce production identifier -> IDENTIFIER
-- On DECL reduce production identifier -> IDENTIFIER
-- On CONST reduce production identifier -> IDENTIFIER
-- On COMMA reduce production identifier -> IDENTIFIER
-- On COLON reduce production identifier -> IDENTIFIER
-- On CHAR reduce production identifier -> IDENTIFIER
-- On AUTO reduce production identifier -> IDENTIFIER
-- On ATTRIBUTE reduce production identifier -> IDENTIFIER
-- On AND_OP reduce production identifier -> IDENTIFIER
-- On AND_ASSIGN reduce production identifier -> IDENTIFIER
-- On AMP reduce production identifier -> IDENTIFIER
-- On ADD_ASSIGN reduce production identifier -> IDENTIFIER

State 24:
declarator -> pointer . direct_declarator [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC SPEC SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LONG LBRACE INT FLOAT EXTERN EQUAL ENUM DOUBLE DECL CONST COMMA COLON CHAR AUTO ATTRIBUTE ]
-- On TYPE_NAME shift to state 22
-- On LPAR shift to state 21
-- On IDENTIFIER shift to state 23
-- On identifier shift to state 25
-- On direct_declarator shift to state 26

State 25:
direct_declarator -> identifier . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC SPEC SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LSQUARE LPAR LONG LBRACE INT FLOAT EXTERN EQUAL ENUM DOUBLE DECL CONST COMMA COLON CHAR AUTO ATTRIBUTE ]
-- On VOLATILE reduce production direct_declarator -> identifier
-- On VOID reduce production direct_declarator -> identifier
-- On UNSIGNED reduce production direct_declarator -> identifier
-- On UNION reduce production direct_declarator -> identifier
-- On TYPE_NAME reduce production direct_declarator -> identifier
-- On TYPEDEF reduce production direct_declarator -> identifier
-- On STRUCT reduce production direct_declarator -> identifier
-- On STATIC reduce production direct_declarator -> identifier
-- On SPEC reduce production direct_declarator -> identifier
-- On SIGNED reduce production direct_declarator -> identifier
-- On SHORT reduce production direct_declarator -> identifier
-- On SEMICOLON reduce production direct_declarator -> identifier
-- On RPAR reduce production direct_declarator -> identifier
-- On RESTRICT reduce production direct_declarator -> identifier
-- On REGISTER reduce production direct_declarator -> identifier
-- On LSQUARE reduce production direct_declarator -> identifier
-- On LPAR reduce production direct_declarator -> identifier
-- On LONG reduce production direct_declarator -> identifier
-- On LBRACE reduce production direct_declarator -> identifier
-- On INT reduce production direct_declarator -> identifier
-- On FLOAT reduce production direct_declarator -> identifier
-- On EXTERN reduce production direct_declarator -> identifier
-- On EQUAL reduce production direct_declarator -> identifier
-- On ENUM reduce production direct_declarator -> identifier
-- On DOUBLE reduce production direct_declarator -> identifier
-- On DECL reduce production direct_declarator -> identifier
-- On CONST reduce production direct_declarator -> identifier
-- On COMMA reduce production direct_declarator -> identifier
-- On COLON reduce production direct_declarator -> identifier
-- On CHAR reduce production direct_declarator -> identifier
-- On AUTO reduce production direct_declarator -> identifier
-- On ATTRIBUTE reduce production direct_declarator -> identifier

State 26:
declarator -> pointer direct_declarator . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC SPEC SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LONG LBRACE INT FLOAT EXTERN EQUAL ENUM DOUBLE DECL CONST COMMA COLON CHAR AUTO ATTRIBUTE ]
direct_declarator -> direct_declarator . LSQUARE constant_expression RSQUARE [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC SPEC SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LSQUARE LPAR LONG LBRACE INT FLOAT EXTERN EQUAL ENUM DOUBLE DECL CONST COMMA COLON CHAR AUTO ATTRIBUTE ]
direct_declarator -> direct_declarator . LSQUARE RSQUARE [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC SPEC SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LSQUARE LPAR LONG LBRACE INT FLOAT EXTERN EQUAL ENUM DOUBLE DECL CONST COMMA COLON CHAR AUTO ATTRIBUTE ]
direct_declarator -> direct_declarator . LPAR parameter_type_list RPAR [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC SPEC SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LSQUARE LPAR LONG LBRACE INT FLOAT EXTERN EQUAL ENUM DOUBLE DECL CONST COMMA COLON CHAR AUTO ATTRIBUTE ]
direct_declarator -> direct_declarator . LPAR identifier_list RPAR [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC SPEC SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LSQUARE LPAR LONG LBRACE INT FLOAT EXTERN EQUAL ENUM DOUBLE DECL CONST COMMA COLON CHAR AUTO ATTRIBUTE ]
direct_declarator -> direct_declarator . LPAR RPAR [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC SPEC SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LSQUARE LPAR LONG LBRACE INT FLOAT EXTERN EQUAL ENUM DOUBLE DECL CONST COMMA COLON CHAR AUTO ATTRIBUTE ]
-- On LSQUARE shift to state 27
-- On LPAR shift to state 179
-- On VOLATILE reduce production declarator -> pointer direct_declarator
-- On VOID reduce production declarator -> pointer direct_declarator
-- On UNSIGNED reduce production declarator -> pointer direct_declarator
-- On UNION reduce production declarator -> pointer direct_declarator
-- On TYPE_NAME reduce production declarator -> pointer direct_declarator
-- On TYPEDEF reduce production declarator -> pointer direct_declarator
-- On STRUCT reduce production declarator -> pointer direct_declarator
-- On STATIC reduce production declarator -> pointer direct_declarator
-- On SPEC reduce production declarator -> pointer direct_declarator
-- On SIGNED reduce production declarator -> pointer direct_declarator
-- On SHORT reduce production declarator -> pointer direct_declarator
-- On SEMICOLON reduce production declarator -> pointer direct_declarator
-- On RPAR reduce production declarator -> pointer direct_declarator
-- On RESTRICT reduce production declarator -> pointer direct_declarator
-- On REGISTER reduce production declarator -> pointer direct_declarator
-- On LONG reduce production declarator -> pointer direct_declarator
-- On LBRACE reduce production declarator -> pointer direct_declarator
-- On INT reduce production declarator -> pointer direct_declarator
-- On FLOAT reduce production declarator -> pointer direct_declarator
-- On EXTERN reduce production declarator -> pointer direct_declarator
-- On EQUAL reduce production declarator -> pointer direct_declarator
-- On ENUM reduce production declarator -> pointer direct_declarator
-- On DOUBLE reduce production declarator -> pointer direct_declarator
-- On DECL reduce production declarator -> pointer direct_declarator
-- On CONST reduce production declarator -> pointer direct_declarator
-- On COMMA reduce production declarator -> pointer direct_declarator
-- On COLON reduce production declarator -> pointer direct_declarator
-- On CHAR reduce production declarator -> pointer direct_declarator
-- On AUTO reduce production declarator -> pointer direct_declarator
-- On ATTRIBUTE reduce production declarator -> pointer direct_declarator

State 27:
direct_declarator -> direct_declarator LSQUARE . constant_expression RSQUARE [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC SPEC SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LSQUARE LPAR LONG LBRACE INT FLOAT EXTERN EQUAL ENUM DOUBLE DECL CONST COMMA COLON CHAR AUTO ATTRIBUTE ]
direct_declarator -> direct_declarator LSQUARE . RSQUARE [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC SPEC SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LSQUARE LPAR LONG LBRACE INT FLOAT EXTERN EQUAL ENUM DOUBLE DECL CONST COMMA COLON CHAR AUTO ATTRIBUTE ]
-- On TILDE shift to state 28
-- On STRING_LITERAL shift to state 29
-- On STAR shift to state 30
-- On SIZEOF shift to state 31
-- On RSQUARE shift to state 255
-- On PLUS shift to state 32
-- On MINUS shift to state 33
-- On LPAR shift to state 36
-- On INC_OP shift to state 39
-- On IDENTIFIER shift to state 41
-- On EXL shift to state 42
-- On DEC_OP shift to state 43
-- On CONSTANT shift to state 44
-- On AMP shift to state 45
-- On unary_operator shift to state 46
-- On unary_expression shift to state 47
-- On shift_expression shift to state 66
-- On relational_expression shift to state 83
-- On primary_expression shift to state 48
-- On postfix_expression shift to state 49
-- On multiplicative_expression shift to state 68
-- On logical_or_expression shift to state 93
-- On logical_and_expression shift to state 95
-- On inclusive_or_expression shift to state 111
-- On exclusive_or_expression shift to state 110
-- On equality_expression shift to state 101
-- On constant_expression shift to state 256
-- On conditional_expression shift to state 146
-- On cast_expression shift to state 75
-- On and_expression shift to state 109
-- On additive_expression shift to state 86

State 28:
unary_operator -> TILDE . [ TILDE STRING_LITERAL STAR SIZEOF PLUS MINUS LPAR INC_OP IDENTIFIER EXL DEC_OP CONSTANT AMP ]
-- On TILDE reduce production unary_operator -> TILDE
-- On STRING_LITERAL reduce production unary_operator -> TILDE
-- On STAR reduce production unary_operator -> TILDE
-- On SIZEOF reduce production unary_operator -> TILDE
-- On PLUS reduce production unary_operator -> TILDE
-- On MINUS reduce production unary_operator -> TILDE
-- On LPAR reduce production unary_operator -> TILDE
-- On INC_OP reduce production unary_operator -> TILDE
-- On IDENTIFIER reduce production unary_operator -> TILDE
-- On EXL reduce production unary_operator -> TILDE
-- On DEC_OP reduce production unary_operator -> TILDE
-- On CONSTANT reduce production unary_operator -> TILDE
-- On AMP reduce production unary_operator -> TILDE

State 29:
primary_expression -> STRING_LITERAL . [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RSQUARE RPAR RIGHT_OP RIGHT_ASSIGN RBRACE QUESTION PTR_OP PLUS PIPE PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LSQUARE LPAR LE_OP LEFT_OP LEFT_ASSIGN INC_OP HAT GT GE_OP EQ_OP EQUAL DOT DIV_ASSIGN DEC_OP COMMA COLON ATTRIBUTE AND_OP AND_ASSIGN AMP ADD_ASSIGN ]
-- On XOR_ASSIGN reduce production primary_expression -> STRING_LITERAL
-- On SUB_ASSIGN reduce production primary_expression -> STRING_LITERAL
-- On STAR reduce production primary_expression -> STRING_LITERAL
-- On SLASH reduce production primary_expression -> STRING_LITERAL
-- On SEMICOLON reduce production primary_expression -> STRING_LITERAL
-- On RSQUARE reduce production primary_expression -> STRING_LITERAL
-- On RPAR reduce production primary_expression -> STRING_LITERAL
-- On RIGHT_OP reduce production primary_expression -> STRING_LITERAL
-- On RIGHT_ASSIGN reduce production primary_expression -> STRING_LITERAL
-- On RBRACE reduce production primary_expression -> STRING_LITERAL
-- On QUESTION reduce production primary_expression -> STRING_LITERAL
-- On PTR_OP reduce production primary_expression -> STRING_LITERAL
-- On PLUS reduce production primary_expression -> STRING_LITERAL
-- On PIPE reduce production primary_expression -> STRING_LITERAL
-- On PERCENT reduce production primary_expression -> STRING_LITERAL
-- On OR_OP reduce production primary_expression -> STRING_LITERAL
-- On OR_ASSIGN reduce production primary_expression -> STRING_LITERAL
-- On NE_OP reduce production primary_expression -> STRING_LITERAL
-- On MUL_ASSIGN reduce production primary_expression -> STRING_LITERAL
-- On MOD_ASSIGN reduce production primary_expression -> STRING_LITERAL
-- On MINUS reduce production primary_expression -> STRING_LITERAL
-- On LT reduce production primary_expression -> STRING_LITERAL
-- On LSQUARE reduce production primary_expression -> STRING_LITERAL
-- On LPAR reduce production primary_expression -> STRING_LITERAL
-- On LE_OP reduce production primary_expression -> STRING_LITERAL
-- On LEFT_OP reduce production primary_expression -> STRING_LITERAL
-- On LEFT_ASSIGN reduce production primary_expression -> STRING_LITERAL
-- On INC_OP reduce production primary_expression -> STRING_LITERAL
-- On HAT reduce production primary_expression -> STRING_LITERAL
-- On GT reduce production primary_expression -> STRING_LITERAL
-- On GE_OP reduce production primary_expression -> STRING_LITERAL
-- On EQ_OP reduce production primary_expression -> STRING_LITERAL
-- On EQUAL reduce production primary_expression -> STRING_LITERAL
-- On DOT reduce production primary_expression -> STRING_LITERAL
-- On DIV_ASSIGN reduce production primary_expression -> STRING_LITERAL
-- On DEC_OP reduce production primary_expression -> STRING_LITERAL
-- On COMMA reduce production primary_expression -> STRING_LITERAL
-- On COLON reduce production primary_expression -> STRING_LITERAL
-- On ATTRIBUTE reduce production primary_expression -> STRING_LITERAL
-- On AND_OP reduce production primary_expression -> STRING_LITERAL
-- On AND_ASSIGN reduce production primary_expression -> STRING_LITERAL
-- On AMP reduce production primary_expression -> STRING_LITERAL
-- On ADD_ASSIGN reduce production primary_expression -> STRING_LITERAL

State 30:
unary_operator -> STAR . [ TILDE STRING_LITERAL STAR SIZEOF PLUS MINUS LPAR INC_OP IDENTIFIER EXL DEC_OP CONSTANT AMP ]
-- On TILDE reduce production unary_operator -> STAR
-- On STRING_LITERAL reduce production unary_operator -> STAR
-- On STAR reduce production unary_operator -> STAR
-- On SIZEOF reduce production unary_operator -> STAR
-- On PLUS reduce production unary_operator -> STAR
-- On MINUS reduce production unary_operator -> STAR
-- On LPAR reduce production unary_operator -> STAR
-- On INC_OP reduce production unary_operator -> STAR
-- On IDENTIFIER reduce production unary_operator -> STAR
-- On EXL reduce production unary_operator -> STAR
-- On DEC_OP reduce production unary_operator -> STAR
-- On CONSTANT reduce production unary_operator -> STAR
-- On AMP reduce production unary_operator -> STAR

State 31:
unary_expression -> SIZEOF . unary_expression [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RSQUARE RPAR RIGHT_OP RIGHT_ASSIGN RBRACE QUESTION PLUS PIPE PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LE_OP LEFT_OP LEFT_ASSIGN HAT GT GE_OP EQ_OP EQUAL DIV_ASSIGN COMMA COLON ATTRIBUTE AND_OP AND_ASSIGN AMP ADD_ASSIGN ]
unary_expression -> SIZEOF . LPAR type_name RPAR [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RSQUARE RPAR RIGHT_OP RIGHT_ASSIGN RBRACE QUESTION PLUS PIPE PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LE_OP LEFT_OP LEFT_ASSIGN HAT GT GE_OP EQ_OP EQUAL DIV_ASSIGN COMMA COLON ATTRIBUTE AND_OP AND_ASSIGN AMP ADD_ASSIGN ]
-- On TILDE shift to state 28
-- On STRING_LITERAL shift to state 29
-- On STAR shift to state 30
-- On SIZEOF shift to state 31
-- On PLUS shift to state 32
-- On MINUS shift to state 33
-- On LPAR shift to state 34
-- On INC_OP shift to state 39
-- On IDENTIFIER shift to state 41
-- On EXL shift to state 42
-- On DEC_OP shift to state 43
-- On CONSTANT shift to state 44
-- On AMP shift to state 45
-- On unary_operator shift to state 46
-- On unary_expression shift to state 254
-- On primary_expression shift to state 48
-- On postfix_expression shift to state 49

State 32:
unary_operator -> PLUS . [ TILDE STRING_LITERAL STAR SIZEOF PLUS MINUS LPAR INC_OP IDENTIFIER EXL DEC_OP CONSTANT AMP ]
-- On TILDE reduce production unary_operator -> PLUS
-- On STRING_LITERAL reduce production unary_operator -> PLUS
-- On STAR reduce production unary_operator -> PLUS
-- On SIZEOF reduce production unary_operator -> PLUS
-- On PLUS reduce production unary_operator -> PLUS
-- On MINUS reduce production unary_operator -> PLUS
-- On LPAR reduce production unary_operator -> PLUS
-- On INC_OP reduce production unary_operator -> PLUS
-- On IDENTIFIER reduce production unary_operator -> PLUS
-- On EXL reduce production unary_operator -> PLUS
-- On DEC_OP reduce production unary_operator -> PLUS
-- On CONSTANT reduce production unary_operator -> PLUS
-- On AMP reduce production unary_operator -> PLUS

State 33:
unary_operator -> MINUS . [ TILDE STRING_LITERAL STAR SIZEOF PLUS MINUS LPAR INC_OP IDENTIFIER EXL DEC_OP CONSTANT AMP ]
-- On TILDE reduce production unary_operator -> MINUS
-- On STRING_LITERAL reduce production unary_operator -> MINUS
-- On STAR reduce production unary_operator -> MINUS
-- On SIZEOF reduce production unary_operator -> MINUS
-- On PLUS reduce production unary_operator -> MINUS
-- On MINUS reduce production unary_operator -> MINUS
-- On LPAR reduce production unary_operator -> MINUS
-- On INC_OP reduce production unary_operator -> MINUS
-- On IDENTIFIER reduce production unary_operator -> MINUS
-- On EXL reduce production unary_operator -> MINUS
-- On DEC_OP reduce production unary_operator -> MINUS
-- On CONSTANT reduce production unary_operator -> MINUS
-- On AMP reduce production unary_operator -> MINUS

State 34:
primary_expression -> LPAR . expression RPAR [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RSQUARE RPAR RIGHT_OP RIGHT_ASSIGN RBRACE QUESTION PTR_OP PLUS PIPE PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LSQUARE LPAR LE_OP LEFT_OP LEFT_ASSIGN INC_OP HAT GT GE_OP EQ_OP EQUAL DOT DIV_ASSIGN DEC_OP COMMA COLON ATTRIBUTE AND_OP AND_ASSIGN AMP ADD_ASSIGN ]
unary_expression -> SIZEOF LPAR . type_name RPAR [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RSQUARE RPAR RIGHT_OP RIGHT_ASSIGN RBRACE QUESTION PLUS PIPE PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LE_OP LEFT_OP LEFT_ASSIGN HAT GT GE_OP EQ_OP EQUAL DIV_ASSIGN COMMA COLON ATTRIBUTE AND_OP AND_ASSIGN AMP ADD_ASSIGN ]
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPE_NAME shift to state 35
-- On TILDE shift to state 28
-- On STRUCT shift to state 7
-- On STRING_LITERAL shift to state 29
-- On STAR shift to state 30
-- On SIZEOF shift to state 31
-- On SIGNED shift to state 18
-- On SHORT shift to state 19
-- On RESTRICT shift to state 10
-- On PLUS shift to state 32
-- On MINUS shift to state 33
-- On LPAR shift to state 36
-- On LONG shift to state 37
-- On INT shift to state 38
-- On INC_OP shift to state 39
-- On IDENTIFIER shift to state 41
-- On FLOAT shift to state 140
-- On EXL shift to state 42
-- On ENUM shift to state 141
-- On DOUBLE shift to state 156
-- On DEC_OP shift to state 43
-- On CONSTANT shift to state 44
-- On CONST shift to state 11
-- On CHAR shift to state 157
-- On AMP shift to state 45
-- On unary_operator shift to state 46
-- On unary_expression shift to state 53
-- On type_specifier_no_name shift to state 158
-- On type_specifier shift to state 159
-- On type_qualifier shift to state 165
-- On type_name shift to state 252
-- On struct_or_union_specifier shift to state 162
-- On struct_or_union shift to state 163
-- On specifier_qualifier_list shift to state 248
-- On shift_expression shift to state 66
-- On relational_expression shift to state 83
-- On primary_expression shift to state 48
-- On postfix_expression shift to state 49
-- On multiplicative_expression shift to state 68
-- On logical_or_expression shift to state 93
-- On logical_and_expression shift to state 95
-- On inclusive_or_expression shift to state 111
-- On expression shift to state 137
-- On exclusive_or_expression shift to state 110
-- On equality_expression shift to state 101
-- On enum_specifier shift to state 167
-- On conditional_expression shift to state 114
-- On cast_expression shift to state 75
-- On assignment_expression shift to state 118
-- On and_expression shift to state 109
-- On additive_expression shift to state 86

State 35:
type_specifier -> TYPE_NAME . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LSQUARE LPAR LONG INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On VOLATILE reduce production type_specifier -> TYPE_NAME
-- On VOID reduce production type_specifier -> TYPE_NAME
-- On UNSIGNED reduce production type_specifier -> TYPE_NAME
-- On UNION reduce production type_specifier -> TYPE_NAME
-- On TYPE_NAME reduce production type_specifier -> TYPE_NAME
-- On TYPEDEF reduce production type_specifier -> TYPE_NAME
-- On STRUCT reduce production type_specifier -> TYPE_NAME
-- On STATIC reduce production type_specifier -> TYPE_NAME
-- On STAR reduce production type_specifier -> TYPE_NAME
-- On SIGNED reduce production type_specifier -> TYPE_NAME
-- On SHORT reduce production type_specifier -> TYPE_NAME
-- On SEMICOLON reduce production type_specifier -> TYPE_NAME
-- On RPAR reduce production type_specifier -> TYPE_NAME
-- On RESTRICT reduce production type_specifier -> TYPE_NAME
-- On REGISTER reduce production type_specifier -> TYPE_NAME
-- On LSQUARE reduce production type_specifier -> TYPE_NAME
-- On LPAR reduce production type_specifier -> TYPE_NAME
-- On LONG reduce production type_specifier -> TYPE_NAME
-- On INT reduce production type_specifier -> TYPE_NAME
-- On IDENTIFIER reduce production type_specifier -> TYPE_NAME
-- On FLOAT reduce production type_specifier -> TYPE_NAME
-- On EXTERN reduce production type_specifier -> TYPE_NAME
-- On ENUM reduce production type_specifier -> TYPE_NAME
-- On DOUBLE reduce production type_specifier -> TYPE_NAME
-- On CONST reduce production type_specifier -> TYPE_NAME
-- On COMMA reduce production type_specifier -> TYPE_NAME
-- On COLON reduce production type_specifier -> TYPE_NAME
-- On CHAR reduce production type_specifier -> TYPE_NAME
-- On AUTO reduce production type_specifier -> TYPE_NAME

State 36:
cast_expression -> LPAR . type_name RPAR cast_expression [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RSQUARE RPAR RIGHT_OP RIGHT_ASSIGN RBRACE QUESTION PLUS PIPE PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LE_OP LEFT_OP LEFT_ASSIGN HAT GT GE_OP EQ_OP EQUAL DIV_ASSIGN COMMA COLON ATTRIBUTE AND_OP AND_ASSIGN AMP ADD_ASSIGN ]
primary_expression -> LPAR . expression RPAR [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RSQUARE RPAR RIGHT_OP RIGHT_ASSIGN RBRACE QUESTION PTR_OP PLUS PIPE PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LSQUARE LPAR LE_OP LEFT_OP LEFT_ASSIGN INC_OP HAT GT GE_OP EQ_OP EQUAL DOT DIV_ASSIGN DEC_OP COMMA COLON ATTRIBUTE AND_OP AND_ASSIGN AMP ADD_ASSIGN ]
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPE_NAME shift to state 35
-- On TILDE shift to state 28
-- On STRUCT shift to state 7
-- On STRING_LITERAL shift to state 29
-- On STAR shift to state 30
-- On SIZEOF shift to state 31
-- On SIGNED shift to state 18
-- On SHORT shift to state 19
-- On RESTRICT shift to state 10
-- On PLUS shift to state 32
-- On MINUS shift to state 33
-- On LPAR shift to state 36
-- On LONG shift to state 37
-- On INT shift to state 38
-- On INC_OP shift to state 39
-- On IDENTIFIER shift to state 41
-- On FLOAT shift to state 140
-- On EXL shift to state 42
-- On ENUM shift to state 141
-- On DOUBLE shift to state 156
-- On DEC_OP shift to state 43
-- On CONSTANT shift to state 44
-- On CONST shift to state 11
-- On CHAR shift to state 157
-- On AMP shift to state 45
-- On unary_operator shift to state 46
-- On unary_expression shift to state 53
-- On type_specifier_no_name shift to state 158
-- On type_specifier shift to state 159
-- On type_qualifier shift to state 165
-- On type_name shift to state 245
-- On struct_or_union_specifier shift to state 162
-- On struct_or_union shift to state 163
-- On specifier_qualifier_list shift to state 248
-- On shift_expression shift to state 66
-- On relational_expression shift to state 83
-- On primary_expression shift to state 48
-- On postfix_expression shift to state 49
-- On multiplicative_expression shift to state 68
-- On logical_or_expression shift to state 93
-- On logical_and_expression shift to state 95
-- On inclusive_or_expression shift to state 111
-- On expression shift to state 137
-- On exclusive_or_expression shift to state 110
-- On equality_expression shift to state 101
-- On enum_specifier shift to state 167
-- On conditional_expression shift to state 114
-- On cast_expression shift to state 75
-- On assignment_expression shift to state 118
-- On and_expression shift to state 109
-- On additive_expression shift to state 86

State 37:
type_specifier_no_name -> LONG . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LSQUARE LPAR LONG INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On VOLATILE reduce production type_specifier_no_name -> LONG
-- On VOID reduce production type_specifier_no_name -> LONG
-- On UNSIGNED reduce production type_specifier_no_name -> LONG
-- On UNION reduce production type_specifier_no_name -> LONG
-- On TYPE_NAME reduce production type_specifier_no_name -> LONG
-- On TYPEDEF reduce production type_specifier_no_name -> LONG
-- On STRUCT reduce production type_specifier_no_name -> LONG
-- On STATIC reduce production type_specifier_no_name -> LONG
-- On STAR reduce production type_specifier_no_name -> LONG
-- On SIGNED reduce production type_specifier_no_name -> LONG
-- On SHORT reduce production type_specifier_no_name -> LONG
-- On SEMICOLON reduce production type_specifier_no_name -> LONG
-- On RPAR reduce production type_specifier_no_name -> LONG
-- On RESTRICT reduce production type_specifier_no_name -> LONG
-- On REGISTER reduce production type_specifier_no_name -> LONG
-- On LSQUARE reduce production type_specifier_no_name -> LONG
-- On LPAR reduce production type_specifier_no_name -> LONG
-- On LONG reduce production type_specifier_no_name -> LONG
-- On INT reduce production type_specifier_no_name -> LONG
-- On IDENTIFIER reduce production type_specifier_no_name -> LONG
-- On FLOAT reduce production type_specifier_no_name -> LONG
-- On EXTERN reduce production type_specifier_no_name -> LONG
-- On ENUM reduce production type_specifier_no_name -> LONG
-- On DOUBLE reduce production type_specifier_no_name -> LONG
-- On CONST reduce production type_specifier_no_name -> LONG
-- On COMMA reduce production type_specifier_no_name -> LONG
-- On COLON reduce production type_specifier_no_name -> LONG
-- On CHAR reduce production type_specifier_no_name -> LONG
-- On AUTO reduce production type_specifier_no_name -> LONG

State 38:
type_specifier_no_name -> INT . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LSQUARE LPAR LONG INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On VOLATILE reduce production type_specifier_no_name -> INT
-- On VOID reduce production type_specifier_no_name -> INT
-- On UNSIGNED reduce production type_specifier_no_name -> INT
-- On UNION reduce production type_specifier_no_name -> INT
-- On TYPE_NAME reduce production type_specifier_no_name -> INT
-- On TYPEDEF reduce production type_specifier_no_name -> INT
-- On STRUCT reduce production type_specifier_no_name -> INT
-- On STATIC reduce production type_specifier_no_name -> INT
-- On STAR reduce production type_specifier_no_name -> INT
-- On SIGNED reduce production type_specifier_no_name -> INT
-- On SHORT reduce production type_specifier_no_name -> INT
-- On SEMICOLON reduce production type_specifier_no_name -> INT
-- On RPAR reduce production type_specifier_no_name -> INT
-- On RESTRICT reduce production type_specifier_no_name -> INT
-- On REGISTER reduce production type_specifier_no_name -> INT
-- On LSQUARE reduce production type_specifier_no_name -> INT
-- On LPAR reduce production type_specifier_no_name -> INT
-- On LONG reduce production type_specifier_no_name -> INT
-- On INT reduce production type_specifier_no_name -> INT
-- On IDENTIFIER reduce production type_specifier_no_name -> INT
-- On FLOAT reduce production type_specifier_no_name -> INT
-- On EXTERN reduce production type_specifier_no_name -> INT
-- On ENUM reduce production type_specifier_no_name -> INT
-- On DOUBLE reduce production type_specifier_no_name -> INT
-- On CONST reduce production type_specifier_no_name -> INT
-- On COMMA reduce production type_specifier_no_name -> INT
-- On COLON reduce production type_specifier_no_name -> INT
-- On CHAR reduce production type_specifier_no_name -> INT
-- On AUTO reduce production type_specifier_no_name -> INT

State 39:
unary_expression -> INC_OP . unary_expression [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RSQUARE RPAR RIGHT_OP RIGHT_ASSIGN RBRACE QUESTION PLUS PIPE PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LE_OP LEFT_OP LEFT_ASSIGN HAT GT GE_OP EQ_OP EQUAL DIV_ASSIGN COMMA COLON ATTRIBUTE AND_OP AND_ASSIGN AMP ADD_ASSIGN ]
-- On TILDE shift to state 28
-- On STRING_LITERAL shift to state 29
-- On STAR shift to state 30
-- On SIZEOF shift to state 31
-- On PLUS shift to state 32
-- On MINUS shift to state 33
-- On LPAR shift to state 40
-- On INC_OP shift to state 39
-- On IDENTIFIER shift to state 41
-- On EXL shift to state 42
-- On DEC_OP shift to state 43
-- On CONSTANT shift to state 44
-- On AMP shift to state 45
-- On unary_operator shift to state 46
-- On unary_expression shift to state 139
-- On primary_expression shift to state 48
-- On postfix_expression shift to state 49

State 40:
primary_expression -> LPAR . expression RPAR [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RSQUARE RPAR RIGHT_OP RIGHT_ASSIGN RBRACE QUESTION PTR_OP PLUS PIPE PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LSQUARE LPAR LE_OP LEFT_OP LEFT_ASSIGN INC_OP HAT GT GE_OP EQ_OP EQUAL DOT DIV_ASSIGN DEC_OP COMMA COLON ATTRIBUTE AND_OP AND_ASSIGN AMP ADD_ASSIGN ]
-- On TILDE shift to state 28
-- On STRING_LITERAL shift to state 29
-- On STAR shift to state 30
-- On SIZEOF shift to state 31
-- On PLUS shift to state 32
-- On MINUS shift to state 33
-- On LPAR shift to state 36
-- On INC_OP shift to state 39
-- On IDENTIFIER shift to state 41
-- On EXL shift to state 42
-- On DEC_OP shift to state 43
-- On CONSTANT shift to state 44
-- On AMP shift to state 45
-- On unary_operator shift to state 46
-- On unary_expression shift to state 53
-- On shift_expression shift to state 66
-- On relational_expression shift to state 83
-- On primary_expression shift to state 48
-- On postfix_expression shift to state 49
-- On multiplicative_expression shift to state 68
-- On logical_or_expression shift to state 93
-- On logical_and_expression shift to state 95
-- On inclusive_or_expression shift to state 111
-- On expression shift to state 137
-- On exclusive_or_expression shift to state 110
-- On equality_expression shift to state 101
-- On conditional_expression shift to state 114
-- On cast_expression shift to state 75
-- On assignment_expression shift to state 118
-- On and_expression shift to state 109
-- On additive_expression shift to state 86

State 41:
primary_expression -> IDENTIFIER . [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RSQUARE RPAR RIGHT_OP RIGHT_ASSIGN RBRACE QUESTION PTR_OP PLUS PIPE PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LSQUARE LPAR LE_OP LEFT_OP LEFT_ASSIGN INC_OP HAT GT GE_OP EQ_OP EQUAL DOT DIV_ASSIGN DEC_OP COMMA COLON ATTRIBUTE AND_OP AND_ASSIGN AMP ADD_ASSIGN ]
-- On XOR_ASSIGN reduce production primary_expression -> IDENTIFIER
-- On SUB_ASSIGN reduce production primary_expression -> IDENTIFIER
-- On STAR reduce production primary_expression -> IDENTIFIER
-- On SLASH reduce production primary_expression -> IDENTIFIER
-- On SEMICOLON reduce production primary_expression -> IDENTIFIER
-- On RSQUARE reduce production primary_expression -> IDENTIFIER
-- On RPAR reduce production primary_expression -> IDENTIFIER
-- On RIGHT_OP reduce production primary_expression -> IDENTIFIER
-- On RIGHT_ASSIGN reduce production primary_expression -> IDENTIFIER
-- On RBRACE reduce production primary_expression -> IDENTIFIER
-- On QUESTION reduce production primary_expression -> IDENTIFIER
-- On PTR_OP reduce production primary_expression -> IDENTIFIER
-- On PLUS reduce production primary_expression -> IDENTIFIER
-- On PIPE reduce production primary_expression -> IDENTIFIER
-- On PERCENT reduce production primary_expression -> IDENTIFIER
-- On OR_OP reduce production primary_expression -> IDENTIFIER
-- On OR_ASSIGN reduce production primary_expression -> IDENTIFIER
-- On NE_OP reduce production primary_expression -> IDENTIFIER
-- On MUL_ASSIGN reduce production primary_expression -> IDENTIFIER
-- On MOD_ASSIGN reduce production primary_expression -> IDENTIFIER
-- On MINUS reduce production primary_expression -> IDENTIFIER
-- On LT reduce production primary_expression -> IDENTIFIER
-- On LSQUARE reduce production primary_expression -> IDENTIFIER
-- On LPAR reduce production primary_expression -> IDENTIFIER
-- On LE_OP reduce production primary_expression -> IDENTIFIER
-- On LEFT_OP reduce production primary_expression -> IDENTIFIER
-- On LEFT_ASSIGN reduce production primary_expression -> IDENTIFIER
-- On INC_OP reduce production primary_expression -> IDENTIFIER
-- On HAT reduce production primary_expression -> IDENTIFIER
-- On GT reduce production primary_expression -> IDENTIFIER
-- On GE_OP reduce production primary_expression -> IDENTIFIER
-- On EQ_OP reduce production primary_expression -> IDENTIFIER
-- On EQUAL reduce production primary_expression -> IDENTIFIER
-- On DOT reduce production primary_expression -> IDENTIFIER
-- On DIV_ASSIGN reduce production primary_expression -> IDENTIFIER
-- On DEC_OP reduce production primary_expression -> IDENTIFIER
-- On COMMA reduce production primary_expression -> IDENTIFIER
-- On COLON reduce production primary_expression -> IDENTIFIER
-- On ATTRIBUTE reduce production primary_expression -> IDENTIFIER
-- On AND_OP reduce production primary_expression -> IDENTIFIER
-- On AND_ASSIGN reduce production primary_expression -> IDENTIFIER
-- On AMP reduce production primary_expression -> IDENTIFIER
-- On ADD_ASSIGN reduce production primary_expression -> IDENTIFIER

State 42:
unary_operator -> EXL . [ TILDE STRING_LITERAL STAR SIZEOF PLUS MINUS LPAR INC_OP IDENTIFIER EXL DEC_OP CONSTANT AMP ]
-- On TILDE reduce production unary_operator -> EXL
-- On STRING_LITERAL reduce production unary_operator -> EXL
-- On STAR reduce production unary_operator -> EXL
-- On SIZEOF reduce production unary_operator -> EXL
-- On PLUS reduce production unary_operator -> EXL
-- On MINUS reduce production unary_operator -> EXL
-- On LPAR reduce production unary_operator -> EXL
-- On INC_OP reduce production unary_operator -> EXL
-- On IDENTIFIER reduce production unary_operator -> EXL
-- On EXL reduce production unary_operator -> EXL
-- On DEC_OP reduce production unary_operator -> EXL
-- On CONSTANT reduce production unary_operator -> EXL
-- On AMP reduce production unary_operator -> EXL

State 43:
unary_expression -> DEC_OP . unary_expression [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RSQUARE RPAR RIGHT_OP RIGHT_ASSIGN RBRACE QUESTION PLUS PIPE PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LE_OP LEFT_OP LEFT_ASSIGN HAT GT GE_OP EQ_OP EQUAL DIV_ASSIGN COMMA COLON ATTRIBUTE AND_OP AND_ASSIGN AMP ADD_ASSIGN ]
-- On TILDE shift to state 28
-- On STRING_LITERAL shift to state 29
-- On STAR shift to state 30
-- On SIZEOF shift to state 31
-- On PLUS shift to state 32
-- On MINUS shift to state 33
-- On LPAR shift to state 40
-- On INC_OP shift to state 39
-- On IDENTIFIER shift to state 41
-- On EXL shift to state 42
-- On DEC_OP shift to state 43
-- On CONSTANT shift to state 44
-- On AMP shift to state 45
-- On unary_operator shift to state 46
-- On unary_expression shift to state 136
-- On primary_expression shift to state 48
-- On postfix_expression shift to state 49

State 44:
primary_expression -> CONSTANT . [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RSQUARE RPAR RIGHT_OP RIGHT_ASSIGN RBRACE QUESTION PTR_OP PLUS PIPE PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LSQUARE LPAR LE_OP LEFT_OP LEFT_ASSIGN INC_OP HAT GT GE_OP EQ_OP EQUAL DOT DIV_ASSIGN DEC_OP COMMA COLON ATTRIBUTE AND_OP AND_ASSIGN AMP ADD_ASSIGN ]
-- On XOR_ASSIGN reduce production primary_expression -> CONSTANT
-- On SUB_ASSIGN reduce production primary_expression -> CONSTANT
-- On STAR reduce production primary_expression -> CONSTANT
-- On SLASH reduce production primary_expression -> CONSTANT
-- On SEMICOLON reduce production primary_expression -> CONSTANT
-- On RSQUARE reduce production primary_expression -> CONSTANT
-- On RPAR reduce production primary_expression -> CONSTANT
-- On RIGHT_OP reduce production primary_expression -> CONSTANT
-- On RIGHT_ASSIGN reduce production primary_expression -> CONSTANT
-- On RBRACE reduce production primary_expression -> CONSTANT
-- On QUESTION reduce production primary_expression -> CONSTANT
-- On PTR_OP reduce production primary_expression -> CONSTANT
-- On PLUS reduce production primary_expression -> CONSTANT
-- On PIPE reduce production primary_expression -> CONSTANT
-- On PERCENT reduce production primary_expression -> CONSTANT
-- On OR_OP reduce production primary_expression -> CONSTANT
-- On OR_ASSIGN reduce production primary_expression -> CONSTANT
-- On NE_OP reduce production primary_expression -> CONSTANT
-- On MUL_ASSIGN reduce production primary_expression -> CONSTANT
-- On MOD_ASSIGN reduce production primary_expression -> CONSTANT
-- On MINUS reduce production primary_expression -> CONSTANT
-- On LT reduce production primary_expression -> CONSTANT
-- On LSQUARE reduce production primary_expression -> CONSTANT
-- On LPAR reduce production primary_expression -> CONSTANT
-- On LE_OP reduce production primary_expression -> CONSTANT
-- On LEFT_OP reduce production primary_expression -> CONSTANT
-- On LEFT_ASSIGN reduce production primary_expression -> CONSTANT
-- On INC_OP reduce production primary_expression -> CONSTANT
-- On HAT reduce production primary_expression -> CONSTANT
-- On GT reduce production primary_expression -> CONSTANT
-- On GE_OP reduce production primary_expression -> CONSTANT
-- On EQ_OP reduce production primary_expression -> CONSTANT
-- On EQUAL reduce production primary_expression -> CONSTANT
-- On DOT reduce production primary_expression -> CONSTANT
-- On DIV_ASSIGN reduce production primary_expression -> CONSTANT
-- On DEC_OP reduce production primary_expression -> CONSTANT
-- On COMMA reduce production primary_expression -> CONSTANT
-- On COLON reduce production primary_expression -> CONSTANT
-- On ATTRIBUTE reduce production primary_expression -> CONSTANT
-- On AND_OP reduce production primary_expression -> CONSTANT
-- On AND_ASSIGN reduce production primary_expression -> CONSTANT
-- On AMP reduce production primary_expression -> CONSTANT
-- On ADD_ASSIGN reduce production primary_expression -> CONSTANT

State 45:
unary_operator -> AMP . [ TILDE STRING_LITERAL STAR SIZEOF PLUS MINUS LPAR INC_OP IDENTIFIER EXL DEC_OP CONSTANT AMP ]
-- On TILDE reduce production unary_operator -> AMP
-- On STRING_LITERAL reduce production unary_operator -> AMP
-- On STAR reduce production unary_operator -> AMP
-- On SIZEOF reduce production unary_operator -> AMP
-- On PLUS reduce production unary_operator -> AMP
-- On MINUS reduce production unary_operator -> AMP
-- On LPAR reduce production unary_operator -> AMP
-- On INC_OP reduce production unary_operator -> AMP
-- On IDENTIFIER reduce production unary_operator -> AMP
-- On EXL reduce production unary_operator -> AMP
-- On DEC_OP reduce production unary_operator -> AMP
-- On CONSTANT reduce production unary_operator -> AMP
-- On AMP reduce production unary_operator -> AMP

State 46:
unary_expression -> unary_operator . cast_expression [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RSQUARE RPAR RIGHT_OP RIGHT_ASSIGN RBRACE QUESTION PLUS PIPE PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LE_OP LEFT_OP LEFT_ASSIGN HAT GT GE_OP EQ_OP EQUAL DIV_ASSIGN COMMA COLON ATTRIBUTE AND_OP AND_ASSIGN AMP ADD_ASSIGN ]
-- On TILDE shift to state 28
-- On STRING_LITERAL shift to state 29
-- On STAR shift to state 30
-- On SIZEOF shift to state 31
-- On PLUS shift to state 32
-- On MINUS shift to state 33
-- On LPAR shift to state 36
-- On INC_OP shift to state 39
-- On IDENTIFIER shift to state 41
-- On EXL shift to state 42
-- On DEC_OP shift to state 43
-- On CONSTANT shift to state 44
-- On AMP shift to state 45
-- On unary_operator shift to state 46
-- On unary_expression shift to state 47
-- On primary_expression shift to state 48
-- On postfix_expression shift to state 49
-- On cast_expression shift to state 135

State 47:
cast_expression -> unary_expression . [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RSQUARE RPAR RIGHT_OP RIGHT_ASSIGN RBRACE QUESTION PLUS PIPE PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LE_OP LEFT_OP LEFT_ASSIGN HAT GT GE_OP EQ_OP EQUAL DIV_ASSIGN COMMA COLON ATTRIBUTE AND_OP AND_ASSIGN AMP ADD_ASSIGN ]
-- On XOR_ASSIGN reduce production cast_expression -> unary_expression
-- On SUB_ASSIGN reduce production cast_expression -> unary_expression
-- On STAR reduce production cast_expression -> unary_expression
-- On SLASH reduce production cast_expression -> unary_expression
-- On SEMICOLON reduce production cast_expression -> unary_expression
-- On RSQUARE reduce production cast_expression -> unary_expression
-- On RPAR reduce production cast_expression -> unary_expression
-- On RIGHT_OP reduce production cast_expression -> unary_expression
-- On RIGHT_ASSIGN reduce production cast_expression -> unary_expression
-- On RBRACE reduce production cast_expression -> unary_expression
-- On QUESTION reduce production cast_expression -> unary_expression
-- On PLUS reduce production cast_expression -> unary_expression
-- On PIPE reduce production cast_expression -> unary_expression
-- On PERCENT reduce production cast_expression -> unary_expression
-- On OR_OP reduce production cast_expression -> unary_expression
-- On OR_ASSIGN reduce production cast_expression -> unary_expression
-- On NE_OP reduce production cast_expression -> unary_expression
-- On MUL_ASSIGN reduce production cast_expression -> unary_expression
-- On MOD_ASSIGN reduce production cast_expression -> unary_expression
-- On MINUS reduce production cast_expression -> unary_expression
-- On LT reduce production cast_expression -> unary_expression
-- On LE_OP reduce production cast_expression -> unary_expression
-- On LEFT_OP reduce production cast_expression -> unary_expression
-- On LEFT_ASSIGN reduce production cast_expression -> unary_expression
-- On HAT reduce production cast_expression -> unary_expression
-- On GT reduce production cast_expression -> unary_expression
-- On GE_OP reduce production cast_expression -> unary_expression
-- On EQ_OP reduce production cast_expression -> unary_expression
-- On EQUAL reduce production cast_expression -> unary_expression
-- On DIV_ASSIGN reduce production cast_expression -> unary_expression
-- On COMMA reduce production cast_expression -> unary_expression
-- On COLON reduce production cast_expression -> unary_expression
-- On ATTRIBUTE reduce production cast_expression -> unary_expression
-- On AND_OP reduce production cast_expression -> unary_expression
-- On AND_ASSIGN reduce production cast_expression -> unary_expression
-- On AMP reduce production cast_expression -> unary_expression
-- On ADD_ASSIGN reduce production cast_expression -> unary_expression

State 48:
postfix_expression -> primary_expression . [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RSQUARE RPAR RIGHT_OP RIGHT_ASSIGN RBRACE QUESTION PTR_OP PLUS PIPE PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LSQUARE LPAR LE_OP LEFT_OP LEFT_ASSIGN INC_OP HAT GT GE_OP EQ_OP EQUAL DOT DIV_ASSIGN DEC_OP COMMA COLON ATTRIBUTE AND_OP AND_ASSIGN AMP ADD_ASSIGN ]
-- On XOR_ASSIGN reduce production postfix_expression -> primary_expression
-- On SUB_ASSIGN reduce production postfix_expression -> primary_expression
-- On STAR reduce production postfix_expression -> primary_expression
-- On SLASH reduce production postfix_expression -> primary_expression
-- On SEMICOLON reduce production postfix_expression -> primary_expression
-- On RSQUARE reduce production postfix_expression -> primary_expression
-- On RPAR reduce production postfix_expression -> primary_expression
-- On RIGHT_OP reduce production postfix_expression -> primary_expression
-- On RIGHT_ASSIGN reduce production postfix_expression -> primary_expression
-- On RBRACE reduce production postfix_expression -> primary_expression
-- On QUESTION reduce production postfix_expression -> primary_expression
-- On PTR_OP reduce production postfix_expression -> primary_expression
-- On PLUS reduce production postfix_expression -> primary_expression
-- On PIPE reduce production postfix_expression -> primary_expression
-- On PERCENT reduce production postfix_expression -> primary_expression
-- On OR_OP reduce production postfix_expression -> primary_expression
-- On OR_ASSIGN reduce production postfix_expression -> primary_expression
-- On NE_OP reduce production postfix_expression -> primary_expression
-- On MUL_ASSIGN reduce production postfix_expression -> primary_expression
-- On MOD_ASSIGN reduce production postfix_expression -> primary_expression
-- On MINUS reduce production postfix_expression -> primary_expression
-- On LT reduce production postfix_expression -> primary_expression
-- On LSQUARE reduce production postfix_expression -> primary_expression
-- On LPAR reduce production postfix_expression -> primary_expression
-- On LE_OP reduce production postfix_expression -> primary_expression
-- On LEFT_OP reduce production postfix_expression -> primary_expression
-- On LEFT_ASSIGN reduce production postfix_expression -> primary_expression
-- On INC_OP reduce production postfix_expression -> primary_expression
-- On HAT reduce production postfix_expression -> primary_expression
-- On GT reduce production postfix_expression -> primary_expression
-- On GE_OP reduce production postfix_expression -> primary_expression
-- On EQ_OP reduce production postfix_expression -> primary_expression
-- On EQUAL reduce production postfix_expression -> primary_expression
-- On DOT reduce production postfix_expression -> primary_expression
-- On DIV_ASSIGN reduce production postfix_expression -> primary_expression
-- On DEC_OP reduce production postfix_expression -> primary_expression
-- On COMMA reduce production postfix_expression -> primary_expression
-- On COLON reduce production postfix_expression -> primary_expression
-- On ATTRIBUTE reduce production postfix_expression -> primary_expression
-- On AND_OP reduce production postfix_expression -> primary_expression
-- On AND_ASSIGN reduce production postfix_expression -> primary_expression
-- On AMP reduce production postfix_expression -> primary_expression
-- On ADD_ASSIGN reduce production postfix_expression -> primary_expression

State 49:
postfix_expression -> postfix_expression . LSQUARE expression RSQUARE [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RSQUARE RPAR RIGHT_OP RIGHT_ASSIGN RBRACE QUESTION PTR_OP PLUS PIPE PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LSQUARE LPAR LE_OP LEFT_OP LEFT_ASSIGN INC_OP HAT GT GE_OP EQ_OP EQUAL DOT DIV_ASSIGN DEC_OP COMMA COLON ATTRIBUTE AND_OP AND_ASSIGN AMP ADD_ASSIGN ]
postfix_expression -> postfix_expression . LPAR RPAR [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RSQUARE RPAR RIGHT_OP RIGHT_ASSIGN RBRACE QUESTION PTR_OP PLUS PIPE PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LSQUARE LPAR LE_OP LEFT_OP LEFT_ASSIGN INC_OP HAT GT GE_OP EQ_OP EQUAL DOT DIV_ASSIGN DEC_OP COMMA COLON ATTRIBUTE AND_OP AND_ASSIGN AMP ADD_ASSIGN ]
postfix_expression -> postfix_expression . LPAR argument_expression_list RPAR [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RSQUARE RPAR RIGHT_OP RIGHT_ASSIGN RBRACE QUESTION PTR_OP PLUS PIPE PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LSQUARE LPAR LE_OP LEFT_OP LEFT_ASSIGN INC_OP HAT GT GE_OP EQ_OP EQUAL DOT DIV_ASSIGN DEC_OP COMMA COLON ATTRIBUTE AND_OP AND_ASSIGN AMP ADD_ASSIGN ]
postfix_expression -> postfix_expression . DOT identifier [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RSQUARE RPAR RIGHT_OP RIGHT_ASSIGN RBRACE QUESTION PTR_OP PLUS PIPE PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LSQUARE LPAR LE_OP LEFT_OP LEFT_ASSIGN INC_OP HAT GT GE_OP EQ_OP EQUAL DOT DIV_ASSIGN DEC_OP COMMA COLON ATTRIBUTE AND_OP AND_ASSIGN AMP ADD_ASSIGN ]
postfix_expression -> postfix_expression . PTR_OP identifier [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RSQUARE RPAR RIGHT_OP RIGHT_ASSIGN RBRACE QUESTION PTR_OP PLUS PIPE PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LSQUARE LPAR LE_OP LEFT_OP LEFT_ASSIGN INC_OP HAT GT GE_OP EQ_OP EQUAL DOT DIV_ASSIGN DEC_OP COMMA COLON ATTRIBUTE AND_OP AND_ASSIGN AMP ADD_ASSIGN ]
postfix_expression -> postfix_expression . INC_OP [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RSQUARE RPAR RIGHT_OP RIGHT_ASSIGN RBRACE QUESTION PTR_OP PLUS PIPE PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LSQUARE LPAR LE_OP LEFT_OP LEFT_ASSIGN INC_OP HAT GT GE_OP EQ_OP EQUAL DOT DIV_ASSIGN DEC_OP COMMA COLON ATTRIBUTE AND_OP AND_ASSIGN AMP ADD_ASSIGN ]
postfix_expression -> postfix_expression . DEC_OP [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RSQUARE RPAR RIGHT_OP RIGHT_ASSIGN RBRACE QUESTION PTR_OP PLUS PIPE PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LSQUARE LPAR LE_OP LEFT_OP LEFT_ASSIGN INC_OP HAT GT GE_OP EQ_OP EQUAL DOT DIV_ASSIGN DEC_OP COMMA COLON ATTRIBUTE AND_OP AND_ASSIGN AMP ADD_ASSIGN ]
unary_expression -> postfix_expression . [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RSQUARE RPAR RIGHT_OP RIGHT_ASSIGN RBRACE QUESTION PLUS PIPE PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LE_OP LEFT_OP LEFT_ASSIGN HAT GT GE_OP EQ_OP EQUAL DIV_ASSIGN COMMA COLON ATTRIBUTE AND_OP AND_ASSIGN AMP ADD_ASSIGN ]
-- On PTR_OP shift to state 50
-- On LSQUARE shift to state 52
-- On LPAR shift to state 124
-- On INC_OP shift to state 131
-- On DOT shift to state 132
-- On DEC_OP shift to state 134
-- On XOR_ASSIGN reduce production unary_expression -> postfix_expression
-- On SUB_ASSIGN reduce production unary_expression -> postfix_expression
-- On STAR reduce production unary_expression -> postfix_expression
-- On SLASH reduce production unary_expression -> postfix_expression
-- On SEMICOLON reduce production unary_expression -> postfix_expression
-- On RSQUARE reduce production unary_expression -> postfix_expression
-- On RPAR reduce production unary_expression -> postfix_expression
-- On RIGHT_OP reduce production unary_expression -> postfix_expression
-- On RIGHT_ASSIGN reduce production unary_expression -> postfix_expression
-- On RBRACE reduce production unary_expression -> postfix_expression
-- On QUESTION reduce production unary_expression -> postfix_expression
-- On PLUS reduce production unary_expression -> postfix_expression
-- On PIPE reduce production unary_expression -> postfix_expression
-- On PERCENT reduce production unary_expression -> postfix_expression
-- On OR_OP reduce production unary_expression -> postfix_expression
-- On OR_ASSIGN reduce production unary_expression -> postfix_expression
-- On NE_OP reduce production unary_expression -> postfix_expression
-- On MUL_ASSIGN reduce production unary_expression -> postfix_expression
-- On MOD_ASSIGN reduce production unary_expression -> postfix_expression
-- On MINUS reduce production unary_expression -> postfix_expression
-- On LT reduce production unary_expression -> postfix_expression
-- On LE_OP reduce production unary_expression -> postfix_expression
-- On LEFT_OP reduce production unary_expression -> postfix_expression
-- On LEFT_ASSIGN reduce production unary_expression -> postfix_expression
-- On HAT reduce production unary_expression -> postfix_expression
-- On GT reduce production unary_expression -> postfix_expression
-- On GE_OP reduce production unary_expression -> postfix_expression
-- On EQ_OP reduce production unary_expression -> postfix_expression
-- On EQUAL reduce production unary_expression -> postfix_expression
-- On DIV_ASSIGN reduce production unary_expression -> postfix_expression
-- On COMMA reduce production unary_expression -> postfix_expression
-- On COLON reduce production unary_expression -> postfix_expression
-- On ATTRIBUTE reduce production unary_expression -> postfix_expression
-- On AND_OP reduce production unary_expression -> postfix_expression
-- On AND_ASSIGN reduce production unary_expression -> postfix_expression
-- On AMP reduce production unary_expression -> postfix_expression
-- On ADD_ASSIGN reduce production unary_expression -> postfix_expression

State 50:
postfix_expression -> postfix_expression PTR_OP . identifier [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RSQUARE RPAR RIGHT_OP RIGHT_ASSIGN RBRACE QUESTION PTR_OP PLUS PIPE PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LSQUARE LPAR LE_OP LEFT_OP LEFT_ASSIGN INC_OP HAT GT GE_OP EQ_OP EQUAL DOT DIV_ASSIGN DEC_OP COMMA COLON ATTRIBUTE AND_OP AND_ASSIGN AMP ADD_ASSIGN ]
-- On TYPE_NAME shift to state 22
-- On IDENTIFIER shift to state 23
-- On identifier shift to state 51

State 51:
postfix_expression -> postfix_expression PTR_OP identifier . [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RSQUARE RPAR RIGHT_OP RIGHT_ASSIGN RBRACE QUESTION PTR_OP PLUS PIPE PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LSQUARE LPAR LE_OP LEFT_OP LEFT_ASSIGN INC_OP HAT GT GE_OP EQ_OP EQUAL DOT DIV_ASSIGN DEC_OP COMMA COLON ATTRIBUTE AND_OP AND_ASSIGN AMP ADD_ASSIGN ]
-- On XOR_ASSIGN reduce production postfix_expression -> postfix_expression PTR_OP identifier
-- On SUB_ASSIGN reduce production postfix_expression -> postfix_expression PTR_OP identifier
-- On STAR reduce production postfix_expression -> postfix_expression PTR_OP identifier
-- On SLASH reduce production postfix_expression -> postfix_expression PTR_OP identifier
-- On SEMICOLON reduce production postfix_expression -> postfix_expression PTR_OP identifier
-- On RSQUARE reduce production postfix_expression -> postfix_expression PTR_OP identifier
-- On RPAR reduce production postfix_expression -> postfix_expression PTR_OP identifier
-- On RIGHT_OP reduce production postfix_expression -> postfix_expression PTR_OP identifier
-- On RIGHT_ASSIGN reduce production postfix_expression -> postfix_expression PTR_OP identifier
-- On RBRACE reduce production postfix_expression -> postfix_expression PTR_OP identifier
-- On QUESTION reduce production postfix_expression -> postfix_expression PTR_OP identifier
-- On PTR_OP reduce production postfix_expression -> postfix_expression PTR_OP identifier
-- On PLUS reduce production postfix_expression -> postfix_expression PTR_OP identifier
-- On PIPE reduce production postfix_expression -> postfix_expression PTR_OP identifier
-- On PERCENT reduce production postfix_expression -> postfix_expression PTR_OP identifier
-- On OR_OP reduce production postfix_expression -> postfix_expression PTR_OP identifier
-- On OR_ASSIGN reduce production postfix_expression -> postfix_expression PTR_OP identifier
-- On NE_OP reduce production postfix_expression -> postfix_expression PTR_OP identifier
-- On MUL_ASSIGN reduce production postfix_expression -> postfix_expression PTR_OP identifier
-- On MOD_ASSIGN reduce production postfix_expression -> postfix_expression PTR_OP identifier
-- On MINUS reduce production postfix_expression -> postfix_expression PTR_OP identifier
-- On LT reduce production postfix_expression -> postfix_expression PTR_OP identifier
-- On LSQUARE reduce production postfix_expression -> postfix_expression PTR_OP identifier
-- On LPAR reduce production postfix_expression -> postfix_expression PTR_OP identifier
-- On LE_OP reduce production postfix_expression -> postfix_expression PTR_OP identifier
-- On LEFT_OP reduce production postfix_expression -> postfix_expression PTR_OP identifier
-- On LEFT_ASSIGN reduce production postfix_expression -> postfix_expression PTR_OP identifier
-- On INC_OP reduce production postfix_expression -> postfix_expression PTR_OP identifier
-- On HAT reduce production postfix_expression -> postfix_expression PTR_OP identifier
-- On GT reduce production postfix_expression -> postfix_expression PTR_OP identifier
-- On GE_OP reduce production postfix_expression -> postfix_expression PTR_OP identifier
-- On EQ_OP reduce production postfix_expression -> postfix_expression PTR_OP identifier
-- On EQUAL reduce production postfix_expression -> postfix_expression PTR_OP identifier
-- On DOT reduce production postfix_expression -> postfix_expression PTR_OP identifier
-- On DIV_ASSIGN reduce production postfix_expression -> postfix_expression PTR_OP identifier
-- On DEC_OP reduce production postfix_expression -> postfix_expression PTR_OP identifier
-- On COMMA reduce production postfix_expression -> postfix_expression PTR_OP identifier
-- On COLON reduce production postfix_expression -> postfix_expression PTR_OP identifier
-- On ATTRIBUTE reduce production postfix_expression -> postfix_expression PTR_OP identifier
-- On AND_OP reduce production postfix_expression -> postfix_expression PTR_OP identifier
-- On AND_ASSIGN reduce production postfix_expression -> postfix_expression PTR_OP identifier
-- On AMP reduce production postfix_expression -> postfix_expression PTR_OP identifier
-- On ADD_ASSIGN reduce production postfix_expression -> postfix_expression PTR_OP identifier

State 52:
postfix_expression -> postfix_expression LSQUARE . expression RSQUARE [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RSQUARE RPAR RIGHT_OP RIGHT_ASSIGN RBRACE QUESTION PTR_OP PLUS PIPE PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LSQUARE LPAR LE_OP LEFT_OP LEFT_ASSIGN INC_OP HAT GT GE_OP EQ_OP EQUAL DOT DIV_ASSIGN DEC_OP COMMA COLON ATTRIBUTE AND_OP AND_ASSIGN AMP ADD_ASSIGN ]
-- On TILDE shift to state 28
-- On STRING_LITERAL shift to state 29
-- On STAR shift to state 30
-- On SIZEOF shift to state 31
-- On PLUS shift to state 32
-- On MINUS shift to state 33
-- On LPAR shift to state 36
-- On INC_OP shift to state 39
-- On IDENTIFIER shift to state 41
-- On EXL shift to state 42
-- On DEC_OP shift to state 43
-- On CONSTANT shift to state 44
-- On AMP shift to state 45
-- On unary_operator shift to state 46
-- On unary_expression shift to state 53
-- On shift_expression shift to state 66
-- On relational_expression shift to state 83
-- On primary_expression shift to state 48
-- On postfix_expression shift to state 49
-- On multiplicative_expression shift to state 68
-- On logical_or_expression shift to state 93
-- On logical_and_expression shift to state 95
-- On inclusive_or_expression shift to state 111
-- On expression shift to state 122
-- On exclusive_or_expression shift to state 110
-- On equality_expression shift to state 101
-- On conditional_expression shift to state 114
-- On cast_expression shift to state 75
-- On assignment_expression shift to state 118
-- On and_expression shift to state 109
-- On additive_expression shift to state 86

State 53:
assignment_expression -> unary_expression . assignment_operator assignment_expression [ SEMICOLON RSQUARE RPAR RBRACE COMMA COLON ATTRIBUTE ]
cast_expression -> unary_expression . [ STAR SLASH SEMICOLON RSQUARE RPAR RIGHT_OP RBRACE QUESTION PLUS PIPE PERCENT OR_OP NE_OP MINUS LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
-- On XOR_ASSIGN shift to state 54
-- On SUB_ASSIGN shift to state 55
-- On RIGHT_ASSIGN shift to state 56
-- On OR_ASSIGN shift to state 57
-- On MUL_ASSIGN shift to state 58
-- On MOD_ASSIGN shift to state 59
-- On LEFT_ASSIGN shift to state 60
-- On EQUAL shift to state 61
-- On DIV_ASSIGN shift to state 62
-- On AND_ASSIGN shift to state 63
-- On ADD_ASSIGN shift to state 64
-- On assignment_operator shift to state 65
-- On STAR reduce production cast_expression -> unary_expression
-- On SLASH reduce production cast_expression -> unary_expression
-- On SEMICOLON reduce production cast_expression -> unary_expression
-- On RSQUARE reduce production cast_expression -> unary_expression
-- On RPAR reduce production cast_expression -> unary_expression
-- On RIGHT_OP reduce production cast_expression -> unary_expression
-- On RBRACE reduce production cast_expression -> unary_expression
-- On QUESTION reduce production cast_expression -> unary_expression
-- On PLUS reduce production cast_expression -> unary_expression
-- On PIPE reduce production cast_expression -> unary_expression
-- On PERCENT reduce production cast_expression -> unary_expression
-- On OR_OP reduce production cast_expression -> unary_expression
-- On NE_OP reduce production cast_expression -> unary_expression
-- On MINUS reduce production cast_expression -> unary_expression
-- On LT reduce production cast_expression -> unary_expression
-- On LE_OP reduce production cast_expression -> unary_expression
-- On LEFT_OP reduce production cast_expression -> unary_expression
-- On HAT reduce production cast_expression -> unary_expression
-- On GT reduce production cast_expression -> unary_expression
-- On GE_OP reduce production cast_expression -> unary_expression
-- On EQ_OP reduce production cast_expression -> unary_expression
-- On COMMA reduce production cast_expression -> unary_expression
-- On COLON reduce production cast_expression -> unary_expression
-- On ATTRIBUTE reduce production cast_expression -> unary_expression
-- On AND_OP reduce production cast_expression -> unary_expression
-- On AMP reduce production cast_expression -> unary_expression

State 54:
assignment_operator -> XOR_ASSIGN . [ TILDE STRING_LITERAL STAR SIZEOF PLUS MINUS LPAR INC_OP IDENTIFIER EXL DEC_OP CONSTANT AMP ]
-- On TILDE reduce production assignment_operator -> XOR_ASSIGN
-- On STRING_LITERAL reduce production assignment_operator -> XOR_ASSIGN
-- On STAR reduce production assignment_operator -> XOR_ASSIGN
-- On SIZEOF reduce production assignment_operator -> XOR_ASSIGN
-- On PLUS reduce production assignment_operator -> XOR_ASSIGN
-- On MINUS reduce production assignment_operator -> XOR_ASSIGN
-- On LPAR reduce production assignment_operator -> XOR_ASSIGN
-- On INC_OP reduce production assignment_operator -> XOR_ASSIGN
-- On IDENTIFIER reduce production assignment_operator -> XOR_ASSIGN
-- On EXL reduce production assignment_operator -> XOR_ASSIGN
-- On DEC_OP reduce production assignment_operator -> XOR_ASSIGN
-- On CONSTANT reduce production assignment_operator -> XOR_ASSIGN
-- On AMP reduce production assignment_operator -> XOR_ASSIGN

State 55:
assignment_operator -> SUB_ASSIGN . [ TILDE STRING_LITERAL STAR SIZEOF PLUS MINUS LPAR INC_OP IDENTIFIER EXL DEC_OP CONSTANT AMP ]
-- On TILDE reduce production assignment_operator -> SUB_ASSIGN
-- On STRING_LITERAL reduce production assignment_operator -> SUB_ASSIGN
-- On STAR reduce production assignment_operator -> SUB_ASSIGN
-- On SIZEOF reduce production assignment_operator -> SUB_ASSIGN
-- On PLUS reduce production assignment_operator -> SUB_ASSIGN
-- On MINUS reduce production assignment_operator -> SUB_ASSIGN
-- On LPAR reduce production assignment_operator -> SUB_ASSIGN
-- On INC_OP reduce production assignment_operator -> SUB_ASSIGN
-- On IDENTIFIER reduce production assignment_operator -> SUB_ASSIGN
-- On EXL reduce production assignment_operator -> SUB_ASSIGN
-- On DEC_OP reduce production assignment_operator -> SUB_ASSIGN
-- On CONSTANT reduce production assignment_operator -> SUB_ASSIGN
-- On AMP reduce production assignment_operator -> SUB_ASSIGN

State 56:
assignment_operator -> RIGHT_ASSIGN . [ TILDE STRING_LITERAL STAR SIZEOF PLUS MINUS LPAR INC_OP IDENTIFIER EXL DEC_OP CONSTANT AMP ]
-- On TILDE reduce production assignment_operator -> RIGHT_ASSIGN
-- On STRING_LITERAL reduce production assignment_operator -> RIGHT_ASSIGN
-- On STAR reduce production assignment_operator -> RIGHT_ASSIGN
-- On SIZEOF reduce production assignment_operator -> RIGHT_ASSIGN
-- On PLUS reduce production assignment_operator -> RIGHT_ASSIGN
-- On MINUS reduce production assignment_operator -> RIGHT_ASSIGN
-- On LPAR reduce production assignment_operator -> RIGHT_ASSIGN
-- On INC_OP reduce production assignment_operator -> RIGHT_ASSIGN
-- On IDENTIFIER reduce production assignment_operator -> RIGHT_ASSIGN
-- On EXL reduce production assignment_operator -> RIGHT_ASSIGN
-- On DEC_OP reduce production assignment_operator -> RIGHT_ASSIGN
-- On CONSTANT reduce production assignment_operator -> RIGHT_ASSIGN
-- On AMP reduce production assignment_operator -> RIGHT_ASSIGN

State 57:
assignment_operator -> OR_ASSIGN . [ TILDE STRING_LITERAL STAR SIZEOF PLUS MINUS LPAR INC_OP IDENTIFIER EXL DEC_OP CONSTANT AMP ]
-- On TILDE reduce production assignment_operator -> OR_ASSIGN
-- On STRING_LITERAL reduce production assignment_operator -> OR_ASSIGN
-- On STAR reduce production assignment_operator -> OR_ASSIGN
-- On SIZEOF reduce production assignment_operator -> OR_ASSIGN
-- On PLUS reduce production assignment_operator -> OR_ASSIGN
-- On MINUS reduce production assignment_operator -> OR_ASSIGN
-- On LPAR reduce production assignment_operator -> OR_ASSIGN
-- On INC_OP reduce production assignment_operator -> OR_ASSIGN
-- On IDENTIFIER reduce production assignment_operator -> OR_ASSIGN
-- On EXL reduce production assignment_operator -> OR_ASSIGN
-- On DEC_OP reduce production assignment_operator -> OR_ASSIGN
-- On CONSTANT reduce production assignment_operator -> OR_ASSIGN
-- On AMP reduce production assignment_operator -> OR_ASSIGN

State 58:
assignment_operator -> MUL_ASSIGN . [ TILDE STRING_LITERAL STAR SIZEOF PLUS MINUS LPAR INC_OP IDENTIFIER EXL DEC_OP CONSTANT AMP ]
-- On TILDE reduce production assignment_operator -> MUL_ASSIGN
-- On STRING_LITERAL reduce production assignment_operator -> MUL_ASSIGN
-- On STAR reduce production assignment_operator -> MUL_ASSIGN
-- On SIZEOF reduce production assignment_operator -> MUL_ASSIGN
-- On PLUS reduce production assignment_operator -> MUL_ASSIGN
-- On MINUS reduce production assignment_operator -> MUL_ASSIGN
-- On LPAR reduce production assignment_operator -> MUL_ASSIGN
-- On INC_OP reduce production assignment_operator -> MUL_ASSIGN
-- On IDENTIFIER reduce production assignment_operator -> MUL_ASSIGN
-- On EXL reduce production assignment_operator -> MUL_ASSIGN
-- On DEC_OP reduce production assignment_operator -> MUL_ASSIGN
-- On CONSTANT reduce production assignment_operator -> MUL_ASSIGN
-- On AMP reduce production assignment_operator -> MUL_ASSIGN

State 59:
assignment_operator -> MOD_ASSIGN . [ TILDE STRING_LITERAL STAR SIZEOF PLUS MINUS LPAR INC_OP IDENTIFIER EXL DEC_OP CONSTANT AMP ]
-- On TILDE reduce production assignment_operator -> MOD_ASSIGN
-- On STRING_LITERAL reduce production assignment_operator -> MOD_ASSIGN
-- On STAR reduce production assignment_operator -> MOD_ASSIGN
-- On SIZEOF reduce production assignment_operator -> MOD_ASSIGN
-- On PLUS reduce production assignment_operator -> MOD_ASSIGN
-- On MINUS reduce production assignment_operator -> MOD_ASSIGN
-- On LPAR reduce production assignment_operator -> MOD_ASSIGN
-- On INC_OP reduce production assignment_operator -> MOD_ASSIGN
-- On IDENTIFIER reduce production assignment_operator -> MOD_ASSIGN
-- On EXL reduce production assignment_operator -> MOD_ASSIGN
-- On DEC_OP reduce production assignment_operator -> MOD_ASSIGN
-- On CONSTANT reduce production assignment_operator -> MOD_ASSIGN
-- On AMP reduce production assignment_operator -> MOD_ASSIGN

State 60:
assignment_operator -> LEFT_ASSIGN . [ TILDE STRING_LITERAL STAR SIZEOF PLUS MINUS LPAR INC_OP IDENTIFIER EXL DEC_OP CONSTANT AMP ]
-- On TILDE reduce production assignment_operator -> LEFT_ASSIGN
-- On STRING_LITERAL reduce production assignment_operator -> LEFT_ASSIGN
-- On STAR reduce production assignment_operator -> LEFT_ASSIGN
-- On SIZEOF reduce production assignment_operator -> LEFT_ASSIGN
-- On PLUS reduce production assignment_operator -> LEFT_ASSIGN
-- On MINUS reduce production assignment_operator -> LEFT_ASSIGN
-- On LPAR reduce production assignment_operator -> LEFT_ASSIGN
-- On INC_OP reduce production assignment_operator -> LEFT_ASSIGN
-- On IDENTIFIER reduce production assignment_operator -> LEFT_ASSIGN
-- On EXL reduce production assignment_operator -> LEFT_ASSIGN
-- On DEC_OP reduce production assignment_operator -> LEFT_ASSIGN
-- On CONSTANT reduce production assignment_operator -> LEFT_ASSIGN
-- On AMP reduce production assignment_operator -> LEFT_ASSIGN

State 61:
assignment_operator -> EQUAL . [ TILDE STRING_LITERAL STAR SIZEOF PLUS MINUS LPAR INC_OP IDENTIFIER EXL DEC_OP CONSTANT AMP ]
-- On TILDE reduce production assignment_operator -> EQUAL
-- On STRING_LITERAL reduce production assignment_operator -> EQUAL
-- On STAR reduce production assignment_operator -> EQUAL
-- On SIZEOF reduce production assignment_operator -> EQUAL
-- On PLUS reduce production assignment_operator -> EQUAL
-- On MINUS reduce production assignment_operator -> EQUAL
-- On LPAR reduce production assignment_operator -> EQUAL
-- On INC_OP reduce production assignment_operator -> EQUAL
-- On IDENTIFIER reduce production assignment_operator -> EQUAL
-- On EXL reduce production assignment_operator -> EQUAL
-- On DEC_OP reduce production assignment_operator -> EQUAL
-- On CONSTANT reduce production assignment_operator -> EQUAL
-- On AMP reduce production assignment_operator -> EQUAL

State 62:
assignment_operator -> DIV_ASSIGN . [ TILDE STRING_LITERAL STAR SIZEOF PLUS MINUS LPAR INC_OP IDENTIFIER EXL DEC_OP CONSTANT AMP ]
-- On TILDE reduce production assignment_operator -> DIV_ASSIGN
-- On STRING_LITERAL reduce production assignment_operator -> DIV_ASSIGN
-- On STAR reduce production assignment_operator -> DIV_ASSIGN
-- On SIZEOF reduce production assignment_operator -> DIV_ASSIGN
-- On PLUS reduce production assignment_operator -> DIV_ASSIGN
-- On MINUS reduce production assignment_operator -> DIV_ASSIGN
-- On LPAR reduce production assignment_operator -> DIV_ASSIGN
-- On INC_OP reduce production assignment_operator -> DIV_ASSIGN
-- On IDENTIFIER reduce production assignment_operator -> DIV_ASSIGN
-- On EXL reduce production assignment_operator -> DIV_ASSIGN
-- On DEC_OP reduce production assignment_operator -> DIV_ASSIGN
-- On CONSTANT reduce production assignment_operator -> DIV_ASSIGN
-- On AMP reduce production assignment_operator -> DIV_ASSIGN

State 63:
assignment_operator -> AND_ASSIGN . [ TILDE STRING_LITERAL STAR SIZEOF PLUS MINUS LPAR INC_OP IDENTIFIER EXL DEC_OP CONSTANT AMP ]
-- On TILDE reduce production assignment_operator -> AND_ASSIGN
-- On STRING_LITERAL reduce production assignment_operator -> AND_ASSIGN
-- On STAR reduce production assignment_operator -> AND_ASSIGN
-- On SIZEOF reduce production assignment_operator -> AND_ASSIGN
-- On PLUS reduce production assignment_operator -> AND_ASSIGN
-- On MINUS reduce production assignment_operator -> AND_ASSIGN
-- On LPAR reduce production assignment_operator -> AND_ASSIGN
-- On INC_OP reduce production assignment_operator -> AND_ASSIGN
-- On IDENTIFIER reduce production assignment_operator -> AND_ASSIGN
-- On EXL reduce production assignment_operator -> AND_ASSIGN
-- On DEC_OP reduce production assignment_operator -> AND_ASSIGN
-- On CONSTANT reduce production assignment_operator -> AND_ASSIGN
-- On AMP reduce production assignment_operator -> AND_ASSIGN

State 64:
assignment_operator -> ADD_ASSIGN . [ TILDE STRING_LITERAL STAR SIZEOF PLUS MINUS LPAR INC_OP IDENTIFIER EXL DEC_OP CONSTANT AMP ]
-- On TILDE reduce production assignment_operator -> ADD_ASSIGN
-- On STRING_LITERAL reduce production assignment_operator -> ADD_ASSIGN
-- On STAR reduce production assignment_operator -> ADD_ASSIGN
-- On SIZEOF reduce production assignment_operator -> ADD_ASSIGN
-- On PLUS reduce production assignment_operator -> ADD_ASSIGN
-- On MINUS reduce production assignment_operator -> ADD_ASSIGN
-- On LPAR reduce production assignment_operator -> ADD_ASSIGN
-- On INC_OP reduce production assignment_operator -> ADD_ASSIGN
-- On IDENTIFIER reduce production assignment_operator -> ADD_ASSIGN
-- On EXL reduce production assignment_operator -> ADD_ASSIGN
-- On DEC_OP reduce production assignment_operator -> ADD_ASSIGN
-- On CONSTANT reduce production assignment_operator -> ADD_ASSIGN
-- On AMP reduce production assignment_operator -> ADD_ASSIGN

State 65:
assignment_expression -> unary_expression assignment_operator . assignment_expression [ SEMICOLON RSQUARE RPAR RBRACE COMMA COLON ATTRIBUTE ]
-- On TILDE shift to state 28
-- On STRING_LITERAL shift to state 29
-- On STAR shift to state 30
-- On SIZEOF shift to state 31
-- On PLUS shift to state 32
-- On MINUS shift to state 33
-- On LPAR shift to state 36
-- On INC_OP shift to state 39
-- On IDENTIFIER shift to state 41
-- On EXL shift to state 42
-- On DEC_OP shift to state 43
-- On CONSTANT shift to state 44
-- On AMP shift to state 45
-- On unary_operator shift to state 46
-- On unary_expression shift to state 53
-- On shift_expression shift to state 66
-- On relational_expression shift to state 83
-- On primary_expression shift to state 48
-- On postfix_expression shift to state 49
-- On multiplicative_expression shift to state 68
-- On logical_or_expression shift to state 93
-- On logical_and_expression shift to state 95
-- On inclusive_or_expression shift to state 111
-- On exclusive_or_expression shift to state 110
-- On equality_expression shift to state 101
-- On conditional_expression shift to state 114
-- On cast_expression shift to state 75
-- On assignment_expression shift to state 121
-- On and_expression shift to state 109
-- On additive_expression shift to state 86

State 66:
relational_expression -> shift_expression . [ SEMICOLON RSQUARE RPAR RBRACE QUESTION PIPE OR_OP NE_OP LT LE_OP HAT GT GE_OP EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
shift_expression -> shift_expression . LEFT_OP additive_expression [ SEMICOLON RSQUARE RPAR RIGHT_OP RBRACE QUESTION PIPE OR_OP NE_OP LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
shift_expression -> shift_expression . RIGHT_OP additive_expression [ SEMICOLON RSQUARE RPAR RIGHT_OP RBRACE QUESTION PIPE OR_OP NE_OP LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
-- On RIGHT_OP shift to state 67
-- On LEFT_OP shift to state 81
-- On SEMICOLON reduce production relational_expression -> shift_expression
-- On RSQUARE reduce production relational_expression -> shift_expression
-- On RPAR reduce production relational_expression -> shift_expression
-- On RBRACE reduce production relational_expression -> shift_expression
-- On QUESTION reduce production relational_expression -> shift_expression
-- On PIPE reduce production relational_expression -> shift_expression
-- On OR_OP reduce production relational_expression -> shift_expression
-- On NE_OP reduce production relational_expression -> shift_expression
-- On LT reduce production relational_expression -> shift_expression
-- On LE_OP reduce production relational_expression -> shift_expression
-- On HAT reduce production relational_expression -> shift_expression
-- On GT reduce production relational_expression -> shift_expression
-- On GE_OP reduce production relational_expression -> shift_expression
-- On EQ_OP reduce production relational_expression -> shift_expression
-- On COMMA reduce production relational_expression -> shift_expression
-- On COLON reduce production relational_expression -> shift_expression
-- On ATTRIBUTE reduce production relational_expression -> shift_expression
-- On AND_OP reduce production relational_expression -> shift_expression
-- On AMP reduce production relational_expression -> shift_expression

State 67:
shift_expression -> shift_expression RIGHT_OP . additive_expression [ SEMICOLON RSQUARE RPAR RIGHT_OP RBRACE QUESTION PIPE OR_OP NE_OP LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
-- On TILDE shift to state 28
-- On STRING_LITERAL shift to state 29
-- On STAR shift to state 30
-- On SIZEOF shift to state 31
-- On PLUS shift to state 32
-- On MINUS shift to state 33
-- On LPAR shift to state 36
-- On INC_OP shift to state 39
-- On IDENTIFIER shift to state 41
-- On EXL shift to state 42
-- On DEC_OP shift to state 43
-- On CONSTANT shift to state 44
-- On AMP shift to state 45
-- On unary_operator shift to state 46
-- On unary_expression shift to state 47
-- On primary_expression shift to state 48
-- On postfix_expression shift to state 49
-- On multiplicative_expression shift to state 68
-- On cast_expression shift to state 75
-- On additive_expression shift to state 76

State 68:
additive_expression -> multiplicative_expression . [ SEMICOLON RSQUARE RPAR RIGHT_OP RBRACE QUESTION PLUS PIPE OR_OP NE_OP MINUS LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
multiplicative_expression -> multiplicative_expression . STAR cast_expression [ STAR SLASH SEMICOLON RSQUARE RPAR RIGHT_OP RBRACE QUESTION PLUS PIPE PERCENT OR_OP NE_OP MINUS LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
multiplicative_expression -> multiplicative_expression . SLASH cast_expression [ STAR SLASH SEMICOLON RSQUARE RPAR RIGHT_OP RBRACE QUESTION PLUS PIPE PERCENT OR_OP NE_OP MINUS LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
multiplicative_expression -> multiplicative_expression . PERCENT cast_expression [ STAR SLASH SEMICOLON RSQUARE RPAR RIGHT_OP RBRACE QUESTION PLUS PIPE PERCENT OR_OP NE_OP MINUS LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
-- On STAR shift to state 69
-- On SLASH shift to state 71
-- On PERCENT shift to state 73
-- On SEMICOLON reduce production additive_expression -> multiplicative_expression
-- On RSQUARE reduce production additive_expression -> multiplicative_expression
-- On RPAR reduce production additive_expression -> multiplicative_expression
-- On RIGHT_OP reduce production additive_expression -> multiplicative_expression
-- On RBRACE reduce production additive_expression -> multiplicative_expression
-- On QUESTION reduce production additive_expression -> multiplicative_expression
-- On PLUS reduce production additive_expression -> multiplicative_expression
-- On PIPE reduce production additive_expression -> multiplicative_expression
-- On OR_OP reduce production additive_expression -> multiplicative_expression
-- On NE_OP reduce production additive_expression -> multiplicative_expression
-- On MINUS reduce production additive_expression -> multiplicative_expression
-- On LT reduce production additive_expression -> multiplicative_expression
-- On LE_OP reduce production additive_expression -> multiplicative_expression
-- On LEFT_OP reduce production additive_expression -> multiplicative_expression
-- On HAT reduce production additive_expression -> multiplicative_expression
-- On GT reduce production additive_expression -> multiplicative_expression
-- On GE_OP reduce production additive_expression -> multiplicative_expression
-- On EQ_OP reduce production additive_expression -> multiplicative_expression
-- On COMMA reduce production additive_expression -> multiplicative_expression
-- On COLON reduce production additive_expression -> multiplicative_expression
-- On ATTRIBUTE reduce production additive_expression -> multiplicative_expression
-- On AND_OP reduce production additive_expression -> multiplicative_expression
-- On AMP reduce production additive_expression -> multiplicative_expression

State 69:
multiplicative_expression -> multiplicative_expression STAR . cast_expression [ STAR SLASH SEMICOLON RSQUARE RPAR RIGHT_OP RBRACE QUESTION PLUS PIPE PERCENT OR_OP NE_OP MINUS LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
-- On TILDE shift to state 28
-- On STRING_LITERAL shift to state 29
-- On STAR shift to state 30
-- On SIZEOF shift to state 31
-- On PLUS shift to state 32
-- On MINUS shift to state 33
-- On LPAR shift to state 36
-- On INC_OP shift to state 39
-- On IDENTIFIER shift to state 41
-- On EXL shift to state 42
-- On DEC_OP shift to state 43
-- On CONSTANT shift to state 44
-- On AMP shift to state 45
-- On unary_operator shift to state 46
-- On unary_expression shift to state 47
-- On primary_expression shift to state 48
-- On postfix_expression shift to state 49
-- On cast_expression shift to state 70

State 70:
multiplicative_expression -> multiplicative_expression STAR cast_expression . [ STAR SLASH SEMICOLON RSQUARE RPAR RIGHT_OP RBRACE QUESTION PLUS PIPE PERCENT OR_OP NE_OP MINUS LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
-- On STAR reduce production multiplicative_expression -> multiplicative_expression STAR cast_expression
-- On SLASH reduce production multiplicative_expression -> multiplicative_expression STAR cast_expression
-- On SEMICOLON reduce production multiplicative_expression -> multiplicative_expression STAR cast_expression
-- On RSQUARE reduce production multiplicative_expression -> multiplicative_expression STAR cast_expression
-- On RPAR reduce production multiplicative_expression -> multiplicative_expression STAR cast_expression
-- On RIGHT_OP reduce production multiplicative_expression -> multiplicative_expression STAR cast_expression
-- On RBRACE reduce production multiplicative_expression -> multiplicative_expression STAR cast_expression
-- On QUESTION reduce production multiplicative_expression -> multiplicative_expression STAR cast_expression
-- On PLUS reduce production multiplicative_expression -> multiplicative_expression STAR cast_expression
-- On PIPE reduce production multiplicative_expression -> multiplicative_expression STAR cast_expression
-- On PERCENT reduce production multiplicative_expression -> multiplicative_expression STAR cast_expression
-- On OR_OP reduce production multiplicative_expression -> multiplicative_expression STAR cast_expression
-- On NE_OP reduce production multiplicative_expression -> multiplicative_expression STAR cast_expression
-- On MINUS reduce production multiplicative_expression -> multiplicative_expression STAR cast_expression
-- On LT reduce production multiplicative_expression -> multiplicative_expression STAR cast_expression
-- On LE_OP reduce production multiplicative_expression -> multiplicative_expression STAR cast_expression
-- On LEFT_OP reduce production multiplicative_expression -> multiplicative_expression STAR cast_expression
-- On HAT reduce production multiplicative_expression -> multiplicative_expression STAR cast_expression
-- On GT reduce production multiplicative_expression -> multiplicative_expression STAR cast_expression
-- On GE_OP reduce production multiplicative_expression -> multiplicative_expression STAR cast_expression
-- On EQ_OP reduce production multiplicative_expression -> multiplicative_expression STAR cast_expression
-- On COMMA reduce production multiplicative_expression -> multiplicative_expression STAR cast_expression
-- On COLON reduce production multiplicative_expression -> multiplicative_expression STAR cast_expression
-- On ATTRIBUTE reduce production multiplicative_expression -> multiplicative_expression STAR cast_expression
-- On AND_OP reduce production multiplicative_expression -> multiplicative_expression STAR cast_expression
-- On AMP reduce production multiplicative_expression -> multiplicative_expression STAR cast_expression

State 71:
multiplicative_expression -> multiplicative_expression SLASH . cast_expression [ STAR SLASH SEMICOLON RSQUARE RPAR RIGHT_OP RBRACE QUESTION PLUS PIPE PERCENT OR_OP NE_OP MINUS LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
-- On TILDE shift to state 28
-- On STRING_LITERAL shift to state 29
-- On STAR shift to state 30
-- On SIZEOF shift to state 31
-- On PLUS shift to state 32
-- On MINUS shift to state 33
-- On LPAR shift to state 36
-- On INC_OP shift to state 39
-- On IDENTIFIER shift to state 41
-- On EXL shift to state 42
-- On DEC_OP shift to state 43
-- On CONSTANT shift to state 44
-- On AMP shift to state 45
-- On unary_operator shift to state 46
-- On unary_expression shift to state 47
-- On primary_expression shift to state 48
-- On postfix_expression shift to state 49
-- On cast_expression shift to state 72

State 72:
multiplicative_expression -> multiplicative_expression SLASH cast_expression . [ STAR SLASH SEMICOLON RSQUARE RPAR RIGHT_OP RBRACE QUESTION PLUS PIPE PERCENT OR_OP NE_OP MINUS LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
-- On STAR reduce production multiplicative_expression -> multiplicative_expression SLASH cast_expression
-- On SLASH reduce production multiplicative_expression -> multiplicative_expression SLASH cast_expression
-- On SEMICOLON reduce production multiplicative_expression -> multiplicative_expression SLASH cast_expression
-- On RSQUARE reduce production multiplicative_expression -> multiplicative_expression SLASH cast_expression
-- On RPAR reduce production multiplicative_expression -> multiplicative_expression SLASH cast_expression
-- On RIGHT_OP reduce production multiplicative_expression -> multiplicative_expression SLASH cast_expression
-- On RBRACE reduce production multiplicative_expression -> multiplicative_expression SLASH cast_expression
-- On QUESTION reduce production multiplicative_expression -> multiplicative_expression SLASH cast_expression
-- On PLUS reduce production multiplicative_expression -> multiplicative_expression SLASH cast_expression
-- On PIPE reduce production multiplicative_expression -> multiplicative_expression SLASH cast_expression
-- On PERCENT reduce production multiplicative_expression -> multiplicative_expression SLASH cast_expression
-- On OR_OP reduce production multiplicative_expression -> multiplicative_expression SLASH cast_expression
-- On NE_OP reduce production multiplicative_expression -> multiplicative_expression SLASH cast_expression
-- On MINUS reduce production multiplicative_expression -> multiplicative_expression SLASH cast_expression
-- On LT reduce production multiplicative_expression -> multiplicative_expression SLASH cast_expression
-- On LE_OP reduce production multiplicative_expression -> multiplicative_expression SLASH cast_expression
-- On LEFT_OP reduce production multiplicative_expression -> multiplicative_expression SLASH cast_expression
-- On HAT reduce production multiplicative_expression -> multiplicative_expression SLASH cast_expression
-- On GT reduce production multiplicative_expression -> multiplicative_expression SLASH cast_expression
-- On GE_OP reduce production multiplicative_expression -> multiplicative_expression SLASH cast_expression
-- On EQ_OP reduce production multiplicative_expression -> multiplicative_expression SLASH cast_expression
-- On COMMA reduce production multiplicative_expression -> multiplicative_expression SLASH cast_expression
-- On COLON reduce production multiplicative_expression -> multiplicative_expression SLASH cast_expression
-- On ATTRIBUTE reduce production multiplicative_expression -> multiplicative_expression SLASH cast_expression
-- On AND_OP reduce production multiplicative_expression -> multiplicative_expression SLASH cast_expression
-- On AMP reduce production multiplicative_expression -> multiplicative_expression SLASH cast_expression

State 73:
multiplicative_expression -> multiplicative_expression PERCENT . cast_expression [ STAR SLASH SEMICOLON RSQUARE RPAR RIGHT_OP RBRACE QUESTION PLUS PIPE PERCENT OR_OP NE_OP MINUS LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
-- On TILDE shift to state 28
-- On STRING_LITERAL shift to state 29
-- On STAR shift to state 30
-- On SIZEOF shift to state 31
-- On PLUS shift to state 32
-- On MINUS shift to state 33
-- On LPAR shift to state 36
-- On INC_OP shift to state 39
-- On IDENTIFIER shift to state 41
-- On EXL shift to state 42
-- On DEC_OP shift to state 43
-- On CONSTANT shift to state 44
-- On AMP shift to state 45
-- On unary_operator shift to state 46
-- On unary_expression shift to state 47
-- On primary_expression shift to state 48
-- On postfix_expression shift to state 49
-- On cast_expression shift to state 74

State 74:
multiplicative_expression -> multiplicative_expression PERCENT cast_expression . [ STAR SLASH SEMICOLON RSQUARE RPAR RIGHT_OP RBRACE QUESTION PLUS PIPE PERCENT OR_OP NE_OP MINUS LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
-- On STAR reduce production multiplicative_expression -> multiplicative_expression PERCENT cast_expression
-- On SLASH reduce production multiplicative_expression -> multiplicative_expression PERCENT cast_expression
-- On SEMICOLON reduce production multiplicative_expression -> multiplicative_expression PERCENT cast_expression
-- On RSQUARE reduce production multiplicative_expression -> multiplicative_expression PERCENT cast_expression
-- On RPAR reduce production multiplicative_expression -> multiplicative_expression PERCENT cast_expression
-- On RIGHT_OP reduce production multiplicative_expression -> multiplicative_expression PERCENT cast_expression
-- On RBRACE reduce production multiplicative_expression -> multiplicative_expression PERCENT cast_expression
-- On QUESTION reduce production multiplicative_expression -> multiplicative_expression PERCENT cast_expression
-- On PLUS reduce production multiplicative_expression -> multiplicative_expression PERCENT cast_expression
-- On PIPE reduce production multiplicative_expression -> multiplicative_expression PERCENT cast_expression
-- On PERCENT reduce production multiplicative_expression -> multiplicative_expression PERCENT cast_expression
-- On OR_OP reduce production multiplicative_expression -> multiplicative_expression PERCENT cast_expression
-- On NE_OP reduce production multiplicative_expression -> multiplicative_expression PERCENT cast_expression
-- On MINUS reduce production multiplicative_expression -> multiplicative_expression PERCENT cast_expression
-- On LT reduce production multiplicative_expression -> multiplicative_expression PERCENT cast_expression
-- On LE_OP reduce production multiplicative_expression -> multiplicative_expression PERCENT cast_expression
-- On LEFT_OP reduce production multiplicative_expression -> multiplicative_expression PERCENT cast_expression
-- On HAT reduce production multiplicative_expression -> multiplicative_expression PERCENT cast_expression
-- On GT reduce production multiplicative_expression -> multiplicative_expression PERCENT cast_expression
-- On GE_OP reduce production multiplicative_expression -> multiplicative_expression PERCENT cast_expression
-- On EQ_OP reduce production multiplicative_expression -> multiplicative_expression PERCENT cast_expression
-- On COMMA reduce production multiplicative_expression -> multiplicative_expression PERCENT cast_expression
-- On COLON reduce production multiplicative_expression -> multiplicative_expression PERCENT cast_expression
-- On ATTRIBUTE reduce production multiplicative_expression -> multiplicative_expression PERCENT cast_expression
-- On AND_OP reduce production multiplicative_expression -> multiplicative_expression PERCENT cast_expression
-- On AMP reduce production multiplicative_expression -> multiplicative_expression PERCENT cast_expression

State 75:
multiplicative_expression -> cast_expression . [ STAR SLASH SEMICOLON RSQUARE RPAR RIGHT_OP RBRACE QUESTION PLUS PIPE PERCENT OR_OP NE_OP MINUS LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
-- On STAR reduce production multiplicative_expression -> cast_expression
-- On SLASH reduce production multiplicative_expression -> cast_expression
-- On SEMICOLON reduce production multiplicative_expression -> cast_expression
-- On RSQUARE reduce production multiplicative_expression -> cast_expression
-- On RPAR reduce production multiplicative_expression -> cast_expression
-- On RIGHT_OP reduce production multiplicative_expression -> cast_expression
-- On RBRACE reduce production multiplicative_expression -> cast_expression
-- On QUESTION reduce production multiplicative_expression -> cast_expression
-- On PLUS reduce production multiplicative_expression -> cast_expression
-- On PIPE reduce production multiplicative_expression -> cast_expression
-- On PERCENT reduce production multiplicative_expression -> cast_expression
-- On OR_OP reduce production multiplicative_expression -> cast_expression
-- On NE_OP reduce production multiplicative_expression -> cast_expression
-- On MINUS reduce production multiplicative_expression -> cast_expression
-- On LT reduce production multiplicative_expression -> cast_expression
-- On LE_OP reduce production multiplicative_expression -> cast_expression
-- On LEFT_OP reduce production multiplicative_expression -> cast_expression
-- On HAT reduce production multiplicative_expression -> cast_expression
-- On GT reduce production multiplicative_expression -> cast_expression
-- On GE_OP reduce production multiplicative_expression -> cast_expression
-- On EQ_OP reduce production multiplicative_expression -> cast_expression
-- On COMMA reduce production multiplicative_expression -> cast_expression
-- On COLON reduce production multiplicative_expression -> cast_expression
-- On ATTRIBUTE reduce production multiplicative_expression -> cast_expression
-- On AND_OP reduce production multiplicative_expression -> cast_expression
-- On AMP reduce production multiplicative_expression -> cast_expression

State 76:
additive_expression -> additive_expression . PLUS multiplicative_expression [ SEMICOLON RSQUARE RPAR RIGHT_OP RBRACE QUESTION PLUS PIPE OR_OP NE_OP MINUS LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
additive_expression -> additive_expression . MINUS multiplicative_expression [ SEMICOLON RSQUARE RPAR RIGHT_OP RBRACE QUESTION PLUS PIPE OR_OP NE_OP MINUS LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
shift_expression -> shift_expression RIGHT_OP additive_expression . [ SEMICOLON RSQUARE RPAR RIGHT_OP RBRACE QUESTION PIPE OR_OP NE_OP LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
-- On PLUS shift to state 77
-- On MINUS shift to state 79
-- On SEMICOLON reduce production shift_expression -> shift_expression RIGHT_OP additive_expression
-- On RSQUARE reduce production shift_expression -> shift_expression RIGHT_OP additive_expression
-- On RPAR reduce production shift_expression -> shift_expression RIGHT_OP additive_expression
-- On RIGHT_OP reduce production shift_expression -> shift_expression RIGHT_OP additive_expression
-- On RBRACE reduce production shift_expression -> shift_expression RIGHT_OP additive_expression
-- On QUESTION reduce production shift_expression -> shift_expression RIGHT_OP additive_expression
-- On PIPE reduce production shift_expression -> shift_expression RIGHT_OP additive_expression
-- On OR_OP reduce production shift_expression -> shift_expression RIGHT_OP additive_expression
-- On NE_OP reduce production shift_expression -> shift_expression RIGHT_OP additive_expression
-- On LT reduce production shift_expression -> shift_expression RIGHT_OP additive_expression
-- On LE_OP reduce production shift_expression -> shift_expression RIGHT_OP additive_expression
-- On LEFT_OP reduce production shift_expression -> shift_expression RIGHT_OP additive_expression
-- On HAT reduce production shift_expression -> shift_expression RIGHT_OP additive_expression
-- On GT reduce production shift_expression -> shift_expression RIGHT_OP additive_expression
-- On GE_OP reduce production shift_expression -> shift_expression RIGHT_OP additive_expression
-- On EQ_OP reduce production shift_expression -> shift_expression RIGHT_OP additive_expression
-- On COMMA reduce production shift_expression -> shift_expression RIGHT_OP additive_expression
-- On COLON reduce production shift_expression -> shift_expression RIGHT_OP additive_expression
-- On ATTRIBUTE reduce production shift_expression -> shift_expression RIGHT_OP additive_expression
-- On AND_OP reduce production shift_expression -> shift_expression RIGHT_OP additive_expression
-- On AMP reduce production shift_expression -> shift_expression RIGHT_OP additive_expression

State 77:
additive_expression -> additive_expression PLUS . multiplicative_expression [ SEMICOLON RSQUARE RPAR RIGHT_OP RBRACE QUESTION PLUS PIPE OR_OP NE_OP MINUS LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
-- On TILDE shift to state 28
-- On STRING_LITERAL shift to state 29
-- On STAR shift to state 30
-- On SIZEOF shift to state 31
-- On PLUS shift to state 32
-- On MINUS shift to state 33
-- On LPAR shift to state 36
-- On INC_OP shift to state 39
-- On IDENTIFIER shift to state 41
-- On EXL shift to state 42
-- On DEC_OP shift to state 43
-- On CONSTANT shift to state 44
-- On AMP shift to state 45
-- On unary_operator shift to state 46
-- On unary_expression shift to state 47
-- On primary_expression shift to state 48
-- On postfix_expression shift to state 49
-- On multiplicative_expression shift to state 78
-- On cast_expression shift to state 75

State 78:
additive_expression -> additive_expression PLUS multiplicative_expression . [ SEMICOLON RSQUARE RPAR RIGHT_OP RBRACE QUESTION PLUS PIPE OR_OP NE_OP MINUS LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
multiplicative_expression -> multiplicative_expression . STAR cast_expression [ STAR SLASH SEMICOLON RSQUARE RPAR RIGHT_OP RBRACE QUESTION PLUS PIPE PERCENT OR_OP NE_OP MINUS LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
multiplicative_expression -> multiplicative_expression . SLASH cast_expression [ STAR SLASH SEMICOLON RSQUARE RPAR RIGHT_OP RBRACE QUESTION PLUS PIPE PERCENT OR_OP NE_OP MINUS LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
multiplicative_expression -> multiplicative_expression . PERCENT cast_expression [ STAR SLASH SEMICOLON RSQUARE RPAR RIGHT_OP RBRACE QUESTION PLUS PIPE PERCENT OR_OP NE_OP MINUS LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
-- On STAR shift to state 69
-- On SLASH shift to state 71
-- On PERCENT shift to state 73
-- On SEMICOLON reduce production additive_expression -> additive_expression PLUS multiplicative_expression
-- On RSQUARE reduce production additive_expression -> additive_expression PLUS multiplicative_expression
-- On RPAR reduce production additive_expression -> additive_expression PLUS multiplicative_expression
-- On RIGHT_OP reduce production additive_expression -> additive_expression PLUS multiplicative_expression
-- On RBRACE reduce production additive_expression -> additive_expression PLUS multiplicative_expression
-- On QUESTION reduce production additive_expression -> additive_expression PLUS multiplicative_expression
-- On PLUS reduce production additive_expression -> additive_expression PLUS multiplicative_expression
-- On PIPE reduce production additive_expression -> additive_expression PLUS multiplicative_expression
-- On OR_OP reduce production additive_expression -> additive_expression PLUS multiplicative_expression
-- On NE_OP reduce production additive_expression -> additive_expression PLUS multiplicative_expression
-- On MINUS reduce production additive_expression -> additive_expression PLUS multiplicative_expression
-- On LT reduce production additive_expression -> additive_expression PLUS multiplicative_expression
-- On LE_OP reduce production additive_expression -> additive_expression PLUS multiplicative_expression
-- On LEFT_OP reduce production additive_expression -> additive_expression PLUS multiplicative_expression
-- On HAT reduce production additive_expression -> additive_expression PLUS multiplicative_expression
-- On GT reduce production additive_expression -> additive_expression PLUS multiplicative_expression
-- On GE_OP reduce production additive_expression -> additive_expression PLUS multiplicative_expression
-- On EQ_OP reduce production additive_expression -> additive_expression PLUS multiplicative_expression
-- On COMMA reduce production additive_expression -> additive_expression PLUS multiplicative_expression
-- On COLON reduce production additive_expression -> additive_expression PLUS multiplicative_expression
-- On ATTRIBUTE reduce production additive_expression -> additive_expression PLUS multiplicative_expression
-- On AND_OP reduce production additive_expression -> additive_expression PLUS multiplicative_expression
-- On AMP reduce production additive_expression -> additive_expression PLUS multiplicative_expression

State 79:
additive_expression -> additive_expression MINUS . multiplicative_expression [ SEMICOLON RSQUARE RPAR RIGHT_OP RBRACE QUESTION PLUS PIPE OR_OP NE_OP MINUS LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
-- On TILDE shift to state 28
-- On STRING_LITERAL shift to state 29
-- On STAR shift to state 30
-- On SIZEOF shift to state 31
-- On PLUS shift to state 32
-- On MINUS shift to state 33
-- On LPAR shift to state 36
-- On INC_OP shift to state 39
-- On IDENTIFIER shift to state 41
-- On EXL shift to state 42
-- On DEC_OP shift to state 43
-- On CONSTANT shift to state 44
-- On AMP shift to state 45
-- On unary_operator shift to state 46
-- On unary_expression shift to state 47
-- On primary_expression shift to state 48
-- On postfix_expression shift to state 49
-- On multiplicative_expression shift to state 80
-- On cast_expression shift to state 75

State 80:
additive_expression -> additive_expression MINUS multiplicative_expression . [ SEMICOLON RSQUARE RPAR RIGHT_OP RBRACE QUESTION PLUS PIPE OR_OP NE_OP MINUS LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
multiplicative_expression -> multiplicative_expression . STAR cast_expression [ STAR SLASH SEMICOLON RSQUARE RPAR RIGHT_OP RBRACE QUESTION PLUS PIPE PERCENT OR_OP NE_OP MINUS LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
multiplicative_expression -> multiplicative_expression . SLASH cast_expression [ STAR SLASH SEMICOLON RSQUARE RPAR RIGHT_OP RBRACE QUESTION PLUS PIPE PERCENT OR_OP NE_OP MINUS LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
multiplicative_expression -> multiplicative_expression . PERCENT cast_expression [ STAR SLASH SEMICOLON RSQUARE RPAR RIGHT_OP RBRACE QUESTION PLUS PIPE PERCENT OR_OP NE_OP MINUS LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
-- On STAR shift to state 69
-- On SLASH shift to state 71
-- On PERCENT shift to state 73
-- On SEMICOLON reduce production additive_expression -> additive_expression MINUS multiplicative_expression
-- On RSQUARE reduce production additive_expression -> additive_expression MINUS multiplicative_expression
-- On RPAR reduce production additive_expression -> additive_expression MINUS multiplicative_expression
-- On RIGHT_OP reduce production additive_expression -> additive_expression MINUS multiplicative_expression
-- On RBRACE reduce production additive_expression -> additive_expression MINUS multiplicative_expression
-- On QUESTION reduce production additive_expression -> additive_expression MINUS multiplicative_expression
-- On PLUS reduce production additive_expression -> additive_expression MINUS multiplicative_expression
-- On PIPE reduce production additive_expression -> additive_expression MINUS multiplicative_expression
-- On OR_OP reduce production additive_expression -> additive_expression MINUS multiplicative_expression
-- On NE_OP reduce production additive_expression -> additive_expression MINUS multiplicative_expression
-- On MINUS reduce production additive_expression -> additive_expression MINUS multiplicative_expression
-- On LT reduce production additive_expression -> additive_expression MINUS multiplicative_expression
-- On LE_OP reduce production additive_expression -> additive_expression MINUS multiplicative_expression
-- On LEFT_OP reduce production additive_expression -> additive_expression MINUS multiplicative_expression
-- On HAT reduce production additive_expression -> additive_expression MINUS multiplicative_expression
-- On GT reduce production additive_expression -> additive_expression MINUS multiplicative_expression
-- On GE_OP reduce production additive_expression -> additive_expression MINUS multiplicative_expression
-- On EQ_OP reduce production additive_expression -> additive_expression MINUS multiplicative_expression
-- On COMMA reduce production additive_expression -> additive_expression MINUS multiplicative_expression
-- On COLON reduce production additive_expression -> additive_expression MINUS multiplicative_expression
-- On ATTRIBUTE reduce production additive_expression -> additive_expression MINUS multiplicative_expression
-- On AND_OP reduce production additive_expression -> additive_expression MINUS multiplicative_expression
-- On AMP reduce production additive_expression -> additive_expression MINUS multiplicative_expression

State 81:
shift_expression -> shift_expression LEFT_OP . additive_expression [ SEMICOLON RSQUARE RPAR RIGHT_OP RBRACE QUESTION PIPE OR_OP NE_OP LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
-- On TILDE shift to state 28
-- On STRING_LITERAL shift to state 29
-- On STAR shift to state 30
-- On SIZEOF shift to state 31
-- On PLUS shift to state 32
-- On MINUS shift to state 33
-- On LPAR shift to state 36
-- On INC_OP shift to state 39
-- On IDENTIFIER shift to state 41
-- On EXL shift to state 42
-- On DEC_OP shift to state 43
-- On CONSTANT shift to state 44
-- On AMP shift to state 45
-- On unary_operator shift to state 46
-- On unary_expression shift to state 47
-- On primary_expression shift to state 48
-- On postfix_expression shift to state 49
-- On multiplicative_expression shift to state 68
-- On cast_expression shift to state 75
-- On additive_expression shift to state 82

State 82:
additive_expression -> additive_expression . PLUS multiplicative_expression [ SEMICOLON RSQUARE RPAR RIGHT_OP RBRACE QUESTION PLUS PIPE OR_OP NE_OP MINUS LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
additive_expression -> additive_expression . MINUS multiplicative_expression [ SEMICOLON RSQUARE RPAR RIGHT_OP RBRACE QUESTION PLUS PIPE OR_OP NE_OP MINUS LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
shift_expression -> shift_expression LEFT_OP additive_expression . [ SEMICOLON RSQUARE RPAR RIGHT_OP RBRACE QUESTION PIPE OR_OP NE_OP LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
-- On PLUS shift to state 77
-- On MINUS shift to state 79
-- On SEMICOLON reduce production shift_expression -> shift_expression LEFT_OP additive_expression
-- On RSQUARE reduce production shift_expression -> shift_expression LEFT_OP additive_expression
-- On RPAR reduce production shift_expression -> shift_expression LEFT_OP additive_expression
-- On RIGHT_OP reduce production shift_expression -> shift_expression LEFT_OP additive_expression
-- On RBRACE reduce production shift_expression -> shift_expression LEFT_OP additive_expression
-- On QUESTION reduce production shift_expression -> shift_expression LEFT_OP additive_expression
-- On PIPE reduce production shift_expression -> shift_expression LEFT_OP additive_expression
-- On OR_OP reduce production shift_expression -> shift_expression LEFT_OP additive_expression
-- On NE_OP reduce production shift_expression -> shift_expression LEFT_OP additive_expression
-- On LT reduce production shift_expression -> shift_expression LEFT_OP additive_expression
-- On LE_OP reduce production shift_expression -> shift_expression LEFT_OP additive_expression
-- On LEFT_OP reduce production shift_expression -> shift_expression LEFT_OP additive_expression
-- On HAT reduce production shift_expression -> shift_expression LEFT_OP additive_expression
-- On GT reduce production shift_expression -> shift_expression LEFT_OP additive_expression
-- On GE_OP reduce production shift_expression -> shift_expression LEFT_OP additive_expression
-- On EQ_OP reduce production shift_expression -> shift_expression LEFT_OP additive_expression
-- On COMMA reduce production shift_expression -> shift_expression LEFT_OP additive_expression
-- On COLON reduce production shift_expression -> shift_expression LEFT_OP additive_expression
-- On ATTRIBUTE reduce production shift_expression -> shift_expression LEFT_OP additive_expression
-- On AND_OP reduce production shift_expression -> shift_expression LEFT_OP additive_expression
-- On AMP reduce production shift_expression -> shift_expression LEFT_OP additive_expression

State 83:
equality_expression -> relational_expression . [ SEMICOLON RSQUARE RPAR RBRACE QUESTION PIPE OR_OP NE_OP HAT EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
relational_expression -> relational_expression . LT shift_expression [ SEMICOLON RSQUARE RPAR RBRACE QUESTION PIPE OR_OP NE_OP LT LE_OP HAT GT GE_OP EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
relational_expression -> relational_expression . GT shift_expression [ SEMICOLON RSQUARE RPAR RBRACE QUESTION PIPE OR_OP NE_OP LT LE_OP HAT GT GE_OP EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
relational_expression -> relational_expression . LE_OP shift_expression [ SEMICOLON RSQUARE RPAR RBRACE QUESTION PIPE OR_OP NE_OP LT LE_OP HAT GT GE_OP EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
relational_expression -> relational_expression . GE_OP shift_expression [ SEMICOLON RSQUARE RPAR RBRACE QUESTION PIPE OR_OP NE_OP LT LE_OP HAT GT GE_OP EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
-- On LT shift to state 84
-- On LE_OP shift to state 87
-- On GT shift to state 89
-- On GE_OP shift to state 91
-- On SEMICOLON reduce production equality_expression -> relational_expression
-- On RSQUARE reduce production equality_expression -> relational_expression
-- On RPAR reduce production equality_expression -> relational_expression
-- On RBRACE reduce production equality_expression -> relational_expression
-- On QUESTION reduce production equality_expression -> relational_expression
-- On PIPE reduce production equality_expression -> relational_expression
-- On OR_OP reduce production equality_expression -> relational_expression
-- On NE_OP reduce production equality_expression -> relational_expression
-- On HAT reduce production equality_expression -> relational_expression
-- On EQ_OP reduce production equality_expression -> relational_expression
-- On COMMA reduce production equality_expression -> relational_expression
-- On COLON reduce production equality_expression -> relational_expression
-- On ATTRIBUTE reduce production equality_expression -> relational_expression
-- On AND_OP reduce production equality_expression -> relational_expression
-- On AMP reduce production equality_expression -> relational_expression

State 84:
relational_expression -> relational_expression LT . shift_expression [ SEMICOLON RSQUARE RPAR RBRACE QUESTION PIPE OR_OP NE_OP LT LE_OP HAT GT GE_OP EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
-- On TILDE shift to state 28
-- On STRING_LITERAL shift to state 29
-- On STAR shift to state 30
-- On SIZEOF shift to state 31
-- On PLUS shift to state 32
-- On MINUS shift to state 33
-- On LPAR shift to state 36
-- On INC_OP shift to state 39
-- On IDENTIFIER shift to state 41
-- On EXL shift to state 42
-- On DEC_OP shift to state 43
-- On CONSTANT shift to state 44
-- On AMP shift to state 45
-- On unary_operator shift to state 46
-- On unary_expression shift to state 47
-- On shift_expression shift to state 85
-- On primary_expression shift to state 48
-- On postfix_expression shift to state 49
-- On multiplicative_expression shift to state 68
-- On cast_expression shift to state 75
-- On additive_expression shift to state 86

State 85:
relational_expression -> relational_expression LT shift_expression . [ SEMICOLON RSQUARE RPAR RBRACE QUESTION PIPE OR_OP NE_OP LT LE_OP HAT GT GE_OP EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
shift_expression -> shift_expression . LEFT_OP additive_expression [ SEMICOLON RSQUARE RPAR RIGHT_OP RBRACE QUESTION PIPE OR_OP NE_OP LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
shift_expression -> shift_expression . RIGHT_OP additive_expression [ SEMICOLON RSQUARE RPAR RIGHT_OP RBRACE QUESTION PIPE OR_OP NE_OP LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
-- On RIGHT_OP shift to state 67
-- On LEFT_OP shift to state 81
-- On SEMICOLON reduce production relational_expression -> relational_expression LT shift_expression
-- On RSQUARE reduce production relational_expression -> relational_expression LT shift_expression
-- On RPAR reduce production relational_expression -> relational_expression LT shift_expression
-- On RBRACE reduce production relational_expression -> relational_expression LT shift_expression
-- On QUESTION reduce production relational_expression -> relational_expression LT shift_expression
-- On PIPE reduce production relational_expression -> relational_expression LT shift_expression
-- On OR_OP reduce production relational_expression -> relational_expression LT shift_expression
-- On NE_OP reduce production relational_expression -> relational_expression LT shift_expression
-- On LT reduce production relational_expression -> relational_expression LT shift_expression
-- On LE_OP reduce production relational_expression -> relational_expression LT shift_expression
-- On HAT reduce production relational_expression -> relational_expression LT shift_expression
-- On GT reduce production relational_expression -> relational_expression LT shift_expression
-- On GE_OP reduce production relational_expression -> relational_expression LT shift_expression
-- On EQ_OP reduce production relational_expression -> relational_expression LT shift_expression
-- On COMMA reduce production relational_expression -> relational_expression LT shift_expression
-- On COLON reduce production relational_expression -> relational_expression LT shift_expression
-- On ATTRIBUTE reduce production relational_expression -> relational_expression LT shift_expression
-- On AND_OP reduce production relational_expression -> relational_expression LT shift_expression
-- On AMP reduce production relational_expression -> relational_expression LT shift_expression

State 86:
additive_expression -> additive_expression . PLUS multiplicative_expression [ SEMICOLON RSQUARE RPAR RIGHT_OP RBRACE QUESTION PLUS PIPE OR_OP NE_OP MINUS LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
additive_expression -> additive_expression . MINUS multiplicative_expression [ SEMICOLON RSQUARE RPAR RIGHT_OP RBRACE QUESTION PLUS PIPE OR_OP NE_OP MINUS LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
shift_expression -> additive_expression . [ SEMICOLON RSQUARE RPAR RIGHT_OP RBRACE QUESTION PIPE OR_OP NE_OP LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
-- On PLUS shift to state 77
-- On MINUS shift to state 79
-- On SEMICOLON reduce production shift_expression -> additive_expression
-- On RSQUARE reduce production shift_expression -> additive_expression
-- On RPAR reduce production shift_expression -> additive_expression
-- On RIGHT_OP reduce production shift_expression -> additive_expression
-- On RBRACE reduce production shift_expression -> additive_expression
-- On QUESTION reduce production shift_expression -> additive_expression
-- On PIPE reduce production shift_expression -> additive_expression
-- On OR_OP reduce production shift_expression -> additive_expression
-- On NE_OP reduce production shift_expression -> additive_expression
-- On LT reduce production shift_expression -> additive_expression
-- On LE_OP reduce production shift_expression -> additive_expression
-- On LEFT_OP reduce production shift_expression -> additive_expression
-- On HAT reduce production shift_expression -> additive_expression
-- On GT reduce production shift_expression -> additive_expression
-- On GE_OP reduce production shift_expression -> additive_expression
-- On EQ_OP reduce production shift_expression -> additive_expression
-- On COMMA reduce production shift_expression -> additive_expression
-- On COLON reduce production shift_expression -> additive_expression
-- On ATTRIBUTE reduce production shift_expression -> additive_expression
-- On AND_OP reduce production shift_expression -> additive_expression
-- On AMP reduce production shift_expression -> additive_expression

State 87:
relational_expression -> relational_expression LE_OP . shift_expression [ SEMICOLON RSQUARE RPAR RBRACE QUESTION PIPE OR_OP NE_OP LT LE_OP HAT GT GE_OP EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
-- On TILDE shift to state 28
-- On STRING_LITERAL shift to state 29
-- On STAR shift to state 30
-- On SIZEOF shift to state 31
-- On PLUS shift to state 32
-- On MINUS shift to state 33
-- On LPAR shift to state 36
-- On INC_OP shift to state 39
-- On IDENTIFIER shift to state 41
-- On EXL shift to state 42
-- On DEC_OP shift to state 43
-- On CONSTANT shift to state 44
-- On AMP shift to state 45
-- On unary_operator shift to state 46
-- On unary_expression shift to state 47
-- On shift_expression shift to state 88
-- On primary_expression shift to state 48
-- On postfix_expression shift to state 49
-- On multiplicative_expression shift to state 68
-- On cast_expression shift to state 75
-- On additive_expression shift to state 86

State 88:
relational_expression -> relational_expression LE_OP shift_expression . [ SEMICOLON RSQUARE RPAR RBRACE QUESTION PIPE OR_OP NE_OP LT LE_OP HAT GT GE_OP EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
shift_expression -> shift_expression . LEFT_OP additive_expression [ SEMICOLON RSQUARE RPAR RIGHT_OP RBRACE QUESTION PIPE OR_OP NE_OP LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
shift_expression -> shift_expression . RIGHT_OP additive_expression [ SEMICOLON RSQUARE RPAR RIGHT_OP RBRACE QUESTION PIPE OR_OP NE_OP LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
-- On RIGHT_OP shift to state 67
-- On LEFT_OP shift to state 81
-- On SEMICOLON reduce production relational_expression -> relational_expression LE_OP shift_expression
-- On RSQUARE reduce production relational_expression -> relational_expression LE_OP shift_expression
-- On RPAR reduce production relational_expression -> relational_expression LE_OP shift_expression
-- On RBRACE reduce production relational_expression -> relational_expression LE_OP shift_expression
-- On QUESTION reduce production relational_expression -> relational_expression LE_OP shift_expression
-- On PIPE reduce production relational_expression -> relational_expression LE_OP shift_expression
-- On OR_OP reduce production relational_expression -> relational_expression LE_OP shift_expression
-- On NE_OP reduce production relational_expression -> relational_expression LE_OP shift_expression
-- On LT reduce production relational_expression -> relational_expression LE_OP shift_expression
-- On LE_OP reduce production relational_expression -> relational_expression LE_OP shift_expression
-- On HAT reduce production relational_expression -> relational_expression LE_OP shift_expression
-- On GT reduce production relational_expression -> relational_expression LE_OP shift_expression
-- On GE_OP reduce production relational_expression -> relational_expression LE_OP shift_expression
-- On EQ_OP reduce production relational_expression -> relational_expression LE_OP shift_expression
-- On COMMA reduce production relational_expression -> relational_expression LE_OP shift_expression
-- On COLON reduce production relational_expression -> relational_expression LE_OP shift_expression
-- On ATTRIBUTE reduce production relational_expression -> relational_expression LE_OP shift_expression
-- On AND_OP reduce production relational_expression -> relational_expression LE_OP shift_expression
-- On AMP reduce production relational_expression -> relational_expression LE_OP shift_expression

State 89:
relational_expression -> relational_expression GT . shift_expression [ SEMICOLON RSQUARE RPAR RBRACE QUESTION PIPE OR_OP NE_OP LT LE_OP HAT GT GE_OP EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
-- On TILDE shift to state 28
-- On STRING_LITERAL shift to state 29
-- On STAR shift to state 30
-- On SIZEOF shift to state 31
-- On PLUS shift to state 32
-- On MINUS shift to state 33
-- On LPAR shift to state 36
-- On INC_OP shift to state 39
-- On IDENTIFIER shift to state 41
-- On EXL shift to state 42
-- On DEC_OP shift to state 43
-- On CONSTANT shift to state 44
-- On AMP shift to state 45
-- On unary_operator shift to state 46
-- On unary_expression shift to state 47
-- On shift_expression shift to state 90
-- On primary_expression shift to state 48
-- On postfix_expression shift to state 49
-- On multiplicative_expression shift to state 68
-- On cast_expression shift to state 75
-- On additive_expression shift to state 86

State 90:
relational_expression -> relational_expression GT shift_expression . [ SEMICOLON RSQUARE RPAR RBRACE QUESTION PIPE OR_OP NE_OP LT LE_OP HAT GT GE_OP EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
shift_expression -> shift_expression . LEFT_OP additive_expression [ SEMICOLON RSQUARE RPAR RIGHT_OP RBRACE QUESTION PIPE OR_OP NE_OP LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
shift_expression -> shift_expression . RIGHT_OP additive_expression [ SEMICOLON RSQUARE RPAR RIGHT_OP RBRACE QUESTION PIPE OR_OP NE_OP LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
-- On RIGHT_OP shift to state 67
-- On LEFT_OP shift to state 81
-- On SEMICOLON reduce production relational_expression -> relational_expression GT shift_expression
-- On RSQUARE reduce production relational_expression -> relational_expression GT shift_expression
-- On RPAR reduce production relational_expression -> relational_expression GT shift_expression
-- On RBRACE reduce production relational_expression -> relational_expression GT shift_expression
-- On QUESTION reduce production relational_expression -> relational_expression GT shift_expression
-- On PIPE reduce production relational_expression -> relational_expression GT shift_expression
-- On OR_OP reduce production relational_expression -> relational_expression GT shift_expression
-- On NE_OP reduce production relational_expression -> relational_expression GT shift_expression
-- On LT reduce production relational_expression -> relational_expression GT shift_expression
-- On LE_OP reduce production relational_expression -> relational_expression GT shift_expression
-- On HAT reduce production relational_expression -> relational_expression GT shift_expression
-- On GT reduce production relational_expression -> relational_expression GT shift_expression
-- On GE_OP reduce production relational_expression -> relational_expression GT shift_expression
-- On EQ_OP reduce production relational_expression -> relational_expression GT shift_expression
-- On COMMA reduce production relational_expression -> relational_expression GT shift_expression
-- On COLON reduce production relational_expression -> relational_expression GT shift_expression
-- On ATTRIBUTE reduce production relational_expression -> relational_expression GT shift_expression
-- On AND_OP reduce production relational_expression -> relational_expression GT shift_expression
-- On AMP reduce production relational_expression -> relational_expression GT shift_expression

State 91:
relational_expression -> relational_expression GE_OP . shift_expression [ SEMICOLON RSQUARE RPAR RBRACE QUESTION PIPE OR_OP NE_OP LT LE_OP HAT GT GE_OP EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
-- On TILDE shift to state 28
-- On STRING_LITERAL shift to state 29
-- On STAR shift to state 30
-- On SIZEOF shift to state 31
-- On PLUS shift to state 32
-- On MINUS shift to state 33
-- On LPAR shift to state 36
-- On INC_OP shift to state 39
-- On IDENTIFIER shift to state 41
-- On EXL shift to state 42
-- On DEC_OP shift to state 43
-- On CONSTANT shift to state 44
-- On AMP shift to state 45
-- On unary_operator shift to state 46
-- On unary_expression shift to state 47
-- On shift_expression shift to state 92
-- On primary_expression shift to state 48
-- On postfix_expression shift to state 49
-- On multiplicative_expression shift to state 68
-- On cast_expression shift to state 75
-- On additive_expression shift to state 86

State 92:
relational_expression -> relational_expression GE_OP shift_expression . [ SEMICOLON RSQUARE RPAR RBRACE QUESTION PIPE OR_OP NE_OP LT LE_OP HAT GT GE_OP EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
shift_expression -> shift_expression . LEFT_OP additive_expression [ SEMICOLON RSQUARE RPAR RIGHT_OP RBRACE QUESTION PIPE OR_OP NE_OP LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
shift_expression -> shift_expression . RIGHT_OP additive_expression [ SEMICOLON RSQUARE RPAR RIGHT_OP RBRACE QUESTION PIPE OR_OP NE_OP LT LE_OP LEFT_OP HAT GT GE_OP EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
-- On RIGHT_OP shift to state 67
-- On LEFT_OP shift to state 81
-- On SEMICOLON reduce production relational_expression -> relational_expression GE_OP shift_expression
-- On RSQUARE reduce production relational_expression -> relational_expression GE_OP shift_expression
-- On RPAR reduce production relational_expression -> relational_expression GE_OP shift_expression
-- On RBRACE reduce production relational_expression -> relational_expression GE_OP shift_expression
-- On QUESTION reduce production relational_expression -> relational_expression GE_OP shift_expression
-- On PIPE reduce production relational_expression -> relational_expression GE_OP shift_expression
-- On OR_OP reduce production relational_expression -> relational_expression GE_OP shift_expression
-- On NE_OP reduce production relational_expression -> relational_expression GE_OP shift_expression
-- On LT reduce production relational_expression -> relational_expression GE_OP shift_expression
-- On LE_OP reduce production relational_expression -> relational_expression GE_OP shift_expression
-- On HAT reduce production relational_expression -> relational_expression GE_OP shift_expression
-- On GT reduce production relational_expression -> relational_expression GE_OP shift_expression
-- On GE_OP reduce production relational_expression -> relational_expression GE_OP shift_expression
-- On EQ_OP reduce production relational_expression -> relational_expression GE_OP shift_expression
-- On COMMA reduce production relational_expression -> relational_expression GE_OP shift_expression
-- On COLON reduce production relational_expression -> relational_expression GE_OP shift_expression
-- On ATTRIBUTE reduce production relational_expression -> relational_expression GE_OP shift_expression
-- On AND_OP reduce production relational_expression -> relational_expression GE_OP shift_expression
-- On AMP reduce production relational_expression -> relational_expression GE_OP shift_expression

State 93:
conditional_expression -> logical_or_expression . [ SEMICOLON RSQUARE RPAR RBRACE COMMA COLON ATTRIBUTE ]
conditional_expression -> logical_or_expression . QUESTION expression COLON conditional_expression [ SEMICOLON RSQUARE RPAR RBRACE COMMA COLON ATTRIBUTE ]
logical_or_expression -> logical_or_expression . OR_OP logical_and_expression [ SEMICOLON RSQUARE RPAR RBRACE QUESTION OR_OP COMMA COLON ATTRIBUTE ]
-- On QUESTION shift to state 94
-- On OR_OP shift to state 119
-- On SEMICOLON reduce production conditional_expression -> logical_or_expression
-- On RSQUARE reduce production conditional_expression -> logical_or_expression
-- On RPAR reduce production conditional_expression -> logical_or_expression
-- On RBRACE reduce production conditional_expression -> logical_or_expression
-- On COMMA reduce production conditional_expression -> logical_or_expression
-- On COLON reduce production conditional_expression -> logical_or_expression
-- On ATTRIBUTE reduce production conditional_expression -> logical_or_expression

State 94:
conditional_expression -> logical_or_expression QUESTION . expression COLON conditional_expression [ SEMICOLON RSQUARE RPAR RBRACE COMMA COLON ATTRIBUTE ]
-- On TILDE shift to state 28
-- On STRING_LITERAL shift to state 29
-- On STAR shift to state 30
-- On SIZEOF shift to state 31
-- On PLUS shift to state 32
-- On MINUS shift to state 33
-- On LPAR shift to state 36
-- On INC_OP shift to state 39
-- On IDENTIFIER shift to state 41
-- On EXL shift to state 42
-- On DEC_OP shift to state 43
-- On CONSTANT shift to state 44
-- On AMP shift to state 45
-- On unary_operator shift to state 46
-- On unary_expression shift to state 53
-- On shift_expression shift to state 66
-- On relational_expression shift to state 83
-- On primary_expression shift to state 48
-- On postfix_expression shift to state 49
-- On multiplicative_expression shift to state 68
-- On logical_or_expression shift to state 93
-- On logical_and_expression shift to state 95
-- On inclusive_or_expression shift to state 111
-- On expression shift to state 112
-- On exclusive_or_expression shift to state 110
-- On equality_expression shift to state 101
-- On conditional_expression shift to state 114
-- On cast_expression shift to state 75
-- On assignment_expression shift to state 118
-- On and_expression shift to state 109
-- On additive_expression shift to state 86

State 95:
logical_and_expression -> logical_and_expression . AND_OP inclusive_or_expression [ SEMICOLON RSQUARE RPAR RBRACE QUESTION OR_OP COMMA COLON ATTRIBUTE AND_OP ]
logical_or_expression -> logical_and_expression . [ SEMICOLON RSQUARE RPAR RBRACE QUESTION OR_OP COMMA COLON ATTRIBUTE ]
-- On AND_OP shift to state 96
-- On SEMICOLON reduce production logical_or_expression -> logical_and_expression
-- On RSQUARE reduce production logical_or_expression -> logical_and_expression
-- On RPAR reduce production logical_or_expression -> logical_and_expression
-- On RBRACE reduce production logical_or_expression -> logical_and_expression
-- On QUESTION reduce production logical_or_expression -> logical_and_expression
-- On OR_OP reduce production logical_or_expression -> logical_and_expression
-- On COMMA reduce production logical_or_expression -> logical_and_expression
-- On COLON reduce production logical_or_expression -> logical_and_expression
-- On ATTRIBUTE reduce production logical_or_expression -> logical_and_expression

State 96:
logical_and_expression -> logical_and_expression AND_OP . inclusive_or_expression [ SEMICOLON RSQUARE RPAR RBRACE QUESTION OR_OP COMMA COLON ATTRIBUTE AND_OP ]
-- On TILDE shift to state 28
-- On STRING_LITERAL shift to state 29
-- On STAR shift to state 30
-- On SIZEOF shift to state 31
-- On PLUS shift to state 32
-- On MINUS shift to state 33
-- On LPAR shift to state 36
-- On INC_OP shift to state 39
-- On IDENTIFIER shift to state 41
-- On EXL shift to state 42
-- On DEC_OP shift to state 43
-- On CONSTANT shift to state 44
-- On AMP shift to state 45
-- On unary_operator shift to state 46
-- On unary_expression shift to state 47
-- On shift_expression shift to state 66
-- On relational_expression shift to state 83
-- On primary_expression shift to state 48
-- On postfix_expression shift to state 49
-- On multiplicative_expression shift to state 68
-- On inclusive_or_expression shift to state 97
-- On exclusive_or_expression shift to state 110
-- On equality_expression shift to state 101
-- On cast_expression shift to state 75
-- On and_expression shift to state 109
-- On additive_expression shift to state 86

State 97:
inclusive_or_expression -> inclusive_or_expression . PIPE exclusive_or_expression [ SEMICOLON RSQUARE RPAR RBRACE QUESTION PIPE OR_OP COMMA COLON ATTRIBUTE AND_OP ]
logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression . [ SEMICOLON RSQUARE RPAR RBRACE QUESTION OR_OP COMMA COLON ATTRIBUTE AND_OP ]
-- On PIPE shift to state 98
-- On SEMICOLON reduce production logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression
-- On RSQUARE reduce production logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression
-- On RPAR reduce production logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression
-- On RBRACE reduce production logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression
-- On QUESTION reduce production logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression
-- On OR_OP reduce production logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression
-- On COMMA reduce production logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression
-- On COLON reduce production logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression
-- On ATTRIBUTE reduce production logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression
-- On AND_OP reduce production logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression

State 98:
inclusive_or_expression -> inclusive_or_expression PIPE . exclusive_or_expression [ SEMICOLON RSQUARE RPAR RBRACE QUESTION PIPE OR_OP COMMA COLON ATTRIBUTE AND_OP ]
-- On TILDE shift to state 28
-- On STRING_LITERAL shift to state 29
-- On STAR shift to state 30
-- On SIZEOF shift to state 31
-- On PLUS shift to state 32
-- On MINUS shift to state 33
-- On LPAR shift to state 36
-- On INC_OP shift to state 39
-- On IDENTIFIER shift to state 41
-- On EXL shift to state 42
-- On DEC_OP shift to state 43
-- On CONSTANT shift to state 44
-- On AMP shift to state 45
-- On unary_operator shift to state 46
-- On unary_expression shift to state 47
-- On shift_expression shift to state 66
-- On relational_expression shift to state 83
-- On primary_expression shift to state 48
-- On postfix_expression shift to state 49
-- On multiplicative_expression shift to state 68
-- On exclusive_or_expression shift to state 99
-- On equality_expression shift to state 101
-- On cast_expression shift to state 75
-- On and_expression shift to state 109
-- On additive_expression shift to state 86

State 99:
exclusive_or_expression -> exclusive_or_expression . HAT and_expression [ SEMICOLON RSQUARE RPAR RBRACE QUESTION PIPE OR_OP HAT COMMA COLON ATTRIBUTE AND_OP ]
inclusive_or_expression -> inclusive_or_expression PIPE exclusive_or_expression . [ SEMICOLON RSQUARE RPAR RBRACE QUESTION PIPE OR_OP COMMA COLON ATTRIBUTE AND_OP ]
-- On HAT shift to state 100
-- On SEMICOLON reduce production inclusive_or_expression -> inclusive_or_expression PIPE exclusive_or_expression
-- On RSQUARE reduce production inclusive_or_expression -> inclusive_or_expression PIPE exclusive_or_expression
-- On RPAR reduce production inclusive_or_expression -> inclusive_or_expression PIPE exclusive_or_expression
-- On RBRACE reduce production inclusive_or_expression -> inclusive_or_expression PIPE exclusive_or_expression
-- On QUESTION reduce production inclusive_or_expression -> inclusive_or_expression PIPE exclusive_or_expression
-- On PIPE reduce production inclusive_or_expression -> inclusive_or_expression PIPE exclusive_or_expression
-- On OR_OP reduce production inclusive_or_expression -> inclusive_or_expression PIPE exclusive_or_expression
-- On COMMA reduce production inclusive_or_expression -> inclusive_or_expression PIPE exclusive_or_expression
-- On COLON reduce production inclusive_or_expression -> inclusive_or_expression PIPE exclusive_or_expression
-- On ATTRIBUTE reduce production inclusive_or_expression -> inclusive_or_expression PIPE exclusive_or_expression
-- On AND_OP reduce production inclusive_or_expression -> inclusive_or_expression PIPE exclusive_or_expression

State 100:
exclusive_or_expression -> exclusive_or_expression HAT . and_expression [ SEMICOLON RSQUARE RPAR RBRACE QUESTION PIPE OR_OP HAT COMMA COLON ATTRIBUTE AND_OP ]
-- On TILDE shift to state 28
-- On STRING_LITERAL shift to state 29
-- On STAR shift to state 30
-- On SIZEOF shift to state 31
-- On PLUS shift to state 32
-- On MINUS shift to state 33
-- On LPAR shift to state 36
-- On INC_OP shift to state 39
-- On IDENTIFIER shift to state 41
-- On EXL shift to state 42
-- On DEC_OP shift to state 43
-- On CONSTANT shift to state 44
-- On AMP shift to state 45
-- On unary_operator shift to state 46
-- On unary_expression shift to state 47
-- On shift_expression shift to state 66
-- On relational_expression shift to state 83
-- On primary_expression shift to state 48
-- On postfix_expression shift to state 49
-- On multiplicative_expression shift to state 68
-- On equality_expression shift to state 101
-- On cast_expression shift to state 75
-- On and_expression shift to state 106
-- On additive_expression shift to state 86

State 101:
and_expression -> equality_expression . [ SEMICOLON RSQUARE RPAR RBRACE QUESTION PIPE OR_OP HAT COMMA COLON ATTRIBUTE AND_OP AMP ]
equality_expression -> equality_expression . EQ_OP relational_expression [ SEMICOLON RSQUARE RPAR RBRACE QUESTION PIPE OR_OP NE_OP HAT EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
equality_expression -> equality_expression . NE_OP relational_expression [ SEMICOLON RSQUARE RPAR RBRACE QUESTION PIPE OR_OP NE_OP HAT EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
-- On NE_OP shift to state 102
-- On EQ_OP shift to state 104
-- On SEMICOLON reduce production and_expression -> equality_expression
-- On RSQUARE reduce production and_expression -> equality_expression
-- On RPAR reduce production and_expression -> equality_expression
-- On RBRACE reduce production and_expression -> equality_expression
-- On QUESTION reduce production and_expression -> equality_expression
-- On PIPE reduce production and_expression -> equality_expression
-- On OR_OP reduce production and_expression -> equality_expression
-- On HAT reduce production and_expression -> equality_expression
-- On COMMA reduce production and_expression -> equality_expression
-- On COLON reduce production and_expression -> equality_expression
-- On ATTRIBUTE reduce production and_expression -> equality_expression
-- On AND_OP reduce production and_expression -> equality_expression
-- On AMP reduce production and_expression -> equality_expression

State 102:
equality_expression -> equality_expression NE_OP . relational_expression [ SEMICOLON RSQUARE RPAR RBRACE QUESTION PIPE OR_OP NE_OP HAT EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
-- On TILDE shift to state 28
-- On STRING_LITERAL shift to state 29
-- On STAR shift to state 30
-- On SIZEOF shift to state 31
-- On PLUS shift to state 32
-- On MINUS shift to state 33
-- On LPAR shift to state 36
-- On INC_OP shift to state 39
-- On IDENTIFIER shift to state 41
-- On EXL shift to state 42
-- On DEC_OP shift to state 43
-- On CONSTANT shift to state 44
-- On AMP shift to state 45
-- On unary_operator shift to state 46
-- On unary_expression shift to state 47
-- On shift_expression shift to state 66
-- On relational_expression shift to state 103
-- On primary_expression shift to state 48
-- On postfix_expression shift to state 49
-- On multiplicative_expression shift to state 68
-- On cast_expression shift to state 75
-- On additive_expression shift to state 86

State 103:
equality_expression -> equality_expression NE_OP relational_expression . [ SEMICOLON RSQUARE RPAR RBRACE QUESTION PIPE OR_OP NE_OP HAT EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
relational_expression -> relational_expression . LT shift_expression [ SEMICOLON RSQUARE RPAR RBRACE QUESTION PIPE OR_OP NE_OP LT LE_OP HAT GT GE_OP EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
relational_expression -> relational_expression . GT shift_expression [ SEMICOLON RSQUARE RPAR RBRACE QUESTION PIPE OR_OP NE_OP LT LE_OP HAT GT GE_OP EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
relational_expression -> relational_expression . LE_OP shift_expression [ SEMICOLON RSQUARE RPAR RBRACE QUESTION PIPE OR_OP NE_OP LT LE_OP HAT GT GE_OP EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
relational_expression -> relational_expression . GE_OP shift_expression [ SEMICOLON RSQUARE RPAR RBRACE QUESTION PIPE OR_OP NE_OP LT LE_OP HAT GT GE_OP EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
-- On LT shift to state 84
-- On LE_OP shift to state 87
-- On GT shift to state 89
-- On GE_OP shift to state 91
-- On SEMICOLON reduce production equality_expression -> equality_expression NE_OP relational_expression
-- On RSQUARE reduce production equality_expression -> equality_expression NE_OP relational_expression
-- On RPAR reduce production equality_expression -> equality_expression NE_OP relational_expression
-- On RBRACE reduce production equality_expression -> equality_expression NE_OP relational_expression
-- On QUESTION reduce production equality_expression -> equality_expression NE_OP relational_expression
-- On PIPE reduce production equality_expression -> equality_expression NE_OP relational_expression
-- On OR_OP reduce production equality_expression -> equality_expression NE_OP relational_expression
-- On NE_OP reduce production equality_expression -> equality_expression NE_OP relational_expression
-- On HAT reduce production equality_expression -> equality_expression NE_OP relational_expression
-- On EQ_OP reduce production equality_expression -> equality_expression NE_OP relational_expression
-- On COMMA reduce production equality_expression -> equality_expression NE_OP relational_expression
-- On COLON reduce production equality_expression -> equality_expression NE_OP relational_expression
-- On ATTRIBUTE reduce production equality_expression -> equality_expression NE_OP relational_expression
-- On AND_OP reduce production equality_expression -> equality_expression NE_OP relational_expression
-- On AMP reduce production equality_expression -> equality_expression NE_OP relational_expression

State 104:
equality_expression -> equality_expression EQ_OP . relational_expression [ SEMICOLON RSQUARE RPAR RBRACE QUESTION PIPE OR_OP NE_OP HAT EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
-- On TILDE shift to state 28
-- On STRING_LITERAL shift to state 29
-- On STAR shift to state 30
-- On SIZEOF shift to state 31
-- On PLUS shift to state 32
-- On MINUS shift to state 33
-- On LPAR shift to state 36
-- On INC_OP shift to state 39
-- On IDENTIFIER shift to state 41
-- On EXL shift to state 42
-- On DEC_OP shift to state 43
-- On CONSTANT shift to state 44
-- On AMP shift to state 45
-- On unary_operator shift to state 46
-- On unary_expression shift to state 47
-- On shift_expression shift to state 66
-- On relational_expression shift to state 105
-- On primary_expression shift to state 48
-- On postfix_expression shift to state 49
-- On multiplicative_expression shift to state 68
-- On cast_expression shift to state 75
-- On additive_expression shift to state 86

State 105:
equality_expression -> equality_expression EQ_OP relational_expression . [ SEMICOLON RSQUARE RPAR RBRACE QUESTION PIPE OR_OP NE_OP HAT EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
relational_expression -> relational_expression . LT shift_expression [ SEMICOLON RSQUARE RPAR RBRACE QUESTION PIPE OR_OP NE_OP LT LE_OP HAT GT GE_OP EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
relational_expression -> relational_expression . GT shift_expression [ SEMICOLON RSQUARE RPAR RBRACE QUESTION PIPE OR_OP NE_OP LT LE_OP HAT GT GE_OP EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
relational_expression -> relational_expression . LE_OP shift_expression [ SEMICOLON RSQUARE RPAR RBRACE QUESTION PIPE OR_OP NE_OP LT LE_OP HAT GT GE_OP EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
relational_expression -> relational_expression . GE_OP shift_expression [ SEMICOLON RSQUARE RPAR RBRACE QUESTION PIPE OR_OP NE_OP LT LE_OP HAT GT GE_OP EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
-- On LT shift to state 84
-- On LE_OP shift to state 87
-- On GT shift to state 89
-- On GE_OP shift to state 91
-- On SEMICOLON reduce production equality_expression -> equality_expression EQ_OP relational_expression
-- On RSQUARE reduce production equality_expression -> equality_expression EQ_OP relational_expression
-- On RPAR reduce production equality_expression -> equality_expression EQ_OP relational_expression
-- On RBRACE reduce production equality_expression -> equality_expression EQ_OP relational_expression
-- On QUESTION reduce production equality_expression -> equality_expression EQ_OP relational_expression
-- On PIPE reduce production equality_expression -> equality_expression EQ_OP relational_expression
-- On OR_OP reduce production equality_expression -> equality_expression EQ_OP relational_expression
-- On NE_OP reduce production equality_expression -> equality_expression EQ_OP relational_expression
-- On HAT reduce production equality_expression -> equality_expression EQ_OP relational_expression
-- On EQ_OP reduce production equality_expression -> equality_expression EQ_OP relational_expression
-- On COMMA reduce production equality_expression -> equality_expression EQ_OP relational_expression
-- On COLON reduce production equality_expression -> equality_expression EQ_OP relational_expression
-- On ATTRIBUTE reduce production equality_expression -> equality_expression EQ_OP relational_expression
-- On AND_OP reduce production equality_expression -> equality_expression EQ_OP relational_expression
-- On AMP reduce production equality_expression -> equality_expression EQ_OP relational_expression

State 106:
and_expression -> and_expression . AMP equality_expression [ SEMICOLON RSQUARE RPAR RBRACE QUESTION PIPE OR_OP HAT COMMA COLON ATTRIBUTE AND_OP AMP ]
exclusive_or_expression -> exclusive_or_expression HAT and_expression . [ SEMICOLON RSQUARE RPAR RBRACE QUESTION PIPE OR_OP HAT COMMA COLON ATTRIBUTE AND_OP ]
-- On AMP shift to state 107
-- On SEMICOLON reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On RSQUARE reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On RPAR reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On RBRACE reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On QUESTION reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On PIPE reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On OR_OP reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On HAT reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On COMMA reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On COLON reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On ATTRIBUTE reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On AND_OP reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression

State 107:
and_expression -> and_expression AMP . equality_expression [ SEMICOLON RSQUARE RPAR RBRACE QUESTION PIPE OR_OP HAT COMMA COLON ATTRIBUTE AND_OP AMP ]
-- On TILDE shift to state 28
-- On STRING_LITERAL shift to state 29
-- On STAR shift to state 30
-- On SIZEOF shift to state 31
-- On PLUS shift to state 32
-- On MINUS shift to state 33
-- On LPAR shift to state 36
-- On INC_OP shift to state 39
-- On IDENTIFIER shift to state 41
-- On EXL shift to state 42
-- On DEC_OP shift to state 43
-- On CONSTANT shift to state 44
-- On AMP shift to state 45
-- On unary_operator shift to state 46
-- On unary_expression shift to state 47
-- On shift_expression shift to state 66
-- On relational_expression shift to state 83
-- On primary_expression shift to state 48
-- On postfix_expression shift to state 49
-- On multiplicative_expression shift to state 68
-- On equality_expression shift to state 108
-- On cast_expression shift to state 75
-- On additive_expression shift to state 86

State 108:
and_expression -> and_expression AMP equality_expression . [ SEMICOLON RSQUARE RPAR RBRACE QUESTION PIPE OR_OP HAT COMMA COLON ATTRIBUTE AND_OP AMP ]
equality_expression -> equality_expression . EQ_OP relational_expression [ SEMICOLON RSQUARE RPAR RBRACE QUESTION PIPE OR_OP NE_OP HAT EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
equality_expression -> equality_expression . NE_OP relational_expression [ SEMICOLON RSQUARE RPAR RBRACE QUESTION PIPE OR_OP NE_OP HAT EQ_OP COMMA COLON ATTRIBUTE AND_OP AMP ]
-- On NE_OP shift to state 102
-- On EQ_OP shift to state 104
-- On SEMICOLON reduce production and_expression -> and_expression AMP equality_expression
-- On RSQUARE reduce production and_expression -> and_expression AMP equality_expression
-- On RPAR reduce production and_expression -> and_expression AMP equality_expression
-- On RBRACE reduce production and_expression -> and_expression AMP equality_expression
-- On QUESTION reduce production and_expression -> and_expression AMP equality_expression
-- On PIPE reduce production and_expression -> and_expression AMP equality_expression
-- On OR_OP reduce production and_expression -> and_expression AMP equality_expression
-- On HAT reduce production and_expression -> and_expression AMP equality_expression
-- On COMMA reduce production and_expression -> and_expression AMP equality_expression
-- On COLON reduce production and_expression -> and_expression AMP equality_expression
-- On ATTRIBUTE reduce production and_expression -> and_expression AMP equality_expression
-- On AND_OP reduce production and_expression -> and_expression AMP equality_expression
-- On AMP reduce production and_expression -> and_expression AMP equality_expression

State 109:
and_expression -> and_expression . AMP equality_expression [ SEMICOLON RSQUARE RPAR RBRACE QUESTION PIPE OR_OP HAT COMMA COLON ATTRIBUTE AND_OP AMP ]
exclusive_or_expression -> and_expression . [ SEMICOLON RSQUARE RPAR RBRACE QUESTION PIPE OR_OP HAT COMMA COLON ATTRIBUTE AND_OP ]
-- On AMP shift to state 107
-- On SEMICOLON reduce production exclusive_or_expression -> and_expression
-- On RSQUARE reduce production exclusive_or_expression -> and_expression
-- On RPAR reduce production exclusive_or_expression -> and_expression
-- On RBRACE reduce production exclusive_or_expression -> and_expression
-- On QUESTION reduce production exclusive_or_expression -> and_expression
-- On PIPE reduce production exclusive_or_expression -> and_expression
-- On OR_OP reduce production exclusive_or_expression -> and_expression
-- On HAT reduce production exclusive_or_expression -> and_expression
-- On COMMA reduce production exclusive_or_expression -> and_expression
-- On COLON reduce production exclusive_or_expression -> and_expression
-- On ATTRIBUTE reduce production exclusive_or_expression -> and_expression
-- On AND_OP reduce production exclusive_or_expression -> and_expression

State 110:
exclusive_or_expression -> exclusive_or_expression . HAT and_expression [ SEMICOLON RSQUARE RPAR RBRACE QUESTION PIPE OR_OP HAT COMMA COLON ATTRIBUTE AND_OP ]
inclusive_or_expression -> exclusive_or_expression . [ SEMICOLON RSQUARE RPAR RBRACE QUESTION PIPE OR_OP COMMA COLON ATTRIBUTE AND_OP ]
-- On HAT shift to state 100
-- On SEMICOLON reduce production inclusive_or_expression -> exclusive_or_expression
-- On RSQUARE reduce production inclusive_or_expression -> exclusive_or_expression
-- On RPAR reduce production inclusive_or_expression -> exclusive_or_expression
-- On RBRACE reduce production inclusive_or_expression -> exclusive_or_expression
-- On QUESTION reduce production inclusive_or_expression -> exclusive_or_expression
-- On PIPE reduce production inclusive_or_expression -> exclusive_or_expression
-- On OR_OP reduce production inclusive_or_expression -> exclusive_or_expression
-- On COMMA reduce production inclusive_or_expression -> exclusive_or_expression
-- On COLON reduce production inclusive_or_expression -> exclusive_or_expression
-- On ATTRIBUTE reduce production inclusive_or_expression -> exclusive_or_expression
-- On AND_OP reduce production inclusive_or_expression -> exclusive_or_expression

State 111:
inclusive_or_expression -> inclusive_or_expression . PIPE exclusive_or_expression [ SEMICOLON RSQUARE RPAR RBRACE QUESTION PIPE OR_OP COMMA COLON ATTRIBUTE AND_OP ]
logical_and_expression -> inclusive_or_expression . [ SEMICOLON RSQUARE RPAR RBRACE QUESTION OR_OP COMMA COLON ATTRIBUTE AND_OP ]
-- On PIPE shift to state 98
-- On SEMICOLON reduce production logical_and_expression -> inclusive_or_expression
-- On RSQUARE reduce production logical_and_expression -> inclusive_or_expression
-- On RPAR reduce production logical_and_expression -> inclusive_or_expression
-- On RBRACE reduce production logical_and_expression -> inclusive_or_expression
-- On QUESTION reduce production logical_and_expression -> inclusive_or_expression
-- On OR_OP reduce production logical_and_expression -> inclusive_or_expression
-- On COMMA reduce production logical_and_expression -> inclusive_or_expression
-- On COLON reduce production logical_and_expression -> inclusive_or_expression
-- On ATTRIBUTE reduce production logical_and_expression -> inclusive_or_expression
-- On AND_OP reduce production logical_and_expression -> inclusive_or_expression

State 112:
conditional_expression -> logical_or_expression QUESTION expression . COLON conditional_expression [ SEMICOLON RSQUARE RPAR RBRACE COMMA COLON ATTRIBUTE ]
expression -> expression . COMMA assignment_expression [ COMMA COLON ]
-- On COMMA shift to state 113
-- On COLON shift to state 116

State 113:
expression -> expression COMMA . assignment_expression [ SEMICOLON RSQUARE RPAR COMMA COLON ]
-- On TILDE shift to state 28
-- On STRING_LITERAL shift to state 29
-- On STAR shift to state 30
-- On SIZEOF shift to state 31
-- On PLUS shift to state 32
-- On MINUS shift to state 33
-- On LPAR shift to state 36
-- On INC_OP shift to state 39
-- On IDENTIFIER shift to state 41
-- On EXL shift to state 42
-- On DEC_OP shift to state 43
-- On CONSTANT shift to state 44
-- On AMP shift to state 45
-- On unary_operator shift to state 46
-- On unary_expression shift to state 53
-- On shift_expression shift to state 66
-- On relational_expression shift to state 83
-- On primary_expression shift to state 48
-- On postfix_expression shift to state 49
-- On multiplicative_expression shift to state 68
-- On logical_or_expression shift to state 93
-- On logical_and_expression shift to state 95
-- On inclusive_or_expression shift to state 111
-- On exclusive_or_expression shift to state 110
-- On equality_expression shift to state 101
-- On conditional_expression shift to state 114
-- On cast_expression shift to state 75
-- On assignment_expression shift to state 115
-- On and_expression shift to state 109
-- On additive_expression shift to state 86

State 114:
assignment_expression -> conditional_expression . [ SEMICOLON RSQUARE RPAR RBRACE COMMA COLON ATTRIBUTE ]
-- On SEMICOLON reduce production assignment_expression -> conditional_expression
-- On RSQUARE reduce production assignment_expression -> conditional_expression
-- On RPAR reduce production assignment_expression -> conditional_expression
-- On RBRACE reduce production assignment_expression -> conditional_expression
-- On COMMA reduce production assignment_expression -> conditional_expression
-- On COLON reduce production assignment_expression -> conditional_expression
-- On ATTRIBUTE reduce production assignment_expression -> conditional_expression

State 115:
expression -> expression COMMA assignment_expression . [ SEMICOLON RSQUARE RPAR COMMA COLON ]
-- On SEMICOLON reduce production expression -> expression COMMA assignment_expression
-- On RSQUARE reduce production expression -> expression COMMA assignment_expression
-- On RPAR reduce production expression -> expression COMMA assignment_expression
-- On COMMA reduce production expression -> expression COMMA assignment_expression
-- On COLON reduce production expression -> expression COMMA assignment_expression

State 116:
conditional_expression -> logical_or_expression QUESTION expression COLON . conditional_expression [ SEMICOLON RSQUARE RPAR RBRACE COMMA COLON ATTRIBUTE ]
-- On TILDE shift to state 28
-- On STRING_LITERAL shift to state 29
-- On STAR shift to state 30
-- On SIZEOF shift to state 31
-- On PLUS shift to state 32
-- On MINUS shift to state 33
-- On LPAR shift to state 36
-- On INC_OP shift to state 39
-- On IDENTIFIER shift to state 41
-- On EXL shift to state 42
-- On DEC_OP shift to state 43
-- On CONSTANT shift to state 44
-- On AMP shift to state 45
-- On unary_operator shift to state 46
-- On unary_expression shift to state 47
-- On shift_expression shift to state 66
-- On relational_expression shift to state 83
-- On primary_expression shift to state 48
-- On postfix_expression shift to state 49
-- On multiplicative_expression shift to state 68
-- On logical_or_expression shift to state 93
-- On logical_and_expression shift to state 95
-- On inclusive_or_expression shift to state 111
-- On exclusive_or_expression shift to state 110
-- On equality_expression shift to state 101
-- On conditional_expression shift to state 117
-- On cast_expression shift to state 75
-- On and_expression shift to state 109
-- On additive_expression shift to state 86

State 117:
conditional_expression -> logical_or_expression QUESTION expression COLON conditional_expression . [ SEMICOLON RSQUARE RPAR RBRACE COMMA COLON ATTRIBUTE ]
-- On SEMICOLON reduce production conditional_expression -> logical_or_expression QUESTION expression COLON conditional_expression
-- On RSQUARE reduce production conditional_expression -> logical_or_expression QUESTION expression COLON conditional_expression
-- On RPAR reduce production conditional_expression -> logical_or_expression QUESTION expression COLON conditional_expression
-- On RBRACE reduce production conditional_expression -> logical_or_expression QUESTION expression COLON conditional_expression
-- On COMMA reduce production conditional_expression -> logical_or_expression QUESTION expression COLON conditional_expression
-- On COLON reduce production conditional_expression -> logical_or_expression QUESTION expression COLON conditional_expression
-- On ATTRIBUTE reduce production conditional_expression -> logical_or_expression QUESTION expression COLON conditional_expression

State 118:
expression -> assignment_expression . [ SEMICOLON RSQUARE RPAR COMMA COLON ]
-- On SEMICOLON reduce production expression -> assignment_expression
-- On RSQUARE reduce production expression -> assignment_expression
-- On RPAR reduce production expression -> assignment_expression
-- On COMMA reduce production expression -> assignment_expression
-- On COLON reduce production expression -> assignment_expression

State 119:
logical_or_expression -> logical_or_expression OR_OP . logical_and_expression [ SEMICOLON RSQUARE RPAR RBRACE QUESTION OR_OP COMMA COLON ATTRIBUTE ]
-- On TILDE shift to state 28
-- On STRING_LITERAL shift to state 29
-- On STAR shift to state 30
-- On SIZEOF shift to state 31
-- On PLUS shift to state 32
-- On MINUS shift to state 33
-- On LPAR shift to state 36
-- On INC_OP shift to state 39
-- On IDENTIFIER shift to state 41
-- On EXL shift to state 42
-- On DEC_OP shift to state 43
-- On CONSTANT shift to state 44
-- On AMP shift to state 45
-- On unary_operator shift to state 46
-- On unary_expression shift to state 47
-- On shift_expression shift to state 66
-- On relational_expression shift to state 83
-- On primary_expression shift to state 48
-- On postfix_expression shift to state 49
-- On multiplicative_expression shift to state 68
-- On logical_and_expression shift to state 120
-- On inclusive_or_expression shift to state 111
-- On exclusive_or_expression shift to state 110
-- On equality_expression shift to state 101
-- On cast_expression shift to state 75
-- On and_expression shift to state 109
-- On additive_expression shift to state 86

State 120:
logical_and_expression -> logical_and_expression . AND_OP inclusive_or_expression [ SEMICOLON RSQUARE RPAR RBRACE QUESTION OR_OP COMMA COLON ATTRIBUTE AND_OP ]
logical_or_expression -> logical_or_expression OR_OP logical_and_expression . [ SEMICOLON RSQUARE RPAR RBRACE QUESTION OR_OP COMMA COLON ATTRIBUTE ]
-- On AND_OP shift to state 96
-- On SEMICOLON reduce production logical_or_expression -> logical_or_expression OR_OP logical_and_expression
-- On RSQUARE reduce production logical_or_expression -> logical_or_expression OR_OP logical_and_expression
-- On RPAR reduce production logical_or_expression -> logical_or_expression OR_OP logical_and_expression
-- On RBRACE reduce production logical_or_expression -> logical_or_expression OR_OP logical_and_expression
-- On QUESTION reduce production logical_or_expression -> logical_or_expression OR_OP logical_and_expression
-- On OR_OP reduce production logical_or_expression -> logical_or_expression OR_OP logical_and_expression
-- On COMMA reduce production logical_or_expression -> logical_or_expression OR_OP logical_and_expression
-- On COLON reduce production logical_or_expression -> logical_or_expression OR_OP logical_and_expression
-- On ATTRIBUTE reduce production logical_or_expression -> logical_or_expression OR_OP logical_and_expression

State 121:
assignment_expression -> unary_expression assignment_operator assignment_expression . [ SEMICOLON RSQUARE RPAR RBRACE COMMA COLON ATTRIBUTE ]
-- On SEMICOLON reduce production assignment_expression -> unary_expression assignment_operator assignment_expression
-- On RSQUARE reduce production assignment_expression -> unary_expression assignment_operator assignment_expression
-- On RPAR reduce production assignment_expression -> unary_expression assignment_operator assignment_expression
-- On RBRACE reduce production assignment_expression -> unary_expression assignment_operator assignment_expression
-- On COMMA reduce production assignment_expression -> unary_expression assignment_operator assignment_expression
-- On COLON reduce production assignment_expression -> unary_expression assignment_operator assignment_expression
-- On ATTRIBUTE reduce production assignment_expression -> unary_expression assignment_operator assignment_expression

State 122:
expression -> expression . COMMA assignment_expression [ RSQUARE COMMA ]
postfix_expression -> postfix_expression LSQUARE expression . RSQUARE [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RSQUARE RPAR RIGHT_OP RIGHT_ASSIGN RBRACE QUESTION PTR_OP PLUS PIPE PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LSQUARE LPAR LE_OP LEFT_OP LEFT_ASSIGN INC_OP HAT GT GE_OP EQ_OP EQUAL DOT DIV_ASSIGN DEC_OP COMMA COLON ATTRIBUTE AND_OP AND_ASSIGN AMP ADD_ASSIGN ]
-- On RSQUARE shift to state 123
-- On COMMA shift to state 113

State 123:
postfix_expression -> postfix_expression LSQUARE expression RSQUARE . [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RSQUARE RPAR RIGHT_OP RIGHT_ASSIGN RBRACE QUESTION PTR_OP PLUS PIPE PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LSQUARE LPAR LE_OP LEFT_OP LEFT_ASSIGN INC_OP HAT GT GE_OP EQ_OP EQUAL DOT DIV_ASSIGN DEC_OP COMMA COLON ATTRIBUTE AND_OP AND_ASSIGN AMP ADD_ASSIGN ]
-- On XOR_ASSIGN reduce production postfix_expression -> postfix_expression LSQUARE expression RSQUARE
-- On SUB_ASSIGN reduce production postfix_expression -> postfix_expression LSQUARE expression RSQUARE
-- On STAR reduce production postfix_expression -> postfix_expression LSQUARE expression RSQUARE
-- On SLASH reduce production postfix_expression -> postfix_expression LSQUARE expression RSQUARE
-- On SEMICOLON reduce production postfix_expression -> postfix_expression LSQUARE expression RSQUARE
-- On RSQUARE reduce production postfix_expression -> postfix_expression LSQUARE expression RSQUARE
-- On RPAR reduce production postfix_expression -> postfix_expression LSQUARE expression RSQUARE
-- On RIGHT_OP reduce production postfix_expression -> postfix_expression LSQUARE expression RSQUARE
-- On RIGHT_ASSIGN reduce production postfix_expression -> postfix_expression LSQUARE expression RSQUARE
-- On RBRACE reduce production postfix_expression -> postfix_expression LSQUARE expression RSQUARE
-- On QUESTION reduce production postfix_expression -> postfix_expression LSQUARE expression RSQUARE
-- On PTR_OP reduce production postfix_expression -> postfix_expression LSQUARE expression RSQUARE
-- On PLUS reduce production postfix_expression -> postfix_expression LSQUARE expression RSQUARE
-- On PIPE reduce production postfix_expression -> postfix_expression LSQUARE expression RSQUARE
-- On PERCENT reduce production postfix_expression -> postfix_expression LSQUARE expression RSQUARE
-- On OR_OP reduce production postfix_expression -> postfix_expression LSQUARE expression RSQUARE
-- On OR_ASSIGN reduce production postfix_expression -> postfix_expression LSQUARE expression RSQUARE
-- On NE_OP reduce production postfix_expression -> postfix_expression LSQUARE expression RSQUARE
-- On MUL_ASSIGN reduce production postfix_expression -> postfix_expression LSQUARE expression RSQUARE
-- On MOD_ASSIGN reduce production postfix_expression -> postfix_expression LSQUARE expression RSQUARE
-- On MINUS reduce production postfix_expression -> postfix_expression LSQUARE expression RSQUARE
-- On LT reduce production postfix_expression -> postfix_expression LSQUARE expression RSQUARE
-- On LSQUARE reduce production postfix_expression -> postfix_expression LSQUARE expression RSQUARE
-- On LPAR reduce production postfix_expression -> postfix_expression LSQUARE expression RSQUARE
-- On LE_OP reduce production postfix_expression -> postfix_expression LSQUARE expression RSQUARE
-- On LEFT_OP reduce production postfix_expression -> postfix_expression LSQUARE expression RSQUARE
-- On LEFT_ASSIGN reduce production postfix_expression -> postfix_expression LSQUARE expression RSQUARE
-- On INC_OP reduce production postfix_expression -> postfix_expression LSQUARE expression RSQUARE
-- On HAT reduce production postfix_expression -> postfix_expression LSQUARE expression RSQUARE
-- On GT reduce production postfix_expression -> postfix_expression LSQUARE expression RSQUARE
-- On GE_OP reduce production postfix_expression -> postfix_expression LSQUARE expression RSQUARE
-- On EQ_OP reduce production postfix_expression -> postfix_expression LSQUARE expression RSQUARE
-- On EQUAL reduce production postfix_expression -> postfix_expression LSQUARE expression RSQUARE
-- On DOT reduce production postfix_expression -> postfix_expression LSQUARE expression RSQUARE
-- On DIV_ASSIGN reduce production postfix_expression -> postfix_expression LSQUARE expression RSQUARE
-- On DEC_OP reduce production postfix_expression -> postfix_expression LSQUARE expression RSQUARE
-- On COMMA reduce production postfix_expression -> postfix_expression LSQUARE expression RSQUARE
-- On COLON reduce production postfix_expression -> postfix_expression LSQUARE expression RSQUARE
-- On ATTRIBUTE reduce production postfix_expression -> postfix_expression LSQUARE expression RSQUARE
-- On AND_OP reduce production postfix_expression -> postfix_expression LSQUARE expression RSQUARE
-- On AND_ASSIGN reduce production postfix_expression -> postfix_expression LSQUARE expression RSQUARE
-- On AMP reduce production postfix_expression -> postfix_expression LSQUARE expression RSQUARE
-- On ADD_ASSIGN reduce production postfix_expression -> postfix_expression LSQUARE expression RSQUARE

State 124:
postfix_expression -> postfix_expression LPAR . RPAR [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RSQUARE RPAR RIGHT_OP RIGHT_ASSIGN RBRACE QUESTION PTR_OP PLUS PIPE PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LSQUARE LPAR LE_OP LEFT_OP LEFT_ASSIGN INC_OP HAT GT GE_OP EQ_OP EQUAL DOT DIV_ASSIGN DEC_OP COMMA COLON ATTRIBUTE AND_OP AND_ASSIGN AMP ADD_ASSIGN ]
postfix_expression -> postfix_expression LPAR . argument_expression_list RPAR [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RSQUARE RPAR RIGHT_OP RIGHT_ASSIGN RBRACE QUESTION PTR_OP PLUS PIPE PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LSQUARE LPAR LE_OP LEFT_OP LEFT_ASSIGN INC_OP HAT GT GE_OP EQ_OP EQUAL DOT DIV_ASSIGN DEC_OP COMMA COLON ATTRIBUTE AND_OP AND_ASSIGN AMP ADD_ASSIGN ]
-- On TILDE shift to state 28
-- On STRING_LITERAL shift to state 29
-- On STAR shift to state 30
-- On SIZEOF shift to state 31
-- On RPAR shift to state 125
-- On PLUS shift to state 32
-- On MINUS shift to state 33
-- On LPAR shift to state 36
-- On INC_OP shift to state 39
-- On IDENTIFIER shift to state 41
-- On EXL shift to state 42
-- On DEC_OP shift to state 43
-- On CONSTANT shift to state 44
-- On AMP shift to state 45
-- On unary_operator shift to state 46
-- On unary_expression shift to state 53
-- On shift_expression shift to state 66
-- On relational_expression shift to state 83
-- On primary_expression shift to state 48
-- On postfix_expression shift to state 49
-- On multiplicative_expression shift to state 68
-- On logical_or_expression shift to state 93
-- On logical_and_expression shift to state 95
-- On inclusive_or_expression shift to state 111
-- On exclusive_or_expression shift to state 110
-- On equality_expression shift to state 101
-- On conditional_expression shift to state 114
-- On cast_expression shift to state 75
-- On assignment_expression shift to state 126
-- On argument_expression_list shift to state 127
-- On and_expression shift to state 109
-- On additive_expression shift to state 86

State 125:
postfix_expression -> postfix_expression LPAR RPAR . [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RSQUARE RPAR RIGHT_OP RIGHT_ASSIGN RBRACE QUESTION PTR_OP PLUS PIPE PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LSQUARE LPAR LE_OP LEFT_OP LEFT_ASSIGN INC_OP HAT GT GE_OP EQ_OP EQUAL DOT DIV_ASSIGN DEC_OP COMMA COLON ATTRIBUTE AND_OP AND_ASSIGN AMP ADD_ASSIGN ]
-- On XOR_ASSIGN reduce production postfix_expression -> postfix_expression LPAR RPAR
-- On SUB_ASSIGN reduce production postfix_expression -> postfix_expression LPAR RPAR
-- On STAR reduce production postfix_expression -> postfix_expression LPAR RPAR
-- On SLASH reduce production postfix_expression -> postfix_expression LPAR RPAR
-- On SEMICOLON reduce production postfix_expression -> postfix_expression LPAR RPAR
-- On RSQUARE reduce production postfix_expression -> postfix_expression LPAR RPAR
-- On RPAR reduce production postfix_expression -> postfix_expression LPAR RPAR
-- On RIGHT_OP reduce production postfix_expression -> postfix_expression LPAR RPAR
-- On RIGHT_ASSIGN reduce production postfix_expression -> postfix_expression LPAR RPAR
-- On RBRACE reduce production postfix_expression -> postfix_expression LPAR RPAR
-- On QUESTION reduce production postfix_expression -> postfix_expression LPAR RPAR
-- On PTR_OP reduce production postfix_expression -> postfix_expression LPAR RPAR
-- On PLUS reduce production postfix_expression -> postfix_expression LPAR RPAR
-- On PIPE reduce production postfix_expression -> postfix_expression LPAR RPAR
-- On PERCENT reduce production postfix_expression -> postfix_expression LPAR RPAR
-- On OR_OP reduce production postfix_expression -> postfix_expression LPAR RPAR
-- On OR_ASSIGN reduce production postfix_expression -> postfix_expression LPAR RPAR
-- On NE_OP reduce production postfix_expression -> postfix_expression LPAR RPAR
-- On MUL_ASSIGN reduce production postfix_expression -> postfix_expression LPAR RPAR
-- On MOD_ASSIGN reduce production postfix_expression -> postfix_expression LPAR RPAR
-- On MINUS reduce production postfix_expression -> postfix_expression LPAR RPAR
-- On LT reduce production postfix_expression -> postfix_expression LPAR RPAR
-- On LSQUARE reduce production postfix_expression -> postfix_expression LPAR RPAR
-- On LPAR reduce production postfix_expression -> postfix_expression LPAR RPAR
-- On LE_OP reduce production postfix_expression -> postfix_expression LPAR RPAR
-- On LEFT_OP reduce production postfix_expression -> postfix_expression LPAR RPAR
-- On LEFT_ASSIGN reduce production postfix_expression -> postfix_expression LPAR RPAR
-- On INC_OP reduce production postfix_expression -> postfix_expression LPAR RPAR
-- On HAT reduce production postfix_expression -> postfix_expression LPAR RPAR
-- On GT reduce production postfix_expression -> postfix_expression LPAR RPAR
-- On GE_OP reduce production postfix_expression -> postfix_expression LPAR RPAR
-- On EQ_OP reduce production postfix_expression -> postfix_expression LPAR RPAR
-- On EQUAL reduce production postfix_expression -> postfix_expression LPAR RPAR
-- On DOT reduce production postfix_expression -> postfix_expression LPAR RPAR
-- On DIV_ASSIGN reduce production postfix_expression -> postfix_expression LPAR RPAR
-- On DEC_OP reduce production postfix_expression -> postfix_expression LPAR RPAR
-- On COMMA reduce production postfix_expression -> postfix_expression LPAR RPAR
-- On COLON reduce production postfix_expression -> postfix_expression LPAR RPAR
-- On ATTRIBUTE reduce production postfix_expression -> postfix_expression LPAR RPAR
-- On AND_OP reduce production postfix_expression -> postfix_expression LPAR RPAR
-- On AND_ASSIGN reduce production postfix_expression -> postfix_expression LPAR RPAR
-- On AMP reduce production postfix_expression -> postfix_expression LPAR RPAR
-- On ADD_ASSIGN reduce production postfix_expression -> postfix_expression LPAR RPAR

State 126:
argument_expression_list -> assignment_expression . [ RPAR COMMA ]
-- On RPAR reduce production argument_expression_list -> assignment_expression
-- On COMMA reduce production argument_expression_list -> assignment_expression

State 127:
argument_expression_list -> argument_expression_list . COMMA assignment_expression [ RPAR COMMA ]
postfix_expression -> postfix_expression LPAR argument_expression_list . RPAR [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RSQUARE RPAR RIGHT_OP RIGHT_ASSIGN RBRACE QUESTION PTR_OP PLUS PIPE PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LSQUARE LPAR LE_OP LEFT_OP LEFT_ASSIGN INC_OP HAT GT GE_OP EQ_OP EQUAL DOT DIV_ASSIGN DEC_OP COMMA COLON ATTRIBUTE AND_OP AND_ASSIGN AMP ADD_ASSIGN ]
-- On RPAR shift to state 128
-- On COMMA shift to state 129

State 128:
postfix_expression -> postfix_expression LPAR argument_expression_list RPAR . [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RSQUARE RPAR RIGHT_OP RIGHT_ASSIGN RBRACE QUESTION PTR_OP PLUS PIPE PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LSQUARE LPAR LE_OP LEFT_OP LEFT_ASSIGN INC_OP HAT GT GE_OP EQ_OP EQUAL DOT DIV_ASSIGN DEC_OP COMMA COLON ATTRIBUTE AND_OP AND_ASSIGN AMP ADD_ASSIGN ]
-- On XOR_ASSIGN reduce production postfix_expression -> postfix_expression LPAR argument_expression_list RPAR
-- On SUB_ASSIGN reduce production postfix_expression -> postfix_expression LPAR argument_expression_list RPAR
-- On STAR reduce production postfix_expression -> postfix_expression LPAR argument_expression_list RPAR
-- On SLASH reduce production postfix_expression -> postfix_expression LPAR argument_expression_list RPAR
-- On SEMICOLON reduce production postfix_expression -> postfix_expression LPAR argument_expression_list RPAR
-- On RSQUARE reduce production postfix_expression -> postfix_expression LPAR argument_expression_list RPAR
-- On RPAR reduce production postfix_expression -> postfix_expression LPAR argument_expression_list RPAR
-- On RIGHT_OP reduce production postfix_expression -> postfix_expression LPAR argument_expression_list RPAR
-- On RIGHT_ASSIGN reduce production postfix_expression -> postfix_expression LPAR argument_expression_list RPAR
-- On RBRACE reduce production postfix_expression -> postfix_expression LPAR argument_expression_list RPAR
-- On QUESTION reduce production postfix_expression -> postfix_expression LPAR argument_expression_list RPAR
-- On PTR_OP reduce production postfix_expression -> postfix_expression LPAR argument_expression_list RPAR
-- On PLUS reduce production postfix_expression -> postfix_expression LPAR argument_expression_list RPAR
-- On PIPE reduce production postfix_expression -> postfix_expression LPAR argument_expression_list RPAR
-- On PERCENT reduce production postfix_expression -> postfix_expression LPAR argument_expression_list RPAR
-- On OR_OP reduce production postfix_expression -> postfix_expression LPAR argument_expression_list RPAR
-- On OR_ASSIGN reduce production postfix_expression -> postfix_expression LPAR argument_expression_list RPAR
-- On NE_OP reduce production postfix_expression -> postfix_expression LPAR argument_expression_list RPAR
-- On MUL_ASSIGN reduce production postfix_expression -> postfix_expression LPAR argument_expression_list RPAR
-- On MOD_ASSIGN reduce production postfix_expression -> postfix_expression LPAR argument_expression_list RPAR
-- On MINUS reduce production postfix_expression -> postfix_expression LPAR argument_expression_list RPAR
-- On LT reduce production postfix_expression -> postfix_expression LPAR argument_expression_list RPAR
-- On LSQUARE reduce production postfix_expression -> postfix_expression LPAR argument_expression_list RPAR
-- On LPAR reduce production postfix_expression -> postfix_expression LPAR argument_expression_list RPAR
-- On LE_OP reduce production postfix_expression -> postfix_expression LPAR argument_expression_list RPAR
-- On LEFT_OP reduce production postfix_expression -> postfix_expression LPAR argument_expression_list RPAR
-- On LEFT_ASSIGN reduce production postfix_expression -> postfix_expression LPAR argument_expression_list RPAR
-- On INC_OP reduce production postfix_expression -> postfix_expression LPAR argument_expression_list RPAR
-- On HAT reduce production postfix_expression -> postfix_expression LPAR argument_expression_list RPAR
-- On GT reduce production postfix_expression -> postfix_expression LPAR argument_expression_list RPAR
-- On GE_OP reduce production postfix_expression -> postfix_expression LPAR argument_expression_list RPAR
-- On EQ_OP reduce production postfix_expression -> postfix_expression LPAR argument_expression_list RPAR
-- On EQUAL reduce production postfix_expression -> postfix_expression LPAR argument_expression_list RPAR
-- On DOT reduce production postfix_expression -> postfix_expression LPAR argument_expression_list RPAR
-- On DIV_ASSIGN reduce production postfix_expression -> postfix_expression LPAR argument_expression_list RPAR
-- On DEC_OP reduce production postfix_expression -> postfix_expression LPAR argument_expression_list RPAR
-- On COMMA reduce production postfix_expression -> postfix_expression LPAR argument_expression_list RPAR
-- On COLON reduce production postfix_expression -> postfix_expression LPAR argument_expression_list RPAR
-- On ATTRIBUTE reduce production postfix_expression -> postfix_expression LPAR argument_expression_list RPAR
-- On AND_OP reduce production postfix_expression -> postfix_expression LPAR argument_expression_list RPAR
-- On AND_ASSIGN reduce production postfix_expression -> postfix_expression LPAR argument_expression_list RPAR
-- On AMP reduce production postfix_expression -> postfix_expression LPAR argument_expression_list RPAR
-- On ADD_ASSIGN reduce production postfix_expression -> postfix_expression LPAR argument_expression_list RPAR

State 129:
argument_expression_list -> argument_expression_list COMMA . assignment_expression [ RPAR COMMA ]
-- On TILDE shift to state 28
-- On STRING_LITERAL shift to state 29
-- On STAR shift to state 30
-- On SIZEOF shift to state 31
-- On PLUS shift to state 32
-- On MINUS shift to state 33
-- On LPAR shift to state 36
-- On INC_OP shift to state 39
-- On IDENTIFIER shift to state 41
-- On EXL shift to state 42
-- On DEC_OP shift to state 43
-- On CONSTANT shift to state 44
-- On AMP shift to state 45
-- On unary_operator shift to state 46
-- On unary_expression shift to state 53
-- On shift_expression shift to state 66
-- On relational_expression shift to state 83
-- On primary_expression shift to state 48
-- On postfix_expression shift to state 49
-- On multiplicative_expression shift to state 68
-- On logical_or_expression shift to state 93
-- On logical_and_expression shift to state 95
-- On inclusive_or_expression shift to state 111
-- On exclusive_or_expression shift to state 110
-- On equality_expression shift to state 101
-- On conditional_expression shift to state 114
-- On cast_expression shift to state 75
-- On assignment_expression shift to state 130
-- On and_expression shift to state 109
-- On additive_expression shift to state 86

State 130:
argument_expression_list -> argument_expression_list COMMA assignment_expression . [ RPAR COMMA ]
-- On RPAR reduce production argument_expression_list -> argument_expression_list COMMA assignment_expression
-- On COMMA reduce production argument_expression_list -> argument_expression_list COMMA assignment_expression

State 131:
postfix_expression -> postfix_expression INC_OP . [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RSQUARE RPAR RIGHT_OP RIGHT_ASSIGN RBRACE QUESTION PTR_OP PLUS PIPE PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LSQUARE LPAR LE_OP LEFT_OP LEFT_ASSIGN INC_OP HAT GT GE_OP EQ_OP EQUAL DOT DIV_ASSIGN DEC_OP COMMA COLON ATTRIBUTE AND_OP AND_ASSIGN AMP ADD_ASSIGN ]
-- On XOR_ASSIGN reduce production postfix_expression -> postfix_expression INC_OP
-- On SUB_ASSIGN reduce production postfix_expression -> postfix_expression INC_OP
-- On STAR reduce production postfix_expression -> postfix_expression INC_OP
-- On SLASH reduce production postfix_expression -> postfix_expression INC_OP
-- On SEMICOLON reduce production postfix_expression -> postfix_expression INC_OP
-- On RSQUARE reduce production postfix_expression -> postfix_expression INC_OP
-- On RPAR reduce production postfix_expression -> postfix_expression INC_OP
-- On RIGHT_OP reduce production postfix_expression -> postfix_expression INC_OP
-- On RIGHT_ASSIGN reduce production postfix_expression -> postfix_expression INC_OP
-- On RBRACE reduce production postfix_expression -> postfix_expression INC_OP
-- On QUESTION reduce production postfix_expression -> postfix_expression INC_OP
-- On PTR_OP reduce production postfix_expression -> postfix_expression INC_OP
-- On PLUS reduce production postfix_expression -> postfix_expression INC_OP
-- On PIPE reduce production postfix_expression -> postfix_expression INC_OP
-- On PERCENT reduce production postfix_expression -> postfix_expression INC_OP
-- On OR_OP reduce production postfix_expression -> postfix_expression INC_OP
-- On OR_ASSIGN reduce production postfix_expression -> postfix_expression INC_OP
-- On NE_OP reduce production postfix_expression -> postfix_expression INC_OP
-- On MUL_ASSIGN reduce production postfix_expression -> postfix_expression INC_OP
-- On MOD_ASSIGN reduce production postfix_expression -> postfix_expression INC_OP
-- On MINUS reduce production postfix_expression -> postfix_expression INC_OP
-- On LT reduce production postfix_expression -> postfix_expression INC_OP
-- On LSQUARE reduce production postfix_expression -> postfix_expression INC_OP
-- On LPAR reduce production postfix_expression -> postfix_expression INC_OP
-- On LE_OP reduce production postfix_expression -> postfix_expression INC_OP
-- On LEFT_OP reduce production postfix_expression -> postfix_expression INC_OP
-- On LEFT_ASSIGN reduce production postfix_expression -> postfix_expression INC_OP
-- On INC_OP reduce production postfix_expression -> postfix_expression INC_OP
-- On HAT reduce production postfix_expression -> postfix_expression INC_OP
-- On GT reduce production postfix_expression -> postfix_expression INC_OP
-- On GE_OP reduce production postfix_expression -> postfix_expression INC_OP
-- On EQ_OP reduce production postfix_expression -> postfix_expression INC_OP
-- On EQUAL reduce production postfix_expression -> postfix_expression INC_OP
-- On DOT reduce production postfix_expression -> postfix_expression INC_OP
-- On DIV_ASSIGN reduce production postfix_expression -> postfix_expression INC_OP
-- On DEC_OP reduce production postfix_expression -> postfix_expression INC_OP
-- On COMMA reduce production postfix_expression -> postfix_expression INC_OP
-- On COLON reduce production postfix_expression -> postfix_expression INC_OP
-- On ATTRIBUTE reduce production postfix_expression -> postfix_expression INC_OP
-- On AND_OP reduce production postfix_expression -> postfix_expression INC_OP
-- On AND_ASSIGN reduce production postfix_expression -> postfix_expression INC_OP
-- On AMP reduce production postfix_expression -> postfix_expression INC_OP
-- On ADD_ASSIGN reduce production postfix_expression -> postfix_expression INC_OP

State 132:
postfix_expression -> postfix_expression DOT . identifier [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RSQUARE RPAR RIGHT_OP RIGHT_ASSIGN RBRACE QUESTION PTR_OP PLUS PIPE PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LSQUARE LPAR LE_OP LEFT_OP LEFT_ASSIGN INC_OP HAT GT GE_OP EQ_OP EQUAL DOT DIV_ASSIGN DEC_OP COMMA COLON ATTRIBUTE AND_OP AND_ASSIGN AMP ADD_ASSIGN ]
-- On TYPE_NAME shift to state 22
-- On IDENTIFIER shift to state 23
-- On identifier shift to state 133

State 133:
postfix_expression -> postfix_expression DOT identifier . [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RSQUARE RPAR RIGHT_OP RIGHT_ASSIGN RBRACE QUESTION PTR_OP PLUS PIPE PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LSQUARE LPAR LE_OP LEFT_OP LEFT_ASSIGN INC_OP HAT GT GE_OP EQ_OP EQUAL DOT DIV_ASSIGN DEC_OP COMMA COLON ATTRIBUTE AND_OP AND_ASSIGN AMP ADD_ASSIGN ]
-- On XOR_ASSIGN reduce production postfix_expression -> postfix_expression DOT identifier
-- On SUB_ASSIGN reduce production postfix_expression -> postfix_expression DOT identifier
-- On STAR reduce production postfix_expression -> postfix_expression DOT identifier
-- On SLASH reduce production postfix_expression -> postfix_expression DOT identifier
-- On SEMICOLON reduce production postfix_expression -> postfix_expression DOT identifier
-- On RSQUARE reduce production postfix_expression -> postfix_expression DOT identifier
-- On RPAR reduce production postfix_expression -> postfix_expression DOT identifier
-- On RIGHT_OP reduce production postfix_expression -> postfix_expression DOT identifier
-- On RIGHT_ASSIGN reduce production postfix_expression -> postfix_expression DOT identifier
-- On RBRACE reduce production postfix_expression -> postfix_expression DOT identifier
-- On QUESTION reduce production postfix_expression -> postfix_expression DOT identifier
-- On PTR_OP reduce production postfix_expression -> postfix_expression DOT identifier
-- On PLUS reduce production postfix_expression -> postfix_expression DOT identifier
-- On PIPE reduce production postfix_expression -> postfix_expression DOT identifier
-- On PERCENT reduce production postfix_expression -> postfix_expression DOT identifier
-- On OR_OP reduce production postfix_expression -> postfix_expression DOT identifier
-- On OR_ASSIGN reduce production postfix_expression -> postfix_expression DOT identifier
-- On NE_OP reduce production postfix_expression -> postfix_expression DOT identifier
-- On MUL_ASSIGN reduce production postfix_expression -> postfix_expression DOT identifier
-- On MOD_ASSIGN reduce production postfix_expression -> postfix_expression DOT identifier
-- On MINUS reduce production postfix_expression -> postfix_expression DOT identifier
-- On LT reduce production postfix_expression -> postfix_expression DOT identifier
-- On LSQUARE reduce production postfix_expression -> postfix_expression DOT identifier
-- On LPAR reduce production postfix_expression -> postfix_expression DOT identifier
-- On LE_OP reduce production postfix_expression -> postfix_expression DOT identifier
-- On LEFT_OP reduce production postfix_expression -> postfix_expression DOT identifier
-- On LEFT_ASSIGN reduce production postfix_expression -> postfix_expression DOT identifier
-- On INC_OP reduce production postfix_expression -> postfix_expression DOT identifier
-- On HAT reduce production postfix_expression -> postfix_expression DOT identifier
-- On GT reduce production postfix_expression -> postfix_expression DOT identifier
-- On GE_OP reduce production postfix_expression -> postfix_expression DOT identifier
-- On EQ_OP reduce production postfix_expression -> postfix_expression DOT identifier
-- On EQUAL reduce production postfix_expression -> postfix_expression DOT identifier
-- On DOT reduce production postfix_expression -> postfix_expression DOT identifier
-- On DIV_ASSIGN reduce production postfix_expression -> postfix_expression DOT identifier
-- On DEC_OP reduce production postfix_expression -> postfix_expression DOT identifier
-- On COMMA reduce production postfix_expression -> postfix_expression DOT identifier
-- On COLON reduce production postfix_expression -> postfix_expression DOT identifier
-- On ATTRIBUTE reduce production postfix_expression -> postfix_expression DOT identifier
-- On AND_OP reduce production postfix_expression -> postfix_expression DOT identifier
-- On AND_ASSIGN reduce production postfix_expression -> postfix_expression DOT identifier
-- On AMP reduce production postfix_expression -> postfix_expression DOT identifier
-- On ADD_ASSIGN reduce production postfix_expression -> postfix_expression DOT identifier

State 134:
postfix_expression -> postfix_expression DEC_OP . [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RSQUARE RPAR RIGHT_OP RIGHT_ASSIGN RBRACE QUESTION PTR_OP PLUS PIPE PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LSQUARE LPAR LE_OP LEFT_OP LEFT_ASSIGN INC_OP HAT GT GE_OP EQ_OP EQUAL DOT DIV_ASSIGN DEC_OP COMMA COLON ATTRIBUTE AND_OP AND_ASSIGN AMP ADD_ASSIGN ]
-- On XOR_ASSIGN reduce production postfix_expression -> postfix_expression DEC_OP
-- On SUB_ASSIGN reduce production postfix_expression -> postfix_expression DEC_OP
-- On STAR reduce production postfix_expression -> postfix_expression DEC_OP
-- On SLASH reduce production postfix_expression -> postfix_expression DEC_OP
-- On SEMICOLON reduce production postfix_expression -> postfix_expression DEC_OP
-- On RSQUARE reduce production postfix_expression -> postfix_expression DEC_OP
-- On RPAR reduce production postfix_expression -> postfix_expression DEC_OP
-- On RIGHT_OP reduce production postfix_expression -> postfix_expression DEC_OP
-- On RIGHT_ASSIGN reduce production postfix_expression -> postfix_expression DEC_OP
-- On RBRACE reduce production postfix_expression -> postfix_expression DEC_OP
-- On QUESTION reduce production postfix_expression -> postfix_expression DEC_OP
-- On PTR_OP reduce production postfix_expression -> postfix_expression DEC_OP
-- On PLUS reduce production postfix_expression -> postfix_expression DEC_OP
-- On PIPE reduce production postfix_expression -> postfix_expression DEC_OP
-- On PERCENT reduce production postfix_expression -> postfix_expression DEC_OP
-- On OR_OP reduce production postfix_expression -> postfix_expression DEC_OP
-- On OR_ASSIGN reduce production postfix_expression -> postfix_expression DEC_OP
-- On NE_OP reduce production postfix_expression -> postfix_expression DEC_OP
-- On MUL_ASSIGN reduce production postfix_expression -> postfix_expression DEC_OP
-- On MOD_ASSIGN reduce production postfix_expression -> postfix_expression DEC_OP
-- On MINUS reduce production postfix_expression -> postfix_expression DEC_OP
-- On LT reduce production postfix_expression -> postfix_expression DEC_OP
-- On LSQUARE reduce production postfix_expression -> postfix_expression DEC_OP
-- On LPAR reduce production postfix_expression -> postfix_expression DEC_OP
-- On LE_OP reduce production postfix_expression -> postfix_expression DEC_OP
-- On LEFT_OP reduce production postfix_expression -> postfix_expression DEC_OP
-- On LEFT_ASSIGN reduce production postfix_expression -> postfix_expression DEC_OP
-- On INC_OP reduce production postfix_expression -> postfix_expression DEC_OP
-- On HAT reduce production postfix_expression -> postfix_expression DEC_OP
-- On GT reduce production postfix_expression -> postfix_expression DEC_OP
-- On GE_OP reduce production postfix_expression -> postfix_expression DEC_OP
-- On EQ_OP reduce production postfix_expression -> postfix_expression DEC_OP
-- On EQUAL reduce production postfix_expression -> postfix_expression DEC_OP
-- On DOT reduce production postfix_expression -> postfix_expression DEC_OP
-- On DIV_ASSIGN reduce production postfix_expression -> postfix_expression DEC_OP
-- On DEC_OP reduce production postfix_expression -> postfix_expression DEC_OP
-- On COMMA reduce production postfix_expression -> postfix_expression DEC_OP
-- On COLON reduce production postfix_expression -> postfix_expression DEC_OP
-- On ATTRIBUTE reduce production postfix_expression -> postfix_expression DEC_OP
-- On AND_OP reduce production postfix_expression -> postfix_expression DEC_OP
-- On AND_ASSIGN reduce production postfix_expression -> postfix_expression DEC_OP
-- On AMP reduce production postfix_expression -> postfix_expression DEC_OP
-- On ADD_ASSIGN reduce production postfix_expression -> postfix_expression DEC_OP

State 135:
unary_expression -> unary_operator cast_expression . [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RSQUARE RPAR RIGHT_OP RIGHT_ASSIGN RBRACE QUESTION PLUS PIPE PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LE_OP LEFT_OP LEFT_ASSIGN HAT GT GE_OP EQ_OP EQUAL DIV_ASSIGN COMMA COLON ATTRIBUTE AND_OP AND_ASSIGN AMP ADD_ASSIGN ]
-- On XOR_ASSIGN reduce production unary_expression -> unary_operator cast_expression
-- On SUB_ASSIGN reduce production unary_expression -> unary_operator cast_expression
-- On STAR reduce production unary_expression -> unary_operator cast_expression
-- On SLASH reduce production unary_expression -> unary_operator cast_expression
-- On SEMICOLON reduce production unary_expression -> unary_operator cast_expression
-- On RSQUARE reduce production unary_expression -> unary_operator cast_expression
-- On RPAR reduce production unary_expression -> unary_operator cast_expression
-- On RIGHT_OP reduce production unary_expression -> unary_operator cast_expression
-- On RIGHT_ASSIGN reduce production unary_expression -> unary_operator cast_expression
-- On RBRACE reduce production unary_expression -> unary_operator cast_expression
-- On QUESTION reduce production unary_expression -> unary_operator cast_expression
-- On PLUS reduce production unary_expression -> unary_operator cast_expression
-- On PIPE reduce production unary_expression -> unary_operator cast_expression
-- On PERCENT reduce production unary_expression -> unary_operator cast_expression
-- On OR_OP reduce production unary_expression -> unary_operator cast_expression
-- On OR_ASSIGN reduce production unary_expression -> unary_operator cast_expression
-- On NE_OP reduce production unary_expression -> unary_operator cast_expression
-- On MUL_ASSIGN reduce production unary_expression -> unary_operator cast_expression
-- On MOD_ASSIGN reduce production unary_expression -> unary_operator cast_expression
-- On MINUS reduce production unary_expression -> unary_operator cast_expression
-- On LT reduce production unary_expression -> unary_operator cast_expression
-- On LE_OP reduce production unary_expression -> unary_operator cast_expression
-- On LEFT_OP reduce production unary_expression -> unary_operator cast_expression
-- On LEFT_ASSIGN reduce production unary_expression -> unary_operator cast_expression
-- On HAT reduce production unary_expression -> unary_operator cast_expression
-- On GT reduce production unary_expression -> unary_operator cast_expression
-- On GE_OP reduce production unary_expression -> unary_operator cast_expression
-- On EQ_OP reduce production unary_expression -> unary_operator cast_expression
-- On EQUAL reduce production unary_expression -> unary_operator cast_expression
-- On DIV_ASSIGN reduce production unary_expression -> unary_operator cast_expression
-- On COMMA reduce production unary_expression -> unary_operator cast_expression
-- On COLON reduce production unary_expression -> unary_operator cast_expression
-- On ATTRIBUTE reduce production unary_expression -> unary_operator cast_expression
-- On AND_OP reduce production unary_expression -> unary_operator cast_expression
-- On AND_ASSIGN reduce production unary_expression -> unary_operator cast_expression
-- On AMP reduce production unary_expression -> unary_operator cast_expression
-- On ADD_ASSIGN reduce production unary_expression -> unary_operator cast_expression

State 136:
unary_expression -> DEC_OP unary_expression . [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RSQUARE RPAR RIGHT_OP RIGHT_ASSIGN RBRACE QUESTION PLUS PIPE PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LE_OP LEFT_OP LEFT_ASSIGN HAT GT GE_OP EQ_OP EQUAL DIV_ASSIGN COMMA COLON ATTRIBUTE AND_OP AND_ASSIGN AMP ADD_ASSIGN ]
-- On XOR_ASSIGN reduce production unary_expression -> DEC_OP unary_expression
-- On SUB_ASSIGN reduce production unary_expression -> DEC_OP unary_expression
-- On STAR reduce production unary_expression -> DEC_OP unary_expression
-- On SLASH reduce production unary_expression -> DEC_OP unary_expression
-- On SEMICOLON reduce production unary_expression -> DEC_OP unary_expression
-- On RSQUARE reduce production unary_expression -> DEC_OP unary_expression
-- On RPAR reduce production unary_expression -> DEC_OP unary_expression
-- On RIGHT_OP reduce production unary_expression -> DEC_OP unary_expression
-- On RIGHT_ASSIGN reduce production unary_expression -> DEC_OP unary_expression
-- On RBRACE reduce production unary_expression -> DEC_OP unary_expression
-- On QUESTION reduce production unary_expression -> DEC_OP unary_expression
-- On PLUS reduce production unary_expression -> DEC_OP unary_expression
-- On PIPE reduce production unary_expression -> DEC_OP unary_expression
-- On PERCENT reduce production unary_expression -> DEC_OP unary_expression
-- On OR_OP reduce production unary_expression -> DEC_OP unary_expression
-- On OR_ASSIGN reduce production unary_expression -> DEC_OP unary_expression
-- On NE_OP reduce production unary_expression -> DEC_OP unary_expression
-- On MUL_ASSIGN reduce production unary_expression -> DEC_OP unary_expression
-- On MOD_ASSIGN reduce production unary_expression -> DEC_OP unary_expression
-- On MINUS reduce production unary_expression -> DEC_OP unary_expression
-- On LT reduce production unary_expression -> DEC_OP unary_expression
-- On LE_OP reduce production unary_expression -> DEC_OP unary_expression
-- On LEFT_OP reduce production unary_expression -> DEC_OP unary_expression
-- On LEFT_ASSIGN reduce production unary_expression -> DEC_OP unary_expression
-- On HAT reduce production unary_expression -> DEC_OP unary_expression
-- On GT reduce production unary_expression -> DEC_OP unary_expression
-- On GE_OP reduce production unary_expression -> DEC_OP unary_expression
-- On EQ_OP reduce production unary_expression -> DEC_OP unary_expression
-- On EQUAL reduce production unary_expression -> DEC_OP unary_expression
-- On DIV_ASSIGN reduce production unary_expression -> DEC_OP unary_expression
-- On COMMA reduce production unary_expression -> DEC_OP unary_expression
-- On COLON reduce production unary_expression -> DEC_OP unary_expression
-- On ATTRIBUTE reduce production unary_expression -> DEC_OP unary_expression
-- On AND_OP reduce production unary_expression -> DEC_OP unary_expression
-- On AND_ASSIGN reduce production unary_expression -> DEC_OP unary_expression
-- On AMP reduce production unary_expression -> DEC_OP unary_expression
-- On ADD_ASSIGN reduce production unary_expression -> DEC_OP unary_expression

State 137:
expression -> expression . COMMA assignment_expression [ RPAR COMMA ]
primary_expression -> LPAR expression . RPAR [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RSQUARE RPAR RIGHT_OP RIGHT_ASSIGN RBRACE QUESTION PTR_OP PLUS PIPE PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LSQUARE LPAR LE_OP LEFT_OP LEFT_ASSIGN INC_OP HAT GT GE_OP EQ_OP EQUAL DOT DIV_ASSIGN DEC_OP COMMA COLON ATTRIBUTE AND_OP AND_ASSIGN AMP ADD_ASSIGN ]
-- On RPAR shift to state 138
-- On COMMA shift to state 113

State 138:
primary_expression -> LPAR expression RPAR . [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RSQUARE RPAR RIGHT_OP RIGHT_ASSIGN RBRACE QUESTION PTR_OP PLUS PIPE PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LSQUARE LPAR LE_OP LEFT_OP LEFT_ASSIGN INC_OP HAT GT GE_OP EQ_OP EQUAL DOT DIV_ASSIGN DEC_OP COMMA COLON ATTRIBUTE AND_OP AND_ASSIGN AMP ADD_ASSIGN ]
-- On XOR_ASSIGN reduce production primary_expression -> LPAR expression RPAR
-- On SUB_ASSIGN reduce production primary_expression -> LPAR expression RPAR
-- On STAR reduce production primary_expression -> LPAR expression RPAR
-- On SLASH reduce production primary_expression -> LPAR expression RPAR
-- On SEMICOLON reduce production primary_expression -> LPAR expression RPAR
-- On RSQUARE reduce production primary_expression -> LPAR expression RPAR
-- On RPAR reduce production primary_expression -> LPAR expression RPAR
-- On RIGHT_OP reduce production primary_expression -> LPAR expression RPAR
-- On RIGHT_ASSIGN reduce production primary_expression -> LPAR expression RPAR
-- On RBRACE reduce production primary_expression -> LPAR expression RPAR
-- On QUESTION reduce production primary_expression -> LPAR expression RPAR
-- On PTR_OP reduce production primary_expression -> LPAR expression RPAR
-- On PLUS reduce production primary_expression -> LPAR expression RPAR
-- On PIPE reduce production primary_expression -> LPAR expression RPAR
-- On PERCENT reduce production primary_expression -> LPAR expression RPAR
-- On OR_OP reduce production primary_expression -> LPAR expression RPAR
-- On OR_ASSIGN reduce production primary_expression -> LPAR expression RPAR
-- On NE_OP reduce production primary_expression -> LPAR expression RPAR
-- On MUL_ASSIGN reduce production primary_expression -> LPAR expression RPAR
-- On MOD_ASSIGN reduce production primary_expression -> LPAR expression RPAR
-- On MINUS reduce production primary_expression -> LPAR expression RPAR
-- On LT reduce production primary_expression -> LPAR expression RPAR
-- On LSQUARE reduce production primary_expression -> LPAR expression RPAR
-- On LPAR reduce production primary_expression -> LPAR expression RPAR
-- On LE_OP reduce production primary_expression -> LPAR expression RPAR
-- On LEFT_OP reduce production primary_expression -> LPAR expression RPAR
-- On LEFT_ASSIGN reduce production primary_expression -> LPAR expression RPAR
-- On INC_OP reduce production primary_expression -> LPAR expression RPAR
-- On HAT reduce production primary_expression -> LPAR expression RPAR
-- On GT reduce production primary_expression -> LPAR expression RPAR
-- On GE_OP reduce production primary_expression -> LPAR expression RPAR
-- On EQ_OP reduce production primary_expression -> LPAR expression RPAR
-- On EQUAL reduce production primary_expression -> LPAR expression RPAR
-- On DOT reduce production primary_expression -> LPAR expression RPAR
-- On DIV_ASSIGN reduce production primary_expression -> LPAR expression RPAR
-- On DEC_OP reduce production primary_expression -> LPAR expression RPAR
-- On COMMA reduce production primary_expression -> LPAR expression RPAR
-- On COLON reduce production primary_expression -> LPAR expression RPAR
-- On ATTRIBUTE reduce production primary_expression -> LPAR expression RPAR
-- On AND_OP reduce production primary_expression -> LPAR expression RPAR
-- On AND_ASSIGN reduce production primary_expression -> LPAR expression RPAR
-- On AMP reduce production primary_expression -> LPAR expression RPAR
-- On ADD_ASSIGN reduce production primary_expression -> LPAR expression RPAR

State 139:
unary_expression -> INC_OP unary_expression . [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RSQUARE RPAR RIGHT_OP RIGHT_ASSIGN RBRACE QUESTION PLUS PIPE PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LE_OP LEFT_OP LEFT_ASSIGN HAT GT GE_OP EQ_OP EQUAL DIV_ASSIGN COMMA COLON ATTRIBUTE AND_OP AND_ASSIGN AMP ADD_ASSIGN ]
-- On XOR_ASSIGN reduce production unary_expression -> INC_OP unary_expression
-- On SUB_ASSIGN reduce production unary_expression -> INC_OP unary_expression
-- On STAR reduce production unary_expression -> INC_OP unary_expression
-- On SLASH reduce production unary_expression -> INC_OP unary_expression
-- On SEMICOLON reduce production unary_expression -> INC_OP unary_expression
-- On RSQUARE reduce production unary_expression -> INC_OP unary_expression
-- On RPAR reduce production unary_expression -> INC_OP unary_expression
-- On RIGHT_OP reduce production unary_expression -> INC_OP unary_expression
-- On RIGHT_ASSIGN reduce production unary_expression -> INC_OP unary_expression
-- On RBRACE reduce production unary_expression -> INC_OP unary_expression
-- On QUESTION reduce production unary_expression -> INC_OP unary_expression
-- On PLUS reduce production unary_expression -> INC_OP unary_expression
-- On PIPE reduce production unary_expression -> INC_OP unary_expression
-- On PERCENT reduce production unary_expression -> INC_OP unary_expression
-- On OR_OP reduce production unary_expression -> INC_OP unary_expression
-- On OR_ASSIGN reduce production unary_expression -> INC_OP unary_expression
-- On NE_OP reduce production unary_expression -> INC_OP unary_expression
-- On MUL_ASSIGN reduce production unary_expression -> INC_OP unary_expression
-- On MOD_ASSIGN reduce production unary_expression -> INC_OP unary_expression
-- On MINUS reduce production unary_expression -> INC_OP unary_expression
-- On LT reduce production unary_expression -> INC_OP unary_expression
-- On LE_OP reduce production unary_expression -> INC_OP unary_expression
-- On LEFT_OP reduce production unary_expression -> INC_OP unary_expression
-- On LEFT_ASSIGN reduce production unary_expression -> INC_OP unary_expression
-- On HAT reduce production unary_expression -> INC_OP unary_expression
-- On GT reduce production unary_expression -> INC_OP unary_expression
-- On GE_OP reduce production unary_expression -> INC_OP unary_expression
-- On EQ_OP reduce production unary_expression -> INC_OP unary_expression
-- On EQUAL reduce production unary_expression -> INC_OP unary_expression
-- On DIV_ASSIGN reduce production unary_expression -> INC_OP unary_expression
-- On COMMA reduce production unary_expression -> INC_OP unary_expression
-- On COLON reduce production unary_expression -> INC_OP unary_expression
-- On ATTRIBUTE reduce production unary_expression -> INC_OP unary_expression
-- On AND_OP reduce production unary_expression -> INC_OP unary_expression
-- On AND_ASSIGN reduce production unary_expression -> INC_OP unary_expression
-- On AMP reduce production unary_expression -> INC_OP unary_expression
-- On ADD_ASSIGN reduce production unary_expression -> INC_OP unary_expression

State 140:
type_specifier_no_name -> FLOAT . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LSQUARE LPAR LONG INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On VOLATILE reduce production type_specifier_no_name -> FLOAT
-- On VOID reduce production type_specifier_no_name -> FLOAT
-- On UNSIGNED reduce production type_specifier_no_name -> FLOAT
-- On UNION reduce production type_specifier_no_name -> FLOAT
-- On TYPE_NAME reduce production type_specifier_no_name -> FLOAT
-- On TYPEDEF reduce production type_specifier_no_name -> FLOAT
-- On STRUCT reduce production type_specifier_no_name -> FLOAT
-- On STATIC reduce production type_specifier_no_name -> FLOAT
-- On STAR reduce production type_specifier_no_name -> FLOAT
-- On SIGNED reduce production type_specifier_no_name -> FLOAT
-- On SHORT reduce production type_specifier_no_name -> FLOAT
-- On SEMICOLON reduce production type_specifier_no_name -> FLOAT
-- On RPAR reduce production type_specifier_no_name -> FLOAT
-- On RESTRICT reduce production type_specifier_no_name -> FLOAT
-- On REGISTER reduce production type_specifier_no_name -> FLOAT
-- On LSQUARE reduce production type_specifier_no_name -> FLOAT
-- On LPAR reduce production type_specifier_no_name -> FLOAT
-- On LONG reduce production type_specifier_no_name -> FLOAT
-- On INT reduce production type_specifier_no_name -> FLOAT
-- On IDENTIFIER reduce production type_specifier_no_name -> FLOAT
-- On FLOAT reduce production type_specifier_no_name -> FLOAT
-- On EXTERN reduce production type_specifier_no_name -> FLOAT
-- On ENUM reduce production type_specifier_no_name -> FLOAT
-- On DOUBLE reduce production type_specifier_no_name -> FLOAT
-- On CONST reduce production type_specifier_no_name -> FLOAT
-- On COMMA reduce production type_specifier_no_name -> FLOAT
-- On COLON reduce production type_specifier_no_name -> FLOAT
-- On CHAR reduce production type_specifier_no_name -> FLOAT
-- On AUTO reduce production type_specifier_no_name -> FLOAT

State 141:
enum_specifier -> ENUM . LBRACE enumerator_list RBRACE [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LSQUARE LPAR LONG INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
enum_specifier -> ENUM . identifier LBRACE enumerator_list RBRACE [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LSQUARE LPAR LONG INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
enum_specifier -> ENUM . identifier [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LSQUARE LPAR LONG INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On TYPE_NAME shift to state 22
-- On LBRACE shift to state 142
-- On IDENTIFIER shift to state 23
-- On identifier shift to state 152

State 142:
enum_specifier -> ENUM LBRACE . enumerator_list RBRACE [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LSQUARE LPAR LONG INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On IDENTIFIER shift to state 143
-- On enumerator_list shift to state 147
-- On enumerator shift to state 151

State 143:
enumerator -> IDENTIFIER . [ RBRACE COMMA ]
enumerator -> IDENTIFIER . EQUAL constant_expression [ RBRACE COMMA ]
-- On EQUAL shift to state 144
-- On RBRACE reduce production enumerator -> IDENTIFIER
-- On COMMA reduce production enumerator -> IDENTIFIER

State 144:
enumerator -> IDENTIFIER EQUAL . constant_expression [ RBRACE COMMA ]
-- On TILDE shift to state 28
-- On STRING_LITERAL shift to state 29
-- On STAR shift to state 30
-- On SIZEOF shift to state 31
-- On PLUS shift to state 32
-- On MINUS shift to state 33
-- On LPAR shift to state 36
-- On INC_OP shift to state 39
-- On IDENTIFIER shift to state 41
-- On EXL shift to state 42
-- On DEC_OP shift to state 43
-- On CONSTANT shift to state 44
-- On AMP shift to state 45
-- On unary_operator shift to state 46
-- On unary_expression shift to state 47
-- On shift_expression shift to state 66
-- On relational_expression shift to state 83
-- On primary_expression shift to state 48
-- On postfix_expression shift to state 49
-- On multiplicative_expression shift to state 68
-- On logical_or_expression shift to state 93
-- On logical_and_expression shift to state 95
-- On inclusive_or_expression shift to state 111
-- On exclusive_or_expression shift to state 110
-- On equality_expression shift to state 101
-- On constant_expression shift to state 145
-- On conditional_expression shift to state 146
-- On cast_expression shift to state 75
-- On and_expression shift to state 109
-- On additive_expression shift to state 86

State 145:
enumerator -> IDENTIFIER EQUAL constant_expression . [ RBRACE COMMA ]
-- On RBRACE reduce production enumerator -> IDENTIFIER EQUAL constant_expression
-- On COMMA reduce production enumerator -> IDENTIFIER EQUAL constant_expression

State 146:
constant_expression -> conditional_expression . [ SEMICOLON RSQUARE RBRACE COMMA COLON ]
-- On SEMICOLON reduce production constant_expression -> conditional_expression
-- On RSQUARE reduce production constant_expression -> conditional_expression
-- On RBRACE reduce production constant_expression -> conditional_expression
-- On COMMA reduce production constant_expression -> conditional_expression
-- On COLON reduce production constant_expression -> conditional_expression

State 147:
enum_specifier -> ENUM LBRACE enumerator_list . RBRACE [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LSQUARE LPAR LONG INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
enumerator_list -> enumerator_list . COMMA enumerator [ RBRACE COMMA ]
-- On RBRACE shift to state 148
-- On COMMA shift to state 149

State 148:
enum_specifier -> ENUM LBRACE enumerator_list RBRACE . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LSQUARE LPAR LONG INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On VOLATILE reduce production enum_specifier -> ENUM LBRACE enumerator_list RBRACE
-- On VOID reduce production enum_specifier -> ENUM LBRACE enumerator_list RBRACE
-- On UNSIGNED reduce production enum_specifier -> ENUM LBRACE enumerator_list RBRACE
-- On UNION reduce production enum_specifier -> ENUM LBRACE enumerator_list RBRACE
-- On TYPE_NAME reduce production enum_specifier -> ENUM LBRACE enumerator_list RBRACE
-- On TYPEDEF reduce production enum_specifier -> ENUM LBRACE enumerator_list RBRACE
-- On STRUCT reduce production enum_specifier -> ENUM LBRACE enumerator_list RBRACE
-- On STATIC reduce production enum_specifier -> ENUM LBRACE enumerator_list RBRACE
-- On STAR reduce production enum_specifier -> ENUM LBRACE enumerator_list RBRACE
-- On SIGNED reduce production enum_specifier -> ENUM LBRACE enumerator_list RBRACE
-- On SHORT reduce production enum_specifier -> ENUM LBRACE enumerator_list RBRACE
-- On SEMICOLON reduce production enum_specifier -> ENUM LBRACE enumerator_list RBRACE
-- On RPAR reduce production enum_specifier -> ENUM LBRACE enumerator_list RBRACE
-- On RESTRICT reduce production enum_specifier -> ENUM LBRACE enumerator_list RBRACE
-- On REGISTER reduce production enum_specifier -> ENUM LBRACE enumerator_list RBRACE
-- On LSQUARE reduce production enum_specifier -> ENUM LBRACE enumerator_list RBRACE
-- On LPAR reduce production enum_specifier -> ENUM LBRACE enumerator_list RBRACE
-- On LONG reduce production enum_specifier -> ENUM LBRACE enumerator_list RBRACE
-- On INT reduce production enum_specifier -> ENUM LBRACE enumerator_list RBRACE
-- On IDENTIFIER reduce production enum_specifier -> ENUM LBRACE enumerator_list RBRACE
-- On FLOAT reduce production enum_specifier -> ENUM LBRACE enumerator_list RBRACE
-- On EXTERN reduce production enum_specifier -> ENUM LBRACE enumerator_list RBRACE
-- On ENUM reduce production enum_specifier -> ENUM LBRACE enumerator_list RBRACE
-- On DOUBLE reduce production enum_specifier -> ENUM LBRACE enumerator_list RBRACE
-- On CONST reduce production enum_specifier -> ENUM LBRACE enumerator_list RBRACE
-- On COMMA reduce production enum_specifier -> ENUM LBRACE enumerator_list RBRACE
-- On COLON reduce production enum_specifier -> ENUM LBRACE enumerator_list RBRACE
-- On CHAR reduce production enum_specifier -> ENUM LBRACE enumerator_list RBRACE
-- On AUTO reduce production enum_specifier -> ENUM LBRACE enumerator_list RBRACE

State 149:
enumerator_list -> enumerator_list COMMA . enumerator [ RBRACE COMMA ]
-- On IDENTIFIER shift to state 143
-- On enumerator shift to state 150

State 150:
enumerator_list -> enumerator_list COMMA enumerator . [ RBRACE COMMA ]
-- On RBRACE reduce production enumerator_list -> enumerator_list COMMA enumerator
-- On COMMA reduce production enumerator_list -> enumerator_list COMMA enumerator

State 151:
enumerator_list -> enumerator . [ RBRACE COMMA ]
-- On RBRACE reduce production enumerator_list -> enumerator
-- On COMMA reduce production enumerator_list -> enumerator

State 152:
enum_specifier -> ENUM identifier . LBRACE enumerator_list RBRACE [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LSQUARE LPAR LONG INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
enum_specifier -> ENUM identifier . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LSQUARE LPAR LONG INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On LBRACE shift to state 153
-- On VOLATILE reduce production enum_specifier -> ENUM identifier
-- On VOID reduce production enum_specifier -> ENUM identifier
-- On UNSIGNED reduce production enum_specifier -> ENUM identifier
-- On UNION reduce production enum_specifier -> ENUM identifier
-- On TYPE_NAME reduce production enum_specifier -> ENUM identifier
-- On TYPEDEF reduce production enum_specifier -> ENUM identifier
-- On STRUCT reduce production enum_specifier -> ENUM identifier
-- On STATIC reduce production enum_specifier -> ENUM identifier
-- On STAR reduce production enum_specifier -> ENUM identifier
-- On SIGNED reduce production enum_specifier -> ENUM identifier
-- On SHORT reduce production enum_specifier -> ENUM identifier
-- On SEMICOLON reduce production enum_specifier -> ENUM identifier
-- On RPAR reduce production enum_specifier -> ENUM identifier
-- On RESTRICT reduce production enum_specifier -> ENUM identifier
-- On REGISTER reduce production enum_specifier -> ENUM identifier
-- On LSQUARE reduce production enum_specifier -> ENUM identifier
-- On LPAR reduce production enum_specifier -> ENUM identifier
-- On LONG reduce production enum_specifier -> ENUM identifier
-- On INT reduce production enum_specifier -> ENUM identifier
-- On IDENTIFIER reduce production enum_specifier -> ENUM identifier
-- On FLOAT reduce production enum_specifier -> ENUM identifier
-- On EXTERN reduce production enum_specifier -> ENUM identifier
-- On ENUM reduce production enum_specifier -> ENUM identifier
-- On DOUBLE reduce production enum_specifier -> ENUM identifier
-- On CONST reduce production enum_specifier -> ENUM identifier
-- On COMMA reduce production enum_specifier -> ENUM identifier
-- On COLON reduce production enum_specifier -> ENUM identifier
-- On CHAR reduce production enum_specifier -> ENUM identifier
-- On AUTO reduce production enum_specifier -> ENUM identifier

State 153:
enum_specifier -> ENUM identifier LBRACE . enumerator_list RBRACE [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LSQUARE LPAR LONG INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On IDENTIFIER shift to state 143
-- On enumerator_list shift to state 154
-- On enumerator shift to state 151

State 154:
enum_specifier -> ENUM identifier LBRACE enumerator_list . RBRACE [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LSQUARE LPAR LONG INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
enumerator_list -> enumerator_list . COMMA enumerator [ RBRACE COMMA ]
-- On RBRACE shift to state 155
-- On COMMA shift to state 149

State 155:
enum_specifier -> ENUM identifier LBRACE enumerator_list RBRACE . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LSQUARE LPAR LONG INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On VOLATILE reduce production enum_specifier -> ENUM identifier LBRACE enumerator_list RBRACE
-- On VOID reduce production enum_specifier -> ENUM identifier LBRACE enumerator_list RBRACE
-- On UNSIGNED reduce production enum_specifier -> ENUM identifier LBRACE enumerator_list RBRACE
-- On UNION reduce production enum_specifier -> ENUM identifier LBRACE enumerator_list RBRACE
-- On TYPE_NAME reduce production enum_specifier -> ENUM identifier LBRACE enumerator_list RBRACE
-- On TYPEDEF reduce production enum_specifier -> ENUM identifier LBRACE enumerator_list RBRACE
-- On STRUCT reduce production enum_specifier -> ENUM identifier LBRACE enumerator_list RBRACE
-- On STATIC reduce production enum_specifier -> ENUM identifier LBRACE enumerator_list RBRACE
-- On STAR reduce production enum_specifier -> ENUM identifier LBRACE enumerator_list RBRACE
-- On SIGNED reduce production enum_specifier -> ENUM identifier LBRACE enumerator_list RBRACE
-- On SHORT reduce production enum_specifier -> ENUM identifier LBRACE enumerator_list RBRACE
-- On SEMICOLON reduce production enum_specifier -> ENUM identifier LBRACE enumerator_list RBRACE
-- On RPAR reduce production enum_specifier -> ENUM identifier LBRACE enumerator_list RBRACE
-- On RESTRICT reduce production enum_specifier -> ENUM identifier LBRACE enumerator_list RBRACE
-- On REGISTER reduce production enum_specifier -> ENUM identifier LBRACE enumerator_list RBRACE
-- On LSQUARE reduce production enum_specifier -> ENUM identifier LBRACE enumerator_list RBRACE
-- On LPAR reduce production enum_specifier -> ENUM identifier LBRACE enumerator_list RBRACE
-- On LONG reduce production enum_specifier -> ENUM identifier LBRACE enumerator_list RBRACE
-- On INT reduce production enum_specifier -> ENUM identifier LBRACE enumerator_list RBRACE
-- On IDENTIFIER reduce production enum_specifier -> ENUM identifier LBRACE enumerator_list RBRACE
-- On FLOAT reduce production enum_specifier -> ENUM identifier LBRACE enumerator_list RBRACE
-- On EXTERN reduce production enum_specifier -> ENUM identifier LBRACE enumerator_list RBRACE
-- On ENUM reduce production enum_specifier -> ENUM identifier LBRACE enumerator_list RBRACE
-- On DOUBLE reduce production enum_specifier -> ENUM identifier LBRACE enumerator_list RBRACE
-- On CONST reduce production enum_specifier -> ENUM identifier LBRACE enumerator_list RBRACE
-- On COMMA reduce production enum_specifier -> ENUM identifier LBRACE enumerator_list RBRACE
-- On COLON reduce production enum_specifier -> ENUM identifier LBRACE enumerator_list RBRACE
-- On CHAR reduce production enum_specifier -> ENUM identifier LBRACE enumerator_list RBRACE
-- On AUTO reduce production enum_specifier -> ENUM identifier LBRACE enumerator_list RBRACE

State 156:
type_specifier_no_name -> DOUBLE . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LSQUARE LPAR LONG INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On VOLATILE reduce production type_specifier_no_name -> DOUBLE
-- On VOID reduce production type_specifier_no_name -> DOUBLE
-- On UNSIGNED reduce production type_specifier_no_name -> DOUBLE
-- On UNION reduce production type_specifier_no_name -> DOUBLE
-- On TYPE_NAME reduce production type_specifier_no_name -> DOUBLE
-- On TYPEDEF reduce production type_specifier_no_name -> DOUBLE
-- On STRUCT reduce production type_specifier_no_name -> DOUBLE
-- On STATIC reduce production type_specifier_no_name -> DOUBLE
-- On STAR reduce production type_specifier_no_name -> DOUBLE
-- On SIGNED reduce production type_specifier_no_name -> DOUBLE
-- On SHORT reduce production type_specifier_no_name -> DOUBLE
-- On SEMICOLON reduce production type_specifier_no_name -> DOUBLE
-- On RPAR reduce production type_specifier_no_name -> DOUBLE
-- On RESTRICT reduce production type_specifier_no_name -> DOUBLE
-- On REGISTER reduce production type_specifier_no_name -> DOUBLE
-- On LSQUARE reduce production type_specifier_no_name -> DOUBLE
-- On LPAR reduce production type_specifier_no_name -> DOUBLE
-- On LONG reduce production type_specifier_no_name -> DOUBLE
-- On INT reduce production type_specifier_no_name -> DOUBLE
-- On IDENTIFIER reduce production type_specifier_no_name -> DOUBLE
-- On FLOAT reduce production type_specifier_no_name -> DOUBLE
-- On EXTERN reduce production type_specifier_no_name -> DOUBLE
-- On ENUM reduce production type_specifier_no_name -> DOUBLE
-- On DOUBLE reduce production type_specifier_no_name -> DOUBLE
-- On CONST reduce production type_specifier_no_name -> DOUBLE
-- On COMMA reduce production type_specifier_no_name -> DOUBLE
-- On COLON reduce production type_specifier_no_name -> DOUBLE
-- On CHAR reduce production type_specifier_no_name -> DOUBLE
-- On AUTO reduce production type_specifier_no_name -> DOUBLE

State 157:
type_specifier_no_name -> CHAR . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LSQUARE LPAR LONG INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On VOLATILE reduce production type_specifier_no_name -> CHAR
-- On VOID reduce production type_specifier_no_name -> CHAR
-- On UNSIGNED reduce production type_specifier_no_name -> CHAR
-- On UNION reduce production type_specifier_no_name -> CHAR
-- On TYPE_NAME reduce production type_specifier_no_name -> CHAR
-- On TYPEDEF reduce production type_specifier_no_name -> CHAR
-- On STRUCT reduce production type_specifier_no_name -> CHAR
-- On STATIC reduce production type_specifier_no_name -> CHAR
-- On STAR reduce production type_specifier_no_name -> CHAR
-- On SIGNED reduce production type_specifier_no_name -> CHAR
-- On SHORT reduce production type_specifier_no_name -> CHAR
-- On SEMICOLON reduce production type_specifier_no_name -> CHAR
-- On RPAR reduce production type_specifier_no_name -> CHAR
-- On RESTRICT reduce production type_specifier_no_name -> CHAR
-- On REGISTER reduce production type_specifier_no_name -> CHAR
-- On LSQUARE reduce production type_specifier_no_name -> CHAR
-- On LPAR reduce production type_specifier_no_name -> CHAR
-- On LONG reduce production type_specifier_no_name -> CHAR
-- On INT reduce production type_specifier_no_name -> CHAR
-- On IDENTIFIER reduce production type_specifier_no_name -> CHAR
-- On FLOAT reduce production type_specifier_no_name -> CHAR
-- On EXTERN reduce production type_specifier_no_name -> CHAR
-- On ENUM reduce production type_specifier_no_name -> CHAR
-- On DOUBLE reduce production type_specifier_no_name -> CHAR
-- On CONST reduce production type_specifier_no_name -> CHAR
-- On COMMA reduce production type_specifier_no_name -> CHAR
-- On COLON reduce production type_specifier_no_name -> CHAR
-- On CHAR reduce production type_specifier_no_name -> CHAR
-- On AUTO reduce production type_specifier_no_name -> CHAR

State 158:
type_specifier -> type_specifier_no_name . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LSQUARE LPAR LONG INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On VOLATILE reduce production type_specifier -> type_specifier_no_name
-- On VOID reduce production type_specifier -> type_specifier_no_name
-- On UNSIGNED reduce production type_specifier -> type_specifier_no_name
-- On UNION reduce production type_specifier -> type_specifier_no_name
-- On TYPE_NAME reduce production type_specifier -> type_specifier_no_name
-- On TYPEDEF reduce production type_specifier -> type_specifier_no_name
-- On STRUCT reduce production type_specifier -> type_specifier_no_name
-- On STATIC reduce production type_specifier -> type_specifier_no_name
-- On STAR reduce production type_specifier -> type_specifier_no_name
-- On SIGNED reduce production type_specifier -> type_specifier_no_name
-- On SHORT reduce production type_specifier -> type_specifier_no_name
-- On SEMICOLON reduce production type_specifier -> type_specifier_no_name
-- On RPAR reduce production type_specifier -> type_specifier_no_name
-- On RESTRICT reduce production type_specifier -> type_specifier_no_name
-- On REGISTER reduce production type_specifier -> type_specifier_no_name
-- On LSQUARE reduce production type_specifier -> type_specifier_no_name
-- On LPAR reduce production type_specifier -> type_specifier_no_name
-- On LONG reduce production type_specifier -> type_specifier_no_name
-- On INT reduce production type_specifier -> type_specifier_no_name
-- On IDENTIFIER reduce production type_specifier -> type_specifier_no_name
-- On FLOAT reduce production type_specifier -> type_specifier_no_name
-- On EXTERN reduce production type_specifier -> type_specifier_no_name
-- On ENUM reduce production type_specifier -> type_specifier_no_name
-- On DOUBLE reduce production type_specifier -> type_specifier_no_name
-- On CONST reduce production type_specifier -> type_specifier_no_name
-- On COMMA reduce production type_specifier -> type_specifier_no_name
-- On COLON reduce production type_specifier -> type_specifier_no_name
-- On CHAR reduce production type_specifier -> type_specifier_no_name
-- On AUTO reduce production type_specifier -> type_specifier_no_name

State 159:
specifier_qualifier_list -> type_specifier . specifier_qualifier_list_no_name [ TYPE_NAME STAR RPAR LSQUARE LPAR IDENTIFIER COLON ]
specifier_qualifier_list -> type_specifier . [ TYPE_NAME STAR RPAR LSQUARE LPAR IDENTIFIER COLON ]
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On STRUCT shift to state 7
-- On SIGNED shift to state 18
-- On SHORT shift to state 19
-- On RESTRICT shift to state 10
-- On LONG shift to state 37
-- On INT shift to state 38
-- On FLOAT shift to state 140
-- On ENUM shift to state 141
-- On DOUBLE shift to state 156
-- On CONST shift to state 11
-- On CHAR shift to state 157
-- On type_specifier_no_name shift to state 160
-- On type_qualifier shift to state 161
-- On struct_or_union_specifier shift to state 162
-- On struct_or_union shift to state 163
-- On specifier_qualifier_list_no_name shift to state 244
-- On enum_specifier shift to state 167
-- On TYPE_NAME reduce production specifier_qualifier_list -> type_specifier
-- On STAR reduce production specifier_qualifier_list -> type_specifier
-- On RPAR reduce production specifier_qualifier_list -> type_specifier
-- On LSQUARE reduce production specifier_qualifier_list -> type_specifier
-- On LPAR reduce production specifier_qualifier_list -> type_specifier
-- On IDENTIFIER reduce production specifier_qualifier_list -> type_specifier
-- On COLON reduce production specifier_qualifier_list -> type_specifier

State 160:
specifier_qualifier_list_no_name -> type_specifier_no_name . specifier_qualifier_list_no_name [ TYPE_NAME STAR RPAR LSQUARE LPAR IDENTIFIER COLON ]
specifier_qualifier_list_no_name -> type_specifier_no_name . [ TYPE_NAME STAR RPAR LSQUARE LPAR IDENTIFIER COLON ]
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On STRUCT shift to state 7
-- On SIGNED shift to state 18
-- On SHORT shift to state 19
-- On RESTRICT shift to state 10
-- On LONG shift to state 37
-- On INT shift to state 38
-- On FLOAT shift to state 140
-- On ENUM shift to state 141
-- On DOUBLE shift to state 156
-- On CONST shift to state 11
-- On CHAR shift to state 157
-- On type_specifier_no_name shift to state 160
-- On type_qualifier shift to state 161
-- On struct_or_union_specifier shift to state 162
-- On struct_or_union shift to state 163
-- On specifier_qualifier_list_no_name shift to state 243
-- On enum_specifier shift to state 167
-- On TYPE_NAME reduce production specifier_qualifier_list_no_name -> type_specifier_no_name
-- On STAR reduce production specifier_qualifier_list_no_name -> type_specifier_no_name
-- On RPAR reduce production specifier_qualifier_list_no_name -> type_specifier_no_name
-- On LSQUARE reduce production specifier_qualifier_list_no_name -> type_specifier_no_name
-- On LPAR reduce production specifier_qualifier_list_no_name -> type_specifier_no_name
-- On IDENTIFIER reduce production specifier_qualifier_list_no_name -> type_specifier_no_name
-- On COLON reduce production specifier_qualifier_list_no_name -> type_specifier_no_name

State 161:
specifier_qualifier_list_no_name -> type_qualifier . specifier_qualifier_list_no_name [ TYPE_NAME STAR RPAR LSQUARE LPAR IDENTIFIER COLON ]
specifier_qualifier_list_no_name -> type_qualifier . [ TYPE_NAME STAR RPAR LSQUARE LPAR IDENTIFIER COLON ]
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On STRUCT shift to state 7
-- On SIGNED shift to state 18
-- On SHORT shift to state 19
-- On RESTRICT shift to state 10
-- On LONG shift to state 37
-- On INT shift to state 38
-- On FLOAT shift to state 140
-- On ENUM shift to state 141
-- On DOUBLE shift to state 156
-- On CONST shift to state 11
-- On CHAR shift to state 157
-- On type_specifier_no_name shift to state 160
-- On type_qualifier shift to state 161
-- On struct_or_union_specifier shift to state 162
-- On struct_or_union shift to state 163
-- On specifier_qualifier_list_no_name shift to state 242
-- On enum_specifier shift to state 167
-- On TYPE_NAME reduce production specifier_qualifier_list_no_name -> type_qualifier
-- On STAR reduce production specifier_qualifier_list_no_name -> type_qualifier
-- On RPAR reduce production specifier_qualifier_list_no_name -> type_qualifier
-- On LSQUARE reduce production specifier_qualifier_list_no_name -> type_qualifier
-- On LPAR reduce production specifier_qualifier_list_no_name -> type_qualifier
-- On IDENTIFIER reduce production specifier_qualifier_list_no_name -> type_qualifier
-- On COLON reduce production specifier_qualifier_list_no_name -> type_qualifier

State 162:
type_specifier_no_name -> struct_or_union_specifier . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LSQUARE LPAR LONG INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On VOLATILE reduce production type_specifier_no_name -> struct_or_union_specifier
-- On VOID reduce production type_specifier_no_name -> struct_or_union_specifier
-- On UNSIGNED reduce production type_specifier_no_name -> struct_or_union_specifier
-- On UNION reduce production type_specifier_no_name -> struct_or_union_specifier
-- On TYPE_NAME reduce production type_specifier_no_name -> struct_or_union_specifier
-- On TYPEDEF reduce production type_specifier_no_name -> struct_or_union_specifier
-- On STRUCT reduce production type_specifier_no_name -> struct_or_union_specifier
-- On STATIC reduce production type_specifier_no_name -> struct_or_union_specifier
-- On STAR reduce production type_specifier_no_name -> struct_or_union_specifier
-- On SIGNED reduce production type_specifier_no_name -> struct_or_union_specifier
-- On SHORT reduce production type_specifier_no_name -> struct_or_union_specifier
-- On SEMICOLON reduce production type_specifier_no_name -> struct_or_union_specifier
-- On RPAR reduce production type_specifier_no_name -> struct_or_union_specifier
-- On RESTRICT reduce production type_specifier_no_name -> struct_or_union_specifier
-- On REGISTER reduce production type_specifier_no_name -> struct_or_union_specifier
-- On LSQUARE reduce production type_specifier_no_name -> struct_or_union_specifier
-- On LPAR reduce production type_specifier_no_name -> struct_or_union_specifier
-- On LONG reduce production type_specifier_no_name -> struct_or_union_specifier
-- On INT reduce production type_specifier_no_name -> struct_or_union_specifier
-- On IDENTIFIER reduce production type_specifier_no_name -> struct_or_union_specifier
-- On FLOAT reduce production type_specifier_no_name -> struct_or_union_specifier
-- On EXTERN reduce production type_specifier_no_name -> struct_or_union_specifier
-- On ENUM reduce production type_specifier_no_name -> struct_or_union_specifier
-- On DOUBLE reduce production type_specifier_no_name -> struct_or_union_specifier
-- On CONST reduce production type_specifier_no_name -> struct_or_union_specifier
-- On COMMA reduce production type_specifier_no_name -> struct_or_union_specifier
-- On COLON reduce production type_specifier_no_name -> struct_or_union_specifier
-- On CHAR reduce production type_specifier_no_name -> struct_or_union_specifier
-- On AUTO reduce production type_specifier_no_name -> struct_or_union_specifier

State 163:
struct_or_union_specifier -> struct_or_union . identifier LBRACE struct_declaration_list RBRACE [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LSQUARE LPAR LONG INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
struct_or_union_specifier -> struct_or_union . LBRACE struct_declaration_list RBRACE [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LSQUARE LPAR LONG INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
struct_or_union_specifier -> struct_or_union . identifier [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LSQUARE LPAR LONG INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On TYPE_NAME shift to state 22
-- On LBRACE shift to state 164
-- On IDENTIFIER shift to state 23
-- On identifier shift to state 238

State 164:
struct_or_union_specifier -> struct_or_union LBRACE . struct_declaration_list RBRACE [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LSQUARE LPAR LONG INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPE_NAME shift to state 35
-- On STRUCT shift to state 7
-- On SIGNED shift to state 18
-- On SHORT shift to state 19
-- On RESTRICT shift to state 10
-- On LONG shift to state 37
-- On INT shift to state 38
-- On FLOAT shift to state 140
-- On ENUM shift to state 141
-- On DOUBLE shift to state 156
-- On CONST shift to state 11
-- On CHAR shift to state 157
-- On type_specifier_no_name shift to state 158
-- On type_specifier shift to state 159
-- On type_qualifier shift to state 165
-- On struct_or_union_specifier shift to state 162
-- On struct_or_union shift to state 163
-- On struct_declaration_list shift to state 168
-- On struct_declaration shift to state 237
-- On specifier_qualifier_list shift to state 171
-- On enum_specifier shift to state 167

State 165:
specifier_qualifier_list -> type_qualifier . specifier_qualifier_list [ TYPE_NAME STAR RPAR LSQUARE LPAR IDENTIFIER COLON ]
specifier_qualifier_list -> type_qualifier . [ TYPE_NAME STAR RPAR LSQUARE LPAR IDENTIFIER COLON ]
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPE_NAME shift to state 35
-- On STRUCT shift to state 7
-- On SIGNED shift to state 18
-- On SHORT shift to state 19
-- On RESTRICT shift to state 10
-- On LONG shift to state 37
-- On INT shift to state 38
-- On FLOAT shift to state 140
-- On ENUM shift to state 141
-- On DOUBLE shift to state 156
-- On CONST shift to state 11
-- On CHAR shift to state 157
-- On type_specifier_no_name shift to state 158
-- On type_specifier shift to state 159
-- On type_qualifier shift to state 165
-- On struct_or_union_specifier shift to state 162
-- On struct_or_union shift to state 163
-- On specifier_qualifier_list shift to state 166
-- On enum_specifier shift to state 167
-- On STAR reduce production specifier_qualifier_list -> type_qualifier
-- On RPAR reduce production specifier_qualifier_list -> type_qualifier
-- On LSQUARE reduce production specifier_qualifier_list -> type_qualifier
-- On LPAR reduce production specifier_qualifier_list -> type_qualifier
-- On IDENTIFIER reduce production specifier_qualifier_list -> type_qualifier
-- On COLON reduce production specifier_qualifier_list -> type_qualifier

State 166:
specifier_qualifier_list -> type_qualifier specifier_qualifier_list . [ TYPE_NAME STAR RPAR LSQUARE LPAR IDENTIFIER COLON ]
-- On TYPE_NAME reduce production specifier_qualifier_list -> type_qualifier specifier_qualifier_list
-- On STAR reduce production specifier_qualifier_list -> type_qualifier specifier_qualifier_list
-- On RPAR reduce production specifier_qualifier_list -> type_qualifier specifier_qualifier_list
-- On LSQUARE reduce production specifier_qualifier_list -> type_qualifier specifier_qualifier_list
-- On LPAR reduce production specifier_qualifier_list -> type_qualifier specifier_qualifier_list
-- On IDENTIFIER reduce production specifier_qualifier_list -> type_qualifier specifier_qualifier_list
-- On COLON reduce production specifier_qualifier_list -> type_qualifier specifier_qualifier_list

State 167:
type_specifier_no_name -> enum_specifier . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LSQUARE LPAR LONG INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On VOLATILE reduce production type_specifier_no_name -> enum_specifier
-- On VOID reduce production type_specifier_no_name -> enum_specifier
-- On UNSIGNED reduce production type_specifier_no_name -> enum_specifier
-- On UNION reduce production type_specifier_no_name -> enum_specifier
-- On TYPE_NAME reduce production type_specifier_no_name -> enum_specifier
-- On TYPEDEF reduce production type_specifier_no_name -> enum_specifier
-- On STRUCT reduce production type_specifier_no_name -> enum_specifier
-- On STATIC reduce production type_specifier_no_name -> enum_specifier
-- On STAR reduce production type_specifier_no_name -> enum_specifier
-- On SIGNED reduce production type_specifier_no_name -> enum_specifier
-- On SHORT reduce production type_specifier_no_name -> enum_specifier
-- On SEMICOLON reduce production type_specifier_no_name -> enum_specifier
-- On RPAR reduce production type_specifier_no_name -> enum_specifier
-- On RESTRICT reduce production type_specifier_no_name -> enum_specifier
-- On REGISTER reduce production type_specifier_no_name -> enum_specifier
-- On LSQUARE reduce production type_specifier_no_name -> enum_specifier
-- On LPAR reduce production type_specifier_no_name -> enum_specifier
-- On LONG reduce production type_specifier_no_name -> enum_specifier
-- On INT reduce production type_specifier_no_name -> enum_specifier
-- On IDENTIFIER reduce production type_specifier_no_name -> enum_specifier
-- On FLOAT reduce production type_specifier_no_name -> enum_specifier
-- On EXTERN reduce production type_specifier_no_name -> enum_specifier
-- On ENUM reduce production type_specifier_no_name -> enum_specifier
-- On DOUBLE reduce production type_specifier_no_name -> enum_specifier
-- On CONST reduce production type_specifier_no_name -> enum_specifier
-- On COMMA reduce production type_specifier_no_name -> enum_specifier
-- On COLON reduce production type_specifier_no_name -> enum_specifier
-- On CHAR reduce production type_specifier_no_name -> enum_specifier
-- On AUTO reduce production type_specifier_no_name -> enum_specifier

State 168:
struct_declaration_list -> struct_declaration_list . struct_declaration [ VOLATILE VOID UNSIGNED UNION TYPE_NAME STRUCT SIGNED SHORT RESTRICT RBRACE LONG INT FLOAT ENUM DOUBLE CONST CHAR ]
struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list . RBRACE [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LSQUARE LPAR LONG INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPE_NAME shift to state 35
-- On STRUCT shift to state 7
-- On SIGNED shift to state 18
-- On SHORT shift to state 19
-- On RESTRICT shift to state 10
-- On RBRACE shift to state 169
-- On LONG shift to state 37
-- On INT shift to state 38
-- On FLOAT shift to state 140
-- On ENUM shift to state 141
-- On DOUBLE shift to state 156
-- On CONST shift to state 11
-- On CHAR shift to state 157
-- On type_specifier_no_name shift to state 158
-- On type_specifier shift to state 159
-- On type_qualifier shift to state 165
-- On struct_or_union_specifier shift to state 162
-- On struct_or_union shift to state 163
-- On struct_declaration shift to state 170
-- On specifier_qualifier_list shift to state 171
-- On enum_specifier shift to state 167

State 169:
struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LSQUARE LPAR LONG INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On VOLATILE reduce production struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE
-- On VOID reduce production struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE
-- On UNSIGNED reduce production struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE
-- On UNION reduce production struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE
-- On TYPE_NAME reduce production struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE
-- On TYPEDEF reduce production struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE
-- On STRUCT reduce production struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE
-- On STATIC reduce production struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE
-- On STAR reduce production struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE
-- On SIGNED reduce production struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE
-- On SHORT reduce production struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE
-- On SEMICOLON reduce production struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE
-- On RPAR reduce production struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE
-- On RESTRICT reduce production struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE
-- On REGISTER reduce production struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE
-- On LSQUARE reduce production struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE
-- On LPAR reduce production struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE
-- On LONG reduce production struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE
-- On INT reduce production struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE
-- On IDENTIFIER reduce production struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE
-- On FLOAT reduce production struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE
-- On EXTERN reduce production struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE
-- On ENUM reduce production struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE
-- On DOUBLE reduce production struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE
-- On CONST reduce production struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE
-- On COMMA reduce production struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE
-- On COLON reduce production struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE
-- On CHAR reduce production struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE
-- On AUTO reduce production struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE

State 170:
struct_declaration_list -> struct_declaration_list struct_declaration . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME STRUCT SIGNED SHORT RESTRICT RBRACE LONG INT FLOAT ENUM DOUBLE CONST CHAR ]
-- On VOLATILE reduce production struct_declaration_list -> struct_declaration_list struct_declaration
-- On VOID reduce production struct_declaration_list -> struct_declaration_list struct_declaration
-- On UNSIGNED reduce production struct_declaration_list -> struct_declaration_list struct_declaration
-- On UNION reduce production struct_declaration_list -> struct_declaration_list struct_declaration
-- On TYPE_NAME reduce production struct_declaration_list -> struct_declaration_list struct_declaration
-- On STRUCT reduce production struct_declaration_list -> struct_declaration_list struct_declaration
-- On SIGNED reduce production struct_declaration_list -> struct_declaration_list struct_declaration
-- On SHORT reduce production struct_declaration_list -> struct_declaration_list struct_declaration
-- On RESTRICT reduce production struct_declaration_list -> struct_declaration_list struct_declaration
-- On RBRACE reduce production struct_declaration_list -> struct_declaration_list struct_declaration
-- On LONG reduce production struct_declaration_list -> struct_declaration_list struct_declaration
-- On INT reduce production struct_declaration_list -> struct_declaration_list struct_declaration
-- On FLOAT reduce production struct_declaration_list -> struct_declaration_list struct_declaration
-- On ENUM reduce production struct_declaration_list -> struct_declaration_list struct_declaration
-- On DOUBLE reduce production struct_declaration_list -> struct_declaration_list struct_declaration
-- On CONST reduce production struct_declaration_list -> struct_declaration_list struct_declaration
-- On CHAR reduce production struct_declaration_list -> struct_declaration_list struct_declaration

State 171:
struct_declaration -> specifier_qualifier_list . struct_declarator_list SEMICOLON [ VOLATILE VOID UNSIGNED UNION TYPE_NAME STRUCT SIGNED SHORT RESTRICT RBRACE LONG INT FLOAT ENUM DOUBLE CONST CHAR ]
-- On TYPE_NAME shift to state 22
-- On STAR shift to state 9
-- On LPAR shift to state 21
-- On IDENTIFIER shift to state 23
-- On COLON shift to state 172
-- On struct_declarator_list shift to state 174
-- On struct_declarator shift to state 236
-- On pointer shift to state 24
-- On identifier shift to state 25
-- On direct_declarator shift to state 178
-- On declarator shift to state 233

State 172:
struct_declarator -> COLON . constant_expression [ SEMICOLON COMMA ]
-- On TILDE shift to state 28
-- On STRING_LITERAL shift to state 29
-- On STAR shift to state 30
-- On SIZEOF shift to state 31
-- On PLUS shift to state 32
-- On MINUS shift to state 33
-- On LPAR shift to state 36
-- On INC_OP shift to state 39
-- On IDENTIFIER shift to state 41
-- On EXL shift to state 42
-- On DEC_OP shift to state 43
-- On CONSTANT shift to state 44
-- On AMP shift to state 45
-- On unary_operator shift to state 46
-- On unary_expression shift to state 47
-- On shift_expression shift to state 66
-- On relational_expression shift to state 83
-- On primary_expression shift to state 48
-- On postfix_expression shift to state 49
-- On multiplicative_expression shift to state 68
-- On logical_or_expression shift to state 93
-- On logical_and_expression shift to state 95
-- On inclusive_or_expression shift to state 111
-- On exclusive_or_expression shift to state 110
-- On equality_expression shift to state 101
-- On constant_expression shift to state 173
-- On conditional_expression shift to state 146
-- On cast_expression shift to state 75
-- On and_expression shift to state 109
-- On additive_expression shift to state 86

State 173:
struct_declarator -> COLON constant_expression . [ SEMICOLON COMMA ]
-- On SEMICOLON reduce production struct_declarator -> COLON constant_expression
-- On COMMA reduce production struct_declarator -> COLON constant_expression

State 174:
struct_declaration -> specifier_qualifier_list struct_declarator_list . SEMICOLON [ VOLATILE VOID UNSIGNED UNION TYPE_NAME STRUCT SIGNED SHORT RESTRICT RBRACE LONG INT FLOAT ENUM DOUBLE CONST CHAR ]
struct_declarator_list -> struct_declarator_list . COMMA struct_declarator [ SEMICOLON COMMA ]
-- On SEMICOLON shift to state 175
-- On COMMA shift to state 176

State 175:
struct_declaration -> specifier_qualifier_list struct_declarator_list SEMICOLON . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME STRUCT SIGNED SHORT RESTRICT RBRACE LONG INT FLOAT ENUM DOUBLE CONST CHAR ]
-- On VOLATILE reduce production struct_declaration -> specifier_qualifier_list struct_declarator_list SEMICOLON
-- On VOID reduce production struct_declaration -> specifier_qualifier_list struct_declarator_list SEMICOLON
-- On UNSIGNED reduce production struct_declaration -> specifier_qualifier_list struct_declarator_list SEMICOLON
-- On UNION reduce production struct_declaration -> specifier_qualifier_list struct_declarator_list SEMICOLON
-- On TYPE_NAME reduce production struct_declaration -> specifier_qualifier_list struct_declarator_list SEMICOLON
-- On STRUCT reduce production struct_declaration -> specifier_qualifier_list struct_declarator_list SEMICOLON
-- On SIGNED reduce production struct_declaration -> specifier_qualifier_list struct_declarator_list SEMICOLON
-- On SHORT reduce production struct_declaration -> specifier_qualifier_list struct_declarator_list SEMICOLON
-- On RESTRICT reduce production struct_declaration -> specifier_qualifier_list struct_declarator_list SEMICOLON
-- On RBRACE reduce production struct_declaration -> specifier_qualifier_list struct_declarator_list SEMICOLON
-- On LONG reduce production struct_declaration -> specifier_qualifier_list struct_declarator_list SEMICOLON
-- On INT reduce production struct_declaration -> specifier_qualifier_list struct_declarator_list SEMICOLON
-- On FLOAT reduce production struct_declaration -> specifier_qualifier_list struct_declarator_list SEMICOLON
-- On ENUM reduce production struct_declaration -> specifier_qualifier_list struct_declarator_list SEMICOLON
-- On DOUBLE reduce production struct_declaration -> specifier_qualifier_list struct_declarator_list SEMICOLON
-- On CONST reduce production struct_declaration -> specifier_qualifier_list struct_declarator_list SEMICOLON
-- On CHAR reduce production struct_declaration -> specifier_qualifier_list struct_declarator_list SEMICOLON

State 176:
struct_declarator_list -> struct_declarator_list COMMA . struct_declarator [ SEMICOLON COMMA ]
-- On TYPE_NAME shift to state 22
-- On STAR shift to state 9
-- On LPAR shift to state 21
-- On IDENTIFIER shift to state 23
-- On COLON shift to state 172
-- On struct_declarator shift to state 177
-- On pointer shift to state 24
-- On identifier shift to state 25
-- On direct_declarator shift to state 178
-- On declarator shift to state 233

State 177:
struct_declarator_list -> struct_declarator_list COMMA struct_declarator . [ SEMICOLON COMMA ]
-- On SEMICOLON reduce production struct_declarator_list -> struct_declarator_list COMMA struct_declarator
-- On COMMA reduce production struct_declarator_list -> struct_declarator_list COMMA struct_declarator

State 178:
declarator -> direct_declarator . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC SPEC SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LONG LBRACE INT FLOAT EXTERN EQUAL ENUM DOUBLE DECL CONST COMMA COLON CHAR AUTO ATTRIBUTE ]
direct_declarator -> direct_declarator . LSQUARE constant_expression RSQUARE [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC SPEC SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LSQUARE LPAR LONG LBRACE INT FLOAT EXTERN EQUAL ENUM DOUBLE DECL CONST COMMA COLON CHAR AUTO ATTRIBUTE ]
direct_declarator -> direct_declarator . LSQUARE RSQUARE [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC SPEC SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LSQUARE LPAR LONG LBRACE INT FLOAT EXTERN EQUAL ENUM DOUBLE DECL CONST COMMA COLON CHAR AUTO ATTRIBUTE ]
direct_declarator -> direct_declarator . LPAR parameter_type_list RPAR [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC SPEC SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LSQUARE LPAR LONG LBRACE INT FLOAT EXTERN EQUAL ENUM DOUBLE DECL CONST COMMA COLON CHAR AUTO ATTRIBUTE ]
direct_declarator -> direct_declarator . LPAR identifier_list RPAR [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC SPEC SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LSQUARE LPAR LONG LBRACE INT FLOAT EXTERN EQUAL ENUM DOUBLE DECL CONST COMMA COLON CHAR AUTO ATTRIBUTE ]
direct_declarator -> direct_declarator . LPAR RPAR [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC SPEC SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LSQUARE LPAR LONG LBRACE INT FLOAT EXTERN EQUAL ENUM DOUBLE DECL CONST COMMA COLON CHAR AUTO ATTRIBUTE ]
-- On LSQUARE shift to state 27
-- On LPAR shift to state 179
-- On VOLATILE reduce production declarator -> direct_declarator
-- On VOID reduce production declarator -> direct_declarator
-- On UNSIGNED reduce production declarator -> direct_declarator
-- On UNION reduce production declarator -> direct_declarator
-- On TYPE_NAME reduce production declarator -> direct_declarator
-- On TYPEDEF reduce production declarator -> direct_declarator
-- On STRUCT reduce production declarator -> direct_declarator
-- On STATIC reduce production declarator -> direct_declarator
-- On SPEC reduce production declarator -> direct_declarator
-- On SIGNED reduce production declarator -> direct_declarator
-- On SHORT reduce production declarator -> direct_declarator
-- On SEMICOLON reduce production declarator -> direct_declarator
-- On RPAR reduce production declarator -> direct_declarator
-- On RESTRICT reduce production declarator -> direct_declarator
-- On REGISTER reduce production declarator -> direct_declarator
-- On LONG reduce production declarator -> direct_declarator
-- On LBRACE reduce production declarator -> direct_declarator
-- On INT reduce production declarator -> direct_declarator
-- On FLOAT reduce production declarator -> direct_declarator
-- On EXTERN reduce production declarator -> direct_declarator
-- On EQUAL reduce production declarator -> direct_declarator
-- On ENUM reduce production declarator -> direct_declarator
-- On DOUBLE reduce production declarator -> direct_declarator
-- On DECL reduce production declarator -> direct_declarator
-- On CONST reduce production declarator -> direct_declarator
-- On COMMA reduce production declarator -> direct_declarator
-- On COLON reduce production declarator -> direct_declarator
-- On CHAR reduce production declarator -> direct_declarator
-- On AUTO reduce production declarator -> direct_declarator
-- On ATTRIBUTE reduce production declarator -> direct_declarator

State 179:
direct_declarator -> direct_declarator LPAR . parameter_type_list RPAR [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC SPEC SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LSQUARE LPAR LONG LBRACE INT FLOAT EXTERN EQUAL ENUM DOUBLE DECL CONST COMMA COLON CHAR AUTO ATTRIBUTE ]
direct_declarator -> direct_declarator LPAR . identifier_list RPAR [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC SPEC SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LSQUARE LPAR LONG LBRACE INT FLOAT EXTERN EQUAL ENUM DOUBLE DECL CONST COMMA COLON CHAR AUTO ATTRIBUTE ]
direct_declarator -> direct_declarator LPAR . RPAR [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC SPEC SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LSQUARE LPAR LONG LBRACE INT FLOAT EXTERN EQUAL ENUM DOUBLE DECL CONST COMMA COLON CHAR AUTO ATTRIBUTE ]
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPE_NAME shift to state 35
-- On TYPEDEF shift to state 6
-- On STRUCT shift to state 7
-- On STATIC shift to state 8
-- On SIGNED shift to state 18
-- On SHORT shift to state 19
-- On RPAR shift to state 180
-- On RESTRICT shift to state 10
-- On REGISTER shift to state 20
-- On LONG shift to state 37
-- On INT shift to state 38
-- On IDENTIFIER shift to state 181
-- On FLOAT shift to state 140
-- On EXTERN shift to state 182
-- On ENUM shift to state 141
-- On DOUBLE shift to state 156
-- On CONST shift to state 11
-- On CHAR shift to state 157
-- On AUTO shift to state 183
-- On type_specifier_no_name shift to state 158
-- On type_specifier shift to state 184
-- On type_qualifier shift to state 187
-- On struct_or_union_specifier shift to state 162
-- On struct_or_union shift to state 163
-- On storage_class_specifier shift to state 188
-- On parameter_type_list shift to state 196
-- On parameter_list shift to state 198
-- On parameter_declaration shift to state 219
-- On identifier_list shift to state 229
-- On enum_specifier shift to state 167
-- On declaration_specifiers shift to state 202

State 180:
direct_declarator -> direct_declarator LPAR RPAR . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC SPEC SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LSQUARE LPAR LONG LBRACE INT FLOAT EXTERN EQUAL ENUM DOUBLE DECL CONST COMMA COLON CHAR AUTO ATTRIBUTE ]
-- On VOLATILE reduce production direct_declarator -> direct_declarator LPAR RPAR
-- On VOID reduce production direct_declarator -> direct_declarator LPAR RPAR
-- On UNSIGNED reduce production direct_declarator -> direct_declarator LPAR RPAR
-- On UNION reduce production direct_declarator -> direct_declarator LPAR RPAR
-- On TYPE_NAME reduce production direct_declarator -> direct_declarator LPAR RPAR
-- On TYPEDEF reduce production direct_declarator -> direct_declarator LPAR RPAR
-- On STRUCT reduce production direct_declarator -> direct_declarator LPAR RPAR
-- On STATIC reduce production direct_declarator -> direct_declarator LPAR RPAR
-- On SPEC reduce production direct_declarator -> direct_declarator LPAR RPAR
-- On SIGNED reduce production direct_declarator -> direct_declarator LPAR RPAR
-- On SHORT reduce production direct_declarator -> direct_declarator LPAR RPAR
-- On SEMICOLON reduce production direct_declarator -> direct_declarator LPAR RPAR
-- On RPAR reduce production direct_declarator -> direct_declarator LPAR RPAR
-- On RESTRICT reduce production direct_declarator -> direct_declarator LPAR RPAR
-- On REGISTER reduce production direct_declarator -> direct_declarator LPAR RPAR
-- On LSQUARE reduce production direct_declarator -> direct_declarator LPAR RPAR
-- On LPAR reduce production direct_declarator -> direct_declarator LPAR RPAR
-- On LONG reduce production direct_declarator -> direct_declarator LPAR RPAR
-- On LBRACE reduce production direct_declarator -> direct_declarator LPAR RPAR
-- On INT reduce production direct_declarator -> direct_declarator LPAR RPAR
-- On FLOAT reduce production direct_declarator -> direct_declarator LPAR RPAR
-- On EXTERN reduce production direct_declarator -> direct_declarator LPAR RPAR
-- On EQUAL reduce production direct_declarator -> direct_declarator LPAR RPAR
-- On ENUM reduce production direct_declarator -> direct_declarator LPAR RPAR
-- On DOUBLE reduce production direct_declarator -> direct_declarator LPAR RPAR
-- On DECL reduce production direct_declarator -> direct_declarator LPAR RPAR
-- On CONST reduce production direct_declarator -> direct_declarator LPAR RPAR
-- On COMMA reduce production direct_declarator -> direct_declarator LPAR RPAR
-- On COLON reduce production direct_declarator -> direct_declarator LPAR RPAR
-- On CHAR reduce production direct_declarator -> direct_declarator LPAR RPAR
-- On AUTO reduce production direct_declarator -> direct_declarator LPAR RPAR
-- On ATTRIBUTE reduce production direct_declarator -> direct_declarator LPAR RPAR

State 181:
identifier_list -> IDENTIFIER . [ RPAR COMMA ]
-- On RPAR reduce production identifier_list -> IDENTIFIER
-- On COMMA reduce production identifier_list -> IDENTIFIER

State 182:
storage_class_specifier -> EXTERN . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LSQUARE LPAR LONG INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA CHAR AUTO ]
-- On VOLATILE reduce production storage_class_specifier -> EXTERN
-- On VOID reduce production storage_class_specifier -> EXTERN
-- On UNSIGNED reduce production storage_class_specifier -> EXTERN
-- On UNION reduce production storage_class_specifier -> EXTERN
-- On TYPE_NAME reduce production storage_class_specifier -> EXTERN
-- On TYPEDEF reduce production storage_class_specifier -> EXTERN
-- On STRUCT reduce production storage_class_specifier -> EXTERN
-- On STATIC reduce production storage_class_specifier -> EXTERN
-- On STAR reduce production storage_class_specifier -> EXTERN
-- On SIGNED reduce production storage_class_specifier -> EXTERN
-- On SHORT reduce production storage_class_specifier -> EXTERN
-- On SEMICOLON reduce production storage_class_specifier -> EXTERN
-- On RPAR reduce production storage_class_specifier -> EXTERN
-- On RESTRICT reduce production storage_class_specifier -> EXTERN
-- On REGISTER reduce production storage_class_specifier -> EXTERN
-- On LSQUARE reduce production storage_class_specifier -> EXTERN
-- On LPAR reduce production storage_class_specifier -> EXTERN
-- On LONG reduce production storage_class_specifier -> EXTERN
-- On INT reduce production storage_class_specifier -> EXTERN
-- On IDENTIFIER reduce production storage_class_specifier -> EXTERN
-- On FLOAT reduce production storage_class_specifier -> EXTERN
-- On EXTERN reduce production storage_class_specifier -> EXTERN
-- On ENUM reduce production storage_class_specifier -> EXTERN
-- On DOUBLE reduce production storage_class_specifier -> EXTERN
-- On CONST reduce production storage_class_specifier -> EXTERN
-- On COMMA reduce production storage_class_specifier -> EXTERN
-- On CHAR reduce production storage_class_specifier -> EXTERN
-- On AUTO reduce production storage_class_specifier -> EXTERN

State 183:
storage_class_specifier -> AUTO . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LSQUARE LPAR LONG INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA CHAR AUTO ]
-- On VOLATILE reduce production storage_class_specifier -> AUTO
-- On VOID reduce production storage_class_specifier -> AUTO
-- On UNSIGNED reduce production storage_class_specifier -> AUTO
-- On UNION reduce production storage_class_specifier -> AUTO
-- On TYPE_NAME reduce production storage_class_specifier -> AUTO
-- On TYPEDEF reduce production storage_class_specifier -> AUTO
-- On STRUCT reduce production storage_class_specifier -> AUTO
-- On STATIC reduce production storage_class_specifier -> AUTO
-- On STAR reduce production storage_class_specifier -> AUTO
-- On SIGNED reduce production storage_class_specifier -> AUTO
-- On SHORT reduce production storage_class_specifier -> AUTO
-- On SEMICOLON reduce production storage_class_specifier -> AUTO
-- On RPAR reduce production storage_class_specifier -> AUTO
-- On RESTRICT reduce production storage_class_specifier -> AUTO
-- On REGISTER reduce production storage_class_specifier -> AUTO
-- On LSQUARE reduce production storage_class_specifier -> AUTO
-- On LPAR reduce production storage_class_specifier -> AUTO
-- On LONG reduce production storage_class_specifier -> AUTO
-- On INT reduce production storage_class_specifier -> AUTO
-- On IDENTIFIER reduce production storage_class_specifier -> AUTO
-- On FLOAT reduce production storage_class_specifier -> AUTO
-- On EXTERN reduce production storage_class_specifier -> AUTO
-- On ENUM reduce production storage_class_specifier -> AUTO
-- On DOUBLE reduce production storage_class_specifier -> AUTO
-- On CONST reduce production storage_class_specifier -> AUTO
-- On COMMA reduce production storage_class_specifier -> AUTO
-- On CHAR reduce production storage_class_specifier -> AUTO
-- On AUTO reduce production storage_class_specifier -> AUTO

State 184:
declaration_specifiers -> type_specifier . [ TYPE_NAME STAR SEMICOLON RPAR LSQUARE LPAR IDENTIFIER COMMA ]
declaration_specifiers -> type_specifier . declaration_specifiers_no_name [ TYPE_NAME STAR SEMICOLON RPAR LSQUARE LPAR IDENTIFIER COMMA ]
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPEDEF shift to state 6
-- On STRUCT shift to state 7
-- On STATIC shift to state 8
-- On SIGNED shift to state 18
-- On SHORT shift to state 19
-- On RESTRICT shift to state 10
-- On REGISTER shift to state 20
-- On LONG shift to state 37
-- On INT shift to state 38
-- On FLOAT shift to state 140
-- On EXTERN shift to state 182
-- On ENUM shift to state 141
-- On DOUBLE shift to state 156
-- On CONST shift to state 11
-- On CHAR shift to state 157
-- On AUTO shift to state 183
-- On type_specifier_no_name shift to state 185
-- On type_qualifier shift to state 186
-- On struct_or_union_specifier shift to state 162
-- On struct_or_union shift to state 163
-- On storage_class_specifier shift to state 192
-- On enum_specifier shift to state 167
-- On declaration_specifiers_no_name shift to state 195
-- On TYPE_NAME reduce production declaration_specifiers -> type_specifier
-- On STAR reduce production declaration_specifiers -> type_specifier
-- On SEMICOLON reduce production declaration_specifiers -> type_specifier
-- On RPAR reduce production declaration_specifiers -> type_specifier
-- On LSQUARE reduce production declaration_specifiers -> type_specifier
-- On LPAR reduce production declaration_specifiers -> type_specifier
-- On IDENTIFIER reduce production declaration_specifiers -> type_specifier
-- On COMMA reduce production declaration_specifiers -> type_specifier

State 185:
declaration_specifiers_no_name -> type_specifier_no_name . [ TYPE_NAME STAR SEMICOLON RPAR LSQUARE LPAR IDENTIFIER COMMA ]
declaration_specifiers_no_name -> type_specifier_no_name . declaration_specifiers_no_name [ TYPE_NAME STAR SEMICOLON RPAR LSQUARE LPAR IDENTIFIER COMMA ]
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPEDEF shift to state 6
-- On STRUCT shift to state 7
-- On STATIC shift to state 8
-- On SIGNED shift to state 18
-- On SHORT shift to state 19
-- On RESTRICT shift to state 10
-- On REGISTER shift to state 20
-- On LONG shift to state 37
-- On INT shift to state 38
-- On FLOAT shift to state 140
-- On EXTERN shift to state 182
-- On ENUM shift to state 141
-- On DOUBLE shift to state 156
-- On CONST shift to state 11
-- On CHAR shift to state 157
-- On AUTO shift to state 183
-- On type_specifier_no_name shift to state 185
-- On type_qualifier shift to state 186
-- On struct_or_union_specifier shift to state 162
-- On struct_or_union shift to state 163
-- On storage_class_specifier shift to state 192
-- On enum_specifier shift to state 167
-- On declaration_specifiers_no_name shift to state 194
-- On TYPE_NAME reduce production declaration_specifiers_no_name -> type_specifier_no_name
-- On STAR reduce production declaration_specifiers_no_name -> type_specifier_no_name
-- On SEMICOLON reduce production declaration_specifiers_no_name -> type_specifier_no_name
-- On RPAR reduce production declaration_specifiers_no_name -> type_specifier_no_name
-- On LSQUARE reduce production declaration_specifiers_no_name -> type_specifier_no_name
-- On LPAR reduce production declaration_specifiers_no_name -> type_specifier_no_name
-- On IDENTIFIER reduce production declaration_specifiers_no_name -> type_specifier_no_name
-- On COMMA reduce production declaration_specifiers_no_name -> type_specifier_no_name

State 186:
declaration_specifiers_no_name -> type_qualifier . [ TYPE_NAME STAR SEMICOLON RPAR LSQUARE LPAR IDENTIFIER COMMA ]
declaration_specifiers_no_name -> type_qualifier . declaration_specifiers [ TYPE_NAME STAR SEMICOLON RPAR LSQUARE LPAR IDENTIFIER COMMA ]
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPE_NAME shift to state 35
-- On TYPEDEF shift to state 6
-- On STRUCT shift to state 7
-- On STATIC shift to state 8
-- On SIGNED shift to state 18
-- On SHORT shift to state 19
-- On RESTRICT shift to state 10
-- On REGISTER shift to state 20
-- On LONG shift to state 37
-- On INT shift to state 38
-- On FLOAT shift to state 140
-- On EXTERN shift to state 182
-- On ENUM shift to state 141
-- On DOUBLE shift to state 156
-- On CONST shift to state 11
-- On CHAR shift to state 157
-- On AUTO shift to state 183
-- On type_specifier_no_name shift to state 158
-- On type_specifier shift to state 184
-- On type_qualifier shift to state 187
-- On struct_or_union_specifier shift to state 162
-- On struct_or_union shift to state 163
-- On storage_class_specifier shift to state 188
-- On enum_specifier shift to state 167
-- On declaration_specifiers shift to state 191
-- On STAR reduce production declaration_specifiers_no_name -> type_qualifier
-- On SEMICOLON reduce production declaration_specifiers_no_name -> type_qualifier
-- On RPAR reduce production declaration_specifiers_no_name -> type_qualifier
-- On LSQUARE reduce production declaration_specifiers_no_name -> type_qualifier
-- On LPAR reduce production declaration_specifiers_no_name -> type_qualifier
-- On IDENTIFIER reduce production declaration_specifiers_no_name -> type_qualifier
-- On COMMA reduce production declaration_specifiers_no_name -> type_qualifier

State 187:
declaration_specifiers -> type_qualifier . [ TYPE_NAME STAR SEMICOLON RPAR LSQUARE LPAR IDENTIFIER COMMA ]
declaration_specifiers -> type_qualifier . declaration_specifiers [ TYPE_NAME STAR SEMICOLON RPAR LSQUARE LPAR IDENTIFIER COMMA ]
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPE_NAME shift to state 35
-- On TYPEDEF shift to state 6
-- On STRUCT shift to state 7
-- On STATIC shift to state 8
-- On SIGNED shift to state 18
-- On SHORT shift to state 19
-- On RESTRICT shift to state 10
-- On REGISTER shift to state 20
-- On LONG shift to state 37
-- On INT shift to state 38
-- On FLOAT shift to state 140
-- On EXTERN shift to state 182
-- On ENUM shift to state 141
-- On DOUBLE shift to state 156
-- On CONST shift to state 11
-- On CHAR shift to state 157
-- On AUTO shift to state 183
-- On type_specifier_no_name shift to state 158
-- On type_specifier shift to state 184
-- On type_qualifier shift to state 187
-- On struct_or_union_specifier shift to state 162
-- On struct_or_union shift to state 163
-- On storage_class_specifier shift to state 188
-- On enum_specifier shift to state 167
-- On declaration_specifiers shift to state 190
-- On STAR reduce production declaration_specifiers -> type_qualifier
-- On SEMICOLON reduce production declaration_specifiers -> type_qualifier
-- On RPAR reduce production declaration_specifiers -> type_qualifier
-- On LSQUARE reduce production declaration_specifiers -> type_qualifier
-- On LPAR reduce production declaration_specifiers -> type_qualifier
-- On IDENTIFIER reduce production declaration_specifiers -> type_qualifier
-- On COMMA reduce production declaration_specifiers -> type_qualifier

State 188:
declaration_specifiers -> storage_class_specifier . [ TYPE_NAME STAR SEMICOLON RPAR LSQUARE LPAR IDENTIFIER COMMA ]
declaration_specifiers -> storage_class_specifier . declaration_specifiers [ TYPE_NAME STAR SEMICOLON RPAR LSQUARE LPAR IDENTIFIER COMMA ]
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPE_NAME shift to state 35
-- On TYPEDEF shift to state 6
-- On STRUCT shift to state 7
-- On STATIC shift to state 8
-- On SIGNED shift to state 18
-- On SHORT shift to state 19
-- On RESTRICT shift to state 10
-- On REGISTER shift to state 20
-- On LONG shift to state 37
-- On INT shift to state 38
-- On FLOAT shift to state 140
-- On EXTERN shift to state 182
-- On ENUM shift to state 141
-- On DOUBLE shift to state 156
-- On CONST shift to state 11
-- On CHAR shift to state 157
-- On AUTO shift to state 183
-- On type_specifier_no_name shift to state 158
-- On type_specifier shift to state 184
-- On type_qualifier shift to state 187
-- On struct_or_union_specifier shift to state 162
-- On struct_or_union shift to state 163
-- On storage_class_specifier shift to state 188
-- On enum_specifier shift to state 167
-- On declaration_specifiers shift to state 189
-- On STAR reduce production declaration_specifiers -> storage_class_specifier
-- On SEMICOLON reduce production declaration_specifiers -> storage_class_specifier
-- On RPAR reduce production declaration_specifiers -> storage_class_specifier
-- On LSQUARE reduce production declaration_specifiers -> storage_class_specifier
-- On LPAR reduce production declaration_specifiers -> storage_class_specifier
-- On IDENTIFIER reduce production declaration_specifiers -> storage_class_specifier
-- On COMMA reduce production declaration_specifiers -> storage_class_specifier

State 189:
declaration_specifiers -> storage_class_specifier declaration_specifiers . [ TYPE_NAME STAR SEMICOLON RPAR LSQUARE LPAR IDENTIFIER COMMA ]
-- On TYPE_NAME reduce production declaration_specifiers -> storage_class_specifier declaration_specifiers
-- On STAR reduce production declaration_specifiers -> storage_class_specifier declaration_specifiers
-- On SEMICOLON reduce production declaration_specifiers -> storage_class_specifier declaration_specifiers
-- On RPAR reduce production declaration_specifiers -> storage_class_specifier declaration_specifiers
-- On LSQUARE reduce production declaration_specifiers -> storage_class_specifier declaration_specifiers
-- On LPAR reduce production declaration_specifiers -> storage_class_specifier declaration_specifiers
-- On IDENTIFIER reduce production declaration_specifiers -> storage_class_specifier declaration_specifiers
-- On COMMA reduce production declaration_specifiers -> storage_class_specifier declaration_specifiers

State 190:
declaration_specifiers -> type_qualifier declaration_specifiers . [ TYPE_NAME STAR SEMICOLON RPAR LSQUARE LPAR IDENTIFIER COMMA ]
-- On TYPE_NAME reduce production declaration_specifiers -> type_qualifier declaration_specifiers
-- On STAR reduce production declaration_specifiers -> type_qualifier declaration_specifiers
-- On SEMICOLON reduce production declaration_specifiers -> type_qualifier declaration_specifiers
-- On RPAR reduce production declaration_specifiers -> type_qualifier declaration_specifiers
-- On LSQUARE reduce production declaration_specifiers -> type_qualifier declaration_specifiers
-- On LPAR reduce production declaration_specifiers -> type_qualifier declaration_specifiers
-- On IDENTIFIER reduce production declaration_specifiers -> type_qualifier declaration_specifiers
-- On COMMA reduce production declaration_specifiers -> type_qualifier declaration_specifiers

State 191:
declaration_specifiers_no_name -> type_qualifier declaration_specifiers . [ TYPE_NAME STAR SEMICOLON RPAR LSQUARE LPAR IDENTIFIER COMMA ]
-- On TYPE_NAME reduce production declaration_specifiers_no_name -> type_qualifier declaration_specifiers
-- On STAR reduce production declaration_specifiers_no_name -> type_qualifier declaration_specifiers
-- On SEMICOLON reduce production declaration_specifiers_no_name -> type_qualifier declaration_specifiers
-- On RPAR reduce production declaration_specifiers_no_name -> type_qualifier declaration_specifiers
-- On LSQUARE reduce production declaration_specifiers_no_name -> type_qualifier declaration_specifiers
-- On LPAR reduce production declaration_specifiers_no_name -> type_qualifier declaration_specifiers
-- On IDENTIFIER reduce production declaration_specifiers_no_name -> type_qualifier declaration_specifiers
-- On COMMA reduce production declaration_specifiers_no_name -> type_qualifier declaration_specifiers

State 192:
declaration_specifiers_no_name -> storage_class_specifier . [ TYPE_NAME STAR SEMICOLON RPAR LSQUARE LPAR IDENTIFIER COMMA ]
declaration_specifiers_no_name -> storage_class_specifier . declaration_specifiers_no_name [ TYPE_NAME STAR SEMICOLON RPAR LSQUARE LPAR IDENTIFIER COMMA ]
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPEDEF shift to state 6
-- On STRUCT shift to state 7
-- On STATIC shift to state 8
-- On SIGNED shift to state 18
-- On SHORT shift to state 19
-- On RESTRICT shift to state 10
-- On REGISTER shift to state 20
-- On LONG shift to state 37
-- On INT shift to state 38
-- On FLOAT shift to state 140
-- On EXTERN shift to state 182
-- On ENUM shift to state 141
-- On DOUBLE shift to state 156
-- On CONST shift to state 11
-- On CHAR shift to state 157
-- On AUTO shift to state 183
-- On type_specifier_no_name shift to state 185
-- On type_qualifier shift to state 186
-- On struct_or_union_specifier shift to state 162
-- On struct_or_union shift to state 163
-- On storage_class_specifier shift to state 192
-- On enum_specifier shift to state 167
-- On declaration_specifiers_no_name shift to state 193
-- On TYPE_NAME reduce production declaration_specifiers_no_name -> storage_class_specifier
-- On STAR reduce production declaration_specifiers_no_name -> storage_class_specifier
-- On SEMICOLON reduce production declaration_specifiers_no_name -> storage_class_specifier
-- On RPAR reduce production declaration_specifiers_no_name -> storage_class_specifier
-- On LSQUARE reduce production declaration_specifiers_no_name -> storage_class_specifier
-- On LPAR reduce production declaration_specifiers_no_name -> storage_class_specifier
-- On IDENTIFIER reduce production declaration_specifiers_no_name -> storage_class_specifier
-- On COMMA reduce production declaration_specifiers_no_name -> storage_class_specifier

State 193:
declaration_specifiers_no_name -> storage_class_specifier declaration_specifiers_no_name . [ TYPE_NAME STAR SEMICOLON RPAR LSQUARE LPAR IDENTIFIER COMMA ]
-- On TYPE_NAME reduce production declaration_specifiers_no_name -> storage_class_specifier declaration_specifiers_no_name
-- On STAR reduce production declaration_specifiers_no_name -> storage_class_specifier declaration_specifiers_no_name
-- On SEMICOLON reduce production declaration_specifiers_no_name -> storage_class_specifier declaration_specifiers_no_name
-- On RPAR reduce production declaration_specifiers_no_name -> storage_class_specifier declaration_specifiers_no_name
-- On LSQUARE reduce production declaration_specifiers_no_name -> storage_class_specifier declaration_specifiers_no_name
-- On LPAR reduce production declaration_specifiers_no_name -> storage_class_specifier declaration_specifiers_no_name
-- On IDENTIFIER reduce production declaration_specifiers_no_name -> storage_class_specifier declaration_specifiers_no_name
-- On COMMA reduce production declaration_specifiers_no_name -> storage_class_specifier declaration_specifiers_no_name

State 194:
declaration_specifiers_no_name -> type_specifier_no_name declaration_specifiers_no_name . [ TYPE_NAME STAR SEMICOLON RPAR LSQUARE LPAR IDENTIFIER COMMA ]
-- On TYPE_NAME reduce production declaration_specifiers_no_name -> type_specifier_no_name declaration_specifiers_no_name
-- On STAR reduce production declaration_specifiers_no_name -> type_specifier_no_name declaration_specifiers_no_name
-- On SEMICOLON reduce production declaration_specifiers_no_name -> type_specifier_no_name declaration_specifiers_no_name
-- On RPAR reduce production declaration_specifiers_no_name -> type_specifier_no_name declaration_specifiers_no_name
-- On LSQUARE reduce production declaration_specifiers_no_name -> type_specifier_no_name declaration_specifiers_no_name
-- On LPAR reduce production declaration_specifiers_no_name -> type_specifier_no_name declaration_specifiers_no_name
-- On IDENTIFIER reduce production declaration_specifiers_no_name -> type_specifier_no_name declaration_specifiers_no_name
-- On COMMA reduce production declaration_specifiers_no_name -> type_specifier_no_name declaration_specifiers_no_name

State 195:
declaration_specifiers -> type_specifier declaration_specifiers_no_name . [ TYPE_NAME STAR SEMICOLON RPAR LSQUARE LPAR IDENTIFIER COMMA ]
-- On TYPE_NAME reduce production declaration_specifiers -> type_specifier declaration_specifiers_no_name
-- On STAR reduce production declaration_specifiers -> type_specifier declaration_specifiers_no_name
-- On SEMICOLON reduce production declaration_specifiers -> type_specifier declaration_specifiers_no_name
-- On RPAR reduce production declaration_specifiers -> type_specifier declaration_specifiers_no_name
-- On LSQUARE reduce production declaration_specifiers -> type_specifier declaration_specifiers_no_name
-- On LPAR reduce production declaration_specifiers -> type_specifier declaration_specifiers_no_name
-- On IDENTIFIER reduce production declaration_specifiers -> type_specifier declaration_specifiers_no_name
-- On COMMA reduce production declaration_specifiers -> type_specifier declaration_specifiers_no_name

State 196:
direct_declarator -> direct_declarator LPAR parameter_type_list . RPAR [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC SPEC SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LSQUARE LPAR LONG LBRACE INT FLOAT EXTERN EQUAL ENUM DOUBLE DECL CONST COMMA COLON CHAR AUTO ATTRIBUTE ]
-- On RPAR shift to state 197

State 197:
direct_declarator -> direct_declarator LPAR parameter_type_list RPAR . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC SPEC SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LSQUARE LPAR LONG LBRACE INT FLOAT EXTERN EQUAL ENUM DOUBLE DECL CONST COMMA COLON CHAR AUTO ATTRIBUTE ]
-- On VOLATILE reduce production direct_declarator -> direct_declarator LPAR parameter_type_list RPAR
-- On VOID reduce production direct_declarator -> direct_declarator LPAR parameter_type_list RPAR
-- On UNSIGNED reduce production direct_declarator -> direct_declarator LPAR parameter_type_list RPAR
-- On UNION reduce production direct_declarator -> direct_declarator LPAR parameter_type_list RPAR
-- On TYPE_NAME reduce production direct_declarator -> direct_declarator LPAR parameter_type_list RPAR
-- On TYPEDEF reduce production direct_declarator -> direct_declarator LPAR parameter_type_list RPAR
-- On STRUCT reduce production direct_declarator -> direct_declarator LPAR parameter_type_list RPAR
-- On STATIC reduce production direct_declarator -> direct_declarator LPAR parameter_type_list RPAR
-- On SPEC reduce production direct_declarator -> direct_declarator LPAR parameter_type_list RPAR
-- On SIGNED reduce production direct_declarator -> direct_declarator LPAR parameter_type_list RPAR
-- On SHORT reduce production direct_declarator -> direct_declarator LPAR parameter_type_list RPAR
-- On SEMICOLON reduce production direct_declarator -> direct_declarator LPAR parameter_type_list RPAR
-- On RPAR reduce production direct_declarator -> direct_declarator LPAR parameter_type_list RPAR
-- On RESTRICT reduce production direct_declarator -> direct_declarator LPAR parameter_type_list RPAR
-- On REGISTER reduce production direct_declarator -> direct_declarator LPAR parameter_type_list RPAR
-- On LSQUARE reduce production direct_declarator -> direct_declarator LPAR parameter_type_list RPAR
-- On LPAR reduce production direct_declarator -> direct_declarator LPAR parameter_type_list RPAR
-- On LONG reduce production direct_declarator -> direct_declarator LPAR parameter_type_list RPAR
-- On LBRACE reduce production direct_declarator -> direct_declarator LPAR parameter_type_list RPAR
-- On INT reduce production direct_declarator -> direct_declarator LPAR parameter_type_list RPAR
-- On FLOAT reduce production direct_declarator -> direct_declarator LPAR parameter_type_list RPAR
-- On EXTERN reduce production direct_declarator -> direct_declarator LPAR parameter_type_list RPAR
-- On EQUAL reduce production direct_declarator -> direct_declarator LPAR parameter_type_list RPAR
-- On ENUM reduce production direct_declarator -> direct_declarator LPAR parameter_type_list RPAR
-- On DOUBLE reduce production direct_declarator -> direct_declarator LPAR parameter_type_list RPAR
-- On DECL reduce production direct_declarator -> direct_declarator LPAR parameter_type_list RPAR
-- On CONST reduce production direct_declarator -> direct_declarator LPAR parameter_type_list RPAR
-- On COMMA reduce production direct_declarator -> direct_declarator LPAR parameter_type_list RPAR
-- On COLON reduce production direct_declarator -> direct_declarator LPAR parameter_type_list RPAR
-- On CHAR reduce production direct_declarator -> direct_declarator LPAR parameter_type_list RPAR
-- On AUTO reduce production direct_declarator -> direct_declarator LPAR parameter_type_list RPAR
-- On ATTRIBUTE reduce production direct_declarator -> direct_declarator LPAR parameter_type_list RPAR

State 198:
parameter_list -> parameter_list . COMMA parameter_declaration [ RPAR COMMA ]
parameter_type_list -> parameter_list . [ RPAR ]
parameter_type_list -> parameter_list . COMMA ELLIPSIS [ RPAR ]
-- On COMMA shift to state 199
-- On RPAR reduce production parameter_type_list -> parameter_list

State 199:
parameter_list -> parameter_list COMMA . parameter_declaration [ RPAR COMMA ]
parameter_type_list -> parameter_list COMMA . ELLIPSIS [ RPAR ]
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPE_NAME shift to state 35
-- On TYPEDEF shift to state 6
-- On STRUCT shift to state 7
-- On STATIC shift to state 8
-- On SIGNED shift to state 18
-- On SHORT shift to state 19
-- On RESTRICT shift to state 10
-- On REGISTER shift to state 20
-- On LONG shift to state 37
-- On INT shift to state 38
-- On FLOAT shift to state 140
-- On EXTERN shift to state 182
-- On ENUM shift to state 141
-- On ELLIPSIS shift to state 200
-- On DOUBLE shift to state 156
-- On CONST shift to state 11
-- On CHAR shift to state 157
-- On AUTO shift to state 183
-- On type_specifier_no_name shift to state 158
-- On type_specifier shift to state 184
-- On type_qualifier shift to state 187
-- On struct_or_union_specifier shift to state 162
-- On struct_or_union shift to state 163
-- On storage_class_specifier shift to state 188
-- On parameter_declaration shift to state 201
-- On enum_specifier shift to state 167
-- On declaration_specifiers shift to state 202

State 200:
parameter_type_list -> parameter_list COMMA ELLIPSIS . [ RPAR ]
-- On RPAR reduce production parameter_type_list -> parameter_list COMMA ELLIPSIS

State 201:
parameter_list -> parameter_list COMMA parameter_declaration . [ RPAR COMMA ]
-- On RPAR reduce production parameter_list -> parameter_list COMMA parameter_declaration
-- On COMMA reduce production parameter_list -> parameter_list COMMA parameter_declaration

State 202:
parameter_declaration -> declaration_specifiers . declarator [ RPAR COMMA ]
parameter_declaration -> declaration_specifiers . abstract_declarator [ RPAR COMMA ]
parameter_declaration -> declaration_specifiers . [ RPAR COMMA ]
-- On TYPE_NAME shift to state 22
-- On STAR shift to state 9
-- On LSQUARE shift to state 203
-- On LPAR shift to state 207
-- On IDENTIFIER shift to state 23
-- On pointer shift to state 209
-- On identifier shift to state 25
-- On direct_declarator shift to state 178
-- On direct_abstract_declarator shift to state 222
-- On declarator shift to state 227
-- On abstract_declarator shift to state 228
-- On RPAR reduce production parameter_declaration -> declaration_specifiers
-- On COMMA reduce production parameter_declaration -> declaration_specifiers

State 203:
direct_abstract_declarator -> LSQUARE . RSQUARE [ RPAR LSQUARE LPAR COMMA ]
direct_abstract_declarator -> LSQUARE . constant_expression RSQUARE [ RPAR LSQUARE LPAR COMMA ]
-- On TILDE shift to state 28
-- On STRING_LITERAL shift to state 29
-- On STAR shift to state 30
-- On SIZEOF shift to state 31
-- On RSQUARE shift to state 204
-- On PLUS shift to state 32
-- On MINUS shift to state 33
-- On LPAR shift to state 36
-- On INC_OP shift to state 39
-- On IDENTIFIER shift to state 41
-- On EXL shift to state 42
-- On DEC_OP shift to state 43
-- On CONSTANT shift to state 44
-- On AMP shift to state 45
-- On unary_operator shift to state 46
-- On unary_expression shift to state 47
-- On shift_expression shift to state 66
-- On relational_expression shift to state 83
-- On primary_expression shift to state 48
-- On postfix_expression shift to state 49
-- On multiplicative_expression shift to state 68
-- On logical_or_expression shift to state 93
-- On logical_and_expression shift to state 95
-- On inclusive_or_expression shift to state 111
-- On exclusive_or_expression shift to state 110
-- On equality_expression shift to state 101
-- On constant_expression shift to state 205
-- On conditional_expression shift to state 146
-- On cast_expression shift to state 75
-- On and_expression shift to state 109
-- On additive_expression shift to state 86

State 204:
direct_abstract_declarator -> LSQUARE RSQUARE . [ RPAR LSQUARE LPAR COMMA ]
-- On RPAR reduce production direct_abstract_declarator -> LSQUARE RSQUARE
-- On LSQUARE reduce production direct_abstract_declarator -> LSQUARE RSQUARE
-- On LPAR reduce production direct_abstract_declarator -> LSQUARE RSQUARE
-- On COMMA reduce production direct_abstract_declarator -> LSQUARE RSQUARE

State 205:
direct_abstract_declarator -> LSQUARE constant_expression . RSQUARE [ RPAR LSQUARE LPAR COMMA ]
-- On RSQUARE shift to state 206

State 206:
direct_abstract_declarator -> LSQUARE constant_expression RSQUARE . [ RPAR LSQUARE LPAR COMMA ]
-- On RPAR reduce production direct_abstract_declarator -> LSQUARE constant_expression RSQUARE
-- On LSQUARE reduce production direct_abstract_declarator -> LSQUARE constant_expression RSQUARE
-- On LPAR reduce production direct_abstract_declarator -> LSQUARE constant_expression RSQUARE
-- On COMMA reduce production direct_abstract_declarator -> LSQUARE constant_expression RSQUARE

State 207:
direct_abstract_declarator -> LPAR . abstract_declarator RPAR [ RPAR LSQUARE LPAR COMMA ]
direct_abstract_declarator -> LPAR . RPAR [ RPAR LSQUARE LPAR COMMA ]
direct_abstract_declarator -> LPAR . parameter_type_list RPAR [ RPAR LSQUARE LPAR COMMA ]
direct_declarator -> LPAR . declarator RPAR [ RPAR LSQUARE LPAR COMMA ]
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPE_NAME shift to state 5
-- On TYPEDEF shift to state 6
-- On STRUCT shift to state 7
-- On STATIC shift to state 8
-- On STAR shift to state 9
-- On SIGNED shift to state 18
-- On SHORT shift to state 19
-- On RPAR shift to state 208
-- On RESTRICT shift to state 10
-- On REGISTER shift to state 20
-- On LSQUARE shift to state 203
-- On LPAR shift to state 207
-- On LONG shift to state 37
-- On INT shift to state 38
-- On IDENTIFIER shift to state 23
-- On FLOAT shift to state 140
-- On EXTERN shift to state 182
-- On ENUM shift to state 141
-- On DOUBLE shift to state 156
-- On CONST shift to state 11
-- On CHAR shift to state 157
-- On AUTO shift to state 183
-- On type_specifier_no_name shift to state 158
-- On type_specifier shift to state 184
-- On type_qualifier shift to state 187
-- On struct_or_union_specifier shift to state 162
-- On struct_or_union shift to state 163
-- On storage_class_specifier shift to state 188
-- On pointer shift to state 209
-- On parameter_type_list shift to state 220
-- On parameter_list shift to state 198
-- On parameter_declaration shift to state 219
-- On identifier shift to state 25
-- On enum_specifier shift to state 167
-- On direct_declarator shift to state 178
-- On direct_abstract_declarator shift to state 222
-- On declarator shift to state 223
-- On declaration_specifiers shift to state 202
-- On abstract_declarator shift to state 225

State 208:
direct_abstract_declarator -> LPAR RPAR . [ RPAR LSQUARE LPAR COMMA ]
-- On RPAR reduce production direct_abstract_declarator -> LPAR RPAR
-- On LSQUARE reduce production direct_abstract_declarator -> LPAR RPAR
-- On LPAR reduce production direct_abstract_declarator -> LPAR RPAR
-- On COMMA reduce production direct_abstract_declarator -> LPAR RPAR

State 209:
abstract_declarator -> pointer . [ RPAR COMMA ]
abstract_declarator -> pointer . direct_abstract_declarator [ RPAR COMMA ]
declarator -> pointer . direct_declarator [ RPAR COMMA ]
-- On TYPE_NAME shift to state 22
-- On LSQUARE shift to state 203
-- On LPAR shift to state 207
-- On IDENTIFIER shift to state 23
-- On identifier shift to state 25
-- On direct_declarator shift to state 26
-- On direct_abstract_declarator shift to state 210
-- On RPAR reduce production abstract_declarator -> pointer
-- On COMMA reduce production abstract_declarator -> pointer

State 210:
abstract_declarator -> pointer direct_abstract_declarator . [ RPAR COMMA ]
direct_abstract_declarator -> direct_abstract_declarator . LSQUARE RSQUARE [ RPAR LSQUARE LPAR COMMA ]
direct_abstract_declarator -> direct_abstract_declarator . LSQUARE constant_expression RSQUARE [ RPAR LSQUARE LPAR COMMA ]
direct_abstract_declarator -> direct_abstract_declarator . LPAR RPAR [ RPAR LSQUARE LPAR COMMA ]
direct_abstract_declarator -> direct_abstract_declarator . LPAR parameter_type_list RPAR [ RPAR LSQUARE LPAR COMMA ]
-- On LSQUARE shift to state 211
-- On LPAR shift to state 215
-- On RPAR reduce production abstract_declarator -> pointer direct_abstract_declarator
-- On COMMA reduce production abstract_declarator -> pointer direct_abstract_declarator

State 211:
direct_abstract_declarator -> direct_abstract_declarator LSQUARE . RSQUARE [ RPAR LSQUARE LPAR COMMA ]
direct_abstract_declarator -> direct_abstract_declarator LSQUARE . constant_expression RSQUARE [ RPAR LSQUARE LPAR COMMA ]
-- On TILDE shift to state 28
-- On STRING_LITERAL shift to state 29
-- On STAR shift to state 30
-- On SIZEOF shift to state 31
-- On RSQUARE shift to state 212
-- On PLUS shift to state 32
-- On MINUS shift to state 33
-- On LPAR shift to state 36
-- On INC_OP shift to state 39
-- On IDENTIFIER shift to state 41
-- On EXL shift to state 42
-- On DEC_OP shift to state 43
-- On CONSTANT shift to state 44
-- On AMP shift to state 45
-- On unary_operator shift to state 46
-- On unary_expression shift to state 47
-- On shift_expression shift to state 66
-- On relational_expression shift to state 83
-- On primary_expression shift to state 48
-- On postfix_expression shift to state 49
-- On multiplicative_expression shift to state 68
-- On logical_or_expression shift to state 93
-- On logical_and_expression shift to state 95
-- On inclusive_or_expression shift to state 111
-- On exclusive_or_expression shift to state 110
-- On equality_expression shift to state 101
-- On constant_expression shift to state 213
-- On conditional_expression shift to state 146
-- On cast_expression shift to state 75
-- On and_expression shift to state 109
-- On additive_expression shift to state 86

State 212:
direct_abstract_declarator -> direct_abstract_declarator LSQUARE RSQUARE . [ RPAR LSQUARE LPAR COMMA ]
-- On RPAR reduce production direct_abstract_declarator -> direct_abstract_declarator LSQUARE RSQUARE
-- On LSQUARE reduce production direct_abstract_declarator -> direct_abstract_declarator LSQUARE RSQUARE
-- On LPAR reduce production direct_abstract_declarator -> direct_abstract_declarator LSQUARE RSQUARE
-- On COMMA reduce production direct_abstract_declarator -> direct_abstract_declarator LSQUARE RSQUARE

State 213:
direct_abstract_declarator -> direct_abstract_declarator LSQUARE constant_expression . RSQUARE [ RPAR LSQUARE LPAR COMMA ]
-- On RSQUARE shift to state 214

State 214:
direct_abstract_declarator -> direct_abstract_declarator LSQUARE constant_expression RSQUARE . [ RPAR LSQUARE LPAR COMMA ]
-- On RPAR reduce production direct_abstract_declarator -> direct_abstract_declarator LSQUARE constant_expression RSQUARE
-- On LSQUARE reduce production direct_abstract_declarator -> direct_abstract_declarator LSQUARE constant_expression RSQUARE
-- On LPAR reduce production direct_abstract_declarator -> direct_abstract_declarator LSQUARE constant_expression RSQUARE
-- On COMMA reduce production direct_abstract_declarator -> direct_abstract_declarator LSQUARE constant_expression RSQUARE

State 215:
direct_abstract_declarator -> direct_abstract_declarator LPAR . RPAR [ RPAR LSQUARE LPAR COMMA ]
direct_abstract_declarator -> direct_abstract_declarator LPAR . parameter_type_list RPAR [ RPAR LSQUARE LPAR COMMA ]
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPE_NAME shift to state 35
-- On TYPEDEF shift to state 6
-- On STRUCT shift to state 7
-- On STATIC shift to state 8
-- On SIGNED shift to state 18
-- On SHORT shift to state 19
-- On RPAR shift to state 216
-- On RESTRICT shift to state 10
-- On REGISTER shift to state 20
-- On LONG shift to state 37
-- On INT shift to state 38
-- On FLOAT shift to state 140
-- On EXTERN shift to state 182
-- On ENUM shift to state 141
-- On DOUBLE shift to state 156
-- On CONST shift to state 11
-- On CHAR shift to state 157
-- On AUTO shift to state 183
-- On type_specifier_no_name shift to state 158
-- On type_specifier shift to state 184
-- On type_qualifier shift to state 187
-- On struct_or_union_specifier shift to state 162
-- On struct_or_union shift to state 163
-- On storage_class_specifier shift to state 188
-- On parameter_type_list shift to state 217
-- On parameter_list shift to state 198
-- On parameter_declaration shift to state 219
-- On enum_specifier shift to state 167
-- On declaration_specifiers shift to state 202

State 216:
direct_abstract_declarator -> direct_abstract_declarator LPAR RPAR . [ RPAR LSQUARE LPAR COMMA ]
-- On RPAR reduce production direct_abstract_declarator -> direct_abstract_declarator LPAR RPAR
-- On LSQUARE reduce production direct_abstract_declarator -> direct_abstract_declarator LPAR RPAR
-- On LPAR reduce production direct_abstract_declarator -> direct_abstract_declarator LPAR RPAR
-- On COMMA reduce production direct_abstract_declarator -> direct_abstract_declarator LPAR RPAR

State 217:
direct_abstract_declarator -> direct_abstract_declarator LPAR parameter_type_list . RPAR [ RPAR LSQUARE LPAR COMMA ]
-- On RPAR shift to state 218

State 218:
direct_abstract_declarator -> direct_abstract_declarator LPAR parameter_type_list RPAR . [ RPAR LSQUARE LPAR COMMA ]
-- On RPAR reduce production direct_abstract_declarator -> direct_abstract_declarator LPAR parameter_type_list RPAR
-- On LSQUARE reduce production direct_abstract_declarator -> direct_abstract_declarator LPAR parameter_type_list RPAR
-- On LPAR reduce production direct_abstract_declarator -> direct_abstract_declarator LPAR parameter_type_list RPAR
-- On COMMA reduce production direct_abstract_declarator -> direct_abstract_declarator LPAR parameter_type_list RPAR

State 219:
parameter_list -> parameter_declaration . [ RPAR COMMA ]
-- On RPAR reduce production parameter_list -> parameter_declaration
-- On COMMA reduce production parameter_list -> parameter_declaration

State 220:
direct_abstract_declarator -> LPAR parameter_type_list . RPAR [ RPAR LSQUARE LPAR COMMA ]
-- On RPAR shift to state 221

State 221:
direct_abstract_declarator -> LPAR parameter_type_list RPAR . [ RPAR LSQUARE LPAR COMMA ]
-- On RPAR reduce production direct_abstract_declarator -> LPAR parameter_type_list RPAR
-- On LSQUARE reduce production direct_abstract_declarator -> LPAR parameter_type_list RPAR
-- On LPAR reduce production direct_abstract_declarator -> LPAR parameter_type_list RPAR
-- On COMMA reduce production direct_abstract_declarator -> LPAR parameter_type_list RPAR

State 222:
abstract_declarator -> direct_abstract_declarator . [ RPAR COMMA ]
direct_abstract_declarator -> direct_abstract_declarator . LSQUARE RSQUARE [ RPAR LSQUARE LPAR COMMA ]
direct_abstract_declarator -> direct_abstract_declarator . LSQUARE constant_expression RSQUARE [ RPAR LSQUARE LPAR COMMA ]
direct_abstract_declarator -> direct_abstract_declarator . LPAR RPAR [ RPAR LSQUARE LPAR COMMA ]
direct_abstract_declarator -> direct_abstract_declarator . LPAR parameter_type_list RPAR [ RPAR LSQUARE LPAR COMMA ]
-- On LSQUARE shift to state 211
-- On LPAR shift to state 215
-- On RPAR reduce production abstract_declarator -> direct_abstract_declarator
-- On COMMA reduce production abstract_declarator -> direct_abstract_declarator

State 223:
direct_declarator -> LPAR declarator . RPAR [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC SPEC SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LSQUARE LPAR LONG LBRACE INT FLOAT EXTERN EQUAL ENUM DOUBLE DECL CONST COMMA COLON CHAR AUTO ATTRIBUTE ]
-- On RPAR shift to state 224

State 224:
direct_declarator -> LPAR declarator RPAR . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC SPEC SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LSQUARE LPAR LONG LBRACE INT FLOAT EXTERN EQUAL ENUM DOUBLE DECL CONST COMMA COLON CHAR AUTO ATTRIBUTE ]
-- On VOLATILE reduce production direct_declarator -> LPAR declarator RPAR
-- On VOID reduce production direct_declarator -> LPAR declarator RPAR
-- On UNSIGNED reduce production direct_declarator -> LPAR declarator RPAR
-- On UNION reduce production direct_declarator -> LPAR declarator RPAR
-- On TYPE_NAME reduce production direct_declarator -> LPAR declarator RPAR
-- On TYPEDEF reduce production direct_declarator -> LPAR declarator RPAR
-- On STRUCT reduce production direct_declarator -> LPAR declarator RPAR
-- On STATIC reduce production direct_declarator -> LPAR declarator RPAR
-- On SPEC reduce production direct_declarator -> LPAR declarator RPAR
-- On SIGNED reduce production direct_declarator -> LPAR declarator RPAR
-- On SHORT reduce production direct_declarator -> LPAR declarator RPAR
-- On SEMICOLON reduce production direct_declarator -> LPAR declarator RPAR
-- On RPAR reduce production direct_declarator -> LPAR declarator RPAR
-- On RESTRICT reduce production direct_declarator -> LPAR declarator RPAR
-- On REGISTER reduce production direct_declarator -> LPAR declarator RPAR
-- On LSQUARE reduce production direct_declarator -> LPAR declarator RPAR
-- On LPAR reduce production direct_declarator -> LPAR declarator RPAR
-- On LONG reduce production direct_declarator -> LPAR declarator RPAR
-- On LBRACE reduce production direct_declarator -> LPAR declarator RPAR
-- On INT reduce production direct_declarator -> LPAR declarator RPAR
-- On FLOAT reduce production direct_declarator -> LPAR declarator RPAR
-- On EXTERN reduce production direct_declarator -> LPAR declarator RPAR
-- On EQUAL reduce production direct_declarator -> LPAR declarator RPAR
-- On ENUM reduce production direct_declarator -> LPAR declarator RPAR
-- On DOUBLE reduce production direct_declarator -> LPAR declarator RPAR
-- On DECL reduce production direct_declarator -> LPAR declarator RPAR
-- On CONST reduce production direct_declarator -> LPAR declarator RPAR
-- On COMMA reduce production direct_declarator -> LPAR declarator RPAR
-- On COLON reduce production direct_declarator -> LPAR declarator RPAR
-- On CHAR reduce production direct_declarator -> LPAR declarator RPAR
-- On AUTO reduce production direct_declarator -> LPAR declarator RPAR
-- On ATTRIBUTE reduce production direct_declarator -> LPAR declarator RPAR

State 225:
direct_abstract_declarator -> LPAR abstract_declarator . RPAR [ RPAR LSQUARE LPAR COMMA ]
-- On RPAR shift to state 226

State 226:
direct_abstract_declarator -> LPAR abstract_declarator RPAR . [ RPAR LSQUARE LPAR COMMA ]
-- On RPAR reduce production direct_abstract_declarator -> LPAR abstract_declarator RPAR
-- On LSQUARE reduce production direct_abstract_declarator -> LPAR abstract_declarator RPAR
-- On LPAR reduce production direct_abstract_declarator -> LPAR abstract_declarator RPAR
-- On COMMA reduce production direct_abstract_declarator -> LPAR abstract_declarator RPAR

State 227:
parameter_declaration -> declaration_specifiers declarator . [ RPAR COMMA ]
-- On RPAR reduce production parameter_declaration -> declaration_specifiers declarator
-- On COMMA reduce production parameter_declaration -> declaration_specifiers declarator

State 228:
parameter_declaration -> declaration_specifiers abstract_declarator . [ RPAR COMMA ]
-- On RPAR reduce production parameter_declaration -> declaration_specifiers abstract_declarator
-- On COMMA reduce production parameter_declaration -> declaration_specifiers abstract_declarator

State 229:
direct_declarator -> direct_declarator LPAR identifier_list . RPAR [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC SPEC SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LSQUARE LPAR LONG LBRACE INT FLOAT EXTERN EQUAL ENUM DOUBLE DECL CONST COMMA COLON CHAR AUTO ATTRIBUTE ]
identifier_list -> identifier_list . COMMA IDENTIFIER [ RPAR COMMA ]
-- On RPAR shift to state 230
-- On COMMA shift to state 231

State 230:
direct_declarator -> direct_declarator LPAR identifier_list RPAR . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC SPEC SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LSQUARE LPAR LONG LBRACE INT FLOAT EXTERN EQUAL ENUM DOUBLE DECL CONST COMMA COLON CHAR AUTO ATTRIBUTE ]
-- On VOLATILE reduce production direct_declarator -> direct_declarator LPAR identifier_list RPAR
-- On VOID reduce production direct_declarator -> direct_declarator LPAR identifier_list RPAR
-- On UNSIGNED reduce production direct_declarator -> direct_declarator LPAR identifier_list RPAR
-- On UNION reduce production direct_declarator -> direct_declarator LPAR identifier_list RPAR
-- On TYPE_NAME reduce production direct_declarator -> direct_declarator LPAR identifier_list RPAR
-- On TYPEDEF reduce production direct_declarator -> direct_declarator LPAR identifier_list RPAR
-- On STRUCT reduce production direct_declarator -> direct_declarator LPAR identifier_list RPAR
-- On STATIC reduce production direct_declarator -> direct_declarator LPAR identifier_list RPAR
-- On SPEC reduce production direct_declarator -> direct_declarator LPAR identifier_list RPAR
-- On SIGNED reduce production direct_declarator -> direct_declarator LPAR identifier_list RPAR
-- On SHORT reduce production direct_declarator -> direct_declarator LPAR identifier_list RPAR
-- On SEMICOLON reduce production direct_declarator -> direct_declarator LPAR identifier_list RPAR
-- On RPAR reduce production direct_declarator -> direct_declarator LPAR identifier_list RPAR
-- On RESTRICT reduce production direct_declarator -> direct_declarator LPAR identifier_list RPAR
-- On REGISTER reduce production direct_declarator -> direct_declarator LPAR identifier_list RPAR
-- On LSQUARE reduce production direct_declarator -> direct_declarator LPAR identifier_list RPAR
-- On LPAR reduce production direct_declarator -> direct_declarator LPAR identifier_list RPAR
-- On LONG reduce production direct_declarator -> direct_declarator LPAR identifier_list RPAR
-- On LBRACE reduce production direct_declarator -> direct_declarator LPAR identifier_list RPAR
-- On INT reduce production direct_declarator -> direct_declarator LPAR identifier_list RPAR
-- On FLOAT reduce production direct_declarator -> direct_declarator LPAR identifier_list RPAR
-- On EXTERN reduce production direct_declarator -> direct_declarator LPAR identifier_list RPAR
-- On EQUAL reduce production direct_declarator -> direct_declarator LPAR identifier_list RPAR
-- On ENUM reduce production direct_declarator -> direct_declarator LPAR identifier_list RPAR
-- On DOUBLE reduce production direct_declarator -> direct_declarator LPAR identifier_list RPAR
-- On DECL reduce production direct_declarator -> direct_declarator LPAR identifier_list RPAR
-- On CONST reduce production direct_declarator -> direct_declarator LPAR identifier_list RPAR
-- On COMMA reduce production direct_declarator -> direct_declarator LPAR identifier_list RPAR
-- On COLON reduce production direct_declarator -> direct_declarator LPAR identifier_list RPAR
-- On CHAR reduce production direct_declarator -> direct_declarator LPAR identifier_list RPAR
-- On AUTO reduce production direct_declarator -> direct_declarator LPAR identifier_list RPAR
-- On ATTRIBUTE reduce production direct_declarator -> direct_declarator LPAR identifier_list RPAR

State 231:
identifier_list -> identifier_list COMMA . IDENTIFIER [ RPAR COMMA ]
-- On IDENTIFIER shift to state 232

State 232:
identifier_list -> identifier_list COMMA IDENTIFIER . [ RPAR COMMA ]
-- On RPAR reduce production identifier_list -> identifier_list COMMA IDENTIFIER
-- On COMMA reduce production identifier_list -> identifier_list COMMA IDENTIFIER

State 233:
struct_declarator -> declarator . [ SEMICOLON COMMA ]
struct_declarator -> declarator . COLON constant_expression [ SEMICOLON COMMA ]
-- On COLON shift to state 234
-- On SEMICOLON reduce production struct_declarator -> declarator
-- On COMMA reduce production struct_declarator -> declarator

State 234:
struct_declarator -> declarator COLON . constant_expression [ SEMICOLON COMMA ]
-- On TILDE shift to state 28
-- On STRING_LITERAL shift to state 29
-- On STAR shift to state 30
-- On SIZEOF shift to state 31
-- On PLUS shift to state 32
-- On MINUS shift to state 33
-- On LPAR shift to state 36
-- On INC_OP shift to state 39
-- On IDENTIFIER shift to state 41
-- On EXL shift to state 42
-- On DEC_OP shift to state 43
-- On CONSTANT shift to state 44
-- On AMP shift to state 45
-- On unary_operator shift to state 46
-- On unary_expression shift to state 47
-- On shift_expression shift to state 66
-- On relational_expression shift to state 83
-- On primary_expression shift to state 48
-- On postfix_expression shift to state 49
-- On multiplicative_expression shift to state 68
-- On logical_or_expression shift to state 93
-- On logical_and_expression shift to state 95
-- On inclusive_or_expression shift to state 111
-- On exclusive_or_expression shift to state 110
-- On equality_expression shift to state 101
-- On constant_expression shift to state 235
-- On conditional_expression shift to state 146
-- On cast_expression shift to state 75
-- On and_expression shift to state 109
-- On additive_expression shift to state 86

State 235:
struct_declarator -> declarator COLON constant_expression . [ SEMICOLON COMMA ]
-- On SEMICOLON reduce production struct_declarator -> declarator COLON constant_expression
-- On COMMA reduce production struct_declarator -> declarator COLON constant_expression

State 236:
struct_declarator_list -> struct_declarator . [ SEMICOLON COMMA ]
-- On SEMICOLON reduce production struct_declarator_list -> struct_declarator
-- On COMMA reduce production struct_declarator_list -> struct_declarator

State 237:
struct_declaration_list -> struct_declaration . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME STRUCT SIGNED SHORT RESTRICT RBRACE LONG INT FLOAT ENUM DOUBLE CONST CHAR ]
-- On VOLATILE reduce production struct_declaration_list -> struct_declaration
-- On VOID reduce production struct_declaration_list -> struct_declaration
-- On UNSIGNED reduce production struct_declaration_list -> struct_declaration
-- On UNION reduce production struct_declaration_list -> struct_declaration
-- On TYPE_NAME reduce production struct_declaration_list -> struct_declaration
-- On STRUCT reduce production struct_declaration_list -> struct_declaration
-- On SIGNED reduce production struct_declaration_list -> struct_declaration
-- On SHORT reduce production struct_declaration_list -> struct_declaration
-- On RESTRICT reduce production struct_declaration_list -> struct_declaration
-- On RBRACE reduce production struct_declaration_list -> struct_declaration
-- On LONG reduce production struct_declaration_list -> struct_declaration
-- On INT reduce production struct_declaration_list -> struct_declaration
-- On FLOAT reduce production struct_declaration_list -> struct_declaration
-- On ENUM reduce production struct_declaration_list -> struct_declaration
-- On DOUBLE reduce production struct_declaration_list -> struct_declaration
-- On CONST reduce production struct_declaration_list -> struct_declaration
-- On CHAR reduce production struct_declaration_list -> struct_declaration

State 238:
struct_or_union_specifier -> struct_or_union identifier . LBRACE struct_declaration_list RBRACE [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LSQUARE LPAR LONG INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
struct_or_union_specifier -> struct_or_union identifier . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LSQUARE LPAR LONG INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On LBRACE shift to state 239
-- On VOLATILE reduce production struct_or_union_specifier -> struct_or_union identifier
-- On VOID reduce production struct_or_union_specifier -> struct_or_union identifier
-- On UNSIGNED reduce production struct_or_union_specifier -> struct_or_union identifier
-- On UNION reduce production struct_or_union_specifier -> struct_or_union identifier
-- On TYPE_NAME reduce production struct_or_union_specifier -> struct_or_union identifier
-- On TYPEDEF reduce production struct_or_union_specifier -> struct_or_union identifier
-- On STRUCT reduce production struct_or_union_specifier -> struct_or_union identifier
-- On STATIC reduce production struct_or_union_specifier -> struct_or_union identifier
-- On STAR reduce production struct_or_union_specifier -> struct_or_union identifier
-- On SIGNED reduce production struct_or_union_specifier -> struct_or_union identifier
-- On SHORT reduce production struct_or_union_specifier -> struct_or_union identifier
-- On SEMICOLON reduce production struct_or_union_specifier -> struct_or_union identifier
-- On RPAR reduce production struct_or_union_specifier -> struct_or_union identifier
-- On RESTRICT reduce production struct_or_union_specifier -> struct_or_union identifier
-- On REGISTER reduce production struct_or_union_specifier -> struct_or_union identifier
-- On LSQUARE reduce production struct_or_union_specifier -> struct_or_union identifier
-- On LPAR reduce production struct_or_union_specifier -> struct_or_union identifier
-- On LONG reduce production struct_or_union_specifier -> struct_or_union identifier
-- On INT reduce production struct_or_union_specifier -> struct_or_union identifier
-- On IDENTIFIER reduce production struct_or_union_specifier -> struct_or_union identifier
-- On FLOAT reduce production struct_or_union_specifier -> struct_or_union identifier
-- On EXTERN reduce production struct_or_union_specifier -> struct_or_union identifier
-- On ENUM reduce production struct_or_union_specifier -> struct_or_union identifier
-- On DOUBLE reduce production struct_or_union_specifier -> struct_or_union identifier
-- On CONST reduce production struct_or_union_specifier -> struct_or_union identifier
-- On COMMA reduce production struct_or_union_specifier -> struct_or_union identifier
-- On COLON reduce production struct_or_union_specifier -> struct_or_union identifier
-- On CHAR reduce production struct_or_union_specifier -> struct_or_union identifier
-- On AUTO reduce production struct_or_union_specifier -> struct_or_union identifier

State 239:
struct_or_union_specifier -> struct_or_union identifier LBRACE . struct_declaration_list RBRACE [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LSQUARE LPAR LONG INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPE_NAME shift to state 35
-- On STRUCT shift to state 7
-- On SIGNED shift to state 18
-- On SHORT shift to state 19
-- On RESTRICT shift to state 10
-- On LONG shift to state 37
-- On INT shift to state 38
-- On FLOAT shift to state 140
-- On ENUM shift to state 141
-- On DOUBLE shift to state 156
-- On CONST shift to state 11
-- On CHAR shift to state 157
-- On type_specifier_no_name shift to state 158
-- On type_specifier shift to state 159
-- On type_qualifier shift to state 165
-- On struct_or_union_specifier shift to state 162
-- On struct_or_union shift to state 163
-- On struct_declaration_list shift to state 240
-- On struct_declaration shift to state 237
-- On specifier_qualifier_list shift to state 171
-- On enum_specifier shift to state 167

State 240:
struct_declaration_list -> struct_declaration_list . struct_declaration [ VOLATILE VOID UNSIGNED UNION TYPE_NAME STRUCT SIGNED SHORT RESTRICT RBRACE LONG INT FLOAT ENUM DOUBLE CONST CHAR ]
struct_or_union_specifier -> struct_or_union identifier LBRACE struct_declaration_list . RBRACE [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LSQUARE LPAR LONG INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPE_NAME shift to state 35
-- On STRUCT shift to state 7
-- On SIGNED shift to state 18
-- On SHORT shift to state 19
-- On RESTRICT shift to state 10
-- On RBRACE shift to state 241
-- On LONG shift to state 37
-- On INT shift to state 38
-- On FLOAT shift to state 140
-- On ENUM shift to state 141
-- On DOUBLE shift to state 156
-- On CONST shift to state 11
-- On CHAR shift to state 157
-- On type_specifier_no_name shift to state 158
-- On type_specifier shift to state 159
-- On type_qualifier shift to state 165
-- On struct_or_union_specifier shift to state 162
-- On struct_or_union shift to state 163
-- On struct_declaration shift to state 170
-- On specifier_qualifier_list shift to state 171
-- On enum_specifier shift to state 167

State 241:
struct_or_union_specifier -> struct_or_union identifier LBRACE struct_declaration_list RBRACE . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LSQUARE LPAR LONG INT IDENTIFIER FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ]
-- On VOLATILE reduce production struct_or_union_specifier -> struct_or_union identifier LBRACE struct_declaration_list RBRACE
-- On VOID reduce production struct_or_union_specifier -> struct_or_union identifier LBRACE struct_declaration_list RBRACE
-- On UNSIGNED reduce production struct_or_union_specifier -> struct_or_union identifier LBRACE struct_declaration_list RBRACE
-- On UNION reduce production struct_or_union_specifier -> struct_or_union identifier LBRACE struct_declaration_list RBRACE
-- On TYPE_NAME reduce production struct_or_union_specifier -> struct_or_union identifier LBRACE struct_declaration_list RBRACE
-- On TYPEDEF reduce production struct_or_union_specifier -> struct_or_union identifier LBRACE struct_declaration_list RBRACE
-- On STRUCT reduce production struct_or_union_specifier -> struct_or_union identifier LBRACE struct_declaration_list RBRACE
-- On STATIC reduce production struct_or_union_specifier -> struct_or_union identifier LBRACE struct_declaration_list RBRACE
-- On STAR reduce production struct_or_union_specifier -> struct_or_union identifier LBRACE struct_declaration_list RBRACE
-- On SIGNED reduce production struct_or_union_specifier -> struct_or_union identifier LBRACE struct_declaration_list RBRACE
-- On SHORT reduce production struct_or_union_specifier -> struct_or_union identifier LBRACE struct_declaration_list RBRACE
-- On SEMICOLON reduce production struct_or_union_specifier -> struct_or_union identifier LBRACE struct_declaration_list RBRACE
-- On RPAR reduce production struct_or_union_specifier -> struct_or_union identifier LBRACE struct_declaration_list RBRACE
-- On RESTRICT reduce production struct_or_union_specifier -> struct_or_union identifier LBRACE struct_declaration_list RBRACE
-- On REGISTER reduce production struct_or_union_specifier -> struct_or_union identifier LBRACE struct_declaration_list RBRACE
-- On LSQUARE reduce production struct_or_union_specifier -> struct_or_union identifier LBRACE struct_declaration_list RBRACE
-- On LPAR reduce production struct_or_union_specifier -> struct_or_union identifier LBRACE struct_declaration_list RBRACE
-- On LONG reduce production struct_or_union_specifier -> struct_or_union identifier LBRACE struct_declaration_list RBRACE
-- On INT reduce production struct_or_union_specifier -> struct_or_union identifier LBRACE struct_declaration_list RBRACE
-- On IDENTIFIER reduce production struct_or_union_specifier -> struct_or_union identifier LBRACE struct_declaration_list RBRACE
-- On FLOAT reduce production struct_or_union_specifier -> struct_or_union identifier LBRACE struct_declaration_list RBRACE
-- On EXTERN reduce production struct_or_union_specifier -> struct_or_union identifier LBRACE struct_declaration_list RBRACE
-- On ENUM reduce production struct_or_union_specifier -> struct_or_union identifier LBRACE struct_declaration_list RBRACE
-- On DOUBLE reduce production struct_or_union_specifier -> struct_or_union identifier LBRACE struct_declaration_list RBRACE
-- On CONST reduce production struct_or_union_specifier -> struct_or_union identifier LBRACE struct_declaration_list RBRACE
-- On COMMA reduce production struct_or_union_specifier -> struct_or_union identifier LBRACE struct_declaration_list RBRACE
-- On COLON reduce production struct_or_union_specifier -> struct_or_union identifier LBRACE struct_declaration_list RBRACE
-- On CHAR reduce production struct_or_union_specifier -> struct_or_union identifier LBRACE struct_declaration_list RBRACE
-- On AUTO reduce production struct_or_union_specifier -> struct_or_union identifier LBRACE struct_declaration_list RBRACE

State 242:
specifier_qualifier_list_no_name -> type_qualifier specifier_qualifier_list_no_name . [ TYPE_NAME STAR RPAR LSQUARE LPAR IDENTIFIER COLON ]
-- On TYPE_NAME reduce production specifier_qualifier_list_no_name -> type_qualifier specifier_qualifier_list_no_name
-- On STAR reduce production specifier_qualifier_list_no_name -> type_qualifier specifier_qualifier_list_no_name
-- On RPAR reduce production specifier_qualifier_list_no_name -> type_qualifier specifier_qualifier_list_no_name
-- On LSQUARE reduce production specifier_qualifier_list_no_name -> type_qualifier specifier_qualifier_list_no_name
-- On LPAR reduce production specifier_qualifier_list_no_name -> type_qualifier specifier_qualifier_list_no_name
-- On IDENTIFIER reduce production specifier_qualifier_list_no_name -> type_qualifier specifier_qualifier_list_no_name
-- On COLON reduce production specifier_qualifier_list_no_name -> type_qualifier specifier_qualifier_list_no_name

State 243:
specifier_qualifier_list_no_name -> type_specifier_no_name specifier_qualifier_list_no_name . [ TYPE_NAME STAR RPAR LSQUARE LPAR IDENTIFIER COLON ]
-- On TYPE_NAME reduce production specifier_qualifier_list_no_name -> type_specifier_no_name specifier_qualifier_list_no_name
-- On STAR reduce production specifier_qualifier_list_no_name -> type_specifier_no_name specifier_qualifier_list_no_name
-- On RPAR reduce production specifier_qualifier_list_no_name -> type_specifier_no_name specifier_qualifier_list_no_name
-- On LSQUARE reduce production specifier_qualifier_list_no_name -> type_specifier_no_name specifier_qualifier_list_no_name
-- On LPAR reduce production specifier_qualifier_list_no_name -> type_specifier_no_name specifier_qualifier_list_no_name
-- On IDENTIFIER reduce production specifier_qualifier_list_no_name -> type_specifier_no_name specifier_qualifier_list_no_name
-- On COLON reduce production specifier_qualifier_list_no_name -> type_specifier_no_name specifier_qualifier_list_no_name

State 244:
specifier_qualifier_list -> type_specifier specifier_qualifier_list_no_name . [ TYPE_NAME STAR RPAR LSQUARE LPAR IDENTIFIER COLON ]
-- On TYPE_NAME reduce production specifier_qualifier_list -> type_specifier specifier_qualifier_list_no_name
-- On STAR reduce production specifier_qualifier_list -> type_specifier specifier_qualifier_list_no_name
-- On RPAR reduce production specifier_qualifier_list -> type_specifier specifier_qualifier_list_no_name
-- On LSQUARE reduce production specifier_qualifier_list -> type_specifier specifier_qualifier_list_no_name
-- On LPAR reduce production specifier_qualifier_list -> type_specifier specifier_qualifier_list_no_name
-- On IDENTIFIER reduce production specifier_qualifier_list -> type_specifier specifier_qualifier_list_no_name
-- On COLON reduce production specifier_qualifier_list -> type_specifier specifier_qualifier_list_no_name

State 245:
cast_expression -> LPAR type_name . RPAR cast_expression [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RSQUARE RPAR RIGHT_OP RIGHT_ASSIGN RBRACE QUESTION PLUS PIPE PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LE_OP LEFT_OP LEFT_ASSIGN HAT GT GE_OP EQ_OP EQUAL DIV_ASSIGN COMMA COLON ATTRIBUTE AND_OP AND_ASSIGN AMP ADD_ASSIGN ]
-- On RPAR shift to state 246

State 246:
cast_expression -> LPAR type_name RPAR . cast_expression [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RSQUARE RPAR RIGHT_OP RIGHT_ASSIGN RBRACE QUESTION PLUS PIPE PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LE_OP LEFT_OP LEFT_ASSIGN HAT GT GE_OP EQ_OP EQUAL DIV_ASSIGN COMMA COLON ATTRIBUTE AND_OP AND_ASSIGN AMP ADD_ASSIGN ]
-- On TILDE shift to state 28
-- On STRING_LITERAL shift to state 29
-- On STAR shift to state 30
-- On SIZEOF shift to state 31
-- On PLUS shift to state 32
-- On MINUS shift to state 33
-- On LPAR shift to state 36
-- On INC_OP shift to state 39
-- On IDENTIFIER shift to state 41
-- On EXL shift to state 42
-- On DEC_OP shift to state 43
-- On CONSTANT shift to state 44
-- On AMP shift to state 45
-- On unary_operator shift to state 46
-- On unary_expression shift to state 47
-- On primary_expression shift to state 48
-- On postfix_expression shift to state 49
-- On cast_expression shift to state 247

State 247:
cast_expression -> LPAR type_name RPAR cast_expression . [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RSQUARE RPAR RIGHT_OP RIGHT_ASSIGN RBRACE QUESTION PLUS PIPE PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LE_OP LEFT_OP LEFT_ASSIGN HAT GT GE_OP EQ_OP EQUAL DIV_ASSIGN COMMA COLON ATTRIBUTE AND_OP AND_ASSIGN AMP ADD_ASSIGN ]
-- On XOR_ASSIGN reduce production cast_expression -> LPAR type_name RPAR cast_expression
-- On SUB_ASSIGN reduce production cast_expression -> LPAR type_name RPAR cast_expression
-- On STAR reduce production cast_expression -> LPAR type_name RPAR cast_expression
-- On SLASH reduce production cast_expression -> LPAR type_name RPAR cast_expression
-- On SEMICOLON reduce production cast_expression -> LPAR type_name RPAR cast_expression
-- On RSQUARE reduce production cast_expression -> LPAR type_name RPAR cast_expression
-- On RPAR reduce production cast_expression -> LPAR type_name RPAR cast_expression
-- On RIGHT_OP reduce production cast_expression -> LPAR type_name RPAR cast_expression
-- On RIGHT_ASSIGN reduce production cast_expression -> LPAR type_name RPAR cast_expression
-- On RBRACE reduce production cast_expression -> LPAR type_name RPAR cast_expression
-- On QUESTION reduce production cast_expression -> LPAR type_name RPAR cast_expression
-- On PLUS reduce production cast_expression -> LPAR type_name RPAR cast_expression
-- On PIPE reduce production cast_expression -> LPAR type_name RPAR cast_expression
-- On PERCENT reduce production cast_expression -> LPAR type_name RPAR cast_expression
-- On OR_OP reduce production cast_expression -> LPAR type_name RPAR cast_expression
-- On OR_ASSIGN reduce production cast_expression -> LPAR type_name RPAR cast_expression
-- On NE_OP reduce production cast_expression -> LPAR type_name RPAR cast_expression
-- On MUL_ASSIGN reduce production cast_expression -> LPAR type_name RPAR cast_expression
-- On MOD_ASSIGN reduce production cast_expression -> LPAR type_name RPAR cast_expression
-- On MINUS reduce production cast_expression -> LPAR type_name RPAR cast_expression
-- On LT reduce production cast_expression -> LPAR type_name RPAR cast_expression
-- On LE_OP reduce production cast_expression -> LPAR type_name RPAR cast_expression
-- On LEFT_OP reduce production cast_expression -> LPAR type_name RPAR cast_expression
-- On LEFT_ASSIGN reduce production cast_expression -> LPAR type_name RPAR cast_expression
-- On HAT reduce production cast_expression -> LPAR type_name RPAR cast_expression
-- On GT reduce production cast_expression -> LPAR type_name RPAR cast_expression
-- On GE_OP reduce production cast_expression -> LPAR type_name RPAR cast_expression
-- On EQ_OP reduce production cast_expression -> LPAR type_name RPAR cast_expression
-- On EQUAL reduce production cast_expression -> LPAR type_name RPAR cast_expression
-- On DIV_ASSIGN reduce production cast_expression -> LPAR type_name RPAR cast_expression
-- On COMMA reduce production cast_expression -> LPAR type_name RPAR cast_expression
-- On COLON reduce production cast_expression -> LPAR type_name RPAR cast_expression
-- On ATTRIBUTE reduce production cast_expression -> LPAR type_name RPAR cast_expression
-- On AND_OP reduce production cast_expression -> LPAR type_name RPAR cast_expression
-- On AND_ASSIGN reduce production cast_expression -> LPAR type_name RPAR cast_expression
-- On AMP reduce production cast_expression -> LPAR type_name RPAR cast_expression
-- On ADD_ASSIGN reduce production cast_expression -> LPAR type_name RPAR cast_expression

State 248:
type_name -> specifier_qualifier_list . [ RPAR ]
type_name -> specifier_qualifier_list . abstract_declarator [ RPAR ]
-- On STAR shift to state 9
-- On LSQUARE shift to state 203
-- On LPAR shift to state 249
-- On pointer shift to state 250
-- On direct_abstract_declarator shift to state 222
-- On abstract_declarator shift to state 251
-- On RPAR reduce production type_name -> specifier_qualifier_list

State 249:
direct_abstract_declarator -> LPAR . abstract_declarator RPAR [ RPAR LSQUARE LPAR ]
direct_abstract_declarator -> LPAR . RPAR [ RPAR LSQUARE LPAR ]
direct_abstract_declarator -> LPAR . parameter_type_list RPAR [ RPAR LSQUARE LPAR ]
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPE_NAME shift to state 35
-- On TYPEDEF shift to state 6
-- On STRUCT shift to state 7
-- On STATIC shift to state 8
-- On STAR shift to state 9
-- On SIGNED shift to state 18
-- On SHORT shift to state 19
-- On RPAR shift to state 208
-- On RESTRICT shift to state 10
-- On REGISTER shift to state 20
-- On LSQUARE shift to state 203
-- On LPAR shift to state 249
-- On LONG shift to state 37
-- On INT shift to state 38
-- On FLOAT shift to state 140
-- On EXTERN shift to state 182
-- On ENUM shift to state 141
-- On DOUBLE shift to state 156
-- On CONST shift to state 11
-- On CHAR shift to state 157
-- On AUTO shift to state 183
-- On type_specifier_no_name shift to state 158
-- On type_specifier shift to state 184
-- On type_qualifier shift to state 187
-- On struct_or_union_specifier shift to state 162
-- On struct_or_union shift to state 163
-- On storage_class_specifier shift to state 188
-- On pointer shift to state 250
-- On parameter_type_list shift to state 220
-- On parameter_list shift to state 198
-- On parameter_declaration shift to state 219
-- On enum_specifier shift to state 167
-- On direct_abstract_declarator shift to state 222
-- On declaration_specifiers shift to state 202
-- On abstract_declarator shift to state 225

State 250:
abstract_declarator -> pointer . [ RPAR ]
abstract_declarator -> pointer . direct_abstract_declarator [ RPAR ]
-- On LSQUARE shift to state 203
-- On LPAR shift to state 249
-- On direct_abstract_declarator shift to state 210
-- On RPAR reduce production abstract_declarator -> pointer

State 251:
type_name -> specifier_qualifier_list abstract_declarator . [ RPAR ]
-- On RPAR reduce production type_name -> specifier_qualifier_list abstract_declarator

State 252:
unary_expression -> SIZEOF LPAR type_name . RPAR [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RSQUARE RPAR RIGHT_OP RIGHT_ASSIGN RBRACE QUESTION PLUS PIPE PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LE_OP LEFT_OP LEFT_ASSIGN HAT GT GE_OP EQ_OP EQUAL DIV_ASSIGN COMMA COLON ATTRIBUTE AND_OP AND_ASSIGN AMP ADD_ASSIGN ]
-- On RPAR shift to state 253

State 253:
unary_expression -> SIZEOF LPAR type_name RPAR . [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RSQUARE RPAR RIGHT_OP RIGHT_ASSIGN RBRACE QUESTION PLUS PIPE PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LE_OP LEFT_OP LEFT_ASSIGN HAT GT GE_OP EQ_OP EQUAL DIV_ASSIGN COMMA COLON ATTRIBUTE AND_OP AND_ASSIGN AMP ADD_ASSIGN ]
-- On XOR_ASSIGN reduce production unary_expression -> SIZEOF LPAR type_name RPAR
-- On SUB_ASSIGN reduce production unary_expression -> SIZEOF LPAR type_name RPAR
-- On STAR reduce production unary_expression -> SIZEOF LPAR type_name RPAR
-- On SLASH reduce production unary_expression -> SIZEOF LPAR type_name RPAR
-- On SEMICOLON reduce production unary_expression -> SIZEOF LPAR type_name RPAR
-- On RSQUARE reduce production unary_expression -> SIZEOF LPAR type_name RPAR
-- On RPAR reduce production unary_expression -> SIZEOF LPAR type_name RPAR
-- On RIGHT_OP reduce production unary_expression -> SIZEOF LPAR type_name RPAR
-- On RIGHT_ASSIGN reduce production unary_expression -> SIZEOF LPAR type_name RPAR
-- On RBRACE reduce production unary_expression -> SIZEOF LPAR type_name RPAR
-- On QUESTION reduce production unary_expression -> SIZEOF LPAR type_name RPAR
-- On PLUS reduce production unary_expression -> SIZEOF LPAR type_name RPAR
-- On PIPE reduce production unary_expression -> SIZEOF LPAR type_name RPAR
-- On PERCENT reduce production unary_expression -> SIZEOF LPAR type_name RPAR
-- On OR_OP reduce production unary_expression -> SIZEOF LPAR type_name RPAR
-- On OR_ASSIGN reduce production unary_expression -> SIZEOF LPAR type_name RPAR
-- On NE_OP reduce production unary_expression -> SIZEOF LPAR type_name RPAR
-- On MUL_ASSIGN reduce production unary_expression -> SIZEOF LPAR type_name RPAR
-- On MOD_ASSIGN reduce production unary_expression -> SIZEOF LPAR type_name RPAR
-- On MINUS reduce production unary_expression -> SIZEOF LPAR type_name RPAR
-- On LT reduce production unary_expression -> SIZEOF LPAR type_name RPAR
-- On LE_OP reduce production unary_expression -> SIZEOF LPAR type_name RPAR
-- On LEFT_OP reduce production unary_expression -> SIZEOF LPAR type_name RPAR
-- On LEFT_ASSIGN reduce production unary_expression -> SIZEOF LPAR type_name RPAR
-- On HAT reduce production unary_expression -> SIZEOF LPAR type_name RPAR
-- On GT reduce production unary_expression -> SIZEOF LPAR type_name RPAR
-- On GE_OP reduce production unary_expression -> SIZEOF LPAR type_name RPAR
-- On EQ_OP reduce production unary_expression -> SIZEOF LPAR type_name RPAR
-- On EQUAL reduce production unary_expression -> SIZEOF LPAR type_name RPAR
-- On DIV_ASSIGN reduce production unary_expression -> SIZEOF LPAR type_name RPAR
-- On COMMA reduce production unary_expression -> SIZEOF LPAR type_name RPAR
-- On COLON reduce production unary_expression -> SIZEOF LPAR type_name RPAR
-- On ATTRIBUTE reduce production unary_expression -> SIZEOF LPAR type_name RPAR
-- On AND_OP reduce production unary_expression -> SIZEOF LPAR type_name RPAR
-- On AND_ASSIGN reduce production unary_expression -> SIZEOF LPAR type_name RPAR
-- On AMP reduce production unary_expression -> SIZEOF LPAR type_name RPAR
-- On ADD_ASSIGN reduce production unary_expression -> SIZEOF LPAR type_name RPAR

State 254:
unary_expression -> SIZEOF unary_expression . [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RSQUARE RPAR RIGHT_OP RIGHT_ASSIGN RBRACE QUESTION PLUS PIPE PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LE_OP LEFT_OP LEFT_ASSIGN HAT GT GE_OP EQ_OP EQUAL DIV_ASSIGN COMMA COLON ATTRIBUTE AND_OP AND_ASSIGN AMP ADD_ASSIGN ]
-- On XOR_ASSIGN reduce production unary_expression -> SIZEOF unary_expression
-- On SUB_ASSIGN reduce production unary_expression -> SIZEOF unary_expression
-- On STAR reduce production unary_expression -> SIZEOF unary_expression
-- On SLASH reduce production unary_expression -> SIZEOF unary_expression
-- On SEMICOLON reduce production unary_expression -> SIZEOF unary_expression
-- On RSQUARE reduce production unary_expression -> SIZEOF unary_expression
-- On RPAR reduce production unary_expression -> SIZEOF unary_expression
-- On RIGHT_OP reduce production unary_expression -> SIZEOF unary_expression
-- On RIGHT_ASSIGN reduce production unary_expression -> SIZEOF unary_expression
-- On RBRACE reduce production unary_expression -> SIZEOF unary_expression
-- On QUESTION reduce production unary_expression -> SIZEOF unary_expression
-- On PLUS reduce production unary_expression -> SIZEOF unary_expression
-- On PIPE reduce production unary_expression -> SIZEOF unary_expression
-- On PERCENT reduce production unary_expression -> SIZEOF unary_expression
-- On OR_OP reduce production unary_expression -> SIZEOF unary_expression
-- On OR_ASSIGN reduce production unary_expression -> SIZEOF unary_expression
-- On NE_OP reduce production unary_expression -> SIZEOF unary_expression
-- On MUL_ASSIGN reduce production unary_expression -> SIZEOF unary_expression
-- On MOD_ASSIGN reduce production unary_expression -> SIZEOF unary_expression
-- On MINUS reduce production unary_expression -> SIZEOF unary_expression
-- On LT reduce production unary_expression -> SIZEOF unary_expression
-- On LE_OP reduce production unary_expression -> SIZEOF unary_expression
-- On LEFT_OP reduce production unary_expression -> SIZEOF unary_expression
-- On LEFT_ASSIGN reduce production unary_expression -> SIZEOF unary_expression
-- On HAT reduce production unary_expression -> SIZEOF unary_expression
-- On GT reduce production unary_expression -> SIZEOF unary_expression
-- On GE_OP reduce production unary_expression -> SIZEOF unary_expression
-- On EQ_OP reduce production unary_expression -> SIZEOF unary_expression
-- On EQUAL reduce production unary_expression -> SIZEOF unary_expression
-- On DIV_ASSIGN reduce production unary_expression -> SIZEOF unary_expression
-- On COMMA reduce production unary_expression -> SIZEOF unary_expression
-- On COLON reduce production unary_expression -> SIZEOF unary_expression
-- On ATTRIBUTE reduce production unary_expression -> SIZEOF unary_expression
-- On AND_OP reduce production unary_expression -> SIZEOF unary_expression
-- On AND_ASSIGN reduce production unary_expression -> SIZEOF unary_expression
-- On AMP reduce production unary_expression -> SIZEOF unary_expression
-- On ADD_ASSIGN reduce production unary_expression -> SIZEOF unary_expression

State 255:
direct_declarator -> direct_declarator LSQUARE RSQUARE . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC SPEC SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LSQUARE LPAR LONG LBRACE INT FLOAT EXTERN EQUAL ENUM DOUBLE DECL CONST COMMA COLON CHAR AUTO ATTRIBUTE ]
-- On VOLATILE reduce production direct_declarator -> direct_declarator LSQUARE RSQUARE
-- On VOID reduce production direct_declarator -> direct_declarator LSQUARE RSQUARE
-- On UNSIGNED reduce production direct_declarator -> direct_declarator LSQUARE RSQUARE
-- On UNION reduce production direct_declarator -> direct_declarator LSQUARE RSQUARE
-- On TYPE_NAME reduce production direct_declarator -> direct_declarator LSQUARE RSQUARE
-- On TYPEDEF reduce production direct_declarator -> direct_declarator LSQUARE RSQUARE
-- On STRUCT reduce production direct_declarator -> direct_declarator LSQUARE RSQUARE
-- On STATIC reduce production direct_declarator -> direct_declarator LSQUARE RSQUARE
-- On SPEC reduce production direct_declarator -> direct_declarator LSQUARE RSQUARE
-- On SIGNED reduce production direct_declarator -> direct_declarator LSQUARE RSQUARE
-- On SHORT reduce production direct_declarator -> direct_declarator LSQUARE RSQUARE
-- On SEMICOLON reduce production direct_declarator -> direct_declarator LSQUARE RSQUARE
-- On RPAR reduce production direct_declarator -> direct_declarator LSQUARE RSQUARE
-- On RESTRICT reduce production direct_declarator -> direct_declarator LSQUARE RSQUARE
-- On REGISTER reduce production direct_declarator -> direct_declarator LSQUARE RSQUARE
-- On LSQUARE reduce production direct_declarator -> direct_declarator LSQUARE RSQUARE
-- On LPAR reduce production direct_declarator -> direct_declarator LSQUARE RSQUARE
-- On LONG reduce production direct_declarator -> direct_declarator LSQUARE RSQUARE
-- On LBRACE reduce production direct_declarator -> direct_declarator LSQUARE RSQUARE
-- On INT reduce production direct_declarator -> direct_declarator LSQUARE RSQUARE
-- On FLOAT reduce production direct_declarator -> direct_declarator LSQUARE RSQUARE
-- On EXTERN reduce production direct_declarator -> direct_declarator LSQUARE RSQUARE
-- On EQUAL reduce production direct_declarator -> direct_declarator LSQUARE RSQUARE
-- On ENUM reduce production direct_declarator -> direct_declarator LSQUARE RSQUARE
-- On DOUBLE reduce production direct_declarator -> direct_declarator LSQUARE RSQUARE
-- On DECL reduce production direct_declarator -> direct_declarator LSQUARE RSQUARE
-- On CONST reduce production direct_declarator -> direct_declarator LSQUARE RSQUARE
-- On COMMA reduce production direct_declarator -> direct_declarator LSQUARE RSQUARE
-- On COLON reduce production direct_declarator -> direct_declarator LSQUARE RSQUARE
-- On CHAR reduce production direct_declarator -> direct_declarator LSQUARE RSQUARE
-- On AUTO reduce production direct_declarator -> direct_declarator LSQUARE RSQUARE
-- On ATTRIBUTE reduce production direct_declarator -> direct_declarator LSQUARE RSQUARE

State 256:
direct_declarator -> direct_declarator LSQUARE constant_expression . RSQUARE [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC SPEC SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LSQUARE LPAR LONG LBRACE INT FLOAT EXTERN EQUAL ENUM DOUBLE DECL CONST COMMA COLON CHAR AUTO ATTRIBUTE ]
-- On RSQUARE shift to state 257

State 257:
direct_declarator -> direct_declarator LSQUARE constant_expression RSQUARE . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC SPEC SIGNED SHORT SEMICOLON RPAR RESTRICT REGISTER LSQUARE LPAR LONG LBRACE INT FLOAT EXTERN EQUAL ENUM DOUBLE DECL CONST COMMA COLON CHAR AUTO ATTRIBUTE ]
-- On VOLATILE reduce production direct_declarator -> direct_declarator LSQUARE constant_expression RSQUARE
-- On VOID reduce production direct_declarator -> direct_declarator LSQUARE constant_expression RSQUARE
-- On UNSIGNED reduce production direct_declarator -> direct_declarator LSQUARE constant_expression RSQUARE
-- On UNION reduce production direct_declarator -> direct_declarator LSQUARE constant_expression RSQUARE
-- On TYPE_NAME reduce production direct_declarator -> direct_declarator LSQUARE constant_expression RSQUARE
-- On TYPEDEF reduce production direct_declarator -> direct_declarator LSQUARE constant_expression RSQUARE
-- On STRUCT reduce production direct_declarator -> direct_declarator LSQUARE constant_expression RSQUARE
-- On STATIC reduce production direct_declarator -> direct_declarator LSQUARE constant_expression RSQUARE
-- On SPEC reduce production direct_declarator -> direct_declarator LSQUARE constant_expression RSQUARE
-- On SIGNED reduce production direct_declarator -> direct_declarator LSQUARE constant_expression RSQUARE
-- On SHORT reduce production direct_declarator -> direct_declarator LSQUARE constant_expression RSQUARE
-- On SEMICOLON reduce production direct_declarator -> direct_declarator LSQUARE constant_expression RSQUARE
-- On RPAR reduce production direct_declarator -> direct_declarator LSQUARE constant_expression RSQUARE
-- On RESTRICT reduce production direct_declarator -> direct_declarator LSQUARE constant_expression RSQUARE
-- On REGISTER reduce production direct_declarator -> direct_declarator LSQUARE constant_expression RSQUARE
-- On LSQUARE reduce production direct_declarator -> direct_declarator LSQUARE constant_expression RSQUARE
-- On LPAR reduce production direct_declarator -> direct_declarator LSQUARE constant_expression RSQUARE
-- On LONG reduce production direct_declarator -> direct_declarator LSQUARE constant_expression RSQUARE
-- On LBRACE reduce production direct_declarator -> direct_declarator LSQUARE constant_expression RSQUARE
-- On INT reduce production direct_declarator -> direct_declarator LSQUARE constant_expression RSQUARE
-- On FLOAT reduce production direct_declarator -> direct_declarator LSQUARE constant_expression RSQUARE
-- On EXTERN reduce production direct_declarator -> direct_declarator LSQUARE constant_expression RSQUARE
-- On EQUAL reduce production direct_declarator -> direct_declarator LSQUARE constant_expression RSQUARE
-- On ENUM reduce production direct_declarator -> direct_declarator LSQUARE constant_expression RSQUARE
-- On DOUBLE reduce production direct_declarator -> direct_declarator LSQUARE constant_expression RSQUARE
-- On DECL reduce production direct_declarator -> direct_declarator LSQUARE constant_expression RSQUARE
-- On CONST reduce production direct_declarator -> direct_declarator LSQUARE constant_expression RSQUARE
-- On COMMA reduce production direct_declarator -> direct_declarator LSQUARE constant_expression RSQUARE
-- On COLON reduce production direct_declarator -> direct_declarator LSQUARE constant_expression RSQUARE
-- On CHAR reduce production direct_declarator -> direct_declarator LSQUARE constant_expression RSQUARE
-- On AUTO reduce production direct_declarator -> direct_declarator LSQUARE constant_expression RSQUARE
-- On ATTRIBUTE reduce production direct_declarator -> direct_declarator LSQUARE constant_expression RSQUARE

State 258:
function_definition -> SPEC function_prototype . compound_statement [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SPEC SIGNED SHORT RESTRICT REGISTER LPAR LONG INT IDENTIFIER FLOAT EXTERN EOF ENUM DOUBLE DECL CONST CHAR AUTO ]
-- On LBRACE shift to state 259
-- On compound_statement_LBRACE shift to state 260
-- On compound_statement shift to state 384

State 259:
compound_statement_LBRACE -> LBRACE . [ WHILE VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SPEC SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PLUS MINUS LPAR LOOP_ANNOT LONG LBRACE INT INC_OP IF IDENTIFIER GOTO FOR FLOAT EXTERN EXL ENUM DOUBLE DO DEFAULT DEC_OP DECL CONTINUE CONSTANT CONST CODE_ANNOT CHAR CASE BREAK AUTO AMP ]
-- On WHILE reduce production compound_statement_LBRACE -> LBRACE
-- On VOLATILE reduce production compound_statement_LBRACE -> LBRACE
-- On VOID reduce production compound_statement_LBRACE -> LBRACE
-- On UNSIGNED reduce production compound_statement_LBRACE -> LBRACE
-- On UNION reduce production compound_statement_LBRACE -> LBRACE
-- On TYPE_NAME reduce production compound_statement_LBRACE -> LBRACE
-- On TYPEDEF reduce production compound_statement_LBRACE -> LBRACE
-- On TILDE reduce production compound_statement_LBRACE -> LBRACE
-- On SWITCH reduce production compound_statement_LBRACE -> LBRACE
-- On STRUCT reduce production compound_statement_LBRACE -> LBRACE
-- On STRING_LITERAL reduce production compound_statement_LBRACE -> LBRACE
-- On STATIC reduce production compound_statement_LBRACE -> LBRACE
-- On STAR reduce production compound_statement_LBRACE -> LBRACE
-- On SPEC reduce production compound_statement_LBRACE -> LBRACE
-- On SIZEOF reduce production compound_statement_LBRACE -> LBRACE
-- On SIGNED reduce production compound_statement_LBRACE -> LBRACE
-- On SHORT reduce production compound_statement_LBRACE -> LBRACE
-- On SEMICOLON reduce production compound_statement_LBRACE -> LBRACE
-- On RETURN reduce production compound_statement_LBRACE -> LBRACE
-- On RESTRICT reduce production compound_statement_LBRACE -> LBRACE
-- On REGISTER reduce production compound_statement_LBRACE -> LBRACE
-- On RBRACE reduce production compound_statement_LBRACE -> LBRACE
-- On PLUS reduce production compound_statement_LBRACE -> LBRACE
-- On MINUS reduce production compound_statement_LBRACE -> LBRACE
-- On LPAR reduce production compound_statement_LBRACE -> LBRACE
-- On LOOP_ANNOT reduce production compound_statement_LBRACE -> LBRACE
-- On LONG reduce production compound_statement_LBRACE -> LBRACE
-- On LBRACE reduce production compound_statement_LBRACE -> LBRACE
-- On INT reduce production compound_statement_LBRACE -> LBRACE
-- On INC_OP reduce production compound_statement_LBRACE -> LBRACE
-- On IF reduce production compound_statement_LBRACE -> LBRACE
-- On IDENTIFIER reduce production compound_statement_LBRACE -> LBRACE
-- On GOTO reduce production compound_statement_LBRACE -> LBRACE
-- On FOR reduce production compound_statement_LBRACE -> LBRACE
-- On FLOAT reduce production compound_statement_LBRACE -> LBRACE
-- On EXTERN reduce production compound_statement_LBRACE -> LBRACE
-- On EXL reduce production compound_statement_LBRACE -> LBRACE
-- On ENUM reduce production compound_statement_LBRACE -> LBRACE
-- On DOUBLE reduce production compound_statement_LBRACE -> LBRACE
-- On DO reduce production compound_statement_LBRACE -> LBRACE
-- On DEFAULT reduce production compound_statement_LBRACE -> LBRACE
-- On DEC_OP reduce production compound_statement_LBRACE -> LBRACE
-- On DECL reduce production compound_statement_LBRACE -> LBRACE
-- On CONTINUE reduce production compound_statement_LBRACE -> LBRACE
-- On CONSTANT reduce production compound_statement_LBRACE -> LBRACE
-- On CONST reduce production compound_statement_LBRACE -> LBRACE
-- On CODE_ANNOT reduce production compound_statement_LBRACE -> LBRACE
-- On CHAR reduce production compound_statement_LBRACE -> LBRACE
-- On CASE reduce production compound_statement_LBRACE -> LBRACE
-- On BREAK reduce production compound_statement_LBRACE -> LBRACE
-- On AUTO reduce production compound_statement_LBRACE -> LBRACE
-- On AMP reduce production compound_statement_LBRACE -> LBRACE

State 260:
compound_statement -> compound_statement_LBRACE . RBRACE [ WHILE VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SPEC SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PLUS MINUS LPAR LOOP_ANNOT LONG LBRACE INT INC_OP IF IDENTIFIER GOTO FOR FLOAT EXTERN EXL EOF ENUM ELSE DOUBLE DO DEFAULT DEC_OP DECL CONTINUE CONSTANT CONST CODE_ANNOT CHAR CASE BREAK AUTO AMP ]
compound_statement -> compound_statement_LBRACE . statement_list RBRACE [ WHILE VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SPEC SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PLUS MINUS LPAR LOOP_ANNOT LONG LBRACE INT INC_OP IF IDENTIFIER GOTO FOR FLOAT EXTERN EXL EOF ENUM ELSE DOUBLE DO DEFAULT DEC_OP DECL CONTINUE CONSTANT CONST CODE_ANNOT CHAR CASE BREAK AUTO AMP ]
compound_statement -> compound_statement_LBRACE . declaration_list RBRACE [ WHILE VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SPEC SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PLUS MINUS LPAR LOOP_ANNOT LONG LBRACE INT INC_OP IF IDENTIFIER GOTO FOR FLOAT EXTERN EXL EOF ENUM ELSE DOUBLE DO DEFAULT DEC_OP DECL CONTINUE CONSTANT CONST CODE_ANNOT CHAR CASE BREAK AUTO AMP ]
compound_statement -> compound_statement_LBRACE . declaration_list statement_list RBRACE [ WHILE VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SPEC SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PLUS MINUS LPAR LOOP_ANNOT LONG LBRACE INT INC_OP IF IDENTIFIER GOTO FOR FLOAT EXTERN EXL EOF ENUM ELSE DOUBLE DO DEFAULT DEC_OP DECL CONTINUE CONSTANT CONST CODE_ANNOT CHAR CASE BREAK AUTO AMP ]
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPE_NAME shift to state 5
-- On TYPEDEF shift to state 6
-- On TILDE shift to state 28
-- On SWITCH shift to state 261
-- On STRUCT shift to state 7
-- On STRING_LITERAL shift to state 29
-- On STATIC shift to state 8
-- On STAR shift to state 30
-- On SPEC shift to state 330
-- On SIZEOF shift to state 31
-- On SIGNED shift to state 18
-- On SHORT shift to state 19
-- On SEMICOLON shift to state 266
-- On RETURN shift to state 267
-- On RESTRICT shift to state 10
-- On REGISTER shift to state 20
-- On RBRACE shift to state 367
-- On PLUS shift to state 32
-- On MINUS shift to state 33
-- On LPAR shift to state 36
-- On LOOP_ANNOT shift to state 271
-- On LONG shift to state 37
-- On LBRACE shift to state 259
-- On INT shift to state 38
-- On INC_OP shift to state 39
-- On IF shift to state 272
-- On IDENTIFIER shift to state 276
-- On GOTO shift to state 277
-- On FLOAT shift to state 140
-- On EXTERN shift to state 182
-- On EXL shift to state 42
-- On ENUM shift to state 141
-- On DOUBLE shift to state 156
-- On DEFAULT shift to state 280
-- On DEC_OP shift to state 43
-- On DECL shift to state 368
-- On CONTINUE shift to state 282
-- On CONSTANT shift to state 44
-- On CONST shift to state 11
-- On CODE_ANNOT shift to state 284
-- On CHAR shift to state 157
-- On CASE shift to state 285
-- On BREAK shift to state 288
-- On AUTO shift to state 183
-- On AMP shift to state 45
-- On unary_operator shift to state 46
-- On unary_expression shift to state 53
-- On type_specifier_no_name shift to state 158
-- On type_specifier shift to state 184
-- On type_qualifier shift to state 187
-- On struct_or_union_specifier shift to state 162
-- On struct_or_union shift to state 163
-- On storage_class_specifier shift to state 188
-- On statement_list shift to state 369
-- On statement shift to state 372
-- On shift_expression shift to state 66
-- On selection_statement shift to state 291
-- On relational_expression shift to state 83
-- On primary_expression shift to state 48
-- On postfix_expression shift to state 49
-- On multiplicative_expression shift to state 68
-- On loop_annot shift to state 292
-- On logical_or_expression shift to state 93
-- On logical_and_expression shift to state 95
-- On labeled_statement shift to state 298
-- On jump_statement shift to state 299
-- On iteration_statement shift to state 300
-- On inclusive_or_expression shift to state 111
-- On identifier shift to state 301
-- On expression_statement shift to state 304
-- On expression shift to state 305
-- On exclusive_or_expression shift to state 110
-- On equality_expression shift to state 101
-- On enum_specifier shift to state 167
-- On declaration_specifiers shift to state 373
-- On declaration_list shift to state 378
-- On declaration shift to state 383
-- On conditional_expression shift to state 114
-- On compound_statement_LBRACE shift to state 260
-- On compound_statement shift to state 307
-- On cast_expression shift to state 75
-- On assignment_expression shift to state 118
-- On and_expression shift to state 109
-- On additive_expression shift to state 86
-- On WHILE reduce production loop_annot ->
-- On FOR reduce production loop_annot ->
-- On DO reduce production loop_annot ->

State 261:
selection_statement -> SWITCH . LPAR expression RPAR statement [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
-- On LPAR shift to state 262

State 262:
selection_statement -> SWITCH LPAR . expression RPAR statement [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
-- On TILDE shift to state 28
-- On STRING_LITERAL shift to state 29
-- On STAR shift to state 30
-- On SIZEOF shift to state 31
-- On PLUS shift to state 32
-- On MINUS shift to state 33
-- On LPAR shift to state 36
-- On INC_OP shift to state 39
-- On IDENTIFIER shift to state 41
-- On EXL shift to state 42
-- On DEC_OP shift to state 43
-- On CONSTANT shift to state 44
-- On AMP shift to state 45
-- On unary_operator shift to state 46
-- On unary_expression shift to state 53
-- On shift_expression shift to state 66
-- On relational_expression shift to state 83
-- On primary_expression shift to state 48
-- On postfix_expression shift to state 49
-- On multiplicative_expression shift to state 68
-- On logical_or_expression shift to state 93
-- On logical_and_expression shift to state 95
-- On inclusive_or_expression shift to state 111
-- On expression shift to state 263
-- On exclusive_or_expression shift to state 110
-- On equality_expression shift to state 101
-- On conditional_expression shift to state 114
-- On cast_expression shift to state 75
-- On assignment_expression shift to state 118
-- On and_expression shift to state 109
-- On additive_expression shift to state 86

State 263:
expression -> expression . COMMA assignment_expression [ RPAR COMMA ]
selection_statement -> SWITCH LPAR expression . RPAR statement [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
-- On RPAR shift to state 264
-- On COMMA shift to state 113

State 264:
selection_statement -> SWITCH LPAR expression RPAR . statement [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
-- On TYPE_NAME shift to state 22
-- On TILDE shift to state 28
-- On SWITCH shift to state 261
-- On STRING_LITERAL shift to state 29
-- On STAR shift to state 30
-- On SPEC shift to state 265
-- On SIZEOF shift to state 31
-- On SEMICOLON shift to state 266
-- On RETURN shift to state 267
-- On PLUS shift to state 32
-- On MINUS shift to state 33
-- On LPAR shift to state 36
-- On LOOP_ANNOT shift to state 271
-- On LBRACE shift to state 259
-- On INC_OP shift to state 39
-- On IF shift to state 272
-- On IDENTIFIER shift to state 276
-- On GOTO shift to state 277
-- On EXL shift to state 42
-- On DEFAULT shift to state 280
-- On DEC_OP shift to state 43
-- On CONTINUE shift to state 282
-- On CONSTANT shift to state 44
-- On CODE_ANNOT shift to state 284
-- On CASE shift to state 285
-- On BREAK shift to state 288
-- On AMP shift to state 45
-- On unary_operator shift to state 46
-- On unary_expression shift to state 53
-- On statement shift to state 329
-- On shift_expression shift to state 66
-- On selection_statement shift to state 291
-- On relational_expression shift to state 83
-- On primary_expression shift to state 48
-- On postfix_expression shift to state 49
-- On multiplicative_expression shift to state 68
-- On loop_annot shift to state 292
-- On logical_or_expression shift to state 93
-- On logical_and_expression shift to state 95
-- On labeled_statement shift to state 298
-- On jump_statement shift to state 299
-- On iteration_statement shift to state 300
-- On inclusive_or_expression shift to state 111
-- On identifier shift to state 301
-- On expression_statement shift to state 304
-- On expression shift to state 305
-- On exclusive_or_expression shift to state 110
-- On equality_expression shift to state 101
-- On conditional_expression shift to state 114
-- On compound_statement_LBRACE shift to state 260
-- On compound_statement shift to state 307
-- On cast_expression shift to state 75
-- On assignment_expression shift to state 118
-- On and_expression shift to state 109
-- On additive_expression shift to state 86
-- On WHILE reduce production loop_annot ->
-- On FOR reduce production loop_annot ->
-- On DO reduce production loop_annot ->

State 265:
statement -> SPEC . statement [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
-- On TYPE_NAME shift to state 22
-- On TILDE shift to state 28
-- On SWITCH shift to state 261
-- On STRING_LITERAL shift to state 29
-- On STAR shift to state 30
-- On SPEC shift to state 265
-- On SIZEOF shift to state 31
-- On SEMICOLON shift to state 266
-- On RETURN shift to state 267
-- On PLUS shift to state 32
-- On MINUS shift to state 33
-- On LPAR shift to state 36
-- On LOOP_ANNOT shift to state 271
-- On LBRACE shift to state 259
-- On INC_OP shift to state 39
-- On IF shift to state 272
-- On IDENTIFIER shift to state 276
-- On GOTO shift to state 277
-- On EXL shift to state 42
-- On DEFAULT shift to state 280
-- On DEC_OP shift to state 43
-- On CONTINUE shift to state 282
-- On CONSTANT shift to state 44
-- On CODE_ANNOT shift to state 284
-- On CASE shift to state 285
-- On BREAK shift to state 288
-- On AMP shift to state 45
-- On unary_operator shift to state 46
-- On unary_expression shift to state 53
-- On statement shift to state 328
-- On shift_expression shift to state 66
-- On selection_statement shift to state 291
-- On relational_expression shift to state 83
-- On primary_expression shift to state 48
-- On postfix_expression shift to state 49
-- On multiplicative_expression shift to state 68
-- On loop_annot shift to state 292
-- On logical_or_expression shift to state 93
-- On logical_and_expression shift to state 95
-- On labeled_statement shift to state 298
-- On jump_statement shift to state 299
-- On iteration_statement shift to state 300
-- On inclusive_or_expression shift to state 111
-- On identifier shift to state 301
-- On expression_statement shift to state 304
-- On expression shift to state 305
-- On exclusive_or_expression shift to state 110
-- On equality_expression shift to state 101
-- On conditional_expression shift to state 114
-- On compound_statement_LBRACE shift to state 260
-- On compound_statement shift to state 307
-- On cast_expression shift to state 75
-- On assignment_expression shift to state 118
-- On and_expression shift to state 109
-- On additive_expression shift to state 86
-- On WHILE reduce production loop_annot ->
-- On FOR reduce production loop_annot ->
-- On DO reduce production loop_annot ->

State 266:
expression_statement -> SEMICOLON . [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RPAR RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
-- On WHILE reduce production expression_statement -> SEMICOLON
-- On TYPE_NAME reduce production expression_statement -> SEMICOLON
-- On TILDE reduce production expression_statement -> SEMICOLON
-- On SWITCH reduce production expression_statement -> SEMICOLON
-- On STRING_LITERAL reduce production expression_statement -> SEMICOLON
-- On STAR reduce production expression_statement -> SEMICOLON
-- On SPEC reduce production expression_statement -> SEMICOLON
-- On SIZEOF reduce production expression_statement -> SEMICOLON
-- On SEMICOLON reduce production expression_statement -> SEMICOLON
-- On RPAR reduce production expression_statement -> SEMICOLON
-- On RETURN reduce production expression_statement -> SEMICOLON
-- On RBRACE reduce production expression_statement -> SEMICOLON
-- On PLUS reduce production expression_statement -> SEMICOLON
-- On MINUS reduce production expression_statement -> SEMICOLON
-- On LPAR reduce production expression_statement -> SEMICOLON
-- On LOOP_ANNOT reduce production expression_statement -> SEMICOLON
-- On LBRACE reduce production expression_statement -> SEMICOLON
-- On INC_OP reduce production expression_statement -> SEMICOLON
-- On IF reduce production expression_statement -> SEMICOLON
-- On IDENTIFIER reduce production expression_statement -> SEMICOLON
-- On GOTO reduce production expression_statement -> SEMICOLON
-- On FOR reduce production expression_statement -> SEMICOLON
-- On EXL reduce production expression_statement -> SEMICOLON
-- On ELSE reduce production expression_statement -> SEMICOLON
-- On DO reduce production expression_statement -> SEMICOLON
-- On DEFAULT reduce production expression_statement -> SEMICOLON
-- On DEC_OP reduce production expression_statement -> SEMICOLON
-- On CONTINUE reduce production expression_statement -> SEMICOLON
-- On CONSTANT reduce production expression_statement -> SEMICOLON
-- On CODE_ANNOT reduce production expression_statement -> SEMICOLON
-- On CASE reduce production expression_statement -> SEMICOLON
-- On BREAK reduce production expression_statement -> SEMICOLON
-- On AMP reduce production expression_statement -> SEMICOLON

State 267:
jump_statement -> RETURN . SEMICOLON [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
jump_statement -> RETURN . expression SEMICOLON [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
-- On TILDE shift to state 28
-- On STRING_LITERAL shift to state 29
-- On STAR shift to state 30
-- On SIZEOF shift to state 31
-- On SEMICOLON shift to state 268
-- On PLUS shift to state 32
-- On MINUS shift to state 33
-- On LPAR shift to state 36
-- On INC_OP shift to state 39
-- On IDENTIFIER shift to state 41
-- On EXL shift to state 42
-- On DEC_OP shift to state 43
-- On CONSTANT shift to state 44
-- On AMP shift to state 45
-- On unary_operator shift to state 46
-- On unary_expression shift to state 53
-- On shift_expression shift to state 66
-- On relational_expression shift to state 83
-- On primary_expression shift to state 48
-- On postfix_expression shift to state 49
-- On multiplicative_expression shift to state 68
-- On logical_or_expression shift to state 93
-- On logical_and_expression shift to state 95
-- On inclusive_or_expression shift to state 111
-- On expression shift to state 269
-- On exclusive_or_expression shift to state 110
-- On equality_expression shift to state 101
-- On conditional_expression shift to state 114
-- On cast_expression shift to state 75
-- On assignment_expression shift to state 118
-- On and_expression shift to state 109
-- On additive_expression shift to state 86

State 268:
jump_statement -> RETURN SEMICOLON . [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
-- On WHILE reduce production jump_statement -> RETURN SEMICOLON
-- On TYPE_NAME reduce production jump_statement -> RETURN SEMICOLON
-- On TILDE reduce production jump_statement -> RETURN SEMICOLON
-- On SWITCH reduce production jump_statement -> RETURN SEMICOLON
-- On STRING_LITERAL reduce production jump_statement -> RETURN SEMICOLON
-- On STAR reduce production jump_statement -> RETURN SEMICOLON
-- On SPEC reduce production jump_statement -> RETURN SEMICOLON
-- On SIZEOF reduce production jump_statement -> RETURN SEMICOLON
-- On SEMICOLON reduce production jump_statement -> RETURN SEMICOLON
-- On RETURN reduce production jump_statement -> RETURN SEMICOLON
-- On RBRACE reduce production jump_statement -> RETURN SEMICOLON
-- On PLUS reduce production jump_statement -> RETURN SEMICOLON
-- On MINUS reduce production jump_statement -> RETURN SEMICOLON
-- On LPAR reduce production jump_statement -> RETURN SEMICOLON
-- On LOOP_ANNOT reduce production jump_statement -> RETURN SEMICOLON
-- On LBRACE reduce production jump_statement -> RETURN SEMICOLON
-- On INC_OP reduce production jump_statement -> RETURN SEMICOLON
-- On IF reduce production jump_statement -> RETURN SEMICOLON
-- On IDENTIFIER reduce production jump_statement -> RETURN SEMICOLON
-- On GOTO reduce production jump_statement -> RETURN SEMICOLON
-- On FOR reduce production jump_statement -> RETURN SEMICOLON
-- On EXL reduce production jump_statement -> RETURN SEMICOLON
-- On ELSE reduce production jump_statement -> RETURN SEMICOLON
-- On DO reduce production jump_statement -> RETURN SEMICOLON
-- On DEFAULT reduce production jump_statement -> RETURN SEMICOLON
-- On DEC_OP reduce production jump_statement -> RETURN SEMICOLON
-- On CONTINUE reduce production jump_statement -> RETURN SEMICOLON
-- On CONSTANT reduce production jump_statement -> RETURN SEMICOLON
-- On CODE_ANNOT reduce production jump_statement -> RETURN SEMICOLON
-- On CASE reduce production jump_statement -> RETURN SEMICOLON
-- On BREAK reduce production jump_statement -> RETURN SEMICOLON
-- On AMP reduce production jump_statement -> RETURN SEMICOLON

State 269:
expression -> expression . COMMA assignment_expression [ SEMICOLON COMMA ]
jump_statement -> RETURN expression . SEMICOLON [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
-- On SEMICOLON shift to state 270
-- On COMMA shift to state 113

State 270:
jump_statement -> RETURN expression SEMICOLON . [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
-- On WHILE reduce production jump_statement -> RETURN expression SEMICOLON
-- On TYPE_NAME reduce production jump_statement -> RETURN expression SEMICOLON
-- On TILDE reduce production jump_statement -> RETURN expression SEMICOLON
-- On SWITCH reduce production jump_statement -> RETURN expression SEMICOLON
-- On STRING_LITERAL reduce production jump_statement -> RETURN expression SEMICOLON
-- On STAR reduce production jump_statement -> RETURN expression SEMICOLON
-- On SPEC reduce production jump_statement -> RETURN expression SEMICOLON
-- On SIZEOF reduce production jump_statement -> RETURN expression SEMICOLON
-- On SEMICOLON reduce production jump_statement -> RETURN expression SEMICOLON
-- On RETURN reduce production jump_statement -> RETURN expression SEMICOLON
-- On RBRACE reduce production jump_statement -> RETURN expression SEMICOLON
-- On PLUS reduce production jump_statement -> RETURN expression SEMICOLON
-- On MINUS reduce production jump_statement -> RETURN expression SEMICOLON
-- On LPAR reduce production jump_statement -> RETURN expression SEMICOLON
-- On LOOP_ANNOT reduce production jump_statement -> RETURN expression SEMICOLON
-- On LBRACE reduce production jump_statement -> RETURN expression SEMICOLON
-- On INC_OP reduce production jump_statement -> RETURN expression SEMICOLON
-- On IF reduce production jump_statement -> RETURN expression SEMICOLON
-- On IDENTIFIER reduce production jump_statement -> RETURN expression SEMICOLON
-- On GOTO reduce production jump_statement -> RETURN expression SEMICOLON
-- On FOR reduce production jump_statement -> RETURN expression SEMICOLON
-- On EXL reduce production jump_statement -> RETURN expression SEMICOLON
-- On ELSE reduce production jump_statement -> RETURN expression SEMICOLON
-- On DO reduce production jump_statement -> RETURN expression SEMICOLON
-- On DEFAULT reduce production jump_statement -> RETURN expression SEMICOLON
-- On DEC_OP reduce production jump_statement -> RETURN expression SEMICOLON
-- On CONTINUE reduce production jump_statement -> RETURN expression SEMICOLON
-- On CONSTANT reduce production jump_statement -> RETURN expression SEMICOLON
-- On CODE_ANNOT reduce production jump_statement -> RETURN expression SEMICOLON
-- On CASE reduce production jump_statement -> RETURN expression SEMICOLON
-- On BREAK reduce production jump_statement -> RETURN expression SEMICOLON
-- On AMP reduce production jump_statement -> RETURN expression SEMICOLON

State 271:
loop_annot -> LOOP_ANNOT . [ WHILE FOR DO ]
-- On WHILE reduce production loop_annot -> LOOP_ANNOT
-- On FOR reduce production loop_annot -> LOOP_ANNOT
-- On DO reduce production loop_annot -> LOOP_ANNOT

State 272:
selection_statement -> IF . LPAR expression RPAR statement [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
selection_statement -> IF . LPAR expression RPAR statement ELSE statement [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
-- On LPAR shift to state 273

State 273:
selection_statement -> IF LPAR . expression RPAR statement [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
selection_statement -> IF LPAR . expression RPAR statement ELSE statement [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
-- On TILDE shift to state 28
-- On STRING_LITERAL shift to state 29
-- On STAR shift to state 30
-- On SIZEOF shift to state 31
-- On PLUS shift to state 32
-- On MINUS shift to state 33
-- On LPAR shift to state 36
-- On INC_OP shift to state 39
-- On IDENTIFIER shift to state 41
-- On EXL shift to state 42
-- On DEC_OP shift to state 43
-- On CONSTANT shift to state 44
-- On AMP shift to state 45
-- On unary_operator shift to state 46
-- On unary_expression shift to state 53
-- On shift_expression shift to state 66
-- On relational_expression shift to state 83
-- On primary_expression shift to state 48
-- On postfix_expression shift to state 49
-- On multiplicative_expression shift to state 68
-- On logical_or_expression shift to state 93
-- On logical_and_expression shift to state 95
-- On inclusive_or_expression shift to state 111
-- On expression shift to state 274
-- On exclusive_or_expression shift to state 110
-- On equality_expression shift to state 101
-- On conditional_expression shift to state 114
-- On cast_expression shift to state 75
-- On assignment_expression shift to state 118
-- On and_expression shift to state 109
-- On additive_expression shift to state 86

State 274:
expression -> expression . COMMA assignment_expression [ RPAR COMMA ]
selection_statement -> IF LPAR expression . RPAR statement [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
selection_statement -> IF LPAR expression . RPAR statement ELSE statement [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
-- On RPAR shift to state 275
-- On COMMA shift to state 113

State 275:
selection_statement -> IF LPAR expression RPAR . statement [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
selection_statement -> IF LPAR expression RPAR . statement ELSE statement [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
-- On TYPE_NAME shift to state 22
-- On TILDE shift to state 28
-- On SWITCH shift to state 261
-- On STRING_LITERAL shift to state 29
-- On STAR shift to state 30
-- On SPEC shift to state 265
-- On SIZEOF shift to state 31
-- On SEMICOLON shift to state 266
-- On RETURN shift to state 267
-- On PLUS shift to state 32
-- On MINUS shift to state 33
-- On LPAR shift to state 36
-- On LOOP_ANNOT shift to state 271
-- On LBRACE shift to state 259
-- On INC_OP shift to state 39
-- On IF shift to state 272
-- On IDENTIFIER shift to state 276
-- On GOTO shift to state 277
-- On EXL shift to state 42
-- On DEFAULT shift to state 280
-- On DEC_OP shift to state 43
-- On CONTINUE shift to state 282
-- On CONSTANT shift to state 44
-- On CODE_ANNOT shift to state 284
-- On CASE shift to state 285
-- On BREAK shift to state 288
-- On AMP shift to state 45
-- On unary_operator shift to state 46
-- On unary_expression shift to state 53
-- On statement shift to state 325
-- On shift_expression shift to state 66
-- On selection_statement shift to state 291
-- On relational_expression shift to state 83
-- On primary_expression shift to state 48
-- On postfix_expression shift to state 49
-- On multiplicative_expression shift to state 68
-- On loop_annot shift to state 292
-- On logical_or_expression shift to state 93
-- On logical_and_expression shift to state 95
-- On labeled_statement shift to state 298
-- On jump_statement shift to state 299
-- On iteration_statement shift to state 300
-- On inclusive_or_expression shift to state 111
-- On identifier shift to state 301
-- On expression_statement shift to state 304
-- On expression shift to state 305
-- On exclusive_or_expression shift to state 110
-- On equality_expression shift to state 101
-- On conditional_expression shift to state 114
-- On compound_statement_LBRACE shift to state 260
-- On compound_statement shift to state 307
-- On cast_expression shift to state 75
-- On assignment_expression shift to state 118
-- On and_expression shift to state 109
-- On additive_expression shift to state 86
-- On WHILE reduce production loop_annot ->
-- On FOR reduce production loop_annot ->
-- On DO reduce production loop_annot ->

State 276:
identifier -> IDENTIFIER . [ COLON ]
primary_expression -> IDENTIFIER . [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RIGHT_OP RIGHT_ASSIGN QUESTION PTR_OP PLUS PIPE PERCENT OR_OP OR_ASSIGN NE_OP MUL_ASSIGN MOD_ASSIGN MINUS LT LSQUARE LPAR LE_OP LEFT_OP LEFT_ASSIGN INC_OP HAT GT GE_OP EQ_OP EQUAL DOT DIV_ASSIGN DEC_OP COMMA AND_OP AND_ASSIGN AMP ADD_ASSIGN ]
-- On XOR_ASSIGN reduce production primary_expression -> IDENTIFIER
-- On SUB_ASSIGN reduce production primary_expression -> IDENTIFIER
-- On STAR reduce production primary_expression -> IDENTIFIER
-- On SLASH reduce production primary_expression -> IDENTIFIER
-- On SEMICOLON reduce production primary_expression -> IDENTIFIER
-- On RIGHT_OP reduce production primary_expression -> IDENTIFIER
-- On RIGHT_ASSIGN reduce production primary_expression -> IDENTIFIER
-- On QUESTION reduce production primary_expression -> IDENTIFIER
-- On PTR_OP reduce production primary_expression -> IDENTIFIER
-- On PLUS reduce production primary_expression -> IDENTIFIER
-- On PIPE reduce production primary_expression -> IDENTIFIER
-- On PERCENT reduce production primary_expression -> IDENTIFIER
-- On OR_OP reduce production primary_expression -> IDENTIFIER
-- On OR_ASSIGN reduce production primary_expression -> IDENTIFIER
-- On NE_OP reduce production primary_expression -> IDENTIFIER
-- On MUL_ASSIGN reduce production primary_expression -> IDENTIFIER
-- On MOD_ASSIGN reduce production primary_expression -> IDENTIFIER
-- On MINUS reduce production primary_expression -> IDENTIFIER
-- On LT reduce production primary_expression -> IDENTIFIER
-- On LSQUARE reduce production primary_expression -> IDENTIFIER
-- On LPAR reduce production primary_expression -> IDENTIFIER
-- On LE_OP reduce production primary_expression -> IDENTIFIER
-- On LEFT_OP reduce production primary_expression -> IDENTIFIER
-- On LEFT_ASSIGN reduce production primary_expression -> IDENTIFIER
-- On INC_OP reduce production primary_expression -> IDENTIFIER
-- On HAT reduce production primary_expression -> IDENTIFIER
-- On GT reduce production primary_expression -> IDENTIFIER
-- On GE_OP reduce production primary_expression -> IDENTIFIER
-- On EQ_OP reduce production primary_expression -> IDENTIFIER
-- On EQUAL reduce production primary_expression -> IDENTIFIER
-- On DOT reduce production primary_expression -> IDENTIFIER
-- On DIV_ASSIGN reduce production primary_expression -> IDENTIFIER
-- On DEC_OP reduce production primary_expression -> IDENTIFIER
-- On COMMA reduce production primary_expression -> IDENTIFIER
-- On COLON reduce production identifier -> IDENTIFIER
-- On AND_OP reduce production primary_expression -> IDENTIFIER
-- On AND_ASSIGN reduce production primary_expression -> IDENTIFIER
-- On AMP reduce production primary_expression -> IDENTIFIER
-- On ADD_ASSIGN reduce production primary_expression -> IDENTIFIER

State 277:
jump_statement -> GOTO . identifier SEMICOLON [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
-- On TYPE_NAME shift to state 22
-- On IDENTIFIER shift to state 23
-- On identifier shift to state 278

State 278:
jump_statement -> GOTO identifier . SEMICOLON [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
-- On SEMICOLON shift to state 279

State 279:
jump_statement -> GOTO identifier SEMICOLON . [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
-- On WHILE reduce production jump_statement -> GOTO identifier SEMICOLON
-- On TYPE_NAME reduce production jump_statement -> GOTO identifier SEMICOLON
-- On TILDE reduce production jump_statement -> GOTO identifier SEMICOLON
-- On SWITCH reduce production jump_statement -> GOTO identifier SEMICOLON
-- On STRING_LITERAL reduce production jump_statement -> GOTO identifier SEMICOLON
-- On STAR reduce production jump_statement -> GOTO identifier SEMICOLON
-- On SPEC reduce production jump_statement -> GOTO identifier SEMICOLON
-- On SIZEOF reduce production jump_statement -> GOTO identifier SEMICOLON
-- On SEMICOLON reduce production jump_statement -> GOTO identifier SEMICOLON
-- On RETURN reduce production jump_statement -> GOTO identifier SEMICOLON
-- On RBRACE reduce production jump_statement -> GOTO identifier SEMICOLON
-- On PLUS reduce production jump_statement -> GOTO identifier SEMICOLON
-- On MINUS reduce production jump_statement -> GOTO identifier SEMICOLON
-- On LPAR reduce production jump_statement -> GOTO identifier SEMICOLON
-- On LOOP_ANNOT reduce production jump_statement -> GOTO identifier SEMICOLON
-- On LBRACE reduce production jump_statement -> GOTO identifier SEMICOLON
-- On INC_OP reduce production jump_statement -> GOTO identifier SEMICOLON
-- On IF reduce production jump_statement -> GOTO identifier SEMICOLON
-- On IDENTIFIER reduce production jump_statement -> GOTO identifier SEMICOLON
-- On GOTO reduce production jump_statement -> GOTO identifier SEMICOLON
-- On FOR reduce production jump_statement -> GOTO identifier SEMICOLON
-- On EXL reduce production jump_statement -> GOTO identifier SEMICOLON
-- On ELSE reduce production jump_statement -> GOTO identifier SEMICOLON
-- On DO reduce production jump_statement -> GOTO identifier SEMICOLON
-- On DEFAULT reduce production jump_statement -> GOTO identifier SEMICOLON
-- On DEC_OP reduce production jump_statement -> GOTO identifier SEMICOLON
-- On CONTINUE reduce production jump_statement -> GOTO identifier SEMICOLON
-- On CONSTANT reduce production jump_statement -> GOTO identifier SEMICOLON
-- On CODE_ANNOT reduce production jump_statement -> GOTO identifier SEMICOLON
-- On CASE reduce production jump_statement -> GOTO identifier SEMICOLON
-- On BREAK reduce production jump_statement -> GOTO identifier SEMICOLON
-- On AMP reduce production jump_statement -> GOTO identifier SEMICOLON

State 280:
labeled_statement -> DEFAULT . COLON statement [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
-- On COLON shift to state 281

State 281:
labeled_statement -> DEFAULT COLON . statement [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
-- On TYPE_NAME shift to state 22
-- On TILDE shift to state 28
-- On SWITCH shift to state 261
-- On STRING_LITERAL shift to state 29
-- On STAR shift to state 30
-- On SPEC shift to state 265
-- On SIZEOF shift to state 31
-- On SEMICOLON shift to state 266
-- On RETURN shift to state 267
-- On PLUS shift to state 32
-- On MINUS shift to state 33
-- On LPAR shift to state 36
-- On LOOP_ANNOT shift to state 271
-- On LBRACE shift to state 259
-- On INC_OP shift to state 39
-- On IF shift to state 272
-- On IDENTIFIER shift to state 276
-- On GOTO shift to state 277
-- On EXL shift to state 42
-- On DEFAULT shift to state 280
-- On DEC_OP shift to state 43
-- On CONTINUE shift to state 282
-- On CONSTANT shift to state 44
-- On CODE_ANNOT shift to state 284
-- On CASE shift to state 285
-- On BREAK shift to state 288
-- On AMP shift to state 45
-- On unary_operator shift to state 46
-- On unary_expression shift to state 53
-- On statement shift to state 324
-- On shift_expression shift to state 66
-- On selection_statement shift to state 291
-- On relational_expression shift to state 83
-- On primary_expression shift to state 48
-- On postfix_expression shift to state 49
-- On multiplicative_expression shift to state 68
-- On loop_annot shift to state 292
-- On logical_or_expression shift to state 93
-- On logical_and_expression shift to state 95
-- On labeled_statement shift to state 298
-- On jump_statement shift to state 299
-- On iteration_statement shift to state 300
-- On inclusive_or_expression shift to state 111
-- On identifier shift to state 301
-- On expression_statement shift to state 304
-- On expression shift to state 305
-- On exclusive_or_expression shift to state 110
-- On equality_expression shift to state 101
-- On conditional_expression shift to state 114
-- On compound_statement_LBRACE shift to state 260
-- On compound_statement shift to state 307
-- On cast_expression shift to state 75
-- On assignment_expression shift to state 118
-- On and_expression shift to state 109
-- On additive_expression shift to state 86
-- On WHILE reduce production loop_annot ->
-- On FOR reduce production loop_annot ->
-- On DO reduce production loop_annot ->

State 282:
jump_statement -> CONTINUE . SEMICOLON [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
-- On SEMICOLON shift to state 283

State 283:
jump_statement -> CONTINUE SEMICOLON . [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
-- On WHILE reduce production jump_statement -> CONTINUE SEMICOLON
-- On TYPE_NAME reduce production jump_statement -> CONTINUE SEMICOLON
-- On TILDE reduce production jump_statement -> CONTINUE SEMICOLON
-- On SWITCH reduce production jump_statement -> CONTINUE SEMICOLON
-- On STRING_LITERAL reduce production jump_statement -> CONTINUE SEMICOLON
-- On STAR reduce production jump_statement -> CONTINUE SEMICOLON
-- On SPEC reduce production jump_statement -> CONTINUE SEMICOLON
-- On SIZEOF reduce production jump_statement -> CONTINUE SEMICOLON
-- On SEMICOLON reduce production jump_statement -> CONTINUE SEMICOLON
-- On RETURN reduce production jump_statement -> CONTINUE SEMICOLON
-- On RBRACE reduce production jump_statement -> CONTINUE SEMICOLON
-- On PLUS reduce production jump_statement -> CONTINUE SEMICOLON
-- On MINUS reduce production jump_statement -> CONTINUE SEMICOLON
-- On LPAR reduce production jump_statement -> CONTINUE SEMICOLON
-- On LOOP_ANNOT reduce production jump_statement -> CONTINUE SEMICOLON
-- On LBRACE reduce production jump_statement -> CONTINUE SEMICOLON
-- On INC_OP reduce production jump_statement -> CONTINUE SEMICOLON
-- On IF reduce production jump_statement -> CONTINUE SEMICOLON
-- On IDENTIFIER reduce production jump_statement -> CONTINUE SEMICOLON
-- On GOTO reduce production jump_statement -> CONTINUE SEMICOLON
-- On FOR reduce production jump_statement -> CONTINUE SEMICOLON
-- On EXL reduce production jump_statement -> CONTINUE SEMICOLON
-- On ELSE reduce production jump_statement -> CONTINUE SEMICOLON
-- On DO reduce production jump_statement -> CONTINUE SEMICOLON
-- On DEFAULT reduce production jump_statement -> CONTINUE SEMICOLON
-- On DEC_OP reduce production jump_statement -> CONTINUE SEMICOLON
-- On CONTINUE reduce production jump_statement -> CONTINUE SEMICOLON
-- On CONSTANT reduce production jump_statement -> CONTINUE SEMICOLON
-- On CODE_ANNOT reduce production jump_statement -> CONTINUE SEMICOLON
-- On CASE reduce production jump_statement -> CONTINUE SEMICOLON
-- On BREAK reduce production jump_statement -> CONTINUE SEMICOLON
-- On AMP reduce production jump_statement -> CONTINUE SEMICOLON

State 284:
expression_statement -> CODE_ANNOT . [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RPAR RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
-- On WHILE reduce production expression_statement -> CODE_ANNOT
-- On TYPE_NAME reduce production expression_statement -> CODE_ANNOT
-- On TILDE reduce production expression_statement -> CODE_ANNOT
-- On SWITCH reduce production expression_statement -> CODE_ANNOT
-- On STRING_LITERAL reduce production expression_statement -> CODE_ANNOT
-- On STAR reduce production expression_statement -> CODE_ANNOT
-- On SPEC reduce production expression_statement -> CODE_ANNOT
-- On SIZEOF reduce production expression_statement -> CODE_ANNOT
-- On SEMICOLON reduce production expression_statement -> CODE_ANNOT
-- On RPAR reduce production expression_statement -> CODE_ANNOT
-- On RETURN reduce production expression_statement -> CODE_ANNOT
-- On RBRACE reduce production expression_statement -> CODE_ANNOT
-- On PLUS reduce production expression_statement -> CODE_ANNOT
-- On MINUS reduce production expression_statement -> CODE_ANNOT
-- On LPAR reduce production expression_statement -> CODE_ANNOT
-- On LOOP_ANNOT reduce production expression_statement -> CODE_ANNOT
-- On LBRACE reduce production expression_statement -> CODE_ANNOT
-- On INC_OP reduce production expression_statement -> CODE_ANNOT
-- On IF reduce production expression_statement -> CODE_ANNOT
-- On IDENTIFIER reduce production expression_statement -> CODE_ANNOT
-- On GOTO reduce production expression_statement -> CODE_ANNOT
-- On FOR reduce production expression_statement -> CODE_ANNOT
-- On EXL reduce production expression_statement -> CODE_ANNOT
-- On ELSE reduce production expression_statement -> CODE_ANNOT
-- On DO reduce production expression_statement -> CODE_ANNOT
-- On DEFAULT reduce production expression_statement -> CODE_ANNOT
-- On DEC_OP reduce production expression_statement -> CODE_ANNOT
-- On CONTINUE reduce production expression_statement -> CODE_ANNOT
-- On CONSTANT reduce production expression_statement -> CODE_ANNOT
-- On CODE_ANNOT reduce production expression_statement -> CODE_ANNOT
-- On CASE reduce production expression_statement -> CODE_ANNOT
-- On BREAK reduce production expression_statement -> CODE_ANNOT
-- On AMP reduce production expression_statement -> CODE_ANNOT

State 285:
labeled_statement -> CASE . constant_expression COLON statement [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
-- On TILDE shift to state 28
-- On STRING_LITERAL shift to state 29
-- On STAR shift to state 30
-- On SIZEOF shift to state 31
-- On PLUS shift to state 32
-- On MINUS shift to state 33
-- On LPAR shift to state 36
-- On INC_OP shift to state 39
-- On IDENTIFIER shift to state 41
-- On EXL shift to state 42
-- On DEC_OP shift to state 43
-- On CONSTANT shift to state 44
-- On AMP shift to state 45
-- On unary_operator shift to state 46
-- On unary_expression shift to state 47
-- On shift_expression shift to state 66
-- On relational_expression shift to state 83
-- On primary_expression shift to state 48
-- On postfix_expression shift to state 49
-- On multiplicative_expression shift to state 68
-- On logical_or_expression shift to state 93
-- On logical_and_expression shift to state 95
-- On inclusive_or_expression shift to state 111
-- On exclusive_or_expression shift to state 110
-- On equality_expression shift to state 101
-- On constant_expression shift to state 286
-- On conditional_expression shift to state 146
-- On cast_expression shift to state 75
-- On and_expression shift to state 109
-- On additive_expression shift to state 86

State 286:
labeled_statement -> CASE constant_expression . COLON statement [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
-- On COLON shift to state 287

State 287:
labeled_statement -> CASE constant_expression COLON . statement [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
-- On TYPE_NAME shift to state 22
-- On TILDE shift to state 28
-- On SWITCH shift to state 261
-- On STRING_LITERAL shift to state 29
-- On STAR shift to state 30
-- On SPEC shift to state 265
-- On SIZEOF shift to state 31
-- On SEMICOLON shift to state 266
-- On RETURN shift to state 267
-- On PLUS shift to state 32
-- On MINUS shift to state 33
-- On LPAR shift to state 36
-- On LOOP_ANNOT shift to state 271
-- On LBRACE shift to state 259
-- On INC_OP shift to state 39
-- On IF shift to state 272
-- On IDENTIFIER shift to state 276
-- On GOTO shift to state 277
-- On EXL shift to state 42
-- On DEFAULT shift to state 280
-- On DEC_OP shift to state 43
-- On CONTINUE shift to state 282
-- On CONSTANT shift to state 44
-- On CODE_ANNOT shift to state 284
-- On CASE shift to state 285
-- On BREAK shift to state 288
-- On AMP shift to state 45
-- On unary_operator shift to state 46
-- On unary_expression shift to state 53
-- On statement shift to state 290
-- On shift_expression shift to state 66
-- On selection_statement shift to state 291
-- On relational_expression shift to state 83
-- On primary_expression shift to state 48
-- On postfix_expression shift to state 49
-- On multiplicative_expression shift to state 68
-- On loop_annot shift to state 292
-- On logical_or_expression shift to state 93
-- On logical_and_expression shift to state 95
-- On labeled_statement shift to state 298
-- On jump_statement shift to state 299
-- On iteration_statement shift to state 300
-- On inclusive_or_expression shift to state 111
-- On identifier shift to state 301
-- On expression_statement shift to state 304
-- On expression shift to state 305
-- On exclusive_or_expression shift to state 110
-- On equality_expression shift to state 101
-- On conditional_expression shift to state 114
-- On compound_statement_LBRACE shift to state 260
-- On compound_statement shift to state 307
-- On cast_expression shift to state 75
-- On assignment_expression shift to state 118
-- On and_expression shift to state 109
-- On additive_expression shift to state 86
-- On WHILE reduce production loop_annot ->
-- On FOR reduce production loop_annot ->
-- On DO reduce production loop_annot ->

State 288:
jump_statement -> BREAK . SEMICOLON [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
-- On SEMICOLON shift to state 289

State 289:
jump_statement -> BREAK SEMICOLON . [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
-- On WHILE reduce production jump_statement -> BREAK SEMICOLON
-- On TYPE_NAME reduce production jump_statement -> BREAK SEMICOLON
-- On TILDE reduce production jump_statement -> BREAK SEMICOLON
-- On SWITCH reduce production jump_statement -> BREAK SEMICOLON
-- On STRING_LITERAL reduce production jump_statement -> BREAK SEMICOLON
-- On STAR reduce production jump_statement -> BREAK SEMICOLON
-- On SPEC reduce production jump_statement -> BREAK SEMICOLON
-- On SIZEOF reduce production jump_statement -> BREAK SEMICOLON
-- On SEMICOLON reduce production jump_statement -> BREAK SEMICOLON
-- On RETURN reduce production jump_statement -> BREAK SEMICOLON
-- On RBRACE reduce production jump_statement -> BREAK SEMICOLON
-- On PLUS reduce production jump_statement -> BREAK SEMICOLON
-- On MINUS reduce production jump_statement -> BREAK SEMICOLON
-- On LPAR reduce production jump_statement -> BREAK SEMICOLON
-- On LOOP_ANNOT reduce production jump_statement -> BREAK SEMICOLON
-- On LBRACE reduce production jump_statement -> BREAK SEMICOLON
-- On INC_OP reduce production jump_statement -> BREAK SEMICOLON
-- On IF reduce production jump_statement -> BREAK SEMICOLON
-- On IDENTIFIER reduce production jump_statement -> BREAK SEMICOLON
-- On GOTO reduce production jump_statement -> BREAK SEMICOLON
-- On FOR reduce production jump_statement -> BREAK SEMICOLON
-- On EXL reduce production jump_statement -> BREAK SEMICOLON
-- On ELSE reduce production jump_statement -> BREAK SEMICOLON
-- On DO reduce production jump_statement -> BREAK SEMICOLON
-- On DEFAULT reduce production jump_statement -> BREAK SEMICOLON
-- On DEC_OP reduce production jump_statement -> BREAK SEMICOLON
-- On CONTINUE reduce production jump_statement -> BREAK SEMICOLON
-- On CONSTANT reduce production jump_statement -> BREAK SEMICOLON
-- On CODE_ANNOT reduce production jump_statement -> BREAK SEMICOLON
-- On CASE reduce production jump_statement -> BREAK SEMICOLON
-- On BREAK reduce production jump_statement -> BREAK SEMICOLON
-- On AMP reduce production jump_statement -> BREAK SEMICOLON

State 290:
labeled_statement -> CASE constant_expression COLON statement . [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
-- On WHILE reduce production labeled_statement -> CASE constant_expression COLON statement
-- On TYPE_NAME reduce production labeled_statement -> CASE constant_expression COLON statement
-- On TILDE reduce production labeled_statement -> CASE constant_expression COLON statement
-- On SWITCH reduce production labeled_statement -> CASE constant_expression COLON statement
-- On STRING_LITERAL reduce production labeled_statement -> CASE constant_expression COLON statement
-- On STAR reduce production labeled_statement -> CASE constant_expression COLON statement
-- On SPEC reduce production labeled_statement -> CASE constant_expression COLON statement
-- On SIZEOF reduce production labeled_statement -> CASE constant_expression COLON statement
-- On SEMICOLON reduce production labeled_statement -> CASE constant_expression COLON statement
-- On RETURN reduce production labeled_statement -> CASE constant_expression COLON statement
-- On RBRACE reduce production labeled_statement -> CASE constant_expression COLON statement
-- On PLUS reduce production labeled_statement -> CASE constant_expression COLON statement
-- On MINUS reduce production labeled_statement -> CASE constant_expression COLON statement
-- On LPAR reduce production labeled_statement -> CASE constant_expression COLON statement
-- On LOOP_ANNOT reduce production labeled_statement -> CASE constant_expression COLON statement
-- On LBRACE reduce production labeled_statement -> CASE constant_expression COLON statement
-- On INC_OP reduce production labeled_statement -> CASE constant_expression COLON statement
-- On IF reduce production labeled_statement -> CASE constant_expression COLON statement
-- On IDENTIFIER reduce production labeled_statement -> CASE constant_expression COLON statement
-- On GOTO reduce production labeled_statement -> CASE constant_expression COLON statement
-- On FOR reduce production labeled_statement -> CASE constant_expression COLON statement
-- On EXL reduce production labeled_statement -> CASE constant_expression COLON statement
-- On ELSE reduce production labeled_statement -> CASE constant_expression COLON statement
-- On DO reduce production labeled_statement -> CASE constant_expression COLON statement
-- On DEFAULT reduce production labeled_statement -> CASE constant_expression COLON statement
-- On DEC_OP reduce production labeled_statement -> CASE constant_expression COLON statement
-- On CONTINUE reduce production labeled_statement -> CASE constant_expression COLON statement
-- On CONSTANT reduce production labeled_statement -> CASE constant_expression COLON statement
-- On CODE_ANNOT reduce production labeled_statement -> CASE constant_expression COLON statement
-- On CASE reduce production labeled_statement -> CASE constant_expression COLON statement
-- On BREAK reduce production labeled_statement -> CASE constant_expression COLON statement
-- On AMP reduce production labeled_statement -> CASE constant_expression COLON statement

State 291:
statement -> selection_statement . [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
-- On WHILE reduce production statement -> selection_statement
-- On TYPE_NAME reduce production statement -> selection_statement
-- On TILDE reduce production statement -> selection_statement
-- On SWITCH reduce production statement -> selection_statement
-- On STRING_LITERAL reduce production statement -> selection_statement
-- On STAR reduce production statement -> selection_statement
-- On SPEC reduce production statement -> selection_statement
-- On SIZEOF reduce production statement -> selection_statement
-- On SEMICOLON reduce production statement -> selection_statement
-- On RETURN reduce production statement -> selection_statement
-- On RBRACE reduce production statement -> selection_statement
-- On PLUS reduce production statement -> selection_statement
-- On MINUS reduce production statement -> selection_statement
-- On LPAR reduce production statement -> selection_statement
-- On LOOP_ANNOT reduce production statement -> selection_statement
-- On LBRACE reduce production statement -> selection_statement
-- On INC_OP reduce production statement -> selection_statement
-- On IF reduce production statement -> selection_statement
-- On IDENTIFIER reduce production statement -> selection_statement
-- On GOTO reduce production statement -> selection_statement
-- On FOR reduce production statement -> selection_statement
-- On EXL reduce production statement -> selection_statement
-- On ELSE reduce production statement -> selection_statement
-- On DO reduce production statement -> selection_statement
-- On DEFAULT reduce production statement -> selection_statement
-- On DEC_OP reduce production statement -> selection_statement
-- On CONTINUE reduce production statement -> selection_statement
-- On CONSTANT reduce production statement -> selection_statement
-- On CODE_ANNOT reduce production statement -> selection_statement
-- On CASE reduce production statement -> selection_statement
-- On BREAK reduce production statement -> selection_statement
-- On AMP reduce production statement -> selection_statement

State 292:
iteration_statement -> loop_annot . WHILE LPAR expression RPAR statement [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
iteration_statement -> loop_annot . DO statement WHILE LPAR expression RPAR SEMICOLON [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
iteration_statement -> loop_annot . FOR LPAR expression_statement expression_statement RPAR statement [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
iteration_statement -> loop_annot . FOR LPAR expression_statement expression_statement expression RPAR statement [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
-- On WHILE shift to state 293
-- On FOR shift to state 308
-- On DO shift to state 317

State 293:
iteration_statement -> loop_annot WHILE . LPAR expression RPAR statement [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
-- On LPAR shift to state 294

State 294:
iteration_statement -> loop_annot WHILE LPAR . expression RPAR statement [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
-- On TILDE shift to state 28
-- On STRING_LITERAL shift to state 29
-- On STAR shift to state 30
-- On SIZEOF shift to state 31
-- On PLUS shift to state 32
-- On MINUS shift to state 33
-- On LPAR shift to state 36
-- On INC_OP shift to state 39
-- On IDENTIFIER shift to state 41
-- On EXL shift to state 42
-- On DEC_OP shift to state 43
-- On CONSTANT shift to state 44
-- On AMP shift to state 45
-- On unary_operator shift to state 46
-- On unary_expression shift to state 53
-- On shift_expression shift to state 66
-- On relational_expression shift to state 83
-- On primary_expression shift to state 48
-- On postfix_expression shift to state 49
-- On multiplicative_expression shift to state 68
-- On logical_or_expression shift to state 93
-- On logical_and_expression shift to state 95
-- On inclusive_or_expression shift to state 111
-- On expression shift to state 295
-- On exclusive_or_expression shift to state 110
-- On equality_expression shift to state 101
-- On conditional_expression shift to state 114
-- On cast_expression shift to state 75
-- On assignment_expression shift to state 118
-- On and_expression shift to state 109
-- On additive_expression shift to state 86

State 295:
expression -> expression . COMMA assignment_expression [ RPAR COMMA ]
iteration_statement -> loop_annot WHILE LPAR expression . RPAR statement [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
-- On RPAR shift to state 296
-- On COMMA shift to state 113

State 296:
iteration_statement -> loop_annot WHILE LPAR expression RPAR . statement [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
-- On TYPE_NAME shift to state 22
-- On TILDE shift to state 28
-- On SWITCH shift to state 261
-- On STRING_LITERAL shift to state 29
-- On STAR shift to state 30
-- On SPEC shift to state 265
-- On SIZEOF shift to state 31
-- On SEMICOLON shift to state 266
-- On RETURN shift to state 267
-- On PLUS shift to state 32
-- On MINUS shift to state 33
-- On LPAR shift to state 36
-- On LOOP_ANNOT shift to state 271
-- On LBRACE shift to state 259
-- On INC_OP shift to state 39
-- On IF shift to state 272
-- On IDENTIFIER shift to state 276
-- On GOTO shift to state 277
-- On EXL shift to state 42
-- On DEFAULT shift to state 280
-- On DEC_OP shift to state 43
-- On CONTINUE shift to state 282
-- On CONSTANT shift to state 44
-- On CODE_ANNOT shift to state 284
-- On CASE shift to state 285
-- On BREAK shift to state 288
-- On AMP shift to state 45
-- On unary_operator shift to state 46
-- On unary_expression shift to state 53
-- On statement shift to state 297
-- On shift_expression shift to state 66
-- On selection_statement shift to state 291
-- On relational_expression shift to state 83
-- On primary_expression shift to state 48
-- On postfix_expression shift to state 49
-- On multiplicative_expression shift to state 68
-- On loop_annot shift to state 292
-- On logical_or_expression shift to state 93
-- On logical_and_expression shift to state 95
-- On labeled_statement shift to state 298
-- On jump_statement shift to state 299
-- On iteration_statement shift to state 300
-- On inclusive_or_expression shift to state 111
-- On identifier shift to state 301
-- On expression_statement shift to state 304
-- On expression shift to state 305
-- On exclusive_or_expression shift to state 110
-- On equality_expression shift to state 101
-- On conditional_expression shift to state 114
-- On compound_statement_LBRACE shift to state 260
-- On compound_statement shift to state 307
-- On cast_expression shift to state 75
-- On assignment_expression shift to state 118
-- On and_expression shift to state 109
-- On additive_expression shift to state 86
-- On WHILE reduce production loop_annot ->
-- On FOR reduce production loop_annot ->
-- On DO reduce production loop_annot ->

State 297:
iteration_statement -> loop_annot WHILE LPAR expression RPAR statement . [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
-- On WHILE reduce production iteration_statement -> loop_annot WHILE LPAR expression RPAR statement
-- On TYPE_NAME reduce production iteration_statement -> loop_annot WHILE LPAR expression RPAR statement
-- On TILDE reduce production iteration_statement -> loop_annot WHILE LPAR expression RPAR statement
-- On SWITCH reduce production iteration_statement -> loop_annot WHILE LPAR expression RPAR statement
-- On STRING_LITERAL reduce production iteration_statement -> loop_annot WHILE LPAR expression RPAR statement
-- On STAR reduce production iteration_statement -> loop_annot WHILE LPAR expression RPAR statement
-- On SPEC reduce production iteration_statement -> loop_annot WHILE LPAR expression RPAR statement
-- On SIZEOF reduce production iteration_statement -> loop_annot WHILE LPAR expression RPAR statement
-- On SEMICOLON reduce production iteration_statement -> loop_annot WHILE LPAR expression RPAR statement
-- On RETURN reduce production iteration_statement -> loop_annot WHILE LPAR expression RPAR statement
-- On RBRACE reduce production iteration_statement -> loop_annot WHILE LPAR expression RPAR statement
-- On PLUS reduce production iteration_statement -> loop_annot WHILE LPAR expression RPAR statement
-- On MINUS reduce production iteration_statement -> loop_annot WHILE LPAR expression RPAR statement
-- On LPAR reduce production iteration_statement -> loop_annot WHILE LPAR expression RPAR statement
-- On LOOP_ANNOT reduce production iteration_statement -> loop_annot WHILE LPAR expression RPAR statement
-- On LBRACE reduce production iteration_statement -> loop_annot WHILE LPAR expression RPAR statement
-- On INC_OP reduce production iteration_statement -> loop_annot WHILE LPAR expression RPAR statement
-- On IF reduce production iteration_statement -> loop_annot WHILE LPAR expression RPAR statement
-- On IDENTIFIER reduce production iteration_statement -> loop_annot WHILE LPAR expression RPAR statement
-- On GOTO reduce production iteration_statement -> loop_annot WHILE LPAR expression RPAR statement
-- On FOR reduce production iteration_statement -> loop_annot WHILE LPAR expression RPAR statement
-- On EXL reduce production iteration_statement -> loop_annot WHILE LPAR expression RPAR statement
-- On ELSE reduce production iteration_statement -> loop_annot WHILE LPAR expression RPAR statement
-- On DO reduce production iteration_statement -> loop_annot WHILE LPAR expression RPAR statement
-- On DEFAULT reduce production iteration_statement -> loop_annot WHILE LPAR expression RPAR statement
-- On DEC_OP reduce production iteration_statement -> loop_annot WHILE LPAR expression RPAR statement
-- On CONTINUE reduce production iteration_statement -> loop_annot WHILE LPAR expression RPAR statement
-- On CONSTANT reduce production iteration_statement -> loop_annot WHILE LPAR expression RPAR statement
-- On CODE_ANNOT reduce production iteration_statement -> loop_annot WHILE LPAR expression RPAR statement
-- On CASE reduce production iteration_statement -> loop_annot WHILE LPAR expression RPAR statement
-- On BREAK reduce production iteration_statement -> loop_annot WHILE LPAR expression RPAR statement
-- On AMP reduce production iteration_statement -> loop_annot WHILE LPAR expression RPAR statement

State 298:
statement -> labeled_statement . [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
-- On WHILE reduce production statement -> labeled_statement
-- On TYPE_NAME reduce production statement -> labeled_statement
-- On TILDE reduce production statement -> labeled_statement
-- On SWITCH reduce production statement -> labeled_statement
-- On STRING_LITERAL reduce production statement -> labeled_statement
-- On STAR reduce production statement -> labeled_statement
-- On SPEC reduce production statement -> labeled_statement
-- On SIZEOF reduce production statement -> labeled_statement
-- On SEMICOLON reduce production statement -> labeled_statement
-- On RETURN reduce production statement -> labeled_statement
-- On RBRACE reduce production statement -> labeled_statement
-- On PLUS reduce production statement -> labeled_statement
-- On MINUS reduce production statement -> labeled_statement
-- On LPAR reduce production statement -> labeled_statement
-- On LOOP_ANNOT reduce production statement -> labeled_statement
-- On LBRACE reduce production statement -> labeled_statement
-- On INC_OP reduce production statement -> labeled_statement
-- On IF reduce production statement -> labeled_statement
-- On IDENTIFIER reduce production statement -> labeled_statement
-- On GOTO reduce production statement -> labeled_statement
-- On FOR reduce production statement -> labeled_statement
-- On EXL reduce production statement -> labeled_statement
-- On ELSE reduce production statement -> labeled_statement
-- On DO reduce production statement -> labeled_statement
-- On DEFAULT reduce production statement -> labeled_statement
-- On DEC_OP reduce production statement -> labeled_statement
-- On CONTINUE reduce production statement -> labeled_statement
-- On CONSTANT reduce production statement -> labeled_statement
-- On CODE_ANNOT reduce production statement -> labeled_statement
-- On CASE reduce production statement -> labeled_statement
-- On BREAK reduce production statement -> labeled_statement
-- On AMP reduce production statement -> labeled_statement

State 299:
statement -> jump_statement . [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
-- On WHILE reduce production statement -> jump_statement
-- On TYPE_NAME reduce production statement -> jump_statement
-- On TILDE reduce production statement -> jump_statement
-- On SWITCH reduce production statement -> jump_statement
-- On STRING_LITERAL reduce production statement -> jump_statement
-- On STAR reduce production statement -> jump_statement
-- On SPEC reduce production statement -> jump_statement
-- On SIZEOF reduce production statement -> jump_statement
-- On SEMICOLON reduce production statement -> jump_statement
-- On RETURN reduce production statement -> jump_statement
-- On RBRACE reduce production statement -> jump_statement
-- On PLUS reduce production statement -> jump_statement
-- On MINUS reduce production statement -> jump_statement
-- On LPAR reduce production statement -> jump_statement
-- On LOOP_ANNOT reduce production statement -> jump_statement
-- On LBRACE reduce production statement -> jump_statement
-- On INC_OP reduce production statement -> jump_statement
-- On IF reduce production statement -> jump_statement
-- On IDENTIFIER reduce production statement -> jump_statement
-- On GOTO reduce production statement -> jump_statement
-- On FOR reduce production statement -> jump_statement
-- On EXL reduce production statement -> jump_statement
-- On ELSE reduce production statement -> jump_statement
-- On DO reduce production statement -> jump_statement
-- On DEFAULT reduce production statement -> jump_statement
-- On DEC_OP reduce production statement -> jump_statement
-- On CONTINUE reduce production statement -> jump_statement
-- On CONSTANT reduce production statement -> jump_statement
-- On CODE_ANNOT reduce production statement -> jump_statement
-- On CASE reduce production statement -> jump_statement
-- On BREAK reduce production statement -> jump_statement
-- On AMP reduce production statement -> jump_statement

State 300:
statement -> iteration_statement . [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
-- On WHILE reduce production statement -> iteration_statement
-- On TYPE_NAME reduce production statement -> iteration_statement
-- On TILDE reduce production statement -> iteration_statement
-- On SWITCH reduce production statement -> iteration_statement
-- On STRING_LITERAL reduce production statement -> iteration_statement
-- On STAR reduce production statement -> iteration_statement
-- On SPEC reduce production statement -> iteration_statement
-- On SIZEOF reduce production statement -> iteration_statement
-- On SEMICOLON reduce production statement -> iteration_statement
-- On RETURN reduce production statement -> iteration_statement
-- On RBRACE reduce production statement -> iteration_statement
-- On PLUS reduce production statement -> iteration_statement
-- On MINUS reduce production statement -> iteration_statement
-- On LPAR reduce production statement -> iteration_statement
-- On LOOP_ANNOT reduce production statement -> iteration_statement
-- On LBRACE reduce production statement -> iteration_statement
-- On INC_OP reduce production statement -> iteration_statement
-- On IF reduce production statement -> iteration_statement
-- On IDENTIFIER reduce production statement -> iteration_statement
-- On GOTO reduce production statement -> iteration_statement
-- On FOR reduce production statement -> iteration_statement
-- On EXL reduce production statement -> iteration_statement
-- On ELSE reduce production statement -> iteration_statement
-- On DO reduce production statement -> iteration_statement
-- On DEFAULT reduce production statement -> iteration_statement
-- On DEC_OP reduce production statement -> iteration_statement
-- On CONTINUE reduce production statement -> iteration_statement
-- On CONSTANT reduce production statement -> iteration_statement
-- On CODE_ANNOT reduce production statement -> iteration_statement
-- On CASE reduce production statement -> iteration_statement
-- On BREAK reduce production statement -> iteration_statement
-- On AMP reduce production statement -> iteration_statement

State 301:
labeled_statement -> identifier . COLON statement [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
-- On COLON shift to state 302

State 302:
labeled_statement -> identifier COLON . statement [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
-- On TYPE_NAME shift to state 22
-- On TILDE shift to state 28
-- On SWITCH shift to state 261
-- On STRING_LITERAL shift to state 29
-- On STAR shift to state 30
-- On SPEC shift to state 265
-- On SIZEOF shift to state 31
-- On SEMICOLON shift to state 266
-- On RETURN shift to state 267
-- On PLUS shift to state 32
-- On MINUS shift to state 33
-- On LPAR shift to state 36
-- On LOOP_ANNOT shift to state 271
-- On LBRACE shift to state 259
-- On INC_OP shift to state 39
-- On IF shift to state 272
-- On IDENTIFIER shift to state 276
-- On GOTO shift to state 277
-- On EXL shift to state 42
-- On DEFAULT shift to state 280
-- On DEC_OP shift to state 43
-- On CONTINUE shift to state 282
-- On CONSTANT shift to state 44
-- On CODE_ANNOT shift to state 284
-- On CASE shift to state 285
-- On BREAK shift to state 288
-- On AMP shift to state 45
-- On unary_operator shift to state 46
-- On unary_expression shift to state 53
-- On statement shift to state 303
-- On shift_expression shift to state 66
-- On selection_statement shift to state 291
-- On relational_expression shift to state 83
-- On primary_expression shift to state 48
-- On postfix_expression shift to state 49
-- On multiplicative_expression shift to state 68
-- On loop_annot shift to state 292
-- On logical_or_expression shift to state 93
-- On logical_and_expression shift to state 95
-- On labeled_statement shift to state 298
-- On jump_statement shift to state 299
-- On iteration_statement shift to state 300
-- On inclusive_or_expression shift to state 111
-- On identifier shift to state 301
-- On expression_statement shift to state 304
-- On expression shift to state 305
-- On exclusive_or_expression shift to state 110
-- On equality_expression shift to state 101
-- On conditional_expression shift to state 114
-- On compound_statement_LBRACE shift to state 260
-- On compound_statement shift to state 307
-- On cast_expression shift to state 75
-- On assignment_expression shift to state 118
-- On and_expression shift to state 109
-- On additive_expression shift to state 86
-- On WHILE reduce production loop_annot ->
-- On FOR reduce production loop_annot ->
-- On DO reduce production loop_annot ->

State 303:
labeled_statement -> identifier COLON statement . [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
-- On WHILE reduce production labeled_statement -> identifier COLON statement
-- On TYPE_NAME reduce production labeled_statement -> identifier COLON statement
-- On TILDE reduce production labeled_statement -> identifier COLON statement
-- On SWITCH reduce production labeled_statement -> identifier COLON statement
-- On STRING_LITERAL reduce production labeled_statement -> identifier COLON statement
-- On STAR reduce production labeled_statement -> identifier COLON statement
-- On SPEC reduce production labeled_statement -> identifier COLON statement
-- On SIZEOF reduce production labeled_statement -> identifier COLON statement
-- On SEMICOLON reduce production labeled_statement -> identifier COLON statement
-- On RETURN reduce production labeled_statement -> identifier COLON statement
-- On RBRACE reduce production labeled_statement -> identifier COLON statement
-- On PLUS reduce production labeled_statement -> identifier COLON statement
-- On MINUS reduce production labeled_statement -> identifier COLON statement
-- On LPAR reduce production labeled_statement -> identifier COLON statement
-- On LOOP_ANNOT reduce production labeled_statement -> identifier COLON statement
-- On LBRACE reduce production labeled_statement -> identifier COLON statement
-- On INC_OP reduce production labeled_statement -> identifier COLON statement
-- On IF reduce production labeled_statement -> identifier COLON statement
-- On IDENTIFIER reduce production labeled_statement -> identifier COLON statement
-- On GOTO reduce production labeled_statement -> identifier COLON statement
-- On FOR reduce production labeled_statement -> identifier COLON statement
-- On EXL reduce production labeled_statement -> identifier COLON statement
-- On ELSE reduce production labeled_statement -> identifier COLON statement
-- On DO reduce production labeled_statement -> identifier COLON statement
-- On DEFAULT reduce production labeled_statement -> identifier COLON statement
-- On DEC_OP reduce production labeled_statement -> identifier COLON statement
-- On CONTINUE reduce production labeled_statement -> identifier COLON statement
-- On CONSTANT reduce production labeled_statement -> identifier COLON statement
-- On CODE_ANNOT reduce production labeled_statement -> identifier COLON statement
-- On CASE reduce production labeled_statement -> identifier COLON statement
-- On BREAK reduce production labeled_statement -> identifier COLON statement
-- On AMP reduce production labeled_statement -> identifier COLON statement

State 304:
statement -> expression_statement . [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
-- On WHILE reduce production statement -> expression_statement
-- On TYPE_NAME reduce production statement -> expression_statement
-- On TILDE reduce production statement -> expression_statement
-- On SWITCH reduce production statement -> expression_statement
-- On STRING_LITERAL reduce production statement -> expression_statement
-- On STAR reduce production statement -> expression_statement
-- On SPEC reduce production statement -> expression_statement
-- On SIZEOF reduce production statement -> expression_statement
-- On SEMICOLON reduce production statement -> expression_statement
-- On RETURN reduce production statement -> expression_statement
-- On RBRACE reduce production statement -> expression_statement
-- On PLUS reduce production statement -> expression_statement
-- On MINUS reduce production statement -> expression_statement
-- On LPAR reduce production statement -> expression_statement
-- On LOOP_ANNOT reduce production statement -> expression_statement
-- On LBRACE reduce production statement -> expression_statement
-- On INC_OP reduce production statement -> expression_statement
-- On IF reduce production statement -> expression_statement
-- On IDENTIFIER reduce production statement -> expression_statement
-- On GOTO reduce production statement -> expression_statement
-- On FOR reduce production statement -> expression_statement
-- On EXL reduce production statement -> expression_statement
-- On ELSE reduce production statement -> expression_statement
-- On DO reduce production statement -> expression_statement
-- On DEFAULT reduce production statement -> expression_statement
-- On DEC_OP reduce production statement -> expression_statement
-- On CONTINUE reduce production statement -> expression_statement
-- On CONSTANT reduce production statement -> expression_statement
-- On CODE_ANNOT reduce production statement -> expression_statement
-- On CASE reduce production statement -> expression_statement
-- On BREAK reduce production statement -> expression_statement
-- On AMP reduce production statement -> expression_statement

State 305:
expression -> expression . COMMA assignment_expression [ SEMICOLON COMMA ]
expression_statement -> expression . SEMICOLON [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RPAR RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
-- On SEMICOLON shift to state 306
-- On COMMA shift to state 113

State 306:
expression_statement -> expression SEMICOLON . [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RPAR RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
-- On WHILE reduce production expression_statement -> expression SEMICOLON
-- On TYPE_NAME reduce production expression_statement -> expression SEMICOLON
-- On TILDE reduce production expression_statement -> expression SEMICOLON
-- On SWITCH reduce production expression_statement -> expression SEMICOLON
-- On STRING_LITERAL reduce production expression_statement -> expression SEMICOLON
-- On STAR reduce production expression_statement -> expression SEMICOLON
-- On SPEC reduce production expression_statement -> expression SEMICOLON
-- On SIZEOF reduce production expression_statement -> expression SEMICOLON
-- On SEMICOLON reduce production expression_statement -> expression SEMICOLON
-- On RPAR reduce production expression_statement -> expression SEMICOLON
-- On RETURN reduce production expression_statement -> expression SEMICOLON
-- On RBRACE reduce production expression_statement -> expression SEMICOLON
-- On PLUS reduce production expression_statement -> expression SEMICOLON
-- On MINUS reduce production expression_statement -> expression SEMICOLON
-- On LPAR reduce production expression_statement -> expression SEMICOLON
-- On LOOP_ANNOT reduce production expression_statement -> expression SEMICOLON
-- On LBRACE reduce production expression_statement -> expression SEMICOLON
-- On INC_OP reduce production expression_statement -> expression SEMICOLON
-- On IF reduce production expression_statement -> expression SEMICOLON
-- On IDENTIFIER reduce production expression_statement -> expression SEMICOLON
-- On GOTO reduce production expression_statement -> expression SEMICOLON
-- On FOR reduce production expression_statement -> expression SEMICOLON
-- On EXL reduce production expression_statement -> expression SEMICOLON
-- On ELSE reduce production expression_statement -> expression SEMICOLON
-- On DO reduce production expression_statement -> expression SEMICOLON
-- On DEFAULT reduce production expression_statement -> expression SEMICOLON
-- On DEC_OP reduce production expression_statement -> expression SEMICOLON
-- On CONTINUE reduce production expression_statement -> expression SEMICOLON
-- On CONSTANT reduce production expression_statement -> expression SEMICOLON
-- On CODE_ANNOT reduce production expression_statement -> expression SEMICOLON
-- On CASE reduce production expression_statement -> expression SEMICOLON
-- On BREAK reduce production expression_statement -> expression SEMICOLON
-- On AMP reduce production expression_statement -> expression SEMICOLON

State 307:
statement -> compound_statement . [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
-- On WHILE reduce production statement -> compound_statement
-- On TYPE_NAME reduce production statement -> compound_statement
-- On TILDE reduce production statement -> compound_statement
-- On SWITCH reduce production statement -> compound_statement
-- On STRING_LITERAL reduce production statement -> compound_statement
-- On STAR reduce production statement -> compound_statement
-- On SPEC reduce production statement -> compound_statement
-- On SIZEOF reduce production statement -> compound_statement
-- On SEMICOLON reduce production statement -> compound_statement
-- On RETURN reduce production statement -> compound_statement
-- On RBRACE reduce production statement -> compound_statement
-- On PLUS reduce production statement -> compound_statement
-- On MINUS reduce production statement -> compound_statement
-- On LPAR reduce production statement -> compound_statement
-- On LOOP_ANNOT reduce production statement -> compound_statement
-- On LBRACE reduce production statement -> compound_statement
-- On INC_OP reduce production statement -> compound_statement
-- On IF reduce production statement -> compound_statement
-- On IDENTIFIER reduce production statement -> compound_statement
-- On GOTO reduce production statement -> compound_statement
-- On FOR reduce production statement -> compound_statement
-- On EXL reduce production statement -> compound_statement
-- On ELSE reduce production statement -> compound_statement
-- On DO reduce production statement -> compound_statement
-- On DEFAULT reduce production statement -> compound_statement
-- On DEC_OP reduce production statement -> compound_statement
-- On CONTINUE reduce production statement -> compound_statement
-- On CONSTANT reduce production statement -> compound_statement
-- On CODE_ANNOT reduce production statement -> compound_statement
-- On CASE reduce production statement -> compound_statement
-- On BREAK reduce production statement -> compound_statement
-- On AMP reduce production statement -> compound_statement

State 308:
iteration_statement -> loop_annot FOR . LPAR expression_statement expression_statement RPAR statement [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
iteration_statement -> loop_annot FOR . LPAR expression_statement expression_statement expression RPAR statement [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
-- On LPAR shift to state 309

State 309:
iteration_statement -> loop_annot FOR LPAR . expression_statement expression_statement RPAR statement [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
iteration_statement -> loop_annot FOR LPAR . expression_statement expression_statement expression RPAR statement [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
-- On TILDE shift to state 28
-- On STRING_LITERAL shift to state 29
-- On STAR shift to state 30
-- On SIZEOF shift to state 31
-- On SEMICOLON shift to state 266
-- On PLUS shift to state 32
-- On MINUS shift to state 33
-- On LPAR shift to state 36
-- On INC_OP shift to state 39
-- On IDENTIFIER shift to state 41
-- On EXL shift to state 42
-- On DEC_OP shift to state 43
-- On CONSTANT shift to state 44
-- On CODE_ANNOT shift to state 284
-- On AMP shift to state 45
-- On unary_operator shift to state 46
-- On unary_expression shift to state 53
-- On shift_expression shift to state 66
-- On relational_expression shift to state 83
-- On primary_expression shift to state 48
-- On postfix_expression shift to state 49
-- On multiplicative_expression shift to state 68
-- On logical_or_expression shift to state 93
-- On logical_and_expression shift to state 95
-- On inclusive_or_expression shift to state 111
-- On expression_statement shift to state 310
-- On expression shift to state 305
-- On exclusive_or_expression shift to state 110
-- On equality_expression shift to state 101
-- On conditional_expression shift to state 114
-- On cast_expression shift to state 75
-- On assignment_expression shift to state 118
-- On and_expression shift to state 109
-- On additive_expression shift to state 86

State 310:
iteration_statement -> loop_annot FOR LPAR expression_statement . expression_statement RPAR statement [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
iteration_statement -> loop_annot FOR LPAR expression_statement . expression_statement expression RPAR statement [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
-- On TILDE shift to state 28
-- On STRING_LITERAL shift to state 29
-- On STAR shift to state 30
-- On SIZEOF shift to state 31
-- On SEMICOLON shift to state 266
-- On PLUS shift to state 32
-- On MINUS shift to state 33
-- On LPAR shift to state 36
-- On INC_OP shift to state 39
-- On IDENTIFIER shift to state 41
-- On EXL shift to state 42
-- On DEC_OP shift to state 43
-- On CONSTANT shift to state 44
-- On CODE_ANNOT shift to state 284
-- On AMP shift to state 45
-- On unary_operator shift to state 46
-- On unary_expression shift to state 53
-- On shift_expression shift to state 66
-- On relational_expression shift to state 83
-- On primary_expression shift to state 48
-- On postfix_expression shift to state 49
-- On multiplicative_expression shift to state 68
-- On logical_or_expression shift to state 93
-- On logical_and_expression shift to state 95
-- On inclusive_or_expression shift to state 111
-- On expression_statement shift to state 311
-- On expression shift to state 305
-- On exclusive_or_expression shift to state 110
-- On equality_expression shift to state 101
-- On conditional_expression shift to state 114
-- On cast_expression shift to state 75
-- On assignment_expression shift to state 118
-- On and_expression shift to state 109
-- On additive_expression shift to state 86

State 311:
iteration_statement -> loop_annot FOR LPAR expression_statement expression_statement . RPAR statement [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
iteration_statement -> loop_annot FOR LPAR expression_statement expression_statement . expression RPAR statement [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
-- On TILDE shift to state 28
-- On STRING_LITERAL shift to state 29
-- On STAR shift to state 30
-- On SIZEOF shift to state 31
-- On RPAR shift to state 312
-- On PLUS shift to state 32
-- On MINUS shift to state 33
-- On LPAR shift to state 36
-- On INC_OP shift to state 39
-- On IDENTIFIER shift to state 41
-- On EXL shift to state 42
-- On DEC_OP shift to state 43
-- On CONSTANT shift to state 44
-- On AMP shift to state 45
-- On unary_operator shift to state 46
-- On unary_expression shift to state 53
-- On shift_expression shift to state 66
-- On relational_expression shift to state 83
-- On primary_expression shift to state 48
-- On postfix_expression shift to state 49
-- On multiplicative_expression shift to state 68
-- On logical_or_expression shift to state 93
-- On logical_and_expression shift to state 95
-- On inclusive_or_expression shift to state 111
-- On expression shift to state 314
-- On exclusive_or_expression shift to state 110
-- On equality_expression shift to state 101
-- On conditional_expression shift to state 114
-- On cast_expression shift to state 75
-- On assignment_expression shift to state 118
-- On and_expression shift to state 109
-- On additive_expression shift to state 86

State 312:
iteration_statement -> loop_annot FOR LPAR expression_statement expression_statement RPAR . statement [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
-- On TYPE_NAME shift to state 22
-- On TILDE shift to state 28
-- On SWITCH shift to state 261
-- On STRING_LITERAL shift to state 29
-- On STAR shift to state 30
-- On SPEC shift to state 265
-- On SIZEOF shift to state 31
-- On SEMICOLON shift to state 266
-- On RETURN shift to state 267
-- On PLUS shift to state 32
-- On MINUS shift to state 33
-- On LPAR shift to state 36
-- On LOOP_ANNOT shift to state 271
-- On LBRACE shift to state 259
-- On INC_OP shift to state 39
-- On IF shift to state 272
-- On IDENTIFIER shift to state 276
-- On GOTO shift to state 277
-- On EXL shift to state 42
-- On DEFAULT shift to state 280
-- On DEC_OP shift to state 43
-- On CONTINUE shift to state 282
-- On CONSTANT shift to state 44
-- On CODE_ANNOT shift to state 284
-- On CASE shift to state 285
-- On BREAK shift to state 288
-- On AMP shift to state 45
-- On unary_operator shift to state 46
-- On unary_expression shift to state 53
-- On statement shift to state 313
-- On shift_expression shift to state 66
-- On selection_statement shift to state 291
-- On relational_expression shift to state 83
-- On primary_expression shift to state 48
-- On postfix_expression shift to state 49
-- On multiplicative_expression shift to state 68
-- On loop_annot shift to state 292
-- On logical_or_expression shift to state 93
-- On logical_and_expression shift to state 95
-- On labeled_statement shift to state 298
-- On jump_statement shift to state 299
-- On iteration_statement shift to state 300
-- On inclusive_or_expression shift to state 111
-- On identifier shift to state 301
-- On expression_statement shift to state 304
-- On expression shift to state 305
-- On exclusive_or_expression shift to state 110
-- On equality_expression shift to state 101
-- On conditional_expression shift to state 114
-- On compound_statement_LBRACE shift to state 260
-- On compound_statement shift to state 307
-- On cast_expression shift to state 75
-- On assignment_expression shift to state 118
-- On and_expression shift to state 109
-- On additive_expression shift to state 86
-- On WHILE reduce production loop_annot ->
-- On FOR reduce production loop_annot ->
-- On DO reduce production loop_annot ->

State 313:
iteration_statement -> loop_annot FOR LPAR expression_statement expression_statement RPAR statement . [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
-- On WHILE reduce production iteration_statement -> loop_annot FOR LPAR expression_statement expression_statement RPAR statement
-- On TYPE_NAME reduce production iteration_statement -> loop_annot FOR LPAR expression_statement expression_statement RPAR statement
-- On TILDE reduce production iteration_statement -> loop_annot FOR LPAR expression_statement expression_statement RPAR statement
-- On SWITCH reduce production iteration_statement -> loop_annot FOR LPAR expression_statement expression_statement RPAR statement
-- On STRING_LITERAL reduce production iteration_statement -> loop_annot FOR LPAR expression_statement expression_statement RPAR statement
-- On STAR reduce production iteration_statement -> loop_annot FOR LPAR expression_statement expression_statement RPAR statement
-- On SPEC reduce production iteration_statement -> loop_annot FOR LPAR expression_statement expression_statement RPAR statement
-- On SIZEOF reduce production iteration_statement -> loop_annot FOR LPAR expression_statement expression_statement RPAR statement
-- On SEMICOLON reduce production iteration_statement -> loop_annot FOR LPAR expression_statement expression_statement RPAR statement
-- On RETURN reduce production iteration_statement -> loop_annot FOR LPAR expression_statement expression_statement RPAR statement
-- On RBRACE reduce production iteration_statement -> loop_annot FOR LPAR expression_statement expression_statement RPAR statement
-- On PLUS reduce production iteration_statement -> loop_annot FOR LPAR expression_statement expression_statement RPAR statement
-- On MINUS reduce production iteration_statement -> loop_annot FOR LPAR expression_statement expression_statement RPAR statement
-- On LPAR reduce production iteration_statement -> loop_annot FOR LPAR expression_statement expression_statement RPAR statement
-- On LOOP_ANNOT reduce production iteration_statement -> loop_annot FOR LPAR expression_statement expression_statement RPAR statement
-- On LBRACE reduce production iteration_statement -> loop_annot FOR LPAR expression_statement expression_statement RPAR statement
-- On INC_OP reduce production iteration_statement -> loop_annot FOR LPAR expression_statement expression_statement RPAR statement
-- On IF reduce production iteration_statement -> loop_annot FOR LPAR expression_statement expression_statement RPAR statement
-- On IDENTIFIER reduce production iteration_statement -> loop_annot FOR LPAR expression_statement expression_statement RPAR statement
-- On GOTO reduce production iteration_statement -> loop_annot FOR LPAR expression_statement expression_statement RPAR statement
-- On FOR reduce production iteration_statement -> loop_annot FOR LPAR expression_statement expression_statement RPAR statement
-- On EXL reduce production iteration_statement -> loop_annot FOR LPAR expression_statement expression_statement RPAR statement
-- On ELSE reduce production iteration_statement -> loop_annot FOR LPAR expression_statement expression_statement RPAR statement
-- On DO reduce production iteration_statement -> loop_annot FOR LPAR expression_statement expression_statement RPAR statement
-- On DEFAULT reduce production iteration_statement -> loop_annot FOR LPAR expression_statement expression_statement RPAR statement
-- On DEC_OP reduce production iteration_statement -> loop_annot FOR LPAR expression_statement expression_statement RPAR statement
-- On CONTINUE reduce production iteration_statement -> loop_annot FOR LPAR expression_statement expression_statement RPAR statement
-- On CONSTANT reduce production iteration_statement -> loop_annot FOR LPAR expression_statement expression_statement RPAR statement
-- On CODE_ANNOT reduce production iteration_statement -> loop_annot FOR LPAR expression_statement expression_statement RPAR statement
-- On CASE reduce production iteration_statement -> loop_annot FOR LPAR expression_statement expression_statement RPAR statement
-- On BREAK reduce production iteration_statement -> loop_annot FOR LPAR expression_statement expression_statement RPAR statement
-- On AMP reduce production iteration_statement -> loop_annot FOR LPAR expression_statement expression_statement RPAR statement

State 314:
expression -> expression . COMMA assignment_expression [ RPAR COMMA ]
iteration_statement -> loop_annot FOR LPAR expression_statement expression_statement expression . RPAR statement [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
-- On RPAR shift to state 315
-- On COMMA shift to state 113

State 315:
iteration_statement -> loop_annot FOR LPAR expression_statement expression_statement expression RPAR . statement [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
-- On TYPE_NAME shift to state 22
-- On TILDE shift to state 28
-- On SWITCH shift to state 261
-- On STRING_LITERAL shift to state 29
-- On STAR shift to state 30
-- On SPEC shift to state 265
-- On SIZEOF shift to state 31
-- On SEMICOLON shift to state 266
-- On RETURN shift to state 267
-- On PLUS shift to state 32
-- On MINUS shift to state 33
-- On LPAR shift to state 36
-- On LOOP_ANNOT shift to state 271
-- On LBRACE shift to state 259
-- On INC_OP shift to state 39
-- On IF shift to state 272
-- On IDENTIFIER shift to state 276
-- On GOTO shift to state 277
-- On EXL shift to state 42
-- On DEFAULT shift to state 280
-- On DEC_OP shift to state 43
-- On CONTINUE shift to state 282
-- On CONSTANT shift to state 44
-- On CODE_ANNOT shift to state 284
-- On CASE shift to state 285
-- On BREAK shift to state 288
-- On AMP shift to state 45
-- On unary_operator shift to state 46
-- On unary_expression shift to state 53
-- On statement shift to state 316
-- On shift_expression shift to state 66
-- On selection_statement shift to state 291
-- On relational_expression shift to state 83
-- On primary_expression shift to state 48
-- On postfix_expression shift to state 49
-- On multiplicative_expression shift to state 68
-- On loop_annot shift to state 292
-- On logical_or_expression shift to state 93
-- On logical_and_expression shift to state 95
-- On labeled_statement shift to state 298
-- On jump_statement shift to state 299
-- On iteration_statement shift to state 300
-- On inclusive_or_expression shift to state 111
-- On identifier shift to state 301
-- On expression_statement shift to state 304
-- On expression shift to state 305
-- On exclusive_or_expression shift to state 110
-- On equality_expression shift to state 101
-- On conditional_expression shift to state 114
-- On compound_statement_LBRACE shift to state 260
-- On compound_statement shift to state 307
-- On cast_expression shift to state 75
-- On assignment_expression shift to state 118
-- On and_expression shift to state 109
-- On additive_expression shift to state 86
-- On WHILE reduce production loop_annot ->
-- On FOR reduce production loop_annot ->
-- On DO reduce production loop_annot ->

State 316:
iteration_statement -> loop_annot FOR LPAR expression_statement expression_statement expression RPAR statement . [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
-- On WHILE reduce production iteration_statement -> loop_annot FOR LPAR expression_statement expression_statement expression RPAR statement
-- On TYPE_NAME reduce production iteration_statement -> loop_annot FOR LPAR expression_statement expression_statement expression RPAR statement
-- On TILDE reduce production iteration_statement -> loop_annot FOR LPAR expression_statement expression_statement expression RPAR statement
-- On SWITCH reduce production iteration_statement -> loop_annot FOR LPAR expression_statement expression_statement expression RPAR statement
-- On STRING_LITERAL reduce production iteration_statement -> loop_annot FOR LPAR expression_statement expression_statement expression RPAR statement
-- On STAR reduce production iteration_statement -> loop_annot FOR LPAR expression_statement expression_statement expression RPAR statement
-- On SPEC reduce production iteration_statement -> loop_annot FOR LPAR expression_statement expression_statement expression RPAR statement
-- On SIZEOF reduce production iteration_statement -> loop_annot FOR LPAR expression_statement expression_statement expression RPAR statement
-- On SEMICOLON reduce production iteration_statement -> loop_annot FOR LPAR expression_statement expression_statement expression RPAR statement
-- On RETURN reduce production iteration_statement -> loop_annot FOR LPAR expression_statement expression_statement expression RPAR statement
-- On RBRACE reduce production iteration_statement -> loop_annot FOR LPAR expression_statement expression_statement expression RPAR statement
-- On PLUS reduce production iteration_statement -> loop_annot FOR LPAR expression_statement expression_statement expression RPAR statement
-- On MINUS reduce production iteration_statement -> loop_annot FOR LPAR expression_statement expression_statement expression RPAR statement
-- On LPAR reduce production iteration_statement -> loop_annot FOR LPAR expression_statement expression_statement expression RPAR statement
-- On LOOP_ANNOT reduce production iteration_statement -> loop_annot FOR LPAR expression_statement expression_statement expression RPAR statement
-- On LBRACE reduce production iteration_statement -> loop_annot FOR LPAR expression_statement expression_statement expression RPAR statement
-- On INC_OP reduce production iteration_statement -> loop_annot FOR LPAR expression_statement expression_statement expression RPAR statement
-- On IF reduce production iteration_statement -> loop_annot FOR LPAR expression_statement expression_statement expression RPAR statement
-- On IDENTIFIER reduce production iteration_statement -> loop_annot FOR LPAR expression_statement expression_statement expression RPAR statement
-- On GOTO reduce production iteration_statement -> loop_annot FOR LPAR expression_statement expression_statement expression RPAR statement
-- On FOR reduce production iteration_statement -> loop_annot FOR LPAR expression_statement expression_statement expression RPAR statement
-- On EXL reduce production iteration_statement -> loop_annot FOR LPAR expression_statement expression_statement expression RPAR statement
-- On ELSE reduce production iteration_statement -> loop_annot FOR LPAR expression_statement expression_statement expression RPAR statement
-- On DO reduce production iteration_statement -> loop_annot FOR LPAR expression_statement expression_statement expression RPAR statement
-- On DEFAULT reduce production iteration_statement -> loop_annot FOR LPAR expression_statement expression_statement expression RPAR statement
-- On DEC_OP reduce production iteration_statement -> loop_annot FOR LPAR expression_statement expression_statement expression RPAR statement
-- On CONTINUE reduce production iteration_statement -> loop_annot FOR LPAR expression_statement expression_statement expression RPAR statement
-- On CONSTANT reduce production iteration_statement -> loop_annot FOR LPAR expression_statement expression_statement expression RPAR statement
-- On CODE_ANNOT reduce production iteration_statement -> loop_annot FOR LPAR expression_statement expression_statement expression RPAR statement
-- On CASE reduce production iteration_statement -> loop_annot FOR LPAR expression_statement expression_statement expression RPAR statement
-- On BREAK reduce production iteration_statement -> loop_annot FOR LPAR expression_statement expression_statement expression RPAR statement
-- On AMP reduce production iteration_statement -> loop_annot FOR LPAR expression_statement expression_statement expression RPAR statement

State 317:
iteration_statement -> loop_annot DO . statement WHILE LPAR expression RPAR SEMICOLON [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
-- On TYPE_NAME shift to state 22
-- On TILDE shift to state 28
-- On SWITCH shift to state 261
-- On STRING_LITERAL shift to state 29
-- On STAR shift to state 30
-- On SPEC shift to state 265
-- On SIZEOF shift to state 31
-- On SEMICOLON shift to state 266
-- On RETURN shift to state 267
-- On PLUS shift to state 32
-- On MINUS shift to state 33
-- On LPAR shift to state 36
-- On LOOP_ANNOT shift to state 271
-- On LBRACE shift to state 259
-- On INC_OP shift to state 39
-- On IF shift to state 272
-- On IDENTIFIER shift to state 276
-- On GOTO shift to state 277
-- On EXL shift to state 42
-- On DEFAULT shift to state 280
-- On DEC_OP shift to state 43
-- On CONTINUE shift to state 282
-- On CONSTANT shift to state 44
-- On CODE_ANNOT shift to state 284
-- On CASE shift to state 285
-- On BREAK shift to state 288
-- On AMP shift to state 45
-- On unary_operator shift to state 46
-- On unary_expression shift to state 53
-- On statement shift to state 318
-- On shift_expression shift to state 66
-- On selection_statement shift to state 291
-- On relational_expression shift to state 83
-- On primary_expression shift to state 48
-- On postfix_expression shift to state 49
-- On multiplicative_expression shift to state 68
-- On loop_annot shift to state 292
-- On logical_or_expression shift to state 93
-- On logical_and_expression shift to state 95
-- On labeled_statement shift to state 298
-- On jump_statement shift to state 299
-- On iteration_statement shift to state 300
-- On inclusive_or_expression shift to state 111
-- On identifier shift to state 301
-- On expression_statement shift to state 304
-- On expression shift to state 305
-- On exclusive_or_expression shift to state 110
-- On equality_expression shift to state 101
-- On conditional_expression shift to state 114
-- On compound_statement_LBRACE shift to state 260
-- On compound_statement shift to state 307
-- On cast_expression shift to state 75
-- On assignment_expression shift to state 118
-- On and_expression shift to state 109
-- On additive_expression shift to state 86
-- On WHILE reduce production loop_annot ->
-- On FOR reduce production loop_annot ->
-- On DO reduce production loop_annot ->

State 318:
iteration_statement -> loop_annot DO statement . WHILE LPAR expression RPAR SEMICOLON [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
-- On WHILE shift to state 319

State 319:
iteration_statement -> loop_annot DO statement WHILE . LPAR expression RPAR SEMICOLON [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
-- On LPAR shift to state 320

State 320:
iteration_statement -> loop_annot DO statement WHILE LPAR . expression RPAR SEMICOLON [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
-- On TILDE shift to state 28
-- On STRING_LITERAL shift to state 29
-- On STAR shift to state 30
-- On SIZEOF shift to state 31
-- On PLUS shift to state 32
-- On MINUS shift to state 33
-- On LPAR shift to state 36
-- On INC_OP shift to state 39
-- On IDENTIFIER shift to state 41
-- On EXL shift to state 42
-- On DEC_OP shift to state 43
-- On CONSTANT shift to state 44
-- On AMP shift to state 45
-- On unary_operator shift to state 46
-- On unary_expression shift to state 53
-- On shift_expression shift to state 66
-- On relational_expression shift to state 83
-- On primary_expression shift to state 48
-- On postfix_expression shift to state 49
-- On multiplicative_expression shift to state 68
-- On logical_or_expression shift to state 93
-- On logical_and_expression shift to state 95
-- On inclusive_or_expression shift to state 111
-- On expression shift to state 321
-- On exclusive_or_expression shift to state 110
-- On equality_expression shift to state 101
-- On conditional_expression shift to state 114
-- On cast_expression shift to state 75
-- On assignment_expression shift to state 118
-- On and_expression shift to state 109
-- On additive_expression shift to state 86

State 321:
expression -> expression . COMMA assignment_expression [ RPAR COMMA ]
iteration_statement -> loop_annot DO statement WHILE LPAR expression . RPAR SEMICOLON [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
-- On RPAR shift to state 322
-- On COMMA shift to state 113

State 322:
iteration_statement -> loop_annot DO statement WHILE LPAR expression RPAR . SEMICOLON [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
-- On SEMICOLON shift to state 323

State 323:
iteration_statement -> loop_annot DO statement WHILE LPAR expression RPAR SEMICOLON . [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
-- On WHILE reduce production iteration_statement -> loop_annot DO statement WHILE LPAR expression RPAR SEMICOLON
-- On TYPE_NAME reduce production iteration_statement -> loop_annot DO statement WHILE LPAR expression RPAR SEMICOLON
-- On TILDE reduce production iteration_statement -> loop_annot DO statement WHILE LPAR expression RPAR SEMICOLON
-- On SWITCH reduce production iteration_statement -> loop_annot DO statement WHILE LPAR expression RPAR SEMICOLON
-- On STRING_LITERAL reduce production iteration_statement -> loop_annot DO statement WHILE LPAR expression RPAR SEMICOLON
-- On STAR reduce production iteration_statement -> loop_annot DO statement WHILE LPAR expression RPAR SEMICOLON
-- On SPEC reduce production iteration_statement -> loop_annot DO statement WHILE LPAR expression RPAR SEMICOLON
-- On SIZEOF reduce production iteration_statement -> loop_annot DO statement WHILE LPAR expression RPAR SEMICOLON
-- On SEMICOLON reduce production iteration_statement -> loop_annot DO statement WHILE LPAR expression RPAR SEMICOLON
-- On RETURN reduce production iteration_statement -> loop_annot DO statement WHILE LPAR expression RPAR SEMICOLON
-- On RBRACE reduce production iteration_statement -> loop_annot DO statement WHILE LPAR expression RPAR SEMICOLON
-- On PLUS reduce production iteration_statement -> loop_annot DO statement WHILE LPAR expression RPAR SEMICOLON
-- On MINUS reduce production iteration_statement -> loop_annot DO statement WHILE LPAR expression RPAR SEMICOLON
-- On LPAR reduce production iteration_statement -> loop_annot DO statement WHILE LPAR expression RPAR SEMICOLON
-- On LOOP_ANNOT reduce production iteration_statement -> loop_annot DO statement WHILE LPAR expression RPAR SEMICOLON
-- On LBRACE reduce production iteration_statement -> loop_annot DO statement WHILE LPAR expression RPAR SEMICOLON
-- On INC_OP reduce production iteration_statement -> loop_annot DO statement WHILE LPAR expression RPAR SEMICOLON
-- On IF reduce production iteration_statement -> loop_annot DO statement WHILE LPAR expression RPAR SEMICOLON
-- On IDENTIFIER reduce production iteration_statement -> loop_annot DO statement WHILE LPAR expression RPAR SEMICOLON
-- On GOTO reduce production iteration_statement -> loop_annot DO statement WHILE LPAR expression RPAR SEMICOLON
-- On FOR reduce production iteration_statement -> loop_annot DO statement WHILE LPAR expression RPAR SEMICOLON
-- On EXL reduce production iteration_statement -> loop_annot DO statement WHILE LPAR expression RPAR SEMICOLON
-- On ELSE reduce production iteration_statement -> loop_annot DO statement WHILE LPAR expression RPAR SEMICOLON
-- On DO reduce production iteration_statement -> loop_annot DO statement WHILE LPAR expression RPAR SEMICOLON
-- On DEFAULT reduce production iteration_statement -> loop_annot DO statement WHILE LPAR expression RPAR SEMICOLON
-- On DEC_OP reduce production iteration_statement -> loop_annot DO statement WHILE LPAR expression RPAR SEMICOLON
-- On CONTINUE reduce production iteration_statement -> loop_annot DO statement WHILE LPAR expression RPAR SEMICOLON
-- On CONSTANT reduce production iteration_statement -> loop_annot DO statement WHILE LPAR expression RPAR SEMICOLON
-- On CODE_ANNOT reduce production iteration_statement -> loop_annot DO statement WHILE LPAR expression RPAR SEMICOLON
-- On CASE reduce production iteration_statement -> loop_annot DO statement WHILE LPAR expression RPAR SEMICOLON
-- On BREAK reduce production iteration_statement -> loop_annot DO statement WHILE LPAR expression RPAR SEMICOLON
-- On AMP reduce production iteration_statement -> loop_annot DO statement WHILE LPAR expression RPAR SEMICOLON

State 324:
labeled_statement -> DEFAULT COLON statement . [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
-- On WHILE reduce production labeled_statement -> DEFAULT COLON statement
-- On TYPE_NAME reduce production labeled_statement -> DEFAULT COLON statement
-- On TILDE reduce production labeled_statement -> DEFAULT COLON statement
-- On SWITCH reduce production labeled_statement -> DEFAULT COLON statement
-- On STRING_LITERAL reduce production labeled_statement -> DEFAULT COLON statement
-- On STAR reduce production labeled_statement -> DEFAULT COLON statement
-- On SPEC reduce production labeled_statement -> DEFAULT COLON statement
-- On SIZEOF reduce production labeled_statement -> DEFAULT COLON statement
-- On SEMICOLON reduce production labeled_statement -> DEFAULT COLON statement
-- On RETURN reduce production labeled_statement -> DEFAULT COLON statement
-- On RBRACE reduce production labeled_statement -> DEFAULT COLON statement
-- On PLUS reduce production labeled_statement -> DEFAULT COLON statement
-- On MINUS reduce production labeled_statement -> DEFAULT COLON statement
-- On LPAR reduce production labeled_statement -> DEFAULT COLON statement
-- On LOOP_ANNOT reduce production labeled_statement -> DEFAULT COLON statement
-- On LBRACE reduce production labeled_statement -> DEFAULT COLON statement
-- On INC_OP reduce production labeled_statement -> DEFAULT COLON statement
-- On IF reduce production labeled_statement -> DEFAULT COLON statement
-- On IDENTIFIER reduce production labeled_statement -> DEFAULT COLON statement
-- On GOTO reduce production labeled_statement -> DEFAULT COLON statement
-- On FOR reduce production labeled_statement -> DEFAULT COLON statement
-- On EXL reduce production labeled_statement -> DEFAULT COLON statement
-- On ELSE reduce production labeled_statement -> DEFAULT COLON statement
-- On DO reduce production labeled_statement -> DEFAULT COLON statement
-- On DEFAULT reduce production labeled_statement -> DEFAULT COLON statement
-- On DEC_OP reduce production labeled_statement -> DEFAULT COLON statement
-- On CONTINUE reduce production labeled_statement -> DEFAULT COLON statement
-- On CONSTANT reduce production labeled_statement -> DEFAULT COLON statement
-- On CODE_ANNOT reduce production labeled_statement -> DEFAULT COLON statement
-- On CASE reduce production labeled_statement -> DEFAULT COLON statement
-- On BREAK reduce production labeled_statement -> DEFAULT COLON statement
-- On AMP reduce production labeled_statement -> DEFAULT COLON statement

State 325:
selection_statement -> IF LPAR expression RPAR statement . [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
selection_statement -> IF LPAR expression RPAR statement . ELSE statement [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
-- On ELSE shift to state 326
-- On WHILE reduce production selection_statement -> IF LPAR expression RPAR statement
-- On TYPE_NAME reduce production selection_statement -> IF LPAR expression RPAR statement
-- On TILDE reduce production selection_statement -> IF LPAR expression RPAR statement
-- On SWITCH reduce production selection_statement -> IF LPAR expression RPAR statement
-- On STRING_LITERAL reduce production selection_statement -> IF LPAR expression RPAR statement
-- On STAR reduce production selection_statement -> IF LPAR expression RPAR statement
-- On SPEC reduce production selection_statement -> IF LPAR expression RPAR statement
-- On SIZEOF reduce production selection_statement -> IF LPAR expression RPAR statement
-- On SEMICOLON reduce production selection_statement -> IF LPAR expression RPAR statement
-- On RETURN reduce production selection_statement -> IF LPAR expression RPAR statement
-- On RBRACE reduce production selection_statement -> IF LPAR expression RPAR statement
-- On PLUS reduce production selection_statement -> IF LPAR expression RPAR statement
-- On MINUS reduce production selection_statement -> IF LPAR expression RPAR statement
-- On LPAR reduce production selection_statement -> IF LPAR expression RPAR statement
-- On LOOP_ANNOT reduce production selection_statement -> IF LPAR expression RPAR statement
-- On LBRACE reduce production selection_statement -> IF LPAR expression RPAR statement
-- On INC_OP reduce production selection_statement -> IF LPAR expression RPAR statement
-- On IF reduce production selection_statement -> IF LPAR expression RPAR statement
-- On IDENTIFIER reduce production selection_statement -> IF LPAR expression RPAR statement
-- On GOTO reduce production selection_statement -> IF LPAR expression RPAR statement
-- On FOR reduce production selection_statement -> IF LPAR expression RPAR statement
-- On EXL reduce production selection_statement -> IF LPAR expression RPAR statement
-- On DO reduce production selection_statement -> IF LPAR expression RPAR statement
-- On DEFAULT reduce production selection_statement -> IF LPAR expression RPAR statement
-- On DEC_OP reduce production selection_statement -> IF LPAR expression RPAR statement
-- On CONTINUE reduce production selection_statement -> IF LPAR expression RPAR statement
-- On CONSTANT reduce production selection_statement -> IF LPAR expression RPAR statement
-- On CODE_ANNOT reduce production selection_statement -> IF LPAR expression RPAR statement
-- On CASE reduce production selection_statement -> IF LPAR expression RPAR statement
-- On BREAK reduce production selection_statement -> IF LPAR expression RPAR statement
-- On AMP reduce production selection_statement -> IF LPAR expression RPAR statement

State 326:
selection_statement -> IF LPAR expression RPAR statement ELSE . statement [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
-- On TYPE_NAME shift to state 22
-- On TILDE shift to state 28
-- On SWITCH shift to state 261
-- On STRING_LITERAL shift to state 29
-- On STAR shift to state 30
-- On SPEC shift to state 265
-- On SIZEOF shift to state 31
-- On SEMICOLON shift to state 266
-- On RETURN shift to state 267
-- On PLUS shift to state 32
-- On MINUS shift to state 33
-- On LPAR shift to state 36
-- On LOOP_ANNOT shift to state 271
-- On LBRACE shift to state 259
-- On INC_OP shift to state 39
-- On IF shift to state 272
-- On IDENTIFIER shift to state 276
-- On GOTO shift to state 277
-- On EXL shift to state 42
-- On DEFAULT shift to state 280
-- On DEC_OP shift to state 43
-- On CONTINUE shift to state 282
-- On CONSTANT shift to state 44
-- On CODE_ANNOT shift to state 284
-- On CASE shift to state 285
-- On BREAK shift to state 288
-- On AMP shift to state 45
-- On unary_operator shift to state 46
-- On unary_expression shift to state 53
-- On statement shift to state 327
-- On shift_expression shift to state 66
-- On selection_statement shift to state 291
-- On relational_expression shift to state 83
-- On primary_expression shift to state 48
-- On postfix_expression shift to state 49
-- On multiplicative_expression shift to state 68
-- On loop_annot shift to state 292
-- On logical_or_expression shift to state 93
-- On logical_and_expression shift to state 95
-- On labeled_statement shift to state 298
-- On jump_statement shift to state 299
-- On iteration_statement shift to state 300
-- On inclusive_or_expression shift to state 111
-- On identifier shift to state 301
-- On expression_statement shift to state 304
-- On expression shift to state 305
-- On exclusive_or_expression shift to state 110
-- On equality_expression shift to state 101
-- On conditional_expression shift to state 114
-- On compound_statement_LBRACE shift to state 260
-- On compound_statement shift to state 307
-- On cast_expression shift to state 75
-- On assignment_expression shift to state 118
-- On and_expression shift to state 109
-- On additive_expression shift to state 86
-- On WHILE reduce production loop_annot ->
-- On FOR reduce production loop_annot ->
-- On DO reduce production loop_annot ->

State 327:
selection_statement -> IF LPAR expression RPAR statement ELSE statement . [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
-- On WHILE reduce production selection_statement -> IF LPAR expression RPAR statement ELSE statement
-- On TYPE_NAME reduce production selection_statement -> IF LPAR expression RPAR statement ELSE statement
-- On TILDE reduce production selection_statement -> IF LPAR expression RPAR statement ELSE statement
-- On SWITCH reduce production selection_statement -> IF LPAR expression RPAR statement ELSE statement
-- On STRING_LITERAL reduce production selection_statement -> IF LPAR expression RPAR statement ELSE statement
-- On STAR reduce production selection_statement -> IF LPAR expression RPAR statement ELSE statement
-- On SPEC reduce production selection_statement -> IF LPAR expression RPAR statement ELSE statement
-- On SIZEOF reduce production selection_statement -> IF LPAR expression RPAR statement ELSE statement
-- On SEMICOLON reduce production selection_statement -> IF LPAR expression RPAR statement ELSE statement
-- On RETURN reduce production selection_statement -> IF LPAR expression RPAR statement ELSE statement
-- On RBRACE reduce production selection_statement -> IF LPAR expression RPAR statement ELSE statement
-- On PLUS reduce production selection_statement -> IF LPAR expression RPAR statement ELSE statement
-- On MINUS reduce production selection_statement -> IF LPAR expression RPAR statement ELSE statement
-- On LPAR reduce production selection_statement -> IF LPAR expression RPAR statement ELSE statement
-- On LOOP_ANNOT reduce production selection_statement -> IF LPAR expression RPAR statement ELSE statement
-- On LBRACE reduce production selection_statement -> IF LPAR expression RPAR statement ELSE statement
-- On INC_OP reduce production selection_statement -> IF LPAR expression RPAR statement ELSE statement
-- On IF reduce production selection_statement -> IF LPAR expression RPAR statement ELSE statement
-- On IDENTIFIER reduce production selection_statement -> IF LPAR expression RPAR statement ELSE statement
-- On GOTO reduce production selection_statement -> IF LPAR expression RPAR statement ELSE statement
-- On FOR reduce production selection_statement -> IF LPAR expression RPAR statement ELSE statement
-- On EXL reduce production selection_statement -> IF LPAR expression RPAR statement ELSE statement
-- On ELSE reduce production selection_statement -> IF LPAR expression RPAR statement ELSE statement
-- On DO reduce production selection_statement -> IF LPAR expression RPAR statement ELSE statement
-- On DEFAULT reduce production selection_statement -> IF LPAR expression RPAR statement ELSE statement
-- On DEC_OP reduce production selection_statement -> IF LPAR expression RPAR statement ELSE statement
-- On CONTINUE reduce production selection_statement -> IF LPAR expression RPAR statement ELSE statement
-- On CONSTANT reduce production selection_statement -> IF LPAR expression RPAR statement ELSE statement
-- On CODE_ANNOT reduce production selection_statement -> IF LPAR expression RPAR statement ELSE statement
-- On CASE reduce production selection_statement -> IF LPAR expression RPAR statement ELSE statement
-- On BREAK reduce production selection_statement -> IF LPAR expression RPAR statement ELSE statement
-- On AMP reduce production selection_statement -> IF LPAR expression RPAR statement ELSE statement

State 328:
statement -> SPEC statement . [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
-- On WHILE reduce production statement -> SPEC statement
-- On TYPE_NAME reduce production statement -> SPEC statement
-- On TILDE reduce production statement -> SPEC statement
-- On SWITCH reduce production statement -> SPEC statement
-- On STRING_LITERAL reduce production statement -> SPEC statement
-- On STAR reduce production statement -> SPEC statement
-- On SPEC reduce production statement -> SPEC statement
-- On SIZEOF reduce production statement -> SPEC statement
-- On SEMICOLON reduce production statement -> SPEC statement
-- On RETURN reduce production statement -> SPEC statement
-- On RBRACE reduce production statement -> SPEC statement
-- On PLUS reduce production statement -> SPEC statement
-- On MINUS reduce production statement -> SPEC statement
-- On LPAR reduce production statement -> SPEC statement
-- On LOOP_ANNOT reduce production statement -> SPEC statement
-- On LBRACE reduce production statement -> SPEC statement
-- On INC_OP reduce production statement -> SPEC statement
-- On IF reduce production statement -> SPEC statement
-- On IDENTIFIER reduce production statement -> SPEC statement
-- On GOTO reduce production statement -> SPEC statement
-- On FOR reduce production statement -> SPEC statement
-- On EXL reduce production statement -> SPEC statement
-- On ELSE reduce production statement -> SPEC statement
-- On DO reduce production statement -> SPEC statement
-- On DEFAULT reduce production statement -> SPEC statement
-- On DEC_OP reduce production statement -> SPEC statement
-- On CONTINUE reduce production statement -> SPEC statement
-- On CONSTANT reduce production statement -> SPEC statement
-- On CODE_ANNOT reduce production statement -> SPEC statement
-- On CASE reduce production statement -> SPEC statement
-- On BREAK reduce production statement -> SPEC statement
-- On AMP reduce production statement -> SPEC statement

State 329:
selection_statement -> SWITCH LPAR expression RPAR statement . [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL ELSE DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
-- On WHILE reduce production selection_statement -> SWITCH LPAR expression RPAR statement
-- On TYPE_NAME reduce production selection_statement -> SWITCH LPAR expression RPAR statement
-- On TILDE reduce production selection_statement -> SWITCH LPAR expression RPAR statement
-- On SWITCH reduce production selection_statement -> SWITCH LPAR expression RPAR statement
-- On STRING_LITERAL reduce production selection_statement -> SWITCH LPAR expression RPAR statement
-- On STAR reduce production selection_statement -> SWITCH LPAR expression RPAR statement
-- On SPEC reduce production selection_statement -> SWITCH LPAR expression RPAR statement
-- On SIZEOF reduce production selection_statement -> SWITCH LPAR expression RPAR statement
-- On SEMICOLON reduce production selection_statement -> SWITCH LPAR expression RPAR statement
-- On RETURN reduce production selection_statement -> SWITCH LPAR expression RPAR statement
-- On RBRACE reduce production selection_statement -> SWITCH LPAR expression RPAR statement
-- On PLUS reduce production selection_statement -> SWITCH LPAR expression RPAR statement
-- On MINUS reduce production selection_statement -> SWITCH LPAR expression RPAR statement
-- On LPAR reduce production selection_statement -> SWITCH LPAR expression RPAR statement
-- On LOOP_ANNOT reduce production selection_statement -> SWITCH LPAR expression RPAR statement
-- On LBRACE reduce production selection_statement -> SWITCH LPAR expression RPAR statement
-- On INC_OP reduce production selection_statement -> SWITCH LPAR expression RPAR statement
-- On IF reduce production selection_statement -> SWITCH LPAR expression RPAR statement
-- On IDENTIFIER reduce production selection_statement -> SWITCH LPAR expression RPAR statement
-- On GOTO reduce production selection_statement -> SWITCH LPAR expression RPAR statement
-- On FOR reduce production selection_statement -> SWITCH LPAR expression RPAR statement
-- On EXL reduce production selection_statement -> SWITCH LPAR expression RPAR statement
-- On ELSE reduce production selection_statement -> SWITCH LPAR expression RPAR statement
-- On DO reduce production selection_statement -> SWITCH LPAR expression RPAR statement
-- On DEFAULT reduce production selection_statement -> SWITCH LPAR expression RPAR statement
-- On DEC_OP reduce production selection_statement -> SWITCH LPAR expression RPAR statement
-- On CONTINUE reduce production selection_statement -> SWITCH LPAR expression RPAR statement
-- On CONSTANT reduce production selection_statement -> SWITCH LPAR expression RPAR statement
-- On CODE_ANNOT reduce production selection_statement -> SWITCH LPAR expression RPAR statement
-- On CASE reduce production selection_statement -> SWITCH LPAR expression RPAR statement
-- On BREAK reduce production selection_statement -> SWITCH LPAR expression RPAR statement
-- On AMP reduce production selection_statement -> SWITCH LPAR expression RPAR statement

State 330:
declaration -> SPEC . declaration_specifiers init_declarator_list attributes_opt SEMICOLON [ WHILE VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SPEC SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PLUS MINUS LPAR LOOP_ANNOT LONG LBRACE INT INC_OP IF IDENTIFIER GOTO FOR FLOAT EXTERN EXL ENUM DOUBLE DO DEFAULT DEC_OP DECL CONTINUE CONSTANT CONST CODE_ANNOT CHAR CASE BREAK AUTO AMP ]
statement -> SPEC . statement [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPE_NAME shift to state 5
-- On TYPEDEF shift to state 6
-- On TILDE shift to state 28
-- On SWITCH shift to state 261
-- On STRUCT shift to state 7
-- On STRING_LITERAL shift to state 29
-- On STATIC shift to state 8
-- On STAR shift to state 30
-- On SPEC shift to state 265
-- On SIZEOF shift to state 31
-- On SIGNED shift to state 18
-- On SHORT shift to state 19
-- On SEMICOLON shift to state 266
-- On RETURN shift to state 267
-- On RESTRICT shift to state 10
-- On REGISTER shift to state 20
-- On PLUS shift to state 32
-- On MINUS shift to state 33
-- On LPAR shift to state 36
-- On LOOP_ANNOT shift to state 271
-- On LONG shift to state 37
-- On LBRACE shift to state 259
-- On INT shift to state 38
-- On INC_OP shift to state 39
-- On IF shift to state 272
-- On IDENTIFIER shift to state 276
-- On GOTO shift to state 277
-- On FLOAT shift to state 140
-- On EXTERN shift to state 182
-- On EXL shift to state 42
-- On ENUM shift to state 141
-- On DOUBLE shift to state 156
-- On DEFAULT shift to state 280
-- On DEC_OP shift to state 43
-- On CONTINUE shift to state 282
-- On CONSTANT shift to state 44
-- On CONST shift to state 11
-- On CODE_ANNOT shift to state 284
-- On CHAR shift to state 157
-- On CASE shift to state 285
-- On BREAK shift to state 288
-- On AUTO shift to state 183
-- On AMP shift to state 45
-- On unary_operator shift to state 46
-- On unary_expression shift to state 53
-- On type_specifier_no_name shift to state 158
-- On type_specifier shift to state 184
-- On type_qualifier shift to state 187
-- On struct_or_union_specifier shift to state 162
-- On struct_or_union shift to state 163
-- On storage_class_specifier shift to state 188
-- On statement shift to state 328
-- On shift_expression shift to state 66
-- On selection_statement shift to state 291
-- On relational_expression shift to state 83
-- On primary_expression shift to state 48
-- On postfix_expression shift to state 49
-- On multiplicative_expression shift to state 68
-- On loop_annot shift to state 292
-- On logical_or_expression shift to state 93
-- On logical_and_expression shift to state 95
-- On labeled_statement shift to state 298
-- On jump_statement shift to state 299
-- On iteration_statement shift to state 300
-- On inclusive_or_expression shift to state 111
-- On identifier shift to state 301
-- On expression_statement shift to state 304
-- On expression shift to state 305
-- On exclusive_or_expression shift to state 110
-- On equality_expression shift to state 101
-- On enum_specifier shift to state 167
-- On declaration_specifiers shift to state 331
-- On conditional_expression shift to state 114
-- On compound_statement_LBRACE shift to state 260
-- On compound_statement shift to state 307
-- On cast_expression shift to state 75
-- On assignment_expression shift to state 118
-- On and_expression shift to state 109
-- On additive_expression shift to state 86
-- On WHILE reduce production loop_annot ->
-- On FOR reduce production loop_annot ->
-- On DO reduce production loop_annot ->

State 331:
declaration -> SPEC declaration_specifiers . init_declarator_list attributes_opt SEMICOLON [ WHILE VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SPEC SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PLUS MINUS LPAR LOOP_ANNOT LONG LBRACE INT INC_OP IF IDENTIFIER GOTO FOR FLOAT EXTERN EXL ENUM DOUBLE DO DEFAULT DEC_OP DECL CONTINUE CONSTANT CONST CODE_ANNOT CHAR CASE BREAK AUTO AMP ]
-- On TYPE_NAME shift to state 22
-- On STAR shift to state 9
-- On LPAR shift to state 21
-- On IDENTIFIER shift to state 23
-- On pointer shift to state 24
-- On init_declarator_list shift to state 332
-- On init_declarator shift to state 366
-- On identifier shift to state 25
-- On direct_declarator shift to state 178
-- On declarator shift to state 335

State 332:
declaration -> SPEC declaration_specifiers init_declarator_list . attributes_opt SEMICOLON [ WHILE VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SPEC SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PLUS MINUS LPAR LOOP_ANNOT LONG LBRACE INT INC_OP IF IDENTIFIER GOTO FOR FLOAT EXTERN EXL EOF ENUM DOUBLE DO DEFAULT DEC_OP DECL CONTINUE CONSTANT CONST CODE_ANNOT CHAR CASE BREAK AUTO AMP ]
init_declarator_list -> init_declarator_list . COMMA init_declarator [ SEMICOLON COMMA ATTRIBUTE ]
-- On COMMA shift to state 333
-- On ATTRIBUTE shift to state 346
-- On attributes_opt shift to state 361
-- On attributes shift to state 363
-- On attribute shift to state 365
-- On SEMICOLON reduce production attributes_opt ->

State 333:
init_declarator_list -> init_declarator_list COMMA . init_declarator [ SEMICOLON COMMA ATTRIBUTE ]
-- On TYPE_NAME shift to state 22
-- On STAR shift to state 9
-- On LPAR shift to state 21
-- On IDENTIFIER shift to state 23
-- On pointer shift to state 24
-- On init_declarator shift to state 334
-- On identifier shift to state 25
-- On direct_declarator shift to state 178
-- On declarator shift to state 335

State 334:
init_declarator_list -> init_declarator_list COMMA init_declarator . [ SEMICOLON COMMA ATTRIBUTE ]
-- On SEMICOLON reduce production init_declarator_list -> init_declarator_list COMMA init_declarator
-- On COMMA reduce production init_declarator_list -> init_declarator_list COMMA init_declarator
-- On ATTRIBUTE reduce production init_declarator_list -> init_declarator_list COMMA init_declarator

State 335:
init_declarator -> declarator . [ SEMICOLON COMMA ATTRIBUTE ]
init_declarator -> declarator . EQUAL c_initializer [ SEMICOLON COMMA ATTRIBUTE ]
-- On EQUAL shift to state 336
-- On SEMICOLON reduce production init_declarator -> declarator
-- On COMMA reduce production init_declarator -> declarator
-- On ATTRIBUTE reduce production init_declarator -> declarator

State 336:
init_declarator -> declarator EQUAL . c_initializer [ SEMICOLON COMMA ATTRIBUTE ]
-- On TILDE shift to state 28
-- On STRING_LITERAL shift to state 29
-- On STAR shift to state 30
-- On SIZEOF shift to state 31
-- On PLUS shift to state 32
-- On MINUS shift to state 33
-- On LPAR shift to state 36
-- On LBRACE shift to state 337
-- On INC_OP shift to state 39
-- On IDENTIFIER shift to state 41
-- On EXL shift to state 42
-- On DEC_OP shift to state 43
-- On CONSTANT shift to state 44
-- On AMP shift to state 45
-- On unary_operator shift to state 46
-- On unary_expression shift to state 53
-- On shift_expression shift to state 66
-- On relational_expression shift to state 83
-- On primary_expression shift to state 48
-- On postfix_expression shift to state 49
-- On multiplicative_expression shift to state 68
-- On logical_or_expression shift to state 93
-- On logical_and_expression shift to state 95
-- On inclusive_or_expression shift to state 111
-- On exclusive_or_expression shift to state 110
-- On equality_expression shift to state 101
-- On conditional_expression shift to state 114
-- On cast_expression shift to state 75
-- On c_initializer shift to state 345
-- On assignment_expression shift to state 343
-- On and_expression shift to state 109
-- On additive_expression shift to state 86

State 337:
c_initializer -> LBRACE . c_initializer_list RBRACE [ SEMICOLON RBRACE COMMA ATTRIBUTE ]
c_initializer -> LBRACE . c_initializer_list COMMA RBRACE [ SEMICOLON RBRACE COMMA ATTRIBUTE ]
-- On TILDE shift to state 28
-- On STRING_LITERAL shift to state 29
-- On STAR shift to state 30
-- On SIZEOF shift to state 31
-- On PLUS shift to state 32
-- On MINUS shift to state 33
-- On LPAR shift to state 36
-- On LBRACE shift to state 337
-- On INC_OP shift to state 39
-- On IDENTIFIER shift to state 41
-- On EXL shift to state 42
-- On DEC_OP shift to state 43
-- On CONSTANT shift to state 44
-- On AMP shift to state 45
-- On unary_operator shift to state 46
-- On unary_expression shift to state 53
-- On shift_expression shift to state 66
-- On relational_expression shift to state 83
-- On primary_expression shift to state 48
-- On postfix_expression shift to state 49
-- On multiplicative_expression shift to state 68
-- On logical_or_expression shift to state 93
-- On logical_and_expression shift to state 95
-- On inclusive_or_expression shift to state 111
-- On exclusive_or_expression shift to state 110
-- On equality_expression shift to state 101
-- On conditional_expression shift to state 114
-- On cast_expression shift to state 75
-- On c_initializer_list shift to state 338
-- On c_initializer shift to state 344
-- On assignment_expression shift to state 343
-- On and_expression shift to state 109
-- On additive_expression shift to state 86

State 338:
c_initializer -> LBRACE c_initializer_list . RBRACE [ SEMICOLON RBRACE COMMA ATTRIBUTE ]
c_initializer -> LBRACE c_initializer_list . COMMA RBRACE [ SEMICOLON RBRACE COMMA ATTRIBUTE ]
c_initializer_list -> c_initializer_list . COMMA c_initializer [ RBRACE COMMA ]
-- On RBRACE shift to state 339
-- On COMMA shift to state 340

State 339:
c_initializer -> LBRACE c_initializer_list RBRACE . [ SEMICOLON RBRACE COMMA ATTRIBUTE ]
-- On SEMICOLON reduce production c_initializer -> LBRACE c_initializer_list RBRACE
-- On RBRACE reduce production c_initializer -> LBRACE c_initializer_list RBRACE
-- On COMMA reduce production c_initializer -> LBRACE c_initializer_list RBRACE
-- On ATTRIBUTE reduce production c_initializer -> LBRACE c_initializer_list RBRACE

State 340:
c_initializer -> LBRACE c_initializer_list COMMA . RBRACE [ SEMICOLON RBRACE COMMA ATTRIBUTE ]
c_initializer_list -> c_initializer_list COMMA . c_initializer [ RBRACE COMMA ]
-- On TILDE shift to state 28
-- On STRING_LITERAL shift to state 29
-- On STAR shift to state 30
-- On SIZEOF shift to state 31
-- On RBRACE shift to state 341
-- On PLUS shift to state 32
-- On MINUS shift to state 33
-- On LPAR shift to state 36
-- On LBRACE shift to state 337
-- On INC_OP shift to state 39
-- On IDENTIFIER shift to state 41
-- On EXL shift to state 42
-- On DEC_OP shift to state 43
-- On CONSTANT shift to state 44
-- On AMP shift to state 45
-- On unary_operator shift to state 46
-- On unary_expression shift to state 53
-- On shift_expression shift to state 66
-- On relational_expression shift to state 83
-- On primary_expression shift to state 48
-- On postfix_expression shift to state 49
-- On multiplicative_expression shift to state 68
-- On logical_or_expression shift to state 93
-- On logical_and_expression shift to state 95
-- On inclusive_or_expression shift to state 111
-- On exclusive_or_expression shift to state 110
-- On equality_expression shift to state 101
-- On conditional_expression shift to state 114
-- On cast_expression shift to state 75
-- On c_initializer shift to state 342
-- On assignment_expression shift to state 343
-- On and_expression shift to state 109
-- On additive_expression shift to state 86

State 341:
c_initializer -> LBRACE c_initializer_list COMMA RBRACE . [ SEMICOLON RBRACE COMMA ATTRIBUTE ]
-- On SEMICOLON reduce production c_initializer -> LBRACE c_initializer_list COMMA RBRACE
-- On RBRACE reduce production c_initializer -> LBRACE c_initializer_list COMMA RBRACE
-- On COMMA reduce production c_initializer -> LBRACE c_initializer_list COMMA RBRACE
-- On ATTRIBUTE reduce production c_initializer -> LBRACE c_initializer_list COMMA RBRACE

State 342:
c_initializer_list -> c_initializer_list COMMA c_initializer . [ RBRACE COMMA ]
-- On RBRACE reduce production c_initializer_list -> c_initializer_list COMMA c_initializer
-- On COMMA reduce production c_initializer_list -> c_initializer_list COMMA c_initializer

State 343:
c_initializer -> assignment_expression . [ SEMICOLON RBRACE COMMA ATTRIBUTE ]
-- On SEMICOLON reduce production c_initializer -> assignment_expression
-- On RBRACE reduce production c_initializer -> assignment_expression
-- On COMMA reduce production c_initializer -> assignment_expression
-- On ATTRIBUTE reduce production c_initializer -> assignment_expression

State 344:
c_initializer_list -> c_initializer . [ RBRACE COMMA ]
-- On RBRACE reduce production c_initializer_list -> c_initializer
-- On COMMA reduce production c_initializer_list -> c_initializer

State 345:
init_declarator -> declarator EQUAL c_initializer . [ SEMICOLON COMMA ATTRIBUTE ]
-- On SEMICOLON reduce production init_declarator -> declarator EQUAL c_initializer
-- On COMMA reduce production init_declarator -> declarator EQUAL c_initializer
-- On ATTRIBUTE reduce production init_declarator -> declarator EQUAL c_initializer

State 346:
attribute -> ATTRIBUTE . LPAR LPAR attribute_list RPAR RPAR [ SEMICOLON ATTRIBUTE ]
-- On LPAR shift to state 347

State 347:
attribute -> ATTRIBUTE LPAR . LPAR attribute_list RPAR RPAR [ SEMICOLON ATTRIBUTE ]
-- On LPAR shift to state 348

State 348:
attribute -> ATTRIBUTE LPAR LPAR . attribute_list RPAR RPAR [ SEMICOLON ATTRIBUTE ]
-- On TYPE_NAME shift to state 22
-- On IDENTIFIER shift to state 23
-- On CONST shift to state 349
-- On identifier shift to state 350
-- On attribute_list shift to state 355
-- On attrib shift to state 360
-- On RPAR reduce production attrib ->
-- On COMMA reduce production attrib ->

State 349:
attrib -> CONST . [ RPAR COMMA ]
-- On RPAR reduce production attrib -> CONST
-- On COMMA reduce production attrib -> CONST

State 350:
attrib -> identifier . [ RPAR COMMA ]
attrib -> identifier . LPAR RPAR [ RPAR COMMA ]
attrib -> identifier . LPAR argument_expression_list RPAR [ RPAR COMMA ]
-- On LPAR shift to state 351
-- On RPAR reduce production attrib -> identifier
-- On COMMA reduce production attrib -> identifier

State 351:
attrib -> identifier LPAR . RPAR [ RPAR COMMA ]
attrib -> identifier LPAR . argument_expression_list RPAR [ RPAR COMMA ]
-- On TILDE shift to state 28
-- On STRING_LITERAL shift to state 29
-- On STAR shift to state 30
-- On SIZEOF shift to state 31
-- On RPAR shift to state 352
-- On PLUS shift to state 32
-- On MINUS shift to state 33
-- On LPAR shift to state 36
-- On INC_OP shift to state 39
-- On IDENTIFIER shift to state 41
-- On EXL shift to state 42
-- On DEC_OP shift to state 43
-- On CONSTANT shift to state 44
-- On AMP shift to state 45
-- On unary_operator shift to state 46
-- On unary_expression shift to state 53
-- On shift_expression shift to state 66
-- On relational_expression shift to state 83
-- On primary_expression shift to state 48
-- On postfix_expression shift to state 49
-- On multiplicative_expression shift to state 68
-- On logical_or_expression shift to state 93
-- On logical_and_expression shift to state 95
-- On inclusive_or_expression shift to state 111
-- On exclusive_or_expression shift to state 110
-- On equality_expression shift to state 101
-- On conditional_expression shift to state 114
-- On cast_expression shift to state 75
-- On assignment_expression shift to state 126
-- On argument_expression_list shift to state 353
-- On and_expression shift to state 109
-- On additive_expression shift to state 86

State 352:
attrib -> identifier LPAR RPAR . [ RPAR COMMA ]
-- On RPAR reduce production attrib -> identifier LPAR RPAR
-- On COMMA reduce production attrib -> identifier LPAR RPAR

State 353:
argument_expression_list -> argument_expression_list . COMMA assignment_expression [ RPAR COMMA ]
attrib -> identifier LPAR argument_expression_list . RPAR [ RPAR COMMA ]
-- On RPAR shift to state 354
-- On COMMA shift to state 129

State 354:
attrib -> identifier LPAR argument_expression_list RPAR . [ RPAR COMMA ]
-- On RPAR reduce production attrib -> identifier LPAR argument_expression_list RPAR
-- On COMMA reduce production attrib -> identifier LPAR argument_expression_list RPAR

State 355:
attribute -> ATTRIBUTE LPAR LPAR attribute_list . RPAR RPAR [ SEMICOLON ATTRIBUTE ]
attribute_list -> attribute_list . COMMA attrib [ RPAR COMMA ]
-- On RPAR shift to state 356
-- On COMMA shift to state 358

State 356:
attribute -> ATTRIBUTE LPAR LPAR attribute_list RPAR . RPAR [ SEMICOLON ATTRIBUTE ]
-- On RPAR shift to state 357

State 357:
attribute -> ATTRIBUTE LPAR LPAR attribute_list RPAR RPAR . [ SEMICOLON ATTRIBUTE ]
-- On SEMICOLON reduce production attribute -> ATTRIBUTE LPAR LPAR attribute_list RPAR RPAR
-- On ATTRIBUTE reduce production attribute -> ATTRIBUTE LPAR LPAR attribute_list RPAR RPAR

State 358:
attribute_list -> attribute_list COMMA . attrib [ RPAR COMMA ]
-- On TYPE_NAME shift to state 22
-- On IDENTIFIER shift to state 23
-- On CONST shift to state 349
-- On identifier shift to state 350
-- On attrib shift to state 359
-- On RPAR reduce production attrib ->
-- On COMMA reduce production attrib ->

State 359:
attribute_list -> attribute_list COMMA attrib . [ RPAR COMMA ]
-- On RPAR reduce production attribute_list -> attribute_list COMMA attrib
-- On COMMA reduce production attribute_list -> attribute_list COMMA attrib

State 360:
attribute_list -> attrib . [ RPAR COMMA ]
-- On RPAR reduce production attribute_list -> attrib
-- On COMMA reduce production attribute_list -> attrib

State 361:
declaration -> SPEC declaration_specifiers init_declarator_list attributes_opt . SEMICOLON [ WHILE VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SPEC SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PLUS MINUS LPAR LOOP_ANNOT LONG LBRACE INT INC_OP IF IDENTIFIER GOTO FOR FLOAT EXTERN EXL EOF ENUM DOUBLE DO DEFAULT DEC_OP DECL CONTINUE CONSTANT CONST CODE_ANNOT CHAR CASE BREAK AUTO AMP ]
-- On SEMICOLON shift to state 362

State 362:
declaration -> SPEC declaration_specifiers init_declarator_list attributes_opt SEMICOLON . [ WHILE VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SPEC SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PLUS MINUS LPAR LOOP_ANNOT LONG LBRACE INT INC_OP IF IDENTIFIER GOTO FOR FLOAT EXTERN EXL EOF ENUM DOUBLE DO DEFAULT DEC_OP DECL CONTINUE CONSTANT CONST CODE_ANNOT CHAR CASE BREAK AUTO AMP ]
-- On WHILE reduce production declaration -> SPEC declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On VOLATILE reduce production declaration -> SPEC declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On VOID reduce production declaration -> SPEC declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On UNSIGNED reduce production declaration -> SPEC declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On UNION reduce production declaration -> SPEC declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On TYPE_NAME reduce production declaration -> SPEC declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On TYPEDEF reduce production declaration -> SPEC declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On TILDE reduce production declaration -> SPEC declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On SWITCH reduce production declaration -> SPEC declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On STRUCT reduce production declaration -> SPEC declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On STRING_LITERAL reduce production declaration -> SPEC declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On STATIC reduce production declaration -> SPEC declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On STAR reduce production declaration -> SPEC declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On SPEC reduce production declaration -> SPEC declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On SIZEOF reduce production declaration -> SPEC declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On SIGNED reduce production declaration -> SPEC declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On SHORT reduce production declaration -> SPEC declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On SEMICOLON reduce production declaration -> SPEC declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On RETURN reduce production declaration -> SPEC declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On RESTRICT reduce production declaration -> SPEC declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On REGISTER reduce production declaration -> SPEC declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On RBRACE reduce production declaration -> SPEC declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On PLUS reduce production declaration -> SPEC declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On MINUS reduce production declaration -> SPEC declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On LPAR reduce production declaration -> SPEC declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On LOOP_ANNOT reduce production declaration -> SPEC declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On LONG reduce production declaration -> SPEC declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On LBRACE reduce production declaration -> SPEC declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On INT reduce production declaration -> SPEC declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On INC_OP reduce production declaration -> SPEC declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On IF reduce production declaration -> SPEC declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On IDENTIFIER reduce production declaration -> SPEC declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On GOTO reduce production declaration -> SPEC declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On FOR reduce production declaration -> SPEC declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On FLOAT reduce production declaration -> SPEC declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On EXTERN reduce production declaration -> SPEC declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On EXL reduce production declaration -> SPEC declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On EOF reduce production declaration -> SPEC declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On ENUM reduce production declaration -> SPEC declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On DOUBLE reduce production declaration -> SPEC declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On DO reduce production declaration -> SPEC declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On DEFAULT reduce production declaration -> SPEC declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On DEC_OP reduce production declaration -> SPEC declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On DECL reduce production declaration -> SPEC declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On CONTINUE reduce production declaration -> SPEC declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On CONSTANT reduce production declaration -> SPEC declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On CONST reduce production declaration -> SPEC declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On CODE_ANNOT reduce production declaration -> SPEC declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On CHAR reduce production declaration -> SPEC declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On CASE reduce production declaration -> SPEC declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On BREAK reduce production declaration -> SPEC declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On AUTO reduce production declaration -> SPEC declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On AMP reduce production declaration -> SPEC declaration_specifiers init_declarator_list attributes_opt SEMICOLON

State 363:
attributes -> attributes . attribute [ SEMICOLON ATTRIBUTE ]
attributes_opt -> attributes . [ SEMICOLON ]
-- On ATTRIBUTE shift to state 346
-- On attribute shift to state 364
-- On SEMICOLON reduce production attributes_opt -> attributes

State 364:
attributes -> attributes attribute . [ SEMICOLON ATTRIBUTE ]
-- On SEMICOLON reduce production attributes -> attributes attribute
-- On ATTRIBUTE reduce production attributes -> attributes attribute

State 365:
attributes -> attribute . [ SEMICOLON ATTRIBUTE ]
-- On SEMICOLON reduce production attributes -> attribute
-- On ATTRIBUTE reduce production attributes -> attribute

State 366:
init_declarator_list -> init_declarator . [ SEMICOLON COMMA ATTRIBUTE ]
-- On SEMICOLON reduce production init_declarator_list -> init_declarator
-- On COMMA reduce production init_declarator_list -> init_declarator
-- On ATTRIBUTE reduce production init_declarator_list -> init_declarator

State 367:
compound_statement -> compound_statement_LBRACE RBRACE . [ WHILE VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SPEC SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PLUS MINUS LPAR LOOP_ANNOT LONG LBRACE INT INC_OP IF IDENTIFIER GOTO FOR FLOAT EXTERN EXL EOF ENUM ELSE DOUBLE DO DEFAULT DEC_OP DECL CONTINUE CONSTANT CONST CODE_ANNOT CHAR CASE BREAK AUTO AMP ]
-- On WHILE reduce production compound_statement -> compound_statement_LBRACE RBRACE
-- On VOLATILE reduce production compound_statement -> compound_statement_LBRACE RBRACE
-- On VOID reduce production compound_statement -> compound_statement_LBRACE RBRACE
-- On UNSIGNED reduce production compound_statement -> compound_statement_LBRACE RBRACE
-- On UNION reduce production compound_statement -> compound_statement_LBRACE RBRACE
-- On TYPE_NAME reduce production compound_statement -> compound_statement_LBRACE RBRACE
-- On TYPEDEF reduce production compound_statement -> compound_statement_LBRACE RBRACE
-- On TILDE reduce production compound_statement -> compound_statement_LBRACE RBRACE
-- On SWITCH reduce production compound_statement -> compound_statement_LBRACE RBRACE
-- On STRUCT reduce production compound_statement -> compound_statement_LBRACE RBRACE
-- On STRING_LITERAL reduce production compound_statement -> compound_statement_LBRACE RBRACE
-- On STATIC reduce production compound_statement -> compound_statement_LBRACE RBRACE
-- On STAR reduce production compound_statement -> compound_statement_LBRACE RBRACE
-- On SPEC reduce production compound_statement -> compound_statement_LBRACE RBRACE
-- On SIZEOF reduce production compound_statement -> compound_statement_LBRACE RBRACE
-- On SIGNED reduce production compound_statement -> compound_statement_LBRACE RBRACE
-- On SHORT reduce production compound_statement -> compound_statement_LBRACE RBRACE
-- On SEMICOLON reduce production compound_statement -> compound_statement_LBRACE RBRACE
-- On RETURN reduce production compound_statement -> compound_statement_LBRACE RBRACE
-- On RESTRICT reduce production compound_statement -> compound_statement_LBRACE RBRACE
-- On REGISTER reduce production compound_statement -> compound_statement_LBRACE RBRACE
-- On RBRACE reduce production compound_statement -> compound_statement_LBRACE RBRACE
-- On PLUS reduce production compound_statement -> compound_statement_LBRACE RBRACE
-- On MINUS reduce production compound_statement -> compound_statement_LBRACE RBRACE
-- On LPAR reduce production compound_statement -> compound_statement_LBRACE RBRACE
-- On LOOP_ANNOT reduce production compound_statement -> compound_statement_LBRACE RBRACE
-- On LONG reduce production compound_statement -> compound_statement_LBRACE RBRACE
-- On LBRACE reduce production compound_statement -> compound_statement_LBRACE RBRACE
-- On INT reduce production compound_statement -> compound_statement_LBRACE RBRACE
-- On INC_OP reduce production compound_statement -> compound_statement_LBRACE RBRACE
-- On IF reduce production compound_statement -> compound_statement_LBRACE RBRACE
-- On IDENTIFIER reduce production compound_statement -> compound_statement_LBRACE RBRACE
-- On GOTO reduce production compound_statement -> compound_statement_LBRACE RBRACE
-- On FOR reduce production compound_statement -> compound_statement_LBRACE RBRACE
-- On FLOAT reduce production compound_statement -> compound_statement_LBRACE RBRACE
-- On EXTERN reduce production compound_statement -> compound_statement_LBRACE RBRACE
-- On EXL reduce production compound_statement -> compound_statement_LBRACE RBRACE
-- On EOF reduce production compound_statement -> compound_statement_LBRACE RBRACE
-- On ENUM reduce production compound_statement -> compound_statement_LBRACE RBRACE
-- On ELSE reduce production compound_statement -> compound_statement_LBRACE RBRACE
-- On DOUBLE reduce production compound_statement -> compound_statement_LBRACE RBRACE
-- On DO reduce production compound_statement -> compound_statement_LBRACE RBRACE
-- On DEFAULT reduce production compound_statement -> compound_statement_LBRACE RBRACE
-- On DEC_OP reduce production compound_statement -> compound_statement_LBRACE RBRACE
-- On DECL reduce production compound_statement -> compound_statement_LBRACE RBRACE
-- On CONTINUE reduce production compound_statement -> compound_statement_LBRACE RBRACE
-- On CONSTANT reduce production compound_statement -> compound_statement_LBRACE RBRACE
-- On CONST reduce production compound_statement -> compound_statement_LBRACE RBRACE
-- On CODE_ANNOT reduce production compound_statement -> compound_statement_LBRACE RBRACE
-- On CHAR reduce production compound_statement -> compound_statement_LBRACE RBRACE
-- On CASE reduce production compound_statement -> compound_statement_LBRACE RBRACE
-- On BREAK reduce production compound_statement -> compound_statement_LBRACE RBRACE
-- On AUTO reduce production compound_statement -> compound_statement_LBRACE RBRACE
-- On AMP reduce production compound_statement -> compound_statement_LBRACE RBRACE

State 368:
declaration -> DECL . [ WHILE VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SPEC SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PLUS MINUS LPAR LOOP_ANNOT LONG LBRACE INT INC_OP IF IDENTIFIER GOTO FOR FLOAT EXTERN EXL EOF ENUM DOUBLE DO DEFAULT DEC_OP DECL CONTINUE CONSTANT CONST CODE_ANNOT CHAR CASE BREAK AUTO AMP ]
-- On WHILE reduce production declaration -> DECL
-- On VOLATILE reduce production declaration -> DECL
-- On VOID reduce production declaration -> DECL
-- On UNSIGNED reduce production declaration -> DECL
-- On UNION reduce production declaration -> DECL
-- On TYPE_NAME reduce production declaration -> DECL
-- On TYPEDEF reduce production declaration -> DECL
-- On TILDE reduce production declaration -> DECL
-- On SWITCH reduce production declaration -> DECL
-- On STRUCT reduce production declaration -> DECL
-- On STRING_LITERAL reduce production declaration -> DECL
-- On STATIC reduce production declaration -> DECL
-- On STAR reduce production declaration -> DECL
-- On SPEC reduce production declaration -> DECL
-- On SIZEOF reduce production declaration -> DECL
-- On SIGNED reduce production declaration -> DECL
-- On SHORT reduce production declaration -> DECL
-- On SEMICOLON reduce production declaration -> DECL
-- On RETURN reduce production declaration -> DECL
-- On RESTRICT reduce production declaration -> DECL
-- On REGISTER reduce production declaration -> DECL
-- On RBRACE reduce production declaration -> DECL
-- On PLUS reduce production declaration -> DECL
-- On MINUS reduce production declaration -> DECL
-- On LPAR reduce production declaration -> DECL
-- On LOOP_ANNOT reduce production declaration -> DECL
-- On LONG reduce production declaration -> DECL
-- On LBRACE reduce production declaration -> DECL
-- On INT reduce production declaration -> DECL
-- On INC_OP reduce production declaration -> DECL
-- On IF reduce production declaration -> DECL
-- On IDENTIFIER reduce production declaration -> DECL
-- On GOTO reduce production declaration -> DECL
-- On FOR reduce production declaration -> DECL
-- On FLOAT reduce production declaration -> DECL
-- On EXTERN reduce production declaration -> DECL
-- On EXL reduce production declaration -> DECL
-- On EOF reduce production declaration -> DECL
-- On ENUM reduce production declaration -> DECL
-- On DOUBLE reduce production declaration -> DECL
-- On DO reduce production declaration -> DECL
-- On DEFAULT reduce production declaration -> DECL
-- On DEC_OP reduce production declaration -> DECL
-- On DECL reduce production declaration -> DECL
-- On CONTINUE reduce production declaration -> DECL
-- On CONSTANT reduce production declaration -> DECL
-- On CONST reduce production declaration -> DECL
-- On CODE_ANNOT reduce production declaration -> DECL
-- On CHAR reduce production declaration -> DECL
-- On CASE reduce production declaration -> DECL
-- On BREAK reduce production declaration -> DECL
-- On AUTO reduce production declaration -> DECL
-- On AMP reduce production declaration -> DECL

State 369:
compound_statement -> compound_statement_LBRACE statement_list . RBRACE [ WHILE VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SPEC SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PLUS MINUS LPAR LOOP_ANNOT LONG LBRACE INT INC_OP IF IDENTIFIER GOTO FOR FLOAT EXTERN EXL EOF ENUM ELSE DOUBLE DO DEFAULT DEC_OP DECL CONTINUE CONSTANT CONST CODE_ANNOT CHAR CASE BREAK AUTO AMP ]
statement_list -> statement_list . statement [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
-- On TYPE_NAME shift to state 22
-- On TILDE shift to state 28
-- On SWITCH shift to state 261
-- On STRING_LITERAL shift to state 29
-- On STAR shift to state 30
-- On SPEC shift to state 265
-- On SIZEOF shift to state 31
-- On SEMICOLON shift to state 266
-- On RETURN shift to state 267
-- On RBRACE shift to state 370
-- On PLUS shift to state 32
-- On MINUS shift to state 33
-- On LPAR shift to state 36
-- On LOOP_ANNOT shift to state 271
-- On LBRACE shift to state 259
-- On INC_OP shift to state 39
-- On IF shift to state 272
-- On IDENTIFIER shift to state 276
-- On GOTO shift to state 277
-- On EXL shift to state 42
-- On DEFAULT shift to state 280
-- On DEC_OP shift to state 43
-- On CONTINUE shift to state 282
-- On CONSTANT shift to state 44
-- On CODE_ANNOT shift to state 284
-- On CASE shift to state 285
-- On BREAK shift to state 288
-- On AMP shift to state 45
-- On unary_operator shift to state 46
-- On unary_expression shift to state 53
-- On statement shift to state 371
-- On shift_expression shift to state 66
-- On selection_statement shift to state 291
-- On relational_expression shift to state 83
-- On primary_expression shift to state 48
-- On postfix_expression shift to state 49
-- On multiplicative_expression shift to state 68
-- On loop_annot shift to state 292
-- On logical_or_expression shift to state 93
-- On logical_and_expression shift to state 95
-- On labeled_statement shift to state 298
-- On jump_statement shift to state 299
-- On iteration_statement shift to state 300
-- On inclusive_or_expression shift to state 111
-- On identifier shift to state 301
-- On expression_statement shift to state 304
-- On expression shift to state 305
-- On exclusive_or_expression shift to state 110
-- On equality_expression shift to state 101
-- On conditional_expression shift to state 114
-- On compound_statement_LBRACE shift to state 260
-- On compound_statement shift to state 307
-- On cast_expression shift to state 75
-- On assignment_expression shift to state 118
-- On and_expression shift to state 109
-- On additive_expression shift to state 86
-- On WHILE reduce production loop_annot ->
-- On FOR reduce production loop_annot ->
-- On DO reduce production loop_annot ->

State 370:
compound_statement -> compound_statement_LBRACE statement_list RBRACE . [ WHILE VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SPEC SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PLUS MINUS LPAR LOOP_ANNOT LONG LBRACE INT INC_OP IF IDENTIFIER GOTO FOR FLOAT EXTERN EXL EOF ENUM ELSE DOUBLE DO DEFAULT DEC_OP DECL CONTINUE CONSTANT CONST CODE_ANNOT CHAR CASE BREAK AUTO AMP ]
-- On WHILE reduce production compound_statement -> compound_statement_LBRACE statement_list RBRACE
-- On VOLATILE reduce production compound_statement -> compound_statement_LBRACE statement_list RBRACE
-- On VOID reduce production compound_statement -> compound_statement_LBRACE statement_list RBRACE
-- On UNSIGNED reduce production compound_statement -> compound_statement_LBRACE statement_list RBRACE
-- On UNION reduce production compound_statement -> compound_statement_LBRACE statement_list RBRACE
-- On TYPE_NAME reduce production compound_statement -> compound_statement_LBRACE statement_list RBRACE
-- On TYPEDEF reduce production compound_statement -> compound_statement_LBRACE statement_list RBRACE
-- On TILDE reduce production compound_statement -> compound_statement_LBRACE statement_list RBRACE
-- On SWITCH reduce production compound_statement -> compound_statement_LBRACE statement_list RBRACE
-- On STRUCT reduce production compound_statement -> compound_statement_LBRACE statement_list RBRACE
-- On STRING_LITERAL reduce production compound_statement -> compound_statement_LBRACE statement_list RBRACE
-- On STATIC reduce production compound_statement -> compound_statement_LBRACE statement_list RBRACE
-- On STAR reduce production compound_statement -> compound_statement_LBRACE statement_list RBRACE
-- On SPEC reduce production compound_statement -> compound_statement_LBRACE statement_list RBRACE
-- On SIZEOF reduce production compound_statement -> compound_statement_LBRACE statement_list RBRACE
-- On SIGNED reduce production compound_statement -> compound_statement_LBRACE statement_list RBRACE
-- On SHORT reduce production compound_statement -> compound_statement_LBRACE statement_list RBRACE
-- On SEMICOLON reduce production compound_statement -> compound_statement_LBRACE statement_list RBRACE
-- On RETURN reduce production compound_statement -> compound_statement_LBRACE statement_list RBRACE
-- On RESTRICT reduce production compound_statement -> compound_statement_LBRACE statement_list RBRACE
-- On REGISTER reduce production compound_statement -> compound_statement_LBRACE statement_list RBRACE
-- On RBRACE reduce production compound_statement -> compound_statement_LBRACE statement_list RBRACE
-- On PLUS reduce production compound_statement -> compound_statement_LBRACE statement_list RBRACE
-- On MINUS reduce production compound_statement -> compound_statement_LBRACE statement_list RBRACE
-- On LPAR reduce production compound_statement -> compound_statement_LBRACE statement_list RBRACE
-- On LOOP_ANNOT reduce production compound_statement -> compound_statement_LBRACE statement_list RBRACE
-- On LONG reduce production compound_statement -> compound_statement_LBRACE statement_list RBRACE
-- On LBRACE reduce production compound_statement -> compound_statement_LBRACE statement_list RBRACE
-- On INT reduce production compound_statement -> compound_statement_LBRACE statement_list RBRACE
-- On INC_OP reduce production compound_statement -> compound_statement_LBRACE statement_list RBRACE
-- On IF reduce production compound_statement -> compound_statement_LBRACE statement_list RBRACE
-- On IDENTIFIER reduce production compound_statement -> compound_statement_LBRACE statement_list RBRACE
-- On GOTO reduce production compound_statement -> compound_statement_LBRACE statement_list RBRACE
-- On FOR reduce production compound_statement -> compound_statement_LBRACE statement_list RBRACE
-- On FLOAT reduce production compound_statement -> compound_statement_LBRACE statement_list RBRACE
-- On EXTERN reduce production compound_statement -> compound_statement_LBRACE statement_list RBRACE
-- On EXL reduce production compound_statement -> compound_statement_LBRACE statement_list RBRACE
-- On EOF reduce production compound_statement -> compound_statement_LBRACE statement_list RBRACE
-- On ENUM reduce production compound_statement -> compound_statement_LBRACE statement_list RBRACE
-- On ELSE reduce production compound_statement -> compound_statement_LBRACE statement_list RBRACE
-- On DOUBLE reduce production compound_statement -> compound_statement_LBRACE statement_list RBRACE
-- On DO reduce production compound_statement -> compound_statement_LBRACE statement_list RBRACE
-- On DEFAULT reduce production compound_statement -> compound_statement_LBRACE statement_list RBRACE
-- On DEC_OP reduce production compound_statement -> compound_statement_LBRACE statement_list RBRACE
-- On DECL reduce production compound_statement -> compound_statement_LBRACE statement_list RBRACE
-- On CONTINUE reduce production compound_statement -> compound_statement_LBRACE statement_list RBRACE
-- On CONSTANT reduce production compound_statement -> compound_statement_LBRACE statement_list RBRACE
-- On CONST reduce production compound_statement -> compound_statement_LBRACE statement_list RBRACE
-- On CODE_ANNOT reduce production compound_statement -> compound_statement_LBRACE statement_list RBRACE
-- On CHAR reduce production compound_statement -> compound_statement_LBRACE statement_list RBRACE
-- On CASE reduce production compound_statement -> compound_statement_LBRACE statement_list RBRACE
-- On BREAK reduce production compound_statement -> compound_statement_LBRACE statement_list RBRACE
-- On AUTO reduce production compound_statement -> compound_statement_LBRACE statement_list RBRACE
-- On AMP reduce production compound_statement -> compound_statement_LBRACE statement_list RBRACE

State 371:
statement_list -> statement_list statement . [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
-- On WHILE reduce production statement_list -> statement_list statement
-- On TYPE_NAME reduce production statement_list -> statement_list statement
-- On TILDE reduce production statement_list -> statement_list statement
-- On SWITCH reduce production statement_list -> statement_list statement
-- On STRING_LITERAL reduce production statement_list -> statement_list statement
-- On STAR reduce production statement_list -> statement_list statement
-- On SPEC reduce production statement_list -> statement_list statement
-- On SIZEOF reduce production statement_list -> statement_list statement
-- On SEMICOLON reduce production statement_list -> statement_list statement
-- On RETURN reduce production statement_list -> statement_list statement
-- On RBRACE reduce production statement_list -> statement_list statement
-- On PLUS reduce production statement_list -> statement_list statement
-- On MINUS reduce production statement_list -> statement_list statement
-- On LPAR reduce production statement_list -> statement_list statement
-- On LOOP_ANNOT reduce production statement_list -> statement_list statement
-- On LBRACE reduce production statement_list -> statement_list statement
-- On INC_OP reduce production statement_list -> statement_list statement
-- On IF reduce production statement_list -> statement_list statement
-- On IDENTIFIER reduce production statement_list -> statement_list statement
-- On GOTO reduce production statement_list -> statement_list statement
-- On FOR reduce production statement_list -> statement_list statement
-- On EXL reduce production statement_list -> statement_list statement
-- On DO reduce production statement_list -> statement_list statement
-- On DEFAULT reduce production statement_list -> statement_list statement
-- On DEC_OP reduce production statement_list -> statement_list statement
-- On CONTINUE reduce production statement_list -> statement_list statement
-- On CONSTANT reduce production statement_list -> statement_list statement
-- On CODE_ANNOT reduce production statement_list -> statement_list statement
-- On CASE reduce production statement_list -> statement_list statement
-- On BREAK reduce production statement_list -> statement_list statement
-- On AMP reduce production statement_list -> statement_list statement

State 372:
statement_list -> statement . [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
-- On WHILE reduce production statement_list -> statement
-- On TYPE_NAME reduce production statement_list -> statement
-- On TILDE reduce production statement_list -> statement
-- On SWITCH reduce production statement_list -> statement
-- On STRING_LITERAL reduce production statement_list -> statement
-- On STAR reduce production statement_list -> statement
-- On SPEC reduce production statement_list -> statement
-- On SIZEOF reduce production statement_list -> statement
-- On SEMICOLON reduce production statement_list -> statement
-- On RETURN reduce production statement_list -> statement
-- On RBRACE reduce production statement_list -> statement
-- On PLUS reduce production statement_list -> statement
-- On MINUS reduce production statement_list -> statement
-- On LPAR reduce production statement_list -> statement
-- On LOOP_ANNOT reduce production statement_list -> statement
-- On LBRACE reduce production statement_list -> statement
-- On INC_OP reduce production statement_list -> statement
-- On IF reduce production statement_list -> statement
-- On IDENTIFIER reduce production statement_list -> statement
-- On GOTO reduce production statement_list -> statement
-- On FOR reduce production statement_list -> statement
-- On EXL reduce production statement_list -> statement
-- On DO reduce production statement_list -> statement
-- On DEFAULT reduce production statement_list -> statement
-- On DEC_OP reduce production statement_list -> statement
-- On CONTINUE reduce production statement_list -> statement
-- On CONSTANT reduce production statement_list -> statement
-- On CODE_ANNOT reduce production statement_list -> statement
-- On CASE reduce production statement_list -> statement
-- On BREAK reduce production statement_list -> statement
-- On AMP reduce production statement_list -> statement

State 373:
declaration -> declaration_specifiers . SEMICOLON [ WHILE VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SPEC SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PLUS MINUS LPAR LOOP_ANNOT LONG LBRACE INT INC_OP IF IDENTIFIER GOTO FOR FLOAT EXTERN EXL ENUM DOUBLE DO DEFAULT DEC_OP DECL CONTINUE CONSTANT CONST CODE_ANNOT CHAR CASE BREAK AUTO AMP ]
declaration -> declaration_specifiers . init_declarator_list attributes_opt SEMICOLON [ WHILE VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SPEC SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PLUS MINUS LPAR LOOP_ANNOT LONG LBRACE INT INC_OP IF IDENTIFIER GOTO FOR FLOAT EXTERN EXL ENUM DOUBLE DO DEFAULT DEC_OP DECL CONTINUE CONSTANT CONST CODE_ANNOT CHAR CASE BREAK AUTO AMP ]
-- On TYPE_NAME shift to state 22
-- On STAR shift to state 9
-- On SEMICOLON shift to state 374
-- On LPAR shift to state 21
-- On IDENTIFIER shift to state 23
-- On pointer shift to state 24
-- On init_declarator_list shift to state 375
-- On init_declarator shift to state 366
-- On identifier shift to state 25
-- On direct_declarator shift to state 178
-- On declarator shift to state 335

State 374:
declaration -> declaration_specifiers SEMICOLON . [ WHILE VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SPEC SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PLUS MINUS LPAR LOOP_ANNOT LONG LBRACE INT INC_OP IF IDENTIFIER GOTO FOR FLOAT EXTERN EXL EOF ENUM DOUBLE DO DEFAULT DEC_OP DECL CONTINUE CONSTANT CONST CODE_ANNOT CHAR CASE BREAK AUTO AMP ]
-- On WHILE reduce production declaration -> declaration_specifiers SEMICOLON
-- On VOLATILE reduce production declaration -> declaration_specifiers SEMICOLON
-- On VOID reduce production declaration -> declaration_specifiers SEMICOLON
-- On UNSIGNED reduce production declaration -> declaration_specifiers SEMICOLON
-- On UNION reduce production declaration -> declaration_specifiers SEMICOLON
-- On TYPE_NAME reduce production declaration -> declaration_specifiers SEMICOLON
-- On TYPEDEF reduce production declaration -> declaration_specifiers SEMICOLON
-- On TILDE reduce production declaration -> declaration_specifiers SEMICOLON
-- On SWITCH reduce production declaration -> declaration_specifiers SEMICOLON
-- On STRUCT reduce production declaration -> declaration_specifiers SEMICOLON
-- On STRING_LITERAL reduce production declaration -> declaration_specifiers SEMICOLON
-- On STATIC reduce production declaration -> declaration_specifiers SEMICOLON
-- On STAR reduce production declaration -> declaration_specifiers SEMICOLON
-- On SPEC reduce production declaration -> declaration_specifiers SEMICOLON
-- On SIZEOF reduce production declaration -> declaration_specifiers SEMICOLON
-- On SIGNED reduce production declaration -> declaration_specifiers SEMICOLON
-- On SHORT reduce production declaration -> declaration_specifiers SEMICOLON
-- On SEMICOLON reduce production declaration -> declaration_specifiers SEMICOLON
-- On RETURN reduce production declaration -> declaration_specifiers SEMICOLON
-- On RESTRICT reduce production declaration -> declaration_specifiers SEMICOLON
-- On REGISTER reduce production declaration -> declaration_specifiers SEMICOLON
-- On RBRACE reduce production declaration -> declaration_specifiers SEMICOLON
-- On PLUS reduce production declaration -> declaration_specifiers SEMICOLON
-- On MINUS reduce production declaration -> declaration_specifiers SEMICOLON
-- On LPAR reduce production declaration -> declaration_specifiers SEMICOLON
-- On LOOP_ANNOT reduce production declaration -> declaration_specifiers SEMICOLON
-- On LONG reduce production declaration -> declaration_specifiers SEMICOLON
-- On LBRACE reduce production declaration -> declaration_specifiers SEMICOLON
-- On INT reduce production declaration -> declaration_specifiers SEMICOLON
-- On INC_OP reduce production declaration -> declaration_specifiers SEMICOLON
-- On IF reduce production declaration -> declaration_specifiers SEMICOLON
-- On IDENTIFIER reduce production declaration -> declaration_specifiers SEMICOLON
-- On GOTO reduce production declaration -> declaration_specifiers SEMICOLON
-- On FOR reduce production declaration -> declaration_specifiers SEMICOLON
-- On FLOAT reduce production declaration -> declaration_specifiers SEMICOLON
-- On EXTERN reduce production declaration -> declaration_specifiers SEMICOLON
-- On EXL reduce production declaration -> declaration_specifiers SEMICOLON
-- On EOF reduce production declaration -> declaration_specifiers SEMICOLON
-- On ENUM reduce production declaration -> declaration_specifiers SEMICOLON
-- On DOUBLE reduce production declaration -> declaration_specifiers SEMICOLON
-- On DO reduce production declaration -> declaration_specifiers SEMICOLON
-- On DEFAULT reduce production declaration -> declaration_specifiers SEMICOLON
-- On DEC_OP reduce production declaration -> declaration_specifiers SEMICOLON
-- On DECL reduce production declaration -> declaration_specifiers SEMICOLON
-- On CONTINUE reduce production declaration -> declaration_specifiers SEMICOLON
-- On CONSTANT reduce production declaration -> declaration_specifiers SEMICOLON
-- On CONST reduce production declaration -> declaration_specifiers SEMICOLON
-- On CODE_ANNOT reduce production declaration -> declaration_specifiers SEMICOLON
-- On CHAR reduce production declaration -> declaration_specifiers SEMICOLON
-- On CASE reduce production declaration -> declaration_specifiers SEMICOLON
-- On BREAK reduce production declaration -> declaration_specifiers SEMICOLON
-- On AUTO reduce production declaration -> declaration_specifiers SEMICOLON
-- On AMP reduce production declaration -> declaration_specifiers SEMICOLON

State 375:
declaration -> declaration_specifiers init_declarator_list . attributes_opt SEMICOLON [ WHILE VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SPEC SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PLUS MINUS LPAR LOOP_ANNOT LONG LBRACE INT INC_OP IF IDENTIFIER GOTO FOR FLOAT EXTERN EXL EOF ENUM DOUBLE DO DEFAULT DEC_OP DECL CONTINUE CONSTANT CONST CODE_ANNOT CHAR CASE BREAK AUTO AMP ]
init_declarator_list -> init_declarator_list . COMMA init_declarator [ SEMICOLON COMMA ATTRIBUTE ]
-- On COMMA shift to state 333
-- On ATTRIBUTE shift to state 346
-- On attributes_opt shift to state 376
-- On attributes shift to state 363
-- On attribute shift to state 365
-- On SEMICOLON reduce production attributes_opt ->

State 376:
declaration -> declaration_specifiers init_declarator_list attributes_opt . SEMICOLON [ WHILE VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SPEC SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PLUS MINUS LPAR LOOP_ANNOT LONG LBRACE INT INC_OP IF IDENTIFIER GOTO FOR FLOAT EXTERN EXL EOF ENUM DOUBLE DO DEFAULT DEC_OP DECL CONTINUE CONSTANT CONST CODE_ANNOT CHAR CASE BREAK AUTO AMP ]
-- On SEMICOLON shift to state 377

State 377:
declaration -> declaration_specifiers init_declarator_list attributes_opt SEMICOLON . [ WHILE VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SPEC SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PLUS MINUS LPAR LOOP_ANNOT LONG LBRACE INT INC_OP IF IDENTIFIER GOTO FOR FLOAT EXTERN EXL EOF ENUM DOUBLE DO DEFAULT DEC_OP DECL CONTINUE CONSTANT CONST CODE_ANNOT CHAR CASE BREAK AUTO AMP ]
-- On WHILE reduce production declaration -> declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On VOLATILE reduce production declaration -> declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On VOID reduce production declaration -> declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On UNSIGNED reduce production declaration -> declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On UNION reduce production declaration -> declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On TYPE_NAME reduce production declaration -> declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On TYPEDEF reduce production declaration -> declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On TILDE reduce production declaration -> declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On SWITCH reduce production declaration -> declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On STRUCT reduce production declaration -> declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On STRING_LITERAL reduce production declaration -> declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On STATIC reduce production declaration -> declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On STAR reduce production declaration -> declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On SPEC reduce production declaration -> declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On SIZEOF reduce production declaration -> declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On SIGNED reduce production declaration -> declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On SHORT reduce production declaration -> declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On SEMICOLON reduce production declaration -> declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On RETURN reduce production declaration -> declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On RESTRICT reduce production declaration -> declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On REGISTER reduce production declaration -> declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On RBRACE reduce production declaration -> declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On PLUS reduce production declaration -> declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On MINUS reduce production declaration -> declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On LPAR reduce production declaration -> declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On LOOP_ANNOT reduce production declaration -> declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On LONG reduce production declaration -> declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On LBRACE reduce production declaration -> declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On INT reduce production declaration -> declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On INC_OP reduce production declaration -> declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On IF reduce production declaration -> declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On IDENTIFIER reduce production declaration -> declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On GOTO reduce production declaration -> declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On FOR reduce production declaration -> declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On FLOAT reduce production declaration -> declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On EXTERN reduce production declaration -> declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On EXL reduce production declaration -> declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On EOF reduce production declaration -> declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On ENUM reduce production declaration -> declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On DOUBLE reduce production declaration -> declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On DO reduce production declaration -> declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On DEFAULT reduce production declaration -> declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On DEC_OP reduce production declaration -> declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On DECL reduce production declaration -> declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On CONTINUE reduce production declaration -> declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On CONSTANT reduce production declaration -> declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On CONST reduce production declaration -> declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On CODE_ANNOT reduce production declaration -> declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On CHAR reduce production declaration -> declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On CASE reduce production declaration -> declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On BREAK reduce production declaration -> declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On AUTO reduce production declaration -> declaration_specifiers init_declarator_list attributes_opt SEMICOLON
-- On AMP reduce production declaration -> declaration_specifiers init_declarator_list attributes_opt SEMICOLON

State 378:
compound_statement -> compound_statement_LBRACE declaration_list . RBRACE [ WHILE VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SPEC SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PLUS MINUS LPAR LOOP_ANNOT LONG LBRACE INT INC_OP IF IDENTIFIER GOTO FOR FLOAT EXTERN EXL EOF ENUM ELSE DOUBLE DO DEFAULT DEC_OP DECL CONTINUE CONSTANT CONST CODE_ANNOT CHAR CASE BREAK AUTO AMP ]
compound_statement -> compound_statement_LBRACE declaration_list . statement_list RBRACE [ WHILE VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SPEC SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PLUS MINUS LPAR LOOP_ANNOT LONG LBRACE INT INC_OP IF IDENTIFIER GOTO FOR FLOAT EXTERN EXL EOF ENUM ELSE DOUBLE DO DEFAULT DEC_OP DECL CONTINUE CONSTANT CONST CODE_ANNOT CHAR CASE BREAK AUTO AMP ]
declaration_list -> declaration_list . declaration [ WHILE VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SPEC SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PLUS MINUS LPAR LOOP_ANNOT LONG LBRACE INT INC_OP IF IDENTIFIER GOTO FOR FLOAT EXTERN EXL ENUM DOUBLE DO DEFAULT DEC_OP DECL CONTINUE CONSTANT CONST CODE_ANNOT CHAR CASE BREAK AUTO AMP ]
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPE_NAME shift to state 5
-- On TYPEDEF shift to state 6
-- On TILDE shift to state 28
-- On SWITCH shift to state 261
-- On STRUCT shift to state 7
-- On STRING_LITERAL shift to state 29
-- On STATIC shift to state 8
-- On STAR shift to state 30
-- On SPEC shift to state 330
-- On SIZEOF shift to state 31
-- On SIGNED shift to state 18
-- On SHORT shift to state 19
-- On SEMICOLON shift to state 266
-- On RETURN shift to state 267
-- On RESTRICT shift to state 10
-- On REGISTER shift to state 20
-- On RBRACE shift to state 379
-- On PLUS shift to state 32
-- On MINUS shift to state 33
-- On LPAR shift to state 36
-- On LOOP_ANNOT shift to state 271
-- On LONG shift to state 37
-- On LBRACE shift to state 259
-- On INT shift to state 38
-- On INC_OP shift to state 39
-- On IF shift to state 272
-- On IDENTIFIER shift to state 276
-- On GOTO shift to state 277
-- On FLOAT shift to state 140
-- On EXTERN shift to state 182
-- On EXL shift to state 42
-- On ENUM shift to state 141
-- On DOUBLE shift to state 156
-- On DEFAULT shift to state 280
-- On DEC_OP shift to state 43
-- On DECL shift to state 368
-- On CONTINUE shift to state 282
-- On CONSTANT shift to state 44
-- On CONST shift to state 11
-- On CODE_ANNOT shift to state 284
-- On CHAR shift to state 157
-- On CASE shift to state 285
-- On BREAK shift to state 288
-- On AUTO shift to state 183
-- On AMP shift to state 45
-- On unary_operator shift to state 46
-- On unary_expression shift to state 53
-- On type_specifier_no_name shift to state 158
-- On type_specifier shift to state 184
-- On type_qualifier shift to state 187
-- On struct_or_union_specifier shift to state 162
-- On struct_or_union shift to state 163
-- On storage_class_specifier shift to state 188
-- On statement_list shift to state 380
-- On statement shift to state 372
-- On shift_expression shift to state 66
-- On selection_statement shift to state 291
-- On relational_expression shift to state 83
-- On primary_expression shift to state 48
-- On postfix_expression shift to state 49
-- On multiplicative_expression shift to state 68
-- On loop_annot shift to state 292
-- On logical_or_expression shift to state 93
-- On logical_and_expression shift to state 95
-- On labeled_statement shift to state 298
-- On jump_statement shift to state 299
-- On iteration_statement shift to state 300
-- On inclusive_or_expression shift to state 111
-- On identifier shift to state 301
-- On expression_statement shift to state 304
-- On expression shift to state 305
-- On exclusive_or_expression shift to state 110
-- On equality_expression shift to state 101
-- On enum_specifier shift to state 167
-- On declaration_specifiers shift to state 373
-- On declaration shift to state 382
-- On conditional_expression shift to state 114
-- On compound_statement_LBRACE shift to state 260
-- On compound_statement shift to state 307
-- On cast_expression shift to state 75
-- On assignment_expression shift to state 118
-- On and_expression shift to state 109
-- On additive_expression shift to state 86
-- On WHILE reduce production loop_annot ->
-- On FOR reduce production loop_annot ->
-- On DO reduce production loop_annot ->

State 379:
compound_statement -> compound_statement_LBRACE declaration_list RBRACE . [ WHILE VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SPEC SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PLUS MINUS LPAR LOOP_ANNOT LONG LBRACE INT INC_OP IF IDENTIFIER GOTO FOR FLOAT EXTERN EXL EOF ENUM ELSE DOUBLE DO DEFAULT DEC_OP DECL CONTINUE CONSTANT CONST CODE_ANNOT CHAR CASE BREAK AUTO AMP ]
-- On WHILE reduce production compound_statement -> compound_statement_LBRACE declaration_list RBRACE
-- On VOLATILE reduce production compound_statement -> compound_statement_LBRACE declaration_list RBRACE
-- On VOID reduce production compound_statement -> compound_statement_LBRACE declaration_list RBRACE
-- On UNSIGNED reduce production compound_statement -> compound_statement_LBRACE declaration_list RBRACE
-- On UNION reduce production compound_statement -> compound_statement_LBRACE declaration_list RBRACE
-- On TYPE_NAME reduce production compound_statement -> compound_statement_LBRACE declaration_list RBRACE
-- On TYPEDEF reduce production compound_statement -> compound_statement_LBRACE declaration_list RBRACE
-- On TILDE reduce production compound_statement -> compound_statement_LBRACE declaration_list RBRACE
-- On SWITCH reduce production compound_statement -> compound_statement_LBRACE declaration_list RBRACE
-- On STRUCT reduce production compound_statement -> compound_statement_LBRACE declaration_list RBRACE
-- On STRING_LITERAL reduce production compound_statement -> compound_statement_LBRACE declaration_list RBRACE
-- On STATIC reduce production compound_statement -> compound_statement_LBRACE declaration_list RBRACE
-- On STAR reduce production compound_statement -> compound_statement_LBRACE declaration_list RBRACE
-- On SPEC reduce production compound_statement -> compound_statement_LBRACE declaration_list RBRACE
-- On SIZEOF reduce production compound_statement -> compound_statement_LBRACE declaration_list RBRACE
-- On SIGNED reduce production compound_statement -> compound_statement_LBRACE declaration_list RBRACE
-- On SHORT reduce production compound_statement -> compound_statement_LBRACE declaration_list RBRACE
-- On SEMICOLON reduce production compound_statement -> compound_statement_LBRACE declaration_list RBRACE
-- On RETURN reduce production compound_statement -> compound_statement_LBRACE declaration_list RBRACE
-- On RESTRICT reduce production compound_statement -> compound_statement_LBRACE declaration_list RBRACE
-- On REGISTER reduce production compound_statement -> compound_statement_LBRACE declaration_list RBRACE
-- On RBRACE reduce production compound_statement -> compound_statement_LBRACE declaration_list RBRACE
-- On PLUS reduce production compound_statement -> compound_statement_LBRACE declaration_list RBRACE
-- On MINUS reduce production compound_statement -> compound_statement_LBRACE declaration_list RBRACE
-- On LPAR reduce production compound_statement -> compound_statement_LBRACE declaration_list RBRACE
-- On LOOP_ANNOT reduce production compound_statement -> compound_statement_LBRACE declaration_list RBRACE
-- On LONG reduce production compound_statement -> compound_statement_LBRACE declaration_list RBRACE
-- On LBRACE reduce production compound_statement -> compound_statement_LBRACE declaration_list RBRACE
-- On INT reduce production compound_statement -> compound_statement_LBRACE declaration_list RBRACE
-- On INC_OP reduce production compound_statement -> compound_statement_LBRACE declaration_list RBRACE
-- On IF reduce production compound_statement -> compound_statement_LBRACE declaration_list RBRACE
-- On IDENTIFIER reduce production compound_statement -> compound_statement_LBRACE declaration_list RBRACE
-- On GOTO reduce production compound_statement -> compound_statement_LBRACE declaration_list RBRACE
-- On FOR reduce production compound_statement -> compound_statement_LBRACE declaration_list RBRACE
-- On FLOAT reduce production compound_statement -> compound_statement_LBRACE declaration_list RBRACE
-- On EXTERN reduce production compound_statement -> compound_statement_LBRACE declaration_list RBRACE
-- On EXL reduce production compound_statement -> compound_statement_LBRACE declaration_list RBRACE
-- On EOF reduce production compound_statement -> compound_statement_LBRACE declaration_list RBRACE
-- On ENUM reduce production compound_statement -> compound_statement_LBRACE declaration_list RBRACE
-- On ELSE reduce production compound_statement -> compound_statement_LBRACE declaration_list RBRACE
-- On DOUBLE reduce production compound_statement -> compound_statement_LBRACE declaration_list RBRACE
-- On DO reduce production compound_statement -> compound_statement_LBRACE declaration_list RBRACE
-- On DEFAULT reduce production compound_statement -> compound_statement_LBRACE declaration_list RBRACE
-- On DEC_OP reduce production compound_statement -> compound_statement_LBRACE declaration_list RBRACE
-- On DECL reduce production compound_statement -> compound_statement_LBRACE declaration_list RBRACE
-- On CONTINUE reduce production compound_statement -> compound_statement_LBRACE declaration_list RBRACE
-- On CONSTANT reduce production compound_statement -> compound_statement_LBRACE declaration_list RBRACE
-- On CONST reduce production compound_statement -> compound_statement_LBRACE declaration_list RBRACE
-- On CODE_ANNOT reduce production compound_statement -> compound_statement_LBRACE declaration_list RBRACE
-- On CHAR reduce production compound_statement -> compound_statement_LBRACE declaration_list RBRACE
-- On CASE reduce production compound_statement -> compound_statement_LBRACE declaration_list RBRACE
-- On BREAK reduce production compound_statement -> compound_statement_LBRACE declaration_list RBRACE
-- On AUTO reduce production compound_statement -> compound_statement_LBRACE declaration_list RBRACE
-- On AMP reduce production compound_statement -> compound_statement_LBRACE declaration_list RBRACE

State 380:
compound_statement -> compound_statement_LBRACE declaration_list statement_list . RBRACE [ WHILE VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SPEC SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PLUS MINUS LPAR LOOP_ANNOT LONG LBRACE INT INC_OP IF IDENTIFIER GOTO FOR FLOAT EXTERN EXL EOF ENUM ELSE DOUBLE DO DEFAULT DEC_OP DECL CONTINUE CONSTANT CONST CODE_ANNOT CHAR CASE BREAK AUTO AMP ]
statement_list -> statement_list . statement [ WHILE TYPE_NAME TILDE SWITCH STRING_LITERAL STAR SPEC SIZEOF SEMICOLON RETURN RBRACE PLUS MINUS LPAR LOOP_ANNOT LBRACE INC_OP IF IDENTIFIER GOTO FOR EXL DO DEFAULT DEC_OP CONTINUE CONSTANT CODE_ANNOT CASE BREAK AMP ]
-- On TYPE_NAME shift to state 22
-- On TILDE shift to state 28
-- On SWITCH shift to state 261
-- On STRING_LITERAL shift to state 29
-- On STAR shift to state 30
-- On SPEC shift to state 265
-- On SIZEOF shift to state 31
-- On SEMICOLON shift to state 266
-- On RETURN shift to state 267
-- On RBRACE shift to state 381
-- On PLUS shift to state 32
-- On MINUS shift to state 33
-- On LPAR shift to state 36
-- On LOOP_ANNOT shift to state 271
-- On LBRACE shift to state 259
-- On INC_OP shift to state 39
-- On IF shift to state 272
-- On IDENTIFIER shift to state 276
-- On GOTO shift to state 277
-- On EXL shift to state 42
-- On DEFAULT shift to state 280
-- On DEC_OP shift to state 43
-- On CONTINUE shift to state 282
-- On CONSTANT shift to state 44
-- On CODE_ANNOT shift to state 284
-- On CASE shift to state 285
-- On BREAK shift to state 288
-- On AMP shift to state 45
-- On unary_operator shift to state 46
-- On unary_expression shift to state 53
-- On statement shift to state 371
-- On shift_expression shift to state 66
-- On selection_statement shift to state 291
-- On relational_expression shift to state 83
-- On primary_expression shift to state 48
-- On postfix_expression shift to state 49
-- On multiplicative_expression shift to state 68
-- On loop_annot shift to state 292
-- On logical_or_expression shift to state 93
-- On logical_and_expression shift to state 95
-- On labeled_statement shift to state 298
-- On jump_statement shift to state 299
-- On iteration_statement shift to state 300
-- On inclusive_or_expression shift to state 111
-- On identifier shift to state 301
-- On expression_statement shift to state 304
-- On expression shift to state 305
-- On exclusive_or_expression shift to state 110
-- On equality_expression shift to state 101
-- On conditional_expression shift to state 114
-- On compound_statement_LBRACE shift to state 260
-- On compound_statement shift to state 307
-- On cast_expression shift to state 75
-- On assignment_expression shift to state 118
-- On and_expression shift to state 109
-- On additive_expression shift to state 86
-- On WHILE reduce production loop_annot ->
-- On FOR reduce production loop_annot ->
-- On DO reduce production loop_annot ->

State 381:
compound_statement -> compound_statement_LBRACE declaration_list statement_list RBRACE . [ WHILE VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SPEC SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PLUS MINUS LPAR LOOP_ANNOT LONG LBRACE INT INC_OP IF IDENTIFIER GOTO FOR FLOAT EXTERN EXL EOF ENUM ELSE DOUBLE DO DEFAULT DEC_OP DECL CONTINUE CONSTANT CONST CODE_ANNOT CHAR CASE BREAK AUTO AMP ]
-- On WHILE reduce production compound_statement -> compound_statement_LBRACE declaration_list statement_list RBRACE
-- On VOLATILE reduce production compound_statement -> compound_statement_LBRACE declaration_list statement_list RBRACE
-- On VOID reduce production compound_statement -> compound_statement_LBRACE declaration_list statement_list RBRACE
-- On UNSIGNED reduce production compound_statement -> compound_statement_LBRACE declaration_list statement_list RBRACE
-- On UNION reduce production compound_statement -> compound_statement_LBRACE declaration_list statement_list RBRACE
-- On TYPE_NAME reduce production compound_statement -> compound_statement_LBRACE declaration_list statement_list RBRACE
-- On TYPEDEF reduce production compound_statement -> compound_statement_LBRACE declaration_list statement_list RBRACE
-- On TILDE reduce production compound_statement -> compound_statement_LBRACE declaration_list statement_list RBRACE
-- On SWITCH reduce production compound_statement -> compound_statement_LBRACE declaration_list statement_list RBRACE
-- On STRUCT reduce production compound_statement -> compound_statement_LBRACE declaration_list statement_list RBRACE
-- On STRING_LITERAL reduce production compound_statement -> compound_statement_LBRACE declaration_list statement_list RBRACE
-- On STATIC reduce production compound_statement -> compound_statement_LBRACE declaration_list statement_list RBRACE
-- On STAR reduce production compound_statement -> compound_statement_LBRACE declaration_list statement_list RBRACE
-- On SPEC reduce production compound_statement -> compound_statement_LBRACE declaration_list statement_list RBRACE
-- On SIZEOF reduce production compound_statement -> compound_statement_LBRACE declaration_list statement_list RBRACE
-- On SIGNED reduce production compound_statement -> compound_statement_LBRACE declaration_list statement_list RBRACE
-- On SHORT reduce production compound_statement -> compound_statement_LBRACE declaration_list statement_list RBRACE
-- On SEMICOLON reduce production compound_statement -> compound_statement_LBRACE declaration_list statement_list RBRACE
-- On RETURN reduce production compound_statement -> compound_statement_LBRACE declaration_list statement_list RBRACE
-- On RESTRICT reduce production compound_statement -> compound_statement_LBRACE declaration_list statement_list RBRACE
-- On REGISTER reduce production compound_statement -> compound_statement_LBRACE declaration_list statement_list RBRACE
-- On RBRACE reduce production compound_statement -> compound_statement_LBRACE declaration_list statement_list RBRACE
-- On PLUS reduce production compound_statement -> compound_statement_LBRACE declaration_list statement_list RBRACE
-- On MINUS reduce production compound_statement -> compound_statement_LBRACE declaration_list statement_list RBRACE
-- On LPAR reduce production compound_statement -> compound_statement_LBRACE declaration_list statement_list RBRACE
-- On LOOP_ANNOT reduce production compound_statement -> compound_statement_LBRACE declaration_list statement_list RBRACE
-- On LONG reduce production compound_statement -> compound_statement_LBRACE declaration_list statement_list RBRACE
-- On LBRACE reduce production compound_statement -> compound_statement_LBRACE declaration_list statement_list RBRACE
-- On INT reduce production compound_statement -> compound_statement_LBRACE declaration_list statement_list RBRACE
-- On INC_OP reduce production compound_statement -> compound_statement_LBRACE declaration_list statement_list RBRACE
-- On IF reduce production compound_statement -> compound_statement_LBRACE declaration_list statement_list RBRACE
-- On IDENTIFIER reduce production compound_statement -> compound_statement_LBRACE declaration_list statement_list RBRACE
-- On GOTO reduce production compound_statement -> compound_statement_LBRACE declaration_list statement_list RBRACE
-- On FOR reduce production compound_statement -> compound_statement_LBRACE declaration_list statement_list RBRACE
-- On FLOAT reduce production compound_statement -> compound_statement_LBRACE declaration_list statement_list RBRACE
-- On EXTERN reduce production compound_statement -> compound_statement_LBRACE declaration_list statement_list RBRACE
-- On EXL reduce production compound_statement -> compound_statement_LBRACE declaration_list statement_list RBRACE
-- On EOF reduce production compound_statement -> compound_statement_LBRACE declaration_list statement_list RBRACE
-- On ENUM reduce production compound_statement -> compound_statement_LBRACE declaration_list statement_list RBRACE
-- On ELSE reduce production compound_statement -> compound_statement_LBRACE declaration_list statement_list RBRACE
-- On DOUBLE reduce production compound_statement -> compound_statement_LBRACE declaration_list statement_list RBRACE
-- On DO reduce production compound_statement -> compound_statement_LBRACE declaration_list statement_list RBRACE
-- On DEFAULT reduce production compound_statement -> compound_statement_LBRACE declaration_list statement_list RBRACE
-- On DEC_OP reduce production compound_statement -> compound_statement_LBRACE declaration_list statement_list RBRACE
-- On DECL reduce production compound_statement -> compound_statement_LBRACE declaration_list statement_list RBRACE
-- On CONTINUE reduce production compound_statement -> compound_statement_LBRACE declaration_list statement_list RBRACE
-- On CONSTANT reduce production compound_statement -> compound_statement_LBRACE declaration_list statement_list RBRACE
-- On CONST reduce production compound_statement -> compound_statement_LBRACE declaration_list statement_list RBRACE
-- On CODE_ANNOT reduce production compound_statement -> compound_statement_LBRACE declaration_list statement_list RBRACE
-- On CHAR reduce production compound_statement -> compound_statement_LBRACE declaration_list statement_list RBRACE
-- On CASE reduce production compound_statement -> compound_statement_LBRACE declaration_list statement_list RBRACE
-- On BREAK reduce production compound_statement -> compound_statement_LBRACE declaration_list statement_list RBRACE
-- On AUTO reduce production compound_statement -> compound_statement_LBRACE declaration_list statement_list RBRACE
-- On AMP reduce production compound_statement -> compound_statement_LBRACE declaration_list statement_list RBRACE

State 382:
declaration_list -> declaration_list declaration . [ WHILE VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SPEC SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PLUS MINUS LPAR LOOP_ANNOT LONG LBRACE INT INC_OP IF IDENTIFIER GOTO FOR FLOAT EXTERN EXL ENUM DOUBLE DO DEFAULT DEC_OP DECL CONTINUE CONSTANT CONST CODE_ANNOT CHAR CASE BREAK AUTO AMP ]
-- On WHILE reduce production declaration_list -> declaration_list declaration
-- On VOLATILE reduce production declaration_list -> declaration_list declaration
-- On VOID reduce production declaration_list -> declaration_list declaration
-- On UNSIGNED reduce production declaration_list -> declaration_list declaration
-- On UNION reduce production declaration_list -> declaration_list declaration
-- On TYPE_NAME reduce production declaration_list -> declaration_list declaration
-- On TYPEDEF reduce production declaration_list -> declaration_list declaration
-- On TILDE reduce production declaration_list -> declaration_list declaration
-- On SWITCH reduce production declaration_list -> declaration_list declaration
-- On STRUCT reduce production declaration_list -> declaration_list declaration
-- On STRING_LITERAL reduce production declaration_list -> declaration_list declaration
-- On STATIC reduce production declaration_list -> declaration_list declaration
-- On STAR reduce production declaration_list -> declaration_list declaration
-- On SPEC reduce production declaration_list -> declaration_list declaration
-- On SIZEOF reduce production declaration_list -> declaration_list declaration
-- On SIGNED reduce production declaration_list -> declaration_list declaration
-- On SHORT reduce production declaration_list -> declaration_list declaration
-- On SEMICOLON reduce production declaration_list -> declaration_list declaration
-- On RETURN reduce production declaration_list -> declaration_list declaration
-- On RESTRICT reduce production declaration_list -> declaration_list declaration
-- On REGISTER reduce production declaration_list -> declaration_list declaration
-- On RBRACE reduce production declaration_list -> declaration_list declaration
-- On PLUS reduce production declaration_list -> declaration_list declaration
-- On MINUS reduce production declaration_list -> declaration_list declaration
-- On LPAR reduce production declaration_list -> declaration_list declaration
-- On LOOP_ANNOT reduce production declaration_list -> declaration_list declaration
-- On LONG reduce production declaration_list -> declaration_list declaration
-- On LBRACE reduce production declaration_list -> declaration_list declaration
-- On INT reduce production declaration_list -> declaration_list declaration
-- On INC_OP reduce production declaration_list -> declaration_list declaration
-- On IF reduce production declaration_list -> declaration_list declaration
-- On IDENTIFIER reduce production declaration_list -> declaration_list declaration
-- On GOTO reduce production declaration_list -> declaration_list declaration
-- On FOR reduce production declaration_list -> declaration_list declaration
-- On FLOAT reduce production declaration_list -> declaration_list declaration
-- On EXTERN reduce production declaration_list -> declaration_list declaration
-- On EXL reduce production declaration_list -> declaration_list declaration
-- On ENUM reduce production declaration_list -> declaration_list declaration
-- On DOUBLE reduce production declaration_list -> declaration_list declaration
-- On DO reduce production declaration_list -> declaration_list declaration
-- On DEFAULT reduce production declaration_list -> declaration_list declaration
-- On DEC_OP reduce production declaration_list -> declaration_list declaration
-- On DECL reduce production declaration_list -> declaration_list declaration
-- On CONTINUE reduce production declaration_list -> declaration_list declaration
-- On CONSTANT reduce production declaration_list -> declaration_list declaration
-- On CONST reduce production declaration_list -> declaration_list declaration
-- On CODE_ANNOT reduce production declaration_list -> declaration_list declaration
-- On CHAR reduce production declaration_list -> declaration_list declaration
-- On CASE reduce production declaration_list -> declaration_list declaration
-- On BREAK reduce production declaration_list -> declaration_list declaration
-- On AUTO reduce production declaration_list -> declaration_list declaration
-- On AMP reduce production declaration_list -> declaration_list declaration

State 383:
declaration_list -> declaration . [ WHILE VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SPEC SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PLUS MINUS LPAR LOOP_ANNOT LONG LBRACE INT INC_OP IF IDENTIFIER GOTO FOR FLOAT EXTERN EXL ENUM DOUBLE DO DEFAULT DEC_OP DECL CONTINUE CONSTANT CONST CODE_ANNOT CHAR CASE BREAK AUTO AMP ]
-- On WHILE reduce production declaration_list -> declaration
-- On VOLATILE reduce production declaration_list -> declaration
-- On VOID reduce production declaration_list -> declaration
-- On UNSIGNED reduce production declaration_list -> declaration
-- On UNION reduce production declaration_list -> declaration
-- On TYPE_NAME reduce production declaration_list -> declaration
-- On TYPEDEF reduce production declaration_list -> declaration
-- On TILDE reduce production declaration_list -> declaration
-- On SWITCH reduce production declaration_list -> declaration
-- On STRUCT reduce production declaration_list -> declaration
-- On STRING_LITERAL reduce production declaration_list -> declaration
-- On STATIC reduce production declaration_list -> declaration
-- On STAR reduce production declaration_list -> declaration
-- On SPEC reduce production declaration_list -> declaration
-- On SIZEOF reduce production declaration_list -> declaration
-- On SIGNED reduce production declaration_list -> declaration
-- On SHORT reduce production declaration_list -> declaration
-- On SEMICOLON reduce production declaration_list -> declaration
-- On RETURN reduce production declaration_list -> declaration
-- On RESTRICT reduce production declaration_list -> declaration
-- On REGISTER reduce production declaration_list -> declaration
-- On RBRACE reduce production declaration_list -> declaration
-- On PLUS reduce production declaration_list -> declaration
-- On MINUS reduce production declaration_list -> declaration
-- On LPAR reduce production declaration_list -> declaration
-- On LOOP_ANNOT reduce production declaration_list -> declaration
-- On LONG reduce production declaration_list -> declaration
-- On LBRACE reduce production declaration_list -> declaration
-- On INT reduce production declaration_list -> declaration
-- On INC_OP reduce production declaration_list -> declaration
-- On IF reduce production declaration_list -> declaration
-- On IDENTIFIER reduce production declaration_list -> declaration
-- On GOTO reduce production declaration_list -> declaration
-- On FOR reduce production declaration_list -> declaration
-- On FLOAT reduce production declaration_list -> declaration
-- On EXTERN reduce production declaration_list -> declaration
-- On EXL reduce production declaration_list -> declaration
-- On ENUM reduce production declaration_list -> declaration
-- On DOUBLE reduce production declaration_list -> declaration
-- On DO reduce production declaration_list -> declaration
-- On DEFAULT reduce production declaration_list -> declaration
-- On DEC_OP reduce production declaration_list -> declaration
-- On DECL reduce production declaration_list -> declaration
-- On CONTINUE reduce production declaration_list -> declaration
-- On CONSTANT reduce production declaration_list -> declaration
-- On CONST reduce production declaration_list -> declaration
-- On CODE_ANNOT reduce production declaration_list -> declaration
-- On CHAR reduce production declaration_list -> declaration
-- On CASE reduce production declaration_list -> declaration
-- On BREAK reduce production declaration_list -> declaration
-- On AUTO reduce production declaration_list -> declaration
-- On AMP reduce production declaration_list -> declaration

State 384:
function_definition -> SPEC function_prototype compound_statement . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SPEC SIGNED SHORT RESTRICT REGISTER LPAR LONG INT IDENTIFIER FLOAT EXTERN EOF ENUM DOUBLE DECL CONST CHAR AUTO ]
-- On VOLATILE reduce production function_definition -> SPEC function_prototype compound_statement
-- On VOID reduce production function_definition -> SPEC function_prototype compound_statement
-- On UNSIGNED reduce production function_definition -> SPEC function_prototype compound_statement
-- On UNION reduce production function_definition -> SPEC function_prototype compound_statement
-- On TYPE_NAME reduce production function_definition -> SPEC function_prototype compound_statement
-- On TYPEDEF reduce production function_definition -> SPEC function_prototype compound_statement
-- On STRUCT reduce production function_definition -> SPEC function_prototype compound_statement
-- On STATIC reduce production function_definition -> SPEC function_prototype compound_statement
-- On STAR reduce production function_definition -> SPEC function_prototype compound_statement
-- On SPEC reduce production function_definition -> SPEC function_prototype compound_statement
-- On SIGNED reduce production function_definition -> SPEC function_prototype compound_statement
-- On SHORT reduce production function_definition -> SPEC function_prototype compound_statement
-- On RESTRICT reduce production function_definition -> SPEC function_prototype compound_statement
-- On REGISTER reduce production function_definition -> SPEC function_prototype compound_statement
-- On LPAR reduce production function_definition -> SPEC function_prototype compound_statement
-- On LONG reduce production function_definition -> SPEC function_prototype compound_statement
-- On INT reduce production function_definition -> SPEC function_prototype compound_statement
-- On IDENTIFIER reduce production function_definition -> SPEC function_prototype compound_statement
-- On FLOAT reduce production function_definition -> SPEC function_prototype compound_statement
-- On EXTERN reduce production function_definition -> SPEC function_prototype compound_statement
-- On EOF reduce production function_definition -> SPEC function_prototype compound_statement
-- On ENUM reduce production function_definition -> SPEC function_prototype compound_statement
-- On DOUBLE reduce production function_definition -> SPEC function_prototype compound_statement
-- On DECL reduce production function_definition -> SPEC function_prototype compound_statement
-- On CONST reduce production function_definition -> SPEC function_prototype compound_statement
-- On CHAR reduce production function_definition -> SPEC function_prototype compound_statement
-- On AUTO reduce production function_definition -> SPEC function_prototype compound_statement

State 385:
function_prototype -> declarator . declaration_list [ LBRACE ]
function_prototype -> declarator . [ LBRACE ]
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPE_NAME shift to state 35
-- On TYPEDEF shift to state 6
-- On STRUCT shift to state 7
-- On STATIC shift to state 8
-- On SPEC shift to state 386
-- On SIGNED shift to state 18
-- On SHORT shift to state 19
-- On RESTRICT shift to state 10
-- On REGISTER shift to state 20
-- On LONG shift to state 37
-- On INT shift to state 38
-- On FLOAT shift to state 140
-- On EXTERN shift to state 182
-- On ENUM shift to state 141
-- On DOUBLE shift to state 156
-- On DECL shift to state 368
-- On CONST shift to state 11
-- On CHAR shift to state 157
-- On AUTO shift to state 183
-- On type_specifier_no_name shift to state 158
-- On type_specifier shift to state 184
-- On type_qualifier shift to state 187
-- On struct_or_union_specifier shift to state 162
-- On struct_or_union shift to state 163
-- On storage_class_specifier shift to state 188
-- On enum_specifier shift to state 167
-- On declaration_specifiers shift to state 373
-- On declaration_list shift to state 387
-- On declaration shift to state 383
-- On LBRACE reduce production function_prototype -> declarator

State 386:
declaration -> SPEC . declaration_specifiers init_declarator_list attributes_opt SEMICOLON [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC SPEC SIGNED SHORT RESTRICT REGISTER LONG LBRACE INT FLOAT EXTERN ENUM DOUBLE DECL CONST CHAR AUTO ]
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPE_NAME shift to state 35
-- On TYPEDEF shift to state 6
-- On STRUCT shift to state 7
-- On STATIC shift to state 8
-- On SIGNED shift to state 18
-- On SHORT shift to state 19
-- On RESTRICT shift to state 10
-- On REGISTER shift to state 20
-- On LONG shift to state 37
-- On INT shift to state 38
-- On FLOAT shift to state 140
-- On EXTERN shift to state 182
-- On ENUM shift to state 141
-- On DOUBLE shift to state 156
-- On CONST shift to state 11
-- On CHAR shift to state 157
-- On AUTO shift to state 183
-- On type_specifier_no_name shift to state 158
-- On type_specifier shift to state 184
-- On type_qualifier shift to state 187
-- On struct_or_union_specifier shift to state 162
-- On struct_or_union shift to state 163
-- On storage_class_specifier shift to state 188
-- On enum_specifier shift to state 167
-- On declaration_specifiers shift to state 331

State 387:
declaration_list -> declaration_list . declaration [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC SPEC SIGNED SHORT RESTRICT REGISTER LONG LBRACE INT FLOAT EXTERN ENUM DOUBLE DECL CONST CHAR AUTO ]
function_prototype -> declarator declaration_list . [ LBRACE ]
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPE_NAME shift to state 35
-- On TYPEDEF shift to state 6
-- On STRUCT shift to state 7
-- On STATIC shift to state 8
-- On SPEC shift to state 386
-- On SIGNED shift to state 18
-- On SHORT shift to state 19
-- On RESTRICT shift to state 10
-- On REGISTER shift to state 20
-- On LONG shift to state 37
-- On INT shift to state 38
-- On FLOAT shift to state 140
-- On EXTERN shift to state 182
-- On ENUM shift to state 141
-- On DOUBLE shift to state 156
-- On DECL shift to state 368
-- On CONST shift to state 11
-- On CHAR shift to state 157
-- On AUTO shift to state 183
-- On type_specifier_no_name shift to state 158
-- On type_specifier shift to state 184
-- On type_qualifier shift to state 187
-- On struct_or_union_specifier shift to state 162
-- On struct_or_union shift to state 163
-- On storage_class_specifier shift to state 188
-- On enum_specifier shift to state 167
-- On declaration_specifiers shift to state 373
-- On declaration shift to state 382
-- On LBRACE reduce production function_prototype -> declarator declaration_list

State 388:
declaration -> SPEC declaration_specifiers . init_declarator_list attributes_opt SEMICOLON [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SPEC SIGNED SHORT RESTRICT REGISTER LPAR LONG INT IDENTIFIER FLOAT EXTERN EOF ENUM DOUBLE DECL CONST CHAR AUTO ]
function_prototype -> declaration_specifiers . declarator declaration_list [ LBRACE ]
function_prototype -> declaration_specifiers . declarator [ LBRACE ]
-- On TYPE_NAME shift to state 22
-- On STAR shift to state 9
-- On LPAR shift to state 21
-- On IDENTIFIER shift to state 23
-- On pointer shift to state 24
-- On init_declarator_list shift to state 332
-- On init_declarator shift to state 366
-- On identifier shift to state 25
-- On direct_declarator shift to state 178
-- On declarator shift to state 389

State 389:
function_prototype -> declaration_specifiers declarator . declaration_list [ LBRACE ]
function_prototype -> declaration_specifiers declarator . [ LBRACE ]
init_declarator -> declarator . [ SEMICOLON COMMA ATTRIBUTE ]
init_declarator -> declarator . EQUAL c_initializer [ SEMICOLON COMMA ATTRIBUTE ]
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPE_NAME shift to state 35
-- On TYPEDEF shift to state 6
-- On STRUCT shift to state 7
-- On STATIC shift to state 8
-- On SPEC shift to state 386
-- On SIGNED shift to state 18
-- On SHORT shift to state 19
-- On RESTRICT shift to state 10
-- On REGISTER shift to state 20
-- On LONG shift to state 37
-- On INT shift to state 38
-- On FLOAT shift to state 140
-- On EXTERN shift to state 182
-- On EQUAL shift to state 336
-- On ENUM shift to state 141
-- On DOUBLE shift to state 156
-- On DECL shift to state 368
-- On CONST shift to state 11
-- On CHAR shift to state 157
-- On AUTO shift to state 183
-- On type_specifier_no_name shift to state 158
-- On type_specifier shift to state 184
-- On type_qualifier shift to state 187
-- On struct_or_union_specifier shift to state 162
-- On struct_or_union shift to state 163
-- On storage_class_specifier shift to state 188
-- On enum_specifier shift to state 167
-- On declaration_specifiers shift to state 373
-- On declaration_list shift to state 390
-- On declaration shift to state 383
-- On SEMICOLON reduce production init_declarator -> declarator
-- On LBRACE reduce production function_prototype -> declaration_specifiers declarator
-- On COMMA reduce production init_declarator -> declarator
-- On ATTRIBUTE reduce production init_declarator -> declarator

State 390:
declaration_list -> declaration_list . declaration [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC SPEC SIGNED SHORT RESTRICT REGISTER LONG LBRACE INT FLOAT EXTERN ENUM DOUBLE DECL CONST CHAR AUTO ]
function_prototype -> declaration_specifiers declarator declaration_list . [ LBRACE ]
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPE_NAME shift to state 35
-- On TYPEDEF shift to state 6
-- On STRUCT shift to state 7
-- On STATIC shift to state 8
-- On SPEC shift to state 386
-- On SIGNED shift to state 18
-- On SHORT shift to state 19
-- On RESTRICT shift to state 10
-- On REGISTER shift to state 20
-- On LONG shift to state 37
-- On INT shift to state 38
-- On FLOAT shift to state 140
-- On EXTERN shift to state 182
-- On ENUM shift to state 141
-- On DOUBLE shift to state 156
-- On DECL shift to state 368
-- On CONST shift to state 11
-- On CHAR shift to state 157
-- On AUTO shift to state 183
-- On type_specifier_no_name shift to state 158
-- On type_specifier shift to state 184
-- On type_qualifier shift to state 187
-- On struct_or_union_specifier shift to state 162
-- On struct_or_union shift to state 163
-- On storage_class_specifier shift to state 188
-- On enum_specifier shift to state 167
-- On declaration_specifiers shift to state 373
-- On declaration shift to state 382
-- On LBRACE reduce production function_prototype -> declaration_specifiers declarator declaration_list

State 391:
file -> EOF . [ # ]
-- On # reduce production file -> EOF

State 392:
file -> translation_unit . EOF [ # ]
translation_unit -> translation_unit . external_declaration [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SPEC SIGNED SHORT RESTRICT REGISTER LPAR LONG INT IDENTIFIER FLOAT EXTERN EOF ENUM DOUBLE DECL CONST CHAR AUTO ]
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On TYPE_NAME shift to state 5
-- On TYPEDEF shift to state 6
-- On STRUCT shift to state 7
-- On STATIC shift to state 8
-- On STAR shift to state 9
-- On SPEC shift to state 17
-- On SIGNED shift to state 18
-- On SHORT shift to state 19
-- On RESTRICT shift to state 10
-- On REGISTER shift to state 20
-- On LPAR shift to state 21
-- On LONG shift to state 37
-- On INT shift to state 38
-- On IDENTIFIER shift to state 23
-- On FLOAT shift to state 140
-- On EXTERN shift to state 182
-- On EOF shift to state 393
-- On ENUM shift to state 141
-- On DOUBLE shift to state 156
-- On DECL shift to state 368
-- On CONST shift to state 11
-- On CHAR shift to state 157
-- On AUTO shift to state 183
-- On type_specifier_no_name shift to state 158
-- On type_specifier shift to state 184
-- On type_qualifier shift to state 187
-- On struct_or_union_specifier shift to state 162
-- On struct_or_union shift to state 163
-- On storage_class_specifier shift to state 188
-- On pointer shift to state 24
-- On identifier shift to state 25
-- On function_prototype shift to state 394
-- On function_definition shift to state 396
-- On external_declaration shift to state 397
-- On enum_specifier shift to state 167
-- On direct_declarator shift to state 178
-- On declarator shift to state 385
-- On declaration_specifiers shift to state 398
-- On declaration shift to state 399

State 393:
file -> translation_unit EOF . [ # ]
-- On # reduce production file -> translation_unit EOF

State 394:
function_definition -> function_prototype . compound_statement [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SPEC SIGNED SHORT RESTRICT REGISTER LPAR LONG INT IDENTIFIER FLOAT EXTERN EOF ENUM DOUBLE DECL CONST CHAR AUTO ]
-- On LBRACE shift to state 259
-- On compound_statement_LBRACE shift to state 260
-- On compound_statement shift to state 395

State 395:
function_definition -> function_prototype compound_statement . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SPEC SIGNED SHORT RESTRICT REGISTER LPAR LONG INT IDENTIFIER FLOAT EXTERN EOF ENUM DOUBLE DECL CONST CHAR AUTO ]
-- On VOLATILE reduce production function_definition -> function_prototype compound_statement
-- On VOID reduce production function_definition -> function_prototype compound_statement
-- On UNSIGNED reduce production function_definition -> function_prototype compound_statement
-- On UNION reduce production function_definition -> function_prototype compound_statement
-- On TYPE_NAME reduce production function_definition -> function_prototype compound_statement
-- On TYPEDEF reduce production function_definition -> function_prototype compound_statement
-- On STRUCT reduce production function_definition -> function_prototype compound_statement
-- On STATIC reduce production function_definition -> function_prototype compound_statement
-- On STAR reduce production function_definition -> function_prototype compound_statement
-- On SPEC reduce production function_definition -> function_prototype compound_statement
-- On SIGNED reduce production function_definition -> function_prototype compound_statement
-- On SHORT reduce production function_definition -> function_prototype compound_statement
-- On RESTRICT reduce production function_definition -> function_prototype compound_statement
-- On REGISTER reduce production function_definition -> function_prototype compound_statement
-- On LPAR reduce production function_definition -> function_prototype compound_statement
-- On LONG reduce production function_definition -> function_prototype compound_statement
-- On INT reduce production function_definition -> function_prototype compound_statement
-- On IDENTIFIER reduce production function_definition -> function_prototype compound_statement
-- On FLOAT reduce production function_definition -> function_prototype compound_statement
-- On EXTERN reduce production function_definition -> function_prototype compound_statement
-- On EOF reduce production function_definition -> function_prototype compound_statement
-- On ENUM reduce production function_definition -> function_prototype compound_statement
-- On DOUBLE reduce production function_definition -> function_prototype compound_statement
-- On DECL reduce production function_definition -> function_prototype compound_statement
-- On CONST reduce production function_definition -> function_prototype compound_statement
-- On CHAR reduce production function_definition -> function_prototype compound_statement
-- On AUTO reduce production function_definition -> function_prototype compound_statement

State 396:
external_declaration -> function_definition . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SPEC SIGNED SHORT RESTRICT REGISTER LPAR LONG INT IDENTIFIER FLOAT EXTERN EOF ENUM DOUBLE DECL CONST CHAR AUTO ]
-- On VOLATILE reduce production external_declaration -> function_definition
-- On VOID reduce production external_declaration -> function_definition
-- On UNSIGNED reduce production external_declaration -> function_definition
-- On UNION reduce production external_declaration -> function_definition
-- On TYPE_NAME reduce production external_declaration -> function_definition
-- On TYPEDEF reduce production external_declaration -> function_definition
-- On STRUCT reduce production external_declaration -> function_definition
-- On STATIC reduce production external_declaration -> function_definition
-- On STAR reduce production external_declaration -> function_definition
-- On SPEC reduce production external_declaration -> function_definition
-- On SIGNED reduce production external_declaration -> function_definition
-- On SHORT reduce production external_declaration -> function_definition
-- On RESTRICT reduce production external_declaration -> function_definition
-- On REGISTER reduce production external_declaration -> function_definition
-- On LPAR reduce production external_declaration -> function_definition
-- On LONG reduce production external_declaration -> function_definition
-- On INT reduce production external_declaration -> function_definition
-- On IDENTIFIER reduce production external_declaration -> function_definition
-- On FLOAT reduce production external_declaration -> function_definition
-- On EXTERN reduce production external_declaration -> function_definition
-- On EOF reduce production external_declaration -> function_definition
-- On ENUM reduce production external_declaration -> function_definition
-- On DOUBLE reduce production external_declaration -> function_definition
-- On DECL reduce production external_declaration -> function_definition
-- On CONST reduce production external_declaration -> function_definition
-- On CHAR reduce production external_declaration -> function_definition
-- On AUTO reduce production external_declaration -> function_definition

State 397:
translation_unit -> translation_unit external_declaration . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SPEC SIGNED SHORT RESTRICT REGISTER LPAR LONG INT IDENTIFIER FLOAT EXTERN EOF ENUM DOUBLE DECL CONST CHAR AUTO ]
-- On VOLATILE reduce production translation_unit -> translation_unit external_declaration
-- On VOID reduce production translation_unit -> translation_unit external_declaration
-- On UNSIGNED reduce production translation_unit -> translation_unit external_declaration
-- On UNION reduce production translation_unit -> translation_unit external_declaration
-- On TYPE_NAME reduce production translation_unit -> translation_unit external_declaration
-- On TYPEDEF reduce production translation_unit -> translation_unit external_declaration
-- On STRUCT reduce production translation_unit -> translation_unit external_declaration
-- On STATIC reduce production translation_unit -> translation_unit external_declaration
-- On STAR reduce production translation_unit -> translation_unit external_declaration
-- On SPEC reduce production translation_unit -> translation_unit external_declaration
-- On SIGNED reduce production translation_unit -> translation_unit external_declaration
-- On SHORT reduce production translation_unit -> translation_unit external_declaration
-- On RESTRICT reduce production translation_unit -> translation_unit external_declaration
-- On REGISTER reduce production translation_unit -> translation_unit external_declaration
-- On LPAR reduce production translation_unit -> translation_unit external_declaration
-- On LONG reduce production translation_unit -> translation_unit external_declaration
-- On INT reduce production translation_unit -> translation_unit external_declaration
-- On IDENTIFIER reduce production translation_unit -> translation_unit external_declaration
-- On FLOAT reduce production translation_unit -> translation_unit external_declaration
-- On EXTERN reduce production translation_unit -> translation_unit external_declaration
-- On EOF reduce production translation_unit -> translation_unit external_declaration
-- On ENUM reduce production translation_unit -> translation_unit external_declaration
-- On DOUBLE reduce production translation_unit -> translation_unit external_declaration
-- On DECL reduce production translation_unit -> translation_unit external_declaration
-- On CONST reduce production translation_unit -> translation_unit external_declaration
-- On CHAR reduce production translation_unit -> translation_unit external_declaration
-- On AUTO reduce production translation_unit -> translation_unit external_declaration

State 398:
declaration -> declaration_specifiers . SEMICOLON [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SPEC SIGNED SHORT RESTRICT REGISTER LPAR LONG INT IDENTIFIER FLOAT EXTERN EOF ENUM DOUBLE DECL CONST CHAR AUTO ]
declaration -> declaration_specifiers . init_declarator_list attributes_opt SEMICOLON [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SPEC SIGNED SHORT RESTRICT REGISTER LPAR LONG INT IDENTIFIER FLOAT EXTERN EOF ENUM DOUBLE DECL CONST CHAR AUTO ]
function_prototype -> declaration_specifiers . declarator declaration_list [ LBRACE ]
function_prototype -> declaration_specifiers . declarator [ LBRACE ]
-- On TYPE_NAME shift to state 22
-- On STAR shift to state 9
-- On SEMICOLON shift to state 374
-- On LPAR shift to state 21
-- On IDENTIFIER shift to state 23
-- On pointer shift to state 24
-- On init_declarator_list shift to state 375
-- On init_declarator shift to state 366
-- On identifier shift to state 25
-- On direct_declarator shift to state 178
-- On declarator shift to state 389

State 399:
external_declaration -> declaration . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SPEC SIGNED SHORT RESTRICT REGISTER LPAR LONG INT IDENTIFIER FLOAT EXTERN EOF ENUM DOUBLE DECL CONST CHAR AUTO ]
-- On VOLATILE reduce production external_declaration -> declaration
-- On VOID reduce production external_declaration -> declaration
-- On UNSIGNED reduce production external_declaration -> declaration
-- On UNION reduce production external_declaration -> declaration
-- On TYPE_NAME reduce production external_declaration -> declaration
-- On TYPEDEF reduce production external_declaration -> declaration
-- On STRUCT reduce production external_declaration -> declaration
-- On STATIC reduce production external_declaration -> declaration
-- On STAR reduce production external_declaration -> declaration
-- On SPEC reduce production external_declaration -> declaration
-- On SIGNED reduce production external_declaration -> declaration
-- On SHORT reduce production external_declaration -> declaration
-- On RESTRICT reduce production external_declaration -> declaration
-- On REGISTER reduce production external_declaration -> declaration
-- On LPAR reduce production external_declaration -> declaration
-- On LONG reduce production external_declaration -> declaration
-- On INT reduce production external_declaration -> declaration
-- On IDENTIFIER reduce production external_declaration -> declaration
-- On FLOAT reduce production external_declaration -> declaration
-- On EXTERN reduce production external_declaration -> declaration
-- On EOF reduce production external_declaration -> declaration
-- On ENUM reduce production external_declaration -> declaration
-- On DOUBLE reduce production external_declaration -> declaration
-- On DECL reduce production external_declaration -> declaration
-- On CONST reduce production external_declaration -> declaration
-- On CHAR reduce production external_declaration -> declaration
-- On AUTO reduce production external_declaration -> declaration

State 400:
file' -> file . [ # ]
-- On # accept file

State 401:
translation_unit -> external_declaration . [ VOLATILE VOID UNSIGNED UNION TYPE_NAME TYPEDEF STRUCT STATIC STAR SPEC SIGNED SHORT RESTRICT REGISTER LPAR LONG INT IDENTIFIER FLOAT EXTERN EOF ENUM DOUBLE DECL CONST CHAR AUTO ]
-- On VOLATILE reduce production translation_unit -> external_declaration
-- On VOID reduce production translation_unit -> external_declaration
-- On UNSIGNED reduce production translation_unit -> external_declaration
-- On UNION reduce production translation_unit -> external_declaration
-- On TYPE_NAME reduce production translation_unit -> external_declaration
-- On TYPEDEF reduce production translation_unit -> external_declaration
-- On STRUCT reduce production translation_unit -> external_declaration
-- On STATIC reduce production translation_unit -> external_declaration
-- On STAR reduce production translation_unit -> external_declaration
-- On SPEC reduce production translation_unit -> external_declaration
-- On SIGNED reduce production translation_unit -> external_declaration
-- On SHORT reduce production translation_unit -> external_declaration
-- On RESTRICT reduce production translation_unit -> external_declaration
-- On REGISTER reduce production translation_unit -> external_declaration
-- On LPAR reduce production translation_unit -> external_declaration
-- On LONG reduce production translation_unit -> external_declaration
-- On INT reduce production translation_unit -> external_declaration
-- On IDENTIFIER reduce production translation_unit -> external_declaration
-- On FLOAT reduce production translation_unit -> external_declaration
-- On EXTERN reduce production translation_unit -> external_declaration
-- On EOF reduce production translation_unit -> external_declaration
-- On ENUM reduce production translation_unit -> external_declaration
-- On DOUBLE reduce production translation_unit -> external_declaration
-- On DECL reduce production translation_unit -> external_declaration
-- On CONST reduce production translation_unit -> external_declaration
-- On CHAR reduce production translation_unit -> external_declaration
-- On AUTO reduce production translation_unit -> external_declaration

