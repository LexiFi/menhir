Grammar has 6 nonterminal symbols, among which 1 start symbols.
Grammar has 7 terminal symbols.
Grammar has 13 productions.
nullable(term) = false
nullable(tensorproduct) = false
nullable(product) = false
nullable(fa4) = false
nullable(fa1) = false
nullable(exp) = false
first(term) = LPAREN INT
first(tensorproduct) = MATRIX LPAREN
first(product) = LPAREN INT
first(fa4) = MATRIX LPAREN
first(fa1) = LPAREN INT
first(exp) = LPAREN INT
minimal(term) = (* 1 *) INT
minimal(tensorproduct) = (* 1 *) MATRIX
minimal(product) = (* 1 *) INT
minimal(fa4) = (* 1 *) MATRIX
minimal(fa1) = (* 1 *) INT
minimal(exp) = (* 1 *) INT
follow(term) = RPAREN PLUS #
follow(tensorproduct) = TENSOR RPAREN PLUS #
follow(product) = TIMES RPAREN PLUS #
follow(fa4) = TENSOR RPAREN PLUS #
follow(fa1) = TIMES RPAREN PLUS #
follow(exp) = RPAREN #
Built an LR(0) automaton with 24 states.
The grammar is not SLR(1) -- 2 states have a conflict.
The construction mode is pager.
Built an LR(1) automaton with 25 states.
Warning: 2 states have reduce/reduce conflicts.
Warning: 6 reduce/reduce conflicts were arbitrarily resolved.
Warning: 13 end-of-stream conflicts were arbitrarily resolved.
File "yann.mly", line 28, characters 2-25:
Warning: production term -> term PLUS tensorproduct is never reduced.
Warning: in total, 1 production is never reduced.
9 out of 25 states have a default reduction.
7 out of 25 states are represented.
0 out of 16 symbols keep track of their start position.
0 out of 16 symbols keep track of their end position.
7 out of 14 productions exploit shiftreduce optimization.
0 out of 25 states can peek at an error.
75 functions before inlining, 16 functions after inlining.
