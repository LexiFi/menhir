File "zenon.0.8.4-parsecoq.mly", line 115, characters 7-13:
Warning: the token AMPER_ is unused.
File "zenon.0.8.4-parsecoq.mly", line 116, characters 7-19:
Warning: the token AMPER_AMPER_ is unused.
File "zenon.0.8.4-parsecoq.mly", line 113, characters 7-12:
Warning: the token BANG_ is unused.
File "zenon.0.8.4-parsecoq.mly", line 159, characters 7-15:
Warning: the token BAR_BAR_ is unused.
File "zenon.0.8.4-parsecoq.mly", line 158, characters 7-16:
Warning: the token BAR_DASH_ is unused.
File "zenon.0.8.4-parsecoq.mly", line 132, characters 7-19:
Warning: the token COLON_COLON_ is unused.
File "zenon.0.8.4-parsecoq.mly", line 135, characters 7-16:
Warning: the token COLON_GT_ is unused.
File "zenon.0.8.4-parsecoq.mly", line 133, characters 7-16:
Warning: the token COLON_LT_ is unused.
File "zenon.0.8.4-parsecoq.mly", line 124, characters 7-12:
Warning: the token DASH_ is unused.
File "zenon.0.8.4-parsecoq.mly", line 145, characters 7-18:
Warning: the token EQ_UNDER_D_ is unused.
File "zenon.0.8.4-parsecoq.mly", line 197, characters 16-19:
Warning: the token FQN is unused.
File "zenon.0.8.4-parsecoq.mly", line 146, characters 7-10:
Warning: the token GT_ is unused.
File "zenon.0.8.4-parsecoq.mly", line 147, characters 7-18:
Warning: the token GT_DASH_GT_ is unused.
File "zenon.0.8.4-parsecoq.mly", line 148, characters 7-13:
Warning: the token GT_EQ_ is unused.
File "zenon.0.8.4-parsecoq.mly", line 155, characters 7-11:
Warning: the token HAT_ is unused.
File "zenon.0.8.4-parsecoq.mly", line 152, characters 7-14:
Warning: the token LBRACK_ is unused.
File "zenon.0.8.4-parsecoq.mly", line 137, characters 7-10:
Warning: the token LT_ is unused.
File "zenon.0.8.4-parsecoq.mly", line 140, characters 7-16:
Warning: the token LT_COLON_ is unused.
File "zenon.0.8.4-parsecoq.mly", line 138, characters 7-15:
Warning: the token LT_DASH_ is unused.
File "zenon.0.8.4-parsecoq.mly", line 141, characters 7-13:
Warning: the token LT_EQ_ is unused.
File "zenon.0.8.4-parsecoq.mly", line 128, characters 7-21:
Warning: the token PERIOD_PERIOD_ is unused.
File "zenon.0.8.4-parsecoq.mly", line 121, characters 7-12:
Warning: the token PLUS_ is unused.
File "zenon.0.8.4-parsecoq.mly", line 122, characters 7-17:
Warning: the token PLUS_PLUS_ is unused.
File "zenon.0.8.4-parsecoq.mly", line 149, characters 7-13:
Warning: the token QUEST_ is unused.
File "zenon.0.8.4-parsecoq.mly", line 150, characters 7-16:
Warning: the token QUEST_EQ_ is unused.
File "zenon.0.8.4-parsecoq.mly", line 154, characters 7-14:
Warning: the token RBRACK_ is unused.
File "zenon.0.8.4-parsecoq.mly", line 136, characters 7-12:
Warning: the token SEMI_ is unused.
File "zenon.0.8.4-parsecoq.mly", line 129, characters 7-13:
Warning: the token SLASH_ is unused.
Grammar has 24 nonterminal symbols, among which 1 start symbols.
Grammar has 81 terminal symbols.
Grammar has 88 productions.
nullable(typ) = false
nullable(simplebinding) = false
nullable(proofheaders) = true
nullable(proof_head) = false
nullable(pattern) = false
nullable(pat_expr_list) = true
nullable(junk) = true
nullable(idlist) = true
nullable(id_or_expr) = false
nullable(hyp_def_list) = true
nullable(hyp_def) = false
nullable(fix) = false
nullable(file) = false
nullable(expr1_list) = false
nullable(expr1) = false
nullable(expr) = false
nullable(dep_hyp_def) = false
nullable(constr_type) = false
nullable(constr_list) = true
nullable(compact_args) = true
nullable(comma_expr_list) = false
nullable(bindings) = true
nullable(binding_list) = true
nullable(arg_type) = false
first(typ) = TRUE TILDE_ STRING NUM MATCH LPAREN_ LET IF IDENT FUN FORALL FALSE EXISTS AROBAS_
first(simplebinding) = IDENT COLON_
first(proofheaders) = BEGINHEADER
first(proof_head) = BEGINPROOF
first(pattern) = LPAREN_ IDENT
first(pat_expr_list) = BAR_
first(junk) = STAR_ PERIOD_LPAREN_ PERIOD_ PERCENT_ NUM LPAREN_RPAREN_ LPAREN_ IDENT COLON_
first(idlist) = IDENT
first(id_or_expr) = STRING IDENT
first(hyp_def_list) = PARAMETER MUSTUSE INDUCTIVE FUNCTION FIXPOINT DEPENDS DEFINITION
first(hyp_def) = PARAMETER INDUCTIVE FUNCTION FIXPOINT DEFINITION
first(fix) = FIX
first(file) = TRUE TILDE_ THEOREM STRING PARAMETER NUM MUSTUSE MATCH LPAREN_ LET INDUCTIVE IF IDENT FUNCTION FUN FORALL FIXPOINT FALSE EXISTS DEPENDS DEFINITION BEGINPROOF AROBAS_
first(expr1_list) = TRUE STRING NUM LPAREN_ IDENT FALSE
first(expr1) = TRUE STRING NUM LPAREN_ IDENT FALSE
first(expr) = TRUE TILDE_ STRING NUM MATCH LPAREN_ LET IF IDENT FUN FORALL FALSE EXISTS AROBAS_
first(dep_hyp_def) = PARAMETER MUSTUSE INDUCTIVE FUNCTION FIXPOINT DEPENDS DEFINITION
first(constr_type) = LPAREN_ IDENT
first(constr_list) = BAR_
first(compact_args) = LPAREN_
first(comma_expr_list) = COMMA_
first(bindings) = LPAREN_ IDENT COLON_
first(binding_list) = LPAREN_ IDENT
first(arg_type) = LPAREN_ IDENT
minimal(typ) = (* 1 *) IDENT
minimal(simplebinding) = (* 2 *) COLON_ IDENT
minimal(proofheaders) = (* 0 *)
minimal(proof_head) = (* 1 *) BEGINPROOF
minimal(pattern) = (* 1 *) IDENT
minimal(pat_expr_list) = (* 0 *)
minimal(junk) = (* 0 *)
minimal(idlist) = (* 0 *)
minimal(id_or_expr) = (* 1 *) IDENT
minimal(hyp_def_list) = (* 0 *)
minimal(hyp_def) = (* 5 *) PARAMETER IDENT COLON_ IDENT PERIOD_
minimal(fix) = (* 10 *) FIX IDENT LBRACE_ STRUCT IDENT RBRACE_ COLON_ IDENT COLON_EQ_ IDENT
minimal(file) = (* 2 *) IDENT EOF
minimal(expr1_list) = (* 1 *) IDENT
minimal(expr1) = (* 1 *) IDENT
minimal(expr) = (* 1 *) IDENT
minimal(dep_hyp_def) = (* 5 *) PARAMETER IDENT COLON_ IDENT PERIOD_
minimal(constr_type) = (* 1 *) IDENT
minimal(constr_list) = (* 0 *)
minimal(compact_args) = (* 0 *)
minimal(comma_expr_list) = (* 2 *) COMMA_ IDENT
minimal(bindings) = (* 0 *)
minimal(binding_list) = (* 0 *)
minimal(arg_type) = (* 1 *) IDENT
maximal(typ) = infinity
maximal(simplebinding) = infinity
maximal(proofheaders) = infinity
maximal(proof_head) = infinity
maximal(pattern) = infinity
maximal(pat_expr_list) = infinity
maximal(junk) = infinity
maximal(idlist) = infinity
maximal(id_or_expr) = 1
maximal(hyp_def_list) = infinity
maximal(hyp_def) = infinity
maximal(fix) = infinity
maximal(file) = infinity
maximal(expr1_list) = infinity
maximal(expr1) = infinity
maximal(expr) = infinity
maximal(dep_hyp_def) = infinity
maximal(constr_type) = infinity
maximal(constr_list) = infinity
maximal(compact_args) = infinity
maximal(comma_expr_list) = infinity
maximal(bindings) = infinity
maximal(binding_list) = infinity
maximal(arg_type) = infinity
follow(typ) = RPAREN_ LBRACE_ EQ_GT_ COMMA_ COLON_EQ_
follow(simplebinding) = RPAREN_ LBRACE_ EQ_GT_ COMMA_
follow(proofheaders) = TRUE TILDE_ THEOREM STRING PARAMETER NUM MUSTUSE MATCH LPAREN_ LET INDUCTIVE IF IDENT FUNCTION FUN FORALL FIXPOINT FALSE EXISTS DEPENDS DEFINITION BEGINNAME AROBAS_
follow(proof_head) = TRUE TILDE_ THEOREM STRING PARAMETER NUM MUSTUSE MATCH LPAREN_ LET INDUCTIVE IF IDENT FUNCTION FUN FORALL FIXPOINT FALSE EXISTS DEPENDS DEFINITION AROBAS_
follow(pattern) = RPAREN_ EQ_GT_
follow(pat_expr_list) = END
follow(junk) = RPAREN_ COLON_EQ_
follow(idlist) = RPAREN_ PERIOD_ EQ_GT_ DASH_GT_ COLON_ BAR_
follow(id_or_expr) = COLON_EQ_ COLON_
follow(hyp_def_list) = THEOREM EOF ENDPROOF
follow(hyp_def) = THEOREM PARAMETER MUSTUSE INDUCTIVE FUNCTION FIXPOINT EOF ENDPROOF DEPENDS DEFINITION
follow(fix) = IN
follow(file) = #
follow(expr1_list) = WITH THEN STAR_ SLASH_BACKSL_ RPAREN_ RBRACE_ PERIOD_ PERCENT_ PARAMETER MUSTUSE LT_GT_ LT_DASH_GT_ LBRACE_ INDUCTIVE IN FUNCTION FIXPOINT EQ_GT_ EQ_ EOF ENDPROOF END ELSE DEPENDS DEFINITION DASH_GT_ COMMA_ COLON_EQ_ BAR_ BACKSL_SLASH_
follow(expr1) = WITH TRUE THEN STRING STAR_ SLASH_BACKSL_ RPAREN_ RBRACE_ PERIOD_ PERCENT_ PARAMETER NUM MUSTUSE LT_GT_ LT_DASH_GT_ LPAREN_ LBRACE_ INDUCTIVE IN IDENT FUNCTION FIXPOINT FALSE EQ_GT_ EQ_ EOF ENDPROOF END ELSE DEPENDS DEFINITION DASH_GT_ COMMA_ COLON_EQ_ BAR_ BACKSL_SLASH_
follow(expr) = WITH THEN STAR_ SLASH_BACKSL_ RPAREN_ RBRACE_ PERIOD_ PERCENT_ PARAMETER MUSTUSE LT_GT_ LT_DASH_GT_ LBRACE_ INDUCTIVE IN FUNCTION FIXPOINT EQ_GT_ EQ_ EOF ENDPROOF END ELSE DEPENDS DEFINITION DASH_GT_ COMMA_ COLON_EQ_ BAR_ BACKSL_SLASH_
follow(dep_hyp_def) = THEOREM PARAMETER MUSTUSE INDUCTIVE FUNCTION FIXPOINT EOF ENDPROOF DEPENDS DEFINITION
follow(constr_type) = RPAREN_ PERIOD_ BAR_
follow(constr_list) = PERIOD_
follow(compact_args) = LBRACE_ COLON_
follow(comma_expr_list) = RPAREN_
follow(bindings) = LBRACE_ EQ_GT_ COMMA_
follow(binding_list) = LBRACE_ EQ_GT_ COMMA_ COLON_
follow(arg_type) = RPAREN_ PERIOD_ DASH_GT_ BAR_
Built an LR(0) automaton with 262 states.
The grammar is not SLR(1) -- 21 states have a conflict.
The construction mode is pager.
Built an LR(1) automaton with 262 states.
90 shift/reduce conflicts were silently solved.
File "zenon.0.8.4-parsecoq.mly", line 199, characters 0-9:
Warning: the precedence level assigned to EXISTS is never useful.
File "zenon.0.8.4-parsecoq.mly", line 199, characters 0-9:
Warning: the precedence level assigned to FORALL is never useful.
File "zenon.0.8.4-parsecoq.mly", line 197, characters 0-9:
Warning: the precedence level assigned to FQN is never useful.
File "zenon.0.8.4-parsecoq.mly", line 199, characters 0-9:
Warning: the precedence level assigned to FUN is never useful.
File "zenon.0.8.4-parsecoq.mly", line 197, characters 0-9:
Warning: the precedence level assigned to IDENT is never useful.
File "zenon.0.8.4-parsecoq.mly", line 199, characters 0-9:
Warning: the precedence level assigned to IF is never useful.
File "zenon.0.8.4-parsecoq.mly", line 199, characters 0-9:
Warning: the precedence level assigned to IN is never useful.
File "zenon.0.8.4-parsecoq.mly", line 199, characters 0-9:
Warning: the precedence level assigned to THEN is never useful.
File "zenon.0.8.4-parsecoq.mly", line 206, characters 0-5:
Warning: the precedence level assigned to apply is never useful.
File "zenon.0.8.4-parsecoq.mly", line 287, characters 28-33:
Warning: this %prec declaration is never useful.
File "zenon.0.8.4-parsecoq.mly", line 290, characters 35-40:
Warning: this %prec declaration is never useful.
File "zenon.0.8.4-parsecoq.mly", line 293, characters 24-29:
Warning: this %prec declaration is never useful.
59 out of 262 states have a default reduction.
127 out of 262 states are represented.
0 out of 108 symbols keep track of their start position.
0 out of 108 symbols keep track of their end position.
32 out of 89 productions exploit shiftreduce optimization.
0 out of 262 states can peek at an error.
642 functions before inlining, 85 functions after inlining.
