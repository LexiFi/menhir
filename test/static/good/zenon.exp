File "zenon.mly", line 52, characters 7-19:
Warning: the token INPUT_CLAUSE is unused.
File "zenon.mly", line 59, characters 7-15:
Warning: the token NEGATIVE is unused.
File "zenon.mly", line 58, characters 7-15:
Warning: the token POSITIVE is unused.
Grammar has 27 nonterminal symbols, among which 4 start symbols.
Grammar has 56 terminal symbols.
Grammar has 93 productions.
nullable(tpvar_list) = false
nullable(tpphrase) = false
nullable(tpformula) = false
nullable(tpfile) = false
nullable(tpexpr_list) = false
nullable(tpexpr) = false
nullable(tpatom) = false
nullable(tparguments) = true
nullable(theory) = false
nullable(phrase) = false
nullable(lambda) = false
nullable(int_opt) = true
nullable(ident_list) = true
nullable(id_or_coqexpr) = false
nullable(hyp_name) = true
nullable(expr_list) = true
nullable(expr) = false
nullable(coqparam_expr) = false
nullable(coqhyp_list) = true
nullable(coqhyp) = false
nullable(coqfile) = false
nullable(coqexpr_list1) = false
nullable(coqexpr) = false
nullable(coqdef_list) = true
nullable(coqdef) = false
nullable(coqapplication) = false
nullable(coq_hyp_def_list) = true
first(tpvar_list) = UIDENT
first(tpphrase) = INPUT_FORMULA INCLUDE
first(tpformula) = UIDENT OPEN NOT LIDENT EX EQUAL ALL
first(tpfile) = INPUT_FORMULA INCLUDE EOF
first(tpexpr_list) = UIDENT LIDENT EQUAL
first(tpexpr) = UIDENT LIDENT EQUAL
first(tpatom) = UIDENT OPEN NOT LIDENT EX EQUAL ALL
first(tparguments) = OPEN
first(theory) = TRUE STRING OPEN INT IDENT GOAL FALSE EOF DEF
first(phrase) = TRUE STRING OPEN INT IDENT GOAL FALSE DEF
first(lambda) = OPEN
first(int_opt) = INT
first(ident_list) = IDENT
first(id_or_coqexpr) = STRING IDENT
first(hyp_name) = STRING
first(expr_list) = TRUE OPEN IDENT FALSE
first(expr) = TRUE OPEN IDENT FALSE
first(coqparam_expr) = TILDE OPEN LET LBRACKET IF IDENT FUN FORALL
first(coqhyp_list) = STRING IDENT
first(coqhyp) = STRING IDENT
first(coqfile) = LOCAL BEGINPROOF
first(coqexpr_list1) = TILDE OPEN LET LBRACKET IF IDENT FORALL
first(coqexpr) = TILDE OPEN LET LBRACKET IF IDENT FORALL
first(coqdef_list) = STRING IDENT
first(coqdef) = STRING IDENT
first(coqapplication) = OPEN
first(coq_hyp_def_list) = BYDEF BY
minimal(tpvar_list) = (* 1 *) UIDENT
minimal(tpphrase) = (* 5 *) INCLUDE OPEN STRING CLOSE DOT
minimal(tpformula) = (* 1 *) UIDENT
minimal(tpfile) = (* 1 *) EOF
minimal(tpexpr_list) = (* 1 *) UIDENT
minimal(tpexpr) = (* 1 *) UIDENT
minimal(tpatom) = (* 1 *) UIDENT
minimal(tparguments) = (* 0 *)
minimal(theory) = (* 1 *) EOF
minimal(phrase) = (* 1 *) IDENT
minimal(lambda) = (* 6 *) OPEN OPEN IDENT CLOSE IDENT CLOSE
minimal(int_opt) = (* 0 *)
minimal(ident_list) = (* 0 *)
minimal(id_or_coqexpr) = (* 1 *) IDENT
minimal(hyp_name) = (* 0 *)
minimal(expr_list) = (* 0 *)
minimal(expr) = (* 1 *) IDENT
minimal(coqparam_expr) = (* 1 *) IDENT
minimal(coqhyp_list) = (* 0 *)
minimal(coqhyp) = (* 3 *) IDENT COLON IDENT
minimal(coqfile) = (* 4 *) BEGINPROOF IDENT ENDPROOF EOF
minimal(coqexpr_list1) = (* 1 *) IDENT
minimal(coqexpr) = (* 1 *) IDENT
minimal(coqdef_list) = (* 0 *)
minimal(coqdef) = (* 3 *) IDENT COLONEQUAL IDENT
minimal(coqapplication) = (* 4 *) OPEN IDENT IDENT CLOSE
minimal(coq_hyp_def_list) = (* 0 *)
follow(tpvar_list) = RBRACKET
follow(tpphrase) = INPUT_FORMULA INCLUDE EOF
follow(tpformula) = CLOSE
follow(tpfile) = #
follow(tpexpr_list) = CLOSE
follow(tpexpr) = XOR RIMPLY OR NOR NAND IMPLY EQUIV COMMA CLOSE AND
follow(tpatom) = XOR RIMPLY OR NOR NAND IMPLY EQUIV CLOSE AND
follow(tparguments) = XOR RIMPLY OR NOR NAND IMPLY EQUIV COMMA CLOSE AND
follow(theory) = #
follow(phrase) = TRUE STRING OPEN INT IDENT GOAL FALSE EOF DEF #
follow(lambda) = CLOSE
follow(int_opt) = TRUE STRING OPEN IDENT FALSE
follow(ident_list) = CLOSE
follow(id_or_coqexpr) = COLONEQUAL COLON
follow(hyp_name) = TRUE OPEN IDENT FALSE
follow(expr_list) = CLOSE
follow(expr) = TRUE STRING OPEN INT IDENT GOAL FALSE EOF DEF CLOSE #
follow(coqparam_expr) = STRING QED IDENT ENDPROOF BYDEF BY
follow(coqhyp_list) = QED ENDPROOF BYDEF BY
follow(coqhyp) = STRING QED IDENT ENDPROOF BYDEF BY
follow(coqfile) = #
follow(coqexpr_list1) = CLOSE
follow(coqexpr) = TILDE THEN STRING SLASHBACKSLASH RBRACKET QED OPEN LET LBRACKET IN IF IDENT FORALL EQUAL ENDPROOF ELSE DOUBLEARROW COLONEQUAL CLOSE BYDEF BY BACKSLASHSLASH ARROW
follow(coqdef_list) = QED ENDPROOF BYDEF BY
follow(coqdef) = STRING QED IDENT ENDPROOF BYDEF BY
follow(coqapplication) = TILDE THEN STRING SLASHBACKSLASH RBRACKET QED OPEN LET LBRACKET IN IF IDENT FORALL EQUAL ENDPROOF ELSE DOUBLEARROW COLONEQUAL CLOSE BYDEF BY BACKSLASHSLASH ARROW
follow(coq_hyp_def_list) = QED ENDPROOF
Built an LR(0) automaton with 261 states.
The grammar is not SLR(1) -- 12 states have a conflict.
The construction mode is pager.
Built an LR(1) automaton with 315 states.
40 shift/reduce conflicts were silently solved.
File "zenon.mly", line 97, characters 0-9:
Warning: the precedence level assigned to EQUAL is never useful.
92 out of 315 states have a default reduction.
127 out of 315 states are represented.
0 out of 89 symbols keep track of their start position.
0 out of 89 symbols keep track of their end position.
46 out of 97 productions exploit shiftreduce optimization.
0 out of 315 states can peek at an error.
763 functions before inlining, 104 functions after inlining.
