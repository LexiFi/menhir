Grammar has 23 nonterminal symbols, among which 1 start symbols.
Grammar has 44 terminal symbols.
Grammar has 80 productions.
nullable(type_simple) = false
nullable(type_qid) = false
nullable(typ) = false
nullable(term_simple) = false
nullable(term) = false
nullable(separated_nonempty_list(COMMA,env_decl)) = false
nullable(qid) = false
nullable(proofheaders) = false
nullable(pre_typ) = false
nullable(nonempty_list(term_simple)) = false
nullable(nonempty_list(compact_arg)) = false
nullable(loption(separated_nonempty_list(COMMA,env_decl))) = true
nullable(list(type_simple)) = true
nullable(kind) = false
nullable(goal) = false
nullable(file) = false
nullable(env_decl) = false
nullable(env) = false
nullable(declared_or_defined_id) = false
nullable(complex_type) = false
nullable(compact_arg) = false
nullable(body) = false
nullable(arrow_type) = false
first(type_simple) = QID LPAREN ID
first(type_qid) = QID ID
first(typ) = TERM PROP
first(term_simple) = TRUE QID OR NUMBER NOT LPAREN IMP ID FALSE EX_TYPE EX EQV EQUAL CCARR AND ALL_TYPE ALL
first(term) = error TRUE QID OR NUMBER NOT LPAREN IMP ID FALSE EX_TYPE EX EQV EQUAL CCARR AND ALL_TYPE ALL
first(separated_nonempty_list(COMMA,env_decl)) = ID
first(qid) = QID ID
first(proofheaders) = error QID LBRACK ID DEFKW BEGIN_VAR BEGIN_TYPEALIAS BEGIN_TY BEGIN_HYP BEGINNAME BEGINHEADER
first(pre_typ) = QID LPAREN ID CCARR
first(nonempty_list(term_simple)) = TRUE QID OR NUMBER NOT LPAREN IMP ID FALSE EX_TYPE EX EQV EQUAL CCARR AND ALL_TYPE ALL
first(nonempty_list(compact_arg)) = LPAREN
first(loption(separated_nonempty_list(COMMA,env_decl))) = ID
first(list(type_simple)) = QID LPAREN ID
first(kind) = TYPE ID
first(goal) = ID
first(file) = error QID LBRACK ID DEFKW BEGINPROOF
first(env_decl) = ID
first(env) = LBRACK
first(declared_or_defined_id) = QID ID
first(complex_type) = TERM PROP LPAREN
first(compact_arg) = LPAREN
first(body) = QID LBRACK ID DEFKW
first(arrow_type) = TERM PROP LPAREN ID
minimal(type_simple) = (* 1 *) ID
minimal(type_qid) = (* 1 *) ID
minimal(typ) = (* 1 *) PROP
minimal(term_simple) = (* 1 *) QID
minimal(term) = (* 1 *) error
minimal(separated_nonempty_list(COMMA,env_decl)) = (* 1 *) ID
minimal(qid) = (* 1 *) QID
minimal(proofheaders) = (* 1 *) error
minimal(pre_typ) = (* 1 *) ID
minimal(nonempty_list(term_simple)) = (* 1 *) QID
minimal(nonempty_list(compact_arg)) = (* 5 *) LPAREN ID COLON PROP RPAREN
minimal(loption(separated_nonempty_list(COMMA,env_decl))) = (* 0 *)
minimal(list(type_simple)) = (* 0 *)
minimal(kind) = (* 1 *) TYPE
minimal(goal) = (* 5 *) ID COLON PROOF error DOT
minimal(file) = (* 1 *) error
minimal(env_decl) = (* 1 *) ID
minimal(env) = (* 2 *) LBRACK RBRACK
minimal(declared_or_defined_id) = (* 1 *) ID
minimal(complex_type) = (* 1 *) PROP
minimal(compact_arg) = (* 5 *) LPAREN ID COLON PROP RPAREN
minimal(body) = (* 5 *) ID COLON PROOF error DOT
minimal(arrow_type) = (* 1 *) PROP
follow(type_simple) = TRUE RPAREN REW RBRACK QID OR NUMBER NOT LPAREN IMP ID FALSE EX_TYPE EX EQV EQUAL END_VAR END_TYPEALIAS END_HYP DOUBLE_ARROW DOT DEF COMMA CCARR ARROW AND ALL_TYPE ALL
follow(type_qid) = TRUE RPAREN REW RBRACK QID OR NUMBER NOT LPAREN IMP ID FALSE EX_TYPE EX EQV EQUAL END_VAR END_TYPEALIAS END_HYP DOUBLE_ARROW DOT DEF COMMA CCARR ARROW AND ALL_TYPE ALL
follow(typ) = RPAREN RBRACK END_VAR DOUBLE_ARROW DOT DEF COMMA ARROW
follow(term_simple) = TRUE RPAREN REW QID OR NUMBER NOT LPAREN IMP ID FALSE EX_TYPE EX EQV EQUAL END_HYP DOUBLE_ARROW DOT CCARR AND ALL_TYPE ALL
follow(term) = RPAREN REW DOUBLE_ARROW DOT
follow(separated_nonempty_list(COMMA,env_decl)) = RBRACK
follow(qid) = TRUE RPAREN REW QID OR NUMBER NOT LPAREN IMP ID FALSE EX_TYPE EX EQV EQUAL END_HYP DOUBLE_ARROW DOT CCARR AND ALL_TYPE ALL
follow(proofheaders) = EOF
follow(pre_typ) = RPAREN
follow(nonempty_list(term_simple)) = RPAREN REW DOUBLE_ARROW DOT
follow(nonempty_list(compact_arg)) = COLON
follow(loption(separated_nonempty_list(COMMA,env_decl))) = RBRACK
follow(list(type_simple)) = RPAREN
follow(kind) = DOT
follow(goal) = EOF ENDPROOF
follow(file) = #
follow(env_decl) = RBRACK COMMA
follow(env) = error TRUE QID OR NUMBER NOT LPAREN IMP ID FALSE EX_TYPE EX EQV EQUAL CCARR AND ALL_TYPE ALL
follow(declared_or_defined_id) = LPAREN
follow(complex_type) = DOUBLE_ARROW ARROW
follow(compact_arg) = LPAREN COLON
follow(body) = EOF ENDPROOF
follow(arrow_type) = RPAREN RBRACK DOT COMMA
Built an LR(0) automaton with 227 states.
The grammar is SLR(1).
The construction mode is pager.
Built an LR(1) automaton with 227 states.
69 out of 227 states have a default reduction.
80 out of 227 states are represented.
5 out of 70 symbols keep track of their start position.
4 out of 70 symbols keep track of their end position.
The action table is 10215 entries; 865 non-zero; 456 compressed.
The action table occupies roughly 1008 bytes.
The goto table is 5448 entries; 218 non-zero; 450 compressed.
The goto table occupies roughly 768 bytes.
The error table occupies roughly 1312 bytes.
The default_reduction table occupies roughly 264 bytes.
The lhs table occupies roughly 120 bytes.
The trace table occupies roughly 8 bytes.
