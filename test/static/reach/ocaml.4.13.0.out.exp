implementation: WITH
##
## Concrete syntax: with
##
## Ends in an error in state: 0.
##
## implementation' -> . implementation [ # ]
##
## The known suffix of the stack is as follows:
##
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: WHILE WITH
##
## Concrete syntax: while with
##
## Ends in an error in state: 1.
##
## expr -> WHILE . ext list(attribute) seq_expr DO seq_expr DONE [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## WHILE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: ASSERT PERCENT UNDERSCORE
##
## Concrete syntax: assert % _
##
## Ends in an error in state: 2.
##
## ext -> PERCENT . attr_id [ WHILE VIRTUAL UNDERSCORE UIDENT TRY TRUE TILDE STRUCT STRING SIG REC QUOTED_STRING_EXPR QUOTE QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OBJECT NONREC NEW MODULE MINUSDOT MINUS MATCH LPAREN LIDENT LETOP LET LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INFIXOP2 IF HASH FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXCEPTION END CHAR BEGIN BAR BANG BACKQUOTE ASSERT ]
##
## The known suffix of the stack is as follows:
## PERCENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKETATATAT AND WITH
##
## Concrete syntax: [@@@ and with
##
## Ends in an error in state: 54.
##
## attr_id -> single_attr_id . [ WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SEMISEMI REC RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUOTE QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS MATCH LPAREN LIDENT LETOP LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INFIXOP2 INCLUDE IF HASH FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT ]
## attr_id -> single_attr_id . DOT attr_id [ WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SEMISEMI REC RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUOTE QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS MATCH LPAREN LIDENT LETOP LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INFIXOP2 INCLUDE IF HASH FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT ]
##
## The known suffix of the stack is as follows:
## single_attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKETATATAT AND DOT UNDERSCORE
##
## Concrete syntax: [@@@ and . _
##
## Ends in an error in state: 55.
##
## attr_id -> single_attr_id DOT . attr_id [ WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SEMISEMI REC RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUOTE QUESTION PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MODULE MINUSDOT MINUS MATCH LPAREN LIDENT LETOP LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INFIXOP2 INCLUDE IF HASH FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END COLON CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT ]
##
## The known suffix of the stack is as follows:
## single_attr_id DOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: WHILE PERCENT AND VIRTUAL
##
## Concrete syntax: while % and virtual
##
## Ends in an error in state: 58.
##
## expr -> WHILE ext . list(attribute) seq_expr DO seq_expr DONE [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## WHILE ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT LBRACKETAT UNDERSCORE
##
## Concrete syntax: UIdent [@ _
##
## Ends in an error in state: 59.
##
## attribute -> LBRACKETAT . attr_id payload RBRACKET [ WITH WHILE WHEN VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TO TILDE THEN STRUCT STRING STAR SIG SEMISEMI SEMI RPAREN REC RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUOTE QUESTION PRIVATE PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN OBJECT NONREC NEW MUTABLE MODULE MINUSGREATER MINUSDOT MINUS MATCH LPAREN LIDENT LETOP LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETLESS LBRACKETGREATER LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN IF HASH GREATER FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOTDOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ASSERT AS ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LBRACKETAT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT LBRACKETAT AND VIRTUAL
##
## Concrete syntax: UIdent [@ and virtual
##
## Ends in an error in state: 60.
##
## attribute -> LBRACKETAT attr_id . payload RBRACKET [ WITH WHILE WHEN VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TO TILDE THEN STRUCT STRING STAR SIG SEMISEMI SEMI RPAREN REC RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUOTE QUESTION PRIVATE PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN OBJECT NONREC NEW MUTABLE MODULE MINUSGREATER MINUSDOT MINUS MATCH LPAREN LIDENT LETOP LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETLESS LBRACKETGREATER LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN IF HASH GREATER FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOTDOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ASSERT AS ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LBRACKETAT attr_id
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: VAL WITH
##
## Concrete syntax: val with
##
## Ends in an error in state: 61.
##
## value_description -> VAL . ext list(attribute) val_ident COLON core_type list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## VAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: VAL PERCENT AND WHILE
##
## Concrete syntax: val % and while
##
## Ends in an error in state: 62.
##
## value_description -> VAL ext . list(attribute) val_ident COLON core_type list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## VAL ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: VAL LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: val [@ and ] while
##
## Ends in an error in state: 63.
##
## value_description -> VAL ext list(attribute) . val_ident COLON core_type list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## VAL ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_val_longident: LPAREN WITH
##
## Concrete syntax: ( with
##
## Ends in an error in state: 64.
##
## val_extra_ident -> LPAREN . operator RPAREN [ WHEN VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COMMA COLONCOLON COLON CLASS BAR AS ]
## val_extra_ident -> LPAREN . operator error [ WHEN VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COMMA COLONCOLON COLON CLASS BAR AS ]
## val_extra_ident -> LPAREN . error [ WHEN VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COMMA COLONCOLON COLON CLASS BAR AS ]
## val_extra_ident -> LPAREN . MODULE error [ WHEN VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COMMA COLONCOLON COLON CLASS BAR AS ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_any_longident: LPAREN MODULE WITH
##
## Concrete syntax: ( module with
##
## Ends in an error in state: 73.
##
## val_extra_ident -> LPAREN MODULE . error [ WHEN VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COMMA COLONCOLON COLON CLASS BAR AS ]
##
## The known suffix of the stack is as follows:
## LPAREN MODULE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LPAREN DOTOP WITH
##
## Concrete syntax: ( .+ with
##
## Ends in an error in state: 87.
##
## operator -> DOTOP . LPAREN index_mod RPAREN [ error RPAREN ]
## operator -> DOTOP . LPAREN index_mod RPAREN LESSMINUS [ error RPAREN ]
## operator -> DOTOP . LBRACKET index_mod RBRACKET [ error RPAREN ]
## operator -> DOTOP . LBRACKET index_mod RBRACKET LESSMINUS [ error RPAREN ]
## operator -> DOTOP . LBRACE index_mod RBRACE [ error RPAREN ]
## operator -> DOTOP . LBRACE index_mod RBRACE LESSMINUS [ error RPAREN ]
##
## The known suffix of the stack is as follows:
## DOTOP
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LPAREN DOTOP LPAREN WITH
##
## Concrete syntax: ( .+ ( with
##
## Ends in an error in state: 88.
##
## operator -> DOTOP LPAREN . index_mod RPAREN [ error RPAREN ]
## operator -> DOTOP LPAREN . index_mod RPAREN LESSMINUS [ error RPAREN ]
##
## The known suffix of the stack is as follows:
## DOTOP LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LPAREN DOTOP LBRACE SEMI WITH
##
## Concrete syntax: ( .+ { ; with
##
## Ends in an error in state: 89.
##
## index_mod -> SEMI . DOTDOT [ RPAREN RBRACKET RBRACE ]
##
## The known suffix of the stack is as follows:
## SEMI
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LPAREN DOTOP LPAREN SEMI DOTDOT WITH
##
## Concrete syntax: ( .+ ( ; .. with
##
## Ends in an error in state: 91.
##
## operator -> DOTOP LPAREN index_mod . RPAREN [ error RPAREN ]
## operator -> DOTOP LPAREN index_mod . RPAREN LESSMINUS [ error RPAREN ]
##
## The known suffix of the stack is as follows:
## DOTOP LPAREN index_mod
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LPAREN DOTOP LPAREN RPAREN WITH
##
## Concrete syntax: ( .+ ( ) with
##
## Ends in an error in state: 92.
##
## operator -> DOTOP LPAREN index_mod RPAREN . [ error RPAREN ]
## operator -> DOTOP LPAREN index_mod RPAREN . LESSMINUS [ error RPAREN ]
##
## The known suffix of the stack is as follows:
## DOTOP LPAREN index_mod RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LPAREN DOTOP LBRACKET WITH
##
## Concrete syntax: ( .+ [ with
##
## Ends in an error in state: 94.
##
## operator -> DOTOP LBRACKET . index_mod RBRACKET [ error RPAREN ]
## operator -> DOTOP LBRACKET . index_mod RBRACKET LESSMINUS [ error RPAREN ]
##
## The known suffix of the stack is as follows:
## DOTOP LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LPAREN DOTOP LBRACKET SEMI DOTDOT WITH
##
## Concrete syntax: ( .+ [ ; .. with
##
## Ends in an error in state: 95.
##
## operator -> DOTOP LBRACKET index_mod . RBRACKET [ error RPAREN ]
## operator -> DOTOP LBRACKET index_mod . RBRACKET LESSMINUS [ error RPAREN ]
##
## The known suffix of the stack is as follows:
## DOTOP LBRACKET index_mod
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LPAREN DOTOP LBRACKET RBRACKET WITH
##
## Concrete syntax: ( .+ [ ] with
##
## Ends in an error in state: 96.
##
## operator -> DOTOP LBRACKET index_mod RBRACKET . [ error RPAREN ]
## operator -> DOTOP LBRACKET index_mod RBRACKET . LESSMINUS [ error RPAREN ]
##
## The known suffix of the stack is as follows:
## DOTOP LBRACKET index_mod RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LPAREN DOTOP LBRACE WITH
##
## Concrete syntax: ( .+ { with
##
## Ends in an error in state: 98.
##
## operator -> DOTOP LBRACE . index_mod RBRACE [ error RPAREN ]
## operator -> DOTOP LBRACE . index_mod RBRACE LESSMINUS [ error RPAREN ]
##
## The known suffix of the stack is as follows:
## DOTOP LBRACE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LPAREN DOTOP LBRACE SEMI DOTDOT WITH
##
## Concrete syntax: ( .+ { ; .. with
##
## Ends in an error in state: 99.
##
## operator -> DOTOP LBRACE index_mod . RBRACE [ error RPAREN ]
## operator -> DOTOP LBRACE index_mod . RBRACE LESSMINUS [ error RPAREN ]
##
## The known suffix of the stack is as follows:
## DOTOP LBRACE index_mod
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LPAREN DOTOP LBRACE RBRACE WITH
##
## Concrete syntax: ( .+ { } with
##
## Ends in an error in state: 100.
##
## operator -> DOTOP LBRACE index_mod RBRACE . [ error RPAREN ]
## operator -> DOTOP LBRACE index_mod RBRACE . LESSMINUS [ error RPAREN ]
##
## The known suffix of the stack is as follows:
## DOTOP LBRACE index_mod RBRACE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LPAREN AMPERAMPER WITH
##
## Concrete syntax: ( && with
##
## Ends in an error in state: 108.
##
## val_extra_ident -> LPAREN operator . RPAREN [ WITH WHEN VAL UNDERSCORE UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE AS ANDOP AND AMPERSAND AMPERAMPER ]
## val_extra_ident -> LPAREN operator . error [ WITH WHEN VAL UNDERSCORE UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE AS ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LPAREN operator
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: VAL LIDENT WITH
##
## Concrete syntax: val lident with
##
## Ends in an error in state: 112.
##
## value_description -> VAL ext list(attribute) val_ident . COLON core_type list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## VAL ext list(attribute) val_ident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: VAL LIDENT COLON WITH
##
## Concrete syntax: val lident : with
##
## Ends in an error in state: 113.
##
## value_description -> VAL ext list(attribute) val_ident COLON . core_type list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## VAL ext list(attribute) val_ident COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: QUOTE WITH
##
## Concrete syntax: ' with
##
## Ends in an error in state: 117.
##
## atomic_type -> QUOTE . ident [ WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## QUOTE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: QUESTION WITH
##
## Concrete syntax: ? with
##
## Ends in an error in state: 121.
##
## optlabel -> QUESTION . LIDENT COLON [ UNDERSCORE UIDENT QUOTED_STRING_EXPR QUOTE LPAREN LIDENT LESS LBRACKETPERCENT LBRACKETLESS LBRACKETGREATER LBRACKET HASH ]
##
## The known suffix of the stack is as follows:
## QUESTION
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: QUESTION LIDENT WITH
##
## Concrete syntax: ? lident with
##
## Ends in an error in state: 122.
##
## optlabel -> QUESTION LIDENT . COLON [ UNDERSCORE UIDENT QUOTED_STRING_EXPR QUOTE LPAREN LIDENT LESS LBRACKETPERCENT LBRACKETLESS LBRACKETGREATER LBRACKET HASH ]
##
## The known suffix of the stack is as follows:
## QUESTION LIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: LPAREN WITH
##
## Concrete syntax: ( with
##
## Ends in an error in state: 125.
##
## atomic_type -> LPAREN . core_type RPAREN [ WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## atomic_type -> LPAREN . MODULE ext list(attribute) module_type RPAREN [ WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## atomic_type -> LPAREN . reversed_separated_nontrivial_llist(COMMA,core_type) RPAREN type_longident [ WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## atomic_type -> LPAREN . reversed_separated_nontrivial_llist(COMMA,core_type) RPAREN HASH clty_longident [ WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: LPAREN MODULE WITH
##
## Concrete syntax: ( module with
##
## Ends in an error in state: 126.
##
## atomic_type -> LPAREN MODULE . ext list(attribute) module_type RPAREN [ WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## LPAREN MODULE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: LPAREN MODULE PERCENT AND WHILE
##
## Concrete syntax: ( module % and while
##
## Ends in an error in state: 127.
##
## atomic_type -> LPAREN MODULE ext . list(attribute) module_type RPAREN [ WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## LPAREN MODULE ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: LPAREN MODULE LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: ( module [@ and ] while
##
## Ends in an error in state: 128.
##
## atomic_type -> LPAREN MODULE ext list(attribute) . module_type RPAREN [ WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## LPAREN MODULE ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_any_longident: UIDENT WHILE
##
## Concrete syntax: UIdent while
##
## Ends in an error in state: 129.
##
## ident -> UIDENT . [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLONEQUAL CLASS AND ]
## mk_longident(mod_ext_longident,UIDENT) -> UIDENT . [ LPAREN DOT ]
##
## The known suffix of the stack is as follows:
## UIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG WITH
##
## Concrete syntax: include sig with
##
## Ends in an error in state: 130.
##
## module_type -> SIG . list(attribute) signature END [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER CLASS AND ]
## module_type -> SIG . list(attribute) signature error [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER CLASS AND ]
##
## The known suffix of the stack is as follows:
## SIG
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT LBRACKETAT UNDERSCORE
##
## Concrete syntax: object [@ _
##
## Ends in an error in state: 131.
##
## attribute -> LBRACKETAT . attr_id payload RBRACKET [ error WITH WHILE VAL UNDERSCORE UIDENT TYPE TRY TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPEN OBJECT NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LETOP LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN IF GREATERRBRACE GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE ASSERT AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LBRACKETAT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT LBRACKETAT AND VIRTUAL
##
## Concrete syntax: object [@ and virtual
##
## Ends in an error in state: 132.
##
## attribute -> LBRACKETAT attr_id . payload RBRACKET [ error WITH WHILE VAL UNDERSCORE UIDENT TYPE TRY TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPEN OBJECT NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LETOP LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN IF GREATERRBRACE GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE ASSERT AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LBRACKETAT attr_id
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: TYPE WITH
##
## Concrete syntax: type with
##
## Ends in an error in state: 135.
##
## generic_type_declaration(nonrec_flag,type_kind) -> TYPE . ext list(attribute) type_parameters LIDENT type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS AND ]
## generic_type_declaration(nonrec_flag,type_kind) -> TYPE . ext list(attribute) NONREC type_parameters LIDENT type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS AND ]
## structure_item -> TYPE . ext list(attribute) type_parameters type_longident PLUSEQ private_flag reversed_bar_llist(extension_constructor) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
## structure_item -> TYPE . ext list(attribute) NONREC type_parameters type_longident PLUSEQ private_flag reversed_bar_llist(extension_constructor) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: TYPE PERCENT AND WHILE
##
## Concrete syntax: type % and while
##
## Ends in an error in state: 136.
##
## generic_type_declaration(nonrec_flag,type_kind) -> TYPE ext . list(attribute) type_parameters LIDENT type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS AND ]
## generic_type_declaration(nonrec_flag,type_kind) -> TYPE ext . list(attribute) NONREC type_parameters LIDENT type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS AND ]
## structure_item -> TYPE ext . list(attribute) type_parameters type_longident PLUSEQ private_flag reversed_bar_llist(extension_constructor) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
## structure_item -> TYPE ext . list(attribute) NONREC type_parameters type_longident PLUSEQ private_flag reversed_bar_llist(extension_constructor) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## TYPE ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: TYPE LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: type [@ and ] while
##
## Ends in an error in state: 137.
##
## generic_type_declaration(nonrec_flag,type_kind) -> TYPE ext list(attribute) . type_parameters LIDENT type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS AND ]
## generic_type_declaration(nonrec_flag,type_kind) -> TYPE ext list(attribute) . NONREC type_parameters LIDENT type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS AND ]
## structure_item -> TYPE ext list(attribute) . type_parameters type_longident PLUSEQ private_flag reversed_bar_llist(extension_constructor) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
## structure_item -> TYPE ext list(attribute) . NONREC type_parameters type_longident PLUSEQ private_flag reversed_bar_llist(extension_constructor) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## TYPE ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: TYPE PLUS WITH
##
## Concrete syntax: type + with
##
## Ends in an error in state: 139.
##
## type_variance -> PLUS . [ UNDERSCORE QUOTE ]
## type_variance -> PLUS . BANG [ UNDERSCORE QUOTE ]
##
## The known suffix of the stack is as follows:
## PLUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: TYPE NONREC WITH
##
## Concrete syntax: type nonrec with
##
## Ends in an error in state: 141.
##
## generic_type_declaration(nonrec_flag,type_kind) -> TYPE ext list(attribute) NONREC . type_parameters LIDENT type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS AND ]
## structure_item -> TYPE ext list(attribute) NONREC . type_parameters type_longident PLUSEQ private_flag reversed_bar_llist(extension_constructor) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## TYPE ext list(attribute) NONREC
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: TYPE MINUS WITH
##
## Concrete syntax: type - with
##
## Ends in an error in state: 142.
##
## type_variance -> MINUS . [ UNDERSCORE QUOTE ]
## type_variance -> MINUS . BANG [ UNDERSCORE QUOTE ]
##
## The known suffix of the stack is as follows:
## MINUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: TYPE LPAREN WITH
##
## Concrete syntax: type ( with
##
## Ends in an error in state: 144.
##
## type_parameters -> LPAREN . reversed_separated_nonempty_llist(COMMA,type_parameter) RPAREN [ UIDENT LIDENT ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: TYPE BANG WITH
##
## Concrete syntax: type ! with
##
## Ends in an error in state: 146.
##
## type_variance -> BANG . [ UNDERSCORE QUOTE ]
## type_variance -> BANG . PLUS [ UNDERSCORE QUOTE ]
## type_variance -> BANG . MINUS [ UNDERSCORE QUOTE ]
##
## The known suffix of the stack is as follows:
## BANG
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: TYPE INFIXOP2 WITH
##
## Concrete syntax: type +! with
##
## Ends in an error in state: 149.
##
## type_parameter -> type_variance . type_variable [ UIDENT RPAREN RBRACKET LIDENT COMMA ]
##
## The known suffix of the stack is as follows:
## type_variance
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: TYPE QUOTE WITH
##
## Concrete syntax: type ' with
##
## Ends in an error in state: 151.
##
## type_variable -> QUOTE . ident [ UIDENT RPAREN RBRACKET LIDENT COMMA ]
##
## The known suffix of the stack is as follows:
## QUOTE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: TYPE LPAREN UNDERSCORE WITH
##
## Concrete syntax: type ( _ with
##
## Ends in an error in state: 155.
##
## reversed_separated_nonempty_llist(COMMA,type_parameter) -> reversed_separated_nonempty_llist(COMMA,type_parameter) . COMMA type_parameter [ RPAREN COMMA ]
## type_parameters -> LPAREN reversed_separated_nonempty_llist(COMMA,type_parameter) . RPAREN [ UIDENT LIDENT ]
##
## The known suffix of the stack is as follows:
## LPAREN reversed_separated_nonempty_llist(COMMA,type_parameter)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: TYPE LPAREN UNDERSCORE COMMA WITH
##
## Concrete syntax: type ( _ , with
##
## Ends in an error in state: 157.
##
## reversed_separated_nonempty_llist(COMMA,type_parameter) -> reversed_separated_nonempty_llist(COMMA,type_parameter) COMMA . type_parameter [ RPAREN RBRACKET COMMA ]
##
## The known suffix of the stack is as follows:
## reversed_separated_nonempty_llist(COMMA,type_parameter) COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: TYPE NONREC UNDERSCORE WITH
##
## Concrete syntax: type nonrec _ with
##
## Ends in an error in state: 159.
##
## generic_type_declaration(nonrec_flag,type_kind) -> TYPE ext list(attribute) NONREC type_parameters . LIDENT type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS AND ]
## structure_item -> TYPE ext list(attribute) NONREC type_parameters . type_longident PLUSEQ private_flag reversed_bar_llist(extension_constructor) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## TYPE ext list(attribute) NONREC type_parameters
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: TYPE NONREC LIDENT WITH
##
## Concrete syntax: type nonrec lident with
##
## Ends in an error in state: 160.
##
## generic_type_declaration(nonrec_flag,type_kind) -> TYPE ext list(attribute) NONREC type_parameters LIDENT . type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS AND ]
## mk_longident(mod_ext_longident,LIDENT) -> LIDENT . [ PLUSEQ ]
##
## The known suffix of the stack is as follows:
## TYPE ext list(attribute) NONREC type_parameters LIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: TYPE LIDENT EQUAL WITH
##
## Concrete syntax: type lident = with
##
## Ends in an error in state: 161.
##
## type_kind -> EQUAL . nonempty_type_kind [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CONSTRAINT CLASS AND ]
##
## The known suffix of the stack is as follows:
## EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: TYPE LIDENT EQUAL UIDENT WITH
##
## Concrete syntax: type lident = UIdent with
##
## Ends in an error in state: 162.
##
## constr_ident -> UIDENT . [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN OF MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EOF CONSTRAINT COLON CLASS BAR AND ]
## mk_longident(mod_ext_longident,UIDENT) -> UIDENT . [ LPAREN DOT ]
##
## The known suffix of the stack is as follows:
## UIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: TYPE LIDENT EQUAL PRIVATE WITH
##
## Concrete syntax: type lident = private with
##
## Ends in an error in state: 164.
##
## nonempty_type_kind -> PRIVATE . core_type [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CONSTRAINT CLASS AND ]
## nonempty_type_kind -> PRIVATE . constructor_declarations [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CONSTRAINT CLASS AND ]
## nonempty_type_kind -> PRIVATE . DOTDOT [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CONSTRAINT CLASS AND ]
## nonempty_type_kind -> PRIVATE . LBRACE label_declarations RBRACE [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CONSTRAINT CLASS AND ]
##
## The known suffix of the stack is as follows:
## PRIVATE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: TYPE LIDENT EQUAL LPAREN WITH
##
## Concrete syntax: type lident = ( with
##
## Ends in an error in state: 165.
##
## atomic_type -> LPAREN . core_type RPAREN [ VAL UIDENT TYPE STAR SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT CLASS AS AND ]
## atomic_type -> LPAREN . MODULE ext list(attribute) module_type RPAREN [ VAL UIDENT TYPE STAR SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT CLASS AS AND ]
## atomic_type -> LPAREN . reversed_separated_nontrivial_llist(COMMA,core_type) RPAREN type_longident [ VAL UIDENT TYPE STAR SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT CLASS AS AND ]
## atomic_type -> LPAREN . reversed_separated_nontrivial_llist(COMMA,core_type) RPAREN HASH clty_longident [ VAL UIDENT TYPE STAR SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT CLASS AS AND ]
## constr_extra_nonprefix_ident -> LPAREN . RPAREN [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN OF MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EOF CONSTRAINT COLON CLASS BAR AND ]
## constr_ident -> LPAREN . COLONCOLON RPAREN [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN OF MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EOF CONSTRAINT COLON CLASS BAR AND ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: LIDENT WHILE
##
## Concrete syntax: lident while
##
## Ends in an error in state: 167.
##
## function_type -> LIDENT . COLON tuple_type MINUSGREATER function_type [ WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH GREATER EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## mk_longident(mod_ext_longident,LIDENT) -> LIDENT . [ WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH GREATER EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## LIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: LIDENT COLON WITH
##
## Concrete syntax: lident : with
##
## Ends in an error in state: 168.
##
## function_type -> LIDENT COLON . tuple_type MINUSGREATER function_type [ WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH GREATER EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## LIDENT COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: LESS WITH
##
## Concrete syntax: < with
##
## Ends in an error in state: 170.
##
## atomic_type -> LESS . meth_list GREATER [ WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## atomic_type -> LESS . GREATER [ WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## LESS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: LESS LIDENT WITH
##
## Concrete syntax: < lident with
##
## Ends in an error in state: 171.
##
## meth_list -> LIDENT . COLON possibly_poly(core_type_no_attr) list(attribute) SEMI list(attribute) meth_list [ GREATER ]
## meth_list -> LIDENT . COLON possibly_poly(core_type_no_attr) list(attribute) SEMI list(attribute) [ GREATER ]
## meth_list -> LIDENT . COLON possibly_poly(core_type_no_attr) list(attribute) [ GREATER ]
## mk_longident(mod_ext_longident,LIDENT) -> LIDENT . [ UIDENT SEMI LIDENT HASH GREATER ]
##
## The known suffix of the stack is as follows:
## LIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: LESS LIDENT COLON WITH
##
## Concrete syntax: < lident : with
##
## Ends in an error in state: 172.
##
## meth_list -> LIDENT COLON . possibly_poly(core_type_no_attr) list(attribute) SEMI list(attribute) meth_list [ GREATER ]
## meth_list -> LIDENT COLON . possibly_poly(core_type_no_attr) list(attribute) SEMI list(attribute) [ GREATER ]
## meth_list -> LIDENT COLON . possibly_poly(core_type_no_attr) list(attribute) [ GREATER ]
##
## The known suffix of the stack is as follows:
## LIDENT COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: LESS LIDENT COLON QUOTE WITH
##
## Concrete syntax: < lident : ' with
##
## Ends in an error in state: 173.
##
## atomic_type -> QUOTE . ident [ UIDENT STAR SEMI RBRACE MINUSGREATER LIDENT LBRACKETAT HASH GREATER EQUAL COLONGREATER AS ]
## reversed_nonempty_llist(typevar) -> QUOTE . ident [ QUOTE DOT ]
##
## The known suffix of the stack is as follows:
## QUOTE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: LESS LIDENT COLON QUOTE LIDENT WITH
##
## Concrete syntax: < lident : ' lident with
##
## Ends in an error in state: 174.
##
## atomic_type -> QUOTE ident . [ UIDENT STAR SEMI RBRACE MINUSGREATER LIDENT LBRACKETAT HASH GREATER EQUAL COLONGREATER AS ]
## reversed_nonempty_llist(typevar) -> QUOTE ident . [ QUOTE DOT ]
##
## The known suffix of the stack is as follows:
## QUOTE ident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKETPERCENT UNDERSCORE
##
## Concrete syntax: [% _
##
## Ends in an error in state: 175.
##
## extension -> LBRACKETPERCENT . attr_id payload RBRACKET [ WITH WHEN VAL UNDERSCORE UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE AS ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LBRACKETPERCENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKETPERCENT AND VIRTUAL
##
## Concrete syntax: [% and virtual
##
## Ends in an error in state: 176.
##
## extension -> LBRACKETPERCENT attr_id . payload RBRACKET [ WITH WHEN VAL UNDERSCORE UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE AS ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LBRACKETPERCENT attr_id
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: TRY WITH
##
## Concrete syntax: try with
##
## Ends in an error in state: 177.
##
## expr -> TRY . ext list(attribute) seq_expr WITH reversed_preceded_or_separated_nonempty_llist(BAR,match_case) [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> TRY . ext list(attribute) seq_expr WITH error [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## TRY
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: TRY PERCENT AND VIRTUAL
##
## Concrete syntax: try % and virtual
##
## Ends in an error in state: 178.
##
## expr -> TRY ext . list(attribute) seq_expr WITH reversed_preceded_or_separated_nonempty_llist(BAR,match_case) [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> TRY ext . list(attribute) seq_expr WITH error [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## TRY ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: TRY LBRACKETAT AND RBRACKET VIRTUAL
##
## Concrete syntax: try [@ and ] virtual
##
## Ends in an error in state: 179.
##
## expr -> TRY ext list(attribute) . seq_expr WITH reversed_preceded_or_separated_nonempty_llist(BAR,match_case) [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> TRY ext list(attribute) . seq_expr WITH error [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## TRY ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: PREFIXOP WITH
##
## Concrete syntax: !+ with
##
## Ends in an error in state: 181.
##
## simple_expr -> PREFIXOP . simple_expr [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## PREFIXOP
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: NEW WITH
##
## Concrete syntax: new with
##
## Ends in an error in state: 182.
##
## simple_expr -> NEW . ext list(attribute) class_longident [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## NEW
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: NEW PERCENT AND WHILE
##
## Concrete syntax: new % and while
##
## Ends in an error in state: 183.
##
## simple_expr -> NEW ext . list(attribute) class_longident [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## NEW ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: NEW LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: new [@ and ] while
##
## Ends in an error in state: 184.
##
## simple_expr -> NEW ext list(attribute) . class_longident [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## NEW ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: NEW UIDENT WITH
##
## Concrete syntax: new UIdent with
##
## Ends in an error in state: 186.
##
## mk_longident(mod_longident,LIDENT) -> mod_longident . DOT LIDENT [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## mk_longident(mod_longident,UIDENT) -> mod_longident . DOT UIDENT [ DOT ]
##
## The known suffix of the stack is as follows:
## mod_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: NEW UIDENT DOT WITH
##
## Concrete syntax: new UIdent . with
##
## Ends in an error in state: 187.
##
## mk_longident(mod_longident,LIDENT) -> mod_longident DOT . LIDENT [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESSMINUS LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## mk_longident(mod_longident,UIDENT) -> mod_longident DOT . UIDENT [ DOTOP DOT ]
##
## The known suffix of the stack is as follows:
## mod_longident DOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: ASSERT LBRACKETAT AND RBRACKET WITH
##
## Concrete syntax: assert [@ and ] with
##
## Ends in an error in state: 193.
##
## list(attribute) -> attribute . list(attribute) [ WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TILDE STRUCT STRING SIG SEMISEMI SEMI REC RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUOTE QUESTION PRIVATE PREFIXOP PLUSDOT PLUS OPTLABEL OPEN OBJECT NONREC NEW MUTABLE MODULE MINUSDOT MINUS MATCH LPAREN LIDENT LETOP LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETLESS LBRACKETGREATER LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INFIXOP2 INCLUDE IN IF HASH GREATER FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END DOTDOT CONSTRAINT CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT AND ]
##
## The known suffix of the stack is as follows:
## attribute
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LPAREN WITH
##
## Concrete syntax: ( with
##
## Ends in an error in state: 195.
##
## constr_extra_nonprefix_ident -> LPAREN . RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## constr_longident -> LPAREN . COLONCOLON RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> LPAREN . seq_expr RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> LPAREN . seq_expr error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> LPAREN . seq_expr type_constraint RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> LPAREN . MODULE ext list(attribute) module_expr RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> LPAREN . MODULE ext list(attribute) module_expr COLON module_type RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> LPAREN . MODULE ext list(attribute) module_expr COLON error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## val_extra_ident -> LPAREN . operator RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## val_extra_ident -> LPAREN . operator error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## val_extra_ident -> LPAREN . error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## val_extra_ident -> LPAREN . MODULE error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET WHILE WITH
##
## Concrete syntax: [ while with
##
## Ends in an error in state: 196.
##
## expr -> WHILE . ext list(attribute) seq_expr DO seq_expr DONE [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## WHILE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET WHILE PERCENT AND VIRTUAL
##
## Concrete syntax: [ while % and virtual
##
## Ends in an error in state: 197.
##
## expr -> WHILE ext . list(attribute) seq_expr DO seq_expr DONE [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## WHILE ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET WHILE LBRACKETAT AND RBRACKET VIRTUAL
##
## Concrete syntax: [ while [@ and ] virtual
##
## Ends in an error in state: 198.
##
## expr -> WHILE ext list(attribute) . seq_expr DO seq_expr DONE [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## WHILE ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT WITH
##
## Concrete syntax: object with
##
## Ends in an error in state: 201.
##
## expr -> OBJECT . ext list(attribute) class_self_pattern list(text_cstr(class_field)) END [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> OBJECT . ext list(attribute) class_self_pattern list(text_cstr(class_field)) error [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## OBJECT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT PERCENT UNDERSCORE
##
## Concrete syntax: object % _
##
## Ends in an error in state: 202.
##
## ext -> PERCENT . attr_id [ error VAL QUOTED_STRING_ITEM METHOD LPAREN LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETAT INITIALIZER INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## PERCENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT PERCENT AND WITH
##
## Concrete syntax: object % and with
##
## Ends in an error in state: 254.
##
## attr_id -> single_attr_id . [ error VAL QUOTED_STRING_ITEM METHOD LPAREN LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETAT INITIALIZER INHERIT END CONSTRAINT ]
## attr_id -> single_attr_id . DOT attr_id [ error VAL QUOTED_STRING_ITEM METHOD LPAREN LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETAT INITIALIZER INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## single_attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT PERCENT AND DOT UNDERSCORE
##
## Concrete syntax: object % and . _
##
## Ends in an error in state: 255.
##
## attr_id -> single_attr_id DOT . attr_id [ error VAL QUOTED_STRING_ITEM METHOD LPAREN LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETAT INITIALIZER INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## single_attr_id DOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: object [@ and ] while
##
## Ends in an error in state: 259.
##
## expr -> OBJECT ext list(attribute) . class_self_pattern list(text_cstr(class_field)) END [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> OBJECT ext list(attribute) . class_self_pattern list(text_cstr(class_field)) error [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## OBJECT ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1700, spurious reduction of production list(attribute) ->
## In state 1701, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT LPAREN WITH
##
## Concrete syntax: object ( with
##
## Ends in an error in state: 260.
##
## class_self_pattern -> LPAREN . pattern RPAREN [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT ]
## class_self_pattern -> LPAREN . pattern COLON core_type RPAREN [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: PLUS WITH
##
## Concrete syntax: + with
##
## Ends in an error in state: 262.
##
## signed_constant -> PLUS . INT [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF DOTDOT COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
## signed_constant -> PLUS . FLOAT [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF DOTDOT COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
##
## The known suffix of the stack is as follows:
## PLUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: MINUS WITH
##
## Concrete syntax: - with
##
## Ends in an error in state: 265.
##
## signed_constant -> MINUS . INT [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF DOTDOT COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
## signed_constant -> MINUS . FLOAT [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF DOTDOT COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
##
## The known suffix of the stack is as follows:
## MINUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LPAREN WITH
##
## Concrete syntax: ( with
##
## Ends in an error in state: 268.
##
## constr_extra_nonprefix_ident -> LPAREN . RPAREN [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LAZY LABEL INT HASH FLOAT FALSE EXCEPTION EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
## constr_longident -> LPAREN . COLONCOLON RPAREN [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LAZY LABEL INT HASH FLOAT FALSE EXCEPTION EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
## simple_pattern_not_ident -> LPAREN . pattern RPAREN [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
## simple_pattern_not_ident -> LPAREN . MODULE ext list(attribute) module_name RPAREN [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
## simple_pattern_not_ident -> LPAREN . MODULE ext list(attribute) module_name COLON module_type RPAREN [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
## simple_pattern_not_ident -> LPAREN . pattern error [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
## simple_pattern_not_ident -> LPAREN . pattern COLON core_type RPAREN [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
## simple_pattern_not_ident -> LPAREN . pattern COLON core_type error [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
## simple_pattern_not_ident -> LPAREN . pattern COLON error [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
## simple_pattern_not_ident -> LPAREN . MODULE ext list(attribute) module_name COLON module_type error [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
## val_extra_ident -> LPAREN . operator RPAREN [ WHEN VAL UNDERSCORE UIDENT TYPE TRUE TILDE STRING SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL OPEN MODULE MINUSGREATER MINUS LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACE LABEL INT INCLUDE IN HASH FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CLASS CHAR BAR BACKQUOTE AS ANDOP AND ]
## val_extra_ident -> LPAREN . operator error [ WHEN VAL UNDERSCORE UIDENT TYPE TRUE TILDE STRING SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL OPEN MODULE MINUSGREATER MINUS LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACE LABEL INT INCLUDE IN HASH FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CLASS CHAR BAR BACKQUOTE AS ANDOP AND ]
## val_extra_ident -> LPAREN . error [ WHEN VAL UNDERSCORE UIDENT TYPE TRUE TILDE STRING SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL OPEN MODULE MINUSGREATER MINUS LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACE LABEL INT INCLUDE IN HASH FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CLASS CHAR BAR BACKQUOTE AS ANDOP AND ]
## val_extra_ident -> LPAREN . MODULE error [ WHEN VAL UNDERSCORE UIDENT TYPE TRUE TILDE STRING SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL OPEN MODULE MINUSGREATER MINUS LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACE LABEL INT INCLUDE IN HASH FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CLASS CHAR BAR BACKQUOTE AS ANDOP AND ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LPAREN PLUS WITH
##
## Concrete syntax: ( + with
##
## Ends in an error in state: 274.
##
## operator -> PLUS . [ error RPAREN ]
## signed_constant -> PLUS . INT [ error RPAREN LBRACKETAT DOTDOT COMMA COLONCOLON COLON BAR AS ]
## signed_constant -> PLUS . FLOAT [ error RPAREN LBRACKETAT DOTDOT COMMA COLONCOLON COLON BAR AS ]
##
## The known suffix of the stack is as follows:
## PLUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LPAREN MODULE WITH
##
## Concrete syntax: ( module with
##
## Ends in an error in state: 277.
##
## simple_pattern_not_ident -> LPAREN MODULE . ext list(attribute) module_name RPAREN [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
## simple_pattern_not_ident -> LPAREN MODULE . ext list(attribute) module_name COLON module_type RPAREN [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
## simple_pattern_not_ident -> LPAREN MODULE . ext list(attribute) module_name COLON module_type error [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
## val_extra_ident -> LPAREN MODULE . error [ WHEN VAL UNDERSCORE UIDENT TYPE TRUE TILDE STRING SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL OPEN MODULE MINUSGREATER MINUS LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACE LABEL INT INCLUDE IN HASH FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CLASS CHAR BAR BACKQUOTE AS ANDOP AND ]
##
## The known suffix of the stack is as follows:
## LPAREN MODULE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LPAREN MODULE PERCENT AND WHILE
##
## Concrete syntax: ( module % and while
##
## Ends in an error in state: 278.
##
## simple_pattern_not_ident -> LPAREN MODULE ext . list(attribute) module_name RPAREN [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
## simple_pattern_not_ident -> LPAREN MODULE ext . list(attribute) module_name COLON module_type RPAREN [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
## simple_pattern_not_ident -> LPAREN MODULE ext . list(attribute) module_name COLON module_type error [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
##
## The known suffix of the stack is as follows:
## LPAREN MODULE ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LPAREN MODULE LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: ( module [@ and ] while
##
## Ends in an error in state: 279.
##
## simple_pattern_not_ident -> LPAREN MODULE ext list(attribute) . module_name RPAREN [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
## simple_pattern_not_ident -> LPAREN MODULE ext list(attribute) . module_name COLON module_type RPAREN [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
## simple_pattern_not_ident -> LPAREN MODULE ext list(attribute) . module_name COLON module_type error [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
##
## The known suffix of the stack is as follows:
## LPAREN MODULE ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LPAREN MODULE UIDENT WITH
##
## Concrete syntax: ( module UIdent with
##
## Ends in an error in state: 282.
##
## simple_pattern_not_ident -> LPAREN MODULE ext list(attribute) module_name . RPAREN [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
## simple_pattern_not_ident -> LPAREN MODULE ext list(attribute) module_name . COLON module_type RPAREN [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
## simple_pattern_not_ident -> LPAREN MODULE ext list(attribute) module_name . COLON module_type error [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
##
## The known suffix of the stack is as follows:
## LPAREN MODULE ext list(attribute) module_name
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LPAREN MODULE UIDENT COLON WITH
##
## Concrete syntax: ( module UIdent : with
##
## Ends in an error in state: 284.
##
## simple_pattern_not_ident -> LPAREN MODULE ext list(attribute) module_name COLON . module_type RPAREN [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
## simple_pattern_not_ident -> LPAREN MODULE ext list(attribute) module_name COLON . module_type error [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
##
## The known suffix of the stack is as follows:
## LPAREN MODULE ext list(attribute) module_name COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE LPAREN UIDENT WHILE
##
## Concrete syntax: include ( UIdent while
##
## Ends in an error in state: 285.
##
## ident -> UIDENT . [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## mk_longident(mod_ext_longident,UIDENT) -> UIDENT . [ LPAREN DOT ]
##
## The known suffix of the stack is as follows:
## UIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE LPAREN SIG WITH
##
## Concrete syntax: include ( sig with
##
## Ends in an error in state: 286.
##
## module_type -> SIG . list(attribute) signature END [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## module_type -> SIG . list(attribute) signature error [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## SIG
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE LPAREN SIG LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: include ( sig [@ and ] while
##
## Ends in an error in state: 287.
##
## module_type -> SIG list(attribute) . signature END [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## module_type -> SIG list(attribute) . signature error [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## SIG list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1700, spurious reduction of production list(attribute) ->
## In state 1701, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT VAL WITH
##
## Concrete syntax: include struct val with
##
## Ends in an error in state: 288.
##
## value_description -> VAL . ext list(attribute) val_ident COLON core_type list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## VAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT VAL PERCENT AND WHILE
##
## Concrete syntax: include struct val % and while
##
## Ends in an error in state: 289.
##
## value_description -> VAL ext . list(attribute) val_ident COLON core_type list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## VAL ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT VAL LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: include struct val [@ and ] while
##
## Ends in an error in state: 290.
##
## value_description -> VAL ext list(attribute) . val_ident COLON core_type list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## VAL ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT VAL LIDENT WITH
##
## Concrete syntax: include struct val lident with
##
## Ends in an error in state: 291.
##
## value_description -> VAL ext list(attribute) val_ident . COLON core_type list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## VAL ext list(attribute) val_ident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT VAL LIDENT COLON WITH
##
## Concrete syntax: include struct val lident : with
##
## Ends in an error in state: 292.
##
## value_description -> VAL ext list(attribute) val_ident COLON . core_type list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## VAL ext list(attribute) val_ident COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACE LIDENT COLON QUOTE WITH
##
## Concrete syntax: { lident : ' with
##
## Ends in an error in state: 294.
##
## atomic_type -> QUOTE . ident [ error WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE HASH EXTERNAL EXCEPTION EQUAL END CONSTRAINT COLONGREATER CLASS BAR AS AND ]
##
## The known suffix of the stack is as follows:
## QUOTE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACE LIDENT COLON LPAREN WITH
##
## Concrete syntax: { lident : ( with
##
## Ends in an error in state: 298.
##
## atomic_type -> LPAREN . core_type RPAREN [ error WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE HASH EXTERNAL EXCEPTION EQUAL END CONSTRAINT COLONGREATER CLASS BAR AS AND ]
## atomic_type -> LPAREN . MODULE ext list(attribute) module_type RPAREN [ error WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE HASH EXTERNAL EXCEPTION EQUAL END CONSTRAINT COLONGREATER CLASS BAR AS AND ]
## atomic_type -> LPAREN . reversed_separated_nontrivial_llist(COMMA,core_type) RPAREN type_longident [ error WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE HASH EXTERNAL EXCEPTION EQUAL END CONSTRAINT COLONGREATER CLASS BAR AS AND ]
## atomic_type -> LPAREN . reversed_separated_nontrivial_llist(COMMA,core_type) RPAREN HASH clty_longident [ error WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE HASH EXTERNAL EXCEPTION EQUAL END CONSTRAINT COLONGREATER CLASS BAR AS AND ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACE LIDENT COLON LPAREN MODULE WITH
##
## Concrete syntax: { lident : ( module with
##
## Ends in an error in state: 299.
##
## atomic_type -> LPAREN MODULE . ext list(attribute) module_type RPAREN [ error WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE HASH EXTERNAL EXCEPTION EQUAL END CONSTRAINT COLONGREATER CLASS BAR AS AND ]
##
## The known suffix of the stack is as follows:
## LPAREN MODULE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACE LIDENT COLON LPAREN MODULE PERCENT AND WHILE
##
## Concrete syntax: { lident : ( module % and while
##
## Ends in an error in state: 300.
##
## atomic_type -> LPAREN MODULE ext . list(attribute) module_type RPAREN [ error WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE HASH EXTERNAL EXCEPTION EQUAL END CONSTRAINT COLONGREATER CLASS BAR AS AND ]
##
## The known suffix of the stack is as follows:
## LPAREN MODULE ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACE LIDENT COLON LPAREN MODULE LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: { lident : ( module [@ and ] while
##
## Ends in an error in state: 301.
##
## atomic_type -> LPAREN MODULE ext list(attribute) . module_type RPAREN [ error WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE HASH EXTERNAL EXCEPTION EQUAL END CONSTRAINT COLONGREATER CLASS BAR AS AND ]
##
## The known suffix of the stack is as follows:
## LPAREN MODULE ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE MODULE WITH
##
## Concrete syntax: include module with
##
## Ends in an error in state: 302.
##
## module_type -> MODULE . TYPE OF list(attribute) module_expr [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER CLASS AND ]
##
## The known suffix of the stack is as follows:
## MODULE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE MODULE TYPE WITH
##
## Concrete syntax: include module type with
##
## Ends in an error in state: 303.
##
## module_type -> MODULE TYPE . OF list(attribute) module_expr [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER CLASS AND ]
##
## The known suffix of the stack is as follows:
## MODULE TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE MODULE TYPE OF WITH
##
## Concrete syntax: include module type of with
##
## Ends in an error in state: 304.
##
## module_type -> MODULE TYPE OF . list(attribute) module_expr [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER CLASS AND ]
##
## The known suffix of the stack is as follows:
## MODULE TYPE OF
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE MODULE TYPE OF LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: include module type of [@ and ] while
##
## Ends in an error in state: 305.
##
## module_type -> MODULE TYPE OF list(attribute) . module_expr [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER CLASS AND ]
##
## The known suffix of the stack is as follows:
## MODULE TYPE OF list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT WITH
##
## Concrete syntax: include struct with
##
## Ends in an error in state: 306.
##
## module_expr -> STRUCT . list(attribute) structure END [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
## module_expr -> STRUCT . list(attribute) structure error [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
##
## The known suffix of the stack is as follows:
## STRUCT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT LBRACKETAT AND RBRACKET METHOD
##
## Concrete syntax: include struct [@ and ] method
##
## Ends in an error in state: 307.
##
## module_expr -> STRUCT list(attribute) . structure END [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
## module_expr -> STRUCT list(attribute) . structure error [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
##
## The known suffix of the stack is as follows:
## STRUCT list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1700, spurious reduction of production list(attribute) ->
## In state 1701, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT TYPE WITH
##
## Concrete syntax: include struct type with
##
## Ends in an error in state: 309.
##
## generic_type_declaration(nonrec_flag,type_kind) -> TYPE . ext list(attribute) type_parameters LIDENT type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## generic_type_declaration(nonrec_flag,type_kind) -> TYPE . ext list(attribute) NONREC type_parameters LIDENT type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## structure_item -> TYPE . ext list(attribute) type_parameters type_longident PLUSEQ private_flag reversed_bar_llist(extension_constructor) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
## structure_item -> TYPE . ext list(attribute) NONREC type_parameters type_longident PLUSEQ private_flag reversed_bar_llist(extension_constructor) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT TYPE PERCENT AND WHILE
##
## Concrete syntax: include struct type % and while
##
## Ends in an error in state: 310.
##
## generic_type_declaration(nonrec_flag,type_kind) -> TYPE ext . list(attribute) type_parameters LIDENT type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## generic_type_declaration(nonrec_flag,type_kind) -> TYPE ext . list(attribute) NONREC type_parameters LIDENT type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## structure_item -> TYPE ext . list(attribute) type_parameters type_longident PLUSEQ private_flag reversed_bar_llist(extension_constructor) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
## structure_item -> TYPE ext . list(attribute) NONREC type_parameters type_longident PLUSEQ private_flag reversed_bar_llist(extension_constructor) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## TYPE ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT TYPE LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: include struct type [@ and ] while
##
## Ends in an error in state: 311.
##
## generic_type_declaration(nonrec_flag,type_kind) -> TYPE ext list(attribute) . type_parameters LIDENT type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## generic_type_declaration(nonrec_flag,type_kind) -> TYPE ext list(attribute) . NONREC type_parameters LIDENT type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## structure_item -> TYPE ext list(attribute) . type_parameters type_longident PLUSEQ private_flag reversed_bar_llist(extension_constructor) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
## structure_item -> TYPE ext list(attribute) . NONREC type_parameters type_longident PLUSEQ private_flag reversed_bar_llist(extension_constructor) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## TYPE ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT TYPE NONREC WITH
##
## Concrete syntax: include struct type nonrec with
##
## Ends in an error in state: 312.
##
## generic_type_declaration(nonrec_flag,type_kind) -> TYPE ext list(attribute) NONREC . type_parameters LIDENT type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## structure_item -> TYPE ext list(attribute) NONREC . type_parameters type_longident PLUSEQ private_flag reversed_bar_llist(extension_constructor) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## TYPE ext list(attribute) NONREC
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT TYPE NONREC UNDERSCORE WITH
##
## Concrete syntax: include struct type nonrec _ with
##
## Ends in an error in state: 313.
##
## generic_type_declaration(nonrec_flag,type_kind) -> TYPE ext list(attribute) NONREC type_parameters . LIDENT type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## structure_item -> TYPE ext list(attribute) NONREC type_parameters . type_longident PLUSEQ private_flag reversed_bar_llist(extension_constructor) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## TYPE ext list(attribute) NONREC type_parameters
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT TYPE NONREC LIDENT WITH
##
## Concrete syntax: include struct type nonrec lident with
##
## Ends in an error in state: 314.
##
## generic_type_declaration(nonrec_flag,type_kind) -> TYPE ext list(attribute) NONREC type_parameters LIDENT . type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## mk_longident(mod_ext_longident,LIDENT) -> LIDENT . [ PLUSEQ ]
##
## The known suffix of the stack is as follows:
## TYPE ext list(attribute) NONREC type_parameters LIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT TYPE LIDENT EQUAL WITH
##
## Concrete syntax: include struct type lident = with
##
## Ends in an error in state: 315.
##
## type_kind -> EQUAL . nonempty_type_kind [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
##
## The known suffix of the stack is as follows:
## EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT TYPE LIDENT EQUAL UIDENT WITH
##
## Concrete syntax: include struct type lident = UIdent with
##
## Ends in an error in state: 316.
##
## constr_ident -> UIDENT . [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN OF MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT COLON CLASS BAR AND ]
## mk_longident(mod_ext_longident,UIDENT) -> UIDENT . [ LPAREN DOT ]
##
## The known suffix of the stack is as follows:
## UIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT TYPE LIDENT EQUAL PRIVATE WITH
##
## Concrete syntax: include struct type lident = private with
##
## Ends in an error in state: 317.
##
## nonempty_type_kind -> PRIVATE . core_type [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
## nonempty_type_kind -> PRIVATE . constructor_declarations [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
## nonempty_type_kind -> PRIVATE . DOTDOT [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
## nonempty_type_kind -> PRIVATE . LBRACE label_declarations RBRACE [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
##
## The known suffix of the stack is as follows:
## PRIVATE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT TYPE LIDENT EQUAL LPAREN WITH
##
## Concrete syntax: include struct type lident = ( with
##
## Ends in an error in state: 318.
##
## atomic_type -> LPAREN . core_type RPAREN [ error VAL UIDENT TYPE STAR SEMISEMI QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL END CONSTRAINT CLASS AS AND ]
## atomic_type -> LPAREN . MODULE ext list(attribute) module_type RPAREN [ error VAL UIDENT TYPE STAR SEMISEMI QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL END CONSTRAINT CLASS AS AND ]
## atomic_type -> LPAREN . reversed_separated_nontrivial_llist(COMMA,core_type) RPAREN type_longident [ error VAL UIDENT TYPE STAR SEMISEMI QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL END CONSTRAINT CLASS AS AND ]
## atomic_type -> LPAREN . reversed_separated_nontrivial_llist(COMMA,core_type) RPAREN HASH clty_longident [ error VAL UIDENT TYPE STAR SEMISEMI QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL END CONSTRAINT CLASS AS AND ]
## constr_extra_nonprefix_ident -> LPAREN . RPAREN [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN OF MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT COLON CLASS BAR AND ]
## constr_ident -> LPAREN . COLONCOLON RPAREN [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN OF MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT COLON CLASS BAR AND ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: LBRACKETLESS WITH
##
## Concrete syntax: [< with
##
## Ends in an error in state: 320.
##
## atomic_type -> LBRACKETLESS . option(BAR) reversed_separated_nonempty_llist(BAR,row_field) RBRACKET [ WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## atomic_type -> LBRACKETLESS . option(BAR) reversed_separated_nonempty_llist(BAR,row_field) GREATER reversed_nonempty_llist(name_tag) RBRACKET [ WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## LBRACKETLESS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: LBRACKETLESS BAR WITH
##
## Concrete syntax: [< | with
##
## Ends in an error in state: 322.
##
## atomic_type -> LBRACKETLESS option(BAR) . reversed_separated_nonempty_llist(BAR,row_field) RBRACKET [ WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## atomic_type -> LBRACKETLESS option(BAR) . reversed_separated_nonempty_llist(BAR,row_field) GREATER reversed_nonempty_llist(name_tag) RBRACKET [ WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## LBRACKETLESS option(BAR)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: LBRACKETGREATER WITH
##
## Concrete syntax: [> with
##
## Ends in an error in state: 323.
##
## atomic_type -> LBRACKETGREATER . option(BAR) reversed_separated_nonempty_llist(BAR,row_field) RBRACKET [ WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## atomic_type -> LBRACKETGREATER . RBRACKET [ WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## LBRACKETGREATER
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: LBRACKETGREATER BAR WITH
##
## Concrete syntax: [> | with
##
## Ends in an error in state: 325.
##
## atomic_type -> LBRACKETGREATER option(BAR) . reversed_separated_nonempty_llist(BAR,row_field) RBRACKET [ WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## LBRACKETGREATER option(BAR)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: LBRACKET WITH
##
## Concrete syntax: [ with
##
## Ends in an error in state: 326.
##
## atomic_type -> LBRACKET . tag_field RBRACKET [ WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## atomic_type -> LBRACKET . BAR reversed_separated_nonempty_llist(BAR,row_field) RBRACKET [ WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## atomic_type -> LBRACKET . row_field BAR reversed_separated_nonempty_llist(BAR,row_field) RBRACKET [ WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: HASH WITH
##
## Concrete syntax: # with
##
## Ends in an error in state: 327.
##
## atomic_type -> HASH . clty_longident [ WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## HASH
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: UIDENT WITH
##
## Concrete syntax: UIdent with
##
## Ends in an error in state: 328.
##
## mk_longident(mod_ext_longident,LIDENT) -> mod_ext_longident . DOT LIDENT [ WITH WHEN VAL UNDERSCORE UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PLUSEQ PLUS OPTLABEL OPEN MODULE MINUSGREATER MINUS LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACE LABEL INT INCLUDE IN HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA COLONGREATER COLONCOLON COLON CLASS CHAR BAR BACKQUOTE AS AND AMPERSAND ]
## mk_longident(mod_ext_longident,UIDENT) -> mod_ext_longident . DOT UIDENT [ LPAREN DOT ]
## mod_ext_longident -> mod_ext_longident . LPAREN mod_ext_longident RPAREN [ LPAREN DOT ]
## mod_ext_longident -> mod_ext_longident . LPAREN error [ LPAREN DOT ]
##
## The known suffix of the stack is as follows:
## mod_ext_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_any_longident: UIDENT LPAREN WITH
##
## Concrete syntax: UIdent ( with
##
## Ends in an error in state: 329.
##
## mod_ext_longident -> mod_ext_longident LPAREN . mod_ext_longident RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF DOT COLONGREATER CLASS AND ]
## mod_ext_longident -> mod_ext_longident LPAREN . error [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF DOT COLONGREATER CLASS AND ]
##
## The known suffix of the stack is as follows:
## mod_ext_longident LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_any_longident: UIDENT LPAREN UIDENT WITH
##
## Concrete syntax: UIdent ( UIdent with
##
## Ends in an error in state: 331.
##
## mk_longident(mod_ext_longident,UIDENT) -> mod_ext_longident . DOT UIDENT [ RPAREN LPAREN DOT ]
## mod_ext_longident -> mod_ext_longident . LPAREN mod_ext_longident RPAREN [ RPAREN LPAREN DOT ]
## mod_ext_longident -> mod_ext_longident LPAREN mod_ext_longident . RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF DOT COLONGREATER CLASS AND ]
## mod_ext_longident -> mod_ext_longident . LPAREN error [ RPAREN LPAREN DOT ]
##
## The known suffix of the stack is as follows:
## mod_ext_longident LPAREN mod_ext_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_mod_ext_longident: UIDENT DOT WITH
##
## Concrete syntax: UIdent . with
##
## Ends in an error in state: 333.
##
## mk_longident(mod_ext_longident,UIDENT) -> mod_ext_longident DOT . UIDENT [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF DOT COLONGREATER CLASS AND ]
##
## The known suffix of the stack is as follows:
## mod_ext_longident DOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: UIDENT DOT WITH
##
## Concrete syntax: UIdent . with
##
## Ends in an error in state: 336.
##
## mk_longident(mod_ext_longident,LIDENT) -> mod_ext_longident DOT . LIDENT [ WITH WHEN VAL UNDERSCORE UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PLUSEQ PLUS OPTLABEL OPEN MODULE MINUSGREATER MINUS LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACE LABEL INT INCLUDE IN HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA COLONGREATER COLONCOLON COLON CLASS CHAR BAR BACKQUOTE AS AND AMPERSAND ]
## mk_longident(mod_ext_longident,UIDENT) -> mod_ext_longident DOT . UIDENT [ LPAREN DOT ]
##
## The known suffix of the stack is as follows:
## mod_ext_longident DOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: LBRACKET BAR WITH
##
## Concrete syntax: [ | with
##
## Ends in an error in state: 340.
##
## atomic_type -> LBRACKET BAR . reversed_separated_nonempty_llist(BAR,row_field) RBRACKET [ WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## LBRACKET BAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: BACKQUOTE WITH
##
## Concrete syntax: ` with
##
## Ends in an error in state: 341.
##
## name_tag -> BACKQUOTE . ident [ WITH WHEN VAL UNDERSCORE UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN OF NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE AS ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## BACKQUOTE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: QUOTED_STRING_EXPR MINUSGREATER WITH
##
## Concrete syntax: {%hello|world|} -> with
##
## Ends in an error in state: 345.
##
## function_type -> tuple_type MINUSGREATER . function_type [ WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH GREATER EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## tuple_type MINUSGREATER
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: QUOTED_STRING_EXPR STAR QUOTED_STRING_EXPR STAR WITH
##
## Concrete syntax: {%hello|world|} * {%hello|world|} * with
##
## Ends in an error in state: 347.
##
## reversed_separated_nontrivial_llist(STAR,atomic_type) -> reversed_separated_nontrivial_llist(STAR,atomic_type) STAR . atomic_type [ WITH VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH GREATER EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## reversed_separated_nontrivial_llist(STAR,atomic_type) STAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: QUOTED_STRING_EXPR STAR QUOTED_STRING_EXPR STAR QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: {%hello|world|} * {%hello|world|} * {%hello|world|} while
##
## Ends in an error in state: 350.
##
## atomic_type -> atomic_type . type_longident [ WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH GREATER EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## atomic_type -> atomic_type . HASH clty_longident [ WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH GREATER EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## reversed_separated_nontrivial_llist(STAR,atomic_type) -> reversed_separated_nontrivial_llist(STAR,atomic_type) STAR atomic_type . [ WITH VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH GREATER EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## reversed_separated_nontrivial_llist(STAR,atomic_type) STAR atomic_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: QUOTED_STRING_EXPR HASH WITH
##
## Concrete syntax: {%hello|world|} # with
##
## Ends in an error in state: 351.
##
## atomic_type -> atomic_type HASH . clty_longident [ WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## atomic_type HASH
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: OPTLABEL WITH
##
## Concrete syntax: ?label: with
##
## Ends in an error in state: 354.
##
## function_type -> optlabel . tuple_type MINUSGREATER function_type [ WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH GREATER EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## optlabel
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: OPTLABEL QUOTED_STRING_EXPR WITH
##
## Concrete syntax: ?label: {%hello|world|} with
##
## Ends in an error in state: 355.
##
## function_type -> optlabel tuple_type . MINUSGREATER function_type [ WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH GREATER EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## optlabel tuple_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 358, spurious reduction of production tuple_type -> atomic_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: OPTLABEL QUOTED_STRING_EXPR MINUSGREATER WITH
##
## Concrete syntax: ?label: {%hello|world|} -> with
##
## Ends in an error in state: 356.
##
## function_type -> optlabel tuple_type MINUSGREATER . function_type [ WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH GREATER EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## optlabel tuple_type MINUSGREATER
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: {%hello|world|} while
##
## Ends in an error in state: 358.
##
## atomic_type -> atomic_type . type_longident [ WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH GREATER EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## atomic_type -> atomic_type . HASH clty_longident [ WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH GREATER EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## reversed_separated_nontrivial_llist(STAR,atomic_type) -> atomic_type . STAR atomic_type [ WITH VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH GREATER EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## tuple_type -> atomic_type . [ WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH GREATER EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## atomic_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: QUOTED_STRING_EXPR STAR WITH
##
## Concrete syntax: {%hello|world|} * with
##
## Ends in an error in state: 359.
##
## reversed_separated_nontrivial_llist(STAR,atomic_type) -> atomic_type STAR . atomic_type [ WITH VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH GREATER EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## atomic_type STAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: QUOTED_STRING_EXPR STAR QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: {%hello|world|} * {%hello|world|} while
##
## Ends in an error in state: 360.
##
## atomic_type -> atomic_type . type_longident [ WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH GREATER EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## atomic_type -> atomic_type . HASH clty_longident [ WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH GREATER EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## reversed_separated_nontrivial_llist(STAR,atomic_type) -> atomic_type STAR atomic_type . [ WITH VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH GREATER EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## atomic_type STAR atomic_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: LBRACKET BAR QUOTED_STRING_EXPR GREATER
##
## Concrete syntax: [ | {%hello|world|} >
##
## Ends in an error in state: 364.
##
## atomic_type -> LBRACKET BAR reversed_separated_nonempty_llist(BAR,row_field) . RBRACKET [ WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## reversed_separated_nonempty_llist(BAR,row_field) -> reversed_separated_nonempty_llist(BAR,row_field) . BAR row_field [ RBRACKET BAR ]
##
## The known suffix of the stack is as follows:
## LBRACKET BAR reversed_separated_nonempty_llist(BAR,row_field)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 358, spurious reduction of production tuple_type -> atomic_type
## In state 344, spurious reduction of production function_type -> tuple_type
## In state 374, spurious reduction of production alias_type -> function_type
## In state 384, spurious reduction of production core_type -> alias_type
## In state 382, spurious reduction of production row_field -> core_type
## In state 363, spurious reduction of production reversed_separated_nonempty_llist(BAR,row_field) -> row_field
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: LBRACKETGREATER QUOTED_STRING_EXPR BAR WITH
##
## Concrete syntax: [> {%hello|world|} | with
##
## Ends in an error in state: 366.
##
## reversed_separated_nonempty_llist(BAR,row_field) -> reversed_separated_nonempty_llist(BAR,row_field) BAR . row_field [ RBRACKET GREATER BAR ]
##
## The known suffix of the stack is as follows:
## reversed_separated_nonempty_llist(BAR,row_field) BAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: LBRACKET BACKQUOTE LIDENT WITH
##
## Concrete syntax: [ ` lident with
##
## Ends in an error in state: 368.
##
## tag_field -> name_tag . OF opt_ampersand reversed_separated_nonempty_llist(AMPERSAND,core_type_no_attr) list(attribute) [ RBRACKET GREATER BAR ]
## tag_field -> name_tag . list(attribute) [ RBRACKET GREATER BAR ]
##
## The known suffix of the stack is as follows:
## name_tag
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: LBRACKET BACKQUOTE LIDENT OF WITH
##
## Concrete syntax: [ ` lident of with
##
## Ends in an error in state: 369.
##
## tag_field -> name_tag OF . opt_ampersand reversed_separated_nonempty_llist(AMPERSAND,core_type_no_attr) list(attribute) [ RBRACKET GREATER BAR ]
##
## The known suffix of the stack is as follows:
## name_tag OF
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: LBRACKET BACKQUOTE LIDENT OF AMPERSAND WITH
##
## Concrete syntax: [ ` lident of & with
##
## Ends in an error in state: 371.
##
## tag_field -> name_tag OF opt_ampersand . reversed_separated_nonempty_llist(AMPERSAND,core_type_no_attr) list(attribute) [ RBRACKET GREATER BAR ]
##
## The known suffix of the stack is as follows:
## name_tag OF opt_ampersand
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: LBRACKET BACKQUOTE LIDENT OF QUOTED_STRING_EXPR AMPERSAND WITH
##
## Concrete syntax: [ ` lident of {%hello|world|} & with
##
## Ends in an error in state: 373.
##
## reversed_separated_nonempty_llist(AMPERSAND,core_type_no_attr) -> reversed_separated_nonempty_llist(AMPERSAND,core_type_no_attr) AMPERSAND . alias_type [ RBRACKET LBRACKETAT GREATER BAR AMPERSAND ]
##
## The known suffix of the stack is as follows:
## reversed_separated_nonempty_llist(AMPERSAND,core_type_no_attr) AMPERSAND
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: LBRACKET BACKQUOTE LIDENT OF QUOTED_STRING_EXPR AMPERSAND QUOTED_STRING_EXPR WITH
##
## Concrete syntax: [ ` lident of {%hello|world|} & {%hello|world|} with
##
## Ends in an error in state: 375.
##
## alias_type -> alias_type . AS QUOTE ident [ RBRACKET LBRACKETAT GREATER BAR AS AMPERSAND ]
## reversed_separated_nonempty_llist(AMPERSAND,core_type_no_attr) -> reversed_separated_nonempty_llist(AMPERSAND,core_type_no_attr) AMPERSAND alias_type . [ RBRACKET LBRACKETAT GREATER BAR AMPERSAND ]
##
## The known suffix of the stack is as follows:
## reversed_separated_nonempty_llist(AMPERSAND,core_type_no_attr) AMPERSAND alias_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 358, spurious reduction of production tuple_type -> atomic_type
## In state 344, spurious reduction of production function_type -> tuple_type
## In state 374, spurious reduction of production alias_type -> function_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: QUOTED_STRING_EXPR AS WITH
##
## Concrete syntax: {%hello|world|} as with
##
## Ends in an error in state: 376.
##
## alias_type -> alias_type AS . QUOTE ident [ WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH GREATER EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## alias_type AS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: QUOTED_STRING_EXPR AS QUOTE WITH
##
## Concrete syntax: {%hello|world|} as ' with
##
## Ends in an error in state: 377.
##
## alias_type -> alias_type AS QUOTE . ident [ WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH GREATER EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## alias_type AS QUOTE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: LBRACKET BACKQUOTE LIDENT OF QUOTED_STRING_EXPR WITH
##
## Concrete syntax: [ ` lident of {%hello|world|} with
##
## Ends in an error in state: 380.
##
## alias_type -> alias_type . AS QUOTE ident [ RBRACKET LBRACKETAT GREATER BAR AS AMPERSAND ]
## reversed_separated_nonempty_llist(AMPERSAND,core_type_no_attr) -> alias_type . [ RBRACKET LBRACKETAT GREATER BAR AMPERSAND ]
##
## The known suffix of the stack is as follows:
## alias_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 358, spurious reduction of production tuple_type -> atomic_type
## In state 344, spurious reduction of production function_type -> tuple_type
## In state 374, spurious reduction of production alias_type -> function_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: LBRACKET QUOTED_STRING_EXPR WITH
##
## Concrete syntax: [ {%hello|world|} with
##
## Ends in an error in state: 382.
##
## core_type -> core_type . attribute [ RBRACKET LBRACKETAT GREATER BAR ]
## row_field -> core_type . [ RBRACKET GREATER BAR ]
##
## The known suffix of the stack is as follows:
## core_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 358, spurious reduction of production tuple_type -> atomic_type
## In state 344, spurious reduction of production function_type -> tuple_type
## In state 374, spurious reduction of production alias_type -> function_type
## In state 384, spurious reduction of production core_type -> alias_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: QUOTED_STRING_EXPR AMPERSAND
##
## Concrete syntax: {%hello|world|} &
##
## Ends in an error in state: 384.
##
## alias_type -> alias_type . AS QUOTE ident [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH GREATER EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND ]
## core_type -> alias_type . [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH GREATER EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA COLONGREATER CLASS BAR AND ]
##
## The known suffix of the stack is as follows:
## alias_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 358, spurious reduction of production tuple_type -> atomic_type
## In state 344, spurious reduction of production function_type -> tuple_type
## In state 374, spurious reduction of production alias_type -> function_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: LBRACKET BACKQUOTE LIDENT GREATER
##
## Concrete syntax: [ ` lident >
##
## Ends in an error in state: 385.
##
## atomic_type -> LBRACKET tag_field . RBRACKET [ WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## row_field -> tag_field . [ BAR ]
##
## The known suffix of the stack is as follows:
## LBRACKET tag_field
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 368, spurious reduction of production list(attribute) ->
## In state 381, spurious reduction of production tag_field -> name_tag list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: LBRACKET QUOTED_STRING_EXPR RBRACKET
##
## Concrete syntax: [ {%hello|world|} ]
##
## Ends in an error in state: 387.
##
## atomic_type -> LBRACKET row_field . BAR reversed_separated_nonempty_llist(BAR,row_field) RBRACKET [ WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## LBRACKET row_field
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 358, spurious reduction of production tuple_type -> atomic_type
## In state 344, spurious reduction of production function_type -> tuple_type
## In state 374, spurious reduction of production alias_type -> function_type
## In state 384, spurious reduction of production core_type -> alias_type
## In state 382, spurious reduction of production row_field -> core_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: LBRACKET QUOTED_STRING_EXPR BAR WITH
##
## Concrete syntax: [ {%hello|world|} | with
##
## Ends in an error in state: 388.
##
## atomic_type -> LBRACKET row_field BAR . reversed_separated_nonempty_llist(BAR,row_field) RBRACKET [ WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## LBRACKET row_field BAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: LBRACKET QUOTED_STRING_EXPR BAR QUOTED_STRING_EXPR GREATER
##
## Concrete syntax: [ {%hello|world|} | {%hello|world|} >
##
## Ends in an error in state: 389.
##
## atomic_type -> LBRACKET row_field BAR reversed_separated_nonempty_llist(BAR,row_field) . RBRACKET [ WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## reversed_separated_nonempty_llist(BAR,row_field) -> reversed_separated_nonempty_llist(BAR,row_field) . BAR row_field [ RBRACKET BAR ]
##
## The known suffix of the stack is as follows:
## LBRACKET row_field BAR reversed_separated_nonempty_llist(BAR,row_field)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 358, spurious reduction of production tuple_type -> atomic_type
## In state 344, spurious reduction of production function_type -> tuple_type
## In state 374, spurious reduction of production alias_type -> function_type
## In state 384, spurious reduction of production core_type -> alias_type
## In state 382, spurious reduction of production row_field -> core_type
## In state 363, spurious reduction of production reversed_separated_nonempty_llist(BAR,row_field) -> row_field
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: LBRACKETGREATER QUOTED_STRING_EXPR GREATER
##
## Concrete syntax: [> {%hello|world|} >
##
## Ends in an error in state: 391.
##
## atomic_type -> LBRACKETGREATER option(BAR) reversed_separated_nonempty_llist(BAR,row_field) . RBRACKET [ WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## reversed_separated_nonempty_llist(BAR,row_field) -> reversed_separated_nonempty_llist(BAR,row_field) . BAR row_field [ RBRACKET BAR ]
##
## The known suffix of the stack is as follows:
## LBRACKETGREATER option(BAR) reversed_separated_nonempty_llist(BAR,row_field)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 358, spurious reduction of production tuple_type -> atomic_type
## In state 344, spurious reduction of production function_type -> tuple_type
## In state 374, spurious reduction of production alias_type -> function_type
## In state 384, spurious reduction of production core_type -> alias_type
## In state 382, spurious reduction of production row_field -> core_type
## In state 363, spurious reduction of production reversed_separated_nonempty_llist(BAR,row_field) -> row_field
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: LBRACKETLESS BACKQUOTE LIDENT LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: [< ` lident [@ and ] while
##
## Ends in an error in state: 393.
##
## atomic_type -> LBRACKETLESS option(BAR) reversed_separated_nonempty_llist(BAR,row_field) . RBRACKET [ WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## atomic_type -> LBRACKETLESS option(BAR) reversed_separated_nonempty_llist(BAR,row_field) . GREATER reversed_nonempty_llist(name_tag) RBRACKET [ WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## reversed_separated_nonempty_llist(BAR,row_field) -> reversed_separated_nonempty_llist(BAR,row_field) . BAR row_field [ RBRACKET GREATER BAR ]
##
## The known suffix of the stack is as follows:
## LBRACKETLESS option(BAR) reversed_separated_nonempty_llist(BAR,row_field)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
## In state 381, spurious reduction of production tag_field -> name_tag list(attribute)
## In state 362, spurious reduction of production row_field -> tag_field
## In state 363, spurious reduction of production reversed_separated_nonempty_llist(BAR,row_field) -> row_field
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: LBRACKETLESS QUOTED_STRING_EXPR GREATER WITH
##
## Concrete syntax: [< {%hello|world|} > with
##
## Ends in an error in state: 395.
##
## atomic_type -> LBRACKETLESS option(BAR) reversed_separated_nonempty_llist(BAR,row_field) GREATER . reversed_nonempty_llist(name_tag) RBRACKET [ WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## LBRACKETLESS option(BAR) reversed_separated_nonempty_llist(BAR,row_field) GREATER
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: LBRACKETLESS QUOTED_STRING_EXPR GREATER BACKQUOTE LIDENT WITH
##
## Concrete syntax: [< {%hello|world|} > ` lident with
##
## Ends in an error in state: 396.
##
## atomic_type -> LBRACKETLESS option(BAR) reversed_separated_nonempty_llist(BAR,row_field) GREATER reversed_nonempty_llist(name_tag) . RBRACKET [ WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## reversed_nonempty_llist(name_tag) -> reversed_nonempty_llist(name_tag) . name_tag [ RBRACKET BACKQUOTE ]
##
## The known suffix of the stack is as follows:
## LBRACKETLESS option(BAR) reversed_separated_nonempty_llist(BAR,row_field) GREATER reversed_nonempty_llist(name_tag)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT EXCEPTION LPAREN COLONCOLON WITH
##
## Concrete syntax: include struct exception ( :: with
##
## Ends in an error in state: 400.
##
## constr_ident -> LPAREN COLONCOLON . RPAREN [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN OF MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL END CONSTRAINT COLON CLASS BAR AND ]
##
## The known suffix of the stack is as follows:
## LPAREN COLONCOLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACE LIDENT COLON LPAREN QUOTED_STRING_EXPR COMMA QUOTED_STRING_EXPR RPAREN WITH
##
## Concrete syntax: { lident : ( {%hello|world|} , {%hello|world|} ) with
##
## Ends in an error in state: 403.
##
## atomic_type -> LPAREN reversed_separated_nontrivial_llist(COMMA,core_type) RPAREN . type_longident [ error WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE HASH EXTERNAL EXCEPTION EQUAL END CONSTRAINT COLONGREATER CLASS BAR AS AND ]
## atomic_type -> LPAREN reversed_separated_nontrivial_llist(COMMA,core_type) RPAREN . HASH clty_longident [ error WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE HASH EXTERNAL EXCEPTION EQUAL END CONSTRAINT COLONGREATER CLASS BAR AS AND ]
##
## The known suffix of the stack is as follows:
## LPAREN reversed_separated_nontrivial_llist(COMMA,core_type) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACE LIDENT COLON LPAREN QUOTED_STRING_EXPR COMMA QUOTED_STRING_EXPR RPAREN HASH WITH
##
## Concrete syntax: { lident : ( {%hello|world|} , {%hello|world|} ) # with
##
## Ends in an error in state: 405.
##
## atomic_type -> LPAREN reversed_separated_nontrivial_llist(COMMA,core_type) RPAREN HASH . clty_longident [ error WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE HASH EXTERNAL EXCEPTION EQUAL END CONSTRAINT COLONGREATER CLASS BAR AS AND ]
##
## The known suffix of the stack is as follows:
## LPAREN reversed_separated_nontrivial_llist(COMMA,core_type) RPAREN HASH
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LBRACKET HASH UIDENT WITH
##
## Concrete syntax: [ # UIdent with
##
## Ends in an error in state: 406.
##
## mk_longident(mod_ext_longident,LIDENT) -> mod_ext_longident . DOT LIDENT [ error WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE HASH EXTERNAL EXCEPTION EQUAL END CONSTRAINT COMMA COLONGREATER COLONCOLON COLON CLASS BARRBRACKET BAR AS AND ]
## mk_longident(mod_ext_longident,UIDENT) -> mod_ext_longident . DOT UIDENT [ LPAREN DOT ]
## mod_ext_longident -> mod_ext_longident . LPAREN mod_ext_longident RPAREN [ LPAREN DOT ]
## mod_ext_longident -> mod_ext_longident . LPAREN error [ LPAREN DOT ]
##
## The known suffix of the stack is as follows:
## mod_ext_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LBRACKET HASH UIDENT DOT WITH
##
## Concrete syntax: [ # UIdent . with
##
## Ends in an error in state: 407.
##
## mk_longident(mod_ext_longident,LIDENT) -> mod_ext_longident DOT . LIDENT [ error WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE HASH EXTERNAL EXCEPTION EQUAL END CONSTRAINT COMMA COLONGREATER COLONCOLON COLON CLASS BARRBRACKET BAR AS AND ]
## mk_longident(mod_ext_longident,UIDENT) -> mod_ext_longident DOT . UIDENT [ LPAREN DOT ]
##
## The known suffix of the stack is as follows:
## mod_ext_longident DOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: LPAREN QUOTED_STRING_EXPR COMMA QUOTED_STRING_EXPR COMMA WITH
##
## Concrete syntax: ( {%hello|world|} , {%hello|world|} , with
##
## Ends in an error in state: 413.
##
## reversed_separated_nontrivial_llist(COMMA,core_type) -> reversed_separated_nontrivial_llist(COMMA,core_type) COMMA . core_type [ RPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## reversed_separated_nontrivial_llist(COMMA,core_type) COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: LPAREN QUOTED_STRING_EXPR COMMA QUOTED_STRING_EXPR COMMA QUOTED_STRING_EXPR WITH
##
## Concrete syntax: ( {%hello|world|} , {%hello|world|} , {%hello|world|} with
##
## Ends in an error in state: 414.
##
## core_type -> core_type . attribute [ RPAREN LBRACKETAT COMMA ]
## reversed_separated_nontrivial_llist(COMMA,core_type) -> reversed_separated_nontrivial_llist(COMMA,core_type) COMMA core_type . [ RPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## reversed_separated_nontrivial_llist(COMMA,core_type) COMMA core_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 358, spurious reduction of production tuple_type -> atomic_type
## In state 344, spurious reduction of production function_type -> tuple_type
## In state 374, spurious reduction of production alias_type -> function_type
## In state 384, spurious reduction of production core_type -> alias_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACE LIDENT COLON LPAREN QUOTED_STRING_EXPR WITH
##
## Concrete syntax: { lident : ( {%hello|world|} with
##
## Ends in an error in state: 415.
##
## atomic_type -> LPAREN core_type . RPAREN [ error WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE HASH EXTERNAL EXCEPTION EQUAL END CONSTRAINT COLONGREATER CLASS BAR AS AND ]
## core_type -> core_type . attribute [ RPAREN LBRACKETAT COMMA ]
## reversed_separated_nontrivial_llist(COMMA,core_type) -> core_type . COMMA core_type [ RPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## LPAREN core_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 358, spurious reduction of production tuple_type -> atomic_type
## In state 344, spurious reduction of production function_type -> tuple_type
## In state 374, spurious reduction of production alias_type -> function_type
## In state 384, spurious reduction of production core_type -> alias_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: LPAREN QUOTED_STRING_EXPR COMMA WITH
##
## Concrete syntax: ( {%hello|world|} , with
##
## Ends in an error in state: 417.
##
## reversed_separated_nontrivial_llist(COMMA,core_type) -> core_type COMMA . core_type [ RPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## core_type COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: LPAREN QUOTED_STRING_EXPR COMMA QUOTED_STRING_EXPR WITH
##
## Concrete syntax: ( {%hello|world|} , {%hello|world|} with
##
## Ends in an error in state: 418.
##
## core_type -> core_type . attribute [ RPAREN LBRACKETAT COMMA ]
## reversed_separated_nontrivial_llist(COMMA,core_type) -> core_type COMMA core_type . [ RPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## core_type COMMA core_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 358, spurious reduction of production tuple_type -> atomic_type
## In state 344, spurious reduction of production function_type -> tuple_type
## In state 374, spurious reduction of production alias_type -> function_type
## In state 384, spurious reduction of production core_type -> alias_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACE LIDENT COLON LIDENT WHILE
##
## Concrete syntax: { lident : lident while
##
## Ends in an error in state: 419.
##
## function_type -> LIDENT . COLON tuple_type MINUSGREATER function_type [ error WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END CONSTRAINT COLONGREATER CLASS AS AND ]
## mk_longident(mod_ext_longident,LIDENT) -> LIDENT . [ error WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE HASH EXTERNAL EXCEPTION EQUAL END CONSTRAINT COLONGREATER CLASS AS AND ]
##
## The known suffix of the stack is as follows:
## LIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACE LIDENT COLON LIDENT COLON WITH
##
## Concrete syntax: { lident : lident : with
##
## Ends in an error in state: 420.
##
## function_type -> LIDENT COLON . tuple_type MINUSGREATER function_type [ error WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END CONSTRAINT COLONGREATER CLASS AS AND ]
##
## The known suffix of the stack is as follows:
## LIDENT COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACE LIDENT COLON LIDENT COLON QUOTED_STRING_EXPR WITH
##
## Concrete syntax: { lident : lident : {%hello|world|} with
##
## Ends in an error in state: 421.
##
## function_type -> LIDENT COLON tuple_type . MINUSGREATER function_type [ error WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END CONSTRAINT COLONGREATER CLASS AS AND ]
##
## The known suffix of the stack is as follows:
## LIDENT COLON tuple_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 358, spurious reduction of production tuple_type -> atomic_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACE LIDENT COLON LIDENT COLON QUOTED_STRING_EXPR MINUSGREATER WITH
##
## Concrete syntax: { lident : lident : {%hello|world|} -> with
##
## Ends in an error in state: 422.
##
## function_type -> LIDENT COLON tuple_type MINUSGREATER . function_type [ error WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END CONSTRAINT COLONGREATER CLASS AS AND ]
##
## The known suffix of the stack is as follows:
## LIDENT COLON tuple_type MINUSGREATER
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACE LIDENT COLON LESS WITH
##
## Concrete syntax: { lident : < with
##
## Ends in an error in state: 423.
##
## atomic_type -> LESS . meth_list GREATER [ error WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE HASH EXTERNAL EXCEPTION EQUAL END CONSTRAINT COLONGREATER CLASS BAR AS AND ]
## atomic_type -> LESS . GREATER [ error WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE HASH EXTERNAL EXCEPTION EQUAL END CONSTRAINT COLONGREATER CLASS BAR AS AND ]
##
## The known suffix of the stack is as follows:
## LESS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACE LIDENT COLON LESS DOTDOT WITH
##
## Concrete syntax: { lident : < .. with
##
## Ends in an error in state: 426.
##
## atomic_type -> LESS meth_list . GREATER [ error WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE HASH EXTERNAL EXCEPTION EQUAL END CONSTRAINT COLONGREATER CLASS BAR AS AND ]
##
## The known suffix of the stack is as follows:
## LESS meth_list
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: LESS QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: < {%hello|world|} while
##
## Ends in an error in state: 428.
##
## atomic_type -> atomic_type . type_longident [ UIDENT SEMI LIDENT HASH GREATER ]
## atomic_type -> atomic_type . HASH clty_longident [ UIDENT SEMI LIDENT HASH GREATER ]
## meth_list -> atomic_type . SEMI meth_list [ GREATER ]
## meth_list -> atomic_type . SEMI [ GREATER ]
## meth_list -> atomic_type . [ GREATER ]
##
## The known suffix of the stack is as follows:
## atomic_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: LESS QUOTED_STRING_EXPR SEMI WITH
##
## Concrete syntax: < {%hello|world|} ; with
##
## Ends in an error in state: 429.
##
## meth_list -> atomic_type SEMI . meth_list [ GREATER ]
## meth_list -> atomic_type SEMI . [ GREATER ]
##
## The known suffix of the stack is as follows:
## atomic_type SEMI
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET LBRACKETPERCENT UNDERSCORE
##
## Concrete syntax: [ [% _
##
## Ends in an error in state: 431.
##
## extension -> LBRACKETPERCENT . attr_id payload RBRACKET [ error WITH VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LBRACKETPERCENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET LBRACKETPERCENT AND VIRTUAL
##
## Concrete syntax: [ [% and virtual
##
## Ends in an error in state: 432.
##
## extension -> LBRACKETPERCENT attr_id . payload RBRACKET [ error WITH VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LBRACKETPERCENT attr_id
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: SEMISEMI WITH
##
## Concrete syntax: ;; with
##
## Ends in an error in state: 433.
##
## list(structure_element) -> SEMISEMI . list(structure_element) [ RBRACKET EOF ]
## list(structure_element) -> SEMISEMI . seq_expr list(post_item_attribute) list(structure_element) [ RBRACKET EOF ]
##
## The known suffix of the stack is as follows:
## SEMISEMI
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OPEN WITH
##
## Concrete syntax: open with
##
## Ends in an error in state: 435.
##
## open_declaration -> OPEN . ext list(attribute) module_expr list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
## open_declaration -> OPEN . BANG ext list(attribute) module_expr list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## OPEN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OPEN BANG WITH
##
## Concrete syntax: open ! with
##
## Ends in an error in state: 436.
##
## open_declaration -> OPEN BANG . ext list(attribute) module_expr list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## OPEN BANG
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OPEN BANG PERCENT AND WHILE
##
## Concrete syntax: open ! % and while
##
## Ends in an error in state: 437.
##
## open_declaration -> OPEN BANG ext . list(attribute) module_expr list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## OPEN BANG ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OPEN BANG LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: open ! [@ and ] while
##
## Ends in an error in state: 438.
##
## open_declaration -> OPEN BANG ext list(attribute) . module_expr list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## OPEN BANG ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE LPAREN WITH
##
## Concrete syntax: include ( with
##
## Ends in an error in state: 439.
##
## paren_module_expr -> LPAREN . module_expr COLON module_type RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
## paren_module_expr -> LPAREN . module_expr COLON module_type error [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
## paren_module_expr -> LPAREN . module_expr RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
## paren_module_expr -> LPAREN . module_expr error [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
## paren_module_expr -> LPAREN . VAL list(attribute) expr RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
## paren_module_expr -> LPAREN . VAL list(attribute) expr COLON module_type RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
## paren_module_expr -> LPAREN . VAL list(attribute) expr COLON module_type COLONGREATER module_type RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
## paren_module_expr -> LPAREN . VAL list(attribute) expr COLONGREATER module_type RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
## paren_module_expr -> LPAREN . VAL list(attribute) expr COLON error [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
## paren_module_expr -> LPAREN . VAL list(attribute) expr COLONGREATER error [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
## paren_module_expr -> LPAREN . VAL list(attribute) expr error [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE LPAREN VAL WITH
##
## Concrete syntax: include ( val with
##
## Ends in an error in state: 440.
##
## paren_module_expr -> LPAREN VAL . list(attribute) expr RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
## paren_module_expr -> LPAREN VAL . list(attribute) expr COLON module_type RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
## paren_module_expr -> LPAREN VAL . list(attribute) expr COLON module_type COLONGREATER module_type RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
## paren_module_expr -> LPAREN VAL . list(attribute) expr COLONGREATER module_type RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
## paren_module_expr -> LPAREN VAL . list(attribute) expr COLON error [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
## paren_module_expr -> LPAREN VAL . list(attribute) expr COLONGREATER error [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
## paren_module_expr -> LPAREN VAL . list(attribute) expr error [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
##
## The known suffix of the stack is as follows:
## LPAREN VAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE LPAREN VAL LBRACKETAT AND RBRACKET VIRTUAL
##
## Concrete syntax: include ( val [@ and ] virtual
##
## Ends in an error in state: 441.
##
## paren_module_expr -> LPAREN VAL list(attribute) . expr RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
## paren_module_expr -> LPAREN VAL list(attribute) . expr COLON module_type RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
## paren_module_expr -> LPAREN VAL list(attribute) . expr COLON module_type COLONGREATER module_type RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
## paren_module_expr -> LPAREN VAL list(attribute) . expr COLONGREATER module_type RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
## paren_module_expr -> LPAREN VAL list(attribute) . expr COLON error [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
## paren_module_expr -> LPAREN VAL list(attribute) . expr COLONGREATER error [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
## paren_module_expr -> LPAREN VAL list(attribute) . expr error [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
##
## The known suffix of the stack is as follows:
## LPAREN VAL list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET TRY WITH
##
## Concrete syntax: [ try with
##
## Ends in an error in state: 442.
##
## expr -> TRY . ext list(attribute) seq_expr WITH reversed_preceded_or_separated_nonempty_llist(BAR,match_case) [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> TRY . ext list(attribute) seq_expr WITH error [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## TRY
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET TRY PERCENT AND VIRTUAL
##
## Concrete syntax: [ try % and virtual
##
## Ends in an error in state: 443.
##
## expr -> TRY ext . list(attribute) seq_expr WITH reversed_preceded_or_separated_nonempty_llist(BAR,match_case) [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> TRY ext . list(attribute) seq_expr WITH error [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## TRY ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET TRY LBRACKETAT AND RBRACKET VIRTUAL
##
## Concrete syntax: [ try [@ and ] virtual
##
## Ends in an error in state: 444.
##
## expr -> TRY ext list(attribute) . seq_expr WITH reversed_preceded_or_separated_nonempty_llist(BAR,match_case) [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> TRY ext list(attribute) . seq_expr WITH error [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## TRY ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: MATCH WITH
##
## Concrete syntax: match with
##
## Ends in an error in state: 447.
##
## expr -> MATCH . ext list(attribute) seq_expr WITH reversed_preceded_or_separated_nonempty_llist(BAR,match_case) [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## MATCH
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: MATCH PERCENT AND VIRTUAL
##
## Concrete syntax: match % and virtual
##
## Ends in an error in state: 448.
##
## expr -> MATCH ext . list(attribute) seq_expr WITH reversed_preceded_or_separated_nonempty_llist(BAR,match_case) [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## MATCH ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: MATCH LBRACKETAT AND RBRACKET VIRTUAL
##
## Concrete syntax: match [@ and ] virtual
##
## Ends in an error in state: 449.
##
## expr -> MATCH ext list(attribute) . seq_expr WITH reversed_preceded_or_separated_nonempty_llist(BAR,match_case) [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## MATCH ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LIDENT WHILE
##
## Concrete syntax: lident while
##
## Ends in an error in state: 450.
##
## expr -> LIDENT . LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## val_ident -> LIDENT . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LIDENT LESSMINUS WITH
##
## Concrete syntax: lident <- with
##
## Ends in an error in state: 451.
##
## expr -> LIDENT LESSMINUS . expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LIDENT LESSMINUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LETOP WITH
##
## Concrete syntax: let* with
##
## Ends in an error in state: 452.
##
## expr -> LETOP . letop_bindings IN seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LETOP
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LBRACKETBAR WITH
##
## Concrete syntax: [| with
##
## Ends in an error in state: 453.
##
## simple_delimited_pattern -> LBRACKETBAR . separated_or_terminated_nonempty_list(SEMI,pattern) BARRBRACKET [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
## simple_delimited_pattern -> LBRACKETBAR . BARRBRACKET [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
## simple_delimited_pattern -> LBRACKETBAR . separated_or_terminated_nonempty_list(SEMI,pattern) error [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
##
## The known suffix of the stack is as follows:
## LBRACKETBAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LBRACKET PLUS WITH
##
## Concrete syntax: [ + with
##
## Ends in an error in state: 454.
##
## signed_constant -> PLUS . INT [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT DOTDOT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## signed_constant -> PLUS . FLOAT [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT DOTDOT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
##
## The known suffix of the stack is as follows:
## PLUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LBRACKET MINUS WITH
##
## Concrete syntax: [ - with
##
## Ends in an error in state: 455.
##
## signed_constant -> MINUS . INT [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT DOTDOT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## signed_constant -> MINUS . FLOAT [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT DOTDOT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
##
## The known suffix of the stack is as follows:
## MINUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LBRACKET LPAREN WITH
##
## Concrete syntax: [ ( with
##
## Ends in an error in state: 458.
##
## constr_extra_nonprefix_ident -> LPAREN . RPAREN [ error UNDERSCORE UIDENT TRUE STRING SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_EXPR PLUS MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LAZY INT HASH FLOAT FALSE EXCEPTION COMMA COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
## constr_longident -> LPAREN . COLONCOLON RPAREN [ error UNDERSCORE UIDENT TRUE STRING SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_EXPR PLUS MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LAZY INT HASH FLOAT FALSE EXCEPTION COMMA COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
## simple_pattern_not_ident -> LPAREN . pattern RPAREN [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## simple_pattern_not_ident -> LPAREN . MODULE ext list(attribute) module_name RPAREN [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## simple_pattern_not_ident -> LPAREN . MODULE ext list(attribute) module_name COLON module_type RPAREN [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## simple_pattern_not_ident -> LPAREN . pattern error [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## simple_pattern_not_ident -> LPAREN . pattern COLON core_type RPAREN [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## simple_pattern_not_ident -> LPAREN . pattern COLON core_type error [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## simple_pattern_not_ident -> LPAREN . pattern COLON error [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## simple_pattern_not_ident -> LPAREN . MODULE ext list(attribute) module_name COLON module_type error [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## val_extra_ident -> LPAREN . operator RPAREN [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## val_extra_ident -> LPAREN . operator error [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## val_extra_ident -> LPAREN . error [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## val_extra_ident -> LPAREN . MODULE error [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LBRACKET LPAREN MODULE WITH
##
## Concrete syntax: [ ( module with
##
## Ends in an error in state: 460.
##
## simple_pattern_not_ident -> LPAREN MODULE . ext list(attribute) module_name RPAREN [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## simple_pattern_not_ident -> LPAREN MODULE . ext list(attribute) module_name COLON module_type RPAREN [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## simple_pattern_not_ident -> LPAREN MODULE . ext list(attribute) module_name COLON module_type error [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## val_extra_ident -> LPAREN MODULE . error [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
##
## The known suffix of the stack is as follows:
## LPAREN MODULE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LBRACKET LPAREN MODULE PERCENT AND WHILE
##
## Concrete syntax: [ ( module % and while
##
## Ends in an error in state: 462.
##
## simple_pattern_not_ident -> LPAREN MODULE ext . list(attribute) module_name RPAREN [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## simple_pattern_not_ident -> LPAREN MODULE ext . list(attribute) module_name COLON module_type RPAREN [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## simple_pattern_not_ident -> LPAREN MODULE ext . list(attribute) module_name COLON module_type error [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
##
## The known suffix of the stack is as follows:
## LPAREN MODULE ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LBRACKET LPAREN MODULE LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: [ ( module [@ and ] while
##
## Ends in an error in state: 463.
##
## simple_pattern_not_ident -> LPAREN MODULE ext list(attribute) . module_name RPAREN [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## simple_pattern_not_ident -> LPAREN MODULE ext list(attribute) . module_name COLON module_type RPAREN [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## simple_pattern_not_ident -> LPAREN MODULE ext list(attribute) . module_name COLON module_type error [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
##
## The known suffix of the stack is as follows:
## LPAREN MODULE ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LBRACKET LPAREN MODULE UIDENT WITH
##
## Concrete syntax: [ ( module UIdent with
##
## Ends in an error in state: 464.
##
## simple_pattern_not_ident -> LPAREN MODULE ext list(attribute) module_name . RPAREN [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## simple_pattern_not_ident -> LPAREN MODULE ext list(attribute) module_name . COLON module_type RPAREN [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## simple_pattern_not_ident -> LPAREN MODULE ext list(attribute) module_name . COLON module_type error [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
##
## The known suffix of the stack is as follows:
## LPAREN MODULE ext list(attribute) module_name
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LBRACKET LPAREN MODULE UIDENT COLON WITH
##
## Concrete syntax: [ ( module UIdent : with
##
## Ends in an error in state: 466.
##
## simple_pattern_not_ident -> LPAREN MODULE ext list(attribute) module_name COLON . module_type RPAREN [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## simple_pattern_not_ident -> LPAREN MODULE ext list(attribute) module_name COLON . module_type error [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
##
## The known suffix of the stack is as follows:
## LPAREN MODULE ext list(attribute) module_name COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE LPAREN MODULE WITH
##
## Concrete syntax: include ( module with
##
## Ends in an error in state: 467.
##
## module_type -> MODULE . TYPE OF list(attribute) module_expr [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## MODULE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE LPAREN MODULE TYPE WITH
##
## Concrete syntax: include ( module type with
##
## Ends in an error in state: 468.
##
## module_type -> MODULE TYPE . OF list(attribute) module_expr [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## MODULE TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE LPAREN MODULE TYPE OF WITH
##
## Concrete syntax: include ( module type of with
##
## Ends in an error in state: 469.
##
## module_type -> MODULE TYPE OF . list(attribute) module_expr [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## MODULE TYPE OF
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE LPAREN MODULE TYPE OF LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: include ( module type of [@ and ] while
##
## Ends in an error in state: 470.
##
## module_type -> MODULE TYPE OF list(attribute) . module_expr [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## MODULE TYPE OF list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE LPAREN STRUCT WITH
##
## Concrete syntax: include ( struct with
##
## Ends in an error in state: 471.
##
## module_expr -> STRUCT . list(attribute) structure END [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
## module_expr -> STRUCT . list(attribute) structure error [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
##
## The known suffix of the stack is as follows:
## STRUCT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE LPAREN STRUCT LBRACKETAT AND RBRACKET METHOD
##
## Concrete syntax: include ( struct [@ and ] method
##
## Ends in an error in state: 472.
##
## module_expr -> STRUCT list(attribute) . structure END [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
## module_expr -> STRUCT list(attribute) . structure error [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
##
## The known suffix of the stack is as follows:
## STRUCT list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1700, spurious reduction of production list(attribute) ->
## In state 1701, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT SEMISEMI WITH
##
## Concrete syntax: include struct ;; with
##
## Ends in an error in state: 473.
##
## list(structure_element) -> SEMISEMI . list(structure_element) [ error END ]
## list(structure_element) -> SEMISEMI . seq_expr list(post_item_attribute) list(structure_element) [ error END ]
##
## The known suffix of the stack is as follows:
## SEMISEMI
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET PREFIXOP WITH
##
## Concrete syntax: [ !+ with
##
## Ends in an error in state: 475.
##
## simple_expr -> PREFIXOP . simple_expr [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## PREFIXOP
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET NEW WITH
##
## Concrete syntax: [ new with
##
## Ends in an error in state: 476.
##
## simple_expr -> NEW . ext list(attribute) class_longident [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## NEW
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET NEW PERCENT AND WHILE
##
## Concrete syntax: [ new % and while
##
## Ends in an error in state: 477.
##
## simple_expr -> NEW ext . list(attribute) class_longident [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## NEW ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET NEW LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: [ new [@ and ] while
##
## Ends in an error in state: 478.
##
## simple_expr -> NEW ext list(attribute) . class_longident [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## NEW ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LBRACE UIDENT WITH
##
## Concrete syntax: { UIdent with
##
## Ends in an error in state: 480.
##
## mk_longident(mod_longident,LIDENT) -> mod_longident . DOT LIDENT [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## mk_longident(mod_longident,UIDENT) -> mod_longident . DOT UIDENT [ DOT ]
##
## The known suffix of the stack is as follows:
## mod_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LBRACE UIDENT DOT WITH
##
## Concrete syntax: { UIdent . with
##
## Ends in an error in state: 481.
##
## mk_longident(mod_longident,LIDENT) -> mod_longident DOT . LIDENT [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESSMINUS LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## mk_longident(mod_longident,UIDENT) -> mod_longident DOT . UIDENT [ DOTOP DOT ]
##
## The known suffix of the stack is as follows:
## mod_longident DOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET LPAREN WITH
##
## Concrete syntax: [ ( with
##
## Ends in an error in state: 485.
##
## constr_extra_nonprefix_ident -> LPAREN . RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## constr_longident -> LPAREN . COLONCOLON RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> LPAREN . seq_expr RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> LPAREN . seq_expr error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> LPAREN . seq_expr type_constraint RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> LPAREN . MODULE ext list(attribute) module_expr RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> LPAREN . MODULE ext list(attribute) module_expr COLON module_type RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> LPAREN . MODULE ext list(attribute) module_expr COLON error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## val_extra_ident -> LPAREN . operator RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## val_extra_ident -> LPAREN . operator error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## val_extra_ident -> LPAREN . error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## val_extra_ident -> LPAREN . MODULE error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LPAREN PREFIXOP WITH
##
## Concrete syntax: ( !+ with
##
## Ends in an error in state: 486.
##
## operator -> PREFIXOP . [ error RPAREN ]
## simple_expr -> PREFIXOP . simple_expr [ error UIDENT TRUE TILDE STRING STAR SEMI RPAREN QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL NEW MINUSDOT MINUS LPAREN LIDENT LESS LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 HASHOP HASH GREATER FLOAT FALSE EQUAL DOTOP DOT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CHAR BEGIN BARBAR BANG BACKQUOTE AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## PREFIXOP
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET LBRACKETBAR WITH
##
## Concrete syntax: [ [| with
##
## Ends in an error in state: 488.
##
## simple_expr -> LBRACKETBAR . separated_or_terminated_nonempty_list(SEMI,expr) BARRBRACKET [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> LBRACKETBAR . separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> LBRACKETBAR . BARRBRACKET [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LBRACKETBAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET OBJECT WITH
##
## Concrete syntax: [ object with
##
## Ends in an error in state: 489.
##
## expr -> OBJECT . ext list(attribute) class_self_pattern list(text_cstr(class_field)) END [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> OBJECT . ext list(attribute) class_self_pattern list(text_cstr(class_field)) error [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## OBJECT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET OBJECT LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: [ object [@ and ] while
##
## Ends in an error in state: 491.
##
## expr -> OBJECT ext list(attribute) . class_self_pattern list(text_cstr(class_field)) END [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> OBJECT ext list(attribute) . class_self_pattern list(text_cstr(class_field)) error [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## OBJECT ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1700, spurious reduction of production list(attribute) ->
## In state 1701, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET OBJECT LPAREN FALSE RPAREN WITH
##
## Concrete syntax: [ object ( false ) with
##
## Ends in an error in state: 492.
##
## expr -> OBJECT ext list(attribute) class_self_pattern . list(text_cstr(class_field)) END [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> OBJECT ext list(attribute) class_self_pattern . list(text_cstr(class_field)) error [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## OBJECT ext list(attribute) class_self_pattern
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT VAL WITH
##
## Concrete syntax: object val with
##
## Ends in an error in state: 493.
##
## class_field -> VAL . value list(post_item_attribute) [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## VAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT VAL BANG WITH
##
## Concrete syntax: object val ! with
##
## Ends in an error in state: 494.
##
## value -> BANG . list(attribute) mutable_flag LIDENT EQUAL seq_expr [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
## value -> BANG . list(attribute) mutable_flag LIDENT type_constraint EQUAL seq_expr [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## BANG
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT VAL BANG LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: object val ! [@ and ] while
##
## Ends in an error in state: 495.
##
## value -> BANG list(attribute) . mutable_flag LIDENT EQUAL seq_expr [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
## value -> BANG list(attribute) . mutable_flag LIDENT type_constraint EQUAL seq_expr [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## BANG list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT VAL BANG MUTABLE WITH
##
## Concrete syntax: object val ! mutable with
##
## Ends in an error in state: 497.
##
## value -> BANG list(attribute) mutable_flag . LIDENT EQUAL seq_expr [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
## value -> BANG list(attribute) mutable_flag . LIDENT type_constraint EQUAL seq_expr [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## BANG list(attribute) mutable_flag
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT VAL BANG LIDENT WITH
##
## Concrete syntax: object val ! lident with
##
## Ends in an error in state: 498.
##
## value -> BANG list(attribute) mutable_flag LIDENT . EQUAL seq_expr [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
## value -> BANG list(attribute) mutable_flag LIDENT . type_constraint EQUAL seq_expr [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## BANG list(attribute) mutable_flag LIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT VAL BANG LIDENT EQUAL WITH
##
## Concrete syntax: object val ! lident = with
##
## Ends in an error in state: 499.
##
## value -> BANG list(attribute) mutable_flag LIDENT EQUAL . seq_expr [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## BANG list(attribute) mutable_flag LIDENT EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET MATCH WITH
##
## Concrete syntax: [ match with
##
## Ends in an error in state: 500.
##
## expr -> MATCH . ext list(attribute) seq_expr WITH reversed_preceded_or_separated_nonempty_llist(BAR,match_case) [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## MATCH
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET MATCH PERCENT AND VIRTUAL
##
## Concrete syntax: [ match % and virtual
##
## Ends in an error in state: 501.
##
## expr -> MATCH ext . list(attribute) seq_expr WITH reversed_preceded_or_separated_nonempty_llist(BAR,match_case) [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## MATCH ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET MATCH LBRACKETAT AND RBRACKET VIRTUAL
##
## Concrete syntax: [ match [@ and ] virtual
##
## Ends in an error in state: 502.
##
## expr -> MATCH ext list(attribute) . seq_expr WITH reversed_preceded_or_separated_nonempty_llist(BAR,match_case) [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## MATCH ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LET WITH
##
## Concrete syntax: let with
##
## Ends in an error in state: 503.
##
## expr -> LET . MODULE ext list(attribute) module_name module_binding_body IN seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> LET . EXCEPTION ext list(attribute) constr_ident generalized_constructor_arguments list(attribute) IN seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> LET . OPEN ext list(attribute) module_expr IN seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> LET . OPEN BANG ext list(attribute) module_expr IN seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## let_bindings(ext) -> LET . ext list(attribute) rec_flag let_binding_body list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## LET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LET OPEN WITH
##
## Concrete syntax: let open with
##
## Ends in an error in state: 504.
##
## expr -> LET OPEN . ext list(attribute) module_expr IN seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> LET OPEN . BANG ext list(attribute) module_expr IN seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LET OPEN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LET OPEN BANG WITH
##
## Concrete syntax: let open ! with
##
## Ends in an error in state: 505.
##
## expr -> LET OPEN BANG . ext list(attribute) module_expr IN seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LET OPEN BANG
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LET OPEN BANG PERCENT AND WHILE
##
## Concrete syntax: let open ! % and while
##
## Ends in an error in state: 506.
##
## expr -> LET OPEN BANG ext . list(attribute) module_expr IN seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LET OPEN BANG ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LET OPEN BANG LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: let open ! [@ and ] while
##
## Ends in an error in state: 507.
##
## expr -> LET OPEN BANG ext list(attribute) . module_expr IN seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LET OPEN BANG ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE FUNCTOR WITH
##
## Concrete syntax: include functor with
##
## Ends in an error in state: 508.
##
## module_expr -> FUNCTOR . list(attribute) reversed_nonempty_llist(functor_arg) MINUSGREATER module_expr [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
##
## The known suffix of the stack is as follows:
## FUNCTOR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE FUNCTOR LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: include functor [@ and ] while
##
## Ends in an error in state: 509.
##
## module_expr -> FUNCTOR list(attribute) . reversed_nonempty_llist(functor_arg) MINUSGREATER module_expr [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
##
## The known suffix of the stack is as follows:
## FUNCTOR list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: MODULE UIDENT LPAREN WITH
##
## Concrete syntax: module UIdent ( with
##
## Ends in an error in state: 510.
##
## functor_arg -> LPAREN . RPAREN [ MINUSGREATER LPAREN EQUAL COLON ]
## functor_arg -> LPAREN . module_name COLON module_type RPAREN [ MINUSGREATER LPAREN EQUAL COLON ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: MODULE UIDENT LPAREN UIDENT WITH
##
## Concrete syntax: module UIdent ( UIdent with
##
## Ends in an error in state: 512.
##
## functor_arg -> LPAREN module_name . COLON module_type RPAREN [ MINUSGREATER LPAREN EQUAL COLON ]
##
## The known suffix of the stack is as follows:
## LPAREN module_name
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: MODULE UIDENT LPAREN UIDENT COLON WITH
##
## Concrete syntax: module UIdent ( UIdent : with
##
## Ends in an error in state: 513.
##
## functor_arg -> LPAREN module_name COLON . module_type RPAREN [ MINUSGREATER LPAREN EQUAL COLON ]
##
## The known suffix of the stack is as follows:
## LPAREN module_name COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE LPAREN WITH
##
## Concrete syntax: include ( with
##
## Ends in an error in state: 514.
##
## module_type -> LPAREN . module_type RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER CLASS AND ]
## module_type -> LPAREN . module_type error [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER CLASS AND ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE LPAREN LPAREN WITH
##
## Concrete syntax: include ( ( with
##
## Ends in an error in state: 515.
##
## module_type -> LPAREN . module_type RPAREN [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## module_type -> LPAREN . module_type error [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE LPAREN FUNCTOR WITH
##
## Concrete syntax: include ( functor with
##
## Ends in an error in state: 516.
##
## module_type -> FUNCTOR . list(attribute) reversed_nonempty_llist(functor_arg) MINUSGREATER module_type [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## FUNCTOR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE LPAREN FUNCTOR LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: include ( functor [@ and ] while
##
## Ends in an error in state: 517.
##
## module_type -> FUNCTOR list(attribute) . reversed_nonempty_llist(functor_arg) MINUSGREATER module_type [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## FUNCTOR list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE LPAREN FUNCTOR LPAREN RPAREN WITH
##
## Concrete syntax: include ( functor ( ) with
##
## Ends in an error in state: 518.
##
## module_type -> FUNCTOR list(attribute) reversed_nonempty_llist(functor_arg) . MINUSGREATER module_type [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## reversed_nonempty_llist(functor_arg) -> reversed_nonempty_llist(functor_arg) . functor_arg [ MINUSGREATER LPAREN ]
##
## The known suffix of the stack is as follows:
## FUNCTOR list(attribute) reversed_nonempty_llist(functor_arg)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE LPAREN FUNCTOR LPAREN RPAREN MINUSGREATER WITH
##
## Concrete syntax: include ( functor ( ) -> with
##
## Ends in an error in state: 519.
##
## module_type -> FUNCTOR list(attribute) reversed_nonempty_llist(functor_arg) MINUSGREATER . module_type [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## FUNCTOR list(attribute) reversed_nonempty_llist(functor_arg) MINUSGREATER
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE LPAREN FUNCTOR LPAREN RPAREN MINUSGREATER QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: include ( functor ( ) -> {%hello|world|} while
##
## Ends in an error in state: 521.
##
## module_type -> FUNCTOR list(attribute) reversed_nonempty_llist(functor_arg) MINUSGREATER module_type . [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## module_type -> module_type . attribute [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## module_type -> module_type . MINUSGREATER module_type [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## module_type -> module_type . WITH reversed_separated_nonempty_llist(AND,with_constraint) [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## FUNCTOR list(attribute) reversed_nonempty_llist(functor_arg) MINUSGREATER module_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE LPAREN QUOTED_STRING_EXPR WITH WITH
##
## Concrete syntax: include ( {%hello|world|} with with
##
## Ends in an error in state: 522.
##
## module_type -> module_type WITH . reversed_separated_nonempty_llist(AND,with_constraint) [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## module_type WITH
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE LPAREN QUOTED_STRING_EXPR WITH TYPE WITH
##
## Concrete syntax: include ( {%hello|world|} with type with
##
## Ends in an error in state: 523.
##
## with_constraint -> TYPE . type_parameters label_longident with_type_binder alias_type reversed_llist(preceded(CONSTRAINT,constrain)) [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## with_constraint -> TYPE . type_parameters label_longident COLONEQUAL alias_type [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE LPAREN QUOTED_STRING_EXPR WITH TYPE UNDERSCORE WITH
##
## Concrete syntax: include ( {%hello|world|} with type _ with
##
## Ends in an error in state: 524.
##
## with_constraint -> TYPE type_parameters . label_longident with_type_binder alias_type reversed_llist(preceded(CONSTRAINT,constrain)) [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## with_constraint -> TYPE type_parameters . label_longident COLONEQUAL alias_type [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## TYPE type_parameters
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE LPAREN QUOTED_STRING_EXPR WITH TYPE LIDENT WITH
##
## Concrete syntax: include ( {%hello|world|} with type lident with
##
## Ends in an error in state: 526.
##
## with_constraint -> TYPE type_parameters label_longident . with_type_binder alias_type reversed_llist(preceded(CONSTRAINT,constrain)) [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## with_constraint -> TYPE type_parameters label_longident . COLONEQUAL alias_type [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## TYPE type_parameters label_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE QUOTED_STRING_EXPR WITH TYPE LIDENT EQUAL WITH
##
## Concrete syntax: include {%hello|world|} with type lident = with
##
## Ends in an error in state: 527.
##
## with_type_binder -> EQUAL . [ UNDERSCORE UIDENT QUOTED_STRING_EXPR QUOTE QUESTION OPTLABEL LPAREN LIDENT LESS LBRACKETPERCENT LBRACKETLESS LBRACKETGREATER LBRACKET HASH ]
## with_type_binder -> EQUAL . PRIVATE [ UNDERSCORE UIDENT QUOTED_STRING_EXPR QUOTE QUESTION OPTLABEL LPAREN LIDENT LESS LBRACKETPERCENT LBRACKETLESS LBRACKETGREATER LBRACKET HASH ]
##
## The known suffix of the stack is as follows:
## EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE LPAREN QUOTED_STRING_EXPR WITH TYPE LIDENT COLONEQUAL WITH
##
## Concrete syntax: include ( {%hello|world|} with type lident := with
##
## Ends in an error in state: 529.
##
## with_constraint -> TYPE type_parameters label_longident COLONEQUAL . alias_type [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## TYPE type_parameters label_longident COLONEQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACE LIDENT COLON LBRACKETLESS WITH
##
## Concrete syntax: { lident : [< with
##
## Ends in an error in state: 530.
##
## atomic_type -> LBRACKETLESS . option(BAR) reversed_separated_nonempty_llist(BAR,row_field) RBRACKET [ error WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE HASH EXTERNAL EXCEPTION EQUAL END CONSTRAINT COLONGREATER CLASS BAR AS AND ]
## atomic_type -> LBRACKETLESS . option(BAR) reversed_separated_nonempty_llist(BAR,row_field) GREATER reversed_nonempty_llist(name_tag) RBRACKET [ error WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE HASH EXTERNAL EXCEPTION EQUAL END CONSTRAINT COLONGREATER CLASS BAR AS AND ]
##
## The known suffix of the stack is as follows:
## LBRACKETLESS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACE LIDENT COLON LBRACKETLESS BAR WITH
##
## Concrete syntax: { lident : [< | with
##
## Ends in an error in state: 531.
##
## atomic_type -> LBRACKETLESS option(BAR) . reversed_separated_nonempty_llist(BAR,row_field) RBRACKET [ error WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE HASH EXTERNAL EXCEPTION EQUAL END CONSTRAINT COLONGREATER CLASS BAR AS AND ]
## atomic_type -> LBRACKETLESS option(BAR) . reversed_separated_nonempty_llist(BAR,row_field) GREATER reversed_nonempty_llist(name_tag) RBRACKET [ error WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE HASH EXTERNAL EXCEPTION EQUAL END CONSTRAINT COLONGREATER CLASS BAR AS AND ]
##
## The known suffix of the stack is as follows:
## LBRACKETLESS option(BAR)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACE LIDENT COLON LBRACKETLESS BACKQUOTE LIDENT LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: { lident : [< ` lident [@ and ] while
##
## Ends in an error in state: 532.
##
## atomic_type -> LBRACKETLESS option(BAR) reversed_separated_nonempty_llist(BAR,row_field) . RBRACKET [ error WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE HASH EXTERNAL EXCEPTION EQUAL END CONSTRAINT COLONGREATER CLASS BAR AS AND ]
## atomic_type -> LBRACKETLESS option(BAR) reversed_separated_nonempty_llist(BAR,row_field) . GREATER reversed_nonempty_llist(name_tag) RBRACKET [ error WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE HASH EXTERNAL EXCEPTION EQUAL END CONSTRAINT COLONGREATER CLASS BAR AS AND ]
## reversed_separated_nonempty_llist(BAR,row_field) -> reversed_separated_nonempty_llist(BAR,row_field) . BAR row_field [ RBRACKET GREATER BAR ]
##
## The known suffix of the stack is as follows:
## LBRACKETLESS option(BAR) reversed_separated_nonempty_llist(BAR,row_field)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
## In state 381, spurious reduction of production tag_field -> name_tag list(attribute)
## In state 362, spurious reduction of production row_field -> tag_field
## In state 363, spurious reduction of production reversed_separated_nonempty_llist(BAR,row_field) -> row_field
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACE LIDENT COLON LBRACKETLESS QUOTED_STRING_EXPR GREATER WITH
##
## Concrete syntax: { lident : [< {%hello|world|} > with
##
## Ends in an error in state: 534.
##
## atomic_type -> LBRACKETLESS option(BAR) reversed_separated_nonempty_llist(BAR,row_field) GREATER . reversed_nonempty_llist(name_tag) RBRACKET [ error WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE HASH EXTERNAL EXCEPTION EQUAL END CONSTRAINT COLONGREATER CLASS BAR AS AND ]
##
## The known suffix of the stack is as follows:
## LBRACKETLESS option(BAR) reversed_separated_nonempty_llist(BAR,row_field) GREATER
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACE LIDENT COLON LBRACKETLESS QUOTED_STRING_EXPR GREATER BACKQUOTE LIDENT WITH
##
## Concrete syntax: { lident : [< {%hello|world|} > ` lident with
##
## Ends in an error in state: 535.
##
## atomic_type -> LBRACKETLESS option(BAR) reversed_separated_nonempty_llist(BAR,row_field) GREATER reversed_nonempty_llist(name_tag) . RBRACKET [ error WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE HASH EXTERNAL EXCEPTION EQUAL END CONSTRAINT COLONGREATER CLASS BAR AS AND ]
## reversed_nonempty_llist(name_tag) -> reversed_nonempty_llist(name_tag) . name_tag [ RBRACKET BACKQUOTE ]
##
## The known suffix of the stack is as follows:
## LBRACKETLESS option(BAR) reversed_separated_nonempty_llist(BAR,row_field) GREATER reversed_nonempty_llist(name_tag)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACE LIDENT COLON LBRACKETGREATER WITH
##
## Concrete syntax: { lident : [> with
##
## Ends in an error in state: 537.
##
## atomic_type -> LBRACKETGREATER . option(BAR) reversed_separated_nonempty_llist(BAR,row_field) RBRACKET [ error WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE HASH EXTERNAL EXCEPTION EQUAL END CONSTRAINT COLONGREATER CLASS BAR AS AND ]
## atomic_type -> LBRACKETGREATER . RBRACKET [ error WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE HASH EXTERNAL EXCEPTION EQUAL END CONSTRAINT COLONGREATER CLASS BAR AS AND ]
##
## The known suffix of the stack is as follows:
## LBRACKETGREATER
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACE LIDENT COLON LBRACKETGREATER BAR WITH
##
## Concrete syntax: { lident : [> | with
##
## Ends in an error in state: 539.
##
## atomic_type -> LBRACKETGREATER option(BAR) . reversed_separated_nonempty_llist(BAR,row_field) RBRACKET [ error WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE HASH EXTERNAL EXCEPTION EQUAL END CONSTRAINT COLONGREATER CLASS BAR AS AND ]
##
## The known suffix of the stack is as follows:
## LBRACKETGREATER option(BAR)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACE LIDENT COLON LBRACKETGREATER QUOTED_STRING_EXPR GREATER
##
## Concrete syntax: { lident : [> {%hello|world|} >
##
## Ends in an error in state: 540.
##
## atomic_type -> LBRACKETGREATER option(BAR) reversed_separated_nonempty_llist(BAR,row_field) . RBRACKET [ error WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE HASH EXTERNAL EXCEPTION EQUAL END CONSTRAINT COLONGREATER CLASS BAR AS AND ]
## reversed_separated_nonempty_llist(BAR,row_field) -> reversed_separated_nonempty_llist(BAR,row_field) . BAR row_field [ RBRACKET BAR ]
##
## The known suffix of the stack is as follows:
## LBRACKETGREATER option(BAR) reversed_separated_nonempty_llist(BAR,row_field)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 358, spurious reduction of production tuple_type -> atomic_type
## In state 344, spurious reduction of production function_type -> tuple_type
## In state 374, spurious reduction of production alias_type -> function_type
## In state 384, spurious reduction of production core_type -> alias_type
## In state 382, spurious reduction of production row_field -> core_type
## In state 363, spurious reduction of production reversed_separated_nonempty_llist(BAR,row_field) -> row_field
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACE LIDENT COLON LBRACKET WITH
##
## Concrete syntax: { lident : [ with
##
## Ends in an error in state: 542.
##
## atomic_type -> LBRACKET . tag_field RBRACKET [ error WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE HASH EXTERNAL EXCEPTION EQUAL END CONSTRAINT COLONGREATER CLASS BAR AS AND ]
## atomic_type -> LBRACKET . BAR reversed_separated_nonempty_llist(BAR,row_field) RBRACKET [ error WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE HASH EXTERNAL EXCEPTION EQUAL END CONSTRAINT COLONGREATER CLASS BAR AS AND ]
## atomic_type -> LBRACKET . row_field BAR reversed_separated_nonempty_llist(BAR,row_field) RBRACKET [ error WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE HASH EXTERNAL EXCEPTION EQUAL END CONSTRAINT COLONGREATER CLASS BAR AS AND ]
##
## The known suffix of the stack is as follows:
## LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACE LIDENT COLON LBRACKET BAR WITH
##
## Concrete syntax: { lident : [ | with
##
## Ends in an error in state: 543.
##
## atomic_type -> LBRACKET BAR . reversed_separated_nonempty_llist(BAR,row_field) RBRACKET [ error WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE HASH EXTERNAL EXCEPTION EQUAL END CONSTRAINT COLONGREATER CLASS BAR AS AND ]
##
## The known suffix of the stack is as follows:
## LBRACKET BAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACE LIDENT COLON LBRACKET BAR QUOTED_STRING_EXPR GREATER
##
## Concrete syntax: { lident : [ | {%hello|world|} >
##
## Ends in an error in state: 544.
##
## atomic_type -> LBRACKET BAR reversed_separated_nonempty_llist(BAR,row_field) . RBRACKET [ error WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE HASH EXTERNAL EXCEPTION EQUAL END CONSTRAINT COLONGREATER CLASS BAR AS AND ]
## reversed_separated_nonempty_llist(BAR,row_field) -> reversed_separated_nonempty_llist(BAR,row_field) . BAR row_field [ RBRACKET BAR ]
##
## The known suffix of the stack is as follows:
## LBRACKET BAR reversed_separated_nonempty_llist(BAR,row_field)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 358, spurious reduction of production tuple_type -> atomic_type
## In state 344, spurious reduction of production function_type -> tuple_type
## In state 374, spurious reduction of production alias_type -> function_type
## In state 384, spurious reduction of production core_type -> alias_type
## In state 382, spurious reduction of production row_field -> core_type
## In state 363, spurious reduction of production reversed_separated_nonempty_llist(BAR,row_field) -> row_field
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACE LIDENT COLON LBRACKET BACKQUOTE LIDENT GREATER
##
## Concrete syntax: { lident : [ ` lident >
##
## Ends in an error in state: 546.
##
## atomic_type -> LBRACKET tag_field . RBRACKET [ error WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE HASH EXTERNAL EXCEPTION EQUAL END CONSTRAINT COLONGREATER CLASS BAR AS AND ]
## row_field -> tag_field . [ BAR ]
##
## The known suffix of the stack is as follows:
## LBRACKET tag_field
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 368, spurious reduction of production list(attribute) ->
## In state 381, spurious reduction of production tag_field -> name_tag list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACE LIDENT COLON LBRACKET QUOTED_STRING_EXPR RBRACKET
##
## Concrete syntax: { lident : [ {%hello|world|} ]
##
## Ends in an error in state: 548.
##
## atomic_type -> LBRACKET row_field . BAR reversed_separated_nonempty_llist(BAR,row_field) RBRACKET [ error WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE HASH EXTERNAL EXCEPTION EQUAL END CONSTRAINT COLONGREATER CLASS BAR AS AND ]
##
## The known suffix of the stack is as follows:
## LBRACKET row_field
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 358, spurious reduction of production tuple_type -> atomic_type
## In state 344, spurious reduction of production function_type -> tuple_type
## In state 374, spurious reduction of production alias_type -> function_type
## In state 384, spurious reduction of production core_type -> alias_type
## In state 382, spurious reduction of production row_field -> core_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACE LIDENT COLON LBRACKET QUOTED_STRING_EXPR BAR WITH
##
## Concrete syntax: { lident : [ {%hello|world|} | with
##
## Ends in an error in state: 549.
##
## atomic_type -> LBRACKET row_field BAR . reversed_separated_nonempty_llist(BAR,row_field) RBRACKET [ error WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE HASH EXTERNAL EXCEPTION EQUAL END CONSTRAINT COLONGREATER CLASS BAR AS AND ]
##
## The known suffix of the stack is as follows:
## LBRACKET row_field BAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACE LIDENT COLON LBRACKET QUOTED_STRING_EXPR BAR QUOTED_STRING_EXPR GREATER
##
## Concrete syntax: { lident : [ {%hello|world|} | {%hello|world|} >
##
## Ends in an error in state: 550.
##
## atomic_type -> LBRACKET row_field BAR reversed_separated_nonempty_llist(BAR,row_field) . RBRACKET [ error WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE HASH EXTERNAL EXCEPTION EQUAL END CONSTRAINT COLONGREATER CLASS BAR AS AND ]
## reversed_separated_nonempty_llist(BAR,row_field) -> reversed_separated_nonempty_llist(BAR,row_field) . BAR row_field [ RBRACKET BAR ]
##
## The known suffix of the stack is as follows:
## LBRACKET row_field BAR reversed_separated_nonempty_llist(BAR,row_field)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 358, spurious reduction of production tuple_type -> atomic_type
## In state 344, spurious reduction of production function_type -> tuple_type
## In state 374, spurious reduction of production alias_type -> function_type
## In state 384, spurious reduction of production core_type -> alias_type
## In state 382, spurious reduction of production row_field -> core_type
## In state 363, spurious reduction of production reversed_separated_nonempty_llist(BAR,row_field) -> row_field
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACE LIDENT COLON HASH WITH
##
## Concrete syntax: { lident : # with
##
## Ends in an error in state: 552.
##
## atomic_type -> HASH . clty_longident [ error WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE HASH EXTERNAL EXCEPTION EQUAL END CONSTRAINT COLONGREATER CLASS BAR AS AND ]
##
## The known suffix of the stack is as follows:
## HASH
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACE LIDENT COLON QUOTED_STRING_EXPR MINUSGREATER WITH
##
## Concrete syntax: { lident : {%hello|world|} -> with
##
## Ends in an error in state: 556.
##
## function_type -> tuple_type MINUSGREATER . function_type [ error WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END CONSTRAINT COLONGREATER CLASS AS AND ]
##
## The known suffix of the stack is as follows:
## tuple_type MINUSGREATER
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACE LIDENT COLON QUOTED_STRING_EXPR STAR QUOTED_STRING_EXPR STAR WITH
##
## Concrete syntax: { lident : {%hello|world|} * {%hello|world|} * with
##
## Ends in an error in state: 558.
##
## reversed_separated_nontrivial_llist(STAR,atomic_type) -> reversed_separated_nontrivial_llist(STAR,atomic_type) STAR . atomic_type [ error WITH VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END CONSTRAINT COLONGREATER CLASS AS AND ]
##
## The known suffix of the stack is as follows:
## reversed_separated_nontrivial_llist(STAR,atomic_type) STAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACE LIDENT COLON QUOTED_STRING_EXPR STAR QUOTED_STRING_EXPR STAR QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: { lident : {%hello|world|} * {%hello|world|} * {%hello|world|} while
##
## Ends in an error in state: 560.
##
## atomic_type -> atomic_type . type_longident [ error WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE HASH EXTERNAL EXCEPTION EQUAL END CONSTRAINT COLONGREATER CLASS AS AND ]
## atomic_type -> atomic_type . HASH clty_longident [ error WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE HASH EXTERNAL EXCEPTION EQUAL END CONSTRAINT COLONGREATER CLASS AS AND ]
## reversed_separated_nontrivial_llist(STAR,atomic_type) -> reversed_separated_nontrivial_llist(STAR,atomic_type) STAR atomic_type . [ error WITH VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END CONSTRAINT COLONGREATER CLASS AS AND ]
##
## The known suffix of the stack is as follows:
## reversed_separated_nontrivial_llist(STAR,atomic_type) STAR atomic_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACE LIDENT COLON QUOTED_STRING_EXPR HASH WITH
##
## Concrete syntax: { lident : {%hello|world|} # with
##
## Ends in an error in state: 561.
##
## atomic_type -> atomic_type HASH . clty_longident [ error WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE HASH EXTERNAL EXCEPTION EQUAL END CONSTRAINT COLONGREATER CLASS BAR AS AND ]
##
## The known suffix of the stack is as follows:
## atomic_type HASH
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACE LIDENT COLON OPTLABEL WITH
##
## Concrete syntax: { lident : ?label: with
##
## Ends in an error in state: 564.
##
## function_type -> optlabel . tuple_type MINUSGREATER function_type [ error WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END CONSTRAINT COLONGREATER CLASS AS AND ]
##
## The known suffix of the stack is as follows:
## optlabel
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACE LIDENT COLON OPTLABEL QUOTED_STRING_EXPR WITH
##
## Concrete syntax: { lident : ?label: {%hello|world|} with
##
## Ends in an error in state: 565.
##
## function_type -> optlabel tuple_type . MINUSGREATER function_type [ error WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END CONSTRAINT COLONGREATER CLASS AS AND ]
##
## The known suffix of the stack is as follows:
## optlabel tuple_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 358, spurious reduction of production tuple_type -> atomic_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACE LIDENT COLON OPTLABEL QUOTED_STRING_EXPR MINUSGREATER WITH
##
## Concrete syntax: { lident : ?label: {%hello|world|} -> with
##
## Ends in an error in state: 566.
##
## function_type -> optlabel tuple_type MINUSGREATER . function_type [ error WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END CONSTRAINT COLONGREATER CLASS AS AND ]
##
## The known suffix of the stack is as follows:
## optlabel tuple_type MINUSGREATER
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACE LIDENT COLON QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: { lident : {%hello|world|} while
##
## Ends in an error in state: 568.
##
## atomic_type -> atomic_type . type_longident [ error WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE HASH EXTERNAL EXCEPTION EQUAL END CONSTRAINT COLONGREATER CLASS AS AND ]
## atomic_type -> atomic_type . HASH clty_longident [ error WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE HASH EXTERNAL EXCEPTION EQUAL END CONSTRAINT COLONGREATER CLASS AS AND ]
## reversed_separated_nontrivial_llist(STAR,atomic_type) -> atomic_type . STAR atomic_type [ error WITH VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END CONSTRAINT COLONGREATER CLASS AS AND ]
## tuple_type -> atomic_type . [ error WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END CONSTRAINT COLONGREATER CLASS AS AND ]
##
## The known suffix of the stack is as follows:
## atomic_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACE LIDENT COLON QUOTED_STRING_EXPR STAR WITH
##
## Concrete syntax: { lident : {%hello|world|} * with
##
## Ends in an error in state: 569.
##
## reversed_separated_nontrivial_llist(STAR,atomic_type) -> atomic_type STAR . atomic_type [ error WITH VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END CONSTRAINT COLONGREATER CLASS AS AND ]
##
## The known suffix of the stack is as follows:
## atomic_type STAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACE LIDENT COLON QUOTED_STRING_EXPR STAR QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: { lident : {%hello|world|} * {%hello|world|} while
##
## Ends in an error in state: 570.
##
## atomic_type -> atomic_type . type_longident [ error WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE HASH EXTERNAL EXCEPTION EQUAL END CONSTRAINT COLONGREATER CLASS AS AND ]
## atomic_type -> atomic_type . HASH clty_longident [ error WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE HASH EXTERNAL EXCEPTION EQUAL END CONSTRAINT COLONGREATER CLASS AS AND ]
## reversed_separated_nontrivial_llist(STAR,atomic_type) -> atomic_type STAR atomic_type . [ error WITH VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END CONSTRAINT COLONGREATER CLASS AS AND ]
##
## The known suffix of the stack is as follows:
## atomic_type STAR atomic_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE LPAREN QUOTED_STRING_EXPR WITH TYPE LIDENT COLONEQUAL QUOTED_STRING_EXPR SEMI
##
## Concrete syntax: include ( {%hello|world|} with type lident := {%hello|world|} ;
##
## Ends in an error in state: 573.
##
## alias_type -> alias_type . AS QUOTE ident [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AS AND ]
## with_constraint -> TYPE type_parameters label_longident COLONEQUAL alias_type . [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## TYPE type_parameters label_longident COLONEQUAL alias_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 568, spurious reduction of production tuple_type -> atomic_type
## In state 555, spurious reduction of production function_type -> tuple_type
## In state 572, spurious reduction of production alias_type -> function_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACE LIDENT COLON QUOTED_STRING_EXPR AS WITH
##
## Concrete syntax: { lident : {%hello|world|} as with
##
## Ends in an error in state: 574.
##
## alias_type -> alias_type AS . QUOTE ident [ error WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END CONSTRAINT COLONGREATER CLASS AS AND ]
##
## The known suffix of the stack is as follows:
## alias_type AS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACE LIDENT COLON QUOTED_STRING_EXPR AS QUOTE WITH
##
## Concrete syntax: { lident : {%hello|world|} as ' with
##
## Ends in an error in state: 575.
##
## alias_type -> alias_type AS QUOTE . ident [ error WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END CONSTRAINT COLONGREATER CLASS AS AND ]
##
## The known suffix of the stack is as follows:
## alias_type AS QUOTE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE LPAREN QUOTED_STRING_EXPR WITH TYPE LIDENT EQUAL PRIVATE WITH
##
## Concrete syntax: include ( {%hello|world|} with type lident = private with
##
## Ends in an error in state: 577.
##
## with_constraint -> TYPE type_parameters label_longident with_type_binder . alias_type reversed_llist(preceded(CONSTRAINT,constrain)) [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## TYPE type_parameters label_longident with_type_binder
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE LPAREN QUOTED_STRING_EXPR WITH TYPE LIDENT EQUAL QUOTED_STRING_EXPR SEMI
##
## Concrete syntax: include ( {%hello|world|} with type lident = {%hello|world|} ;
##
## Ends in an error in state: 578.
##
## alias_type -> alias_type . AS QUOTE ident [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS AS AND ]
## with_constraint -> TYPE type_parameters label_longident with_type_binder alias_type . reversed_llist(preceded(CONSTRAINT,constrain)) [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## TYPE type_parameters label_longident with_type_binder alias_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 568, spurious reduction of production tuple_type -> atomic_type
## In state 555, spurious reduction of production function_type -> tuple_type
## In state 572, spurious reduction of production alias_type -> function_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT TYPE LIDENT CONSTRAINT WITH
##
## Concrete syntax: include struct type lident constraint with
##
## Ends in an error in state: 580.
##
## reversed_llist(preceded(CONSTRAINT,constrain)) -> reversed_llist(preceded(CONSTRAINT,constrain)) CONSTRAINT . core_type EQUAL core_type [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
##
## The known suffix of the stack is as follows:
## reversed_llist(preceded(CONSTRAINT,constrain)) CONSTRAINT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT TYPE LIDENT CONSTRAINT QUOTED_STRING_EXPR WITH
##
## Concrete syntax: include struct type lident constraint {%hello|world|} with
##
## Ends in an error in state: 581.
##
## core_type -> core_type . attribute [ LBRACKETAT EQUAL ]
## reversed_llist(preceded(CONSTRAINT,constrain)) -> reversed_llist(preceded(CONSTRAINT,constrain)) CONSTRAINT core_type . EQUAL core_type [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
##
## The known suffix of the stack is as follows:
## reversed_llist(preceded(CONSTRAINT,constrain)) CONSTRAINT core_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 358, spurious reduction of production tuple_type -> atomic_type
## In state 344, spurious reduction of production function_type -> tuple_type
## In state 374, spurious reduction of production alias_type -> function_type
## In state 384, spurious reduction of production core_type -> alias_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT TYPE LIDENT CONSTRAINT QUOTED_STRING_EXPR EQUAL WITH
##
## Concrete syntax: include struct type lident constraint {%hello|world|} = with
##
## Ends in an error in state: 582.
##
## reversed_llist(preceded(CONSTRAINT,constrain)) -> reversed_llist(preceded(CONSTRAINT,constrain)) CONSTRAINT core_type EQUAL . core_type [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
##
## The known suffix of the stack is as follows:
## reversed_llist(preceded(CONSTRAINT,constrain)) CONSTRAINT core_type EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT TYPE LIDENT CONSTRAINT QUOTED_STRING_EXPR EQUAL QUOTED_STRING_EXPR SEMI
##
## Concrete syntax: include struct type lident constraint {%hello|world|} = {%hello|world|} ;
##
## Ends in an error in state: 583.
##
## core_type -> core_type . attribute [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
## reversed_llist(preceded(CONSTRAINT,constrain)) -> reversed_llist(preceded(CONSTRAINT,constrain)) CONSTRAINT core_type EQUAL core_type . [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
##
## The known suffix of the stack is as follows:
## reversed_llist(preceded(CONSTRAINT,constrain)) CONSTRAINT core_type EQUAL core_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 568, spurious reduction of production tuple_type -> atomic_type
## In state 555, spurious reduction of production function_type -> tuple_type
## In state 572, spurious reduction of production alias_type -> function_type
## In state 585, spurious reduction of production core_type -> alias_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACE LIDENT COLON QUOTED_STRING_EXPR AS QUOTE LIDENT WHILE
##
## Concrete syntax: { lident : {%hello|world|} as ' lident while
##
## Ends in an error in state: 585.
##
## alias_type -> alias_type . AS QUOTE ident [ error WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END CONSTRAINT COLONGREATER CLASS AS AND ]
## core_type -> alias_type . [ error WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END CONSTRAINT COLONGREATER CLASS AND ]
##
## The known suffix of the stack is as follows:
## alias_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE LPAREN QUOTED_STRING_EXPR WITH MODULE WITH
##
## Concrete syntax: include ( {%hello|world|} with module with
##
## Ends in an error in state: 587.
##
## with_constraint -> MODULE . mod_longident EQUAL mod_ext_longident [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## with_constraint -> MODULE . mod_longident COLONEQUAL mod_ext_longident [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## with_constraint -> MODULE . TYPE mty_longident EQUAL module_type [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## with_constraint -> MODULE . TYPE mty_longident COLONEQUAL module_type [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## MODULE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE LPAREN QUOTED_STRING_EXPR WITH MODULE TYPE WITH
##
## Concrete syntax: include ( {%hello|world|} with module type with
##
## Ends in an error in state: 588.
##
## with_constraint -> MODULE TYPE . mty_longident EQUAL module_type [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## with_constraint -> MODULE TYPE . mty_longident COLONEQUAL module_type [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## MODULE TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE LPAREN QUOTED_STRING_EXPR WITH MODULE TYPE LIDENT WHILE
##
## Concrete syntax: include ( {%hello|world|} with module type lident while
##
## Ends in an error in state: 589.
##
## with_constraint -> MODULE TYPE mty_longident . EQUAL module_type [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## with_constraint -> MODULE TYPE mty_longident . COLONEQUAL module_type [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## MODULE TYPE mty_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE LPAREN QUOTED_STRING_EXPR WITH MODULE TYPE UIDENT EQUAL WITH
##
## Concrete syntax: include ( {%hello|world|} with module type UIdent = with
##
## Ends in an error in state: 590.
##
## with_constraint -> MODULE TYPE mty_longident EQUAL . module_type [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## MODULE TYPE mty_longident EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE LPAREN QUOTED_STRING_EXPR WITH MODULE TYPE UIDENT EQUAL QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: include ( {%hello|world|} with module type UIdent = {%hello|world|} while
##
## Ends in an error in state: 591.
##
## module_type -> module_type . attribute [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## module_type -> module_type . MINUSGREATER module_type [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## module_type -> module_type . WITH reversed_separated_nonempty_llist(AND,with_constraint) [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## with_constraint -> MODULE TYPE mty_longident EQUAL module_type . [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## MODULE TYPE mty_longident EQUAL module_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE LPAREN UIDENT LPAREN UIDENT RPAREN WITH
##
## Concrete syntax: include ( UIdent ( UIdent ) with
##
## Ends in an error in state: 593.
##
## mk_longident(mod_ext_longident,UIDENT) -> mod_ext_longident . DOT UIDENT [ LPAREN DOT ]
## mk_longident(mod_ext_longident,ident) -> mod_ext_longident . DOT ident [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## mod_ext_longident -> mod_ext_longident . LPAREN mod_ext_longident RPAREN [ LPAREN DOT ]
## mod_ext_longident -> mod_ext_longident . LPAREN error [ LPAREN DOT ]
##
## The known suffix of the stack is as follows:
## mod_ext_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE LPAREN UIDENT DOT WITH
##
## Concrete syntax: include ( UIdent . with
##
## Ends in an error in state: 594.
##
## mk_longident(mod_ext_longident,UIDENT) -> mod_ext_longident DOT . UIDENT [ LPAREN DOT ]
## mk_longident(mod_ext_longident,ident) -> mod_ext_longident DOT . ident [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## mod_ext_longident DOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE LPAREN UIDENT DOT UIDENT WHILE
##
## Concrete syntax: include ( UIdent . UIdent while
##
## Ends in an error in state: 595.
##
## ident -> UIDENT . [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## mk_longident(mod_ext_longident,UIDENT) -> mod_ext_longident DOT UIDENT . [ LPAREN DOT ]
##
## The known suffix of the stack is as follows:
## mod_ext_longident DOT UIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE LPAREN QUOTED_STRING_EXPR WITH MODULE TYPE UIDENT COLONEQUAL WITH
##
## Concrete syntax: include ( {%hello|world|} with module type UIdent := with
##
## Ends in an error in state: 600.
##
## with_constraint -> MODULE TYPE mty_longident COLONEQUAL . module_type [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## MODULE TYPE mty_longident COLONEQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE LPAREN QUOTED_STRING_EXPR WITH MODULE TYPE UIDENT COLONEQUAL QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: include ( {%hello|world|} with module type UIdent := {%hello|world|} while
##
## Ends in an error in state: 601.
##
## module_type -> module_type . attribute [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## module_type -> module_type . MINUSGREATER module_type [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## module_type -> module_type . WITH reversed_separated_nonempty_llist(AND,with_constraint) [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## with_constraint -> MODULE TYPE mty_longident COLONEQUAL module_type . [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## MODULE TYPE mty_longident COLONEQUAL module_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE LPAREN QUOTED_STRING_EXPR MINUSGREATER WITH
##
## Concrete syntax: include ( {%hello|world|} -> with
##
## Ends in an error in state: 602.
##
## module_type -> module_type MINUSGREATER . module_type [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## module_type MINUSGREATER
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE LPAREN QUOTED_STRING_EXPR MINUSGREATER QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: include ( {%hello|world|} -> {%hello|world|} while
##
## Ends in an error in state: 603.
##
## module_type -> module_type . attribute [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## module_type -> module_type . MINUSGREATER module_type [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## module_type -> module_type MINUSGREATER module_type . [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## module_type -> module_type . WITH reversed_separated_nonempty_llist(AND,with_constraint) [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## module_type MINUSGREATER module_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_mty_longident: UIDENT LPAREN UIDENT RPAREN WITH
##
## Concrete syntax: UIdent ( UIdent ) with
##
## Ends in an error in state: 604.
##
## mk_longident(mod_ext_longident,UIDENT) -> mod_ext_longident . DOT UIDENT [ LPAREN DOT ]
## mk_longident(mod_ext_longident,ident) -> mod_ext_longident . DOT ident [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLONEQUAL CLASS AND ]
## mod_ext_longident -> mod_ext_longident . LPAREN mod_ext_longident RPAREN [ LPAREN DOT ]
## mod_ext_longident -> mod_ext_longident . LPAREN error [ LPAREN DOT ]
##
## The known suffix of the stack is as follows:
## mod_ext_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_mty_longident: UIDENT DOT WITH
##
## Concrete syntax: UIdent . with
##
## Ends in an error in state: 605.
##
## mk_longident(mod_ext_longident,UIDENT) -> mod_ext_longident DOT . UIDENT [ LPAREN DOT ]
## mk_longident(mod_ext_longident,ident) -> mod_ext_longident DOT . ident [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLONEQUAL CLASS AND ]
##
## The known suffix of the stack is as follows:
## mod_ext_longident DOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_any_longident: UIDENT DOT UIDENT WHILE
##
## Concrete syntax: UIdent . UIdent while
##
## Ends in an error in state: 606.
##
## ident -> UIDENT . [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLONEQUAL CLASS AND ]
## mk_longident(mod_ext_longident,UIDENT) -> mod_ext_longident DOT UIDENT . [ LPAREN DOT ]
##
## The known suffix of the stack is as follows:
## mod_ext_longident DOT UIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE LPAREN QUOTED_STRING_EXPR WITH MODULE UIDENT WITH
##
## Concrete syntax: include ( {%hello|world|} with module UIdent with
##
## Ends in an error in state: 610.
##
## mk_longident(mod_longident,UIDENT) -> mod_longident . DOT UIDENT [ EQUAL DOT COLONEQUAL ]
## with_constraint -> MODULE mod_longident . EQUAL mod_ext_longident [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## with_constraint -> MODULE mod_longident . COLONEQUAL mod_ext_longident [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## MODULE mod_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE LPAREN QUOTED_STRING_EXPR WITH MODULE UIDENT EQUAL WITH
##
## Concrete syntax: include ( {%hello|world|} with module UIdent = with
##
## Ends in an error in state: 611.
##
## with_constraint -> MODULE mod_longident EQUAL . mod_ext_longident [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## MODULE mod_longident EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE LPAREN QUOTED_STRING_EXPR WITH MODULE UIDENT EQUAL UIDENT WHILE
##
## Concrete syntax: include ( {%hello|world|} with module UIdent = UIdent while
##
## Ends in an error in state: 613.
##
## mk_longident(mod_ext_longident,UIDENT) -> mod_ext_longident . DOT UIDENT [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END DOT CLASS AND ]
## mod_ext_longident -> mod_ext_longident . LPAREN mod_ext_longident RPAREN [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END DOT CLASS AND ]
## mod_ext_longident -> mod_ext_longident . LPAREN error [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END DOT CLASS AND ]
## with_constraint -> MODULE mod_longident EQUAL mod_ext_longident . [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## MODULE mod_longident EQUAL mod_ext_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG OPEN UIDENT LPAREN WITH
##
## Concrete syntax: include sig open UIdent ( with
##
## Ends in an error in state: 614.
##
## mod_ext_longident -> mod_ext_longident LPAREN . mod_ext_longident RPAREN [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END DOT CLASS AND ]
## mod_ext_longident -> mod_ext_longident LPAREN . error [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END DOT CLASS AND ]
##
## The known suffix of the stack is as follows:
## mod_ext_longident LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG OPEN UIDENT LPAREN UIDENT WITH
##
## Concrete syntax: include sig open UIdent ( UIdent with
##
## Ends in an error in state: 616.
##
## mk_longident(mod_ext_longident,UIDENT) -> mod_ext_longident . DOT UIDENT [ RPAREN LPAREN DOT ]
## mod_ext_longident -> mod_ext_longident . LPAREN mod_ext_longident RPAREN [ RPAREN LPAREN DOT ]
## mod_ext_longident -> mod_ext_longident LPAREN mod_ext_longident . RPAREN [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END DOT CLASS AND ]
## mod_ext_longident -> mod_ext_longident . LPAREN error [ RPAREN LPAREN DOT ]
##
## The known suffix of the stack is as follows:
## mod_ext_longident LPAREN mod_ext_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG OPEN UIDENT DOT WITH
##
## Concrete syntax: include sig open UIdent . with
##
## Ends in an error in state: 618.
##
## mk_longident(mod_ext_longident,UIDENT) -> mod_ext_longident DOT . UIDENT [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END DOT CLASS AND ]
##
## The known suffix of the stack is as follows:
## mod_ext_longident DOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_mod_longident: UIDENT DOT WITH
##
## Concrete syntax: UIdent . with
##
## Ends in an error in state: 621.
##
## mk_longident(mod_longident,UIDENT) -> mod_longident DOT . UIDENT [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF DOT COLONGREATER COLONEQUAL COLON CLASS AND ]
##
## The known suffix of the stack is as follows:
## mod_longident DOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE LPAREN QUOTED_STRING_EXPR WITH MODULE UIDENT COLONEQUAL WITH
##
## Concrete syntax: include ( {%hello|world|} with module UIdent := with
##
## Ends in an error in state: 622.
##
## with_constraint -> MODULE mod_longident COLONEQUAL . mod_ext_longident [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## MODULE mod_longident COLONEQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE LPAREN QUOTED_STRING_EXPR WITH MODULE UIDENT COLONEQUAL UIDENT WHILE
##
## Concrete syntax: include ( {%hello|world|} with module UIdent := UIdent while
##
## Ends in an error in state: 623.
##
## mk_longident(mod_ext_longident,UIDENT) -> mod_ext_longident . DOT UIDENT [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END DOT CLASS AND ]
## mod_ext_longident -> mod_ext_longident . LPAREN mod_ext_longident RPAREN [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END DOT CLASS AND ]
## mod_ext_longident -> mod_ext_longident . LPAREN error [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END DOT CLASS AND ]
## with_constraint -> MODULE mod_longident COLONEQUAL mod_ext_longident . [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## MODULE mod_longident COLONEQUAL mod_ext_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE LPAREN QUOTED_STRING_EXPR WITH MODULE UIDENT COLONEQUAL UIDENT AND WITH
##
## Concrete syntax: include ( {%hello|world|} with module UIdent := UIdent and with
##
## Ends in an error in state: 626.
##
## reversed_separated_nonempty_llist(AND,with_constraint) -> reversed_separated_nonempty_llist(AND,with_constraint) AND . with_constraint [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## reversed_separated_nonempty_llist(AND,with_constraint) AND
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE LPAREN LPAREN QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: include ( ( {%hello|world|} while
##
## Ends in an error in state: 630.
##
## module_type -> LPAREN module_type . RPAREN [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## module_type -> LPAREN module_type . error [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## module_type -> module_type . attribute [ error WITH RPAREN MINUSGREATER LBRACKETAT ]
## module_type -> module_type . MINUSGREATER module_type [ error WITH RPAREN MINUSGREATER LBRACKETAT ]
## module_type -> module_type . WITH reversed_separated_nonempty_llist(AND,with_constraint) [ error WITH RPAREN MINUSGREATER LBRACKETAT ]
##
## The known suffix of the stack is as follows:
## LPAREN module_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE LPAREN QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: include ( {%hello|world|} while
##
## Ends in an error in state: 633.
##
## module_type -> LPAREN module_type . RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER CLASS AND ]
## module_type -> LPAREN module_type . error [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER CLASS AND ]
## module_type -> module_type . attribute [ error WITH RPAREN MINUSGREATER LBRACKETAT ]
## module_type -> module_type . MINUSGREATER module_type [ error WITH RPAREN MINUSGREATER LBRACKETAT ]
## module_type -> module_type . WITH reversed_separated_nonempty_llist(AND,with_constraint) [ error WITH RPAREN MINUSGREATER LBRACKETAT ]
##
## The known suffix of the stack is as follows:
## LPAREN module_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE FUNCTOR WITH
##
## Concrete syntax: include functor with
##
## Ends in an error in state: 636.
##
## module_type -> FUNCTOR . list(attribute) reversed_nonempty_llist(functor_arg) MINUSGREATER module_type [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER CLASS AND ]
##
## The known suffix of the stack is as follows:
## FUNCTOR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE FUNCTOR LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: include functor [@ and ] while
##
## Ends in an error in state: 637.
##
## module_type -> FUNCTOR list(attribute) . reversed_nonempty_llist(functor_arg) MINUSGREATER module_type [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER CLASS AND ]
##
## The known suffix of the stack is as follows:
## FUNCTOR list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE FUNCTOR LPAREN RPAREN WITH
##
## Concrete syntax: include functor ( ) with
##
## Ends in an error in state: 638.
##
## module_type -> FUNCTOR list(attribute) reversed_nonempty_llist(functor_arg) . MINUSGREATER module_type [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER CLASS AND ]
## reversed_nonempty_llist(functor_arg) -> reversed_nonempty_llist(functor_arg) . functor_arg [ MINUSGREATER LPAREN ]
##
## The known suffix of the stack is as follows:
## FUNCTOR list(attribute) reversed_nonempty_llist(functor_arg)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE FUNCTOR LPAREN RPAREN MINUSGREATER WITH
##
## Concrete syntax: include functor ( ) -> with
##
## Ends in an error in state: 639.
##
## module_type -> FUNCTOR list(attribute) reversed_nonempty_llist(functor_arg) MINUSGREATER . module_type [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER CLASS AND ]
##
## The known suffix of the stack is as follows:
## FUNCTOR list(attribute) reversed_nonempty_llist(functor_arg) MINUSGREATER
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE FUNCTOR LPAREN RPAREN MINUSGREATER QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: include functor ( ) -> {%hello|world|} while
##
## Ends in an error in state: 641.
##
## module_type -> FUNCTOR list(attribute) reversed_nonempty_llist(functor_arg) MINUSGREATER module_type . [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER CLASS AND ]
## module_type -> module_type . attribute [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER CLASS AND ]
## module_type -> module_type . MINUSGREATER module_type [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER CLASS AND ]
## module_type -> module_type . WITH reversed_separated_nonempty_llist(AND,with_constraint) [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER CLASS AND ]
##
## The known suffix of the stack is as follows:
## FUNCTOR list(attribute) reversed_nonempty_llist(functor_arg) MINUSGREATER module_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE QUOTED_STRING_EXPR WITH WITH
##
## Concrete syntax: include {%hello|world|} with with
##
## Ends in an error in state: 642.
##
## module_type -> module_type WITH . reversed_separated_nonempty_llist(AND,with_constraint) [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER CLASS AND ]
##
## The known suffix of the stack is as follows:
## module_type WITH
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE QUOTED_STRING_EXPR WITH TYPE WITH
##
## Concrete syntax: include {%hello|world|} with type with
##
## Ends in an error in state: 643.
##
## with_constraint -> TYPE . type_parameters label_longident with_type_binder alias_type reversed_llist(preceded(CONSTRAINT,constrain)) [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER CLASS AND ]
## with_constraint -> TYPE . type_parameters label_longident COLONEQUAL alias_type [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER CLASS AND ]
##
## The known suffix of the stack is as follows:
## TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE QUOTED_STRING_EXPR WITH TYPE UNDERSCORE WITH
##
## Concrete syntax: include {%hello|world|} with type _ with
##
## Ends in an error in state: 644.
##
## with_constraint -> TYPE type_parameters . label_longident with_type_binder alias_type reversed_llist(preceded(CONSTRAINT,constrain)) [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER CLASS AND ]
## with_constraint -> TYPE type_parameters . label_longident COLONEQUAL alias_type [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER CLASS AND ]
##
## The known suffix of the stack is as follows:
## TYPE type_parameters
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE QUOTED_STRING_EXPR WITH TYPE LIDENT WITH
##
## Concrete syntax: include {%hello|world|} with type lident with
##
## Ends in an error in state: 645.
##
## with_constraint -> TYPE type_parameters label_longident . with_type_binder alias_type reversed_llist(preceded(CONSTRAINT,constrain)) [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER CLASS AND ]
## with_constraint -> TYPE type_parameters label_longident . COLONEQUAL alias_type [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER CLASS AND ]
##
## The known suffix of the stack is as follows:
## TYPE type_parameters label_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE QUOTED_STRING_EXPR WITH TYPE LIDENT COLONEQUAL WITH
##
## Concrete syntax: include {%hello|world|} with type lident := with
##
## Ends in an error in state: 646.
##
## with_constraint -> TYPE type_parameters label_longident COLONEQUAL . alias_type [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER CLASS AND ]
##
## The known suffix of the stack is as follows:
## TYPE type_parameters label_longident COLONEQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE QUOTED_STRING_EXPR WITH TYPE LIDENT COLONEQUAL QUOTED_STRING_EXPR CONSTRAINT
##
## Concrete syntax: include {%hello|world|} with type lident := {%hello|world|} constraint
##
## Ends in an error in state: 647.
##
## alias_type -> alias_type . AS QUOTE ident [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER CLASS AS AND ]
## with_constraint -> TYPE type_parameters label_longident COLONEQUAL alias_type . [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER CLASS AND ]
##
## The known suffix of the stack is as follows:
## TYPE type_parameters label_longident COLONEQUAL alias_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 358, spurious reduction of production tuple_type -> atomic_type
## In state 344, spurious reduction of production function_type -> tuple_type
## In state 374, spurious reduction of production alias_type -> function_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE QUOTED_STRING_EXPR WITH TYPE LIDENT EQUAL PRIVATE WITH
##
## Concrete syntax: include {%hello|world|} with type lident = private with
##
## Ends in an error in state: 648.
##
## with_constraint -> TYPE type_parameters label_longident with_type_binder . alias_type reversed_llist(preceded(CONSTRAINT,constrain)) [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER CLASS AND ]
##
## The known suffix of the stack is as follows:
## TYPE type_parameters label_longident with_type_binder
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE QUOTED_STRING_EXPR WITH TYPE LIDENT EQUAL QUOTED_STRING_EXPR COMMA
##
## Concrete syntax: include {%hello|world|} with type lident = {%hello|world|} ,
##
## Ends in an error in state: 649.
##
## alias_type -> alias_type . AS QUOTE ident [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COLONGREATER CLASS AS AND ]
## with_constraint -> TYPE type_parameters label_longident with_type_binder alias_type . reversed_llist(preceded(CONSTRAINT,constrain)) [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER CLASS AND ]
##
## The known suffix of the stack is as follows:
## TYPE type_parameters label_longident with_type_binder alias_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 358, spurious reduction of production tuple_type -> atomic_type
## In state 344, spurious reduction of production function_type -> tuple_type
## In state 374, spurious reduction of production alias_type -> function_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: TYPE LIDENT CONSTRAINT WITH
##
## Concrete syntax: type lident constraint with
##
## Ends in an error in state: 651.
##
## reversed_llist(preceded(CONSTRAINT,constrain)) -> reversed_llist(preceded(CONSTRAINT,constrain)) CONSTRAINT . core_type EQUAL core_type [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COLONGREATER CLASS AND ]
##
## The known suffix of the stack is as follows:
## reversed_llist(preceded(CONSTRAINT,constrain)) CONSTRAINT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: TYPE LIDENT CONSTRAINT QUOTED_STRING_EXPR WITH
##
## Concrete syntax: type lident constraint {%hello|world|} with
##
## Ends in an error in state: 652.
##
## core_type -> core_type . attribute [ LBRACKETAT EQUAL ]
## reversed_llist(preceded(CONSTRAINT,constrain)) -> reversed_llist(preceded(CONSTRAINT,constrain)) CONSTRAINT core_type . EQUAL core_type [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COLONGREATER CLASS AND ]
##
## The known suffix of the stack is as follows:
## reversed_llist(preceded(CONSTRAINT,constrain)) CONSTRAINT core_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 358, spurious reduction of production tuple_type -> atomic_type
## In state 344, spurious reduction of production function_type -> tuple_type
## In state 374, spurious reduction of production alias_type -> function_type
## In state 384, spurious reduction of production core_type -> alias_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: TYPE LIDENT CONSTRAINT QUOTED_STRING_EXPR EQUAL WITH
##
## Concrete syntax: type lident constraint {%hello|world|} = with
##
## Ends in an error in state: 653.
##
## reversed_llist(preceded(CONSTRAINT,constrain)) -> reversed_llist(preceded(CONSTRAINT,constrain)) CONSTRAINT core_type EQUAL . core_type [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COLONGREATER CLASS AND ]
##
## The known suffix of the stack is as follows:
## reversed_llist(preceded(CONSTRAINT,constrain)) CONSTRAINT core_type EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: TYPE LIDENT CONSTRAINT QUOTED_STRING_EXPR EQUAL QUOTED_STRING_EXPR COMMA
##
## Concrete syntax: type lident constraint {%hello|world|} = {%hello|world|} ,
##
## Ends in an error in state: 654.
##
## core_type -> core_type . attribute [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COLONGREATER CLASS AND ]
## reversed_llist(preceded(CONSTRAINT,constrain)) -> reversed_llist(preceded(CONSTRAINT,constrain)) CONSTRAINT core_type EQUAL core_type . [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COLONGREATER CLASS AND ]
##
## The known suffix of the stack is as follows:
## reversed_llist(preceded(CONSTRAINT,constrain)) CONSTRAINT core_type EQUAL core_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 358, spurious reduction of production tuple_type -> atomic_type
## In state 344, spurious reduction of production function_type -> tuple_type
## In state 374, spurious reduction of production alias_type -> function_type
## In state 384, spurious reduction of production core_type -> alias_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE QUOTED_STRING_EXPR WITH MODULE WITH
##
## Concrete syntax: include {%hello|world|} with module with
##
## Ends in an error in state: 655.
##
## with_constraint -> MODULE . mod_longident EQUAL mod_ext_longident [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER CLASS AND ]
## with_constraint -> MODULE . mod_longident COLONEQUAL mod_ext_longident [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER CLASS AND ]
## with_constraint -> MODULE . TYPE mty_longident EQUAL module_type [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER CLASS AND ]
## with_constraint -> MODULE . TYPE mty_longident COLONEQUAL module_type [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER CLASS AND ]
##
## The known suffix of the stack is as follows:
## MODULE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE QUOTED_STRING_EXPR WITH MODULE TYPE WITH
##
## Concrete syntax: include {%hello|world|} with module type with
##
## Ends in an error in state: 656.
##
## with_constraint -> MODULE TYPE . mty_longident EQUAL module_type [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER CLASS AND ]
## with_constraint -> MODULE TYPE . mty_longident COLONEQUAL module_type [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER CLASS AND ]
##
## The known suffix of the stack is as follows:
## MODULE TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE QUOTED_STRING_EXPR WITH MODULE TYPE LIDENT WHILE
##
## Concrete syntax: include {%hello|world|} with module type lident while
##
## Ends in an error in state: 657.
##
## with_constraint -> MODULE TYPE mty_longident . EQUAL module_type [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER CLASS AND ]
## with_constraint -> MODULE TYPE mty_longident . COLONEQUAL module_type [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER CLASS AND ]
##
## The known suffix of the stack is as follows:
## MODULE TYPE mty_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE QUOTED_STRING_EXPR WITH MODULE TYPE UIDENT EQUAL WITH
##
## Concrete syntax: include {%hello|world|} with module type UIdent = with
##
## Ends in an error in state: 658.
##
## with_constraint -> MODULE TYPE mty_longident EQUAL . module_type [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER CLASS AND ]
##
## The known suffix of the stack is as follows:
## MODULE TYPE mty_longident EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE QUOTED_STRING_EXPR WITH MODULE TYPE UIDENT EQUAL QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: include {%hello|world|} with module type UIdent = {%hello|world|} while
##
## Ends in an error in state: 659.
##
## module_type -> module_type . attribute [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER CLASS AND ]
## module_type -> module_type . MINUSGREATER module_type [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER CLASS AND ]
## module_type -> module_type . WITH reversed_separated_nonempty_llist(AND,with_constraint) [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER CLASS AND ]
## with_constraint -> MODULE TYPE mty_longident EQUAL module_type . [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER CLASS AND ]
##
## The known suffix of the stack is as follows:
## MODULE TYPE mty_longident EQUAL module_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE QUOTED_STRING_EXPR WITH MODULE TYPE UIDENT COLONEQUAL WITH
##
## Concrete syntax: include {%hello|world|} with module type UIdent := with
##
## Ends in an error in state: 662.
##
## with_constraint -> MODULE TYPE mty_longident COLONEQUAL . module_type [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER CLASS AND ]
##
## The known suffix of the stack is as follows:
## MODULE TYPE mty_longident COLONEQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE QUOTED_STRING_EXPR WITH MODULE TYPE UIDENT COLONEQUAL QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: include {%hello|world|} with module type UIdent := {%hello|world|} while
##
## Ends in an error in state: 663.
##
## module_type -> module_type . attribute [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER CLASS AND ]
## module_type -> module_type . MINUSGREATER module_type [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER CLASS AND ]
## module_type -> module_type . WITH reversed_separated_nonempty_llist(AND,with_constraint) [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER CLASS AND ]
## with_constraint -> MODULE TYPE mty_longident COLONEQUAL module_type . [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER CLASS AND ]
##
## The known suffix of the stack is as follows:
## MODULE TYPE mty_longident COLONEQUAL module_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE QUOTED_STRING_EXPR MINUSGREATER WITH
##
## Concrete syntax: include {%hello|world|} -> with
##
## Ends in an error in state: 664.
##
## module_type -> module_type MINUSGREATER . module_type [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER CLASS AND ]
##
## The known suffix of the stack is as follows:
## module_type MINUSGREATER
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE QUOTED_STRING_EXPR MINUSGREATER QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: include {%hello|world|} -> {%hello|world|} while
##
## Ends in an error in state: 665.
##
## module_type -> module_type . attribute [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER CLASS AND ]
## module_type -> module_type . MINUSGREATER module_type [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER CLASS AND ]
## module_type -> module_type MINUSGREATER module_type . [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER CLASS AND ]
## module_type -> module_type . WITH reversed_separated_nonempty_llist(AND,with_constraint) [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER CLASS AND ]
##
## The known suffix of the stack is as follows:
## module_type MINUSGREATER module_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE QUOTED_STRING_EXPR WITH MODULE UIDENT WITH
##
## Concrete syntax: include {%hello|world|} with module UIdent with
##
## Ends in an error in state: 666.
##
## mk_longident(mod_longident,UIDENT) -> mod_longident . DOT UIDENT [ EQUAL DOT COLONEQUAL ]
## with_constraint -> MODULE mod_longident . EQUAL mod_ext_longident [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER CLASS AND ]
## with_constraint -> MODULE mod_longident . COLONEQUAL mod_ext_longident [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER CLASS AND ]
##
## The known suffix of the stack is as follows:
## MODULE mod_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE QUOTED_STRING_EXPR WITH MODULE UIDENT EQUAL WITH
##
## Concrete syntax: include {%hello|world|} with module UIdent = with
##
## Ends in an error in state: 667.
##
## with_constraint -> MODULE mod_longident EQUAL . mod_ext_longident [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER CLASS AND ]
##
## The known suffix of the stack is as follows:
## MODULE mod_longident EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE QUOTED_STRING_EXPR WITH MODULE UIDENT EQUAL UIDENT WHILE
##
## Concrete syntax: include {%hello|world|} with module UIdent = UIdent while
##
## Ends in an error in state: 668.
##
## mk_longident(mod_ext_longident,UIDENT) -> mod_ext_longident . DOT UIDENT [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF DOT COLONGREATER CLASS AND ]
## mod_ext_longident -> mod_ext_longident . LPAREN mod_ext_longident RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF DOT COLONGREATER CLASS AND ]
## mod_ext_longident -> mod_ext_longident . LPAREN error [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF DOT COLONGREATER CLASS AND ]
## with_constraint -> MODULE mod_longident EQUAL mod_ext_longident . [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER CLASS AND ]
##
## The known suffix of the stack is as follows:
## MODULE mod_longident EQUAL mod_ext_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE QUOTED_STRING_EXPR WITH MODULE UIDENT COLONEQUAL WITH
##
## Concrete syntax: include {%hello|world|} with module UIdent := with
##
## Ends in an error in state: 669.
##
## with_constraint -> MODULE mod_longident COLONEQUAL . mod_ext_longident [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER CLASS AND ]
##
## The known suffix of the stack is as follows:
## MODULE mod_longident COLONEQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE QUOTED_STRING_EXPR WITH MODULE UIDENT COLONEQUAL UIDENT WHILE
##
## Concrete syntax: include {%hello|world|} with module UIdent := UIdent while
##
## Ends in an error in state: 670.
##
## mk_longident(mod_ext_longident,UIDENT) -> mod_ext_longident . DOT UIDENT [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF DOT COLONGREATER CLASS AND ]
## mod_ext_longident -> mod_ext_longident . LPAREN mod_ext_longident RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF DOT COLONGREATER CLASS AND ]
## mod_ext_longident -> mod_ext_longident . LPAREN error [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF DOT COLONGREATER CLASS AND ]
## with_constraint -> MODULE mod_longident COLONEQUAL mod_ext_longident . [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER CLASS AND ]
##
## The known suffix of the stack is as follows:
## MODULE mod_longident COLONEQUAL mod_ext_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE QUOTED_STRING_EXPR WITH MODULE UIDENT COLONEQUAL UIDENT AND WITH
##
## Concrete syntax: include {%hello|world|} with module UIdent := UIdent and with
##
## Ends in an error in state: 673.
##
## reversed_separated_nonempty_llist(AND,with_constraint) -> reversed_separated_nonempty_llist(AND,with_constraint) AND . with_constraint [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER CLASS AND ]
##
## The known suffix of the stack is as follows:
## reversed_separated_nonempty_llist(AND,with_constraint) AND
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: MODULE UIDENT LPAREN UIDENT COLON QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: module UIdent ( UIdent : {%hello|world|} while
##
## Ends in an error in state: 675.
##
## functor_arg -> LPAREN module_name COLON module_type . RPAREN [ MINUSGREATER LPAREN EQUAL COLON ]
## module_type -> module_type . attribute [ WITH RPAREN MINUSGREATER LBRACKETAT ]
## module_type -> module_type . MINUSGREATER module_type [ WITH RPAREN MINUSGREATER LBRACKETAT ]
## module_type -> module_type . WITH reversed_separated_nonempty_llist(AND,with_constraint) [ WITH RPAREN MINUSGREATER LBRACKETAT ]
##
## The known suffix of the stack is as follows:
## LPAREN module_name COLON module_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE FUNCTOR LPAREN RPAREN WITH
##
## Concrete syntax: include functor ( ) with
##
## Ends in an error in state: 677.
##
## module_expr -> FUNCTOR list(attribute) reversed_nonempty_llist(functor_arg) . MINUSGREATER module_expr [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
## reversed_nonempty_llist(functor_arg) -> reversed_nonempty_llist(functor_arg) . functor_arg [ MINUSGREATER LPAREN ]
##
## The known suffix of the stack is as follows:
## FUNCTOR list(attribute) reversed_nonempty_llist(functor_arg)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE FUNCTOR LPAREN RPAREN MINUSGREATER WITH
##
## Concrete syntax: include functor ( ) -> with
##
## Ends in an error in state: 678.
##
## module_expr -> FUNCTOR list(attribute) reversed_nonempty_llist(functor_arg) MINUSGREATER . module_expr [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
##
## The known suffix of the stack is as follows:
## FUNCTOR list(attribute) reversed_nonempty_llist(functor_arg) MINUSGREATER
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE FUNCTOR LPAREN RPAREN MINUSGREATER QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: include functor ( ) -> {%hello|world|} while
##
## Ends in an error in state: 680.
##
## module_expr -> FUNCTOR list(attribute) reversed_nonempty_llist(functor_arg) MINUSGREATER module_expr . [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
## module_expr -> module_expr . attribute [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
## module_expr -> module_expr . paren_module_expr [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
## module_expr -> module_expr . LPAREN RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
##
## The known suffix of the stack is as follows:
## FUNCTOR list(attribute) reversed_nonempty_llist(functor_arg) MINUSGREATER module_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE QUOTED_STRING_EXPR LPAREN WITH
##
## Concrete syntax: include {%hello|world|} ( with
##
## Ends in an error in state: 681.
##
## module_expr -> module_expr LPAREN . RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
## paren_module_expr -> LPAREN . module_expr COLON module_type RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
## paren_module_expr -> LPAREN . module_expr COLON module_type error [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
## paren_module_expr -> LPAREN . module_expr RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
## paren_module_expr -> LPAREN . module_expr error [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
## paren_module_expr -> LPAREN . VAL list(attribute) expr RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
## paren_module_expr -> LPAREN . VAL list(attribute) expr COLON module_type RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
## paren_module_expr -> LPAREN . VAL list(attribute) expr COLON module_type COLONGREATER module_type RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
## paren_module_expr -> LPAREN . VAL list(attribute) expr COLONGREATER module_type RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
## paren_module_expr -> LPAREN . VAL list(attribute) expr COLON error [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
## paren_module_expr -> LPAREN . VAL list(attribute) expr COLONGREATER error [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
## paren_module_expr -> LPAREN . VAL list(attribute) expr error [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
##
## The known suffix of the stack is as follows:
## module_expr LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE LPAREN LPAREN WITH
##
## Concrete syntax: include ( ( with
##
## Ends in an error in state: 683.
##
## paren_module_expr -> LPAREN . module_expr COLON module_type RPAREN [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
## paren_module_expr -> LPAREN . module_expr COLON module_type error [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
## paren_module_expr -> LPAREN . module_expr RPAREN [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
## paren_module_expr -> LPAREN . module_expr error [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
## paren_module_expr -> LPAREN . VAL list(attribute) expr RPAREN [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
## paren_module_expr -> LPAREN . VAL list(attribute) expr COLON module_type RPAREN [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
## paren_module_expr -> LPAREN . VAL list(attribute) expr COLON module_type COLONGREATER module_type RPAREN [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
## paren_module_expr -> LPAREN . VAL list(attribute) expr COLONGREATER module_type RPAREN [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
## paren_module_expr -> LPAREN . VAL list(attribute) expr COLON error [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
## paren_module_expr -> LPAREN . VAL list(attribute) expr COLONGREATER error [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
## paren_module_expr -> LPAREN . VAL list(attribute) expr error [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE LPAREN LPAREN VAL WITH
##
## Concrete syntax: include ( ( val with
##
## Ends in an error in state: 684.
##
## paren_module_expr -> LPAREN VAL . list(attribute) expr RPAREN [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
## paren_module_expr -> LPAREN VAL . list(attribute) expr COLON module_type RPAREN [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
## paren_module_expr -> LPAREN VAL . list(attribute) expr COLON module_type COLONGREATER module_type RPAREN [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
## paren_module_expr -> LPAREN VAL . list(attribute) expr COLONGREATER module_type RPAREN [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
## paren_module_expr -> LPAREN VAL . list(attribute) expr COLON error [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
## paren_module_expr -> LPAREN VAL . list(attribute) expr COLONGREATER error [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
## paren_module_expr -> LPAREN VAL . list(attribute) expr error [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
##
## The known suffix of the stack is as follows:
## LPAREN VAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE LPAREN LPAREN VAL LBRACKETAT AND RBRACKET VIRTUAL
##
## Concrete syntax: include ( ( val [@ and ] virtual
##
## Ends in an error in state: 685.
##
## paren_module_expr -> LPAREN VAL list(attribute) . expr RPAREN [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
## paren_module_expr -> LPAREN VAL list(attribute) . expr COLON module_type RPAREN [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
## paren_module_expr -> LPAREN VAL list(attribute) . expr COLON module_type COLONGREATER module_type RPAREN [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
## paren_module_expr -> LPAREN VAL list(attribute) . expr COLONGREATER module_type RPAREN [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
## paren_module_expr -> LPAREN VAL list(attribute) . expr COLON error [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
## paren_module_expr -> LPAREN VAL list(attribute) . expr COLONGREATER error [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
## paren_module_expr -> LPAREN VAL list(attribute) . expr error [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
##
## The known suffix of the stack is as follows:
## LPAREN VAL list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET LIDENT WITH
##
## Concrete syntax: [ lident with
##
## Ends in an error in state: 686.
##
## expr -> LIDENT . LESSMINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## val_ident -> LIDENT . [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET LIDENT LESSMINUS WITH
##
## Concrete syntax: [ lident <- with
##
## Ends in an error in state: 687.
##
## expr -> LIDENT LESSMINUS . expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LIDENT LESSMINUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET LETOP WITH
##
## Concrete syntax: [ let* with
##
## Ends in an error in state: 688.
##
## expr -> LETOP . letop_bindings IN seq_expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LETOP
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LBRACKET WITH
##
## Concrete syntax: [ with
##
## Ends in an error in state: 689.
##
## constr_extra_nonprefix_ident -> LBRACKET . RBRACKET [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LAZY LABEL INT HASH FLOAT FALSE EXCEPTION EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
## simple_delimited_pattern -> LBRACKET . separated_or_terminated_nonempty_list(SEMI,pattern) RBRACKET [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
## simple_delimited_pattern -> LBRACKET . separated_or_terminated_nonempty_list(SEMI,pattern) error [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
##
## The known suffix of the stack is as follows:
## LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LBRACKET LBRACKETBAR WITH
##
## Concrete syntax: [ [| with
##
## Ends in an error in state: 691.
##
## simple_delimited_pattern -> LBRACKETBAR . separated_or_terminated_nonempty_list(SEMI,pattern) BARRBRACKET [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## simple_delimited_pattern -> LBRACKETBAR . BARRBRACKET [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## simple_delimited_pattern -> LBRACKETBAR . separated_or_terminated_nonempty_list(SEMI,pattern) error [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
##
## The known suffix of the stack is as follows:
## LBRACKETBAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LBRACKET LBRACKET WITH
##
## Concrete syntax: [ [ with
##
## Ends in an error in state: 692.
##
## constr_extra_nonprefix_ident -> LBRACKET . RBRACKET [ error UNDERSCORE UIDENT TRUE STRING SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_EXPR PLUS MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LAZY INT HASH FLOAT FALSE EXCEPTION COMMA COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
## simple_delimited_pattern -> LBRACKET . separated_or_terminated_nonempty_list(SEMI,pattern) RBRACKET [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## simple_delimited_pattern -> LBRACKET . separated_or_terminated_nonempty_list(SEMI,pattern) error [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
##
## The known suffix of the stack is as follows:
## LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LBRACKET LBRACE WITH
##
## Concrete syntax: [ { with
##
## Ends in an error in state: 694.
##
## simple_delimited_pattern -> LBRACE . listx(SEMI,record_pat_field,UNDERSCORE) RBRACE [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## simple_delimited_pattern -> LBRACE . listx(SEMI,record_pat_field,UNDERSCORE) error [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
##
## The known suffix of the stack is as follows:
## LBRACE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LBRACKET LBRACE LIDENT SEMI UNDERSCORE SEMI WITH
##
## Concrete syntax: [ { lident ; _ ; with
##
## Ends in an error in state: 696.
##
## simple_delimited_pattern -> LBRACE listx(SEMI,record_pat_field,UNDERSCORE) . RBRACE [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## simple_delimited_pattern -> LBRACE listx(SEMI,record_pat_field,UNDERSCORE) . error [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
##
## The known suffix of the stack is as follows:
## LBRACE listx(SEMI,record_pat_field,UNDERSCORE)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LBRACE LIDENT WITH
##
## Concrete syntax: { lident with
##
## Ends in an error in state: 699.
##
## listx(SEMI,record_pat_field,UNDERSCORE) -> label_longident . option(preceded(COLON,core_type)) option(preceded(EQUAL,pattern)) [ error RBRACE ]
## listx(SEMI,record_pat_field,UNDERSCORE) -> label_longident . option(preceded(COLON,core_type)) option(preceded(EQUAL,pattern)) SEMI [ error RBRACE ]
## listx(SEMI,record_pat_field,UNDERSCORE) -> label_longident . option(preceded(COLON,core_type)) option(preceded(EQUAL,pattern)) SEMI UNDERSCORE option(SEMI) [ error RBRACE ]
## listx(SEMI,record_pat_field,UNDERSCORE) -> label_longident . option(preceded(COLON,core_type)) option(preceded(EQUAL,pattern)) SEMI listx(SEMI,record_pat_field,UNDERSCORE) [ error RBRACE ]
##
## The known suffix of the stack is as follows:
## label_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LBRACE LIDENT COLON WITH
##
## Concrete syntax: { lident : with
##
## Ends in an error in state: 700.
##
## option(preceded(COLON,core_type)) -> COLON . core_type [ error SEMI RBRACE EQUAL ]
##
## The known suffix of the stack is as follows:
## COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LBRACE LIDENT COLON QUOTED_STRING_EXPR WITH
##
## Concrete syntax: { lident : {%hello|world|} with
##
## Ends in an error in state: 701.
##
## core_type -> core_type . attribute [ error SEMI RBRACE LBRACKETAT EQUAL ]
## option(preceded(COLON,core_type)) -> COLON core_type . [ error SEMI RBRACE EQUAL ]
##
## The known suffix of the stack is as follows:
## COLON core_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 568, spurious reduction of production tuple_type -> atomic_type
## In state 555, spurious reduction of production function_type -> tuple_type
## In state 572, spurious reduction of production alias_type -> function_type
## In state 585, spurious reduction of production core_type -> alias_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LBRACE LIDENT EQUAL WITH
##
## Concrete syntax: { lident = with
##
## Ends in an error in state: 703.
##
## option(preceded(EQUAL,pattern)) -> EQUAL . pattern [ error SEMI RBRACE ]
##
## The known suffix of the stack is as follows:
## EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LBRACKET LAZY WITH
##
## Concrete syntax: [ lazy with
##
## Ends in an error in state: 704.
##
## pattern_gen -> LAZY . ext list(attribute) simple_pattern [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
##
## The known suffix of the stack is as follows:
## LAZY
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LBRACKET LAZY PERCENT AND WHILE
##
## Concrete syntax: [ lazy % and while
##
## Ends in an error in state: 705.
##
## pattern_gen -> LAZY ext . list(attribute) simple_pattern [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
##
## The known suffix of the stack is as follows:
## LAZY ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LBRACKET LAZY LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: [ lazy [@ and ] while
##
## Ends in an error in state: 706.
##
## pattern_gen -> LAZY ext list(attribute) . simple_pattern [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
##
## The known suffix of the stack is as follows:
## LAZY ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LBRACKET HASH WITH
##
## Concrete syntax: [ # with
##
## Ends in an error in state: 708.
##
## simple_pattern_not_ident -> HASH . type_longident [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
##
## The known suffix of the stack is as follows:
## HASH
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET BACKQUOTE WITH
##
## Concrete syntax: [ ` with
##
## Ends in an error in state: 713.
##
## name_tag -> BACKQUOTE . ident [ error VAL UNDERSCORE UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## BACKQUOTE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LBRACKET CHAR WITH
##
## Concrete syntax: [ 'a' with
##
## Ends in an error in state: 720.
##
## simple_pattern_not_ident -> signed_constant . [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## simple_pattern_not_ident -> signed_constant . DOTDOT signed_constant [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
##
## The known suffix of the stack is as follows:
## signed_constant
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LBRACKET CHAR DOTDOT WITH
##
## Concrete syntax: [ 'a' .. with
##
## Ends in an error in state: 721.
##
## simple_pattern_not_ident -> signed_constant DOTDOT . signed_constant [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
##
## The known suffix of the stack is as follows:
## signed_constant DOTDOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LBRACKET UIDENT WITH
##
## Concrete syntax: [ UIdent with
##
## Ends in an error in state: 725.
##
## constr_longident -> mod_longident . [ error UNDERSCORE UIDENT TRUE STRING SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_EXPR PLUS MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LAZY INT HASH FLOAT FALSE EXCEPTION COMMA COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
## constr_longident -> mod_longident . DOT LPAREN COLONCOLON RPAREN [ error UNDERSCORE UIDENT TRUE STRING SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_EXPR PLUS MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LAZY INT HASH FLOAT FALSE EXCEPTION COMMA COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
## mk_longident(mod_longident,UIDENT) -> mod_longident . DOT UIDENT [ error UNDERSCORE UIDENT TRUE STRING SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_EXPR PLUS MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LAZY INT HASH FLOAT FALSE EXCEPTION DOT COMMA COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
## simple_pattern_not_ident -> mod_longident . DOT simple_delimited_pattern [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## simple_pattern_not_ident -> mod_longident . DOT LBRACKET RBRACKET [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## simple_pattern_not_ident -> mod_longident . DOT LPAREN RPAREN [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## simple_pattern_not_ident -> mod_longident . DOT LPAREN pattern RPAREN [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## simple_pattern_not_ident -> mod_longident . DOT LPAREN pattern error [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## simple_pattern_not_ident -> mod_longident . DOT LPAREN error [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
##
## The known suffix of the stack is as follows:
## mod_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LBRACKET UIDENT DOT WITH
##
## Concrete syntax: [ UIdent . with
##
## Ends in an error in state: 726.
##
## constr_longident -> mod_longident DOT . LPAREN COLONCOLON RPAREN [ error UNDERSCORE UIDENT TRUE STRING SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_EXPR PLUS MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LAZY INT HASH FLOAT FALSE EXCEPTION COMMA COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
## mk_longident(mod_longident,UIDENT) -> mod_longident DOT . UIDENT [ error UNDERSCORE UIDENT TRUE STRING SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_EXPR PLUS MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LAZY INT HASH FLOAT FALSE EXCEPTION DOT COMMA COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
## simple_pattern_not_ident -> mod_longident DOT . simple_delimited_pattern [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## simple_pattern_not_ident -> mod_longident DOT . LBRACKET RBRACKET [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## simple_pattern_not_ident -> mod_longident DOT . LPAREN RPAREN [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## simple_pattern_not_ident -> mod_longident DOT . LPAREN pattern RPAREN [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## simple_pattern_not_ident -> mod_longident DOT . LPAREN pattern error [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## simple_pattern_not_ident -> mod_longident DOT . LPAREN error [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
##
## The known suffix of the stack is as follows:
## mod_longident DOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LBRACKET UIDENT DOT LPAREN WITH
##
## Concrete syntax: [ UIdent . ( with
##
## Ends in an error in state: 728.
##
## constr_longident -> mod_longident DOT LPAREN . COLONCOLON RPAREN [ error UNDERSCORE UIDENT TRUE STRING SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_EXPR PLUS MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LAZY INT HASH FLOAT FALSE EXCEPTION COMMA COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
## simple_pattern_not_ident -> mod_longident DOT LPAREN . RPAREN [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## simple_pattern_not_ident -> mod_longident DOT LPAREN . pattern RPAREN [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## simple_pattern_not_ident -> mod_longident DOT LPAREN . pattern error [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## simple_pattern_not_ident -> mod_longident DOT LPAREN . error [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
##
## The known suffix of the stack is as follows:
## mod_longident DOT LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LBRACKET EXCEPTION WITH
##
## Concrete syntax: [ exception with
##
## Ends in an error in state: 731.
##
## pattern -> EXCEPTION . ext list(attribute) pattern [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
##
## The known suffix of the stack is as follows:
## EXCEPTION
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LBRACKET EXCEPTION PERCENT AND WHILE
##
## Concrete syntax: [ exception % and while
##
## Ends in an error in state: 732.
##
## pattern -> EXCEPTION ext . list(attribute) pattern [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
##
## The known suffix of the stack is as follows:
## EXCEPTION ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LBRACKET EXCEPTION LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: [ exception [@ and ] while
##
## Ends in an error in state: 733.
##
## pattern -> EXCEPTION ext list(attribute) . pattern [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
##
## The known suffix of the stack is as follows:
## EXCEPTION ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LBRACKET FALSE COMMA FALSE COMMA WITH
##
## Concrete syntax: [ false , false , with
##
## Ends in an error in state: 737.
##
## pattern_comma_list(pattern) -> pattern_comma_list(pattern) COMMA . pattern [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
##
## The known suffix of the stack is as follows:
## pattern_comma_list(pattern) COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LBRACKET FALSE COMMA FALSE COMMA QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: [ false , false , {%hello|world|} while
##
## Ends in an error in state: 738.
##
## pattern -> pattern . COLONCOLON pattern [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## pattern -> pattern . attribute [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## pattern -> pattern . AS val_ident [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## pattern -> pattern . AS error [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## pattern -> pattern . COLONCOLON error [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## pattern -> pattern . BAR pattern [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## pattern -> pattern . BAR error [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## pattern_comma_list(pattern) -> pattern_comma_list(pattern) COMMA pattern . [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## pattern_comma_list(pattern) -> pattern . COMMA pattern [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## pattern_comma_list(pattern) -> pattern . COMMA error [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
##
## The known suffix of the stack is as follows:
## pattern_comma_list(pattern) COMMA pattern
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LBRACKET FALSE COLONCOLON WITH
##
## Concrete syntax: [ false :: with
##
## Ends in an error in state: 739.
##
## pattern -> pattern COLONCOLON . pattern [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## pattern -> pattern COLONCOLON . error [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
##
## The known suffix of the stack is as follows:
## pattern COLONCOLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LBRACKET FALSE COLONCOLON QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: [ false :: {%hello|world|} while
##
## Ends in an error in state: 741.
##
## pattern -> pattern . COLONCOLON pattern [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## pattern -> pattern COLONCOLON pattern . [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## pattern -> pattern . attribute [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## pattern -> pattern . AS val_ident [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## pattern -> pattern . AS error [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## pattern -> pattern . COLONCOLON error [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## pattern -> pattern . BAR pattern [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## pattern -> pattern . BAR error [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## pattern_comma_list(pattern) -> pattern . COMMA pattern [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## pattern_comma_list(pattern) -> pattern . COMMA error [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
##
## The known suffix of the stack is as follows:
## pattern COLONCOLON pattern
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LBRACKET BACKQUOTE LIDENT WITH
##
## Concrete syntax: [ ` lident with
##
## Ends in an error in state: 743.
##
## pattern_gen -> name_tag . pattern [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## simple_pattern_not_ident -> name_tag . [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
##
## The known suffix of the stack is as follows:
## name_tag
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LBRACKET FALSE WITH
##
## Concrete syntax: [ false with
##
## Ends in an error in state: 747.
##
## pattern_gen -> constr_longident . pattern [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## pattern_gen -> constr_longident . LPAREN TYPE nonempty_list(mkrhs(LIDENT)) RPAREN simple_pattern [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## simple_pattern_not_ident -> constr_longident . [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
##
## The known suffix of the stack is as follows:
## constr_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LBRACKET FALSE LPAREN WITH
##
## Concrete syntax: [ false ( with
##
## Ends in an error in state: 748.
##
## constr_extra_nonprefix_ident -> LPAREN . RPAREN [ error UNDERSCORE UIDENT TRUE STRING SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_EXPR PLUS MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LAZY INT HASH FLOAT FALSE EXCEPTION COMMA COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
## constr_longident -> LPAREN . COLONCOLON RPAREN [ error UNDERSCORE UIDENT TRUE STRING SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_EXPR PLUS MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LAZY INT HASH FLOAT FALSE EXCEPTION COMMA COLONCOLON COLON CHAR BARRBRACKET BAR BACKQUOTE AS ]
## pattern_gen -> constr_longident LPAREN . TYPE nonempty_list(mkrhs(LIDENT)) RPAREN simple_pattern [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## simple_pattern_not_ident -> LPAREN . pattern RPAREN [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## simple_pattern_not_ident -> LPAREN . MODULE ext list(attribute) module_name RPAREN [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## simple_pattern_not_ident -> LPAREN . MODULE ext list(attribute) module_name COLON module_type RPAREN [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## simple_pattern_not_ident -> LPAREN . pattern error [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## simple_pattern_not_ident -> LPAREN . pattern COLON core_type RPAREN [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## simple_pattern_not_ident -> LPAREN . pattern COLON core_type error [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## simple_pattern_not_ident -> LPAREN . pattern COLON error [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## simple_pattern_not_ident -> LPAREN . MODULE ext list(attribute) module_name COLON module_type error [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## val_extra_ident -> LPAREN . operator RPAREN [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## val_extra_ident -> LPAREN . operator error [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## val_extra_ident -> LPAREN . error [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## val_extra_ident -> LPAREN . MODULE error [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
##
## The known suffix of the stack is as follows:
## constr_longident LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LBRACKET FALSE LPAREN TYPE WITH
##
## Concrete syntax: [ false ( type with
##
## Ends in an error in state: 749.
##
## pattern_gen -> constr_longident LPAREN TYPE . nonempty_list(mkrhs(LIDENT)) RPAREN simple_pattern [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
##
## The known suffix of the stack is as follows:
## constr_longident LPAREN TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: FALSE LPAREN TYPE LIDENT WITH
##
## Concrete syntax: false ( type lident with
##
## Ends in an error in state: 750.
##
## nonempty_list(mkrhs(LIDENT)) -> LIDENT . [ RPAREN DOT ]
## nonempty_list(mkrhs(LIDENT)) -> LIDENT . nonempty_list(mkrhs(LIDENT)) [ RPAREN DOT ]
##
## The known suffix of the stack is as follows:
## LIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LBRACKET FALSE LPAREN TYPE LIDENT DOT
##
## Concrete syntax: [ false ( type lident .
##
## Ends in an error in state: 752.
##
## pattern_gen -> constr_longident LPAREN TYPE nonempty_list(mkrhs(LIDENT)) . RPAREN simple_pattern [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
##
## The known suffix of the stack is as follows:
## constr_longident LPAREN TYPE nonempty_list(mkrhs(LIDENT))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 750, spurious reduction of production nonempty_list(mkrhs(LIDENT)) -> LIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LBRACKET FALSE LPAREN TYPE LIDENT RPAREN WITH
##
## Concrete syntax: [ false ( type lident ) with
##
## Ends in an error in state: 753.
##
## pattern_gen -> constr_longident LPAREN TYPE nonempty_list(mkrhs(LIDENT)) RPAREN . simple_pattern [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
##
## The known suffix of the stack is as follows:
## constr_longident LPAREN TYPE nonempty_list(mkrhs(LIDENT)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LPAREN MINUS WITH
##
## Concrete syntax: ( - with
##
## Ends in an error in state: 757.
##
## operator -> MINUS . [ error RPAREN ]
## signed_constant -> MINUS . INT [ error RPAREN LBRACKETAT DOTDOT COMMA COLONCOLON COLON BAR AS ]
## signed_constant -> MINUS . FLOAT [ error RPAREN LBRACKETAT DOTDOT COMMA COLONCOLON COLON BAR AS ]
##
## The known suffix of the stack is as follows:
## MINUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET LPAREN COLONCOLON WITH
##
## Concrete syntax: [ ( :: with
##
## Ends in an error in state: 758.
##
## constr_longident -> LPAREN COLONCOLON . RPAREN [ error VAL UNDERSCORE UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LPAREN COLONCOLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LBRACKET LPAREN QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: [ ( {%hello|world|} while
##
## Ends in an error in state: 760.
##
## pattern -> pattern . COLONCOLON pattern [ error RPAREN LBRACKETAT COMMA COLONCOLON COLON BAR AS ]
## pattern -> pattern . attribute [ error RPAREN LBRACKETAT COMMA COLONCOLON COLON BAR AS ]
## pattern -> pattern . AS val_ident [ error RPAREN LBRACKETAT COMMA COLONCOLON COLON BAR AS ]
## pattern -> pattern . AS error [ error RPAREN LBRACKETAT COMMA COLONCOLON COLON BAR AS ]
## pattern -> pattern . COLONCOLON error [ error RPAREN LBRACKETAT COMMA COLONCOLON COLON BAR AS ]
## pattern -> pattern . BAR pattern [ error RPAREN LBRACKETAT COMMA COLONCOLON COLON BAR AS ]
## pattern -> pattern . BAR error [ error RPAREN LBRACKETAT COMMA COLONCOLON COLON BAR AS ]
## pattern_comma_list(pattern) -> pattern . COMMA pattern [ error RPAREN LBRACKETAT COMMA COLONCOLON COLON BAR AS ]
## pattern_comma_list(pattern) -> pattern . COMMA error [ error RPAREN LBRACKETAT COMMA COLONCOLON COLON BAR AS ]
## simple_pattern_not_ident -> LPAREN pattern . RPAREN [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## simple_pattern_not_ident -> LPAREN pattern . error [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## simple_pattern_not_ident -> LPAREN pattern . COLON core_type RPAREN [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## simple_pattern_not_ident -> LPAREN pattern . COLON core_type error [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## simple_pattern_not_ident -> LPAREN pattern . COLON error [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
##
## The known suffix of the stack is as follows:
## LPAREN pattern
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LBRACKET FALSE COMMA WITH
##
## Concrete syntax: [ false , with
##
## Ends in an error in state: 763.
##
## pattern_comma_list(pattern) -> pattern COMMA . pattern [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## pattern_comma_list(pattern) -> pattern COMMA . error [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
##
## The known suffix of the stack is as follows:
## pattern COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LBRACKET FALSE COMMA QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: [ false , {%hello|world|} while
##
## Ends in an error in state: 765.
##
## pattern -> pattern . COLONCOLON pattern [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## pattern -> pattern . attribute [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## pattern -> pattern . AS val_ident [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## pattern -> pattern . AS error [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## pattern -> pattern . COLONCOLON error [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## pattern -> pattern . BAR pattern [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## pattern -> pattern . BAR error [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## pattern_comma_list(pattern) -> pattern . COMMA pattern [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## pattern_comma_list(pattern) -> pattern COMMA pattern . [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## pattern_comma_list(pattern) -> pattern . COMMA error [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
##
## The known suffix of the stack is as follows:
## pattern COMMA pattern
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LBRACKET LPAREN FALSE COLON WITH
##
## Concrete syntax: [ ( false : with
##
## Ends in an error in state: 766.
##
## simple_pattern_not_ident -> LPAREN pattern COLON . core_type RPAREN [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## simple_pattern_not_ident -> LPAREN pattern COLON . core_type error [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## simple_pattern_not_ident -> LPAREN pattern COLON . error [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
##
## The known suffix of the stack is as follows:
## LPAREN pattern COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LBRACKET LPAREN FALSE COLON QUOTED_STRING_EXPR WITH
##
## Concrete syntax: [ ( false : {%hello|world|} with
##
## Ends in an error in state: 768.
##
## core_type -> core_type . attribute [ error RPAREN LBRACKETAT ]
## simple_pattern_not_ident -> LPAREN pattern COLON core_type . RPAREN [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## simple_pattern_not_ident -> LPAREN pattern COLON core_type . error [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
##
## The known suffix of the stack is as follows:
## LPAREN pattern COLON core_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 568, spurious reduction of production tuple_type -> atomic_type
## In state 555, spurious reduction of production function_type -> tuple_type
## In state 572, spurious reduction of production alias_type -> function_type
## In state 585, spurious reduction of production core_type -> alias_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LBRACKET FALSE BAR WITH
##
## Concrete syntax: [ false | with
##
## Ends in an error in state: 771.
##
## pattern -> pattern BAR . pattern [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## pattern -> pattern BAR . error [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
##
## The known suffix of the stack is as follows:
## pattern BAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LBRACKET FALSE BAR QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: [ false | {%hello|world|} while
##
## Ends in an error in state: 773.
##
## pattern -> pattern . COLONCOLON pattern [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## pattern -> pattern . attribute [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## pattern -> pattern . AS val_ident [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## pattern -> pattern . AS error [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## pattern -> pattern . COLONCOLON error [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## pattern -> pattern . BAR pattern [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## pattern -> pattern BAR pattern . [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## pattern -> pattern . BAR error [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## pattern_comma_list(pattern) -> pattern . COMMA pattern [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## pattern_comma_list(pattern) -> pattern . COMMA error [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
##
## The known suffix of the stack is as follows:
## pattern BAR pattern
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LBRACKET FALSE AS WITH
##
## Concrete syntax: [ false as with
##
## Ends in an error in state: 774.
##
## pattern -> pattern AS . val_ident [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## pattern -> pattern AS . error [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
##
## The known suffix of the stack is as follows:
## pattern AS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LBRACKET FALSE AS LPAREN WITH
##
## Concrete syntax: [ false as ( with
##
## Ends in an error in state: 776.
##
## val_extra_ident -> LPAREN . operator RPAREN [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## val_extra_ident -> LPAREN . operator error [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## val_extra_ident -> LPAREN . error [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## val_extra_ident -> LPAREN . MODULE error [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LBRACKET FALSE AS LPAREN MODULE WITH
##
## Concrete syntax: [ false as ( module with
##
## Ends in an error in state: 777.
##
## val_extra_ident -> LPAREN MODULE . error [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
##
## The known suffix of the stack is as follows:
## LPAREN MODULE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET LPAREN AMPERAMPER WITH
##
## Concrete syntax: [ ( && with
##
## Ends in an error in state: 778.
##
## val_extra_ident -> LPAREN operator . RPAREN [ error VAL UNDERSCORE UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## val_extra_ident -> LPAREN operator . error [ error VAL UNDERSCORE UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LPAREN operator
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT DOT LPAREN COLONCOLON WITH
##
## Concrete syntax: [ UIdent . ( :: with
##
## Ends in an error in state: 784.
##
## constr_longident -> mod_longident DOT LPAREN COLONCOLON . RPAREN [ error VAL UNDERSCORE UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## mod_longident DOT LPAREN COLONCOLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LBRACKET UIDENT DOT LPAREN QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: [ UIdent . ( {%hello|world|} while
##
## Ends in an error in state: 786.
##
## pattern -> pattern . COLONCOLON pattern [ error RPAREN LBRACKETAT COMMA COLONCOLON BAR AS ]
## pattern -> pattern . attribute [ error RPAREN LBRACKETAT COMMA COLONCOLON BAR AS ]
## pattern -> pattern . AS val_ident [ error RPAREN LBRACKETAT COMMA COLONCOLON BAR AS ]
## pattern -> pattern . AS error [ error RPAREN LBRACKETAT COMMA COLONCOLON BAR AS ]
## pattern -> pattern . COLONCOLON error [ error RPAREN LBRACKETAT COMMA COLONCOLON BAR AS ]
## pattern -> pattern . BAR pattern [ error RPAREN LBRACKETAT COMMA COLONCOLON BAR AS ]
## pattern -> pattern . BAR error [ error RPAREN LBRACKETAT COMMA COLONCOLON BAR AS ]
## pattern_comma_list(pattern) -> pattern . COMMA pattern [ error RPAREN LBRACKETAT COMMA COLONCOLON BAR AS ]
## pattern_comma_list(pattern) -> pattern . COMMA error [ error RPAREN LBRACKETAT COMMA COLONCOLON BAR AS ]
## simple_pattern_not_ident -> mod_longident DOT LPAREN pattern . RPAREN [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## simple_pattern_not_ident -> mod_longident DOT LPAREN pattern . error [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
##
## The known suffix of the stack is as follows:
## mod_longident DOT LPAREN pattern
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LBRACKET UIDENT DOT LBRACKET WITH
##
## Concrete syntax: [ UIdent . [ with
##
## Ends in an error in state: 789.
##
## simple_delimited_pattern -> LBRACKET . separated_or_terminated_nonempty_list(SEMI,pattern) RBRACKET [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## simple_delimited_pattern -> LBRACKET . separated_or_terminated_nonempty_list(SEMI,pattern) error [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## simple_pattern_not_ident -> mod_longident DOT LBRACKET . RBRACKET [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
##
## The known suffix of the stack is as follows:
## mod_longident DOT LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LBRACKET LBRACKET FALSE BARRBRACKET
##
## Concrete syntax: [ [ false |]
##
## Ends in an error in state: 791.
##
## simple_delimited_pattern -> LBRACKET separated_or_terminated_nonempty_list(SEMI,pattern) . RBRACKET [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## simple_delimited_pattern -> LBRACKET separated_or_terminated_nonempty_list(SEMI,pattern) . error [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
##
## The known suffix of the stack is as follows:
## LBRACKET separated_or_terminated_nonempty_list(SEMI,pattern)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 747, spurious reduction of production simple_pattern_not_ident -> constr_longident
## In state 717, spurious reduction of production simple_pattern -> simple_pattern_not_ident
## In state 734, spurious reduction of production pattern_gen -> simple_pattern
## In state 735, spurious reduction of production pattern -> pattern_gen
## In state 794, spurious reduction of production separated_or_terminated_nonempty_list(SEMI,pattern) -> pattern
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LBRACKET QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: [ {%hello|world|} while
##
## Ends in an error in state: 794.
##
## pattern -> pattern . COLONCOLON pattern [ error SEMI RBRACKET LBRACKETAT COMMA COLONCOLON BARRBRACKET BAR AS ]
## pattern -> pattern . attribute [ error SEMI RBRACKET LBRACKETAT COMMA COLONCOLON BARRBRACKET BAR AS ]
## pattern -> pattern . AS val_ident [ error SEMI RBRACKET LBRACKETAT COMMA COLONCOLON BARRBRACKET BAR AS ]
## pattern -> pattern . AS error [ error SEMI RBRACKET LBRACKETAT COMMA COLONCOLON BARRBRACKET BAR AS ]
## pattern -> pattern . COLONCOLON error [ error SEMI RBRACKET LBRACKETAT COMMA COLONCOLON BARRBRACKET BAR AS ]
## pattern -> pattern . BAR pattern [ error SEMI RBRACKET LBRACKETAT COMMA COLONCOLON BARRBRACKET BAR AS ]
## pattern -> pattern . BAR error [ error SEMI RBRACKET LBRACKETAT COMMA COLONCOLON BARRBRACKET BAR AS ]
## pattern_comma_list(pattern) -> pattern . COMMA pattern [ error SEMI RBRACKET LBRACKETAT COMMA COLONCOLON BARRBRACKET BAR AS ]
## pattern_comma_list(pattern) -> pattern . COMMA error [ error SEMI RBRACKET LBRACKETAT COMMA COLONCOLON BARRBRACKET BAR AS ]
## separated_or_terminated_nonempty_list(SEMI,pattern) -> pattern . [ error RBRACKET BARRBRACKET ]
## separated_or_terminated_nonempty_list(SEMI,pattern) -> pattern . SEMI [ error RBRACKET BARRBRACKET ]
## separated_or_terminated_nonempty_list(SEMI,pattern) -> pattern . SEMI separated_or_terminated_nonempty_list(SEMI,pattern) [ error RBRACKET BARRBRACKET ]
##
## The known suffix of the stack is as follows:
## pattern
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LBRACKET FALSE SEMI WITH
##
## Concrete syntax: [ false ; with
##
## Ends in an error in state: 795.
##
## separated_or_terminated_nonempty_list(SEMI,pattern) -> pattern SEMI . [ error RBRACKET BARRBRACKET ]
## separated_or_terminated_nonempty_list(SEMI,pattern) -> pattern SEMI . separated_or_terminated_nonempty_list(SEMI,pattern) [ error RBRACKET BARRBRACKET ]
##
## The known suffix of the stack is as follows:
## pattern SEMI
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LBRACE LIDENT EQUAL QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: { lident = {%hello|world|} while
##
## Ends in an error in state: 798.
##
## option(preceded(EQUAL,pattern)) -> EQUAL pattern . [ error SEMI RBRACE ]
## pattern -> pattern . COLONCOLON pattern [ error SEMI RBRACE LBRACKETAT COMMA COLONCOLON BAR AS ]
## pattern -> pattern . attribute [ error SEMI RBRACE LBRACKETAT COMMA COLONCOLON BAR AS ]
## pattern -> pattern . AS val_ident [ error SEMI RBRACE LBRACKETAT COMMA COLONCOLON BAR AS ]
## pattern -> pattern . AS error [ error SEMI RBRACE LBRACKETAT COMMA COLONCOLON BAR AS ]
## pattern -> pattern . COLONCOLON error [ error SEMI RBRACE LBRACKETAT COMMA COLONCOLON BAR AS ]
## pattern -> pattern . BAR pattern [ error SEMI RBRACE LBRACKETAT COMMA COLONCOLON BAR AS ]
## pattern -> pattern . BAR error [ error SEMI RBRACE LBRACKETAT COMMA COLONCOLON BAR AS ]
## pattern_comma_list(pattern) -> pattern . COMMA pattern [ error SEMI RBRACE LBRACKETAT COMMA COLONCOLON BAR AS ]
## pattern_comma_list(pattern) -> pattern . COMMA error [ error SEMI RBRACE LBRACKETAT COMMA COLONCOLON BAR AS ]
##
## The known suffix of the stack is as follows:
## EQUAL pattern
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LBRACE LIDENT SEMI WITH
##
## Concrete syntax: { lident ; with
##
## Ends in an error in state: 800.
##
## listx(SEMI,record_pat_field,UNDERSCORE) -> label_longident option(preceded(COLON,core_type)) option(preceded(EQUAL,pattern)) SEMI . [ error RBRACE ]
## listx(SEMI,record_pat_field,UNDERSCORE) -> label_longident option(preceded(COLON,core_type)) option(preceded(EQUAL,pattern)) SEMI . UNDERSCORE option(SEMI) [ error RBRACE ]
## listx(SEMI,record_pat_field,UNDERSCORE) -> label_longident option(preceded(COLON,core_type)) option(preceded(EQUAL,pattern)) SEMI . listx(SEMI,record_pat_field,UNDERSCORE) [ error RBRACE ]
##
## The known suffix of the stack is as follows:
## label_longident option(preceded(COLON,core_type)) option(preceded(EQUAL,pattern)) SEMI
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LBRACE LIDENT SEMI UNDERSCORE WITH
##
## Concrete syntax: { lident ; _ with
##
## Ends in an error in state: 801.
##
## listx(SEMI,record_pat_field,UNDERSCORE) -> label_longident option(preceded(COLON,core_type)) option(preceded(EQUAL,pattern)) SEMI UNDERSCORE . option(SEMI) [ error RBRACE ]
##
## The known suffix of the stack is as follows:
## label_longident option(preceded(COLON,core_type)) option(preceded(EQUAL,pattern)) SEMI UNDERSCORE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LBRACKET LBRACKETBAR FALSE RBRACKET
##
## Concrete syntax: [ [| false ]
##
## Ends in an error in state: 806.
##
## simple_delimited_pattern -> LBRACKETBAR separated_or_terminated_nonempty_list(SEMI,pattern) . BARRBRACKET [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## simple_delimited_pattern -> LBRACKETBAR separated_or_terminated_nonempty_list(SEMI,pattern) . error [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
##
## The known suffix of the stack is as follows:
## LBRACKETBAR separated_or_terminated_nonempty_list(SEMI,pattern)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 747, spurious reduction of production simple_pattern_not_ident -> constr_longident
## In state 717, spurious reduction of production simple_pattern -> simple_pattern_not_ident
## In state 734, spurious reduction of production pattern_gen -> simple_pattern
## In state 735, spurious reduction of production pattern -> pattern_gen
## In state 794, spurious reduction of production separated_or_terminated_nonempty_list(SEMI,pattern) -> pattern
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LBRACKET FALSE BARRBRACKET
##
## Concrete syntax: [ false |]
##
## Ends in an error in state: 809.
##
## simple_delimited_pattern -> LBRACKET separated_or_terminated_nonempty_list(SEMI,pattern) . RBRACKET [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
## simple_delimited_pattern -> LBRACKET separated_or_terminated_nonempty_list(SEMI,pattern) . error [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
##
## The known suffix of the stack is as follows:
## LBRACKET separated_or_terminated_nonempty_list(SEMI,pattern)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 747, spurious reduction of production simple_pattern_not_ident -> constr_longident
## In state 717, spurious reduction of production simple_pattern -> simple_pattern_not_ident
## In state 734, spurious reduction of production pattern_gen -> simple_pattern
## In state 735, spurious reduction of production pattern -> pattern_gen
## In state 794, spurious reduction of production separated_or_terminated_nonempty_list(SEMI,pattern) -> pattern
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LBRACE WITH
##
## Concrete syntax: { with
##
## Ends in an error in state: 812.
##
## simple_delimited_pattern -> LBRACE . listx(SEMI,record_pat_field,UNDERSCORE) RBRACE [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
## simple_delimited_pattern -> LBRACE . listx(SEMI,record_pat_field,UNDERSCORE) error [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
##
## The known suffix of the stack is as follows:
## LBRACE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LBRACE LIDENT SEMI UNDERSCORE SEMI WITH
##
## Concrete syntax: { lident ; _ ; with
##
## Ends in an error in state: 813.
##
## simple_delimited_pattern -> LBRACE listx(SEMI,record_pat_field,UNDERSCORE) . RBRACE [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
## simple_delimited_pattern -> LBRACE listx(SEMI,record_pat_field,UNDERSCORE) . error [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
##
## The known suffix of the stack is as follows:
## LBRACE listx(SEMI,record_pat_field,UNDERSCORE)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LAZY WITH
##
## Concrete syntax: lazy with
##
## Ends in an error in state: 816.
##
## pattern_gen -> LAZY . ext list(attribute) simple_pattern [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
##
## The known suffix of the stack is as follows:
## LAZY
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LAZY PERCENT AND WHILE
##
## Concrete syntax: lazy % and while
##
## Ends in an error in state: 817.
##
## pattern_gen -> LAZY ext . list(attribute) simple_pattern [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
##
## The known suffix of the stack is as follows:
## LAZY ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LAZY LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: lazy [@ and ] while
##
## Ends in an error in state: 818.
##
## pattern_gen -> LAZY ext list(attribute) . simple_pattern [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
##
## The known suffix of the stack is as follows:
## LAZY ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: HASH WITH
##
## Concrete syntax: # with
##
## Ends in an error in state: 820.
##
## simple_pattern_not_ident -> HASH . type_longident [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
##
## The known suffix of the stack is as follows:
## HASH
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: CHAR WITH
##
## Concrete syntax: 'a' with
##
## Ends in an error in state: 830.
##
## simple_pattern_not_ident -> signed_constant . [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
## simple_pattern_not_ident -> signed_constant . DOTDOT signed_constant [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
##
## The known suffix of the stack is as follows:
## signed_constant
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: CHAR DOTDOT WITH
##
## Concrete syntax: 'a' .. with
##
## Ends in an error in state: 831.
##
## simple_pattern_not_ident -> signed_constant DOTDOT . signed_constant [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
##
## The known suffix of the stack is as follows:
## signed_constant DOTDOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: UIDENT WITH
##
## Concrete syntax: UIdent with
##
## Ends in an error in state: 835.
##
## constr_longident -> mod_longident . [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LAZY LABEL INT HASH FLOAT FALSE EXCEPTION EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
## constr_longident -> mod_longident . DOT LPAREN COLONCOLON RPAREN [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LAZY LABEL INT HASH FLOAT FALSE EXCEPTION EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
## mk_longident(mod_longident,UIDENT) -> mod_longident . DOT UIDENT [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LAZY LABEL INT HASH FLOAT FALSE EXCEPTION EQUAL EOF DOT COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
## simple_pattern_not_ident -> mod_longident . DOT simple_delimited_pattern [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
## simple_pattern_not_ident -> mod_longident . DOT LBRACKET RBRACKET [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
## simple_pattern_not_ident -> mod_longident . DOT LPAREN RPAREN [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
## simple_pattern_not_ident -> mod_longident . DOT LPAREN pattern RPAREN [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
## simple_pattern_not_ident -> mod_longident . DOT LPAREN pattern error [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
## simple_pattern_not_ident -> mod_longident . DOT LPAREN error [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
##
## The known suffix of the stack is as follows:
## mod_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: UIDENT DOT WITH
##
## Concrete syntax: UIdent . with
##
## Ends in an error in state: 836.
##
## constr_longident -> mod_longident DOT . LPAREN COLONCOLON RPAREN [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LAZY LABEL INT HASH FLOAT FALSE EXCEPTION EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
## mk_longident(mod_longident,UIDENT) -> mod_longident DOT . UIDENT [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LAZY LABEL INT HASH FLOAT FALSE EXCEPTION EQUAL EOF DOT COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
## simple_pattern_not_ident -> mod_longident DOT . simple_delimited_pattern [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
## simple_pattern_not_ident -> mod_longident DOT . LBRACKET RBRACKET [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
## simple_pattern_not_ident -> mod_longident DOT . LPAREN RPAREN [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
## simple_pattern_not_ident -> mod_longident DOT . LPAREN pattern RPAREN [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
## simple_pattern_not_ident -> mod_longident DOT . LPAREN pattern error [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
## simple_pattern_not_ident -> mod_longident DOT . LPAREN error [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
##
## The known suffix of the stack is as follows:
## mod_longident DOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: UIDENT DOT LPAREN WITH
##
## Concrete syntax: UIdent . ( with
##
## Ends in an error in state: 837.
##
## constr_longident -> mod_longident DOT LPAREN . COLONCOLON RPAREN [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LAZY LABEL INT HASH FLOAT FALSE EXCEPTION EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
## simple_pattern_not_ident -> mod_longident DOT LPAREN . RPAREN [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
## simple_pattern_not_ident -> mod_longident DOT LPAREN . pattern RPAREN [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
## simple_pattern_not_ident -> mod_longident DOT LPAREN . pattern error [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
## simple_pattern_not_ident -> mod_longident DOT LPAREN . error [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
##
## The known suffix of the stack is as follows:
## mod_longident DOT LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT DOT LPAREN COLONCOLON WITH
##
## Concrete syntax: UIdent . ( :: with
##
## Ends in an error in state: 840.
##
## constr_longident -> mod_longident DOT LPAREN COLONCOLON . RPAREN [ WITH WHEN VAL UNDERSCORE UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE AS ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## mod_longident DOT LPAREN COLONCOLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: UIDENT DOT LPAREN QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: UIdent . ( {%hello|world|} while
##
## Ends in an error in state: 842.
##
## pattern -> pattern . COLONCOLON pattern [ error RPAREN LBRACKETAT COMMA COLONCOLON BAR AS ]
## pattern -> pattern . attribute [ error RPAREN LBRACKETAT COMMA COLONCOLON BAR AS ]
## pattern -> pattern . AS val_ident [ error RPAREN LBRACKETAT COMMA COLONCOLON BAR AS ]
## pattern -> pattern . AS error [ error RPAREN LBRACKETAT COMMA COLONCOLON BAR AS ]
## pattern -> pattern . COLONCOLON error [ error RPAREN LBRACKETAT COMMA COLONCOLON BAR AS ]
## pattern -> pattern . BAR pattern [ error RPAREN LBRACKETAT COMMA COLONCOLON BAR AS ]
## pattern -> pattern . BAR error [ error RPAREN LBRACKETAT COMMA COLONCOLON BAR AS ]
## pattern_comma_list(pattern) -> pattern . COMMA pattern [ error RPAREN LBRACKETAT COMMA COLONCOLON BAR AS ]
## pattern_comma_list(pattern) -> pattern . COMMA error [ error RPAREN LBRACKETAT COMMA COLONCOLON BAR AS ]
## simple_pattern_not_ident -> mod_longident DOT LPAREN pattern . RPAREN [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
## simple_pattern_not_ident -> mod_longident DOT LPAREN pattern . error [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
##
## The known suffix of the stack is as follows:
## mod_longident DOT LPAREN pattern
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: UIDENT DOT LBRACKET WITH
##
## Concrete syntax: UIdent . [ with
##
## Ends in an error in state: 845.
##
## simple_delimited_pattern -> LBRACKET . separated_or_terminated_nonempty_list(SEMI,pattern) RBRACKET [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
## simple_delimited_pattern -> LBRACKET . separated_or_terminated_nonempty_list(SEMI,pattern) error [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
## simple_pattern_not_ident -> mod_longident DOT LBRACKET . RBRACKET [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
##
## The known suffix of the stack is as follows:
## mod_longident DOT LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LETOP LIDENT WITH
##
## Concrete syntax: let* lident with
##
## Ends in an error in state: 851.
##
## letop_binding_body -> val_ident . strict_binding [ IN ANDOP ]
## letop_binding_body -> val_ident . [ IN ANDOP ]
## simple_pattern -> val_ident . [ LBRACKETAT EQUAL COMMA COLONCOLON COLON BAR AS ]
##
## The known suffix of the stack is as follows:
## val_ident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FUN TILDE WITH
##
## Concrete syntax: fun ~ with
##
## Ends in an error in state: 852.
##
## labeled_simple_pattern -> TILDE . LPAREN label_let_pattern RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
## labeled_simple_pattern -> TILDE . LIDENT [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
##
## The known suffix of the stack is as follows:
## TILDE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FUN TILDE LPAREN WITH
##
## Concrete syntax: fun ~ ( with
##
## Ends in an error in state: 853.
##
## labeled_simple_pattern -> TILDE LPAREN . label_let_pattern RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
##
## The known suffix of the stack is as follows:
## TILDE LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FUN QUESTION LPAREN LIDENT WITH
##
## Concrete syntax: fun ? ( lident with
##
## Ends in an error in state: 854.
##
## label_let_pattern -> LIDENT . [ RPAREN EQUAL ]
## label_let_pattern -> LIDENT . COLON core_type [ RPAREN EQUAL ]
##
## The known suffix of the stack is as follows:
## LIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FUN QUESTION LPAREN LIDENT COLON WITH
##
## Concrete syntax: fun ? ( lident : with
##
## Ends in an error in state: 855.
##
## label_let_pattern -> LIDENT COLON . core_type [ RPAREN EQUAL ]
##
## The known suffix of the stack is as follows:
## LIDENT COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FUN QUESTION LPAREN LIDENT COLON QUOTED_STRING_EXPR WITH
##
## Concrete syntax: fun ? ( lident : {%hello|world|} with
##
## Ends in an error in state: 856.
##
## core_type -> core_type . attribute [ RPAREN LBRACKETAT EQUAL ]
## label_let_pattern -> LIDENT COLON core_type . [ RPAREN EQUAL ]
##
## The known suffix of the stack is as follows:
## LIDENT COLON core_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 358, spurious reduction of production tuple_type -> atomic_type
## In state 344, spurious reduction of production function_type -> tuple_type
## In state 374, spurious reduction of production alias_type -> function_type
## In state 384, spurious reduction of production core_type -> alias_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FUN TILDE LPAREN LIDENT EQUAL
##
## Concrete syntax: fun ~ ( lident =
##
## Ends in an error in state: 857.
##
## labeled_simple_pattern -> TILDE LPAREN label_let_pattern . RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
##
## The known suffix of the stack is as follows:
## TILDE LPAREN label_let_pattern
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 854, spurious reduction of production label_let_pattern -> LIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FUN QUESTION WITH
##
## Concrete syntax: fun ? with
##
## Ends in an error in state: 860.
##
## labeled_simple_pattern -> QUESTION . LPAREN label_let_pattern option(preceded(EQUAL,seq_expr)) RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
## labeled_simple_pattern -> QUESTION . LIDENT [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
##
## The known suffix of the stack is as follows:
## QUESTION
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FUN QUESTION LPAREN WITH
##
## Concrete syntax: fun ? ( with
##
## Ends in an error in state: 861.
##
## labeled_simple_pattern -> QUESTION LPAREN . label_let_pattern option(preceded(EQUAL,seq_expr)) RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
##
## The known suffix of the stack is as follows:
## QUESTION LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FUN OPTLABEL LPAREN FALSE EQUAL WITH
##
## Concrete syntax: fun ?label: ( false = with
##
## Ends in an error in state: 863.
##
## option(preceded(EQUAL,seq_expr)) -> EQUAL . seq_expr [ RPAREN ]
##
## The known suffix of the stack is as follows:
## EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKETBAR WITH
##
## Concrete syntax: [| with
##
## Ends in an error in state: 864.
##
## simple_expr -> LBRACKETBAR . separated_or_terminated_nonempty_list(SEMI,expr) BARRBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> LBRACKETBAR . separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> LBRACKETBAR . BARRBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LBRACKETBAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET LET WITH
##
## Concrete syntax: [ let with
##
## Ends in an error in state: 865.
##
## expr -> LET . MODULE ext list(attribute) module_name module_binding_body IN seq_expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> LET . EXCEPTION ext list(attribute) constr_ident generalized_constructor_arguments list(attribute) IN seq_expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> LET . OPEN ext list(attribute) module_expr IN seq_expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> LET . OPEN BANG ext list(attribute) module_expr IN seq_expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## let_bindings(ext) -> LET . ext list(attribute) rec_flag let_binding_body list(post_item_attribute) [ IN AND ]
##
## The known suffix of the stack is as follows:
## LET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET LET OPEN WITH
##
## Concrete syntax: [ let open with
##
## Ends in an error in state: 866.
##
## expr -> LET OPEN . ext list(attribute) module_expr IN seq_expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> LET OPEN . BANG ext list(attribute) module_expr IN seq_expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LET OPEN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET LET OPEN BANG WITH
##
## Concrete syntax: [ let open ! with
##
## Ends in an error in state: 867.
##
## expr -> LET OPEN BANG . ext list(attribute) module_expr IN seq_expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LET OPEN BANG
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET LET OPEN BANG PERCENT AND WHILE
##
## Concrete syntax: [ let open ! % and while
##
## Ends in an error in state: 868.
##
## expr -> LET OPEN BANG ext . list(attribute) module_expr IN seq_expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LET OPEN BANG ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET LET OPEN BANG LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: [ let open ! [@ and ] while
##
## Ends in an error in state: 869.
##
## expr -> LET OPEN BANG ext list(attribute) . module_expr IN seq_expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LET OPEN BANG ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET LET OPEN BANG QUOTED_STRING_EXPR WITH
##
## Concrete syntax: [ let open ! {%hello|world|} with
##
## Ends in an error in state: 870.
##
## expr -> LET OPEN BANG ext list(attribute) module_expr . IN seq_expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## module_expr -> module_expr . attribute [ LPAREN LBRACKETAT IN ]
## module_expr -> module_expr . paren_module_expr [ LPAREN LBRACKETAT IN ]
## module_expr -> module_expr . LPAREN RPAREN [ LPAREN LBRACKETAT IN ]
##
## The known suffix of the stack is as follows:
## LET OPEN BANG ext list(attribute) module_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET LET OPEN BANG QUOTED_STRING_EXPR IN WITH
##
## Concrete syntax: [ let open ! {%hello|world|} in with
##
## Ends in an error in state: 871.
##
## expr -> LET OPEN BANG ext list(attribute) module_expr IN . seq_expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LET OPEN BANG ext list(attribute) module_expr IN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET LBRACKET WITH
##
## Concrete syntax: [ [ with
##
## Ends in an error in state: 872.
##
## constr_extra_nonprefix_ident -> LBRACKET . RBRACKET [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> LBRACKET . separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> LBRACKET . separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET LBRACELESS WITH
##
## Concrete syntax: [ {< with
##
## Ends in an error in state: 873.
##
## simple_expr -> LBRACELESS . separated_or_terminated_nonempty_list(SEMI,object_expr_field) GREATERRBRACE [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> LBRACELESS . separated_or_terminated_nonempty_list(SEMI,object_expr_field) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> LBRACELESS . GREATERRBRACE [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LBRACELESS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACELESS LIDENT WITH
##
## Concrete syntax: {< lident with
##
## Ends in an error in state: 874.
##
## separated_or_terminated_nonempty_list(SEMI,object_expr_field) -> LIDENT . option(preceded(EQUAL,expr)) [ error GREATERRBRACE ]
## separated_or_terminated_nonempty_list(SEMI,object_expr_field) -> LIDENT . option(preceded(EQUAL,expr)) SEMI [ error GREATERRBRACE ]
## separated_or_terminated_nonempty_list(SEMI,object_expr_field) -> LIDENT . option(preceded(EQUAL,expr)) SEMI separated_or_terminated_nonempty_list(SEMI,object_expr_field) [ error GREATERRBRACE ]
##
## The known suffix of the stack is as follows:
## LIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACELESS LIDENT EQUAL WITH
##
## Concrete syntax: {< lident = with
##
## Ends in an error in state: 875.
##
## option(preceded(EQUAL,expr)) -> EQUAL . expr [ error SEMI RBRACE GREATERRBRACE ]
##
## The known suffix of the stack is as follows:
## EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET LBRACE WITH
##
## Concrete syntax: [ { with
##
## Ends in an error in state: 876.
##
## simple_expr -> LBRACE . record_expr_content RBRACE [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> LBRACE . record_expr_content error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LBRACE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACE LIDENT WHILE
##
## Concrete syntax: { lident while
##
## Ends in an error in state: 877.
##
## mk_longident(mod_longident,LIDENT) -> LIDENT . [ error SEMI RBRACE EQUAL COLONGREATER COLON ]
## val_ident -> LIDENT . [ WITH HASHOP HASH DOTOP DOT ]
##
## The known suffix of the stack is as follows:
## LIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET WITH
##
## Concrete syntax: [ with
##
## Ends in an error in state: 878.
##
## constr_extra_nonprefix_ident -> LBRACKET . RBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> LBRACKET . separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> LBRACKET . separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET LAZY WITH
##
## Concrete syntax: [ lazy with
##
## Ends in an error in state: 879.
##
## expr -> LAZY . ext list(attribute) simple_expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LAZY
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET LAZY PERCENT AND WHILE
##
## Concrete syntax: [ lazy % and while
##
## Ends in an error in state: 880.
##
## expr -> LAZY ext . list(attribute) simple_expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LAZY ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET LAZY LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: [ lazy [@ and ] while
##
## Ends in an error in state: 881.
##
## expr -> LAZY ext list(attribute) . simple_expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LAZY ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET BEGIN WITH
##
## Concrete syntax: [ begin with
##
## Ends in an error in state: 882.
##
## simple_expr -> BEGIN . ext list(attribute) seq_expr END [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> BEGIN . ext list(attribute) END [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> BEGIN . ext list(attribute) seq_expr error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## BEGIN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET BEGIN PERCENT AND VIRTUAL
##
## Concrete syntax: [ begin % and virtual
##
## Ends in an error in state: 883.
##
## simple_expr -> BEGIN ext . list(attribute) seq_expr END [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> BEGIN ext . list(attribute) END [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> BEGIN ext . list(attribute) seq_expr error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## BEGIN ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET BEGIN LBRACKETAT AND RBRACKET VIRTUAL
##
## Concrete syntax: [ begin [@ and ] virtual
##
## Ends in an error in state: 884.
##
## simple_expr -> BEGIN ext list(attribute) . seq_expr END [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> BEGIN ext list(attribute) . END [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> BEGIN ext list(attribute) . seq_expr error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## BEGIN ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET IF WITH
##
## Concrete syntax: [ if with
##
## Ends in an error in state: 885.
##
## expr -> IF . ext list(attribute) seq_expr THEN expr ELSE expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> IF . ext list(attribute) seq_expr THEN expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## IF
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET IF PERCENT AND VIRTUAL
##
## Concrete syntax: [ if % and virtual
##
## Ends in an error in state: 886.
##
## expr -> IF ext . list(attribute) seq_expr THEN expr ELSE expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> IF ext . list(attribute) seq_expr THEN expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## IF ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET IF LBRACKETAT AND RBRACKET VIRTUAL
##
## Concrete syntax: [ if [@ and ] virtual
##
## Ends in an error in state: 887.
##
## expr -> IF ext list(attribute) . seq_expr THEN expr ELSE expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> IF ext list(attribute) . seq_expr THEN expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## IF ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACELESS WITH
##
## Concrete syntax: {< with
##
## Ends in an error in state: 888.
##
## simple_expr -> LBRACELESS . separated_or_terminated_nonempty_list(SEMI,object_expr_field) GREATERRBRACE [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> LBRACELESS . separated_or_terminated_nonempty_list(SEMI,object_expr_field) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> LBRACELESS . GREATERRBRACE [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LBRACELESS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACE WITH
##
## Concrete syntax: { with
##
## Ends in an error in state: 893.
##
## simple_expr -> LBRACE . record_expr_content RBRACE [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> LBRACE . record_expr_content error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LBRACE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: BEGIN WITH
##
## Concrete syntax: begin with
##
## Ends in an error in state: 894.
##
## simple_expr -> BEGIN . ext list(attribute) seq_expr END [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> BEGIN . ext list(attribute) END [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> BEGIN . ext list(attribute) seq_expr error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## BEGIN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: BEGIN PERCENT AND VIRTUAL
##
## Concrete syntax: begin % and virtual
##
## Ends in an error in state: 895.
##
## simple_expr -> BEGIN ext . list(attribute) seq_expr END [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> BEGIN ext . list(attribute) END [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> BEGIN ext . list(attribute) seq_expr error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## BEGIN ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: BEGIN LBRACKETAT AND RBRACKET VIRTUAL
##
## Concrete syntax: begin [@ and ] virtual
##
## Ends in an error in state: 896.
##
## simple_expr -> BEGIN ext list(attribute) . seq_expr END [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> BEGIN ext list(attribute) . END [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> BEGIN ext list(attribute) . seq_expr error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## BEGIN ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FUNCTION WITH
##
## Concrete syntax: [ function with
##
## Ends in an error in state: 897.
##
## expr -> FUNCTION . ext list(attribute) reversed_preceded_or_separated_nonempty_llist(BAR,match_case) [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## FUNCTION
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FUNCTION PERCENT AND WHILE
##
## Concrete syntax: [ function % and while
##
## Ends in an error in state: 898.
##
## expr -> FUNCTION ext . list(attribute) reversed_preceded_or_separated_nonempty_llist(BAR,match_case) [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## FUNCTION ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FUNCTION LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: [ function [@ and ] while
##
## Ends in an error in state: 899.
##
## expr -> FUNCTION ext list(attribute) . reversed_preceded_or_separated_nonempty_llist(BAR,match_case) [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## FUNCTION ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: EXCEPTION WITH
##
## Concrete syntax: exception with
##
## Ends in an error in state: 900.
##
## pattern -> EXCEPTION . ext list(attribute) pattern [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
##
## The known suffix of the stack is as follows:
## EXCEPTION
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: EXCEPTION PERCENT AND WHILE
##
## Concrete syntax: exception % and while
##
## Ends in an error in state: 901.
##
## pattern -> EXCEPTION ext . list(attribute) pattern [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
##
## The known suffix of the stack is as follows:
## EXCEPTION ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: EXCEPTION LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: exception [@ and ] while
##
## Ends in an error in state: 902.
##
## pattern -> EXCEPTION ext list(attribute) . pattern [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
##
## The known suffix of the stack is as follows:
## EXCEPTION ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: FALSE COMMA FALSE COMMA WITH
##
## Concrete syntax: false , false , with
##
## Ends in an error in state: 906.
##
## pattern_comma_list(pattern) -> pattern_comma_list(pattern) COMMA . pattern [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
##
## The known suffix of the stack is as follows:
## pattern_comma_list(pattern) COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: FALSE COMMA FALSE COMMA QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: false , false , {%hello|world|} while
##
## Ends in an error in state: 907.
##
## pattern -> pattern . COLONCOLON pattern [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
## pattern -> pattern . attribute [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
## pattern -> pattern . AS val_ident [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
## pattern -> pattern . AS error [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
## pattern -> pattern . COLONCOLON error [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
## pattern -> pattern . BAR pattern [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
## pattern -> pattern . BAR error [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
## pattern_comma_list(pattern) -> pattern_comma_list(pattern) COMMA pattern . [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
## pattern_comma_list(pattern) -> pattern . COMMA pattern [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
## pattern_comma_list(pattern) -> pattern . COMMA error [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
##
## The known suffix of the stack is as follows:
## pattern_comma_list(pattern) COMMA pattern
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: FALSE COLONCOLON WITH
##
## Concrete syntax: false :: with
##
## Ends in an error in state: 908.
##
## pattern -> pattern COLONCOLON . pattern [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
## pattern -> pattern COLONCOLON . error [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
##
## The known suffix of the stack is as follows:
## pattern COLONCOLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: FALSE COLONCOLON QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: false :: {%hello|world|} while
##
## Ends in an error in state: 910.
##
## pattern -> pattern . COLONCOLON pattern [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
## pattern -> pattern COLONCOLON pattern . [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
## pattern -> pattern . attribute [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
## pattern -> pattern . AS val_ident [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
## pattern -> pattern . AS error [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
## pattern -> pattern . COLONCOLON error [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
## pattern -> pattern . BAR pattern [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
## pattern -> pattern . BAR error [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
## pattern_comma_list(pattern) -> pattern . COMMA pattern [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
## pattern_comma_list(pattern) -> pattern . COMMA error [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
##
## The known suffix of the stack is as follows:
## pattern COLONCOLON pattern
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: BACKQUOTE LIDENT WITH
##
## Concrete syntax: ` lident with
##
## Ends in an error in state: 912.
##
## pattern_gen -> name_tag . pattern [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
## simple_pattern_not_ident -> name_tag . [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
##
## The known suffix of the stack is as follows:
## name_tag
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: FALSE TILDE
##
## Concrete syntax: false ~
##
## Ends in an error in state: 914.
##
## pattern_gen -> constr_longident . pattern [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
## pattern_gen -> constr_longident . LPAREN TYPE nonempty_list(mkrhs(LIDENT)) RPAREN simple_pattern [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
## simple_pattern_not_ident -> constr_longident . [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
##
## The known suffix of the stack is as follows:
## constr_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: FALSE LPAREN WITH
##
## Concrete syntax: false ( with
##
## Ends in an error in state: 915.
##
## constr_extra_nonprefix_ident -> LPAREN . RPAREN [ WHEN UNDERSCORE UIDENT TRUE STRING RPAREN RBRACKET QUOTED_STRING_EXPR PLUS MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LAZY INT HASH FLOAT FALSE EXCEPTION EQUAL EOF COMMA COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
## constr_longident -> LPAREN . COLONCOLON RPAREN [ WHEN UNDERSCORE UIDENT TRUE STRING RPAREN RBRACKET QUOTED_STRING_EXPR PLUS MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LAZY INT HASH FLOAT FALSE EXCEPTION EQUAL EOF COMMA COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
## pattern_gen -> constr_longident LPAREN . TYPE nonempty_list(mkrhs(LIDENT)) RPAREN simple_pattern [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
## simple_pattern_not_ident -> LPAREN . pattern RPAREN [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
## simple_pattern_not_ident -> LPAREN . MODULE ext list(attribute) module_name RPAREN [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
## simple_pattern_not_ident -> LPAREN . MODULE ext list(attribute) module_name COLON module_type RPAREN [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
## simple_pattern_not_ident -> LPAREN . pattern error [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
## simple_pattern_not_ident -> LPAREN . pattern COLON core_type RPAREN [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
## simple_pattern_not_ident -> LPAREN . pattern COLON core_type error [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
## simple_pattern_not_ident -> LPAREN . pattern COLON error [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
## simple_pattern_not_ident -> LPAREN . MODULE ext list(attribute) module_name COLON module_type error [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
## val_extra_ident -> LPAREN . operator RPAREN [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
## val_extra_ident -> LPAREN . operator error [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
## val_extra_ident -> LPAREN . error [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
## val_extra_ident -> LPAREN . MODULE error [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
##
## The known suffix of the stack is as follows:
## constr_longident LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: FALSE LPAREN TYPE WITH
##
## Concrete syntax: false ( type with
##
## Ends in an error in state: 916.
##
## pattern_gen -> constr_longident LPAREN TYPE . nonempty_list(mkrhs(LIDENT)) RPAREN simple_pattern [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
##
## The known suffix of the stack is as follows:
## constr_longident LPAREN TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: FALSE LPAREN TYPE LIDENT DOT
##
## Concrete syntax: false ( type lident .
##
## Ends in an error in state: 917.
##
## pattern_gen -> constr_longident LPAREN TYPE nonempty_list(mkrhs(LIDENT)) . RPAREN simple_pattern [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
##
## The known suffix of the stack is as follows:
## constr_longident LPAREN TYPE nonempty_list(mkrhs(LIDENT))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 750, spurious reduction of production nonempty_list(mkrhs(LIDENT)) -> LIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: FALSE LPAREN TYPE LIDENT RPAREN WITH
##
## Concrete syntax: false ( type lident ) with
##
## Ends in an error in state: 918.
##
## pattern_gen -> constr_longident LPAREN TYPE nonempty_list(mkrhs(LIDENT)) RPAREN . simple_pattern [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
##
## The known suffix of the stack is as follows:
## constr_longident LPAREN TYPE nonempty_list(mkrhs(LIDENT)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LPAREN COLONCOLON WITH
##
## Concrete syntax: ( :: with
##
## Ends in an error in state: 920.
##
## constr_longident -> LPAREN COLONCOLON . RPAREN [ WITH WHEN VAL UNDERSCORE UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE AS ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LPAREN COLONCOLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LPAREN QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: ( {%hello|world|} while
##
## Ends in an error in state: 922.
##
## pattern -> pattern . COLONCOLON pattern [ error RPAREN LBRACKETAT COMMA COLONCOLON COLON BAR AS ]
## pattern -> pattern . attribute [ error RPAREN LBRACKETAT COMMA COLONCOLON COLON BAR AS ]
## pattern -> pattern . AS val_ident [ error RPAREN LBRACKETAT COMMA COLONCOLON COLON BAR AS ]
## pattern -> pattern . AS error [ error RPAREN LBRACKETAT COMMA COLONCOLON COLON BAR AS ]
## pattern -> pattern . COLONCOLON error [ error RPAREN LBRACKETAT COMMA COLONCOLON COLON BAR AS ]
## pattern -> pattern . BAR pattern [ error RPAREN LBRACKETAT COMMA COLONCOLON COLON BAR AS ]
## pattern -> pattern . BAR error [ error RPAREN LBRACKETAT COMMA COLONCOLON COLON BAR AS ]
## pattern_comma_list(pattern) -> pattern . COMMA pattern [ error RPAREN LBRACKETAT COMMA COLONCOLON COLON BAR AS ]
## pattern_comma_list(pattern) -> pattern . COMMA error [ error RPAREN LBRACKETAT COMMA COLONCOLON COLON BAR AS ]
## simple_pattern_not_ident -> LPAREN pattern . RPAREN [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
## simple_pattern_not_ident -> LPAREN pattern . error [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
## simple_pattern_not_ident -> LPAREN pattern . COLON core_type RPAREN [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
## simple_pattern_not_ident -> LPAREN pattern . COLON core_type error [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
## simple_pattern_not_ident -> LPAREN pattern . COLON error [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
##
## The known suffix of the stack is as follows:
## LPAREN pattern
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LPAREN FALSE COLON WITH
##
## Concrete syntax: ( false : with
##
## Ends in an error in state: 925.
##
## simple_pattern_not_ident -> LPAREN pattern COLON . core_type RPAREN [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
## simple_pattern_not_ident -> LPAREN pattern COLON . core_type error [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
## simple_pattern_not_ident -> LPAREN pattern COLON . error [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
##
## The known suffix of the stack is as follows:
## LPAREN pattern COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LPAREN FALSE COLON QUOTED_STRING_EXPR WITH
##
## Concrete syntax: ( false : {%hello|world|} with
##
## Ends in an error in state: 927.
##
## core_type -> core_type . attribute [ error RPAREN LBRACKETAT ]
## simple_pattern_not_ident -> LPAREN pattern COLON core_type . RPAREN [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
## simple_pattern_not_ident -> LPAREN pattern COLON core_type . error [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
##
## The known suffix of the stack is as follows:
## LPAREN pattern COLON core_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 568, spurious reduction of production tuple_type -> atomic_type
## In state 555, spurious reduction of production function_type -> tuple_type
## In state 572, spurious reduction of production alias_type -> function_type
## In state 585, spurious reduction of production core_type -> alias_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FUNCTION BAR WITH
##
## Concrete syntax: [ function | with
##
## Ends in an error in state: 932.
##
## reversed_preceded_or_separated_nonempty_llist(BAR,match_case) -> BAR . match_case [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## BAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FUNCTION QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: [ function {%hello|world|} while
##
## Ends in an error in state: 933.
##
## match_case -> pattern . MINUSGREATER seq_expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## match_case -> pattern . WHEN seq_expr MINUSGREATER seq_expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## match_case -> pattern . MINUSGREATER DOT [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## pattern -> pattern . COLONCOLON pattern [ WHEN MINUSGREATER LBRACKETAT COMMA COLONCOLON BAR AS ]
## pattern -> pattern . attribute [ WHEN MINUSGREATER LBRACKETAT COMMA COLONCOLON BAR AS ]
## pattern -> pattern . AS val_ident [ WHEN MINUSGREATER LBRACKETAT COMMA COLONCOLON BAR AS ]
## pattern -> pattern . AS error [ WHEN MINUSGREATER LBRACKETAT COMMA COLONCOLON BAR AS ]
## pattern -> pattern . COLONCOLON error [ WHEN MINUSGREATER LBRACKETAT COMMA COLONCOLON BAR AS ]
## pattern -> pattern . BAR pattern [ WHEN MINUSGREATER LBRACKETAT COMMA COLONCOLON BAR AS ]
## pattern -> pattern . BAR error [ WHEN MINUSGREATER LBRACKETAT COMMA COLONCOLON BAR AS ]
## pattern_comma_list(pattern) -> pattern . COMMA pattern [ WHEN MINUSGREATER LBRACKETAT COMMA COLONCOLON BAR AS ]
## pattern_comma_list(pattern) -> pattern . COMMA error [ WHEN MINUSGREATER LBRACKETAT COMMA COLONCOLON BAR AS ]
##
## The known suffix of the stack is as follows:
## pattern
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FUNCTION FALSE WHEN WITH
##
## Concrete syntax: [ function false when with
##
## Ends in an error in state: 934.
##
## match_case -> pattern WHEN . seq_expr MINUSGREATER seq_expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## pattern WHEN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LAZY WITH
##
## Concrete syntax: lazy with
##
## Ends in an error in state: 935.
##
## expr -> LAZY . ext list(attribute) simple_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LAZY
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LAZY PERCENT AND WHILE
##
## Concrete syntax: lazy % and while
##
## Ends in an error in state: 936.
##
## expr -> LAZY ext . list(attribute) simple_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LAZY ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LAZY LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: lazy [@ and ] while
##
## Ends in an error in state: 937.
##
## expr -> LAZY ext list(attribute) . simple_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LAZY ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: BANG WITH
##
## Concrete syntax: ! with
##
## Ends in an error in state: 938.
##
## simple_expr -> BANG . simple_expr [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## BANG
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT WHILE
##
## Concrete syntax: UIdent while
##
## Ends in an error in state: 943.
##
## constr_longident -> mod_longident . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## constr_longident -> mod_longident . DOT LPAREN COLONCOLON RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## mk_longident(mod_longident,UIDENT) -> mod_longident . DOT UIDENT [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## mk_longident(mod_longident,val_ident) -> mod_longident . DOT val_ident [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident . DOT LPAREN seq_expr RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident . DOT LBRACELESS separated_or_terminated_nonempty_list(SEMI,object_expr_field) GREATERRBRACE [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident . DOT LBRACELESS separated_or_terminated_nonempty_list(SEMI,object_expr_field) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident . DOT LPAREN RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident . DOT LPAREN seq_expr error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident . DOT LBRACE record_expr_content RBRACE [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident . DOT LBRACE record_expr_content error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident . DOT LBRACKETBAR separated_or_terminated_nonempty_list(SEMI,expr) BARRBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident . DOT LBRACKETBAR BARRBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident . DOT LBRACKETBAR separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident . DOT LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident . DOT LBRACKET RBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident . DOT LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident . DOT LPAREN MODULE ext list(attribute) module_expr COLON module_type RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident . DOT LPAREN MODULE ext list(attribute) module_expr COLON error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## mod_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT DOT WITH
##
## Concrete syntax: UIdent . with
##
## Ends in an error in state: 944.
##
## constr_longident -> mod_longident DOT . LPAREN COLONCOLON RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## mk_longident(mod_longident,UIDENT) -> mod_longident DOT . UIDENT [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## mk_longident(mod_longident,val_ident) -> mod_longident DOT . val_ident [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident DOT . LPAREN seq_expr RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident DOT . LBRACELESS separated_or_terminated_nonempty_list(SEMI,object_expr_field) GREATERRBRACE [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident DOT . LBRACELESS separated_or_terminated_nonempty_list(SEMI,object_expr_field) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident DOT . LPAREN RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident DOT . LPAREN seq_expr error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident DOT . LBRACE record_expr_content RBRACE [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident DOT . LBRACE record_expr_content error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident DOT . LBRACKETBAR separated_or_terminated_nonempty_list(SEMI,expr) BARRBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident DOT . LBRACKETBAR BARRBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident DOT . LBRACKETBAR separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident DOT . LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident DOT . LBRACKET RBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident DOT . LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident DOT . LPAREN MODULE ext list(attribute) module_expr COLON module_type RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident DOT . LPAREN MODULE ext list(attribute) module_expr COLON error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## mod_longident DOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT DOT LPAREN WITH
##
## Concrete syntax: UIdent . ( with
##
## Ends in an error in state: 945.
##
## constr_longident -> mod_longident DOT LPAREN . COLONCOLON RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident DOT LPAREN . seq_expr RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident DOT LPAREN . RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident DOT LPAREN . seq_expr error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident DOT LPAREN . MODULE ext list(attribute) module_expr COLON module_type RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident DOT LPAREN . MODULE ext list(attribute) module_expr COLON error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## val_extra_ident -> LPAREN . operator RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## val_extra_ident -> LPAREN . operator error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## val_extra_ident -> LPAREN . error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## val_extra_ident -> LPAREN . MODULE error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## mod_longident DOT LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LPAREN PLUSDOT WITH
##
## Concrete syntax: ( +. with
##
## Ends in an error in state: 947.
##
## additive -> PLUSDOT . [ WHILE UNDERSCORE UIDENT TRY TRUE STRING QUOTED_STRING_EXPR PREFIXOP PLUSDOT PLUS OBJECT NEW MINUSDOT MINUS MATCH LPAREN LIDENT LETOP LET LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACELESS LBRACE LAZY INT IF FUNCTION FUN FOR FLOAT FALSE CHAR BEGIN BANG BACKQUOTE ASSERT ]
## operator -> PLUSDOT . [ error RPAREN ]
##
## The known suffix of the stack is as follows:
## PLUSDOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LPAREN PLUS WITH
##
## Concrete syntax: ( + with
##
## Ends in an error in state: 948.
##
## additive -> PLUS . [ WHILE UNDERSCORE UIDENT TRY TRUE STRING QUOTED_STRING_EXPR PREFIXOP PLUSDOT PLUS OBJECT NEW MINUSDOT MINUS MATCH LPAREN LIDENT LETOP LET LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACELESS LBRACE LAZY INT IF FUNCTION FUN FOR FLOAT FALSE CHAR BEGIN BANG BACKQUOTE ASSERT ]
## operator -> PLUS . [ error RPAREN ]
##
## The known suffix of the stack is as follows:
## PLUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT DOT LPAREN MODULE WITH
##
## Concrete syntax: UIdent . ( module with
##
## Ends in an error in state: 949.
##
## simple_expr -> mod_longident DOT LPAREN MODULE . ext list(attribute) module_expr COLON module_type RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident DOT LPAREN MODULE . ext list(attribute) module_expr COLON error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## val_extra_ident -> LPAREN MODULE . error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## mod_longident DOT LPAREN MODULE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT DOT LPAREN MODULE PERCENT AND WHILE
##
## Concrete syntax: UIdent . ( module % and while
##
## Ends in an error in state: 950.
##
## simple_expr -> mod_longident DOT LPAREN MODULE ext . list(attribute) module_expr COLON module_type RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident DOT LPAREN MODULE ext . list(attribute) module_expr COLON error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## mod_longident DOT LPAREN MODULE ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT DOT LPAREN MODULE LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: UIdent . ( module [@ and ] while
##
## Ends in an error in state: 951.
##
## simple_expr -> mod_longident DOT LPAREN MODULE ext list(attribute) . module_expr COLON module_type RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident DOT LPAREN MODULE ext list(attribute) . module_expr COLON error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## mod_longident DOT LPAREN MODULE ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT DOT LPAREN MODULE QUOTED_STRING_EXPR WITH
##
## Concrete syntax: UIdent . ( module {%hello|world|} with
##
## Ends in an error in state: 952.
##
## module_expr -> module_expr . attribute [ LPAREN LBRACKETAT COLON ]
## module_expr -> module_expr . paren_module_expr [ LPAREN LBRACKETAT COLON ]
## module_expr -> module_expr . LPAREN RPAREN [ LPAREN LBRACKETAT COLON ]
## simple_expr -> mod_longident DOT LPAREN MODULE ext list(attribute) module_expr . COLON module_type RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident DOT LPAREN MODULE ext list(attribute) module_expr . COLON error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## mod_longident DOT LPAREN MODULE ext list(attribute) module_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT DOT LPAREN MODULE QUOTED_STRING_EXPR COLON WITH
##
## Concrete syntax: UIdent . ( module {%hello|world|} : with
##
## Ends in an error in state: 953.
##
## simple_expr -> mod_longident DOT LPAREN MODULE ext list(attribute) module_expr COLON . module_type RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident DOT LPAREN MODULE ext list(attribute) module_expr COLON . error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## mod_longident DOT LPAREN MODULE ext list(attribute) module_expr COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT DOT LPAREN MODULE QUOTED_STRING_EXPR COLON QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: UIdent . ( module {%hello|world|} : {%hello|world|} while
##
## Ends in an error in state: 955.
##
## module_type -> module_type . attribute [ WITH RPAREN MINUSGREATER LBRACKETAT ]
## module_type -> module_type . MINUSGREATER module_type [ WITH RPAREN MINUSGREATER LBRACKETAT ]
## module_type -> module_type . WITH reversed_separated_nonempty_llist(AND,with_constraint) [ WITH RPAREN MINUSGREATER LBRACKETAT ]
## simple_expr -> mod_longident DOT LPAREN MODULE ext list(attribute) module_expr COLON module_type . RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## mod_longident DOT LPAREN MODULE ext list(attribute) module_expr COLON module_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE UIDENT WHILE
##
## Concrete syntax: include UIdent while
##
## Ends in an error in state: 959.
##
## mk_longident(mod_longident,UIDENT) -> mod_longident . DOT UIDENT [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF DOT COLONGREATER COLON CLASS AND ]
## module_expr -> mod_longident . [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
##
## The known suffix of the stack is as follows:
## mod_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LPAREN MINUSDOT WITH
##
## Concrete syntax: ( -. with
##
## Ends in an error in state: 961.
##
## operator -> MINUSDOT . [ error RPAREN ]
## subtractive -> MINUSDOT . [ WHILE UNDERSCORE UIDENT TRY TRUE STRING QUOTED_STRING_EXPR PREFIXOP PLUSDOT PLUS OBJECT NEW MINUSDOT MINUS MATCH LPAREN LIDENT LETOP LET LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACELESS LBRACE LAZY INT IF FUNCTION FUN FOR FLOAT FALSE CHAR BEGIN BANG BACKQUOTE ASSERT ]
##
## The known suffix of the stack is as follows:
## MINUSDOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LPAREN MINUS WITH
##
## Concrete syntax: ( - with
##
## Ends in an error in state: 962.
##
## operator -> MINUS . [ error RPAREN ]
## subtractive -> MINUS . [ WHILE UNDERSCORE UIDENT TRY TRUE STRING QUOTED_STRING_EXPR PREFIXOP PLUSDOT PLUS OBJECT NEW MINUSDOT MINUS MATCH LPAREN LIDENT LETOP LET LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACELESS LBRACE LAZY INT IF FUNCTION FUN FOR FLOAT FALSE CHAR BEGIN BANG BACKQUOTE ASSERT ]
##
## The known suffix of the stack is as follows:
## MINUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LPAREN LETOP WITH
##
## Concrete syntax: ( let* with
##
## Ends in an error in state: 963.
##
## expr -> LETOP . letop_bindings IN seq_expr [ error STAR SEMI RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
## operator -> LETOP . [ error RPAREN ]
##
## The known suffix of the stack is as follows:
## LETOP
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LETOP QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: let* {%hello|world|} while
##
## Ends in an error in state: 964.
##
## letop_binding_body -> simple_pattern . COLON core_type EQUAL seq_expr [ IN ANDOP ]
## pattern_gen -> simple_pattern . [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
##
## The known suffix of the stack is as follows:
## simple_pattern
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LETOP LIDENT COLON WITH
##
## Concrete syntax: let* lident : with
##
## Ends in an error in state: 965.
##
## letop_binding_body -> simple_pattern COLON . core_type EQUAL seq_expr [ IN ANDOP ]
##
## The known suffix of the stack is as follows:
## simple_pattern COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LETOP LIDENT COLON QUOTED_STRING_EXPR WITH
##
## Concrete syntax: let* lident : {%hello|world|} with
##
## Ends in an error in state: 966.
##
## core_type -> core_type . attribute [ LBRACKETAT EQUAL ]
## letop_binding_body -> simple_pattern COLON core_type . EQUAL seq_expr [ IN ANDOP ]
##
## The known suffix of the stack is as follows:
## simple_pattern COLON core_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 358, spurious reduction of production tuple_type -> atomic_type
## In state 344, spurious reduction of production function_type -> tuple_type
## In state 374, spurious reduction of production alias_type -> function_type
## In state 384, spurious reduction of production core_type -> alias_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LETOP LIDENT COLON QUOTED_STRING_EXPR EQUAL WITH
##
## Concrete syntax: let* lident : {%hello|world|} = with
##
## Ends in an error in state: 967.
##
## letop_binding_body -> simple_pattern COLON core_type EQUAL . seq_expr [ IN ANDOP ]
##
## The known suffix of the stack is as follows:
## simple_pattern COLON core_type EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: IF WITH
##
## Concrete syntax: if with
##
## Ends in an error in state: 968.
##
## expr -> IF . ext list(attribute) seq_expr THEN expr ELSE expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> IF . ext list(attribute) seq_expr THEN expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## IF
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: IF PERCENT AND VIRTUAL
##
## Concrete syntax: if % and virtual
##
## Ends in an error in state: 969.
##
## expr -> IF ext . list(attribute) seq_expr THEN expr ELSE expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> IF ext . list(attribute) seq_expr THEN expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## IF ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: IF LBRACKETAT AND RBRACKET VIRTUAL
##
## Concrete syntax: if [@ and ] virtual
##
## Ends in an error in state: 970.
##
## expr -> IF ext list(attribute) . seq_expr THEN expr ELSE expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> IF ext list(attribute) . seq_expr THEN expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## IF ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FUNCTION WITH
##
## Concrete syntax: function with
##
## Ends in an error in state: 971.
##
## expr -> FUNCTION . ext list(attribute) reversed_preceded_or_separated_nonempty_llist(BAR,match_case) [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## FUNCTION
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FUNCTION PERCENT AND WHILE
##
## Concrete syntax: function % and while
##
## Ends in an error in state: 972.
##
## expr -> FUNCTION ext . list(attribute) reversed_preceded_or_separated_nonempty_llist(BAR,match_case) [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## FUNCTION ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FUNCTION LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: function [@ and ] while
##
## Ends in an error in state: 973.
##
## expr -> FUNCTION ext list(attribute) . reversed_preceded_or_separated_nonempty_llist(BAR,match_case) [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## FUNCTION ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FUNCTION BAR WITH
##
## Concrete syntax: function | with
##
## Ends in an error in state: 974.
##
## reversed_preceded_or_separated_nonempty_llist(BAR,match_case) -> BAR . match_case [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## BAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FUNCTION QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: function {%hello|world|} while
##
## Ends in an error in state: 975.
##
## match_case -> pattern . MINUSGREATER seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## match_case -> pattern . WHEN seq_expr MINUSGREATER seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## match_case -> pattern . MINUSGREATER DOT [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## pattern -> pattern . COLONCOLON pattern [ WHEN MINUSGREATER LBRACKETAT COMMA COLONCOLON BAR AS ]
## pattern -> pattern . attribute [ WHEN MINUSGREATER LBRACKETAT COMMA COLONCOLON BAR AS ]
## pattern -> pattern . AS val_ident [ WHEN MINUSGREATER LBRACKETAT COMMA COLONCOLON BAR AS ]
## pattern -> pattern . AS error [ WHEN MINUSGREATER LBRACKETAT COMMA COLONCOLON BAR AS ]
## pattern -> pattern . COLONCOLON error [ WHEN MINUSGREATER LBRACKETAT COMMA COLONCOLON BAR AS ]
## pattern -> pattern . BAR pattern [ WHEN MINUSGREATER LBRACKETAT COMMA COLONCOLON BAR AS ]
## pattern -> pattern . BAR error [ WHEN MINUSGREATER LBRACKETAT COMMA COLONCOLON BAR AS ]
## pattern_comma_list(pattern) -> pattern . COMMA pattern [ WHEN MINUSGREATER LBRACKETAT COMMA COLONCOLON BAR AS ]
## pattern_comma_list(pattern) -> pattern . COMMA error [ WHEN MINUSGREATER LBRACKETAT COMMA COLONCOLON BAR AS ]
##
## The known suffix of the stack is as follows:
## pattern
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FUNCTION FALSE WHEN WITH
##
## Concrete syntax: function false when with
##
## Ends in an error in state: 976.
##
## match_case -> pattern WHEN . seq_expr MINUSGREATER seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## pattern WHEN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FUN WITH
##
## Concrete syntax: fun with
##
## Ends in an error in state: 977.
##
## expr -> FUN . ext list(attribute) labeled_simple_pattern fun_def [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> FUN . ext list(attribute) LPAREN TYPE nonempty_list(mkrhs(LIDENT)) RPAREN fun_def [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## FUN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FUN PERCENT AND WHILE
##
## Concrete syntax: fun % and while
##
## Ends in an error in state: 978.
##
## expr -> FUN ext . list(attribute) labeled_simple_pattern fun_def [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> FUN ext . list(attribute) LPAREN TYPE nonempty_list(mkrhs(LIDENT)) RPAREN fun_def [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## FUN ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FUN LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: fun [@ and ] while
##
## Ends in an error in state: 979.
##
## expr -> FUN ext list(attribute) . labeled_simple_pattern fun_def [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> FUN ext list(attribute) . LPAREN TYPE nonempty_list(mkrhs(LIDENT)) RPAREN fun_def [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## FUN ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FUN OPTLABEL WITH
##
## Concrete syntax: fun ?label: with
##
## Ends in an error in state: 980.
##
## labeled_simple_pattern -> OPTLABEL . LPAREN let_pattern option(preceded(EQUAL,seq_expr)) RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
## labeled_simple_pattern -> OPTLABEL . pattern_var [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
##
## The known suffix of the stack is as follows:
## OPTLABEL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FUN OPTLABEL LPAREN WITH
##
## Concrete syntax: fun ?label: ( with
##
## Ends in an error in state: 982.
##
## labeled_simple_pattern -> OPTLABEL LPAREN . let_pattern option(preceded(EQUAL,seq_expr)) RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
##
## The known suffix of the stack is as follows:
## OPTLABEL LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FUN OPTLABEL LPAREN QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: fun ?label: ( {%hello|world|} while
##
## Ends in an error in state: 983.
##
## let_pattern -> pattern . [ RPAREN EQUAL ]
## let_pattern -> pattern . COLON core_type [ RPAREN EQUAL ]
## pattern -> pattern . COLONCOLON pattern [ RPAREN LBRACKETAT EQUAL COMMA COLONCOLON COLON BAR AS ]
## pattern -> pattern . attribute [ RPAREN LBRACKETAT EQUAL COMMA COLONCOLON COLON BAR AS ]
## pattern -> pattern . AS val_ident [ RPAREN LBRACKETAT EQUAL COMMA COLONCOLON COLON BAR AS ]
## pattern -> pattern . AS error [ RPAREN LBRACKETAT EQUAL COMMA COLONCOLON COLON BAR AS ]
## pattern -> pattern . COLONCOLON error [ RPAREN LBRACKETAT EQUAL COMMA COLONCOLON COLON BAR AS ]
## pattern -> pattern . BAR pattern [ RPAREN LBRACKETAT EQUAL COMMA COLONCOLON COLON BAR AS ]
## pattern -> pattern . BAR error [ RPAREN LBRACKETAT EQUAL COMMA COLONCOLON COLON BAR AS ]
## pattern_comma_list(pattern) -> pattern . COMMA pattern [ RPAREN LBRACKETAT EQUAL COMMA COLONCOLON COLON BAR AS ]
## pattern_comma_list(pattern) -> pattern . COMMA error [ RPAREN LBRACKETAT EQUAL COMMA COLONCOLON COLON BAR AS ]
##
## The known suffix of the stack is as follows:
## pattern
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: FALSE COMMA WITH
##
## Concrete syntax: false , with
##
## Ends in an error in state: 984.
##
## pattern_comma_list(pattern) -> pattern COMMA . pattern [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
## pattern_comma_list(pattern) -> pattern COMMA . error [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
##
## The known suffix of the stack is as follows:
## pattern COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: FALSE COMMA QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: false , {%hello|world|} while
##
## Ends in an error in state: 986.
##
## pattern -> pattern . COLONCOLON pattern [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
## pattern -> pattern . attribute [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
## pattern -> pattern . AS val_ident [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
## pattern -> pattern . AS error [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
## pattern -> pattern . COLONCOLON error [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
## pattern -> pattern . BAR pattern [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
## pattern -> pattern . BAR error [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
## pattern_comma_list(pattern) -> pattern . COMMA pattern [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
## pattern_comma_list(pattern) -> pattern COMMA pattern . [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
## pattern_comma_list(pattern) -> pattern . COMMA error [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
##
## The known suffix of the stack is as follows:
## pattern COMMA pattern
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FUN OPTLABEL LPAREN FALSE COLON WITH
##
## Concrete syntax: fun ?label: ( false : with
##
## Ends in an error in state: 987.
##
## let_pattern -> pattern COLON . core_type [ RPAREN EQUAL ]
##
## The known suffix of the stack is as follows:
## pattern COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FUN OPTLABEL LPAREN FALSE COLON QUOTED_STRING_EXPR WITH
##
## Concrete syntax: fun ?label: ( false : {%hello|world|} with
##
## Ends in an error in state: 988.
##
## core_type -> core_type . attribute [ RPAREN LBRACKETAT EQUAL ]
## let_pattern -> pattern COLON core_type . [ RPAREN EQUAL ]
##
## The known suffix of the stack is as follows:
## pattern COLON core_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 358, spurious reduction of production tuple_type -> atomic_type
## In state 344, spurious reduction of production function_type -> tuple_type
## In state 374, spurious reduction of production alias_type -> function_type
## In state 384, spurious reduction of production core_type -> alias_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: FALSE BAR WITH
##
## Concrete syntax: false | with
##
## Ends in an error in state: 989.
##
## pattern -> pattern BAR . pattern [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
## pattern -> pattern BAR . error [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
##
## The known suffix of the stack is as follows:
## pattern BAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: FALSE BAR QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: false | {%hello|world|} while
##
## Ends in an error in state: 991.
##
## pattern -> pattern . COLONCOLON pattern [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
## pattern -> pattern . attribute [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
## pattern -> pattern . AS val_ident [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
## pattern -> pattern . AS error [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
## pattern -> pattern . COLONCOLON error [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
## pattern -> pattern . BAR pattern [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
## pattern -> pattern BAR pattern . [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
## pattern -> pattern . BAR error [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
## pattern_comma_list(pattern) -> pattern . COMMA pattern [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
## pattern_comma_list(pattern) -> pattern . COMMA error [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
##
## The known suffix of the stack is as follows:
## pattern BAR pattern
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: FALSE AS WITH
##
## Concrete syntax: false as with
##
## Ends in an error in state: 992.
##
## pattern -> pattern AS . val_ident [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
## pattern -> pattern AS . error [ WHEN RPAREN RBRACKET MINUSGREATER LBRACKETAT EQUAL EOF COMMA COLONCOLON COLON BAR AS ]
##
## The known suffix of the stack is as follows:
## pattern AS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FUN OPTLABEL LPAREN FALSE EQUAL UIDENT VAL
##
## Concrete syntax: fun ?label: ( false = UIdent val
##
## Ends in an error in state: 996.
##
## labeled_simple_pattern -> OPTLABEL LPAREN let_pattern option(preceded(EQUAL,seq_expr)) . RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
##
## The known suffix of the stack is as follows:
## OPTLABEL LPAREN let_pattern option(preceded(EQUAL,seq_expr))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 943, spurious reduction of production constr_longident -> mod_longident
## In state 1178, spurious reduction of production simple_expr -> constr_longident
## In state 1032, spurious reduction of production expr -> simple_expr
## In state 1172, spurious reduction of production seq_expr -> expr
## In state 2393, spurious reduction of production option(preceded(EQUAL,seq_expr)) -> EQUAL seq_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FUN LPAREN WITH
##
## Concrete syntax: fun ( with
##
## Ends in an error in state: 1000.
##
## constr_extra_nonprefix_ident -> LPAREN . RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE COLON CHAR BACKQUOTE ]
## constr_longident -> LPAREN . COLONCOLON RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE COLON CHAR BACKQUOTE ]
## expr -> FUN ext list(attribute) LPAREN . TYPE nonempty_list(mkrhs(LIDENT)) RPAREN fun_def [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_pattern_not_ident -> LPAREN . pattern RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE COLON CHAR BACKQUOTE ]
## simple_pattern_not_ident -> LPAREN . MODULE ext list(attribute) module_name RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE COLON CHAR BACKQUOTE ]
## simple_pattern_not_ident -> LPAREN . MODULE ext list(attribute) module_name COLON module_type RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE COLON CHAR BACKQUOTE ]
## simple_pattern_not_ident -> LPAREN . pattern error [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE COLON CHAR BACKQUOTE ]
## simple_pattern_not_ident -> LPAREN . pattern COLON core_type RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE COLON CHAR BACKQUOTE ]
## simple_pattern_not_ident -> LPAREN . pattern COLON core_type error [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE COLON CHAR BACKQUOTE ]
## simple_pattern_not_ident -> LPAREN . pattern COLON error [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE COLON CHAR BACKQUOTE ]
## simple_pattern_not_ident -> LPAREN . MODULE ext list(attribute) module_name COLON module_type error [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE COLON CHAR BACKQUOTE ]
## val_extra_ident -> LPAREN . operator RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE COLON CHAR BACKQUOTE ]
## val_extra_ident -> LPAREN . operator error [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE COLON CHAR BACKQUOTE ]
## val_extra_ident -> LPAREN . error [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE COLON CHAR BACKQUOTE ]
## val_extra_ident -> LPAREN . MODULE error [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE COLON CHAR BACKQUOTE ]
##
## The known suffix of the stack is as follows:
## FUN ext list(attribute) LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FUN LPAREN TYPE WITH
##
## Concrete syntax: fun ( type with
##
## Ends in an error in state: 1001.
##
## expr -> FUN ext list(attribute) LPAREN TYPE . nonempty_list(mkrhs(LIDENT)) RPAREN fun_def [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## FUN ext list(attribute) LPAREN TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FUN LPAREN TYPE LIDENT DOT
##
## Concrete syntax: fun ( type lident .
##
## Ends in an error in state: 1002.
##
## expr -> FUN ext list(attribute) LPAREN TYPE nonempty_list(mkrhs(LIDENT)) . RPAREN fun_def [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## FUN ext list(attribute) LPAREN TYPE nonempty_list(mkrhs(LIDENT))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 750, spurious reduction of production nonempty_list(mkrhs(LIDENT)) -> LIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FUN LPAREN TYPE LIDENT RPAREN WITH
##
## Concrete syntax: fun ( type lident ) with
##
## Ends in an error in state: 1003.
##
## expr -> FUN ext list(attribute) LPAREN TYPE nonempty_list(mkrhs(LIDENT)) RPAREN . fun_def [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## FUN ext list(attribute) LPAREN TYPE nonempty_list(mkrhs(LIDENT)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FUN FALSE MINUSGREATER WITH
##
## Concrete syntax: fun false -> with
##
## Ends in an error in state: 1004.
##
## fun_def -> MINUSGREATER . seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## MINUSGREATER
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FOR WITH
##
## Concrete syntax: for with
##
## Ends in an error in state: 1005.
##
## expr -> FOR . ext list(attribute) pattern EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## FOR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FOR PERCENT AND WHILE
##
## Concrete syntax: for % and while
##
## Ends in an error in state: 1006.
##
## expr -> FOR ext . list(attribute) pattern EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## FOR ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FOR LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: for [@ and ] while
##
## Ends in an error in state: 1007.
##
## expr -> FOR ext list(attribute) . pattern EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## FOR ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FOR QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: for {%hello|world|} while
##
## Ends in an error in state: 1008.
##
## expr -> FOR ext list(attribute) pattern . EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## pattern -> pattern . COLONCOLON pattern [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern -> pattern . attribute [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern -> pattern . AS val_ident [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern -> pattern . AS error [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern -> pattern . COLONCOLON error [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern -> pattern . BAR pattern [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern -> pattern . BAR error [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern_comma_list(pattern) -> pattern . COMMA pattern [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern_comma_list(pattern) -> pattern . COMMA error [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
##
## The known suffix of the stack is as follows:
## FOR ext list(attribute) pattern
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FOR FALSE EQUAL WITH
##
## Concrete syntax: for false = with
##
## Ends in an error in state: 1009.
##
## expr -> FOR ext list(attribute) pattern EQUAL . seq_expr direction_flag seq_expr DO seq_expr DONE [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## FOR ext list(attribute) pattern EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: ASSERT WITH
##
## Concrete syntax: assert with
##
## Ends in an error in state: 1010.
##
## expr -> ASSERT . ext list(attribute) simple_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## ASSERT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: ASSERT PERCENT AND WHILE
##
## Concrete syntax: assert % and while
##
## Ends in an error in state: 1011.
##
## expr -> ASSERT ext . list(attribute) simple_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## ASSERT ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: ASSERT LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: assert [@ and ] while
##
## Ends in an error in state: 1012.
##
## expr -> ASSERT ext list(attribute) . simple_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## ASSERT ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: ASSERT CHAR UIDENT
##
## Concrete syntax: assert 'a' UIdent
##
## Ends in an error in state: 1013.
##
## expr -> ASSERT ext list(attribute) simple_expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LPAREN seq_expr RPAREN [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LBRACE seq_expr RBRACE [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LBRACKET seq_expr RBRACKET [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LPAREN seq_expr error [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LBRACE seq_expr error [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LBRACKET seq_expr error [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT label_longident [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . HASH LIDENT [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . HASHOP simple_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## ASSERT ext list(attribute) simple_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT HASHOP WITH
##
## Concrete syntax: UIdent ## with
##
## Ends in an error in state: 1014.
##
## simple_expr -> simple_expr HASHOP . simple_expr [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr HASHOP
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT HASHOP CHAR WHILE
##
## Concrete syntax: UIdent ## 'a' while
##
## Ends in an error in state: 1015.
##
## simple_expr -> simple_expr . DOT LPAREN seq_expr RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LBRACE seq_expr RBRACE [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LBRACKET seq_expr RBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LPAREN seq_expr error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LBRACE seq_expr error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LBRACKET seq_expr error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT label_longident [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . HASH LIDENT [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . HASHOP simple_expr [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr HASHOP simple_expr . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr HASHOP simple_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT CHAR DOTOP WITH
##
## Concrete syntax: UIdent 'a' .+ with
##
## Ends in an error in state: 1016.
##
## simple_expr -> simple_expr DOTOP . LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOTOP . LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOTOP . LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOTOP . LPAREN separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOTOP . LBRACE separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOTOP . LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOTOP
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT CHAR DOTOP LPAREN WITH
##
## Concrete syntax: UIdent 'a' .+ ( with
##
## Ends in an error in state: 1017.
##
## simple_expr -> simple_expr DOTOP LPAREN . separated_or_terminated_nonempty_list(SEMI,expr) RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOTOP LPAREN . separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOTOP LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FUN WITH
##
## Concrete syntax: [ fun with
##
## Ends in an error in state: 1018.
##
## expr -> FUN . ext list(attribute) labeled_simple_pattern fun_def [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> FUN . ext list(attribute) LPAREN TYPE nonempty_list(mkrhs(LIDENT)) RPAREN fun_def [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## FUN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FUN PERCENT AND WHILE
##
## Concrete syntax: [ fun % and while
##
## Ends in an error in state: 1019.
##
## expr -> FUN ext . list(attribute) labeled_simple_pattern fun_def [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> FUN ext . list(attribute) LPAREN TYPE nonempty_list(mkrhs(LIDENT)) RPAREN fun_def [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## FUN ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FUN LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: [ fun [@ and ] while
##
## Ends in an error in state: 1020.
##
## expr -> FUN ext list(attribute) . labeled_simple_pattern fun_def [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> FUN ext list(attribute) . LPAREN TYPE nonempty_list(mkrhs(LIDENT)) RPAREN fun_def [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## FUN ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FUN LPAREN WITH
##
## Concrete syntax: [ fun ( with
##
## Ends in an error in state: 1021.
##
## constr_extra_nonprefix_ident -> LPAREN . RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE COLON CHAR BACKQUOTE ]
## constr_longident -> LPAREN . COLONCOLON RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE COLON CHAR BACKQUOTE ]
## expr -> FUN ext list(attribute) LPAREN . TYPE nonempty_list(mkrhs(LIDENT)) RPAREN fun_def [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_pattern_not_ident -> LPAREN . pattern RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE COLON CHAR BACKQUOTE ]
## simple_pattern_not_ident -> LPAREN . MODULE ext list(attribute) module_name RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE COLON CHAR BACKQUOTE ]
## simple_pattern_not_ident -> LPAREN . MODULE ext list(attribute) module_name COLON module_type RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE COLON CHAR BACKQUOTE ]
## simple_pattern_not_ident -> LPAREN . pattern error [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE COLON CHAR BACKQUOTE ]
## simple_pattern_not_ident -> LPAREN . pattern COLON core_type RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE COLON CHAR BACKQUOTE ]
## simple_pattern_not_ident -> LPAREN . pattern COLON core_type error [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE COLON CHAR BACKQUOTE ]
## simple_pattern_not_ident -> LPAREN . pattern COLON error [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE COLON CHAR BACKQUOTE ]
## simple_pattern_not_ident -> LPAREN . MODULE ext list(attribute) module_name COLON module_type error [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE COLON CHAR BACKQUOTE ]
## val_extra_ident -> LPAREN . operator RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE COLON CHAR BACKQUOTE ]
## val_extra_ident -> LPAREN . operator error [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE COLON CHAR BACKQUOTE ]
## val_extra_ident -> LPAREN . error [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE COLON CHAR BACKQUOTE ]
## val_extra_ident -> LPAREN . MODULE error [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE COLON CHAR BACKQUOTE ]
##
## The known suffix of the stack is as follows:
## FUN ext list(attribute) LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FUN LPAREN TYPE WITH
##
## Concrete syntax: [ fun ( type with
##
## Ends in an error in state: 1022.
##
## expr -> FUN ext list(attribute) LPAREN TYPE . nonempty_list(mkrhs(LIDENT)) RPAREN fun_def [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## FUN ext list(attribute) LPAREN TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FUN LPAREN TYPE LIDENT DOT
##
## Concrete syntax: [ fun ( type lident .
##
## Ends in an error in state: 1023.
##
## expr -> FUN ext list(attribute) LPAREN TYPE nonempty_list(mkrhs(LIDENT)) . RPAREN fun_def [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## FUN ext list(attribute) LPAREN TYPE nonempty_list(mkrhs(LIDENT))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 750, spurious reduction of production nonempty_list(mkrhs(LIDENT)) -> LIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FUN LPAREN TYPE LIDENT RPAREN WITH
##
## Concrete syntax: [ fun ( type lident ) with
##
## Ends in an error in state: 1024.
##
## expr -> FUN ext list(attribute) LPAREN TYPE nonempty_list(mkrhs(LIDENT)) RPAREN . fun_def [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## FUN ext list(attribute) LPAREN TYPE nonempty_list(mkrhs(LIDENT)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FUN FALSE MINUSGREATER WITH
##
## Concrete syntax: [ fun false -> with
##
## Ends in an error in state: 1025.
##
## fun_def -> MINUSGREATER . seq_expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## MINUSGREATER
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FOR WITH
##
## Concrete syntax: [ for with
##
## Ends in an error in state: 1026.
##
## expr -> FOR . ext list(attribute) pattern EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## FOR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FOR PERCENT AND WHILE
##
## Concrete syntax: [ for % and while
##
## Ends in an error in state: 1027.
##
## expr -> FOR ext . list(attribute) pattern EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## FOR ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FOR LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: [ for [@ and ] while
##
## Ends in an error in state: 1028.
##
## expr -> FOR ext list(attribute) . pattern EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## FOR ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FOR QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: [ for {%hello|world|} while
##
## Ends in an error in state: 1029.
##
## expr -> FOR ext list(attribute) pattern . EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## pattern -> pattern . COLONCOLON pattern [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern -> pattern . attribute [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern -> pattern . AS val_ident [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern -> pattern . AS error [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern -> pattern . COLONCOLON error [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern -> pattern . BAR pattern [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern -> pattern . BAR error [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern_comma_list(pattern) -> pattern . COMMA pattern [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern_comma_list(pattern) -> pattern . COMMA error [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
##
## The known suffix of the stack is as follows:
## FOR ext list(attribute) pattern
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FOR FALSE EQUAL WITH
##
## Concrete syntax: [ for false = with
##
## Ends in an error in state: 1030.
##
## expr -> FOR ext list(attribute) pattern EQUAL . seq_expr direction_flag seq_expr DO seq_expr DONE [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## FOR ext list(attribute) pattern EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: MINUS WITH
##
## Concrete syntax: - with
##
## Ends in an error in state: 1031.
##
## expr -> subtractive . expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## subtractive
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CHAR WHILE
##
## Concrete syntax: 'a' while
##
## Ends in an error in state: 1032.
##
## expr -> simple_expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> simple_expr . reversed_nonempty_llist(labeled_simple_expr) [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> simple_expr . DOT label_longident LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> simple_expr . DOT LPAREN seq_expr RPAREN LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> simple_expr . DOT LBRACE seq_expr RBRACE LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> simple_expr . DOT LBRACKET seq_expr RBRACKET LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> simple_expr . DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> simple_expr . DOT mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> simple_expr . DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> simple_expr . DOT mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> simple_expr . DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> simple_expr . DOT mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LPAREN seq_expr RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LBRACE seq_expr RBRACE [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LBRACKET seq_expr RBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LPAREN seq_expr error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LBRACE seq_expr error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LBRACKET seq_expr error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT label_longident [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . HASH LIDENT [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . HASHOP simple_expr [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT TILDE WITH
##
## Concrete syntax: UIdent ~ with
##
## Ends in an error in state: 1033.
##
## labeled_simple_expr -> TILDE . LIDENT [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## TILDE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT QUESTION WITH
##
## Concrete syntax: UIdent ? with
##
## Ends in an error in state: 1035.
##
## labeled_simple_expr -> QUESTION . LIDENT [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## QUESTION
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT OPTLABEL WITH
##
## Concrete syntax: UIdent ?label: with
##
## Ends in an error in state: 1037.
##
## labeled_simple_expr -> OPTLABEL . simple_expr [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## OPTLABEL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT OPTLABEL CHAR WHILE
##
## Concrete syntax: UIdent ?label: 'a' while
##
## Ends in an error in state: 1038.
##
## labeled_simple_expr -> OPTLABEL simple_expr . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LPAREN seq_expr RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LBRACE seq_expr RBRACE [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LBRACKET seq_expr RBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LPAREN seq_expr error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LBRACE seq_expr error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LBRACKET seq_expr error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT label_longident [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . HASH LIDENT [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . HASHOP simple_expr [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## OPTLABEL simple_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT HASH WITH
##
## Concrete syntax: UIdent # with
##
## Ends in an error in state: 1039.
##
## simple_expr -> simple_expr HASH . LIDENT [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr HASH
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT CHAR DOT WITH
##
## Concrete syntax: UIdent 'a' . with
##
## Ends in an error in state: 1041.
##
## simple_expr -> simple_expr DOT . LPAREN seq_expr RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT . LBRACE seq_expr RBRACE [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT . LBRACKET seq_expr RBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT . mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT . mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT . mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT . LPAREN seq_expr error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT . LBRACE seq_expr error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT . LBRACKET seq_expr error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT . mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT . mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT . mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT . label_longident [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT CHAR DOT LPAREN WITH
##
## Concrete syntax: UIdent 'a' . ( with
##
## Ends in an error in state: 1042.
##
## simple_expr -> simple_expr DOT LPAREN . seq_expr RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT LPAREN . seq_expr error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET BANG WITH
##
## Concrete syntax: [ ! with
##
## Ends in an error in state: 1043.
##
## simple_expr -> BANG . simple_expr [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## BANG
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT WITH
##
## Concrete syntax: [ UIdent with
##
## Ends in an error in state: 1048.
##
## constr_longident -> mod_longident . [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## constr_longident -> mod_longident . DOT LPAREN COLONCOLON RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## mk_longident(mod_longident,UIDENT) -> mod_longident . DOT UIDENT [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## mk_longident(mod_longident,val_ident) -> mod_longident . DOT val_ident [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident . DOT LPAREN seq_expr RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident . DOT LBRACELESS separated_or_terminated_nonempty_list(SEMI,object_expr_field) GREATERRBRACE [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident . DOT LBRACELESS separated_or_terminated_nonempty_list(SEMI,object_expr_field) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident . DOT LPAREN RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident . DOT LPAREN seq_expr error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident . DOT LBRACE record_expr_content RBRACE [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident . DOT LBRACE record_expr_content error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident . DOT LBRACKETBAR separated_or_terminated_nonempty_list(SEMI,expr) BARRBRACKET [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident . DOT LBRACKETBAR BARRBRACKET [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident . DOT LBRACKETBAR separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident . DOT LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident . DOT LBRACKET RBRACKET [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident . DOT LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident . DOT LPAREN MODULE ext list(attribute) module_expr COLON module_type RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident . DOT LPAREN MODULE ext list(attribute) module_expr COLON error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## mod_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT DOT WITH
##
## Concrete syntax: [ UIdent . with
##
## Ends in an error in state: 1049.
##
## constr_longident -> mod_longident DOT . LPAREN COLONCOLON RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## mk_longident(mod_longident,UIDENT) -> mod_longident DOT . UIDENT [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## mk_longident(mod_longident,val_ident) -> mod_longident DOT . val_ident [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident DOT . LPAREN seq_expr RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident DOT . LBRACELESS separated_or_terminated_nonempty_list(SEMI,object_expr_field) GREATERRBRACE [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident DOT . LBRACELESS separated_or_terminated_nonempty_list(SEMI,object_expr_field) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident DOT . LPAREN RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident DOT . LPAREN seq_expr error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident DOT . LBRACE record_expr_content RBRACE [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident DOT . LBRACE record_expr_content error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident DOT . LBRACKETBAR separated_or_terminated_nonempty_list(SEMI,expr) BARRBRACKET [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident DOT . LBRACKETBAR BARRBRACKET [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident DOT . LBRACKETBAR separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident DOT . LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident DOT . LBRACKET RBRACKET [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident DOT . LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident DOT . LPAREN MODULE ext list(attribute) module_expr COLON module_type RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident DOT . LPAREN MODULE ext list(attribute) module_expr COLON error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## mod_longident DOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT DOT LPAREN WITH
##
## Concrete syntax: [ UIdent . ( with
##
## Ends in an error in state: 1050.
##
## constr_longident -> mod_longident DOT LPAREN . COLONCOLON RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident DOT LPAREN . seq_expr RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident DOT LPAREN . RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident DOT LPAREN . seq_expr error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident DOT LPAREN . MODULE ext list(attribute) module_expr COLON module_type RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident DOT LPAREN . MODULE ext list(attribute) module_expr COLON error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## val_extra_ident -> LPAREN . operator RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## val_extra_ident -> LPAREN . operator error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## val_extra_ident -> LPAREN . error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## val_extra_ident -> LPAREN . MODULE error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## mod_longident DOT LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT DOT LPAREN MODULE WITH
##
## Concrete syntax: [ UIdent . ( module with
##
## Ends in an error in state: 1052.
##
## simple_expr -> mod_longident DOT LPAREN MODULE . ext list(attribute) module_expr COLON module_type RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident DOT LPAREN MODULE . ext list(attribute) module_expr COLON error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## val_extra_ident -> LPAREN MODULE . error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## mod_longident DOT LPAREN MODULE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT DOT LPAREN MODULE PERCENT AND WHILE
##
## Concrete syntax: [ UIdent . ( module % and while
##
## Ends in an error in state: 1053.
##
## simple_expr -> mod_longident DOT LPAREN MODULE ext . list(attribute) module_expr COLON module_type RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident DOT LPAREN MODULE ext . list(attribute) module_expr COLON error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## mod_longident DOT LPAREN MODULE ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT DOT LPAREN MODULE LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: [ UIdent . ( module [@ and ] while
##
## Ends in an error in state: 1054.
##
## simple_expr -> mod_longident DOT LPAREN MODULE ext list(attribute) . module_expr COLON module_type RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident DOT LPAREN MODULE ext list(attribute) . module_expr COLON error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## mod_longident DOT LPAREN MODULE ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT DOT LPAREN MODULE QUOTED_STRING_EXPR WITH
##
## Concrete syntax: [ UIdent . ( module {%hello|world|} with
##
## Ends in an error in state: 1055.
##
## module_expr -> module_expr . attribute [ LPAREN LBRACKETAT COLON ]
## module_expr -> module_expr . paren_module_expr [ LPAREN LBRACKETAT COLON ]
## module_expr -> module_expr . LPAREN RPAREN [ LPAREN LBRACKETAT COLON ]
## simple_expr -> mod_longident DOT LPAREN MODULE ext list(attribute) module_expr . COLON module_type RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident DOT LPAREN MODULE ext list(attribute) module_expr . COLON error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## mod_longident DOT LPAREN MODULE ext list(attribute) module_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT DOT LPAREN MODULE QUOTED_STRING_EXPR COLON WITH
##
## Concrete syntax: [ UIdent . ( module {%hello|world|} : with
##
## Ends in an error in state: 1056.
##
## simple_expr -> mod_longident DOT LPAREN MODULE ext list(attribute) module_expr COLON . module_type RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident DOT LPAREN MODULE ext list(attribute) module_expr COLON . error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## mod_longident DOT LPAREN MODULE ext list(attribute) module_expr COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT DOT LPAREN MODULE QUOTED_STRING_EXPR COLON QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: [ UIdent . ( module {%hello|world|} : {%hello|world|} while
##
## Ends in an error in state: 1058.
##
## module_type -> module_type . attribute [ WITH RPAREN MINUSGREATER LBRACKETAT ]
## module_type -> module_type . MINUSGREATER module_type [ WITH RPAREN MINUSGREATER LBRACKETAT ]
## module_type -> module_type . WITH reversed_separated_nonempty_llist(AND,with_constraint) [ WITH RPAREN MINUSGREATER LBRACKETAT ]
## simple_expr -> mod_longident DOT LPAREN MODULE ext list(attribute) module_expr COLON module_type . RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## mod_longident DOT LPAREN MODULE ext list(attribute) module_expr COLON module_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LPAREN BANG WITH
##
## Concrete syntax: ( ! with
##
## Ends in an error in state: 1060.
##
## operator -> BANG . [ error RPAREN ]
## simple_expr -> BANG . simple_expr [ error UIDENT TRUE TILDE STRING STAR SEMI RPAREN QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL NEW MINUSDOT MINUS LPAREN LIDENT LESS LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 HASHOP HASH GREATER FLOAT FALSE EQUAL DOTOP DOT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CHAR BEGIN BARBAR BANG BACKQUOTE AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## BANG
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET ASSERT WITH
##
## Concrete syntax: [ assert with
##
## Ends in an error in state: 1065.
##
## expr -> ASSERT . ext list(attribute) simple_expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## ASSERT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET ASSERT PERCENT AND WHILE
##
## Concrete syntax: [ assert % and while
##
## Ends in an error in state: 1066.
##
## expr -> ASSERT ext . list(attribute) simple_expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## ASSERT ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET ASSERT LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: [ assert [@ and ] while
##
## Ends in an error in state: 1067.
##
## expr -> ASSERT ext list(attribute) . simple_expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## ASSERT ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET ASSERT CHAR UIDENT
##
## Concrete syntax: [ assert 'a' UIdent
##
## Ends in an error in state: 1068.
##
## expr -> ASSERT ext list(attribute) simple_expr . [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LPAREN seq_expr RPAREN [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LBRACE seq_expr RBRACE [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LBRACKET seq_expr RBRACKET [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LPAREN seq_expr error [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LBRACE seq_expr error [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LBRACKET seq_expr error [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT label_longident [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . HASH LIDENT [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . HASHOP simple_expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## ASSERT ext list(attribute) simple_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT HASHOP WITH
##
## Concrete syntax: [ UIdent ## with
##
## Ends in an error in state: 1069.
##
## simple_expr -> simple_expr HASHOP . simple_expr [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr HASHOP
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT HASHOP CHAR WITH
##
## Concrete syntax: [ UIdent ## 'a' with
##
## Ends in an error in state: 1070.
##
## simple_expr -> simple_expr . DOT LPAREN seq_expr RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LBRACE seq_expr RBRACE [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LBRACKET seq_expr RBRACKET [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LPAREN seq_expr error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LBRACE seq_expr error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LBRACKET seq_expr error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT label_longident [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . HASH LIDENT [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . HASHOP simple_expr [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr HASHOP simple_expr . [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr HASHOP simple_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT CHAR DOTOP WITH
##
## Concrete syntax: [ UIdent 'a' .+ with
##
## Ends in an error in state: 1071.
##
## simple_expr -> simple_expr DOTOP . LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOTOP . LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOTOP . LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOTOP . LPAREN separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOTOP . LBRACE separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOTOP . LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOTOP
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT CHAR DOTOP LPAREN WITH
##
## Concrete syntax: [ UIdent 'a' .+ ( with
##
## Ends in an error in state: 1072.
##
## simple_expr -> simple_expr DOTOP LPAREN . separated_or_terminated_nonempty_list(SEMI,expr) RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOTOP LPAREN . separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOTOP LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET MINUS WITH
##
## Concrete syntax: [ - with
##
## Ends in an error in state: 1073.
##
## expr -> subtractive . expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## subtractive
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET CHAR AS
##
## Concrete syntax: [ 'a' as
##
## Ends in an error in state: 1074.
##
## expr -> simple_expr . [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> simple_expr . reversed_nonempty_llist(labeled_simple_expr) [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> simple_expr . DOT label_longident LESSMINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> simple_expr . DOT LPAREN seq_expr RPAREN LESSMINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> simple_expr . DOT LBRACE seq_expr RBRACE LESSMINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> simple_expr . DOT LBRACKET seq_expr RBRACKET LESSMINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> simple_expr . DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN LESSMINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> simple_expr . DOT mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN LESSMINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> simple_expr . DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE LESSMINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> simple_expr . DOT mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE LESSMINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> simple_expr . DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET LESSMINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> simple_expr . DOT mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET LESSMINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LPAREN seq_expr RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LBRACE seq_expr RBRACE [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LBRACKET seq_expr RBRACKET [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LPAREN seq_expr error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LBRACE seq_expr error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LBRACKET seq_expr error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT label_longident [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . HASH LIDENT [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . HASHOP simple_expr [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT TILDE WITH
##
## Concrete syntax: [ UIdent ~ with
##
## Ends in an error in state: 1075.
##
## labeled_simple_expr -> TILDE . LIDENT [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## TILDE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT QUESTION WITH
##
## Concrete syntax: [ UIdent ? with
##
## Ends in an error in state: 1077.
##
## labeled_simple_expr -> QUESTION . LIDENT [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## QUESTION
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT OPTLABEL WITH
##
## Concrete syntax: [ UIdent ?label: with
##
## Ends in an error in state: 1079.
##
## labeled_simple_expr -> OPTLABEL . simple_expr [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## OPTLABEL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT OPTLABEL CHAR WITH
##
## Concrete syntax: [ UIdent ?label: 'a' with
##
## Ends in an error in state: 1080.
##
## labeled_simple_expr -> OPTLABEL simple_expr . [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LPAREN seq_expr RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LBRACE seq_expr RBRACE [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LBRACKET seq_expr RBRACKET [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LPAREN seq_expr error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LBRACE seq_expr error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LBRACKET seq_expr error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT label_longident [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . HASH LIDENT [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . HASHOP simple_expr [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## OPTLABEL simple_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT HASH WITH
##
## Concrete syntax: [ UIdent # with
##
## Ends in an error in state: 1081.
##
## simple_expr -> simple_expr HASH . LIDENT [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr HASH
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT CHAR DOT WITH
##
## Concrete syntax: [ UIdent 'a' . with
##
## Ends in an error in state: 1083.
##
## simple_expr -> simple_expr DOT . LPAREN seq_expr RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT . LBRACE seq_expr RBRACE [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT . LBRACKET seq_expr RBRACKET [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT . mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT . mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT . mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT . LPAREN seq_expr error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT . LBRACE seq_expr error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT . LBRACKET seq_expr error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT . mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT . mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT . mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT . label_longident [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT CHAR DOT LPAREN WITH
##
## Concrete syntax: [ UIdent 'a' . ( with
##
## Ends in an error in state: 1084.
##
## simple_expr -> simple_expr DOT LPAREN . seq_expr RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT LPAREN . seq_expr error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT CHAR DOT LPAREN UIDENT VAL
##
## Concrete syntax: [ UIdent 'a' . ( UIdent val
##
## Ends in an error in state: 1085.
##
## simple_expr -> simple_expr DOT LPAREN seq_expr . RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT LPAREN seq_expr . error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT LPAREN seq_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1048, spurious reduction of production constr_longident -> mod_longident
## In state 1101, spurious reduction of production simple_expr -> constr_longident
## In state 1074, spurious reduction of production expr -> simple_expr
## In state 1095, spurious reduction of production seq_expr -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT COMMA UIDENT COMMA WITH
##
## Concrete syntax: [ UIdent , UIdent , with
##
## Ends in an error in state: 1089.
##
## reversed_separated_nontrivial_llist(COMMA,expr) -> reversed_separated_nontrivial_llist(COMMA,expr) COMMA . expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## reversed_separated_nontrivial_llist(COMMA,expr) COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET BACKQUOTE LIDENT WITH
##
## Concrete syntax: [ ` lident with
##
## Ends in an error in state: 1090.
##
## expr -> name_tag . simple_expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> name_tag . [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## name_tag
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET BACKQUOTE LIDENT CHAR UIDENT
##
## Concrete syntax: [ ` lident 'a' UIdent
##
## Ends in an error in state: 1091.
##
## expr -> name_tag simple_expr . [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LPAREN seq_expr RPAREN [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LBRACE seq_expr RBRACE [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LBRACKET seq_expr RBRACKET [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LPAREN seq_expr error [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LBRACE seq_expr error [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LBRACKET seq_expr error [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT label_longident [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . HASH LIDENT [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . HASHOP simple_expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## name_tag simple_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET LET LIDENT VAL
##
## Concrete syntax: [ let lident val
##
## Ends in an error in state: 1092.
##
## expr -> let_bindings(ext) . IN seq_expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## let_bindings(ext) -> let_bindings(ext) . and_let_binding [ IN AND ]
##
## The known suffix of the stack is as follows:
## let_bindings(ext)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1152, spurious reduction of production let_binding_body -> val_ident
## In state 1640, spurious reduction of production list(post_item_attribute) ->
## In state 1641, spurious reduction of production let_bindings(ext) -> LET ext list(attribute) rec_flag let_binding_body list(post_item_attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET LET LIDENT IN WITH
##
## Concrete syntax: [ let lident in with
##
## Ends in an error in state: 1093.
##
## expr -> let_bindings(ext) IN . seq_expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## let_bindings(ext) IN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LPAREN UNDERSCORE WITH
##
## Concrete syntax: ( _ with
##
## Ends in an error in state: 1095.
##
## expr -> expr . INFIXOP0 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## seq_expr -> expr . [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## seq_expr -> expr . SEMI [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## seq_expr -> expr . SEMI seq_expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## seq_expr -> expr . SEMI PERCENT attr_id seq_expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT STAR WITH
##
## Concrete syntax: [ UIdent * with
##
## Ends in an error in state: 1096.
##
## expr -> expr STAR . expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr STAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT STAR UNDERSCORE WITH
##
## Concrete syntax: [ UIdent * _ with
##
## Ends in an error in state: 1097.
##
## expr -> expr . INFIXOP0 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr STAR expr . [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr STAR expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT INFIXOP4 WITH
##
## Concrete syntax: [ UIdent ** with
##
## Ends in an error in state: 1098.
##
## expr -> expr INFIXOP4 . expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr INFIXOP4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT INFIXOP4 UNDERSCORE WITH
##
## Concrete syntax: [ UIdent ** _ with
##
## Ends in an error in state: 1099.
##
## expr -> expr . INFIXOP0 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr INFIXOP4 expr . [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr INFIXOP4 expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT AS
##
## Concrete syntax: [ UIdent as
##
## Ends in an error in state: 1101.
##
## expr -> constr_longident . simple_expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> constr_longident . [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## constr_longident
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1048, spurious reduction of production constr_longident -> mod_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT CHAR UIDENT
##
## Concrete syntax: [ UIdent 'a' UIdent
##
## Ends in an error in state: 1102.
##
## expr -> constr_longident simple_expr . [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LPAREN seq_expr RPAREN [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LBRACE seq_expr RBRACE [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LBRACKET seq_expr RBRACKET [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LPAREN seq_expr error [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LBRACE seq_expr error [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LBRACKET seq_expr error [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT label_longident [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . HASH LIDENT [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . HASHOP simple_expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## constr_longident simple_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET PLUS WITH
##
## Concrete syntax: [ + with
##
## Ends in an error in state: 1103.
##
## expr -> additive . expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## additive
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LPAREN UIDENT SEMI WITH
##
## Concrete syntax: ( UIdent ; with
##
## Ends in an error in state: 1105.
##
## seq_expr -> expr SEMI . [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## seq_expr -> expr SEMI . seq_expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## seq_expr -> expr SEMI . PERCENT attr_id seq_expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr SEMI
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LPAREN UIDENT SEMI PERCENT UNDERSCORE
##
## Concrete syntax: ( UIdent ; % _
##
## Ends in an error in state: 1106.
##
## seq_expr -> expr SEMI PERCENT . attr_id seq_expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr SEMI PERCENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LPAREN UIDENT SEMI PERCENT AND VIRTUAL
##
## Concrete syntax: ( UIdent ; % and virtual
##
## Ends in an error in state: 1107.
##
## seq_expr -> expr SEMI PERCENT attr_id . seq_expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr SEMI PERCENT attr_id
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT PLUSEQ WITH
##
## Concrete syntax: [ UIdent += with
##
## Ends in an error in state: 1110.
##
## expr -> expr PLUSEQ . expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr PLUSEQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT PLUSEQ UNDERSCORE WITH
##
## Concrete syntax: [ UIdent += _ with
##
## Ends in an error in state: 1111.
##
## expr -> expr . INFIXOP0 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr PLUSEQ expr . [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr PLUSEQ expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT PERCENT WITH
##
## Concrete syntax: [ UIdent % with
##
## Ends in an error in state: 1112.
##
## expr -> expr PERCENT . expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr PERCENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT PERCENT UNDERSCORE WITH
##
## Concrete syntax: [ UIdent % _ with
##
## Ends in an error in state: 1113.
##
## expr -> expr . INFIXOP0 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr PERCENT expr . [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr PERCENT expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT INFIXOP3 WITH
##
## Concrete syntax: [ UIdent land with
##
## Ends in an error in state: 1114.
##
## expr -> expr INFIXOP3 . expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr INFIXOP3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT INFIXOP3 UNDERSCORE WITH
##
## Concrete syntax: [ UIdent land _ with
##
## Ends in an error in state: 1115.
##
## expr -> expr . INFIXOP0 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr INFIXOP3 expr . [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr INFIXOP3 expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT PLUSDOT WITH
##
## Concrete syntax: [ UIdent +. with
##
## Ends in an error in state: 1116.
##
## expr -> expr PLUSDOT . expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr PLUSDOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT PLUSDOT UNDERSCORE WITH
##
## Concrete syntax: [ UIdent +. _ with
##
## Ends in an error in state: 1117.
##
## expr -> expr . INFIXOP0 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr PLUSDOT expr . [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr PLUSDOT expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT PLUS WITH
##
## Concrete syntax: [ UIdent + with
##
## Ends in an error in state: 1118.
##
## expr -> expr PLUS . expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr PLUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT PLUS UNDERSCORE WITH
##
## Concrete syntax: [ UIdent + _ with
##
## Ends in an error in state: 1119.
##
## expr -> expr . INFIXOP0 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr PLUS expr . [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr PLUS expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT OR WITH
##
## Concrete syntax: [ UIdent or with
##
## Ends in an error in state: 1120.
##
## expr -> expr OR . expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr OR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT OR UNDERSCORE WITH
##
## Concrete syntax: [ UIdent or _ with
##
## Ends in an error in state: 1121.
##
## expr -> expr . INFIXOP0 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr OR expr . [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr OR expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT MINUSDOT WITH
##
## Concrete syntax: [ UIdent -. with
##
## Ends in an error in state: 1122.
##
## expr -> expr MINUSDOT . expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr MINUSDOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT MINUSDOT UNDERSCORE WITH
##
## Concrete syntax: [ UIdent -. _ with
##
## Ends in an error in state: 1123.
##
## expr -> expr . INFIXOP0 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr MINUSDOT expr . [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr MINUSDOT expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT MINUS WITH
##
## Concrete syntax: [ UIdent - with
##
## Ends in an error in state: 1124.
##
## expr -> expr MINUS . expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr MINUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT MINUS UNDERSCORE WITH
##
## Concrete syntax: [ UIdent - _ with
##
## Ends in an error in state: 1125.
##
## expr -> expr . INFIXOP0 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr MINUS expr . [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr MINUS expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT LESS WITH
##
## Concrete syntax: [ UIdent < with
##
## Ends in an error in state: 1126.
##
## expr -> expr LESS . expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr LESS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT LESS UNDERSCORE WITH
##
## Concrete syntax: [ UIdent < _ with
##
## Ends in an error in state: 1127.
##
## expr -> expr . INFIXOP0 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr LESS expr . [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr LESS expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT INFIXOP2 WITH
##
## Concrete syntax: [ UIdent +! with
##
## Ends in an error in state: 1128.
##
## expr -> expr INFIXOP2 . expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr INFIXOP2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT INFIXOP2 UNDERSCORE WITH
##
## Concrete syntax: [ UIdent +! _ with
##
## Ends in an error in state: 1129.
##
## expr -> expr . INFIXOP0 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr INFIXOP2 expr . [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr INFIXOP2 expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT INFIXOP1 WITH
##
## Concrete syntax: [ UIdent @ with
##
## Ends in an error in state: 1130.
##
## expr -> expr INFIXOP1 . expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr INFIXOP1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT INFIXOP1 UNDERSCORE WITH
##
## Concrete syntax: [ UIdent @ _ with
##
## Ends in an error in state: 1131.
##
## expr -> expr . INFIXOP0 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr INFIXOP1 expr . [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr INFIXOP1 expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT COLONCOLON WITH
##
## Concrete syntax: [ UIdent :: with
##
## Ends in an error in state: 1132.
##
## expr -> expr COLONCOLON . expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr COLONCOLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT COLONCOLON UNDERSCORE WITH
##
## Concrete syntax: [ UIdent :: _ with
##
## Ends in an error in state: 1133.
##
## expr -> expr . INFIXOP0 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr COLONCOLON expr . [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr COLONCOLON expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT INFIXOP0 WITH
##
## Concrete syntax: [ UIdent != with
##
## Ends in an error in state: 1134.
##
## expr -> expr INFIXOP0 . expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr INFIXOP0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT INFIXOP0 UNDERSCORE WITH
##
## Concrete syntax: [ UIdent != _ with
##
## Ends in an error in state: 1135.
##
## expr -> expr . INFIXOP0 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr INFIXOP0 expr . [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr INFIXOP0 expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT GREATER WITH
##
## Concrete syntax: [ UIdent > with
##
## Ends in an error in state: 1136.
##
## expr -> expr GREATER . expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr GREATER
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT GREATER UNDERSCORE WITH
##
## Concrete syntax: [ UIdent > _ with
##
## Ends in an error in state: 1137.
##
## expr -> expr . INFIXOP0 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr GREATER expr . [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr GREATER expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT EQUAL WITH
##
## Concrete syntax: [ UIdent = with
##
## Ends in an error in state: 1138.
##
## expr -> expr EQUAL . expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT EQUAL UNDERSCORE WITH
##
## Concrete syntax: [ UIdent = _ with
##
## Ends in an error in state: 1139.
##
## expr -> expr . INFIXOP0 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr EQUAL expr . [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr EQUAL expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT BARBAR WITH
##
## Concrete syntax: [ UIdent || with
##
## Ends in an error in state: 1140.
##
## expr -> expr BARBAR . expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr BARBAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT BARBAR UNDERSCORE WITH
##
## Concrete syntax: [ UIdent || _ with
##
## Ends in an error in state: 1141.
##
## expr -> expr . INFIXOP0 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr BARBAR expr . [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr BARBAR expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT AMPERSAND WITH
##
## Concrete syntax: [ UIdent & with
##
## Ends in an error in state: 1142.
##
## expr -> expr AMPERSAND . expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr AMPERSAND
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT AMPERSAND UNDERSCORE WITH
##
## Concrete syntax: [ UIdent & _ with
##
## Ends in an error in state: 1143.
##
## expr -> expr . INFIXOP0 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr AMPERSAND expr . [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr AMPERSAND expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT AMPERAMPER WITH
##
## Concrete syntax: [ UIdent && with
##
## Ends in an error in state: 1144.
##
## expr -> expr AMPERAMPER . expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr AMPERAMPER
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT AMPERAMPER UNDERSCORE WITH
##
## Concrete syntax: [ UIdent && _ with
##
## Ends in an error in state: 1145.
##
## expr -> expr . INFIXOP0 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr AMPERAMPER expr . [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr AMPERAMPER expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT COMMA WITH
##
## Concrete syntax: [ UIdent , with
##
## Ends in an error in state: 1146.
##
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr COMMA . expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT COMMA UNDERSCORE WITH
##
## Concrete syntax: [ UIdent , _ with
##
## Ends in an error in state: 1147.
##
## expr -> expr . INFIXOP0 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr COMMA expr . [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr COMMA expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT COLONEQUAL WITH
##
## Concrete syntax: [ UIdent := with
##
## Ends in an error in state: 1148.
##
## expr -> expr COLONEQUAL . expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr COLONEQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT COLONEQUAL UNDERSCORE WITH
##
## Concrete syntax: [ UIdent := _ with
##
## Ends in an error in state: 1149.
##
## expr -> expr . INFIXOP0 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr COLONEQUAL expr . [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr COLONEQUAL expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LET LIDENT AND WITH
##
## Concrete syntax: let lident and with
##
## Ends in an error in state: 1150.
##
## and_let_binding -> AND . list(attribute) let_binding_body list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## AND
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LET LIDENT AND LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: let lident and [@ and ] while
##
## Ends in an error in state: 1151.
##
## and_let_binding -> AND list(attribute) . let_binding_body list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## AND list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LET LIDENT WITH
##
## Concrete syntax: let lident with
##
## Ends in an error in state: 1152.
##
## let_binding_body -> val_ident . [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CLASS AND ]
## let_binding_body_no_punning -> val_ident . strict_binding [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CLASS AND ]
## let_binding_body_no_punning -> val_ident . type_constraint EQUAL seq_expr [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CLASS AND ]
## let_binding_body_no_punning -> val_ident . COLON reversed_nonempty_llist(typevar) DOT core_type EQUAL seq_expr [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CLASS AND ]
## let_binding_body_no_punning -> val_ident . COLON TYPE nonempty_list(mkrhs(LIDENT)) DOT core_type EQUAL seq_expr [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CLASS AND ]
## simple_pattern -> val_ident . [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
##
## The known suffix of the stack is as follows:
## val_ident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LETOP LIDENT LPAREN WITH
##
## Concrete syntax: let* lident ( with
##
## Ends in an error in state: 1153.
##
## constr_extra_nonprefix_ident -> LPAREN . RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
## constr_longident -> LPAREN . COLONCOLON RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
## simple_pattern_not_ident -> LPAREN . pattern RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
## simple_pattern_not_ident -> LPAREN . MODULE ext list(attribute) module_name RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
## simple_pattern_not_ident -> LPAREN . MODULE ext list(attribute) module_name COLON module_type RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
## simple_pattern_not_ident -> LPAREN . pattern error [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
## simple_pattern_not_ident -> LPAREN . pattern COLON core_type RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
## simple_pattern_not_ident -> LPAREN . pattern COLON core_type error [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
## simple_pattern_not_ident -> LPAREN . pattern COLON error [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
## simple_pattern_not_ident -> LPAREN . MODULE ext list(attribute) module_name COLON module_type error [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
## strict_binding -> LPAREN . TYPE nonempty_list(mkrhs(LIDENT)) RPAREN fun_binding [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CLASS ANDOP AND ]
## val_extra_ident -> LPAREN . operator RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
## val_extra_ident -> LPAREN . operator error [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
## val_extra_ident -> LPAREN . error [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
## val_extra_ident -> LPAREN . MODULE error [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LETOP LIDENT LPAREN TYPE WITH
##
## Concrete syntax: let* lident ( type with
##
## Ends in an error in state: 1154.
##
## strict_binding -> LPAREN TYPE . nonempty_list(mkrhs(LIDENT)) RPAREN fun_binding [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CLASS ANDOP AND ]
##
## The known suffix of the stack is as follows:
## LPAREN TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LETOP LIDENT LPAREN TYPE LIDENT DOT
##
## Concrete syntax: let* lident ( type lident .
##
## Ends in an error in state: 1155.
##
## strict_binding -> LPAREN TYPE nonempty_list(mkrhs(LIDENT)) . RPAREN fun_binding [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CLASS ANDOP AND ]
##
## The known suffix of the stack is as follows:
## LPAREN TYPE nonempty_list(mkrhs(LIDENT))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 750, spurious reduction of production nonempty_list(mkrhs(LIDENT)) -> LIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LETOP LIDENT LPAREN TYPE LIDENT RPAREN WITH
##
## Concrete syntax: let* lident ( type lident ) with
##
## Ends in an error in state: 1156.
##
## strict_binding -> LPAREN TYPE nonempty_list(mkrhs(LIDENT)) RPAREN . fun_binding [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CLASS ANDOP AND ]
##
## The known suffix of the stack is as follows:
## LPAREN TYPE nonempty_list(mkrhs(LIDENT)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FUN LABEL WITH
##
## Concrete syntax: fun ~label: with
##
## Ends in an error in state: 1157.
##
## labeled_simple_pattern -> LABEL . simple_pattern [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
##
## The known suffix of the stack is as follows:
## LABEL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LETOP LIDENT EQUAL WITH
##
## Concrete syntax: let* lident = with
##
## Ends in an error in state: 1159.
##
## strict_binding -> EQUAL . seq_expr [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CLASS ANDOP AND ]
##
## The known suffix of the stack is as follows:
## EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT COMMA UIDENT COMMA WITH
##
## Concrete syntax: UIdent , UIdent , with
##
## Ends in an error in state: 1162.
##
## reversed_separated_nontrivial_llist(COMMA,expr) -> reversed_separated_nontrivial_llist(COMMA,expr) COMMA . expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## reversed_separated_nontrivial_llist(COMMA,expr) COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: BACKQUOTE LIDENT WHILE
##
## Concrete syntax: ` lident while
##
## Ends in an error in state: 1163.
##
## expr -> name_tag . simple_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> name_tag . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## name_tag
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: BACKQUOTE LIDENT CHAR UIDENT
##
## Concrete syntax: ` lident 'a' UIdent
##
## Ends in an error in state: 1164.
##
## expr -> name_tag simple_expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LPAREN seq_expr RPAREN [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LBRACE seq_expr RBRACE [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LBRACKET seq_expr RBRACKET [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LPAREN seq_expr error [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LBRACE seq_expr error [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LBRACKET seq_expr error [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT label_longident [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . HASH LIDENT [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . HASHOP simple_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## name_tag simple_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_expression: LET LIDENT VAL
##
## Concrete syntax: let lident val
##
## Ends in an error in state: 1169.
##
## expr -> let_bindings(ext) . IN seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## let_bindings(ext) -> let_bindings(ext) . and_let_binding [ IN AND ]
##
## The known suffix of the stack is as follows:
## let_bindings(ext)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1152, spurious reduction of production let_binding_body -> val_ident
## In state 1640, spurious reduction of production list(post_item_attribute) ->
## In state 1641, spurious reduction of production let_bindings(ext) -> LET ext list(attribute) rec_flag let_binding_body list(post_item_attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LET LIDENT IN WITH
##
## Concrete syntax: let lident in with
##
## Ends in an error in state: 1170.
##
## expr -> let_bindings(ext) IN . seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## let_bindings(ext) IN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UNDERSCORE WHILE
##
## Concrete syntax: _ while
##
## Ends in an error in state: 1172.
##
## expr -> expr . INFIXOP0 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## seq_expr -> expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## seq_expr -> expr . SEMI [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## seq_expr -> expr . SEMI seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## seq_expr -> expr . SEMI PERCENT attr_id seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT STAR WITH
##
## Concrete syntax: UIdent * with
##
## Ends in an error in state: 1173.
##
## expr -> expr STAR . expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr STAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT STAR UNDERSCORE WHILE
##
## Concrete syntax: UIdent * _ while
##
## Ends in an error in state: 1174.
##
## expr -> expr . INFIXOP0 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr STAR expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr STAR expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT INFIXOP4 WITH
##
## Concrete syntax: UIdent ** with
##
## Ends in an error in state: 1175.
##
## expr -> expr INFIXOP4 . expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr INFIXOP4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT INFIXOP4 UNDERSCORE WHILE
##
## Concrete syntax: UIdent ** _ while
##
## Ends in an error in state: 1176.
##
## expr -> expr . INFIXOP0 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr INFIXOP4 expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr INFIXOP4 expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FALSE WHILE
##
## Concrete syntax: false while
##
## Ends in an error in state: 1178.
##
## expr -> constr_longident . simple_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> constr_longident . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## constr_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT CHAR UIDENT
##
## Concrete syntax: UIdent 'a' UIdent
##
## Ends in an error in state: 1179.
##
## expr -> constr_longident simple_expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LPAREN seq_expr RPAREN [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LBRACE seq_expr RBRACE [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LBRACKET seq_expr RBRACKET [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LPAREN seq_expr error [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LBRACE seq_expr error [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LBRACKET seq_expr error [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT label_longident [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . HASH LIDENT [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . HASHOP simple_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## constr_longident simple_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: PLUS WITH
##
## Concrete syntax: + with
##
## Ends in an error in state: 1180.
##
## expr -> additive . expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## additive
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT SEMI WHEN
##
## Concrete syntax: UIdent ; when
##
## Ends in an error in state: 1182.
##
## seq_expr -> expr SEMI . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## seq_expr -> expr SEMI . seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## seq_expr -> expr SEMI . PERCENT attr_id seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr SEMI
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT SEMI PERCENT UNDERSCORE
##
## Concrete syntax: UIdent ; % _
##
## Ends in an error in state: 1183.
##
## seq_expr -> expr SEMI PERCENT . attr_id seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr SEMI PERCENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT SEMI PERCENT AND VIRTUAL
##
## Concrete syntax: UIdent ; % and virtual
##
## Ends in an error in state: 1184.
##
## seq_expr -> expr SEMI PERCENT attr_id . seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr SEMI PERCENT attr_id
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT PLUSEQ WITH
##
## Concrete syntax: UIdent += with
##
## Ends in an error in state: 1187.
##
## expr -> expr PLUSEQ . expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr PLUSEQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT PLUSEQ UNDERSCORE WHILE
##
## Concrete syntax: UIdent += _ while
##
## Ends in an error in state: 1188.
##
## expr -> expr . INFIXOP0 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr PLUSEQ expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr PLUSEQ expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT PERCENT WITH
##
## Concrete syntax: UIdent % with
##
## Ends in an error in state: 1189.
##
## expr -> expr PERCENT . expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr PERCENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT PERCENT UNDERSCORE WHILE
##
## Concrete syntax: UIdent % _ while
##
## Ends in an error in state: 1190.
##
## expr -> expr . INFIXOP0 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr PERCENT expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr PERCENT expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT INFIXOP3 WITH
##
## Concrete syntax: UIdent land with
##
## Ends in an error in state: 1191.
##
## expr -> expr INFIXOP3 . expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr INFIXOP3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT INFIXOP3 UNDERSCORE WHILE
##
## Concrete syntax: UIdent land _ while
##
## Ends in an error in state: 1192.
##
## expr -> expr . INFIXOP0 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr INFIXOP3 expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr INFIXOP3 expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT PLUSDOT WITH
##
## Concrete syntax: UIdent +. with
##
## Ends in an error in state: 1193.
##
## expr -> expr PLUSDOT . expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr PLUSDOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT PLUSDOT UNDERSCORE WHILE
##
## Concrete syntax: UIdent +. _ while
##
## Ends in an error in state: 1194.
##
## expr -> expr . INFIXOP0 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr PLUSDOT expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr PLUSDOT expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT PLUS WITH
##
## Concrete syntax: UIdent + with
##
## Ends in an error in state: 1195.
##
## expr -> expr PLUS . expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr PLUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT PLUS UNDERSCORE WHILE
##
## Concrete syntax: UIdent + _ while
##
## Ends in an error in state: 1196.
##
## expr -> expr . INFIXOP0 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr PLUS expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr PLUS expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT OR WITH
##
## Concrete syntax: UIdent or with
##
## Ends in an error in state: 1197.
##
## expr -> expr OR . expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr OR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT OR UNDERSCORE WHILE
##
## Concrete syntax: UIdent or _ while
##
## Ends in an error in state: 1198.
##
## expr -> expr . INFIXOP0 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr OR expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr OR expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT MINUSDOT WITH
##
## Concrete syntax: UIdent -. with
##
## Ends in an error in state: 1199.
##
## expr -> expr MINUSDOT . expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr MINUSDOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT MINUSDOT UNDERSCORE WHILE
##
## Concrete syntax: UIdent -. _ while
##
## Ends in an error in state: 1200.
##
## expr -> expr . INFIXOP0 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr MINUSDOT expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr MINUSDOT expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT MINUS WITH
##
## Concrete syntax: UIdent - with
##
## Ends in an error in state: 1201.
##
## expr -> expr MINUS . expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr MINUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT MINUS UNDERSCORE WHILE
##
## Concrete syntax: UIdent - _ while
##
## Ends in an error in state: 1202.
##
## expr -> expr . INFIXOP0 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr MINUS expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr MINUS expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT LESS WITH
##
## Concrete syntax: UIdent < with
##
## Ends in an error in state: 1203.
##
## expr -> expr LESS . expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr LESS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT LESS UNDERSCORE WHILE
##
## Concrete syntax: UIdent < _ while
##
## Ends in an error in state: 1204.
##
## expr -> expr . INFIXOP0 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr LESS expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr LESS expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT INFIXOP2 WITH
##
## Concrete syntax: UIdent +! with
##
## Ends in an error in state: 1205.
##
## expr -> expr INFIXOP2 . expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr INFIXOP2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT INFIXOP2 UNDERSCORE WHILE
##
## Concrete syntax: UIdent +! _ while
##
## Ends in an error in state: 1206.
##
## expr -> expr . INFIXOP0 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr INFIXOP2 expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr INFIXOP2 expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT INFIXOP1 WITH
##
## Concrete syntax: UIdent @ with
##
## Ends in an error in state: 1207.
##
## expr -> expr INFIXOP1 . expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr INFIXOP1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT INFIXOP1 UNDERSCORE WHILE
##
## Concrete syntax: UIdent @ _ while
##
## Ends in an error in state: 1208.
##
## expr -> expr . INFIXOP0 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr INFIXOP1 expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr INFIXOP1 expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT COLONCOLON WITH
##
## Concrete syntax: UIdent :: with
##
## Ends in an error in state: 1209.
##
## expr -> expr COLONCOLON . expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr COLONCOLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT COLONCOLON UNDERSCORE WHILE
##
## Concrete syntax: UIdent :: _ while
##
## Ends in an error in state: 1210.
##
## expr -> expr . INFIXOP0 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr COLONCOLON expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr COLONCOLON expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT INFIXOP0 WITH
##
## Concrete syntax: UIdent != with
##
## Ends in an error in state: 1211.
##
## expr -> expr INFIXOP0 . expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr INFIXOP0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT INFIXOP0 UNDERSCORE WHILE
##
## Concrete syntax: UIdent != _ while
##
## Ends in an error in state: 1212.
##
## expr -> expr . INFIXOP0 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr INFIXOP0 expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr INFIXOP0 expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT GREATER WITH
##
## Concrete syntax: UIdent > with
##
## Ends in an error in state: 1213.
##
## expr -> expr GREATER . expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr GREATER
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT GREATER UNDERSCORE WHILE
##
## Concrete syntax: UIdent > _ while
##
## Ends in an error in state: 1214.
##
## expr -> expr . INFIXOP0 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr GREATER expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr GREATER expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT EQUAL WITH
##
## Concrete syntax: UIdent = with
##
## Ends in an error in state: 1215.
##
## expr -> expr EQUAL . expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT EQUAL UNDERSCORE WHILE
##
## Concrete syntax: UIdent = _ while
##
## Ends in an error in state: 1216.
##
## expr -> expr . INFIXOP0 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr EQUAL expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr EQUAL expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT BARBAR WITH
##
## Concrete syntax: UIdent || with
##
## Ends in an error in state: 1217.
##
## expr -> expr BARBAR . expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr BARBAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT BARBAR UNDERSCORE WHILE
##
## Concrete syntax: UIdent || _ while
##
## Ends in an error in state: 1218.
##
## expr -> expr . INFIXOP0 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr BARBAR expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr BARBAR expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT AMPERSAND WITH
##
## Concrete syntax: UIdent & with
##
## Ends in an error in state: 1219.
##
## expr -> expr AMPERSAND . expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr AMPERSAND
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT AMPERSAND UNDERSCORE WHILE
##
## Concrete syntax: UIdent & _ while
##
## Ends in an error in state: 1220.
##
## expr -> expr . INFIXOP0 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr AMPERSAND expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr AMPERSAND expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT AMPERAMPER WITH
##
## Concrete syntax: UIdent && with
##
## Ends in an error in state: 1221.
##
## expr -> expr AMPERAMPER . expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr AMPERAMPER
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT AMPERAMPER UNDERSCORE WHILE
##
## Concrete syntax: UIdent && _ while
##
## Ends in an error in state: 1222.
##
## expr -> expr . INFIXOP0 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr AMPERAMPER expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr AMPERAMPER expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT COMMA WITH
##
## Concrete syntax: UIdent , with
##
## Ends in an error in state: 1223.
##
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr COMMA . expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT COMMA UNDERSCORE WHILE
##
## Concrete syntax: UIdent , _ while
##
## Ends in an error in state: 1224.
##
## expr -> expr . INFIXOP0 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr COMMA expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr COMMA expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT COLONEQUAL WITH
##
## Concrete syntax: UIdent := with
##
## Ends in an error in state: 1225.
##
## expr -> expr COLONEQUAL . expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr COLONEQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT COLONEQUAL UNDERSCORE WHILE
##
## Concrete syntax: UIdent := _ while
##
## Ends in an error in state: 1226.
##
## expr -> expr . INFIXOP0 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr COLONEQUAL expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## expr COLONEQUAL expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT COMMA UIDENT COMMA UNDERSCORE WHILE
##
## Concrete syntax: UIdent , UIdent , _ while
##
## Ends in an error in state: 1228.
##
## expr -> expr . INFIXOP0 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> reversed_separated_nontrivial_llist(COMMA,expr) COMMA expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## reversed_separated_nontrivial_llist(COMMA,expr) COMMA expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LPAREN UIDENT COLONGREATER WITH
##
## Concrete syntax: ( UIdent :> with
##
## Ends in an error in state: 1229.
##
## type_constraint -> COLONGREATER . core_type [ RPAREN EQUAL ]
## type_constraint -> COLONGREATER . error [ RPAREN EQUAL ]
##
## The known suffix of the stack is as follows:
## COLONGREATER
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LPAREN UIDENT COLONGREATER QUOTED_STRING_EXPR WITH
##
## Concrete syntax: ( UIdent :> {%hello|world|} with
##
## Ends in an error in state: 1231.
##
## core_type -> core_type . attribute [ RPAREN LBRACKETAT EQUAL ]
## type_constraint -> COLONGREATER core_type . [ RPAREN EQUAL ]
##
## The known suffix of the stack is as follows:
## COLONGREATER core_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 358, spurious reduction of production tuple_type -> atomic_type
## In state 344, spurious reduction of production function_type -> tuple_type
## In state 374, spurious reduction of production alias_type -> function_type
## In state 384, spurious reduction of production core_type -> alias_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LPAREN UIDENT COLON WITH
##
## Concrete syntax: ( UIdent : with
##
## Ends in an error in state: 1232.
##
## type_constraint -> COLON . core_type [ RPAREN EQUAL ]
## type_constraint -> COLON . core_type COLONGREATER core_type [ RPAREN EQUAL ]
## type_constraint -> COLON . error [ RPAREN EQUAL ]
##
## The known suffix of the stack is as follows:
## COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LPAREN UIDENT COLON QUOTED_STRING_EXPR WITH
##
## Concrete syntax: ( UIdent : {%hello|world|} with
##
## Ends in an error in state: 1234.
##
## core_type -> core_type . attribute [ RPAREN LBRACKETAT EQUAL COLONGREATER ]
## type_constraint -> COLON core_type . [ RPAREN EQUAL ]
## type_constraint -> COLON core_type . COLONGREATER core_type [ RPAREN EQUAL ]
##
## The known suffix of the stack is as follows:
## COLON core_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 358, spurious reduction of production tuple_type -> atomic_type
## In state 344, spurious reduction of production function_type -> tuple_type
## In state 374, spurious reduction of production alias_type -> function_type
## In state 384, spurious reduction of production core_type -> alias_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LPAREN UIDENT COLON QUOTED_STRING_EXPR COLONGREATER WITH
##
## Concrete syntax: ( UIdent : {%hello|world|} :> with
##
## Ends in an error in state: 1235.
##
## type_constraint -> COLON core_type COLONGREATER . core_type [ RPAREN EQUAL ]
##
## The known suffix of the stack is as follows:
## COLON core_type COLONGREATER
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LPAREN UIDENT COLON QUOTED_STRING_EXPR COLONGREATER QUOTED_STRING_EXPR WITH
##
## Concrete syntax: ( UIdent : {%hello|world|} :> {%hello|world|} with
##
## Ends in an error in state: 1236.
##
## core_type -> core_type . attribute [ RPAREN LBRACKETAT EQUAL ]
## type_constraint -> COLON core_type COLONGREATER core_type . [ RPAREN EQUAL ]
##
## The known suffix of the stack is as follows:
## COLON core_type COLONGREATER core_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 358, spurious reduction of production tuple_type -> atomic_type
## In state 344, spurious reduction of production function_type -> tuple_type
## In state 374, spurious reduction of production alias_type -> function_type
## In state 384, spurious reduction of production core_type -> alias_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LETOP LIDENT FALSE COLON QUOTED_STRING_EXPR RPAREN
##
## Concrete syntax: let* lident false : {%hello|world|} )
##
## Ends in an error in state: 1237.
##
## fun_binding -> type_constraint . EQUAL seq_expr [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CLASS ANDOP AND ]
##
## The known suffix of the stack is as follows:
## type_constraint
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 358, spurious reduction of production tuple_type -> atomic_type
## In state 344, spurious reduction of production function_type -> tuple_type
## In state 374, spurious reduction of production alias_type -> function_type
## In state 384, spurious reduction of production core_type -> alias_type
## In state 1234, spurious reduction of production type_constraint -> COLON core_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LETOP LIDENT FALSE COLON QUOTED_STRING_EXPR EQUAL WITH
##
## Concrete syntax: let* lident false : {%hello|world|} = with
##
## Ends in an error in state: 1238.
##
## fun_binding -> type_constraint EQUAL . seq_expr [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CLASS ANDOP AND ]
##
## The known suffix of the stack is as follows:
## type_constraint EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LETOP LIDENT FALSE WHILE
##
## Concrete syntax: let* lident false while
##
## Ends in an error in state: 1242.
##
## strict_binding -> labeled_simple_pattern . fun_binding [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CLASS ANDOP AND ]
##
## The known suffix of the stack is as follows:
## labeled_simple_pattern
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LET LIDENT COLON WITH
##
## Concrete syntax: let lident : with
##
## Ends in an error in state: 1245.
##
## let_binding_body_no_punning -> val_ident COLON . reversed_nonempty_llist(typevar) DOT core_type EQUAL seq_expr [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CLASS AND ]
## let_binding_body_no_punning -> val_ident COLON . TYPE nonempty_list(mkrhs(LIDENT)) DOT core_type EQUAL seq_expr [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CLASS AND ]
## type_constraint -> COLON . core_type [ EQUAL ]
## type_constraint -> COLON . core_type COLONGREATER core_type [ EQUAL ]
## type_constraint -> COLON . error [ EQUAL ]
##
## The known suffix of the stack is as follows:
## val_ident COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LET LIDENT COLON TYPE WITH
##
## Concrete syntax: let lident : type with
##
## Ends in an error in state: 1246.
##
## let_binding_body_no_punning -> val_ident COLON TYPE . nonempty_list(mkrhs(LIDENT)) DOT core_type EQUAL seq_expr [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## val_ident COLON TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LET LIDENT COLON TYPE LIDENT RPAREN
##
## Concrete syntax: let lident : type lident )
##
## Ends in an error in state: 1247.
##
## let_binding_body_no_punning -> val_ident COLON TYPE nonempty_list(mkrhs(LIDENT)) . DOT core_type EQUAL seq_expr [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## val_ident COLON TYPE nonempty_list(mkrhs(LIDENT))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 750, spurious reduction of production nonempty_list(mkrhs(LIDENT)) -> LIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LET LIDENT COLON TYPE LIDENT DOT WITH
##
## Concrete syntax: let lident : type lident . with
##
## Ends in an error in state: 1248.
##
## let_binding_body_no_punning -> val_ident COLON TYPE nonempty_list(mkrhs(LIDENT)) DOT . core_type EQUAL seq_expr [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## val_ident COLON TYPE nonempty_list(mkrhs(LIDENT)) DOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LET LIDENT COLON TYPE LIDENT DOT QUOTED_STRING_EXPR WITH
##
## Concrete syntax: let lident : type lident . {%hello|world|} with
##
## Ends in an error in state: 1249.
##
## core_type -> core_type . attribute [ LBRACKETAT EQUAL ]
## let_binding_body_no_punning -> val_ident COLON TYPE nonempty_list(mkrhs(LIDENT)) DOT core_type . EQUAL seq_expr [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## val_ident COLON TYPE nonempty_list(mkrhs(LIDENT)) DOT core_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 358, spurious reduction of production tuple_type -> atomic_type
## In state 344, spurious reduction of production function_type -> tuple_type
## In state 374, spurious reduction of production alias_type -> function_type
## In state 384, spurious reduction of production core_type -> alias_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LET LIDENT COLON TYPE LIDENT DOT QUOTED_STRING_EXPR EQUAL WITH
##
## Concrete syntax: let lident : type lident . {%hello|world|} = with
##
## Ends in an error in state: 1250.
##
## let_binding_body_no_punning -> val_ident COLON TYPE nonempty_list(mkrhs(LIDENT)) DOT core_type EQUAL . seq_expr [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## val_ident COLON TYPE nonempty_list(mkrhs(LIDENT)) DOT core_type EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LET LIDENT COLON QUOTE LIDENT QUOTE LIDENT WITH
##
## Concrete syntax: let lident : ' lident ' lident with
##
## Ends in an error in state: 1252.
##
## let_binding_body_no_punning -> val_ident COLON reversed_nonempty_llist(typevar) . DOT core_type EQUAL seq_expr [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CLASS AND ]
## reversed_nonempty_llist(typevar) -> reversed_nonempty_llist(typevar) . QUOTE ident [ QUOTE DOT ]
##
## The known suffix of the stack is as follows:
## val_ident COLON reversed_nonempty_llist(typevar)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: LESS LIDENT COLON QUOTE LIDENT QUOTE WITH
##
## Concrete syntax: < lident : ' lident ' with
##
## Ends in an error in state: 1253.
##
## reversed_nonempty_llist(typevar) -> reversed_nonempty_llist(typevar) QUOTE . ident [ QUOTE DOT ]
##
## The known suffix of the stack is as follows:
## reversed_nonempty_llist(typevar) QUOTE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LET LIDENT COLON QUOTE LIDENT DOT WITH
##
## Concrete syntax: let lident : ' lident . with
##
## Ends in an error in state: 1255.
##
## let_binding_body_no_punning -> val_ident COLON reversed_nonempty_llist(typevar) DOT . core_type EQUAL seq_expr [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## val_ident COLON reversed_nonempty_llist(typevar) DOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LET LIDENT COLON QUOTE LIDENT DOT QUOTED_STRING_EXPR WITH
##
## Concrete syntax: let lident : ' lident . {%hello|world|} with
##
## Ends in an error in state: 1256.
##
## core_type -> core_type . attribute [ LBRACKETAT EQUAL ]
## let_binding_body_no_punning -> val_ident COLON reversed_nonempty_llist(typevar) DOT core_type . EQUAL seq_expr [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## val_ident COLON reversed_nonempty_llist(typevar) DOT core_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 358, spurious reduction of production tuple_type -> atomic_type
## In state 344, spurious reduction of production function_type -> tuple_type
## In state 374, spurious reduction of production alias_type -> function_type
## In state 384, spurious reduction of production core_type -> alias_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LET LIDENT COLON QUOTE LIDENT DOT QUOTED_STRING_EXPR EQUAL WITH
##
## Concrete syntax: let lident : ' lident . {%hello|world|} = with
##
## Ends in an error in state: 1257.
##
## let_binding_body_no_punning -> val_ident COLON reversed_nonempty_llist(typevar) DOT core_type EQUAL . seq_expr [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## val_ident COLON reversed_nonempty_llist(typevar) DOT core_type EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LET LIDENT COLON QUOTED_STRING_EXPR RPAREN
##
## Concrete syntax: let lident : {%hello|world|} )
##
## Ends in an error in state: 1259.
##
## let_binding_body_no_punning -> val_ident type_constraint . EQUAL seq_expr [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## val_ident type_constraint
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 358, spurious reduction of production tuple_type -> atomic_type
## In state 344, spurious reduction of production function_type -> tuple_type
## In state 374, spurious reduction of production alias_type -> function_type
## In state 384, spurious reduction of production core_type -> alias_type
## In state 1234, spurious reduction of production type_constraint -> COLON core_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LET LIDENT COLON QUOTED_STRING_EXPR EQUAL WITH
##
## Concrete syntax: let lident : {%hello|world|} = with
##
## Ends in an error in state: 1260.
##
## let_binding_body_no_punning -> val_ident type_constraint EQUAL . seq_expr [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## val_ident type_constraint EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LET FALSE WHEN
##
## Concrete syntax: let false when
##
## Ends in an error in state: 1263.
##
## let_binding_body_no_punning -> simple_pattern_not_ident . COLON core_type EQUAL seq_expr [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CLASS AND ]
## simple_pattern -> simple_pattern_not_ident . [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
##
## The known suffix of the stack is as follows:
## simple_pattern_not_ident
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 914, spurious reduction of production simple_pattern_not_ident -> constr_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LET FALSE COLON WITH
##
## Concrete syntax: let false : with
##
## Ends in an error in state: 1264.
##
## let_binding_body_no_punning -> simple_pattern_not_ident COLON . core_type EQUAL seq_expr [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## simple_pattern_not_ident COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LET FALSE COLON QUOTED_STRING_EXPR WITH
##
## Concrete syntax: let false : {%hello|world|} with
##
## Ends in an error in state: 1265.
##
## core_type -> core_type . attribute [ LBRACKETAT EQUAL ]
## let_binding_body_no_punning -> simple_pattern_not_ident COLON core_type . EQUAL seq_expr [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## simple_pattern_not_ident COLON core_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 358, spurious reduction of production tuple_type -> atomic_type
## In state 344, spurious reduction of production function_type -> tuple_type
## In state 374, spurious reduction of production alias_type -> function_type
## In state 384, spurious reduction of production core_type -> alias_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LET FALSE COLON QUOTED_STRING_EXPR EQUAL WITH
##
## Concrete syntax: let false : {%hello|world|} = with
##
## Ends in an error in state: 1266.
##
## let_binding_body_no_punning -> simple_pattern_not_ident COLON core_type EQUAL . seq_expr [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## simple_pattern_not_ident COLON core_type EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LET FALSE QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: let false {%hello|world|} while
##
## Ends in an error in state: 1268.
##
## let_binding_body_no_punning -> pattern_no_exn . EQUAL seq_expr [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CLASS AND ]
## pattern_comma_list(pattern_no_exn) -> pattern_no_exn . COMMA pattern [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern_comma_list(pattern_no_exn) -> pattern_no_exn . COMMA error [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern_no_exn -> pattern_no_exn . COLONCOLON pattern [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern_no_exn -> pattern_no_exn . attribute [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern_no_exn -> pattern_no_exn . AS val_ident [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern_no_exn -> pattern_no_exn . AS error [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern_no_exn -> pattern_no_exn . COLONCOLON error [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern_no_exn -> pattern_no_exn . BAR pattern [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern_no_exn -> pattern_no_exn . BAR error [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
##
## The known suffix of the stack is as follows:
## pattern_no_exn
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LET FALSE EQUAL WITH
##
## Concrete syntax: let false = with
##
## Ends in an error in state: 1269.
##
## let_binding_body_no_punning -> pattern_no_exn EQUAL . seq_expr [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## pattern_no_exn EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LETOP LIDENT COMMA WITH
##
## Concrete syntax: let* lident , with
##
## Ends in an error in state: 1271.
##
## pattern_comma_list(pattern_no_exn) -> pattern_no_exn COMMA . pattern [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern_comma_list(pattern_no_exn) -> pattern_no_exn COMMA . error [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
##
## The known suffix of the stack is as follows:
## pattern_no_exn COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LETOP LIDENT COMMA QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: let* lident , {%hello|world|} while
##
## Ends in an error in state: 1273.
##
## pattern -> pattern . COLONCOLON pattern [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern -> pattern . attribute [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern -> pattern . AS val_ident [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern -> pattern . AS error [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern -> pattern . COLONCOLON error [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern -> pattern . BAR pattern [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern -> pattern . BAR error [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern_comma_list(pattern) -> pattern . COMMA pattern [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern_comma_list(pattern) -> pattern . COMMA error [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern_comma_list(pattern_no_exn) -> pattern_no_exn COMMA pattern . [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
##
## The known suffix of the stack is as follows:
## pattern_no_exn COMMA pattern
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LETOP LIDENT COLONCOLON WITH
##
## Concrete syntax: let* lident :: with
##
## Ends in an error in state: 1274.
##
## pattern_no_exn -> pattern_no_exn COLONCOLON . pattern [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern_no_exn -> pattern_no_exn COLONCOLON . error [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
##
## The known suffix of the stack is as follows:
## pattern_no_exn COLONCOLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LETOP LIDENT COLONCOLON QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: let* lident :: {%hello|world|} while
##
## Ends in an error in state: 1276.
##
## pattern -> pattern . COLONCOLON pattern [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern -> pattern . attribute [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern -> pattern . AS val_ident [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern -> pattern . AS error [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern -> pattern . COLONCOLON error [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern -> pattern . BAR pattern [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern -> pattern . BAR error [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern_comma_list(pattern) -> pattern . COMMA pattern [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern_comma_list(pattern) -> pattern . COMMA error [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern_no_exn -> pattern_no_exn COLONCOLON pattern . [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
##
## The known suffix of the stack is as follows:
## pattern_no_exn COLONCOLON pattern
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LETOP LIDENT BAR WITH
##
## Concrete syntax: let* lident | with
##
## Ends in an error in state: 1277.
##
## pattern_no_exn -> pattern_no_exn BAR . pattern [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern_no_exn -> pattern_no_exn BAR . error [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
##
## The known suffix of the stack is as follows:
## pattern_no_exn BAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LETOP LIDENT BAR QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: let* lident | {%hello|world|} while
##
## Ends in an error in state: 1279.
##
## pattern -> pattern . COLONCOLON pattern [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern -> pattern . attribute [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern -> pattern . AS val_ident [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern -> pattern . AS error [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern -> pattern . COLONCOLON error [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern -> pattern . BAR pattern [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern -> pattern . BAR error [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern_comma_list(pattern) -> pattern . COMMA pattern [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern_comma_list(pattern) -> pattern . COMMA error [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern_no_exn -> pattern_no_exn BAR pattern . [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
##
## The known suffix of the stack is as follows:
## pattern_no_exn BAR pattern
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LETOP LIDENT AS WITH
##
## Concrete syntax: let* lident as with
##
## Ends in an error in state: 1280.
##
## pattern_no_exn -> pattern_no_exn AS . val_ident [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern_no_exn -> pattern_no_exn AS . error [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
##
## The known suffix of the stack is as follows:
## pattern_no_exn AS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LETOP LIDENT COMMA FALSE COMMA WITH
##
## Concrete syntax: let* lident , false , with
##
## Ends in an error in state: 1286.
##
## pattern_comma_list(pattern_no_exn) -> pattern_comma_list(pattern_no_exn) COMMA . pattern [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
##
## The known suffix of the stack is as follows:
## pattern_comma_list(pattern_no_exn) COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LETOP LIDENT COMMA FALSE COMMA QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: let* lident , false , {%hello|world|} while
##
## Ends in an error in state: 1287.
##
## pattern -> pattern . COLONCOLON pattern [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern -> pattern . attribute [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern -> pattern . AS val_ident [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern -> pattern . AS error [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern -> pattern . COLONCOLON error [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern -> pattern . BAR pattern [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern -> pattern . BAR error [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern_comma_list(pattern) -> pattern . COMMA pattern [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern_comma_list(pattern) -> pattern . COMMA error [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern_comma_list(pattern_no_exn) -> pattern_comma_list(pattern_no_exn) COMMA pattern . [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
##
## The known suffix of the stack is as follows:
## pattern_comma_list(pattern_no_exn) COMMA pattern
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LET LIDENT AND FALSE EQUAL UIDENT TO
##
## Concrete syntax: let lident and false = UIdent to
##
## Ends in an error in state: 1289.
##
## and_let_binding -> AND list(attribute) let_binding_body . list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## AND list(attribute) let_binding_body
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 943, spurious reduction of production constr_longident -> mod_longident
## In state 1178, spurious reduction of production simple_expr -> constr_longident
## In state 1032, spurious reduction of production expr -> simple_expr
## In state 1172, spurious reduction of production seq_expr -> expr
## In state 1270, spurious reduction of production let_binding_body_no_punning -> pattern_no_exn EQUAL seq_expr
## In state 1288, spurious reduction of production let_binding_body -> let_binding_body_no_punning
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: QUOTED_STRING_ITEM LBRACKETATAT UNDERSCORE
##
## Concrete syntax: {%%hello|world|} [@@ _
##
## Ends in an error in state: 1290.
##
## post_item_attribute -> LBRACKETATAT . attr_id payload RBRACKET [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## LBRACKETATAT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: QUOTED_STRING_ITEM LBRACKETATAT AND VIRTUAL
##
## Concrete syntax: {%%hello|world|} [@@ and virtual
##
## Ends in an error in state: 1291.
##
## post_item_attribute -> LBRACKETATAT attr_id . payload RBRACKET [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## LBRACKETATAT attr_id
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKETATATAT AND QUESTION WITH
##
## Concrete syntax: [@@@ and ? with
##
## Ends in an error in state: 1292.
##
## payload -> QUESTION . pattern [ RBRACKET ]
## payload -> QUESTION . pattern WHEN seq_expr [ RBRACKET ]
##
## The known suffix of the stack is as follows:
## QUESTION
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKETATATAT AND QUESTION QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: [@@@ and ? {%hello|world|} while
##
## Ends in an error in state: 1293.
##
## pattern -> pattern . COLONCOLON pattern [ WHEN RBRACKET LBRACKETAT COMMA COLONCOLON BAR AS ]
## pattern -> pattern . attribute [ WHEN RBRACKET LBRACKETAT COMMA COLONCOLON BAR AS ]
## pattern -> pattern . AS val_ident [ WHEN RBRACKET LBRACKETAT COMMA COLONCOLON BAR AS ]
## pattern -> pattern . AS error [ WHEN RBRACKET LBRACKETAT COMMA COLONCOLON BAR AS ]
## pattern -> pattern . COLONCOLON error [ WHEN RBRACKET LBRACKETAT COMMA COLONCOLON BAR AS ]
## pattern -> pattern . BAR pattern [ WHEN RBRACKET LBRACKETAT COMMA COLONCOLON BAR AS ]
## pattern -> pattern . BAR error [ WHEN RBRACKET LBRACKETAT COMMA COLONCOLON BAR AS ]
## pattern_comma_list(pattern) -> pattern . COMMA pattern [ WHEN RBRACKET LBRACKETAT COMMA COLONCOLON BAR AS ]
## pattern_comma_list(pattern) -> pattern . COMMA error [ WHEN RBRACKET LBRACKETAT COMMA COLONCOLON BAR AS ]
## payload -> QUESTION pattern . [ RBRACKET ]
## payload -> QUESTION pattern . WHEN seq_expr [ RBRACKET ]
##
## The known suffix of the stack is as follows:
## QUESTION pattern
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKETATATAT AND QUESTION FALSE WHEN WITH
##
## Concrete syntax: [@@@ and ? false when with
##
## Ends in an error in state: 1294.
##
## payload -> QUESTION pattern WHEN . seq_expr [ RBRACKET ]
##
## The known suffix of the stack is as follows:
## QUESTION pattern WHEN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: MODULE WITH
##
## Concrete syntax: module with
##
## Ends in an error in state: 1296.
##
## module_type_declaration -> MODULE . TYPE ext list(attribute) ident option(preceded(EQUAL,module_type)) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
## structure_item -> MODULE . ext list(attribute) module_name module_binding_body list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
## structure_item -> MODULE . ext list(attribute) REC module_name module_binding_body list(post_item_attribute) list(and_module_binding) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## MODULE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: MODULE TYPE WITH
##
## Concrete syntax: module type with
##
## Ends in an error in state: 1297.
##
## module_type_declaration -> MODULE TYPE . ext list(attribute) ident option(preceded(EQUAL,module_type)) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## MODULE TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: MODULE TYPE PERCENT AND WHILE
##
## Concrete syntax: module type % and while
##
## Ends in an error in state: 1298.
##
## module_type_declaration -> MODULE TYPE ext . list(attribute) ident option(preceded(EQUAL,module_type)) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## MODULE TYPE ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: MODULE TYPE LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: module type [@ and ] while
##
## Ends in an error in state: 1299.
##
## module_type_declaration -> MODULE TYPE ext list(attribute) . ident option(preceded(EQUAL,module_type)) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## MODULE TYPE ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: MODULE TYPE LIDENT WITH
##
## Concrete syntax: module type lident with
##
## Ends in an error in state: 1300.
##
## module_type_declaration -> MODULE TYPE ext list(attribute) ident . option(preceded(EQUAL,module_type)) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## MODULE TYPE ext list(attribute) ident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: MODULE TYPE LIDENT EQUAL WITH
##
## Concrete syntax: module type lident = with
##
## Ends in an error in state: 1301.
##
## option(preceded(EQUAL,module_type)) -> EQUAL . module_type [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: MODULE TYPE LIDENT EQUAL QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: module type lident = {%hello|world|} while
##
## Ends in an error in state: 1302.
##
## module_type -> module_type . attribute [ WITH VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
## module_type -> module_type . MINUSGREATER module_type [ WITH VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
## module_type -> module_type . WITH reversed_separated_nonempty_llist(AND,with_constraint) [ WITH VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
## option(preceded(EQUAL,module_type)) -> EQUAL module_type . [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## EQUAL module_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: QUOTED_STRING_ITEM LBRACKETATAT AND RBRACKET WITH
##
## Concrete syntax: {%%hello|world|} [@@ and ] with
##
## Ends in an error in state: 1304.
##
## list(post_item_attribute) -> post_item_attribute . list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## post_item_attribute
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: MODULE PERCENT AND WHILE
##
## Concrete syntax: module % and while
##
## Ends in an error in state: 1307.
##
## structure_item -> MODULE ext . list(attribute) module_name module_binding_body list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
## structure_item -> MODULE ext . list(attribute) REC module_name module_binding_body list(post_item_attribute) list(and_module_binding) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## MODULE ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: MODULE LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: module [@ and ] while
##
## Ends in an error in state: 1308.
##
## structure_item -> MODULE ext list(attribute) . module_name module_binding_body list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
## structure_item -> MODULE ext list(attribute) . REC module_name module_binding_body list(post_item_attribute) list(and_module_binding) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## MODULE ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: MODULE REC WITH
##
## Concrete syntax: module rec with
##
## Ends in an error in state: 1309.
##
## structure_item -> MODULE ext list(attribute) REC . module_name module_binding_body list(post_item_attribute) list(and_module_binding) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## MODULE ext list(attribute) REC
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: MODULE REC UIDENT WITH
##
## Concrete syntax: module rec UIdent with
##
## Ends in an error in state: 1310.
##
## structure_item -> MODULE ext list(attribute) REC module_name . module_binding_body list(post_item_attribute) list(and_module_binding) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## MODULE ext list(attribute) REC module_name
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: MODULE UIDENT EQUAL WITH
##
## Concrete syntax: module UIdent = with
##
## Ends in an error in state: 1311.
##
## module_binding_body -> EQUAL . module_expr [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: MODULE UIDENT EQUAL QUOTED_STRING_EXPR WITH
##
## Concrete syntax: module UIdent = {%hello|world|} with
##
## Ends in an error in state: 1312.
##
## module_binding_body -> EQUAL module_expr . [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CLASS AND ]
## module_expr -> module_expr . attribute [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CLASS AND ]
## module_expr -> module_expr . paren_module_expr [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CLASS AND ]
## module_expr -> module_expr . LPAREN RPAREN [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## EQUAL module_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: MODULE UIDENT COLON WITH
##
## Concrete syntax: module UIdent : with
##
## Ends in an error in state: 1313.
##
## module_binding_body -> COLON . module_type EQUAL module_expr [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: MODULE UIDENT COLON QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: module UIdent : {%hello|world|} while
##
## Ends in an error in state: 1314.
##
## module_binding_body -> COLON module_type . EQUAL module_expr [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CLASS AND ]
## module_type -> module_type . attribute [ WITH MINUSGREATER LBRACKETAT EQUAL ]
## module_type -> module_type . MINUSGREATER module_type [ WITH MINUSGREATER LBRACKETAT EQUAL ]
## module_type -> module_type . WITH reversed_separated_nonempty_llist(AND,with_constraint) [ WITH MINUSGREATER LBRACKETAT EQUAL ]
##
## The known suffix of the stack is as follows:
## COLON module_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: MODULE UIDENT COLON QUOTED_STRING_EXPR EQUAL WITH
##
## Concrete syntax: module UIdent : {%hello|world|} = with
##
## Ends in an error in state: 1315.
##
## module_binding_body -> COLON module_type EQUAL . module_expr [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## COLON module_type EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: MODULE UIDENT COLON QUOTED_STRING_EXPR EQUAL QUOTED_STRING_EXPR WITH
##
## Concrete syntax: module UIdent : {%hello|world|} = {%hello|world|} with
##
## Ends in an error in state: 1316.
##
## module_binding_body -> COLON module_type EQUAL module_expr . [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CLASS AND ]
## module_expr -> module_expr . attribute [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CLASS AND ]
## module_expr -> module_expr . paren_module_expr [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CLASS AND ]
## module_expr -> module_expr . LPAREN RPAREN [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## COLON module_type EQUAL module_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: MODULE REC UIDENT EQUAL QUOTED_STRING_EXPR IN
##
## Concrete syntax: module rec UIdent = {%hello|world|} in
##
## Ends in an error in state: 1317.
##
## structure_item -> MODULE ext list(attribute) REC module_name module_binding_body . list(post_item_attribute) list(and_module_binding) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## MODULE ext list(attribute) REC module_name module_binding_body
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1312, spurious reduction of production module_binding_body -> EQUAL module_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: MODULE REC UIDENT EQUAL QUOTED_STRING_EXPR LBRACKETATAT AND RBRACKET IN
##
## Concrete syntax: module rec UIdent = {%hello|world|} [@@ and ] in
##
## Ends in an error in state: 1318.
##
## structure_item -> MODULE ext list(attribute) REC module_name module_binding_body list(post_item_attribute) . list(and_module_binding) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## MODULE ext list(attribute) REC module_name module_binding_body list(post_item_attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1304, spurious reduction of production list(post_item_attribute) ->
## In state 1305, spurious reduction of production list(post_item_attribute) -> post_item_attribute list(post_item_attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: MODULE REC UIDENT EQUAL QUOTED_STRING_EXPR AND WITH
##
## Concrete syntax: module rec UIdent = {%hello|world|} and with
##
## Ends in an error in state: 1319.
##
## list(and_module_binding) -> AND . list(attribute) module_name module_binding_body list(post_item_attribute) list(and_module_binding) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## AND
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: MODULE REC UIDENT EQUAL QUOTED_STRING_EXPR AND LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: module rec UIdent = {%hello|world|} and [@ and ] while
##
## Ends in an error in state: 1320.
##
## list(and_module_binding) -> AND list(attribute) . module_name module_binding_body list(post_item_attribute) list(and_module_binding) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## AND list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: MODULE REC UIDENT EQUAL QUOTED_STRING_EXPR AND UIDENT WITH
##
## Concrete syntax: module rec UIdent = {%hello|world|} and UIdent with
##
## Ends in an error in state: 1321.
##
## list(and_module_binding) -> AND list(attribute) module_name . module_binding_body list(post_item_attribute) list(and_module_binding) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## AND list(attribute) module_name
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: MODULE REC UIDENT EQUAL QUOTED_STRING_EXPR AND UIDENT EQUAL QUOTED_STRING_EXPR IN
##
## Concrete syntax: module rec UIdent = {%hello|world|} and UIdent = {%hello|world|} in
##
## Ends in an error in state: 1322.
##
## list(and_module_binding) -> AND list(attribute) module_name module_binding_body . list(post_item_attribute) list(and_module_binding) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## AND list(attribute) module_name module_binding_body
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1312, spurious reduction of production module_binding_body -> EQUAL module_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: MODULE REC UIDENT EQUAL QUOTED_STRING_EXPR AND UIDENT EQUAL QUOTED_STRING_EXPR LBRACKETATAT AND RBRACKET IN
##
## Concrete syntax: module rec UIdent = {%hello|world|} and UIdent = {%hello|world|} [@@ and ] in
##
## Ends in an error in state: 1323.
##
## list(and_module_binding) -> AND list(attribute) module_name module_binding_body list(post_item_attribute) . list(and_module_binding) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## AND list(attribute) module_name module_binding_body list(post_item_attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1304, spurious reduction of production list(post_item_attribute) ->
## In state 1305, spurious reduction of production list(post_item_attribute) -> post_item_attribute list(post_item_attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: MODULE UIDENT LPAREN RPAREN WITH
##
## Concrete syntax: module UIdent ( ) with
##
## Ends in an error in state: 1325.
##
## module_binding_body -> functor_arg . module_binding_body [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## functor_arg
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: MODULE UIDENT WITH
##
## Concrete syntax: module UIdent with
##
## Ends in an error in state: 1328.
##
## structure_item -> MODULE ext list(attribute) module_name . module_binding_body list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## MODULE ext list(attribute) module_name
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: MODULE UIDENT EQUAL QUOTED_STRING_EXPR IN
##
## Concrete syntax: module UIdent = {%hello|world|} in
##
## Ends in an error in state: 1329.
##
## structure_item -> MODULE ext list(attribute) module_name module_binding_body . list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## MODULE ext list(attribute) module_name module_binding_body
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1312, spurious reduction of production module_binding_body -> EQUAL module_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKETPERCENTPERCENT UNDERSCORE
##
## Concrete syntax: [%% _
##
## Ends in an error in state: 1331.
##
## item_extension -> LBRACKETPERCENTPERCENT . attr_id payload RBRACKET [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## LBRACKETPERCENTPERCENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKETPERCENTPERCENT AND VIRTUAL
##
## Concrete syntax: [%% and virtual
##
## Ends in an error in state: 1332.
##
## item_extension -> LBRACKETPERCENTPERCENT attr_id . payload RBRACKET [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## LBRACKETPERCENTPERCENT attr_id
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKETATATAT UNDERSCORE
##
## Concrete syntax: [@@@ _
##
## Ends in an error in state: 1333.
##
## floating_attribute -> LBRACKETATATAT . attr_id payload RBRACKET [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## LBRACKETATATAT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKETATATAT AND VIRTUAL
##
## Concrete syntax: [@@@ and virtual
##
## Ends in an error in state: 1334.
##
## floating_attribute -> LBRACKETATATAT attr_id . payload RBRACKET [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## LBRACKETATATAT attr_id
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE WITH
##
## Concrete syntax: include with
##
## Ends in an error in state: 1335.
##
## structure_item -> INCLUDE . ext list(attribute) module_expr list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## INCLUDE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE PERCENT AND WHILE
##
## Concrete syntax: include % and while
##
## Ends in an error in state: 1336.
##
## structure_item -> INCLUDE ext . list(attribute) module_expr list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## INCLUDE ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: include [@ and ] while
##
## Ends in an error in state: 1337.
##
## structure_item -> INCLUDE ext list(attribute) . module_expr list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## INCLUDE ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE QUOTED_STRING_EXPR WITH
##
## Concrete syntax: include {%hello|world|} with
##
## Ends in an error in state: 1338.
##
## module_expr -> module_expr . attribute [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
## module_expr -> module_expr . paren_module_expr [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
## module_expr -> module_expr . LPAREN RPAREN [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
## structure_item -> INCLUDE ext list(attribute) module_expr . list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## INCLUDE ext list(attribute) module_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: EXTERNAL WITH
##
## Concrete syntax: external with
##
## Ends in an error in state: 1340.
##
## primitive_declaration -> EXTERNAL . ext list(attribute) val_ident COLON core_type EQUAL nonempty_list(raw_string) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## EXTERNAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: EXTERNAL PERCENT AND WHILE
##
## Concrete syntax: external % and while
##
## Ends in an error in state: 1341.
##
## primitive_declaration -> EXTERNAL ext . list(attribute) val_ident COLON core_type EQUAL nonempty_list(raw_string) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## EXTERNAL ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: EXTERNAL LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: external [@ and ] while
##
## Ends in an error in state: 1342.
##
## primitive_declaration -> EXTERNAL ext list(attribute) . val_ident COLON core_type EQUAL nonempty_list(raw_string) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## EXTERNAL ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: EXTERNAL LIDENT WITH
##
## Concrete syntax: external lident with
##
## Ends in an error in state: 1343.
##
## primitive_declaration -> EXTERNAL ext list(attribute) val_ident . COLON core_type EQUAL nonempty_list(raw_string) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## EXTERNAL ext list(attribute) val_ident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: EXTERNAL LIDENT COLON WITH
##
## Concrete syntax: external lident : with
##
## Ends in an error in state: 1344.
##
## primitive_declaration -> EXTERNAL ext list(attribute) val_ident COLON . core_type EQUAL nonempty_list(raw_string) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## EXTERNAL ext list(attribute) val_ident COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: EXTERNAL LIDENT COLON QUOTED_STRING_EXPR WITH
##
## Concrete syntax: external lident : {%hello|world|} with
##
## Ends in an error in state: 1345.
##
## core_type -> core_type . attribute [ LBRACKETAT EQUAL ]
## primitive_declaration -> EXTERNAL ext list(attribute) val_ident COLON core_type . EQUAL nonempty_list(raw_string) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## EXTERNAL ext list(attribute) val_ident COLON core_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 358, spurious reduction of production tuple_type -> atomic_type
## In state 344, spurious reduction of production function_type -> tuple_type
## In state 374, spurious reduction of production alias_type -> function_type
## In state 384, spurious reduction of production core_type -> alias_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: EXTERNAL LIDENT COLON QUOTED_STRING_EXPR EQUAL WITH
##
## Concrete syntax: external lident : {%hello|world|} = with
##
## Ends in an error in state: 1346.
##
## primitive_declaration -> EXTERNAL ext list(attribute) val_ident COLON core_type EQUAL . nonempty_list(raw_string) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## EXTERNAL ext list(attribute) val_ident COLON core_type EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: EXTERNAL LIDENT COLON QUOTED_STRING_EXPR EQUAL STRING WITH
##
## Concrete syntax: external lident : {%hello|world|} = "hello" with
##
## Ends in an error in state: 1347.
##
## nonempty_list(raw_string) -> STRING . [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
## nonempty_list(raw_string) -> STRING . nonempty_list(raw_string) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## STRING
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: EXCEPTION WITH
##
## Concrete syntax: exception with
##
## Ends in an error in state: 1351.
##
## sig_exception_declaration -> EXCEPTION . ext list(attribute) constr_ident generalized_constructor_arguments list(attribute) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
## str_exception_declaration -> EXCEPTION . ext list(attribute) constr_ident EQUAL constr_longident list(attribute) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## EXCEPTION
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: EXCEPTION PERCENT AND WHILE
##
## Concrete syntax: exception % and while
##
## Ends in an error in state: 1352.
##
## sig_exception_declaration -> EXCEPTION ext . list(attribute) constr_ident generalized_constructor_arguments list(attribute) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
## str_exception_declaration -> EXCEPTION ext . list(attribute) constr_ident EQUAL constr_longident list(attribute) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## EXCEPTION ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: EXCEPTION LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: exception [@ and ] while
##
## Ends in an error in state: 1353.
##
## sig_exception_declaration -> EXCEPTION ext list(attribute) . constr_ident generalized_constructor_arguments list(attribute) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
## str_exception_declaration -> EXCEPTION ext list(attribute) . constr_ident EQUAL constr_longident list(attribute) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## EXCEPTION ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: EXCEPTION LPAREN WITH
##
## Concrete syntax: exception ( with
##
## Ends in an error in state: 1355.
##
## constr_extra_nonprefix_ident -> LPAREN . RPAREN [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN OF MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COLON CLASS BAR AND ]
## constr_ident -> LPAREN . COLONCOLON RPAREN [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN OF MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COLON CLASS BAR AND ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: EXCEPTION LPAREN COLONCOLON WITH
##
## Concrete syntax: exception ( :: with
##
## Ends in an error in state: 1356.
##
## constr_ident -> LPAREN COLONCOLON . RPAREN [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN OF MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COLON CLASS BAR AND ]
##
## The known suffix of the stack is as follows:
## LPAREN COLONCOLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_any_longident: LBRACKET WITH
##
## Concrete syntax: [ with
##
## Ends in an error in state: 1358.
##
## constr_extra_nonprefix_ident -> LBRACKET . RBRACKET [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN OF MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COLON CLASS BAR AND ]
##
## The known suffix of the stack is as follows:
## LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: EXCEPTION FALSE WITH
##
## Concrete syntax: exception false with
##
## Ends in an error in state: 1359.
##
## sig_exception_declaration -> EXCEPTION ext list(attribute) constr_ident . generalized_constructor_arguments list(attribute) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
## str_exception_declaration -> EXCEPTION ext list(attribute) constr_ident . EQUAL constr_longident list(attribute) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## EXCEPTION ext list(attribute) constr_ident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: EXCEPTION FALSE OF WITH
##
## Concrete syntax: exception false of with
##
## Ends in an error in state: 1360.
##
## generalized_constructor_arguments -> OF . constructor_arguments [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CONSTRAINT CLASS BAR AND ]
##
## The known suffix of the stack is as follows:
## OF
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: EXCEPTION FALSE COLON LBRACE WITH
##
## Concrete syntax: exception false : { with
##
## Ends in an error in state: 1361.
##
## constructor_arguments -> LBRACE . label_declarations RBRACE [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CONSTRAINT CLASS BAR AND ]
##
## The known suffix of the stack is as follows:
## LBRACE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: EXCEPTION FALSE COLON LBRACE MUTABLE WITH
##
## Concrete syntax: exception false : { mutable with
##
## Ends in an error in state: 1362.
##
## label_declaration -> mutable_flag . LIDENT COLON possibly_poly(core_type_no_attr) list(attribute) [ RBRACE ]
## label_declaration_semi -> mutable_flag . LIDENT COLON possibly_poly(core_type_no_attr) list(attribute) SEMI list(attribute) [ RBRACE MUTABLE LIDENT ]
##
## The known suffix of the stack is as follows:
## mutable_flag
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: EXCEPTION FALSE COLON LBRACE LIDENT WITH
##
## Concrete syntax: exception false : { lident with
##
## Ends in an error in state: 1363.
##
## label_declaration -> mutable_flag LIDENT . COLON possibly_poly(core_type_no_attr) list(attribute) [ RBRACE ]
## label_declaration_semi -> mutable_flag LIDENT . COLON possibly_poly(core_type_no_attr) list(attribute) SEMI list(attribute) [ RBRACE MUTABLE LIDENT ]
##
## The known suffix of the stack is as follows:
## mutable_flag LIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: EXCEPTION FALSE COLON LBRACE LIDENT COLON WITH
##
## Concrete syntax: exception false : { lident : with
##
## Ends in an error in state: 1364.
##
## label_declaration -> mutable_flag LIDENT COLON . possibly_poly(core_type_no_attr) list(attribute) [ RBRACE ]
## label_declaration_semi -> mutable_flag LIDENT COLON . possibly_poly(core_type_no_attr) list(attribute) SEMI list(attribute) [ RBRACE MUTABLE LIDENT ]
##
## The known suffix of the stack is as follows:
## mutable_flag LIDENT COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: LESS LIDENT COLON QUOTE LIDENT QUOTE LIDENT WITH
##
## Concrete syntax: < lident : ' lident ' lident with
##
## Ends in an error in state: 1365.
##
## possibly_poly(core_type_no_attr) -> reversed_nonempty_llist(typevar) . DOT alias_type [ SEMI RBRACE LBRACKETAT GREATER ]
## reversed_nonempty_llist(typevar) -> reversed_nonempty_llist(typevar) . QUOTE ident [ QUOTE DOT ]
##
## The known suffix of the stack is as follows:
## reversed_nonempty_llist(typevar)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: LESS LIDENT COLON QUOTE LIDENT DOT WITH
##
## Concrete syntax: < lident : ' lident . with
##
## Ends in an error in state: 1366.
##
## possibly_poly(core_type_no_attr) -> reversed_nonempty_llist(typevar) DOT . alias_type [ SEMI RBRACE LBRACKETAT GREATER ]
##
## The known suffix of the stack is as follows:
## reversed_nonempty_llist(typevar) DOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: LESS LIDENT COLON QUOTE LIDENT DOT QUOTED_STRING_EXPR WITH
##
## Concrete syntax: < lident : ' lident . {%hello|world|} with
##
## Ends in an error in state: 1367.
##
## alias_type -> alias_type . AS QUOTE ident [ SEMI RBRACE LBRACKETAT GREATER AS ]
## possibly_poly(core_type_no_attr) -> reversed_nonempty_llist(typevar) DOT alias_type . [ SEMI RBRACE LBRACKETAT GREATER ]
##
## The known suffix of the stack is as follows:
## reversed_nonempty_llist(typevar) DOT alias_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 358, spurious reduction of production tuple_type -> atomic_type
## In state 344, spurious reduction of production function_type -> tuple_type
## In state 374, spurious reduction of production alias_type -> function_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: EXCEPTION FALSE COLON LBRACE LIDENT COLON QUOTED_STRING_EXPR GREATER
##
## Concrete syntax: exception false : { lident : {%hello|world|} >
##
## Ends in an error in state: 1368.
##
## label_declaration -> mutable_flag LIDENT COLON possibly_poly(core_type_no_attr) . list(attribute) [ RBRACE ]
## label_declaration_semi -> mutable_flag LIDENT COLON possibly_poly(core_type_no_attr) . list(attribute) SEMI list(attribute) [ RBRACE MUTABLE LIDENT ]
##
## The known suffix of the stack is as follows:
## mutable_flag LIDENT COLON possibly_poly(core_type_no_attr)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 358, spurious reduction of production tuple_type -> atomic_type
## In state 344, spurious reduction of production function_type -> tuple_type
## In state 374, spurious reduction of production alias_type -> function_type
## In state 1372, spurious reduction of production possibly_poly(core_type_no_attr) -> alias_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: EXCEPTION FALSE COLON LBRACE LIDENT COLON QUOTED_STRING_EXPR LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: exception false : { lident : {%hello|world|} [@ and ] while
##
## Ends in an error in state: 1369.
##
## label_declaration -> mutable_flag LIDENT COLON possibly_poly(core_type_no_attr) list(attribute) . [ RBRACE ]
## label_declaration_semi -> mutable_flag LIDENT COLON possibly_poly(core_type_no_attr) list(attribute) . SEMI list(attribute) [ RBRACE MUTABLE LIDENT ]
##
## The known suffix of the stack is as follows:
## mutable_flag LIDENT COLON possibly_poly(core_type_no_attr) list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: EXCEPTION FALSE COLON LBRACE LIDENT COLON QUOTED_STRING_EXPR SEMI WITH
##
## Concrete syntax: exception false : { lident : {%hello|world|} ; with
##
## Ends in an error in state: 1370.
##
## label_declaration_semi -> mutable_flag LIDENT COLON possibly_poly(core_type_no_attr) list(attribute) SEMI . list(attribute) [ RBRACE MUTABLE LIDENT ]
##
## The known suffix of the stack is as follows:
## mutable_flag LIDENT COLON possibly_poly(core_type_no_attr) list(attribute) SEMI
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: LESS LIDENT COLON QUOTED_STRING_EXPR WITH
##
## Concrete syntax: < lident : {%hello|world|} with
##
## Ends in an error in state: 1372.
##
## alias_type -> alias_type . AS QUOTE ident [ SEMI RBRACE LBRACKETAT GREATER AS ]
## possibly_poly(core_type_no_attr) -> alias_type . [ SEMI RBRACE LBRACKETAT GREATER ]
##
## The known suffix of the stack is as follows:
## alias_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 358, spurious reduction of production tuple_type -> atomic_type
## In state 344, spurious reduction of production function_type -> tuple_type
## In state 374, spurious reduction of production alias_type -> function_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: EXCEPTION FALSE COLON LBRACE LIDENT COLON QUOTED_STRING_EXPR SEMI LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: exception false : { lident : {%hello|world|} ; [@ and ] while
##
## Ends in an error in state: 1375.
##
## label_declarations -> label_declaration_semi . [ RBRACE ]
## label_declarations -> label_declaration_semi . label_declarations [ RBRACE ]
##
## The known suffix of the stack is as follows:
## label_declaration_semi
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
## In state 1371, spurious reduction of production label_declaration_semi -> mutable_flag LIDENT COLON possibly_poly(core_type_no_attr) list(attribute) SEMI list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: EXCEPTION FALSE COLON QUOTED_STRING_EXPR STAR WITH
##
## Concrete syntax: exception false : {%hello|world|} * with
##
## Ends in an error in state: 1379.
##
## constructor_arguments -> reversed_separated_nonempty_llist(STAR,atomic_type) STAR . atomic_type [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CONSTRAINT CLASS BAR AND ]
## reversed_separated_nonempty_llist(STAR,atomic_type) -> reversed_separated_nonempty_llist(STAR,atomic_type) STAR . atomic_type [ STAR ]
##
## The known suffix of the stack is as follows:
## reversed_separated_nonempty_llist(STAR,atomic_type) STAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: EXCEPTION FALSE COLON QUOTED_STRING_EXPR STAR QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: exception false : {%hello|world|} * {%hello|world|} while
##
## Ends in an error in state: 1380.
##
## atomic_type -> atomic_type . type_longident [ VAL UIDENT TYPE STAR SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CONSTRAINT CLASS BAR AND ]
## atomic_type -> atomic_type . HASH clty_longident [ VAL UIDENT TYPE STAR SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CONSTRAINT CLASS BAR AND ]
## constructor_arguments -> reversed_separated_nonempty_llist(STAR,atomic_type) STAR atomic_type . [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CONSTRAINT CLASS BAR AND ]
## reversed_separated_nonempty_llist(STAR,atomic_type) -> reversed_separated_nonempty_llist(STAR,atomic_type) STAR atomic_type . [ STAR ]
##
## The known suffix of the stack is as follows:
## reversed_separated_nonempty_llist(STAR,atomic_type) STAR atomic_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: EXCEPTION FALSE OF QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: exception false of {%hello|world|} while
##
## Ends in an error in state: 1382.
##
## atomic_type -> atomic_type . type_longident [ VAL UIDENT TYPE STAR SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CONSTRAINT CLASS BAR AND ]
## atomic_type -> atomic_type . HASH clty_longident [ VAL UIDENT TYPE STAR SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CONSTRAINT CLASS BAR AND ]
## constructor_arguments -> atomic_type . [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CONSTRAINT CLASS BAR AND ]
## reversed_separated_nonempty_llist(STAR,atomic_type) -> atomic_type . [ STAR ]
##
## The known suffix of the stack is as follows:
## atomic_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: EXCEPTION FALSE EQUAL WITH
##
## Concrete syntax: exception false = with
##
## Ends in an error in state: 1383.
##
## str_exception_declaration -> EXCEPTION ext list(attribute) constr_ident EQUAL . constr_longident list(attribute) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## EXCEPTION ext list(attribute) constr_ident EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_constr_longident: LPAREN WITH
##
## Concrete syntax: ( with
##
## Ends in an error in state: 1384.
##
## constr_extra_nonprefix_ident -> LPAREN . RPAREN [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS BAR ]
## constr_longident -> LPAREN . COLONCOLON RPAREN [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS BAR ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_constr_longident: UIDENT WITH
##
## Concrete syntax: UIdent with
##
## Ends in an error in state: 1385.
##
## constr_longident -> mod_longident . [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS BAR ]
## constr_longident -> mod_longident . DOT LPAREN COLONCOLON RPAREN [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS BAR ]
## mk_longident(mod_longident,UIDENT) -> mod_longident . DOT UIDENT [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EOF DOT CLASS BAR ]
##
## The known suffix of the stack is as follows:
## mod_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_constr_longident: UIDENT DOT WITH
##
## Concrete syntax: UIdent . with
##
## Ends in an error in state: 1386.
##
## constr_longident -> mod_longident DOT . LPAREN COLONCOLON RPAREN [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS BAR ]
## mk_longident(mod_longident,UIDENT) -> mod_longident DOT . UIDENT [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EOF DOT CLASS BAR ]
##
## The known suffix of the stack is as follows:
## mod_longident DOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_constr_longident: UIDENT DOT LPAREN WITH
##
## Concrete syntax: UIdent . ( with
##
## Ends in an error in state: 1387.
##
## constr_longident -> mod_longident DOT LPAREN . COLONCOLON RPAREN [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS BAR ]
##
## The known suffix of the stack is as follows:
## mod_longident DOT LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: EXCEPTION FALSE EQUAL UIDENT BAR
##
## Concrete syntax: exception false = UIdent |
##
## Ends in an error in state: 1388.
##
## str_exception_declaration -> EXCEPTION ext list(attribute) constr_ident EQUAL constr_longident . list(attribute) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## EXCEPTION ext list(attribute) constr_ident EQUAL constr_longident
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1385, spurious reduction of production constr_longident -> mod_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: EXCEPTION FALSE EQUAL UIDENT LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: exception false = UIdent [@ and ] while
##
## Ends in an error in state: 1389.
##
## str_exception_declaration -> EXCEPTION ext list(attribute) constr_ident EQUAL constr_longident list(attribute) . list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## EXCEPTION ext list(attribute) constr_ident EQUAL constr_longident list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: EXCEPTION FALSE COLON WITH
##
## Concrete syntax: exception false : with
##
## Ends in an error in state: 1391.
##
## generalized_constructor_arguments -> COLON . constructor_arguments MINUSGREATER atomic_type [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CONSTRAINT CLASS BAR AND ]
## generalized_constructor_arguments -> COLON . atomic_type [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CONSTRAINT CLASS BAR AND ]
##
## The known suffix of the stack is as follows:
## COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: EXCEPTION FALSE COLON QUOTED_STRING_EXPR STAR QUOTED_STRING_EXPR VAL
##
## Concrete syntax: exception false : {%hello|world|} * {%hello|world|} val
##
## Ends in an error in state: 1392.
##
## generalized_constructor_arguments -> COLON constructor_arguments . MINUSGREATER atomic_type [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CONSTRAINT CLASS BAR AND ]
##
## The known suffix of the stack is as follows:
## COLON constructor_arguments
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1380, spurious reduction of production constructor_arguments -> reversed_separated_nonempty_llist(STAR,atomic_type) STAR atomic_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: EXCEPTION FALSE COLON QUOTED_STRING_EXPR MINUSGREATER WITH
##
## Concrete syntax: exception false : {%hello|world|} -> with
##
## Ends in an error in state: 1393.
##
## generalized_constructor_arguments -> COLON constructor_arguments MINUSGREATER . atomic_type [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CONSTRAINT CLASS BAR AND ]
##
## The known suffix of the stack is as follows:
## COLON constructor_arguments MINUSGREATER
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: EXCEPTION FALSE COLON QUOTED_STRING_EXPR MINUSGREATER QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: exception false : {%hello|world|} -> {%hello|world|} while
##
## Ends in an error in state: 1394.
##
## atomic_type -> atomic_type . type_longident [ VAL UIDENT TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CONSTRAINT CLASS BAR AND ]
## atomic_type -> atomic_type . HASH clty_longident [ VAL UIDENT TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CONSTRAINT CLASS BAR AND ]
## generalized_constructor_arguments -> COLON constructor_arguments MINUSGREATER atomic_type . [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CONSTRAINT CLASS BAR AND ]
##
## The known suffix of the stack is as follows:
## COLON constructor_arguments MINUSGREATER atomic_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: EXCEPTION FALSE COLON QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: exception false : {%hello|world|} while
##
## Ends in an error in state: 1395.
##
## atomic_type -> atomic_type . type_longident [ VAL UIDENT TYPE STAR SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CONSTRAINT CLASS BAR AND ]
## atomic_type -> atomic_type . HASH clty_longident [ VAL UIDENT TYPE STAR SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CONSTRAINT CLASS BAR AND ]
## constructor_arguments -> atomic_type . [ MINUSGREATER ]
## generalized_constructor_arguments -> COLON atomic_type . [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CONSTRAINT CLASS BAR AND ]
## reversed_separated_nonempty_llist(STAR,atomic_type) -> atomic_type . [ STAR ]
##
## The known suffix of the stack is as follows:
## COLON atomic_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: EXCEPTION FALSE COLON QUOTED_STRING_EXPR CONSTRAINT
##
## Concrete syntax: exception false : {%hello|world|} constraint
##
## Ends in an error in state: 1396.
##
## sig_exception_declaration -> EXCEPTION ext list(attribute) constr_ident generalized_constructor_arguments . list(attribute) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## EXCEPTION ext list(attribute) constr_ident generalized_constructor_arguments
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1395, spurious reduction of production generalized_constructor_arguments -> COLON atomic_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: EXCEPTION FALSE LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: exception false [@ and ] while
##
## Ends in an error in state: 1397.
##
## sig_exception_declaration -> EXCEPTION ext list(attribute) constr_ident generalized_constructor_arguments list(attribute) . list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## EXCEPTION ext list(attribute) constr_ident generalized_constructor_arguments list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKETATATAT AND COLON WITH
##
## Concrete syntax: [@@@ and : with
##
## Ends in an error in state: 1400.
##
## payload -> COLON . signature [ RBRACKET ]
## payload -> COLON . core_type [ RBRACKET ]
##
## The known suffix of the stack is as follows:
## COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: TYPE WITH
##
## Concrete syntax: type with
##
## Ends in an error in state: 1401.
##
## generic_type_declaration(no_nonrec_flag,type_subst_kind) -> TYPE . ext list(attribute) type_parameters LIDENT COLONEQUAL nonempty_type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS AND ]
## generic_type_declaration(no_nonrec_flag,type_subst_kind) -> TYPE . ext list(attribute) NONREC type_parameters LIDENT COLONEQUAL nonempty_type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS AND ]
## generic_type_declaration(nonrec_flag,type_kind) -> TYPE . ext list(attribute) type_parameters LIDENT type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS AND ]
## generic_type_declaration(nonrec_flag,type_kind) -> TYPE . ext list(attribute) NONREC type_parameters LIDENT type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS AND ]
## signature_item -> TYPE . ext list(attribute) type_parameters type_longident PLUSEQ private_flag reversed_bar_llist(extension_constructor_declaration) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
## signature_item -> TYPE . ext list(attribute) NONREC type_parameters type_longident PLUSEQ private_flag reversed_bar_llist(extension_constructor_declaration) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: TYPE PERCENT AND WHILE
##
## Concrete syntax: type % and while
##
## Ends in an error in state: 1402.
##
## generic_type_declaration(no_nonrec_flag,type_subst_kind) -> TYPE ext . list(attribute) type_parameters LIDENT COLONEQUAL nonempty_type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS AND ]
## generic_type_declaration(no_nonrec_flag,type_subst_kind) -> TYPE ext . list(attribute) NONREC type_parameters LIDENT COLONEQUAL nonempty_type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS AND ]
## generic_type_declaration(nonrec_flag,type_kind) -> TYPE ext . list(attribute) type_parameters LIDENT type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS AND ]
## generic_type_declaration(nonrec_flag,type_kind) -> TYPE ext . list(attribute) NONREC type_parameters LIDENT type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS AND ]
## signature_item -> TYPE ext . list(attribute) type_parameters type_longident PLUSEQ private_flag reversed_bar_llist(extension_constructor_declaration) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
## signature_item -> TYPE ext . list(attribute) NONREC type_parameters type_longident PLUSEQ private_flag reversed_bar_llist(extension_constructor_declaration) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## TYPE ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: TYPE LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: type [@ and ] while
##
## Ends in an error in state: 1403.
##
## generic_type_declaration(no_nonrec_flag,type_subst_kind) -> TYPE ext list(attribute) . type_parameters LIDENT COLONEQUAL nonempty_type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS AND ]
## generic_type_declaration(no_nonrec_flag,type_subst_kind) -> TYPE ext list(attribute) . NONREC type_parameters LIDENT COLONEQUAL nonempty_type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS AND ]
## generic_type_declaration(nonrec_flag,type_kind) -> TYPE ext list(attribute) . type_parameters LIDENT type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS AND ]
## generic_type_declaration(nonrec_flag,type_kind) -> TYPE ext list(attribute) . NONREC type_parameters LIDENT type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS AND ]
## signature_item -> TYPE ext list(attribute) . type_parameters type_longident PLUSEQ private_flag reversed_bar_llist(extension_constructor_declaration) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
## signature_item -> TYPE ext list(attribute) . NONREC type_parameters type_longident PLUSEQ private_flag reversed_bar_llist(extension_constructor_declaration) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## TYPE ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: TYPE NONREC WITH
##
## Concrete syntax: type nonrec with
##
## Ends in an error in state: 1404.
##
## generic_type_declaration(no_nonrec_flag,type_subst_kind) -> TYPE ext list(attribute) NONREC . type_parameters LIDENT COLONEQUAL nonempty_type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS AND ]
## generic_type_declaration(nonrec_flag,type_kind) -> TYPE ext list(attribute) NONREC . type_parameters LIDENT type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS AND ]
## signature_item -> TYPE ext list(attribute) NONREC . type_parameters type_longident PLUSEQ private_flag reversed_bar_llist(extension_constructor_declaration) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## TYPE ext list(attribute) NONREC
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: TYPE NONREC UNDERSCORE WITH
##
## Concrete syntax: type nonrec _ with
##
## Ends in an error in state: 1405.
##
## generic_type_declaration(no_nonrec_flag,type_subst_kind) -> TYPE ext list(attribute) NONREC type_parameters . LIDENT COLONEQUAL nonempty_type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS AND ]
## generic_type_declaration(nonrec_flag,type_kind) -> TYPE ext list(attribute) NONREC type_parameters . LIDENT type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS AND ]
## signature_item -> TYPE ext list(attribute) NONREC type_parameters . type_longident PLUSEQ private_flag reversed_bar_llist(extension_constructor_declaration) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## TYPE ext list(attribute) NONREC type_parameters
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: TYPE NONREC LIDENT WITH
##
## Concrete syntax: type nonrec lident with
##
## Ends in an error in state: 1406.
##
## generic_type_declaration(no_nonrec_flag,type_subst_kind) -> TYPE ext list(attribute) NONREC type_parameters LIDENT . COLONEQUAL nonempty_type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS AND ]
## generic_type_declaration(nonrec_flag,type_kind) -> TYPE ext list(attribute) NONREC type_parameters LIDENT . type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS AND ]
## mk_longident(mod_ext_longident,LIDENT) -> LIDENT . [ PLUSEQ ]
##
## The known suffix of the stack is as follows:
## TYPE ext list(attribute) NONREC type_parameters LIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: TYPE NONREC LIDENT COLONEQUAL WITH
##
## Concrete syntax: type nonrec lident := with
##
## Ends in an error in state: 1407.
##
## generic_type_declaration(no_nonrec_flag,type_subst_kind) -> TYPE ext list(attribute) NONREC type_parameters LIDENT COLONEQUAL . nonempty_type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## TYPE ext list(attribute) NONREC type_parameters LIDENT COLONEQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: TYPE LIDENT EQUAL LBRACKET WITH
##
## Concrete syntax: type lident = [ with
##
## Ends in an error in state: 1408.
##
## atomic_type -> LBRACKET . tag_field RBRACKET [ VAL UIDENT TYPE STAR SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT CLASS AS AND ]
## atomic_type -> LBRACKET . BAR reversed_separated_nonempty_llist(BAR,row_field) RBRACKET [ VAL UIDENT TYPE STAR SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT CLASS AS AND ]
## atomic_type -> LBRACKET . row_field BAR reversed_separated_nonempty_llist(BAR,row_field) RBRACKET [ VAL UIDENT TYPE STAR SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT CLASS AS AND ]
## constr_extra_nonprefix_ident -> LBRACKET . RBRACKET [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN OF MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EOF CONSTRAINT COLON CLASS BAR AND ]
##
## The known suffix of the stack is as follows:
## LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: TYPE LIDENT EQUAL LBRACE WITH
##
## Concrete syntax: type lident = { with
##
## Ends in an error in state: 1409.
##
## nonempty_type_kind -> LBRACE . label_declarations RBRACE [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CONSTRAINT CLASS AND ]
##
## The known suffix of the stack is as follows:
## LBRACE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: TYPE LIDENT EQUAL BAR WITH
##
## Concrete syntax: type lident = | with
##
## Ends in an error in state: 1413.
##
## constructor_declarations -> BAR . [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CONSTRAINT CLASS AND ]
## generic_constructor_declaration(BAR) -> BAR . constr_ident generalized_constructor_arguments list(attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CONSTRAINT CLASS BAR AND ]
##
## The known suffix of the stack is as follows:
## BAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: TYPE LIDENT EQUAL BAR FALSE WITH
##
## Concrete syntax: type lident = | false with
##
## Ends in an error in state: 1414.
##
## generic_constructor_declaration(BAR) -> BAR constr_ident . generalized_constructor_arguments list(attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CONSTRAINT CLASS BAR AND ]
##
## The known suffix of the stack is as follows:
## BAR constr_ident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: TYPE LIDENT EQUAL BAR FALSE COLON QUOTED_STRING_EXPR IN
##
## Concrete syntax: type lident = | false : {%hello|world|} in
##
## Ends in an error in state: 1415.
##
## generic_constructor_declaration(BAR) -> BAR constr_ident generalized_constructor_arguments . list(attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CONSTRAINT CLASS BAR AND ]
##
## The known suffix of the stack is as follows:
## BAR constr_ident generalized_constructor_arguments
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1395, spurious reduction of production generalized_constructor_arguments -> COLON atomic_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: TYPE LIDENT EQUAL FALSE LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: type lident = false [@ and ] while
##
## Ends in an error in state: 1417.
##
## constructor_declarations -> reversed_bar_llist(constructor_declaration) . [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CONSTRAINT CLASS AND ]
## reversed_bar_llist(constructor_declaration) -> reversed_bar_llist(constructor_declaration) . generic_constructor_declaration(BAR) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CONSTRAINT CLASS BAR AND ]
##
## The known suffix of the stack is as follows:
## reversed_bar_llist(constructor_declaration)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
## In state 1435, spurious reduction of production generic_constructor_declaration(epsilon) -> constr_ident generalized_constructor_arguments list(attribute)
## In state 1423, spurious reduction of production reversed_bar_llist(constructor_declaration) -> generic_constructor_declaration(epsilon)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: TYPE LIDENT PLUSEQ BAR WITH
##
## Concrete syntax: type lident += | with
##
## Ends in an error in state: 1418.
##
## generic_constructor_declaration(BAR) -> BAR . constr_ident generalized_constructor_arguments list(attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CONSTRAINT CLASS BAR AND ]
##
## The known suffix of the stack is as follows:
## BAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: TYPE NONREC LIDENT COLONEQUAL FALSE LET
##
## Concrete syntax: type nonrec lident := false let
##
## Ends in an error in state: 1421.
##
## generic_type_declaration(no_nonrec_flag,type_subst_kind) -> TYPE ext list(attribute) NONREC type_parameters LIDENT COLONEQUAL nonempty_type_kind reversed_llist(preceded(CONSTRAINT,constrain)) . list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS AND ]
## reversed_llist(preceded(CONSTRAINT,constrain)) -> reversed_llist(preceded(CONSTRAINT,constrain)) . CONSTRAINT core_type EQUAL core_type [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF CONSTRAINT CLASS AND ]
##
## The known suffix of the stack is as follows:
## TYPE ext list(attribute) NONREC type_parameters LIDENT COLONEQUAL nonempty_type_kind reversed_llist(preceded(CONSTRAINT,constrain))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1433, spurious reduction of production generalized_constructor_arguments ->
## In state 1434, spurious reduction of production list(attribute) ->
## In state 1435, spurious reduction of production generic_constructor_declaration(epsilon) -> constr_ident generalized_constructor_arguments list(attribute)
## In state 1423, spurious reduction of production reversed_bar_llist(constructor_declaration) -> generic_constructor_declaration(epsilon)
## In state 1417, spurious reduction of production constructor_declarations -> reversed_bar_llist(constructor_declaration)
## In state 1441, spurious reduction of production nonempty_type_kind -> constructor_declarations
## In state 1420, spurious reduction of production reversed_llist(preceded(CONSTRAINT,constrain)) ->
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: TYPE LIDENT EQUAL QUOTED_STRING_EXPR WITH
##
## Concrete syntax: type lident = {%hello|world|} with
##
## Ends in an error in state: 1425.
##
## core_type -> core_type . attribute [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT CLASS AND ]
## nonempty_type_kind -> core_type . [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CONSTRAINT CLASS AND ]
## nonempty_type_kind -> core_type . EQUAL constructor_declarations [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CONSTRAINT CLASS AND ]
## nonempty_type_kind -> core_type . EQUAL PRIVATE constructor_declarations [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CONSTRAINT CLASS AND ]
## nonempty_type_kind -> core_type . EQUAL DOTDOT [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CONSTRAINT CLASS AND ]
## nonempty_type_kind -> core_type . EQUAL PRIVATE DOTDOT [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CONSTRAINT CLASS AND ]
## nonempty_type_kind -> core_type . EQUAL LBRACE label_declarations RBRACE [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CONSTRAINT CLASS AND ]
## nonempty_type_kind -> core_type . EQUAL PRIVATE LBRACE label_declarations RBRACE [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CONSTRAINT CLASS AND ]
##
## The known suffix of the stack is as follows:
## core_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 358, spurious reduction of production tuple_type -> atomic_type
## In state 344, spurious reduction of production function_type -> tuple_type
## In state 374, spurious reduction of production alias_type -> function_type
## In state 384, spurious reduction of production core_type -> alias_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: TYPE LIDENT EQUAL QUOTED_STRING_EXPR EQUAL WITH
##
## Concrete syntax: type lident = {%hello|world|} = with
##
## Ends in an error in state: 1426.
##
## nonempty_type_kind -> core_type EQUAL . constructor_declarations [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CONSTRAINT CLASS AND ]
## nonempty_type_kind -> core_type EQUAL . PRIVATE constructor_declarations [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CONSTRAINT CLASS AND ]
## nonempty_type_kind -> core_type EQUAL . DOTDOT [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CONSTRAINT CLASS AND ]
## nonempty_type_kind -> core_type EQUAL . PRIVATE DOTDOT [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CONSTRAINT CLASS AND ]
## nonempty_type_kind -> core_type EQUAL . LBRACE label_declarations RBRACE [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CONSTRAINT CLASS AND ]
## nonempty_type_kind -> core_type EQUAL . PRIVATE LBRACE label_declarations RBRACE [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CONSTRAINT CLASS AND ]
##
## The known suffix of the stack is as follows:
## core_type EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: TYPE LIDENT EQUAL QUOTED_STRING_EXPR EQUAL PRIVATE WITH
##
## Concrete syntax: type lident = {%hello|world|} = private with
##
## Ends in an error in state: 1427.
##
## nonempty_type_kind -> core_type EQUAL PRIVATE . constructor_declarations [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CONSTRAINT CLASS AND ]
## nonempty_type_kind -> core_type EQUAL PRIVATE . DOTDOT [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CONSTRAINT CLASS AND ]
## nonempty_type_kind -> core_type EQUAL PRIVATE . LBRACE label_declarations RBRACE [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CONSTRAINT CLASS AND ]
##
## The known suffix of the stack is as follows:
## core_type EQUAL PRIVATE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: TYPE LIDENT EQUAL QUOTED_STRING_EXPR EQUAL PRIVATE LBRACE WITH
##
## Concrete syntax: type lident = {%hello|world|} = private { with
##
## Ends in an error in state: 1428.
##
## nonempty_type_kind -> core_type EQUAL PRIVATE LBRACE . label_declarations RBRACE [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CONSTRAINT CLASS AND ]
##
## The known suffix of the stack is as follows:
## core_type EQUAL PRIVATE LBRACE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: TYPE LIDENT EQUAL FALSE WITH
##
## Concrete syntax: type lident = false with
##
## Ends in an error in state: 1433.
##
## generic_constructor_declaration(epsilon) -> constr_ident . generalized_constructor_arguments list(attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CONSTRAINT CLASS BAR AND ]
##
## The known suffix of the stack is as follows:
## constr_ident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: TYPE LIDENT EQUAL FALSE COLON QUOTED_STRING_EXPR IN
##
## Concrete syntax: type lident = false : {%hello|world|} in
##
## Ends in an error in state: 1434.
##
## generic_constructor_declaration(epsilon) -> constr_ident generalized_constructor_arguments . list(attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CONSTRAINT CLASS BAR AND ]
##
## The known suffix of the stack is as follows:
## constr_ident generalized_constructor_arguments
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1395, spurious reduction of production generalized_constructor_arguments -> COLON atomic_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: TYPE LIDENT EQUAL QUOTED_STRING_EXPR EQUAL LBRACE WITH
##
## Concrete syntax: type lident = {%hello|world|} = { with
##
## Ends in an error in state: 1436.
##
## nonempty_type_kind -> core_type EQUAL LBRACE . label_declarations RBRACE [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CONSTRAINT CLASS AND ]
##
## The known suffix of the stack is as follows:
## core_type EQUAL LBRACE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: TYPE NONREC LIDENT EQUAL DOTDOT WITH
##
## Concrete syntax: type nonrec lident = .. with
##
## Ends in an error in state: 1443.
##
## generic_type_declaration(nonrec_flag,type_kind) -> TYPE ext list(attribute) NONREC type_parameters LIDENT type_kind reversed_llist(preceded(CONSTRAINT,constrain)) . list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS AND ]
## reversed_llist(preceded(CONSTRAINT,constrain)) -> reversed_llist(preceded(CONSTRAINT,constrain)) . CONSTRAINT core_type EQUAL core_type [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CONSTRAINT CLASS AND ]
##
## The known suffix of the stack is as follows:
## TYPE ext list(attribute) NONREC type_parameters LIDENT type_kind reversed_llist(preceded(CONSTRAINT,constrain))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: TYPE NONREC UIDENT DOT LIDENT WHILE
##
## Concrete syntax: type nonrec UIdent . lident while
##
## Ends in an error in state: 1445.
##
## signature_item -> TYPE ext list(attribute) NONREC type_parameters type_longident . PLUSEQ private_flag reversed_bar_llist(extension_constructor_declaration) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## TYPE ext list(attribute) NONREC type_parameters type_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: TYPE NONREC LIDENT PLUSEQ WITH
##
## Concrete syntax: type nonrec lident += with
##
## Ends in an error in state: 1446.
##
## signature_item -> TYPE ext list(attribute) NONREC type_parameters type_longident PLUSEQ . private_flag reversed_bar_llist(extension_constructor_declaration) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## TYPE ext list(attribute) NONREC type_parameters type_longident PLUSEQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: TYPE NONREC LIDENT PLUSEQ PRIVATE WITH
##
## Concrete syntax: type nonrec lident += private with
##
## Ends in an error in state: 1448.
##
## signature_item -> TYPE ext list(attribute) NONREC type_parameters type_longident PLUSEQ private_flag . reversed_bar_llist(extension_constructor_declaration) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## TYPE ext list(attribute) NONREC type_parameters type_longident PLUSEQ private_flag
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: TYPE NONREC LIDENT PLUSEQ FALSE CONSTRAINT
##
## Concrete syntax: type nonrec lident += false constraint
##
## Ends in an error in state: 1449.
##
## reversed_bar_llist(extension_constructor_declaration) -> reversed_bar_llist(extension_constructor_declaration) . generic_constructor_declaration(BAR) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS BAR ]
## signature_item -> TYPE ext list(attribute) NONREC type_parameters type_longident PLUSEQ private_flag reversed_bar_llist(extension_constructor_declaration) . list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## TYPE ext list(attribute) NONREC type_parameters type_longident PLUSEQ private_flag reversed_bar_llist(extension_constructor_declaration)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1433, spurious reduction of production generalized_constructor_arguments ->
## In state 1434, spurious reduction of production list(attribute) ->
## In state 1435, spurious reduction of production generic_constructor_declaration(epsilon) -> constr_ident generalized_constructor_arguments list(attribute)
## In state 1452, spurious reduction of production reversed_bar_llist(extension_constructor_declaration) -> generic_constructor_declaration(epsilon)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: TYPE UNDERSCORE WITH
##
## Concrete syntax: type _ with
##
## Ends in an error in state: 1454.
##
## generic_type_declaration(no_nonrec_flag,type_subst_kind) -> TYPE ext list(attribute) type_parameters . LIDENT COLONEQUAL nonempty_type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS AND ]
## generic_type_declaration(nonrec_flag,type_kind) -> TYPE ext list(attribute) type_parameters . LIDENT type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS AND ]
## signature_item -> TYPE ext list(attribute) type_parameters . type_longident PLUSEQ private_flag reversed_bar_llist(extension_constructor_declaration) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## TYPE ext list(attribute) type_parameters
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: TYPE LIDENT WITH
##
## Concrete syntax: type lident with
##
## Ends in an error in state: 1455.
##
## generic_type_declaration(no_nonrec_flag,type_subst_kind) -> TYPE ext list(attribute) type_parameters LIDENT . COLONEQUAL nonempty_type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS AND ]
## generic_type_declaration(nonrec_flag,type_kind) -> TYPE ext list(attribute) type_parameters LIDENT . type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS AND ]
## mk_longident(mod_ext_longident,LIDENT) -> LIDENT . [ PLUSEQ ]
##
## The known suffix of the stack is as follows:
## TYPE ext list(attribute) type_parameters LIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: TYPE LIDENT COLONEQUAL WITH
##
## Concrete syntax: type lident := with
##
## Ends in an error in state: 1456.
##
## generic_type_declaration(no_nonrec_flag,type_subst_kind) -> TYPE ext list(attribute) type_parameters LIDENT COLONEQUAL . nonempty_type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## TYPE ext list(attribute) type_parameters LIDENT COLONEQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: TYPE LIDENT COLONEQUAL FALSE LET
##
## Concrete syntax: type lident := false let
##
## Ends in an error in state: 1458.
##
## generic_type_declaration(no_nonrec_flag,type_subst_kind) -> TYPE ext list(attribute) type_parameters LIDENT COLONEQUAL nonempty_type_kind reversed_llist(preceded(CONSTRAINT,constrain)) . list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS AND ]
## reversed_llist(preceded(CONSTRAINT,constrain)) -> reversed_llist(preceded(CONSTRAINT,constrain)) . CONSTRAINT core_type EQUAL core_type [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF CONSTRAINT CLASS AND ]
##
## The known suffix of the stack is as follows:
## TYPE ext list(attribute) type_parameters LIDENT COLONEQUAL nonempty_type_kind reversed_llist(preceded(CONSTRAINT,constrain))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1433, spurious reduction of production generalized_constructor_arguments ->
## In state 1434, spurious reduction of production list(attribute) ->
## In state 1435, spurious reduction of production generic_constructor_declaration(epsilon) -> constr_ident generalized_constructor_arguments list(attribute)
## In state 1423, spurious reduction of production reversed_bar_llist(constructor_declaration) -> generic_constructor_declaration(epsilon)
## In state 1417, spurious reduction of production constructor_declarations -> reversed_bar_llist(constructor_declaration)
## In state 1441, spurious reduction of production nonempty_type_kind -> constructor_declarations
## In state 1457, spurious reduction of production reversed_llist(preceded(CONSTRAINT,constrain)) ->
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: TYPE LIDENT EQUAL DOTDOT WITH
##
## Concrete syntax: type lident = .. with
##
## Ends in an error in state: 1461.
##
## generic_type_declaration(nonrec_flag,type_kind) -> TYPE ext list(attribute) type_parameters LIDENT type_kind reversed_llist(preceded(CONSTRAINT,constrain)) . list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS AND ]
## reversed_llist(preceded(CONSTRAINT,constrain)) -> reversed_llist(preceded(CONSTRAINT,constrain)) . CONSTRAINT core_type EQUAL core_type [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CONSTRAINT CLASS AND ]
##
## The known suffix of the stack is as follows:
## TYPE ext list(attribute) type_parameters LIDENT type_kind reversed_llist(preceded(CONSTRAINT,constrain))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: TYPE UIDENT DOT LIDENT WHILE
##
## Concrete syntax: type UIdent . lident while
##
## Ends in an error in state: 1463.
##
## signature_item -> TYPE ext list(attribute) type_parameters type_longident . PLUSEQ private_flag reversed_bar_llist(extension_constructor_declaration) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## TYPE ext list(attribute) type_parameters type_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: TYPE LIDENT PLUSEQ WITH
##
## Concrete syntax: type lident += with
##
## Ends in an error in state: 1464.
##
## signature_item -> TYPE ext list(attribute) type_parameters type_longident PLUSEQ . private_flag reversed_bar_llist(extension_constructor_declaration) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## TYPE ext list(attribute) type_parameters type_longident PLUSEQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: TYPE LIDENT PLUSEQ PRIVATE WITH
##
## Concrete syntax: type lident += private with
##
## Ends in an error in state: 1465.
##
## signature_item -> TYPE ext list(attribute) type_parameters type_longident PLUSEQ private_flag . reversed_bar_llist(extension_constructor_declaration) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## TYPE ext list(attribute) type_parameters type_longident PLUSEQ private_flag
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: TYPE LIDENT PLUSEQ FALSE CONSTRAINT
##
## Concrete syntax: type lident += false constraint
##
## Ends in an error in state: 1466.
##
## reversed_bar_llist(extension_constructor_declaration) -> reversed_bar_llist(extension_constructor_declaration) . generic_constructor_declaration(BAR) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS BAR ]
## signature_item -> TYPE ext list(attribute) type_parameters type_longident PLUSEQ private_flag reversed_bar_llist(extension_constructor_declaration) . list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## TYPE ext list(attribute) type_parameters type_longident PLUSEQ private_flag reversed_bar_llist(extension_constructor_declaration)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1433, spurious reduction of production generalized_constructor_arguments ->
## In state 1434, spurious reduction of production list(attribute) ->
## In state 1435, spurious reduction of production generic_constructor_declaration(epsilon) -> constr_ident generalized_constructor_arguments list(attribute)
## In state 1452, spurious reduction of production reversed_bar_llist(extension_constructor_declaration) -> generic_constructor_declaration(epsilon)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: SEMISEMI WITH
##
## Concrete syntax: ;; with
##
## Ends in an error in state: 1468.
##
## list(signature_element) -> SEMISEMI . list(signature_element) [ RBRACKET EOF ]
##
## The known suffix of the stack is as follows:
## SEMISEMI
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: OPEN WITH
##
## Concrete syntax: open with
##
## Ends in an error in state: 1469.
##
## open_description -> OPEN . ext list(attribute) mod_ext_longident list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
## open_description -> OPEN . BANG ext list(attribute) mod_ext_longident list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## OPEN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: OPEN BANG WITH
##
## Concrete syntax: open ! with
##
## Ends in an error in state: 1470.
##
## open_description -> OPEN BANG . ext list(attribute) mod_ext_longident list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## OPEN BANG
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: OPEN BANG PERCENT AND WHILE
##
## Concrete syntax: open ! % and while
##
## Ends in an error in state: 1471.
##
## open_description -> OPEN BANG ext . list(attribute) mod_ext_longident list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## OPEN BANG ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: OPEN BANG LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: open ! [@ and ] while
##
## Ends in an error in state: 1472.
##
## open_description -> OPEN BANG ext list(attribute) . mod_ext_longident list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## OPEN BANG ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: OPEN BANG UIDENT WITH
##
## Concrete syntax: open ! UIdent with
##
## Ends in an error in state: 1473.
##
## mk_longident(mod_ext_longident,UIDENT) -> mod_ext_longident . DOT UIDENT [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LPAREN LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF DOT CLASS ]
## mod_ext_longident -> mod_ext_longident . LPAREN mod_ext_longident RPAREN [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LPAREN LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF DOT CLASS ]
## mod_ext_longident -> mod_ext_longident . LPAREN error [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LPAREN LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF DOT CLASS ]
## open_description -> OPEN BANG ext list(attribute) mod_ext_longident . list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## OPEN BANG ext list(attribute) mod_ext_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: OPEN PERCENT AND WHILE
##
## Concrete syntax: open % and while
##
## Ends in an error in state: 1475.
##
## open_description -> OPEN ext . list(attribute) mod_ext_longident list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## OPEN ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: OPEN LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: open [@ and ] while
##
## Ends in an error in state: 1476.
##
## open_description -> OPEN ext list(attribute) . mod_ext_longident list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## OPEN ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: OPEN UIDENT WITH
##
## Concrete syntax: open UIdent with
##
## Ends in an error in state: 1477.
##
## mk_longident(mod_ext_longident,UIDENT) -> mod_ext_longident . DOT UIDENT [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LPAREN LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF DOT CLASS ]
## mod_ext_longident -> mod_ext_longident . LPAREN mod_ext_longident RPAREN [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LPAREN LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF DOT CLASS ]
## mod_ext_longident -> mod_ext_longident . LPAREN error [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LPAREN LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF DOT CLASS ]
## open_description -> OPEN ext list(attribute) mod_ext_longident . list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## OPEN ext list(attribute) mod_ext_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: MODULE WITH
##
## Concrete syntax: module with
##
## Ends in an error in state: 1479.
##
## module_subst -> MODULE . ext list(attribute) UIDENT COLONEQUAL mod_ext_longident list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
## module_subst -> MODULE . ext list(attribute) UIDENT COLONEQUAL error [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
## module_type_declaration -> MODULE . TYPE ext list(attribute) ident option(preceded(EQUAL,module_type)) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
## module_type_subst -> MODULE . TYPE ext list(attribute) ident COLONEQUAL module_type list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
## signature_item -> MODULE . ext list(attribute) module_name module_declaration_body list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
## signature_item -> MODULE . ext list(attribute) module_name EQUAL mod_longident list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
## signature_item -> MODULE . ext list(attribute) REC module_name COLON module_type list(post_item_attribute) list(and_module_declaration) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## MODULE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: MODULE TYPE WITH
##
## Concrete syntax: module type with
##
## Ends in an error in state: 1480.
##
## module_type_declaration -> MODULE TYPE . ext list(attribute) ident option(preceded(EQUAL,module_type)) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
## module_type_subst -> MODULE TYPE . ext list(attribute) ident COLONEQUAL module_type list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## MODULE TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: MODULE TYPE PERCENT AND WHILE
##
## Concrete syntax: module type % and while
##
## Ends in an error in state: 1481.
##
## module_type_declaration -> MODULE TYPE ext . list(attribute) ident option(preceded(EQUAL,module_type)) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
## module_type_subst -> MODULE TYPE ext . list(attribute) ident COLONEQUAL module_type list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## MODULE TYPE ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: MODULE TYPE LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: module type [@ and ] while
##
## Ends in an error in state: 1482.
##
## module_type_declaration -> MODULE TYPE ext list(attribute) . ident option(preceded(EQUAL,module_type)) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
## module_type_subst -> MODULE TYPE ext list(attribute) . ident COLONEQUAL module_type list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## MODULE TYPE ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: MODULE TYPE LIDENT WITH
##
## Concrete syntax: module type lident with
##
## Ends in an error in state: 1483.
##
## module_type_declaration -> MODULE TYPE ext list(attribute) ident . option(preceded(EQUAL,module_type)) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
## module_type_subst -> MODULE TYPE ext list(attribute) ident . COLONEQUAL module_type list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## MODULE TYPE ext list(attribute) ident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: MODULE TYPE LIDENT COLONEQUAL WITH
##
## Concrete syntax: module type lident := with
##
## Ends in an error in state: 1484.
##
## module_type_subst -> MODULE TYPE ext list(attribute) ident COLONEQUAL . module_type list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## MODULE TYPE ext list(attribute) ident COLONEQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: MODULE TYPE LIDENT COLONEQUAL QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: module type lident := {%hello|world|} while
##
## Ends in an error in state: 1485.
##
## module_type -> module_type . attribute [ WITH VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
## module_type -> module_type . MINUSGREATER module_type [ WITH VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
## module_type -> module_type . WITH reversed_separated_nonempty_llist(AND,with_constraint) [ WITH VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
## module_type_subst -> MODULE TYPE ext list(attribute) ident COLONEQUAL module_type . list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## MODULE TYPE ext list(attribute) ident COLONEQUAL module_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: MODULE PERCENT AND WHILE
##
## Concrete syntax: module % and while
##
## Ends in an error in state: 1487.
##
## module_subst -> MODULE ext . list(attribute) UIDENT COLONEQUAL mod_ext_longident list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
## module_subst -> MODULE ext . list(attribute) UIDENT COLONEQUAL error [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
## signature_item -> MODULE ext . list(attribute) module_name module_declaration_body list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
## signature_item -> MODULE ext . list(attribute) module_name EQUAL mod_longident list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
## signature_item -> MODULE ext . list(attribute) REC module_name COLON module_type list(post_item_attribute) list(and_module_declaration) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## MODULE ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: MODULE LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: module [@ and ] while
##
## Ends in an error in state: 1488.
##
## module_subst -> MODULE ext list(attribute) . UIDENT COLONEQUAL mod_ext_longident list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
## module_subst -> MODULE ext list(attribute) . UIDENT COLONEQUAL error [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
## signature_item -> MODULE ext list(attribute) . module_name module_declaration_body list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
## signature_item -> MODULE ext list(attribute) . module_name EQUAL mod_longident list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
## signature_item -> MODULE ext list(attribute) . REC module_name COLON module_type list(post_item_attribute) list(and_module_declaration) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## MODULE ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: MODULE UIDENT WITH
##
## Concrete syntax: module UIdent with
##
## Ends in an error in state: 1489.
##
## module_name -> UIDENT . [ LPAREN EQUAL COLON ]
## module_subst -> MODULE ext list(attribute) UIDENT . COLONEQUAL mod_ext_longident list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
## module_subst -> MODULE ext list(attribute) UIDENT . COLONEQUAL error [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## MODULE ext list(attribute) UIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: MODULE UIDENT COLONEQUAL WITH
##
## Concrete syntax: module UIdent := with
##
## Ends in an error in state: 1490.
##
## module_subst -> MODULE ext list(attribute) UIDENT COLONEQUAL . mod_ext_longident list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
## module_subst -> MODULE ext list(attribute) UIDENT COLONEQUAL . error [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## MODULE ext list(attribute) UIDENT COLONEQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: MODULE UIDENT COLONEQUAL UIDENT WITH
##
## Concrete syntax: module UIdent := UIdent with
##
## Ends in an error in state: 1492.
##
## mk_longident(mod_ext_longident,UIDENT) -> mod_ext_longident . DOT UIDENT [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LPAREN LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF DOT CLASS ]
## mod_ext_longident -> mod_ext_longident . LPAREN mod_ext_longident RPAREN [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LPAREN LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF DOT CLASS ]
## mod_ext_longident -> mod_ext_longident . LPAREN error [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LPAREN LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF DOT CLASS ]
## module_subst -> MODULE ext list(attribute) UIDENT COLONEQUAL mod_ext_longident . list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## MODULE ext list(attribute) UIDENT COLONEQUAL mod_ext_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: MODULE REC WITH
##
## Concrete syntax: module rec with
##
## Ends in an error in state: 1494.
##
## signature_item -> MODULE ext list(attribute) REC . module_name COLON module_type list(post_item_attribute) list(and_module_declaration) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## MODULE ext list(attribute) REC
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: MODULE REC UIDENT WITH
##
## Concrete syntax: module rec UIdent with
##
## Ends in an error in state: 1495.
##
## signature_item -> MODULE ext list(attribute) REC module_name . COLON module_type list(post_item_attribute) list(and_module_declaration) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## MODULE ext list(attribute) REC module_name
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: MODULE REC UIDENT COLON WITH
##
## Concrete syntax: module rec UIdent : with
##
## Ends in an error in state: 1496.
##
## signature_item -> MODULE ext list(attribute) REC module_name COLON . module_type list(post_item_attribute) list(and_module_declaration) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## MODULE ext list(attribute) REC module_name COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: MODULE REC UIDENT COLON QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: module rec UIdent : {%hello|world|} while
##
## Ends in an error in state: 1497.
##
## module_type -> module_type . attribute [ WITH VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EOF CLASS AND ]
## module_type -> module_type . MINUSGREATER module_type [ WITH VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EOF CLASS AND ]
## module_type -> module_type . WITH reversed_separated_nonempty_llist(AND,with_constraint) [ WITH VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EOF CLASS AND ]
## signature_item -> MODULE ext list(attribute) REC module_name COLON module_type . list(post_item_attribute) list(and_module_declaration) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## MODULE ext list(attribute) REC module_name COLON module_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: MODULE REC UIDENT COLON QUOTED_STRING_EXPR LBRACKETATAT AND RBRACKET LET
##
## Concrete syntax: module rec UIdent : {%hello|world|} [@@ and ] let
##
## Ends in an error in state: 1498.
##
## signature_item -> MODULE ext list(attribute) REC module_name COLON module_type list(post_item_attribute) . list(and_module_declaration) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## MODULE ext list(attribute) REC module_name COLON module_type list(post_item_attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1304, spurious reduction of production list(post_item_attribute) ->
## In state 1305, spurious reduction of production list(post_item_attribute) -> post_item_attribute list(post_item_attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: MODULE REC UIDENT COLON QUOTED_STRING_EXPR AND WITH
##
## Concrete syntax: module rec UIdent : {%hello|world|} and with
##
## Ends in an error in state: 1499.
##
## list(and_module_declaration) -> AND . list(attribute) module_name COLON module_type list(post_item_attribute) list(and_module_declaration) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## AND
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: MODULE REC UIDENT COLON QUOTED_STRING_EXPR AND LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: module rec UIdent : {%hello|world|} and [@ and ] while
##
## Ends in an error in state: 1500.
##
## list(and_module_declaration) -> AND list(attribute) . module_name COLON module_type list(post_item_attribute) list(and_module_declaration) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## AND list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: MODULE REC UIDENT COLON QUOTED_STRING_EXPR AND UIDENT WITH
##
## Concrete syntax: module rec UIdent : {%hello|world|} and UIdent with
##
## Ends in an error in state: 1501.
##
## list(and_module_declaration) -> AND list(attribute) module_name . COLON module_type list(post_item_attribute) list(and_module_declaration) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## AND list(attribute) module_name
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: MODULE REC UIDENT COLON QUOTED_STRING_EXPR AND UIDENT COLON WITH
##
## Concrete syntax: module rec UIdent : {%hello|world|} and UIdent : with
##
## Ends in an error in state: 1502.
##
## list(and_module_declaration) -> AND list(attribute) module_name COLON . module_type list(post_item_attribute) list(and_module_declaration) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## AND list(attribute) module_name COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: MODULE REC UIDENT COLON QUOTED_STRING_EXPR AND UIDENT COLON QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: module rec UIdent : {%hello|world|} and UIdent : {%hello|world|} while
##
## Ends in an error in state: 1503.
##
## list(and_module_declaration) -> AND list(attribute) module_name COLON module_type . list(post_item_attribute) list(and_module_declaration) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
## module_type -> module_type . attribute [ WITH VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EOF CLASS AND ]
## module_type -> module_type . MINUSGREATER module_type [ WITH VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EOF CLASS AND ]
## module_type -> module_type . WITH reversed_separated_nonempty_llist(AND,with_constraint) [ WITH VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## AND list(attribute) module_name COLON module_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: MODULE REC UIDENT COLON QUOTED_STRING_EXPR AND UIDENT COLON QUOTED_STRING_EXPR LBRACKETATAT AND RBRACKET LET
##
## Concrete syntax: module rec UIdent : {%hello|world|} and UIdent : {%hello|world|} [@@ and ] let
##
## Ends in an error in state: 1504.
##
## list(and_module_declaration) -> AND list(attribute) module_name COLON module_type list(post_item_attribute) . list(and_module_declaration) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## AND list(attribute) module_name COLON module_type list(post_item_attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1304, spurious reduction of production list(post_item_attribute) ->
## In state 1305, spurious reduction of production list(post_item_attribute) -> post_item_attribute list(post_item_attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: MODULE UNDERSCORE WITH
##
## Concrete syntax: module _ with
##
## Ends in an error in state: 1507.
##
## signature_item -> MODULE ext list(attribute) module_name . module_declaration_body list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
## signature_item -> MODULE ext list(attribute) module_name . EQUAL mod_longident list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## MODULE ext list(attribute) module_name
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: MODULE UIDENT EQUAL WITH
##
## Concrete syntax: module UIdent = with
##
## Ends in an error in state: 1508.
##
## signature_item -> MODULE ext list(attribute) module_name EQUAL . mod_longident list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## MODULE ext list(attribute) module_name EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: MODULE UIDENT EQUAL UIDENT WITH
##
## Concrete syntax: module UIdent = UIdent with
##
## Ends in an error in state: 1509.
##
## mk_longident(mod_longident,UIDENT) -> mod_longident . DOT UIDENT [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF DOT CLASS ]
## signature_item -> MODULE ext list(attribute) module_name EQUAL mod_longident . list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## MODULE ext list(attribute) module_name EQUAL mod_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: MODULE UIDENT COLON WITH
##
## Concrete syntax: module UIdent : with
##
## Ends in an error in state: 1511.
##
## module_declaration_body -> COLON . module_type [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: MODULE UIDENT COLON QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: module UIdent : {%hello|world|} while
##
## Ends in an error in state: 1512.
##
## module_declaration_body -> COLON module_type . [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
## module_type -> module_type . attribute [ WITH VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
## module_type -> module_type . MINUSGREATER module_type [ WITH VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
## module_type -> module_type . WITH reversed_separated_nonempty_llist(AND,with_constraint) [ WITH VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## COLON module_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: MODULE UIDENT LPAREN RPAREN WITH
##
## Concrete syntax: module UIdent ( ) with
##
## Ends in an error in state: 1515.
##
## module_declaration_body -> functor_arg . module_declaration_body [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## functor_arg
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE WITH
##
## Concrete syntax: include with
##
## Ends in an error in state: 1517.
##
## signature_item -> INCLUDE . ext list(attribute) module_type list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## INCLUDE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE PERCENT AND WHILE
##
## Concrete syntax: include % and while
##
## Ends in an error in state: 1518.
##
## signature_item -> INCLUDE ext . list(attribute) module_type list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## INCLUDE ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: include [@ and ] while
##
## Ends in an error in state: 1519.
##
## signature_item -> INCLUDE ext list(attribute) . module_type list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## INCLUDE ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: include {%hello|world|} while
##
## Ends in an error in state: 1520.
##
## module_type -> module_type . attribute [ WITH VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
## module_type -> module_type . MINUSGREATER module_type [ WITH VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
## module_type -> module_type . WITH reversed_separated_nonempty_llist(AND,with_constraint) [ WITH VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
## signature_item -> INCLUDE ext list(attribute) module_type . list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## INCLUDE ext list(attribute) module_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: EXCEPTION WITH
##
## Concrete syntax: exception with
##
## Ends in an error in state: 1522.
##
## sig_exception_declaration -> EXCEPTION . ext list(attribute) constr_ident generalized_constructor_arguments list(attribute) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## EXCEPTION
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: EXCEPTION PERCENT AND WHILE
##
## Concrete syntax: exception % and while
##
## Ends in an error in state: 1523.
##
## sig_exception_declaration -> EXCEPTION ext . list(attribute) constr_ident generalized_constructor_arguments list(attribute) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## EXCEPTION ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: EXCEPTION LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: exception [@ and ] while
##
## Ends in an error in state: 1524.
##
## sig_exception_declaration -> EXCEPTION ext list(attribute) . constr_ident generalized_constructor_arguments list(attribute) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## EXCEPTION ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: EXCEPTION FALSE WITH
##
## Concrete syntax: exception false with
##
## Ends in an error in state: 1525.
##
## sig_exception_declaration -> EXCEPTION ext list(attribute) constr_ident . generalized_constructor_arguments list(attribute) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## EXCEPTION ext list(attribute) constr_ident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: CLASS WITH
##
## Concrete syntax: class with
##
## Ends in an error in state: 1526.
##
## class_type_declarations -> CLASS . TYPE ext list(attribute) virtual_flag formal_class_parameters LIDENT EQUAL class_signature list(post_item_attribute) list(and_class_type_declaration) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
## signature_item -> CLASS . ext list(attribute) virtual_flag formal_class_parameters LIDENT COLON class_type list(post_item_attribute) list(and_class_description) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## CLASS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS TYPE WITH
##
## Concrete syntax: class type with
##
## Ends in an error in state: 1527.
##
## class_type_declarations -> CLASS TYPE . ext list(attribute) virtual_flag formal_class_parameters LIDENT EQUAL class_signature list(post_item_attribute) list(and_class_type_declaration) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## CLASS TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS TYPE PERCENT AND WHILE
##
## Concrete syntax: class type % and while
##
## Ends in an error in state: 1528.
##
## class_type_declarations -> CLASS TYPE ext . list(attribute) virtual_flag formal_class_parameters LIDENT EQUAL class_signature list(post_item_attribute) list(and_class_type_declaration) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## CLASS TYPE ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS TYPE LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: class type [@ and ] while
##
## Ends in an error in state: 1529.
##
## class_type_declarations -> CLASS TYPE ext list(attribute) . virtual_flag formal_class_parameters LIDENT EQUAL class_signature list(post_item_attribute) list(and_class_type_declaration) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## CLASS TYPE ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS TYPE VIRTUAL WITH
##
## Concrete syntax: class type virtual with
##
## Ends in an error in state: 1531.
##
## class_type_declarations -> CLASS TYPE ext list(attribute) virtual_flag . formal_class_parameters LIDENT EQUAL class_signature list(post_item_attribute) list(and_class_type_declaration) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## CLASS TYPE ext list(attribute) virtual_flag
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LBRACKET WITH
##
## Concrete syntax: class [ with
##
## Ends in an error in state: 1532.
##
## formal_class_parameters -> LBRACKET . reversed_separated_nonempty_llist(COMMA,type_parameter) RBRACKET [ LIDENT ]
##
## The known suffix of the stack is as follows:
## LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LBRACKET UNDERSCORE WITH
##
## Concrete syntax: class [ _ with
##
## Ends in an error in state: 1533.
##
## formal_class_parameters -> LBRACKET reversed_separated_nonempty_llist(COMMA,type_parameter) . RBRACKET [ LIDENT ]
## reversed_separated_nonempty_llist(COMMA,type_parameter) -> reversed_separated_nonempty_llist(COMMA,type_parameter) . COMMA type_parameter [ RBRACKET COMMA ]
##
## The known suffix of the stack is as follows:
## LBRACKET reversed_separated_nonempty_llist(COMMA,type_parameter)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS TYPE LBRACKET UNDERSCORE RBRACKET WITH
##
## Concrete syntax: class type [ _ ] with
##
## Ends in an error in state: 1535.
##
## class_type_declarations -> CLASS TYPE ext list(attribute) virtual_flag formal_class_parameters . LIDENT EQUAL class_signature list(post_item_attribute) list(and_class_type_declaration) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## CLASS TYPE ext list(attribute) virtual_flag formal_class_parameters
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS TYPE LIDENT WITH
##
## Concrete syntax: class type lident with
##
## Ends in an error in state: 1536.
##
## class_type_declarations -> CLASS TYPE ext list(attribute) virtual_flag formal_class_parameters LIDENT . EQUAL class_signature list(post_item_attribute) list(and_class_type_declaration) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## CLASS TYPE ext list(attribute) virtual_flag formal_class_parameters LIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS TYPE LIDENT EQUAL WITH
##
## Concrete syntax: class type lident = with
##
## Ends in an error in state: 1537.
##
## class_type_declarations -> CLASS TYPE ext list(attribute) virtual_flag formal_class_parameters LIDENT EQUAL . class_signature list(post_item_attribute) list(and_class_type_declaration) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## CLASS TYPE ext list(attribute) virtual_flag formal_class_parameters LIDENT EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT COLON OBJECT WITH
##
## Concrete syntax: class lident : object with
##
## Ends in an error in state: 1538.
##
## class_signature -> OBJECT . list(attribute) class_self_type list(text_csig(class_sig_field)) END [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF CLASS AND ]
## class_signature -> OBJECT . list(attribute) class_self_type list(text_csig(class_sig_field)) error [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## OBJECT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT COLON OBJECT LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: class lident : object [@ and ] while
##
## Ends in an error in state: 1539.
##
## class_signature -> OBJECT list(attribute) . class_self_type list(text_csig(class_sig_field)) END [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF CLASS AND ]
## class_signature -> OBJECT list(attribute) . class_self_type list(text_csig(class_sig_field)) error [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## OBJECT list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1700, spurious reduction of production list(attribute) ->
## In state 1701, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT COLON OBJECT LPAREN WITH
##
## Concrete syntax: class lident : object ( with
##
## Ends in an error in state: 1540.
##
## class_self_type -> LPAREN . core_type RPAREN [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT COLON OBJECT LPAREN QUOTED_STRING_EXPR WITH
##
## Concrete syntax: class lident : object ( {%hello|world|} with
##
## Ends in an error in state: 1541.
##
## class_self_type -> LPAREN core_type . RPAREN [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INHERIT END CONSTRAINT ]
## core_type -> core_type . attribute [ RPAREN LBRACKETAT ]
##
## The known suffix of the stack is as follows:
## LPAREN core_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 358, spurious reduction of production tuple_type -> atomic_type
## In state 344, spurious reduction of production function_type -> tuple_type
## In state 374, spurious reduction of production alias_type -> function_type
## In state 384, spurious reduction of production core_type -> alias_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT COLON OBJECT LPAREN QUOTED_STRING_EXPR RPAREN WITH
##
## Concrete syntax: class lident : object ( {%hello|world|} ) with
##
## Ends in an error in state: 1543.
##
## class_signature -> OBJECT list(attribute) class_self_type . list(text_csig(class_sig_field)) END [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF CLASS AND ]
## class_signature -> OBJECT list(attribute) class_self_type . list(text_csig(class_sig_field)) error [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## OBJECT list(attribute) class_self_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT COLON OBJECT VAL WITH
##
## Concrete syntax: class lident : object val with
##
## Ends in an error in state: 1544.
##
## class_sig_field -> VAL . list(attribute) mutable_virtual_flags LIDENT COLON core_type list(post_item_attribute) [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## VAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT COLON OBJECT VAL LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: class lident : object val [@ and ] while
##
## Ends in an error in state: 1545.
##
## class_sig_field -> VAL list(attribute) . mutable_virtual_flags LIDENT COLON core_type list(post_item_attribute) [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## VAL list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT COLON OBJECT VAL VIRTUAL WITH
##
## Concrete syntax: class lident : object val virtual with
##
## Ends in an error in state: 1546.
##
## mutable_virtual_flags -> VIRTUAL . [ LIDENT ]
## mutable_virtual_flags -> VIRTUAL . MUTABLE [ LIDENT ]
##
## The known suffix of the stack is as follows:
## VIRTUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT COLON OBJECT VAL MUTABLE WITH
##
## Concrete syntax: class lident : object val mutable with
##
## Ends in an error in state: 1548.
##
## mutable_virtual_flags -> MUTABLE . [ LIDENT ]
## mutable_virtual_flags -> MUTABLE . VIRTUAL [ LIDENT ]
##
## The known suffix of the stack is as follows:
## MUTABLE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT COLON OBJECT VAL MUTABLE VIRTUAL WITH
##
## Concrete syntax: class lident : object val mutable virtual with
##
## Ends in an error in state: 1550.
##
## class_sig_field -> VAL list(attribute) mutable_virtual_flags . LIDENT COLON core_type list(post_item_attribute) [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## VAL list(attribute) mutable_virtual_flags
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT COLON OBJECT VAL LIDENT WITH
##
## Concrete syntax: class lident : object val lident with
##
## Ends in an error in state: 1551.
##
## class_sig_field -> VAL list(attribute) mutable_virtual_flags LIDENT . COLON core_type list(post_item_attribute) [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## VAL list(attribute) mutable_virtual_flags LIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT COLON OBJECT VAL LIDENT COLON WITH
##
## Concrete syntax: class lident : object val lident : with
##
## Ends in an error in state: 1552.
##
## class_sig_field -> VAL list(attribute) mutable_virtual_flags LIDENT COLON . core_type list(post_item_attribute) [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## VAL list(attribute) mutable_virtual_flags LIDENT COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT COLON OBJECT VAL LIDENT COLON QUOTED_STRING_EXPR WITH
##
## Concrete syntax: class lident : object val lident : {%hello|world|} with
##
## Ends in an error in state: 1553.
##
## class_sig_field -> VAL list(attribute) mutable_virtual_flags LIDENT COLON core_type . list(post_item_attribute) [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INHERIT END CONSTRAINT ]
## core_type -> core_type . attribute [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## VAL list(attribute) mutable_virtual_flags LIDENT COLON core_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 568, spurious reduction of production tuple_type -> atomic_type
## In state 555, spurious reduction of production function_type -> tuple_type
## In state 572, spurious reduction of production alias_type -> function_type
## In state 585, spurious reduction of production core_type -> alias_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT QUOTED_STRING_ITEM LBRACKETATAT UNDERSCORE
##
## Concrete syntax: object {%%hello|world|} [@@ _
##
## Ends in an error in state: 1554.
##
## post_item_attribute -> LBRACKETATAT . attr_id payload RBRACKET [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT INCLUDE IN EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
##
## The known suffix of the stack is as follows:
## LBRACKETATAT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT QUOTED_STRING_ITEM LBRACKETATAT AND VIRTUAL
##
## Concrete syntax: object {%%hello|world|} [@@ and virtual
##
## Ends in an error in state: 1555.
##
## post_item_attribute -> LBRACKETATAT attr_id . payload RBRACKET [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT INCLUDE IN EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
##
## The known suffix of the stack is as follows:
## LBRACKETATAT attr_id
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS WITH
##
## Concrete syntax: class with
##
## Ends in an error in state: 1556.
##
## class_type_declarations -> CLASS . TYPE ext list(attribute) virtual_flag formal_class_parameters LIDENT EQUAL class_signature list(post_item_attribute) list(and_class_type_declaration) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
## structure_item -> CLASS . ext list(attribute) virtual_flag formal_class_parameters LIDENT class_fun_binding list(post_item_attribute) list(and_class_declaration) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## CLASS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS PERCENT AND WHILE
##
## Concrete syntax: class % and while
##
## Ends in an error in state: 1557.
##
## structure_item -> CLASS ext . list(attribute) virtual_flag formal_class_parameters LIDENT class_fun_binding list(post_item_attribute) list(and_class_declaration) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## CLASS ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: class [@ and ] while
##
## Ends in an error in state: 1558.
##
## structure_item -> CLASS ext list(attribute) . virtual_flag formal_class_parameters LIDENT class_fun_binding list(post_item_attribute) list(and_class_declaration) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## CLASS ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS VIRTUAL WITH
##
## Concrete syntax: class virtual with
##
## Ends in an error in state: 1559.
##
## structure_item -> CLASS ext list(attribute) virtual_flag . formal_class_parameters LIDENT class_fun_binding list(post_item_attribute) list(and_class_declaration) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## CLASS ext list(attribute) virtual_flag
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LBRACKET UNDERSCORE RBRACKET WITH
##
## Concrete syntax: class [ _ ] with
##
## Ends in an error in state: 1560.
##
## structure_item -> CLASS ext list(attribute) virtual_flag formal_class_parameters . LIDENT class_fun_binding list(post_item_attribute) list(and_class_declaration) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## CLASS ext list(attribute) virtual_flag formal_class_parameters
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT WITH
##
## Concrete syntax: class lident with
##
## Ends in an error in state: 1561.
##
## structure_item -> CLASS ext list(attribute) virtual_flag formal_class_parameters LIDENT . class_fun_binding list(post_item_attribute) list(and_class_declaration) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## CLASS ext list(attribute) virtual_flag formal_class_parameters LIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT EQUAL WITH
##
## Concrete syntax: class lident = with
##
## Ends in an error in state: 1562.
##
## class_fun_binding -> EQUAL . class_expr [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT EQUAL OBJECT WITH
##
## Concrete syntax: class lident = object with
##
## Ends in an error in state: 1563.
##
## class_simple_expr -> OBJECT . list(attribute) class_self_pattern list(text_cstr(class_field)) error [ VAL UIDENT TYPE TRUE TILDE STRING SEMISEMI RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP OPTLABEL OPEN NEW MODULE LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INCLUDE HASH FLOAT FALSE EXTERNAL EXCEPTION EOF CLASS CHAR BEGIN BANG BACKQUOTE AND ]
## class_simple_expr -> OBJECT . list(attribute) class_self_pattern list(text_cstr(class_field)) END [ VAL UIDENT TYPE TRUE TILDE STRING SEMISEMI RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP OPTLABEL OPEN NEW MODULE LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INCLUDE HASH FLOAT FALSE EXTERNAL EXCEPTION EOF CLASS CHAR BEGIN BANG BACKQUOTE AND ]
##
## The known suffix of the stack is as follows:
## OBJECT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT EQUAL OBJECT LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: class lident = object [@ and ] while
##
## Ends in an error in state: 1564.
##
## class_simple_expr -> OBJECT list(attribute) . class_self_pattern list(text_cstr(class_field)) error [ VAL UIDENT TYPE TRUE TILDE STRING SEMISEMI RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP OPTLABEL OPEN NEW MODULE LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INCLUDE HASH FLOAT FALSE EXTERNAL EXCEPTION EOF CLASS CHAR BEGIN BANG BACKQUOTE AND ]
## class_simple_expr -> OBJECT list(attribute) . class_self_pattern list(text_cstr(class_field)) END [ VAL UIDENT TYPE TRUE TILDE STRING SEMISEMI RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP OPTLABEL OPEN NEW MODULE LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INCLUDE HASH FLOAT FALSE EXTERNAL EXCEPTION EOF CLASS CHAR BEGIN BANG BACKQUOTE AND ]
##
## The known suffix of the stack is as follows:
## OBJECT list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1700, spurious reduction of production list(attribute) ->
## In state 1701, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT EQUAL OBJECT LPAREN FALSE RPAREN WITH
##
## Concrete syntax: class lident = object ( false ) with
##
## Ends in an error in state: 1565.
##
## class_simple_expr -> OBJECT list(attribute) class_self_pattern . list(text_cstr(class_field)) error [ VAL UIDENT TYPE TRUE TILDE STRING SEMISEMI RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP OPTLABEL OPEN NEW MODULE LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INCLUDE HASH FLOAT FALSE EXTERNAL EXCEPTION EOF CLASS CHAR BEGIN BANG BACKQUOTE AND ]
## class_simple_expr -> OBJECT list(attribute) class_self_pattern . list(text_cstr(class_field)) END [ VAL UIDENT TYPE TRUE TILDE STRING SEMISEMI RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP OPTLABEL OPEN NEW MODULE LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INCLUDE HASH FLOAT FALSE EXTERNAL EXCEPTION EOF CLASS CHAR BEGIN BANG BACKQUOTE AND ]
##
## The known suffix of the stack is as follows:
## OBJECT list(attribute) class_self_pattern
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT METHOD WITH
##
## Concrete syntax: object method with
##
## Ends in an error in state: 1566.
##
## class_field -> METHOD . method_ list(post_item_attribute) [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## METHOD
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT METHOD BANG WITH
##
## Concrete syntax: object method ! with
##
## Ends in an error in state: 1567.
##
## method_ -> BANG . list(attribute) private_flag LIDENT strict_binding [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
## method_ -> BANG . list(attribute) private_flag LIDENT COLON possibly_poly(core_type) EQUAL seq_expr [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
## method_ -> BANG . list(attribute) private_flag LIDENT COLON TYPE nonempty_list(mkrhs(LIDENT)) DOT core_type EQUAL seq_expr [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## BANG
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT METHOD BANG LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: object method ! [@ and ] while
##
## Ends in an error in state: 1568.
##
## method_ -> BANG list(attribute) . private_flag LIDENT strict_binding [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
## method_ -> BANG list(attribute) . private_flag LIDENT COLON possibly_poly(core_type) EQUAL seq_expr [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
## method_ -> BANG list(attribute) . private_flag LIDENT COLON TYPE nonempty_list(mkrhs(LIDENT)) DOT core_type EQUAL seq_expr [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## BANG list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT METHOD BANG PRIVATE WITH
##
## Concrete syntax: object method ! private with
##
## Ends in an error in state: 1569.
##
## method_ -> BANG list(attribute) private_flag . LIDENT strict_binding [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
## method_ -> BANG list(attribute) private_flag . LIDENT COLON possibly_poly(core_type) EQUAL seq_expr [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
## method_ -> BANG list(attribute) private_flag . LIDENT COLON TYPE nonempty_list(mkrhs(LIDENT)) DOT core_type EQUAL seq_expr [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## BANG list(attribute) private_flag
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT METHOD BANG LIDENT WITH
##
## Concrete syntax: object method ! lident with
##
## Ends in an error in state: 1570.
##
## method_ -> BANG list(attribute) private_flag LIDENT . strict_binding [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
## method_ -> BANG list(attribute) private_flag LIDENT . COLON possibly_poly(core_type) EQUAL seq_expr [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
## method_ -> BANG list(attribute) private_flag LIDENT . COLON TYPE nonempty_list(mkrhs(LIDENT)) DOT core_type EQUAL seq_expr [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## BANG list(attribute) private_flag LIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT METHOD LIDENT LPAREN WITH
##
## Concrete syntax: object method lident ( with
##
## Ends in an error in state: 1571.
##
## constr_extra_nonprefix_ident -> LPAREN . RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
## constr_longident -> LPAREN . COLONCOLON RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
## simple_pattern_not_ident -> LPAREN . pattern RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
## simple_pattern_not_ident -> LPAREN . MODULE ext list(attribute) module_name RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
## simple_pattern_not_ident -> LPAREN . MODULE ext list(attribute) module_name COLON module_type RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
## simple_pattern_not_ident -> LPAREN . pattern error [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
## simple_pattern_not_ident -> LPAREN . pattern COLON core_type RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
## simple_pattern_not_ident -> LPAREN . pattern COLON core_type error [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
## simple_pattern_not_ident -> LPAREN . pattern COLON error [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
## simple_pattern_not_ident -> LPAREN . MODULE ext list(attribute) module_name COLON module_type error [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
## strict_binding -> LPAREN . TYPE nonempty_list(mkrhs(LIDENT)) RPAREN fun_binding [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT INCLUDE IN EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
## val_extra_ident -> LPAREN . operator RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
## val_extra_ident -> LPAREN . operator error [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
## val_extra_ident -> LPAREN . error [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
## val_extra_ident -> LPAREN . MODULE error [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT METHOD LIDENT LPAREN TYPE WITH
##
## Concrete syntax: object method lident ( type with
##
## Ends in an error in state: 1572.
##
## strict_binding -> LPAREN TYPE . nonempty_list(mkrhs(LIDENT)) RPAREN fun_binding [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT INCLUDE IN EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
##
## The known suffix of the stack is as follows:
## LPAREN TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT METHOD LIDENT LPAREN TYPE LIDENT DOT
##
## Concrete syntax: object method lident ( type lident .
##
## Ends in an error in state: 1573.
##
## strict_binding -> LPAREN TYPE nonempty_list(mkrhs(LIDENT)) . RPAREN fun_binding [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT INCLUDE IN EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
##
## The known suffix of the stack is as follows:
## LPAREN TYPE nonempty_list(mkrhs(LIDENT))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 750, spurious reduction of production nonempty_list(mkrhs(LIDENT)) -> LIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT METHOD LIDENT LPAREN TYPE LIDENT RPAREN WITH
##
## Concrete syntax: object method lident ( type lident ) with
##
## Ends in an error in state: 1574.
##
## strict_binding -> LPAREN TYPE nonempty_list(mkrhs(LIDENT)) RPAREN . fun_binding [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT INCLUDE IN EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
##
## The known suffix of the stack is as follows:
## LPAREN TYPE nonempty_list(mkrhs(LIDENT)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT METHOD LIDENT EQUAL WITH
##
## Concrete syntax: object method lident = with
##
## Ends in an error in state: 1575.
##
## strict_binding -> EQUAL . seq_expr [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT INCLUDE IN EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
##
## The known suffix of the stack is as follows:
## EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT METHOD LIDENT FALSE COLON QUOTED_STRING_EXPR RPAREN
##
## Concrete syntax: object method lident false : {%hello|world|} )
##
## Ends in an error in state: 1577.
##
## fun_binding -> type_constraint . EQUAL seq_expr [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT INCLUDE IN EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
##
## The known suffix of the stack is as follows:
## type_constraint
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 358, spurious reduction of production tuple_type -> atomic_type
## In state 344, spurious reduction of production function_type -> tuple_type
## In state 374, spurious reduction of production alias_type -> function_type
## In state 384, spurious reduction of production core_type -> alias_type
## In state 1234, spurious reduction of production type_constraint -> COLON core_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT METHOD LIDENT FALSE COLON QUOTED_STRING_EXPR EQUAL WITH
##
## Concrete syntax: object method lident false : {%hello|world|} = with
##
## Ends in an error in state: 1578.
##
## fun_binding -> type_constraint EQUAL . seq_expr [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT INCLUDE IN EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
##
## The known suffix of the stack is as follows:
## type_constraint EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT METHOD LIDENT FALSE WHILE
##
## Concrete syntax: object method lident false while
##
## Ends in an error in state: 1581.
##
## strict_binding -> labeled_simple_pattern . fun_binding [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT INCLUDE IN EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
##
## The known suffix of the stack is as follows:
## labeled_simple_pattern
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT METHOD BANG LIDENT COLON WITH
##
## Concrete syntax: object method ! lident : with
##
## Ends in an error in state: 1584.
##
## method_ -> BANG list(attribute) private_flag LIDENT COLON . possibly_poly(core_type) EQUAL seq_expr [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
## method_ -> BANG list(attribute) private_flag LIDENT COLON . TYPE nonempty_list(mkrhs(LIDENT)) DOT core_type EQUAL seq_expr [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## BANG list(attribute) private_flag LIDENT COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT METHOD BANG LIDENT COLON TYPE WITH
##
## Concrete syntax: object method ! lident : type with
##
## Ends in an error in state: 1585.
##
## method_ -> BANG list(attribute) private_flag LIDENT COLON TYPE . nonempty_list(mkrhs(LIDENT)) DOT core_type EQUAL seq_expr [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## BANG list(attribute) private_flag LIDENT COLON TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT METHOD BANG LIDENT COLON TYPE LIDENT RPAREN
##
## Concrete syntax: object method ! lident : type lident )
##
## Ends in an error in state: 1586.
##
## method_ -> BANG list(attribute) private_flag LIDENT COLON TYPE nonempty_list(mkrhs(LIDENT)) . DOT core_type EQUAL seq_expr [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## BANG list(attribute) private_flag LIDENT COLON TYPE nonempty_list(mkrhs(LIDENT))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 750, spurious reduction of production nonempty_list(mkrhs(LIDENT)) -> LIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT METHOD BANG LIDENT COLON TYPE LIDENT DOT WITH
##
## Concrete syntax: object method ! lident : type lident . with
##
## Ends in an error in state: 1587.
##
## method_ -> BANG list(attribute) private_flag LIDENT COLON TYPE nonempty_list(mkrhs(LIDENT)) DOT . core_type EQUAL seq_expr [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## BANG list(attribute) private_flag LIDENT COLON TYPE nonempty_list(mkrhs(LIDENT)) DOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT METHOD BANG LIDENT COLON TYPE LIDENT DOT QUOTED_STRING_EXPR WITH
##
## Concrete syntax: object method ! lident : type lident . {%hello|world|} with
##
## Ends in an error in state: 1588.
##
## core_type -> core_type . attribute [ LBRACKETAT EQUAL ]
## method_ -> BANG list(attribute) private_flag LIDENT COLON TYPE nonempty_list(mkrhs(LIDENT)) DOT core_type . EQUAL seq_expr [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## BANG list(attribute) private_flag LIDENT COLON TYPE nonempty_list(mkrhs(LIDENT)) DOT core_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 358, spurious reduction of production tuple_type -> atomic_type
## In state 344, spurious reduction of production function_type -> tuple_type
## In state 374, spurious reduction of production alias_type -> function_type
## In state 384, spurious reduction of production core_type -> alias_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT METHOD BANG LIDENT COLON TYPE LIDENT DOT QUOTED_STRING_EXPR EQUAL WITH
##
## Concrete syntax: object method ! lident : type lident . {%hello|world|} = with
##
## Ends in an error in state: 1589.
##
## method_ -> BANG list(attribute) private_flag LIDENT COLON TYPE nonempty_list(mkrhs(LIDENT)) DOT core_type EQUAL . seq_expr [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## BANG list(attribute) private_flag LIDENT COLON TYPE nonempty_list(mkrhs(LIDENT)) DOT core_type EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT METHOD LIDENT COLON QUOTE LIDENT QUOTE LIDENT WITH
##
## Concrete syntax: object method lident : ' lident ' lident with
##
## Ends in an error in state: 1591.
##
## possibly_poly(core_type) -> reversed_nonempty_llist(typevar) . DOT core_type [ EQUAL ]
## reversed_nonempty_llist(typevar) -> reversed_nonempty_llist(typevar) . QUOTE ident [ QUOTE DOT ]
##
## The known suffix of the stack is as follows:
## reversed_nonempty_llist(typevar)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT METHOD LIDENT COLON QUOTE LIDENT DOT WITH
##
## Concrete syntax: object method lident : ' lident . with
##
## Ends in an error in state: 1592.
##
## possibly_poly(core_type) -> reversed_nonempty_llist(typevar) DOT . core_type [ EQUAL ]
##
## The known suffix of the stack is as follows:
## reversed_nonempty_llist(typevar) DOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT METHOD LIDENT COLON QUOTE LIDENT DOT QUOTED_STRING_EXPR WITH
##
## Concrete syntax: object method lident : ' lident . {%hello|world|} with
##
## Ends in an error in state: 1593.
##
## core_type -> core_type . attribute [ LBRACKETAT EQUAL ]
## possibly_poly(core_type) -> reversed_nonempty_llist(typevar) DOT core_type . [ EQUAL ]
##
## The known suffix of the stack is as follows:
## reversed_nonempty_llist(typevar) DOT core_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 358, spurious reduction of production tuple_type -> atomic_type
## In state 344, spurious reduction of production function_type -> tuple_type
## In state 374, spurious reduction of production alias_type -> function_type
## In state 384, spurious reduction of production core_type -> alias_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT METHOD BANG LIDENT COLON QUOTED_STRING_EXPR EQUAL WITH
##
## Concrete syntax: object method ! lident : {%hello|world|} = with
##
## Ends in an error in state: 1595.
##
## method_ -> BANG list(attribute) private_flag LIDENT COLON possibly_poly(core_type) EQUAL . seq_expr [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## BANG list(attribute) private_flag LIDENT COLON possibly_poly(core_type) EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT METHOD LIDENT COLON QUOTED_STRING_EXPR WITH
##
## Concrete syntax: object method lident : {%hello|world|} with
##
## Ends in an error in state: 1597.
##
## core_type -> core_type . attribute [ LBRACKETAT EQUAL ]
## possibly_poly(core_type) -> core_type . [ EQUAL ]
##
## The known suffix of the stack is as follows:
## core_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 358, spurious reduction of production tuple_type -> atomic_type
## In state 344, spurious reduction of production function_type -> tuple_type
## In state 374, spurious reduction of production alias_type -> function_type
## In state 384, spurious reduction of production core_type -> alias_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT METHOD LIDENT EQUAL UIDENT TYPE
##
## Concrete syntax: object method lident = UIdent type
##
## Ends in an error in state: 1599.
##
## class_field -> METHOD method_ . list(post_item_attribute) [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## METHOD method_
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1048, spurious reduction of production constr_longident -> mod_longident
## In state 1101, spurious reduction of production simple_expr -> constr_longident
## In state 1074, spurious reduction of production expr -> simple_expr
## In state 1095, spurious reduction of production seq_expr -> expr
## In state 1576, spurious reduction of production strict_binding -> EQUAL seq_expr
## In state 1630, spurious reduction of production method_ -> list(attribute) private_flag LIDENT strict_binding
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT QUOTED_STRING_ITEM LBRACKETATAT AND RBRACKET WITH
##
## Concrete syntax: object {%%hello|world|} [@@ and ] with
##
## Ends in an error in state: 1600.
##
## list(post_item_attribute) -> post_item_attribute . list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT INCLUDE IN EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
##
## The known suffix of the stack is as follows:
## post_item_attribute
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT METHOD LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: object method [@ and ] while
##
## Ends in an error in state: 1603.
##
## method_ -> list(attribute) . virtual_with_private_flag LIDENT COLON possibly_poly(core_type) [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
## method_ -> list(attribute) . private_flag LIDENT strict_binding [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
## method_ -> list(attribute) . private_flag LIDENT COLON possibly_poly(core_type) EQUAL seq_expr [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
## method_ -> list(attribute) . private_flag LIDENT COLON TYPE nonempty_list(mkrhs(LIDENT)) DOT core_type EQUAL seq_expr [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT METHOD VIRTUAL WITH
##
## Concrete syntax: object method virtual with
##
## Ends in an error in state: 1604.
##
## virtual_with_private_flag -> VIRTUAL . [ LIDENT ]
## virtual_with_private_flag -> VIRTUAL . PRIVATE [ LIDENT ]
##
## The known suffix of the stack is as follows:
## VIRTUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT METHOD PRIVATE WITH
##
## Concrete syntax: object method private with
##
## Ends in an error in state: 1606.
##
## private_flag -> PRIVATE . [ LIDENT ]
## virtual_with_private_flag -> PRIVATE . VIRTUAL [ LIDENT ]
##
## The known suffix of the stack is as follows:
## PRIVATE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT METHOD PRIVATE VIRTUAL WITH
##
## Concrete syntax: object method private virtual with
##
## Ends in an error in state: 1608.
##
## method_ -> list(attribute) virtual_with_private_flag . LIDENT COLON possibly_poly(core_type) [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## list(attribute) virtual_with_private_flag
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT METHOD VIRTUAL LIDENT WITH
##
## Concrete syntax: object method virtual lident with
##
## Ends in an error in state: 1609.
##
## method_ -> list(attribute) virtual_with_private_flag LIDENT . COLON possibly_poly(core_type) [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## list(attribute) virtual_with_private_flag LIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT METHOD VIRTUAL LIDENT COLON WITH
##
## Concrete syntax: object method virtual lident : with
##
## Ends in an error in state: 1610.
##
## method_ -> list(attribute) virtual_with_private_flag LIDENT COLON . possibly_poly(core_type) [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## list(attribute) virtual_with_private_flag LIDENT COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT METHOD VIRTUAL LIDENT COLON QUOTE WITH
##
## Concrete syntax: object method virtual lident : ' with
##
## Ends in an error in state: 1611.
##
## atomic_type -> QUOTE . ident [ error VAL UIDENT STAR QUOTED_STRING_ITEM MINUSGREATER METHOD LIDENT LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT HASH END CONSTRAINT AS ]
## reversed_nonempty_llist(typevar) -> QUOTE . ident [ QUOTE DOT ]
##
## The known suffix of the stack is as follows:
## QUOTE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT METHOD VIRTUAL LIDENT COLON QUOTE LIDENT WITH
##
## Concrete syntax: object method virtual lident : ' lident with
##
## Ends in an error in state: 1612.
##
## atomic_type -> QUOTE ident . [ error VAL UIDENT STAR QUOTED_STRING_ITEM MINUSGREATER METHOD LIDENT LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT HASH END CONSTRAINT AS ]
## reversed_nonempty_llist(typevar) -> QUOTE ident . [ QUOTE DOT ]
##
## The known suffix of the stack is as follows:
## QUOTE ident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT METHOD VIRTUAL LIDENT COLON QUOTE LIDENT QUOTE LIDENT WITH
##
## Concrete syntax: object method virtual lident : ' lident ' lident with
##
## Ends in an error in state: 1613.
##
## possibly_poly(core_type) -> reversed_nonempty_llist(typevar) . DOT core_type [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
## reversed_nonempty_llist(typevar) -> reversed_nonempty_llist(typevar) . QUOTE ident [ QUOTE DOT ]
##
## The known suffix of the stack is as follows:
## reversed_nonempty_llist(typevar)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT METHOD VIRTUAL LIDENT COLON QUOTE LIDENT DOT WITH
##
## Concrete syntax: object method virtual lident : ' lident . with
##
## Ends in an error in state: 1614.
##
## possibly_poly(core_type) -> reversed_nonempty_llist(typevar) DOT . core_type [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## reversed_nonempty_llist(typevar) DOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT METHOD VIRTUAL LIDENT COLON QUOTE LIDENT DOT QUOTED_STRING_EXPR WITH
##
## Concrete syntax: object method virtual lident : ' lident . {%hello|world|} with
##
## Ends in an error in state: 1615.
##
## core_type -> core_type . attribute [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT END CONSTRAINT ]
## possibly_poly(core_type) -> reversed_nonempty_llist(typevar) DOT core_type . [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## reversed_nonempty_llist(typevar) DOT core_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 568, spurious reduction of production tuple_type -> atomic_type
## In state 555, spurious reduction of production function_type -> tuple_type
## In state 572, spurious reduction of production alias_type -> function_type
## In state 585, spurious reduction of production core_type -> alias_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT METHOD VIRTUAL LIDENT COLON QUOTED_STRING_EXPR WITH
##
## Concrete syntax: object method virtual lident : {%hello|world|} with
##
## Ends in an error in state: 1617.
##
## core_type -> core_type . attribute [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT END CONSTRAINT ]
## possibly_poly(core_type) -> core_type . [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## core_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 568, spurious reduction of production tuple_type -> atomic_type
## In state 555, spurious reduction of production function_type -> tuple_type
## In state 572, spurious reduction of production alias_type -> function_type
## In state 585, spurious reduction of production core_type -> alias_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT METHOD LIDENT WITH
##
## Concrete syntax: object method lident with
##
## Ends in an error in state: 1619.
##
## method_ -> list(attribute) private_flag LIDENT . strict_binding [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
## method_ -> list(attribute) private_flag LIDENT . COLON possibly_poly(core_type) EQUAL seq_expr [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
## method_ -> list(attribute) private_flag LIDENT . COLON TYPE nonempty_list(mkrhs(LIDENT)) DOT core_type EQUAL seq_expr [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## list(attribute) private_flag LIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT METHOD LIDENT COLON WITH
##
## Concrete syntax: object method lident : with
##
## Ends in an error in state: 1620.
##
## method_ -> list(attribute) private_flag LIDENT COLON . possibly_poly(core_type) EQUAL seq_expr [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
## method_ -> list(attribute) private_flag LIDENT COLON . TYPE nonempty_list(mkrhs(LIDENT)) DOT core_type EQUAL seq_expr [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## list(attribute) private_flag LIDENT COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT METHOD LIDENT COLON TYPE WITH
##
## Concrete syntax: object method lident : type with
##
## Ends in an error in state: 1621.
##
## method_ -> list(attribute) private_flag LIDENT COLON TYPE . nonempty_list(mkrhs(LIDENT)) DOT core_type EQUAL seq_expr [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## list(attribute) private_flag LIDENT COLON TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT METHOD LIDENT COLON TYPE LIDENT RPAREN
##
## Concrete syntax: object method lident : type lident )
##
## Ends in an error in state: 1622.
##
## method_ -> list(attribute) private_flag LIDENT COLON TYPE nonempty_list(mkrhs(LIDENT)) . DOT core_type EQUAL seq_expr [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## list(attribute) private_flag LIDENT COLON TYPE nonempty_list(mkrhs(LIDENT))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 750, spurious reduction of production nonempty_list(mkrhs(LIDENT)) -> LIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT METHOD LIDENT COLON TYPE LIDENT DOT WITH
##
## Concrete syntax: object method lident : type lident . with
##
## Ends in an error in state: 1623.
##
## method_ -> list(attribute) private_flag LIDENT COLON TYPE nonempty_list(mkrhs(LIDENT)) DOT . core_type EQUAL seq_expr [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## list(attribute) private_flag LIDENT COLON TYPE nonempty_list(mkrhs(LIDENT)) DOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT METHOD LIDENT COLON TYPE LIDENT DOT QUOTED_STRING_EXPR WITH
##
## Concrete syntax: object method lident : type lident . {%hello|world|} with
##
## Ends in an error in state: 1624.
##
## core_type -> core_type . attribute [ LBRACKETAT EQUAL ]
## method_ -> list(attribute) private_flag LIDENT COLON TYPE nonempty_list(mkrhs(LIDENT)) DOT core_type . EQUAL seq_expr [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## list(attribute) private_flag LIDENT COLON TYPE nonempty_list(mkrhs(LIDENT)) DOT core_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 358, spurious reduction of production tuple_type -> atomic_type
## In state 344, spurious reduction of production function_type -> tuple_type
## In state 374, spurious reduction of production alias_type -> function_type
## In state 384, spurious reduction of production core_type -> alias_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT METHOD LIDENT COLON TYPE LIDENT DOT QUOTED_STRING_EXPR EQUAL WITH
##
## Concrete syntax: object method lident : type lident . {%hello|world|} = with
##
## Ends in an error in state: 1625.
##
## method_ -> list(attribute) private_flag LIDENT COLON TYPE nonempty_list(mkrhs(LIDENT)) DOT core_type EQUAL . seq_expr [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## list(attribute) private_flag LIDENT COLON TYPE nonempty_list(mkrhs(LIDENT)) DOT core_type EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT METHOD LIDENT COLON QUOTED_STRING_EXPR EQUAL WITH
##
## Concrete syntax: object method lident : {%hello|world|} = with
##
## Ends in an error in state: 1628.
##
## method_ -> list(attribute) private_flag LIDENT COLON possibly_poly(core_type) EQUAL . seq_expr [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## list(attribute) private_flag LIDENT COLON possibly_poly(core_type) EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT LBRACKETPERCENTPERCENT UNDERSCORE
##
## Concrete syntax: object [%% _
##
## Ends in an error in state: 1631.
##
## item_extension -> LBRACKETPERCENTPERCENT . attr_id payload RBRACKET [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS ]
##
## The known suffix of the stack is as follows:
## LBRACKETPERCENTPERCENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT LBRACKETPERCENTPERCENT AND VIRTUAL
##
## Concrete syntax: object [%% and virtual
##
## Ends in an error in state: 1632.
##
## item_extension -> LBRACKETPERCENTPERCENT attr_id . payload RBRACKET [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS ]
##
## The known suffix of the stack is as follows:
## LBRACKETPERCENTPERCENT attr_id
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: QUOTED_STRING_ITEM HASH
##
## Concrete syntax: {%%hello|world|} #
##
## Ends in an error in state: 1634.
##
## list(structure_element) -> structure_item . list(structure_element) [ RBRACKET EOF ]
##
## The known suffix of the stack is as follows:
## structure_item
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1649, spurious reduction of production list(post_item_attribute) ->
## In state 1650, spurious reduction of production structure_item -> item_extension list(post_item_attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: QUOTED_STRING_ITEM LET WITH
##
## Concrete syntax: {%%hello|world|} let with
##
## Ends in an error in state: 1635.
##
## let_bindings(ext) -> LET . ext list(attribute) rec_flag let_binding_body list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## LET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LET PERCENT AND WHILE
##
## Concrete syntax: let % and while
##
## Ends in an error in state: 1636.
##
## let_bindings(ext) -> LET ext . list(attribute) rec_flag let_binding_body list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## LET ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LET LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: let [@ and ] while
##
## Ends in an error in state: 1637.
##
## let_bindings(ext) -> LET ext list(attribute) . rec_flag let_binding_body list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## LET ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LET REC WITH
##
## Concrete syntax: let rec with
##
## Ends in an error in state: 1639.
##
## let_bindings(ext) -> LET ext list(attribute) rec_flag . let_binding_body list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## LET ext list(attribute) rec_flag
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LET FALSE EQUAL UIDENT TO
##
## Concrete syntax: let false = UIdent to
##
## Ends in an error in state: 1640.
##
## let_bindings(ext) -> LET ext list(attribute) rec_flag let_binding_body . list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## LET ext list(attribute) rec_flag let_binding_body
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 943, spurious reduction of production constr_longident -> mod_longident
## In state 1178, spurious reduction of production simple_expr -> constr_longident
## In state 1032, spurious reduction of production expr -> simple_expr
## In state 1172, spurious reduction of production seq_expr -> expr
## In state 1270, spurious reduction of production let_binding_body_no_punning -> pattern_no_exn EQUAL seq_expr
## In state 1288, spurious reduction of production let_binding_body -> let_binding_body_no_punning
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: QUOTED_STRING_ITEM LET LIDENT IN
##
## Concrete syntax: {%%hello|world|} let lident in
##
## Ends in an error in state: 1648.
##
## let_bindings(ext) -> let_bindings(ext) . and_let_binding [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS AND ]
## structure_item -> let_bindings(ext) . [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## let_bindings(ext)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1152, spurious reduction of production let_binding_body -> val_ident
## In state 1640, spurious reduction of production list(post_item_attribute) ->
## In state 1641, spurious reduction of production let_bindings(ext) -> LET ext list(attribute) rec_flag let_binding_body list(post_item_attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: QUOTED_STRING_ITEM WITH
##
## Concrete syntax: {%%hello|world|} with
##
## Ends in an error in state: 1649.
##
## structure_item -> item_extension . list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## item_extension
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: TYPE LIDENT LBRACKETATAT AND RBRACKET IN
##
## Concrete syntax: type lident [@@ and ] in
##
## Ends in an error in state: 1651.
##
## structure_item -> generic_type_declaration(nonrec_flag,type_kind) . list(generic_and_type_declaration(type_kind)) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## generic_type_declaration(nonrec_flag,type_kind)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1304, spurious reduction of production list(post_item_attribute) ->
## In state 1305, spurious reduction of production list(post_item_attribute) -> post_item_attribute list(post_item_attribute)
## In state 1462, spurious reduction of production generic_type_declaration(nonrec_flag,type_kind) -> TYPE ext list(attribute) type_parameters LIDENT type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: TYPE LIDENT AND WITH
##
## Concrete syntax: type lident and with
##
## Ends in an error in state: 1652.
##
## list(generic_and_type_declaration(type_kind)) -> AND . list(attribute) type_parameters LIDENT type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) list(generic_and_type_declaration(type_kind)) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## AND
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: TYPE LIDENT AND LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: type lident and [@ and ] while
##
## Ends in an error in state: 1653.
##
## list(generic_and_type_declaration(type_kind)) -> AND list(attribute) . type_parameters LIDENT type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) list(generic_and_type_declaration(type_kind)) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## AND list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: TYPE LIDENT AND UNDERSCORE WITH
##
## Concrete syntax: type lident and _ with
##
## Ends in an error in state: 1654.
##
## list(generic_and_type_declaration(type_kind)) -> AND list(attribute) type_parameters . LIDENT type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) list(generic_and_type_declaration(type_kind)) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## AND list(attribute) type_parameters
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: TYPE LIDENT AND LIDENT WITH
##
## Concrete syntax: type lident and lident with
##
## Ends in an error in state: 1655.
##
## list(generic_and_type_declaration(type_kind)) -> AND list(attribute) type_parameters LIDENT . type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) list(generic_and_type_declaration(type_kind)) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## AND list(attribute) type_parameters LIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: TYPE LIDENT AND LIDENT EQUAL DOTDOT WITH
##
## Concrete syntax: type lident and lident = .. with
##
## Ends in an error in state: 1657.
##
## list(generic_and_type_declaration(type_kind)) -> AND list(attribute) type_parameters LIDENT type_kind reversed_llist(preceded(CONSTRAINT,constrain)) . list(post_item_attribute) list(generic_and_type_declaration(type_kind)) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
## reversed_llist(preceded(CONSTRAINT,constrain)) -> reversed_llist(preceded(CONSTRAINT,constrain)) . CONSTRAINT core_type EQUAL core_type [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CONSTRAINT CLASS AND ]
##
## The known suffix of the stack is as follows:
## AND list(attribute) type_parameters LIDENT type_kind reversed_llist(preceded(CONSTRAINT,constrain))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: TYPE LIDENT AND LIDENT LBRACKETATAT AND RBRACKET IN
##
## Concrete syntax: type lident and lident [@@ and ] in
##
## Ends in an error in state: 1658.
##
## list(generic_and_type_declaration(type_kind)) -> AND list(attribute) type_parameters LIDENT type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) . list(generic_and_type_declaration(type_kind)) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## AND list(attribute) type_parameters LIDENT type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1304, spurious reduction of production list(post_item_attribute) ->
## In state 1305, spurious reduction of production list(post_item_attribute) -> post_item_attribute list(post_item_attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT TO
##
## Concrete syntax: UIdent to
##
## Ends in an error in state: 1664.
##
## structure -> seq_expr . list(post_item_attribute) list(structure_element) [ RBRACKET EOF ]
##
## The known suffix of the stack is as follows:
## seq_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 943, spurious reduction of production constr_longident -> mod_longident
## In state 1178, spurious reduction of production simple_expr -> constr_longident
## In state 1032, spurious reduction of production expr -> simple_expr
## In state 1172, spurious reduction of production seq_expr -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT LBRACKETATAT AND RBRACKET IN
##
## Concrete syntax: UIdent [@@ and ] in
##
## Ends in an error in state: 1665.
##
## structure -> seq_expr list(post_item_attribute) . list(structure_element) [ RBRACKET EOF ]
##
## The known suffix of the stack is as follows:
## seq_expr list(post_item_attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1304, spurious reduction of production list(post_item_attribute) ->
## In state 1305, spurious reduction of production list(post_item_attribute) -> post_item_attribute list(post_item_attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT LBRACKETPERCENTPERCENT AND SEMISEMI EOF
##
## Concrete syntax: object [%% and ;; 
##
## Ends in an error in state: 1667.
##
## item_extension -> LBRACKETPERCENTPERCENT attr_id payload . RBRACKET [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS ]
##
## The known suffix of the stack is as follows:
## LBRACKETPERCENTPERCENT attr_id payload
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 433, spurious reduction of production list(structure_element) ->
## In state 2763, spurious reduction of production list(structure_element) -> SEMISEMI list(structure_element)
## In state 1669, spurious reduction of production structure -> list(structure_element)
## In state 1663, spurious reduction of production payload -> structure
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT LBRACKETATATAT UNDERSCORE
##
## Concrete syntax: object [@@@ _
##
## Ends in an error in state: 1671.
##
## floating_attribute -> LBRACKETATATAT . attr_id payload RBRACKET [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS ]
##
## The known suffix of the stack is as follows:
## LBRACKETATATAT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT LBRACKETATATAT AND VIRTUAL
##
## Concrete syntax: object [@@@ and virtual
##
## Ends in an error in state: 1672.
##
## floating_attribute -> LBRACKETATATAT attr_id . payload RBRACKET [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS ]
##
## The known suffix of the stack is as follows:
## LBRACKETATATAT attr_id
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT LBRACKETATATAT AND SEMISEMI EOF
##
## Concrete syntax: object [@@@ and ;; 
##
## Ends in an error in state: 1673.
##
## floating_attribute -> LBRACKETATATAT attr_id payload . RBRACKET [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS ]
##
## The known suffix of the stack is as follows:
## LBRACKETATATAT attr_id payload
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 433, spurious reduction of production list(structure_element) ->
## In state 2763, spurious reduction of production list(structure_element) -> SEMISEMI list(structure_element)
## In state 1669, spurious reduction of production structure -> list(structure_element)
## In state 1663, spurious reduction of production payload -> structure
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INITIALIZER WITH
##
## Concrete syntax: object initializer with
##
## Ends in an error in state: 1675.
##
## class_field -> INITIALIZER . list(attribute) seq_expr list(post_item_attribute) [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## INITIALIZER
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INITIALIZER LBRACKETAT AND RBRACKET VIRTUAL
##
## Concrete syntax: object initializer [@ and ] virtual
##
## Ends in an error in state: 1676.
##
## class_field -> INITIALIZER list(attribute) . seq_expr list(post_item_attribute) [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## INITIALIZER list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INITIALIZER UIDENT TYPE
##
## Concrete syntax: object initializer UIdent type
##
## Ends in an error in state: 1677.
##
## class_field -> INITIALIZER list(attribute) seq_expr . list(post_item_attribute) [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## INITIALIZER list(attribute) seq_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1048, spurious reduction of production constr_longident -> mod_longident
## In state 1101, spurious reduction of production simple_expr -> constr_longident
## In state 1074, spurious reduction of production expr -> simple_expr
## In state 1095, spurious reduction of production seq_expr -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT WITH
##
## Concrete syntax: object inherit with
##
## Ends in an error in state: 1679.
##
## class_field -> INHERIT . list(attribute) class_expr option(preceded(AS,mkrhs(LIDENT))) list(post_item_attribute) [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT ]
## class_field -> INHERIT . BANG list(attribute) class_expr option(preceded(AS,mkrhs(LIDENT))) list(post_item_attribute) [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## INHERIT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT BANG WITH
##
## Concrete syntax: object inherit ! with
##
## Ends in an error in state: 1680.
##
## class_field -> INHERIT BANG . list(attribute) class_expr option(preceded(AS,mkrhs(LIDENT))) list(post_item_attribute) [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## INHERIT BANG
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT BANG LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: object inherit ! [@ and ] while
##
## Ends in an error in state: 1681.
##
## class_field -> INHERIT BANG list(attribute) . class_expr option(preceded(AS,mkrhs(LIDENT))) list(post_item_attribute) [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## INHERIT BANG list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT OBJECT WITH
##
## Concrete syntax: object inherit object with
##
## Ends in an error in state: 1682.
##
## class_simple_expr -> OBJECT . list(attribute) class_self_pattern list(text_cstr(class_field)) error [ error VAL UIDENT TYPE TRUE TILDE STRING SEMISEMI RPAREN QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP OPTLABEL OPEN NEW MODULE METHOD LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INCLUDE FLOAT FALSE EXTERNAL EXCEPTION END CONSTRAINT COLON CLASS CHAR BEGIN BANG BACKQUOTE AS AND ]
## class_simple_expr -> OBJECT . list(attribute) class_self_pattern list(text_cstr(class_field)) END [ error VAL UIDENT TYPE TRUE TILDE STRING SEMISEMI RPAREN QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP OPTLABEL OPEN NEW MODULE METHOD LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INCLUDE FLOAT FALSE EXTERNAL EXCEPTION END CONSTRAINT COLON CLASS CHAR BEGIN BANG BACKQUOTE AS AND ]
##
## The known suffix of the stack is as follows:
## OBJECT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT OBJECT LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: object inherit object [@ and ] while
##
## Ends in an error in state: 1683.
##
## class_simple_expr -> OBJECT list(attribute) . class_self_pattern list(text_cstr(class_field)) error [ error VAL UIDENT TYPE TRUE TILDE STRING SEMISEMI RPAREN QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP OPTLABEL OPEN NEW MODULE METHOD LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INCLUDE FLOAT FALSE EXTERNAL EXCEPTION END CONSTRAINT COLON CLASS CHAR BEGIN BANG BACKQUOTE AS AND ]
## class_simple_expr -> OBJECT list(attribute) . class_self_pattern list(text_cstr(class_field)) END [ error VAL UIDENT TYPE TRUE TILDE STRING SEMISEMI RPAREN QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP OPTLABEL OPEN NEW MODULE METHOD LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INCLUDE FLOAT FALSE EXTERNAL EXCEPTION END CONSTRAINT COLON CLASS CHAR BEGIN BANG BACKQUOTE AS AND ]
##
## The known suffix of the stack is as follows:
## OBJECT list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1700, spurious reduction of production list(attribute) ->
## In state 1701, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT OBJECT LPAREN FALSE RPAREN WITH
##
## Concrete syntax: object inherit object ( false ) with
##
## Ends in an error in state: 1684.
##
## class_simple_expr -> OBJECT list(attribute) class_self_pattern . list(text_cstr(class_field)) error [ error VAL UIDENT TYPE TRUE TILDE STRING SEMISEMI RPAREN QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP OPTLABEL OPEN NEW MODULE METHOD LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INCLUDE FLOAT FALSE EXTERNAL EXCEPTION END CONSTRAINT COLON CLASS CHAR BEGIN BANG BACKQUOTE AS AND ]
## class_simple_expr -> OBJECT list(attribute) class_self_pattern . list(text_cstr(class_field)) END [ error VAL UIDENT TYPE TRUE TILDE STRING SEMISEMI RPAREN QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP OPTLABEL OPEN NEW MODULE METHOD LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INCLUDE FLOAT FALSE EXTERNAL EXCEPTION END CONSTRAINT COLON CLASS CHAR BEGIN BANG BACKQUOTE AS AND ]
##
## The known suffix of the stack is as follows:
## OBJECT list(attribute) class_self_pattern
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT CONSTRAINT WITH
##
## Concrete syntax: object constraint with
##
## Ends in an error in state: 1685.
##
## class_field -> CONSTRAINT . list(attribute) constrain_field list(post_item_attribute) [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## CONSTRAINT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT CONSTRAINT LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: object constraint [@ and ] while
##
## Ends in an error in state: 1686.
##
## class_field -> CONSTRAINT list(attribute) . constrain_field list(post_item_attribute) [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## CONSTRAINT list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT CONSTRAINT QUOTED_STRING_EXPR WITH
##
## Concrete syntax: object constraint {%hello|world|} with
##
## Ends in an error in state: 1687.
##
## constrain_field -> core_type . EQUAL core_type [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
## core_type -> core_type . attribute [ LBRACKETAT EQUAL ]
##
## The known suffix of the stack is as follows:
## core_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 358, spurious reduction of production tuple_type -> atomic_type
## In state 344, spurious reduction of production function_type -> tuple_type
## In state 374, spurious reduction of production alias_type -> function_type
## In state 384, spurious reduction of production core_type -> alias_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT CONSTRAINT QUOTED_STRING_EXPR EQUAL WITH
##
## Concrete syntax: object constraint {%hello|world|} = with
##
## Ends in an error in state: 1688.
##
## constrain_field -> core_type EQUAL . core_type [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## core_type EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT CONSTRAINT QUOTED_STRING_EXPR EQUAL QUOTED_STRING_EXPR WITH
##
## Concrete syntax: object constraint {%hello|world|} = {%hello|world|} with
##
## Ends in an error in state: 1689.
##
## constrain_field -> core_type EQUAL core_type . [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
## core_type -> core_type . attribute [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## core_type EQUAL core_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 568, spurious reduction of production tuple_type -> atomic_type
## In state 555, spurious reduction of production function_type -> tuple_type
## In state 572, spurious reduction of production alias_type -> function_type
## In state 585, spurious reduction of production core_type -> alias_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT QUOTED_STRING_ITEM WITH
##
## Concrete syntax: object {%%hello|world|} with
##
## Ends in an error in state: 1695.
##
## class_field -> item_extension . list(post_item_attribute) [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## item_extension
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT LBRACKETATATAT AND RBRACKET WITH
##
## Concrete syntax: object [@@@ and ] with
##
## Ends in an error in state: 1698.
##
## list(text_cstr(class_field)) -> class_field . list(text_cstr(class_field)) [ error END ]
##
## The known suffix of the stack is as follows:
## class_field
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT LBRACKETAT AND RBRACKET WITH
##
## Concrete syntax: object [@ and ] with
##
## Ends in an error in state: 1700.
##
## list(attribute) -> attribute . list(attribute) [ error WHILE VAL UNDERSCORE UIDENT TYPE TRY TRUE STRING SEMISEMI QUOTED_STRING_ITEM QUOTED_STRING_EXPR PREFIXOP PLUSDOT PLUS OPEN OBJECT NEW MODULE MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LETOP LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKET LBRACELESS LBRACE LAZY INT INITIALIZER INHERIT INCLUDE IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION END CONSTRAINT CLASS CHAR BEGIN BAR BANG BACKQUOTE ASSERT AND ]
##
## The known suffix of the stack is as follows:
## attribute
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT LPAREN WITH
##
## Concrete syntax: object inherit ( with
##
## Ends in an error in state: 1702.
##
## class_simple_expr -> LPAREN . class_expr RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING SEMISEMI RPAREN QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP OPTLABEL OPEN NEW MODULE METHOD LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INCLUDE FLOAT FALSE EXTERNAL EXCEPTION END CONSTRAINT COLON CLASS CHAR BEGIN BANG BACKQUOTE AS AND ]
## class_simple_expr -> LPAREN . class_expr error [ error VAL UIDENT TYPE TRUE TILDE STRING SEMISEMI RPAREN QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP OPTLABEL OPEN NEW MODULE METHOD LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INCLUDE FLOAT FALSE EXTERNAL EXCEPTION END CONSTRAINT COLON CLASS CHAR BEGIN BANG BACKQUOTE AS AND ]
## class_simple_expr -> LPAREN . class_expr COLON class_type RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING SEMISEMI RPAREN QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP OPTLABEL OPEN NEW MODULE METHOD LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INCLUDE FLOAT FALSE EXTERNAL EXCEPTION END CONSTRAINT COLON CLASS CHAR BEGIN BANG BACKQUOTE AS AND ]
## class_simple_expr -> LPAREN . class_expr COLON class_type error [ error VAL UIDENT TYPE TRUE TILDE STRING SEMISEMI RPAREN QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP OPTLABEL OPEN NEW MODULE METHOD LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INCLUDE FLOAT FALSE EXTERNAL EXCEPTION END CONSTRAINT COLON CLASS CHAR BEGIN BANG BACKQUOTE AS AND ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT LET WITH
##
## Concrete syntax: object inherit let with
##
## Ends in an error in state: 1703.
##
## class_expr -> LET . OPEN list(attribute) mod_longident IN class_expr [ error VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT COLON CLASS AS AND ]
## class_expr -> LET . OPEN BANG list(attribute) mod_longident IN class_expr [ error VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT COLON CLASS AS AND ]
## let_bindings(no_ext) -> LET . list(attribute) rec_flag let_binding_body list(post_item_attribute) [ IN AND ]
## let_bindings(no_ext) -> LET . PERCENT attr_id list(attribute) rec_flag let_binding_body list(post_item_attribute) [ IN AND ]
##
## The known suffix of the stack is as follows:
## LET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT LET PERCENT UNDERSCORE
##
## Concrete syntax: object inherit let % _
##
## Ends in an error in state: 1704.
##
## let_bindings(no_ext) -> LET PERCENT . attr_id list(attribute) rec_flag let_binding_body list(post_item_attribute) [ IN AND ]
##
## The known suffix of the stack is as follows:
## LET PERCENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT LET PERCENT AND WHILE
##
## Concrete syntax: object inherit let % and while
##
## Ends in an error in state: 1705.
##
## let_bindings(no_ext) -> LET PERCENT attr_id . list(attribute) rec_flag let_binding_body list(post_item_attribute) [ IN AND ]
##
## The known suffix of the stack is as follows:
## LET PERCENT attr_id
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT LET PERCENT AND LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: object inherit let % and [@ and ] while
##
## Ends in an error in state: 1706.
##
## let_bindings(no_ext) -> LET PERCENT attr_id list(attribute) . rec_flag let_binding_body list(post_item_attribute) [ IN AND ]
##
## The known suffix of the stack is as follows:
## LET PERCENT attr_id list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT LET PERCENT AND REC WITH
##
## Concrete syntax: object inherit let % and rec with
##
## Ends in an error in state: 1707.
##
## let_bindings(no_ext) -> LET PERCENT attr_id list(attribute) rec_flag . let_binding_body list(post_item_attribute) [ IN AND ]
##
## The known suffix of the stack is as follows:
## LET PERCENT attr_id list(attribute) rec_flag
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT LET PERCENT AND LIDENT VAL
##
## Concrete syntax: object inherit let % and lident val
##
## Ends in an error in state: 1708.
##
## let_bindings(no_ext) -> LET PERCENT attr_id list(attribute) rec_flag let_binding_body . list(post_item_attribute) [ IN AND ]
##
## The known suffix of the stack is as follows:
## LET PERCENT attr_id list(attribute) rec_flag let_binding_body
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1152, spurious reduction of production let_binding_body -> val_ident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT LET OPEN WITH
##
## Concrete syntax: object inherit let open with
##
## Ends in an error in state: 1710.
##
## class_expr -> LET OPEN . list(attribute) mod_longident IN class_expr [ error VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT COLON CLASS AS AND ]
## class_expr -> LET OPEN . BANG list(attribute) mod_longident IN class_expr [ error VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT COLON CLASS AS AND ]
##
## The known suffix of the stack is as follows:
## LET OPEN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT LET OPEN BANG WITH
##
## Concrete syntax: object inherit let open ! with
##
## Ends in an error in state: 1711.
##
## class_expr -> LET OPEN BANG . list(attribute) mod_longident IN class_expr [ error VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT COLON CLASS AS AND ]
##
## The known suffix of the stack is as follows:
## LET OPEN BANG
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT LET OPEN BANG LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: object inherit let open ! [@ and ] while
##
## Ends in an error in state: 1712.
##
## class_expr -> LET OPEN BANG list(attribute) . mod_longident IN class_expr [ error VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT COLON CLASS AS AND ]
##
## The known suffix of the stack is as follows:
## LET OPEN BANG list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT LET OPEN BANG UIDENT WITH
##
## Concrete syntax: object inherit let open ! UIdent with
##
## Ends in an error in state: 1713.
##
## class_expr -> LET OPEN BANG list(attribute) mod_longident . IN class_expr [ error VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT COLON CLASS AS AND ]
## mk_longident(mod_longident,UIDENT) -> mod_longident . DOT UIDENT [ IN DOT ]
##
## The known suffix of the stack is as follows:
## LET OPEN BANG list(attribute) mod_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT LET OPEN BANG UIDENT IN WITH
##
## Concrete syntax: object inherit let open ! UIdent in with
##
## Ends in an error in state: 1714.
##
## class_expr -> LET OPEN BANG list(attribute) mod_longident IN . class_expr [ error VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT COLON CLASS AS AND ]
##
## The known suffix of the stack is as follows:
## LET OPEN BANG list(attribute) mod_longident IN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT LBRACKET WITH
##
## Concrete syntax: object inherit [ with
##
## Ends in an error in state: 1715.
##
## class_simple_expr -> LBRACKET . reversed_separated_nonempty_llist(COMMA,core_type) RBRACKET class_longident [ error VAL UIDENT TYPE TRUE TILDE STRING SEMISEMI RPAREN QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP OPTLABEL OPEN NEW MODULE METHOD LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INCLUDE FLOAT FALSE EXTERNAL EXCEPTION END CONSTRAINT COLON CLASS CHAR BEGIN BANG BACKQUOTE AS AND ]
##
## The known suffix of the stack is as follows:
## LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT LBRACKET QUOTED_STRING_EXPR RBRACKET WITH
##
## Concrete syntax: object inherit [ {%hello|world|} ] with
##
## Ends in an error in state: 1717.
##
## class_simple_expr -> LBRACKET reversed_separated_nonempty_llist(COMMA,core_type) RBRACKET . class_longident [ error VAL UIDENT TYPE TRUE TILDE STRING SEMISEMI RPAREN QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP OPTLABEL OPEN NEW MODULE METHOD LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INCLUDE FLOAT FALSE EXTERNAL EXCEPTION END CONSTRAINT COLON CLASS CHAR BEGIN BANG BACKQUOTE AS AND ]
##
## The known suffix of the stack is as follows:
## LBRACKET reversed_separated_nonempty_llist(COMMA,core_type) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT LBRACKET QUOTED_STRING_EXPR COMMA WITH
##
## Concrete syntax: object inherit [ {%hello|world|} , with
##
## Ends in an error in state: 1719.
##
## reversed_separated_nonempty_llist(COMMA,core_type) -> reversed_separated_nonempty_llist(COMMA,core_type) COMMA . core_type [ RBRACKET COMMA ]
##
## The known suffix of the stack is as follows:
## reversed_separated_nonempty_llist(COMMA,core_type) COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT LBRACKET QUOTED_STRING_EXPR COMMA QUOTED_STRING_EXPR WITH
##
## Concrete syntax: object inherit [ {%hello|world|} , {%hello|world|} with
##
## Ends in an error in state: 1720.
##
## core_type -> core_type . attribute [ RBRACKET LBRACKETAT COMMA ]
## reversed_separated_nonempty_llist(COMMA,core_type) -> reversed_separated_nonempty_llist(COMMA,core_type) COMMA core_type . [ RBRACKET COMMA ]
##
## The known suffix of the stack is as follows:
## reversed_separated_nonempty_llist(COMMA,core_type) COMMA core_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 358, spurious reduction of production tuple_type -> atomic_type
## In state 344, spurious reduction of production function_type -> tuple_type
## In state 374, spurious reduction of production alias_type -> function_type
## In state 384, spurious reduction of production core_type -> alias_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT LBRACKET QUOTED_STRING_EXPR WITH
##
## Concrete syntax: object inherit [ {%hello|world|} with
##
## Ends in an error in state: 1721.
##
## core_type -> core_type . attribute [ RBRACKET LBRACKETAT COMMA ]
## reversed_separated_nonempty_llist(COMMA,core_type) -> core_type . [ RBRACKET COMMA ]
##
## The known suffix of the stack is as follows:
## core_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 358, spurious reduction of production tuple_type -> atomic_type
## In state 344, spurious reduction of production function_type -> tuple_type
## In state 374, spurious reduction of production alias_type -> function_type
## In state 384, spurious reduction of production core_type -> alias_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT FUN WITH
##
## Concrete syntax: object inherit fun with
##
## Ends in an error in state: 1722.
##
## class_expr -> FUN . list(attribute) class_fun_def [ error VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT COLON CLASS AS AND ]
##
## The known suffix of the stack is as follows:
## FUN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT FUN LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: object inherit fun [@ and ] while
##
## Ends in an error in state: 1723.
##
## class_expr -> FUN list(attribute) . class_fun_def [ error VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT COLON CLASS AS AND ]
##
## The known suffix of the stack is as follows:
## FUN list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT FUN FALSE WHILE
##
## Concrete syntax: object inherit fun false while
##
## Ends in an error in state: 1724.
##
## class_fun_def -> labeled_simple_pattern . MINUSGREATER class_expr [ error VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT COLON CLASS AS AND ]
## class_fun_def -> labeled_simple_pattern . class_fun_def [ error VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT COLON CLASS AS AND ]
##
## The known suffix of the stack is as follows:
## labeled_simple_pattern
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT FUN FALSE MINUSGREATER WITH
##
## Concrete syntax: object inherit fun false -> with
##
## Ends in an error in state: 1725.
##
## class_fun_def -> labeled_simple_pattern MINUSGREATER . class_expr [ error VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT COLON CLASS AS AND ]
##
## The known suffix of the stack is as follows:
## labeled_simple_pattern MINUSGREATER
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT LET LIDENT AND LIDENT VAL
##
## Concrete syntax: object inherit let lident and lident val
##
## Ends in an error in state: 1726.
##
## class_expr -> let_bindings(no_ext) . IN class_expr [ error VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT COLON CLASS AS AND ]
## let_bindings(no_ext) -> let_bindings(no_ext) . and_let_binding [ IN AND ]
##
## The known suffix of the stack is as follows:
## let_bindings(no_ext)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1152, spurious reduction of production let_binding_body -> val_ident
## In state 1289, spurious reduction of production list(post_item_attribute) ->
## In state 2003, spurious reduction of production and_let_binding -> AND list(attribute) let_binding_body list(post_item_attribute)
## In state 1739, spurious reduction of production let_bindings(no_ext) -> let_bindings(no_ext) and_let_binding
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT LET LIDENT IN WITH
##
## Concrete syntax: object inherit let lident in with
##
## Ends in an error in state: 1727.
##
## class_expr -> let_bindings(no_ext) IN . class_expr [ error VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT COLON CLASS AS AND ]
##
## The known suffix of the stack is as follows:
## let_bindings(no_ext) IN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT LIDENT WITH
##
## Concrete syntax: object inherit lident with
##
## Ends in an error in state: 1729.
##
## class_expr -> class_simple_expr . [ error VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT COLON CLASS AS AND ]
## class_expr -> class_simple_expr . reversed_nonempty_llist(labeled_simple_expr) [ error VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT COLON CLASS AS AND ]
##
## The known suffix of the stack is as follows:
## class_simple_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT LABEL WITH
##
## Concrete syntax: [ UIdent ~label: with
##
## Ends in an error in state: 1730.
##
## labeled_simple_expr -> LABEL . simple_expr [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LABEL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT LABEL CHAR WITH
##
## Concrete syntax: [ UIdent ~label: 'a' with
##
## Ends in an error in state: 1731.
##
## labeled_simple_expr -> LABEL simple_expr . [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LPAREN seq_expr RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LBRACE seq_expr RBRACE [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LBRACKET seq_expr RBRACKET [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LPAREN seq_expr error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LBRACE seq_expr error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LBRACKET seq_expr error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT label_longident [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . HASH LIDENT [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . HASHOP simple_expr [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LABEL simple_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET CHAR CHAR WITH
##
## Concrete syntax: [ 'a' 'a' with
##
## Ends in an error in state: 1732.
##
## labeled_simple_expr -> simple_expr . [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LPAREN seq_expr RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LBRACE seq_expr RBRACE [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LBRACKET seq_expr RBRACKET [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LPAREN seq_expr error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LBRACE seq_expr error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LBRACKET seq_expr error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT label_longident [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . HASH LIDENT [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . HASHOP simple_expr [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT LIDENT CHAR STAR
##
## Concrete syntax: object inherit lident 'a' *
##
## Ends in an error in state: 1733.
##
## class_expr -> class_simple_expr reversed_nonempty_llist(labeled_simple_expr) . [ error VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT COLON CLASS AS AND ]
## reversed_nonempty_llist(labeled_simple_expr) -> reversed_nonempty_llist(labeled_simple_expr) . labeled_simple_expr [ error VAL UIDENT TYPE TRUE TILDE STRING SEMISEMI RPAREN QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP OPTLABEL OPEN NEW MODULE METHOD LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INCLUDE FLOAT FALSE EXTERNAL EXCEPTION END CONSTRAINT COLON CLASS CHAR BEGIN BANG BACKQUOTE AS AND ]
##
## The known suffix of the stack is as follows:
## class_simple_expr reversed_nonempty_llist(labeled_simple_expr)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1732, spurious reduction of production labeled_simple_expr -> simple_expr
## In state 1735, spurious reduction of production reversed_nonempty_llist(labeled_simple_expr) -> labeled_simple_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT LET LIDENT IN QUOTED_STRING_EXPR WITH
##
## Concrete syntax: object inherit let lident in {%hello|world|} with
##
## Ends in an error in state: 1737.
##
## class_expr -> let_bindings(no_ext) IN class_expr . [ error VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT COLON CLASS AS AND ]
## class_expr -> class_expr . attribute [ error VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT COLON CLASS AS AND ]
##
## The known suffix of the stack is as follows:
## let_bindings(no_ext) IN class_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT FUN FALSE MINUSGREATER QUOTED_STRING_EXPR WITH
##
## Concrete syntax: object inherit fun false -> {%hello|world|} with
##
## Ends in an error in state: 1740.
##
## class_expr -> class_expr . attribute [ error VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT COLON CLASS AS AND ]
## class_fun_def -> labeled_simple_pattern MINUSGREATER class_expr . [ error VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT COLON CLASS AS AND ]
##
## The known suffix of the stack is as follows:
## labeled_simple_pattern MINUSGREATER class_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT LET OPEN BANG UIDENT IN QUOTED_STRING_EXPR WITH
##
## Concrete syntax: object inherit let open ! UIdent in {%hello|world|} with
##
## Ends in an error in state: 1743.
##
## class_expr -> LET OPEN BANG list(attribute) mod_longident IN class_expr . [ error VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT COLON CLASS AS AND ]
## class_expr -> class_expr . attribute [ error VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT COLON CLASS AS AND ]
##
## The known suffix of the stack is as follows:
## LET OPEN BANG list(attribute) mod_longident IN class_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT LET OPEN LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: object inherit let open [@ and ] while
##
## Ends in an error in state: 1744.
##
## class_expr -> LET OPEN list(attribute) . mod_longident IN class_expr [ error VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT COLON CLASS AS AND ]
##
## The known suffix of the stack is as follows:
## LET OPEN list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT LET OPEN UIDENT WITH
##
## Concrete syntax: object inherit let open UIdent with
##
## Ends in an error in state: 1745.
##
## class_expr -> LET OPEN list(attribute) mod_longident . IN class_expr [ error VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT COLON CLASS AS AND ]
## mk_longident(mod_longident,UIDENT) -> mod_longident . DOT UIDENT [ IN DOT ]
##
## The known suffix of the stack is as follows:
## LET OPEN list(attribute) mod_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT LET OPEN UIDENT IN WITH
##
## Concrete syntax: object inherit let open UIdent in with
##
## Ends in an error in state: 1746.
##
## class_expr -> LET OPEN list(attribute) mod_longident IN . class_expr [ error VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT COLON CLASS AS AND ]
##
## The known suffix of the stack is as follows:
## LET OPEN list(attribute) mod_longident IN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT LET OPEN UIDENT IN QUOTED_STRING_EXPR WITH
##
## Concrete syntax: object inherit let open UIdent in {%hello|world|} with
##
## Ends in an error in state: 1747.
##
## class_expr -> LET OPEN list(attribute) mod_longident IN class_expr . [ error VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT COLON CLASS AS AND ]
## class_expr -> class_expr . attribute [ error VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT COLON CLASS AS AND ]
##
## The known suffix of the stack is as follows:
## LET OPEN list(attribute) mod_longident IN class_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT LET LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: object inherit let [@ and ] while
##
## Ends in an error in state: 1748.
##
## let_bindings(no_ext) -> LET list(attribute) . rec_flag let_binding_body list(post_item_attribute) [ IN AND ]
##
## The known suffix of the stack is as follows:
## LET list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT LET REC WITH
##
## Concrete syntax: object inherit let rec with
##
## Ends in an error in state: 1749.
##
## let_bindings(no_ext) -> LET list(attribute) rec_flag . let_binding_body list(post_item_attribute) [ IN AND ]
##
## The known suffix of the stack is as follows:
## LET list(attribute) rec_flag
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT LET LIDENT VAL
##
## Concrete syntax: object inherit let lident val
##
## Ends in an error in state: 1750.
##
## let_bindings(no_ext) -> LET list(attribute) rec_flag let_binding_body . list(post_item_attribute) [ IN AND ]
##
## The known suffix of the stack is as follows:
## LET list(attribute) rec_flag let_binding_body
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1152, spurious reduction of production let_binding_body -> val_ident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT LPAREN QUOTED_STRING_EXPR WITH
##
## Concrete syntax: object inherit ( {%hello|world|} with
##
## Ends in an error in state: 1752.
##
## class_expr -> class_expr . attribute [ error RPAREN LBRACKETAT COLON ]
## class_simple_expr -> LPAREN class_expr . RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING SEMISEMI RPAREN QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP OPTLABEL OPEN NEW MODULE METHOD LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INCLUDE FLOAT FALSE EXTERNAL EXCEPTION END CONSTRAINT COLON CLASS CHAR BEGIN BANG BACKQUOTE AS AND ]
## class_simple_expr -> LPAREN class_expr . error [ error VAL UIDENT TYPE TRUE TILDE STRING SEMISEMI RPAREN QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP OPTLABEL OPEN NEW MODULE METHOD LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INCLUDE FLOAT FALSE EXTERNAL EXCEPTION END CONSTRAINT COLON CLASS CHAR BEGIN BANG BACKQUOTE AS AND ]
## class_simple_expr -> LPAREN class_expr . COLON class_type RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING SEMISEMI RPAREN QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP OPTLABEL OPEN NEW MODULE METHOD LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INCLUDE FLOAT FALSE EXTERNAL EXCEPTION END CONSTRAINT COLON CLASS CHAR BEGIN BANG BACKQUOTE AS AND ]
## class_simple_expr -> LPAREN class_expr . COLON class_type error [ error VAL UIDENT TYPE TRUE TILDE STRING SEMISEMI RPAREN QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP OPTLABEL OPEN NEW MODULE METHOD LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INCLUDE FLOAT FALSE EXTERNAL EXCEPTION END CONSTRAINT COLON CLASS CHAR BEGIN BANG BACKQUOTE AS AND ]
##
## The known suffix of the stack is as follows:
## LPAREN class_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT LPAREN LIDENT COLON WITH
##
## Concrete syntax: object inherit ( lident : with
##
## Ends in an error in state: 1755.
##
## class_simple_expr -> LPAREN class_expr COLON . class_type RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING SEMISEMI RPAREN QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP OPTLABEL OPEN NEW MODULE METHOD LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INCLUDE FLOAT FALSE EXTERNAL EXCEPTION END CONSTRAINT COLON CLASS CHAR BEGIN BANG BACKQUOTE AS AND ]
## class_simple_expr -> LPAREN class_expr COLON . class_type error [ error VAL UIDENT TYPE TRUE TILDE STRING SEMISEMI RPAREN QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP OPTLABEL OPEN NEW MODULE METHOD LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INCLUDE FLOAT FALSE EXTERNAL EXCEPTION END CONSTRAINT COLON CLASS CHAR BEGIN BANG BACKQUOTE AS AND ]
##
## The known suffix of the stack is as follows:
## LPAREN class_expr COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT LPAREN LIDENT COLON OBJECT WITH
##
## Concrete syntax: object inherit ( lident : object with
##
## Ends in an error in state: 1756.
##
## class_signature -> OBJECT . list(attribute) class_self_type list(text_csig(class_sig_field)) END [ error VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INHERIT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
## class_signature -> OBJECT . list(attribute) class_self_type list(text_csig(class_sig_field)) error [ error VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INHERIT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
##
## The known suffix of the stack is as follows:
## OBJECT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT LPAREN LIDENT COLON OBJECT LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: object inherit ( lident : object [@ and ] while
##
## Ends in an error in state: 1757.
##
## class_signature -> OBJECT list(attribute) . class_self_type list(text_csig(class_sig_field)) END [ error VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INHERIT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
## class_signature -> OBJECT list(attribute) . class_self_type list(text_csig(class_sig_field)) error [ error VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INHERIT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
##
## The known suffix of the stack is as follows:
## OBJECT list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1700, spurious reduction of production list(attribute) ->
## In state 1701, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT LPAREN LIDENT COLON OBJECT LPAREN QUOTED_STRING_EXPR RPAREN WITH
##
## Concrete syntax: object inherit ( lident : object ( {%hello|world|} ) with
##
## Ends in an error in state: 1758.
##
## class_signature -> OBJECT list(attribute) class_self_type . list(text_csig(class_sig_field)) END [ error VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INHERIT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
## class_signature -> OBJECT list(attribute) class_self_type . list(text_csig(class_sig_field)) error [ error VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INHERIT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
##
## The known suffix of the stack is as follows:
## OBJECT list(attribute) class_self_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT COLON OBJECT METHOD WITH
##
## Concrete syntax: class lident : object method with
##
## Ends in an error in state: 1759.
##
## class_sig_field -> METHOD . list(attribute) private_virtual_flags LIDENT COLON possibly_poly(core_type) list(post_item_attribute) [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## METHOD
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT COLON OBJECT METHOD LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: class lident : object method [@ and ] while
##
## Ends in an error in state: 1760.
##
## class_sig_field -> METHOD list(attribute) . private_virtual_flags LIDENT COLON possibly_poly(core_type) list(post_item_attribute) [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## METHOD list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT COLON OBJECT METHOD VIRTUAL WITH
##
## Concrete syntax: class lident : object method virtual with
##
## Ends in an error in state: 1761.
##
## private_virtual_flags -> VIRTUAL . [ LIDENT ]
## private_virtual_flags -> VIRTUAL . PRIVATE [ LIDENT ]
##
## The known suffix of the stack is as follows:
## VIRTUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT COLON OBJECT METHOD PRIVATE WITH
##
## Concrete syntax: class lident : object method private with
##
## Ends in an error in state: 1763.
##
## private_virtual_flags -> PRIVATE . [ LIDENT ]
## private_virtual_flags -> PRIVATE . VIRTUAL [ LIDENT ]
##
## The known suffix of the stack is as follows:
## PRIVATE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT COLON OBJECT METHOD PRIVATE VIRTUAL WITH
##
## Concrete syntax: class lident : object method private virtual with
##
## Ends in an error in state: 1765.
##
## class_sig_field -> METHOD list(attribute) private_virtual_flags . LIDENT COLON possibly_poly(core_type) list(post_item_attribute) [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## METHOD list(attribute) private_virtual_flags
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT COLON OBJECT METHOD LIDENT WITH
##
## Concrete syntax: class lident : object method lident with
##
## Ends in an error in state: 1766.
##
## class_sig_field -> METHOD list(attribute) private_virtual_flags LIDENT . COLON possibly_poly(core_type) list(post_item_attribute) [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## METHOD list(attribute) private_virtual_flags LIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT COLON OBJECT METHOD LIDENT COLON WITH
##
## Concrete syntax: class lident : object method lident : with
##
## Ends in an error in state: 1767.
##
## class_sig_field -> METHOD list(attribute) private_virtual_flags LIDENT COLON . possibly_poly(core_type) list(post_item_attribute) [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## METHOD list(attribute) private_virtual_flags LIDENT COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT COLON OBJECT METHOD LIDENT COLON QUOTED_STRING_EXPR INITIALIZER
##
## Concrete syntax: class lident : object method lident : {%hello|world|} initializer
##
## Ends in an error in state: 1768.
##
## class_sig_field -> METHOD list(attribute) private_virtual_flags LIDENT COLON possibly_poly(core_type) . list(post_item_attribute) [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## METHOD list(attribute) private_virtual_flags LIDENT COLON possibly_poly(core_type)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 568, spurious reduction of production tuple_type -> atomic_type
## In state 555, spurious reduction of production function_type -> tuple_type
## In state 572, spurious reduction of production alias_type -> function_type
## In state 585, spurious reduction of production core_type -> alias_type
## In state 1617, spurious reduction of production possibly_poly(core_type) -> core_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT COLON OBJECT INHERIT WITH
##
## Concrete syntax: class lident : object inherit with
##
## Ends in an error in state: 1770.
##
## class_sig_field -> INHERIT . list(attribute) class_signature list(post_item_attribute) [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## INHERIT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT COLON OBJECT INHERIT LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: class lident : object inherit [@ and ] while
##
## Ends in an error in state: 1771.
##
## class_sig_field -> INHERIT list(attribute) . class_signature list(post_item_attribute) [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## INHERIT list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT LPAREN LIDENT COLON LET WITH
##
## Concrete syntax: object inherit ( lident : let with
##
## Ends in an error in state: 1772.
##
## class_signature -> LET . OPEN list(attribute) mod_longident IN class_signature [ error VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INHERIT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
## class_signature -> LET . OPEN BANG list(attribute) mod_longident IN class_signature [ error VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INHERIT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
##
## The known suffix of the stack is as follows:
## LET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT LPAREN LIDENT COLON LET OPEN WITH
##
## Concrete syntax: object inherit ( lident : let open with
##
## Ends in an error in state: 1773.
##
## class_signature -> LET OPEN . list(attribute) mod_longident IN class_signature [ error VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INHERIT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
## class_signature -> LET OPEN . BANG list(attribute) mod_longident IN class_signature [ error VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INHERIT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
##
## The known suffix of the stack is as follows:
## LET OPEN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT LPAREN LIDENT COLON LET OPEN BANG WITH
##
## Concrete syntax: object inherit ( lident : let open ! with
##
## Ends in an error in state: 1774.
##
## class_signature -> LET OPEN BANG . list(attribute) mod_longident IN class_signature [ error VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INHERIT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
##
## The known suffix of the stack is as follows:
## LET OPEN BANG
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT LPAREN LIDENT COLON LET OPEN BANG LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: object inherit ( lident : let open ! [@ and ] while
##
## Ends in an error in state: 1775.
##
## class_signature -> LET OPEN BANG list(attribute) . mod_longident IN class_signature [ error VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INHERIT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
##
## The known suffix of the stack is as follows:
## LET OPEN BANG list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT LPAREN LIDENT COLON LET OPEN BANG UIDENT WITH
##
## Concrete syntax: object inherit ( lident : let open ! UIdent with
##
## Ends in an error in state: 1776.
##
## class_signature -> LET OPEN BANG list(attribute) mod_longident . IN class_signature [ error VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INHERIT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
## mk_longident(mod_longident,UIDENT) -> mod_longident . DOT UIDENT [ IN DOT ]
##
## The known suffix of the stack is as follows:
## LET OPEN BANG list(attribute) mod_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT LPAREN LIDENT COLON LET OPEN BANG UIDENT IN WITH
##
## Concrete syntax: object inherit ( lident : let open ! UIdent in with
##
## Ends in an error in state: 1777.
##
## class_signature -> LET OPEN BANG list(attribute) mod_longident IN . class_signature [ error VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INHERIT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
##
## The known suffix of the stack is as follows:
## LET OPEN BANG list(attribute) mod_longident IN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT COLON OBJECT INHERIT LBRACKET WITH
##
## Concrete syntax: class lident : object inherit [ with
##
## Ends in an error in state: 1778.
##
## class_signature -> LBRACKET . reversed_separated_nonempty_llist(COMMA,core_type) RBRACKET clty_longident [ error VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INHERIT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
##
## The known suffix of the stack is as follows:
## LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT LPAREN LIDENT COLON LBRACKET QUOTED_STRING_EXPR RBRACKET WITH
##
## Concrete syntax: object inherit ( lident : [ {%hello|world|} ] with
##
## Ends in an error in state: 1780.
##
## class_signature -> LBRACKET reversed_separated_nonempty_llist(COMMA,core_type) RBRACKET . clty_longident [ error VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INHERIT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
##
## The known suffix of the stack is as follows:
## LBRACKET reversed_separated_nonempty_llist(COMMA,core_type) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT LPAREN LIDENT COLON LET OPEN BANG UIDENT IN LIDENT WITH
##
## Concrete syntax: object inherit ( lident : let open ! UIdent in lident with
##
## Ends in an error in state: 1784.
##
## class_signature -> class_signature . attribute [ error VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INHERIT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
## class_signature -> LET OPEN BANG list(attribute) mod_longident IN class_signature . [ error VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INHERIT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
##
## The known suffix of the stack is as follows:
## LET OPEN BANG list(attribute) mod_longident IN class_signature
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT LPAREN LIDENT COLON LET OPEN LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: object inherit ( lident : let open [@ and ] while
##
## Ends in an error in state: 1786.
##
## class_signature -> LET OPEN list(attribute) . mod_longident IN class_signature [ error VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INHERIT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
##
## The known suffix of the stack is as follows:
## LET OPEN list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT LPAREN LIDENT COLON LET OPEN UIDENT WITH
##
## Concrete syntax: object inherit ( lident : let open UIdent with
##
## Ends in an error in state: 1787.
##
## class_signature -> LET OPEN list(attribute) mod_longident . IN class_signature [ error VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INHERIT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
## mk_longident(mod_longident,UIDENT) -> mod_longident . DOT UIDENT [ IN DOT ]
##
## The known suffix of the stack is as follows:
## LET OPEN list(attribute) mod_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT LPAREN LIDENT COLON LET OPEN UIDENT IN WITH
##
## Concrete syntax: object inherit ( lident : let open UIdent in with
##
## Ends in an error in state: 1788.
##
## class_signature -> LET OPEN list(attribute) mod_longident IN . class_signature [ error VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INHERIT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
##
## The known suffix of the stack is as follows:
## LET OPEN list(attribute) mod_longident IN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT LPAREN LIDENT COLON LET OPEN UIDENT IN LIDENT WITH
##
## Concrete syntax: object inherit ( lident : let open UIdent in lident with
##
## Ends in an error in state: 1789.
##
## class_signature -> class_signature . attribute [ error VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INHERIT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
## class_signature -> LET OPEN list(attribute) mod_longident IN class_signature . [ error VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INHERIT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
##
## The known suffix of the stack is as follows:
## LET OPEN list(attribute) mod_longident IN class_signature
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT COLON OBJECT INHERIT LIDENT LET
##
## Concrete syntax: class lident : object inherit lident let
##
## Ends in an error in state: 1790.
##
## class_sig_field -> INHERIT list(attribute) class_signature . list(post_item_attribute) [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INHERIT END CONSTRAINT ]
## class_signature -> class_signature . attribute [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## INHERIT list(attribute) class_signature
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT COLON OBJECT CONSTRAINT WITH
##
## Concrete syntax: class lident : object constraint with
##
## Ends in an error in state: 1792.
##
## class_sig_field -> CONSTRAINT . list(attribute) constrain_field list(post_item_attribute) [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## CONSTRAINT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT COLON OBJECT CONSTRAINT LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: class lident : object constraint [@ and ] while
##
## Ends in an error in state: 1793.
##
## class_sig_field -> CONSTRAINT list(attribute) . constrain_field list(post_item_attribute) [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## CONSTRAINT list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT COLON OBJECT CONSTRAINT QUOTED_STRING_EXPR EQUAL QUOTED_STRING_EXPR INITIALIZER
##
## Concrete syntax: class lident : object constraint {%hello|world|} = {%hello|world|} initializer
##
## Ends in an error in state: 1794.
##
## class_sig_field -> CONSTRAINT list(attribute) constrain_field . list(post_item_attribute) [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## CONSTRAINT list(attribute) constrain_field
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 568, spurious reduction of production tuple_type -> atomic_type
## In state 555, spurious reduction of production function_type -> tuple_type
## In state 572, spurious reduction of production alias_type -> function_type
## In state 585, spurious reduction of production core_type -> alias_type
## In state 1689, spurious reduction of production constrain_field -> core_type EQUAL core_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT COLON OBJECT QUOTED_STRING_ITEM WITH
##
## Concrete syntax: class lident : object {%%hello|world|} with
##
## Ends in an error in state: 1799.
##
## class_sig_field -> item_extension . list(post_item_attribute) [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## item_extension
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT COLON OBJECT LBRACKETATATAT AND RBRACKET WITH
##
## Concrete syntax: class lident : object [@@@ and ] with
##
## Ends in an error in state: 1802.
##
## list(text_csig(class_sig_field)) -> class_sig_field . list(text_csig(class_sig_field)) [ error END ]
##
## The known suffix of the stack is as follows:
## class_sig_field
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT LPAREN LIDENT COLON LIDENT WITH
##
## Concrete syntax: object inherit ( lident : lident with
##
## Ends in an error in state: 1804.
##
## class_type -> LIDENT . COLON tuple_type MINUSGREATER class_type [ error VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## mk_longident(mod_ext_longident,LIDENT) -> LIDENT . [ error VAL UIDENT TYPE STAR SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LIDENT LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## LIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT LPAREN LIDENT COLON LIDENT COLON WITH
##
## Concrete syntax: object inherit ( lident : lident : with
##
## Ends in an error in state: 1805.
##
## class_type -> LIDENT COLON . tuple_type MINUSGREATER class_type [ error VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## LIDENT COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT LPAREN LIDENT COLON LIDENT COLON QUOTED_STRING_EXPR WITH
##
## Concrete syntax: object inherit ( lident : lident : {%hello|world|} with
##
## Ends in an error in state: 1806.
##
## class_type -> LIDENT COLON tuple_type . MINUSGREATER class_type [ error VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## LIDENT COLON tuple_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 358, spurious reduction of production tuple_type -> atomic_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT LPAREN LIDENT COLON LIDENT COLON QUOTED_STRING_EXPR MINUSGREATER WITH
##
## Concrete syntax: object inherit ( lident : lident : {%hello|world|} -> with
##
## Ends in an error in state: 1807.
##
## class_type -> LIDENT COLON tuple_type MINUSGREATER . class_type [ error VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## LIDENT COLON tuple_type MINUSGREATER
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT LPAREN LIDENT COLON LBRACKET WITH
##
## Concrete syntax: object inherit ( lident : [ with
##
## Ends in an error in state: 1808.
##
## atomic_type -> LBRACKET . tag_field RBRACKET [ UIDENT STAR MINUSGREATER LIDENT HASH ]
## atomic_type -> LBRACKET . BAR reversed_separated_nonempty_llist(BAR,row_field) RBRACKET [ UIDENT STAR MINUSGREATER LIDENT HASH ]
## atomic_type -> LBRACKET . row_field BAR reversed_separated_nonempty_llist(BAR,row_field) RBRACKET [ UIDENT STAR MINUSGREATER LIDENT HASH ]
## class_signature -> LBRACKET . reversed_separated_nonempty_llist(COMMA,core_type) RBRACKET clty_longident [ error VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT COLON LBRACKET QUOTED_STRING_EXPR WITH
##
## Concrete syntax: class lident : [ {%hello|world|} with
##
## Ends in an error in state: 1809.
##
## core_type -> core_type . attribute [ RBRACKET LBRACKETAT COMMA BAR ]
## reversed_separated_nonempty_llist(COMMA,core_type) -> core_type . [ RBRACKET COMMA ]
## row_field -> core_type . [ BAR ]
##
## The known suffix of the stack is as follows:
## core_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 358, spurious reduction of production tuple_type -> atomic_type
## In state 344, spurious reduction of production function_type -> tuple_type
## In state 374, spurious reduction of production alias_type -> function_type
## In state 384, spurious reduction of production core_type -> alias_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT LPAREN LIDENT COLON UNDERSCORE WITH
##
## Concrete syntax: object inherit ( lident : _ with
##
## Ends in an error in state: 1810.
##
## class_type -> tuple_type . MINUSGREATER class_type [ error VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## tuple_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 358, spurious reduction of production tuple_type -> atomic_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT LPAREN LIDENT COLON QUOTED_STRING_EXPR MINUSGREATER WITH
##
## Concrete syntax: object inherit ( lident : {%hello|world|} -> with
##
## Ends in an error in state: 1811.
##
## class_type -> tuple_type MINUSGREATER . class_type [ error VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## tuple_type MINUSGREATER
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT LPAREN LIDENT COLON OPTLABEL WITH
##
## Concrete syntax: object inherit ( lident : ?label: with
##
## Ends in an error in state: 1812.
##
## class_type -> optlabel . tuple_type MINUSGREATER class_type [ error VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## optlabel
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT LPAREN LIDENT COLON OPTLABEL QUOTED_STRING_EXPR WITH
##
## Concrete syntax: object inherit ( lident : ?label: {%hello|world|} with
##
## Ends in an error in state: 1813.
##
## class_type -> optlabel tuple_type . MINUSGREATER class_type [ error VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## optlabel tuple_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 358, spurious reduction of production tuple_type -> atomic_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT LPAREN LIDENT COLON OPTLABEL QUOTED_STRING_EXPR MINUSGREATER WITH
##
## Concrete syntax: object inherit ( lident : ?label: {%hello|world|} -> with
##
## Ends in an error in state: 1814.
##
## class_type -> optlabel tuple_type MINUSGREATER . class_type [ error VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## optlabel tuple_type MINUSGREATER
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT LPAREN LIDENT COLON UIDENT DOT LIDENT WITH
##
## Concrete syntax: object inherit ( lident : UIdent . lident with
##
## Ends in an error in state: 1815.
##
## clty_longident -> mk_longident(mod_ext_longident,LIDENT) . [ error VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## type_longident -> mk_longident(mod_ext_longident,LIDENT) . [ UIDENT STAR MINUSGREATER LIDENT HASH ]
##
## The known suffix of the stack is as follows:
## mk_longident(mod_ext_longident,LIDENT)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT LPAREN LIDENT COLON QUOTED_STRING_EXPR WITH
##
## Concrete syntax: object inherit ( lident : {%hello|world|} with
##
## Ends in an error in state: 1816.
##
## atomic_type -> extension . [ UIDENT STAR MINUSGREATER LIDENT HASH ]
## class_signature -> extension . [ error VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## extension
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT LPAREN LIDENT COLON OBJECT END METHOD
##
## Concrete syntax: object inherit ( lident : object end method
##
## Ends in an error in state: 1818.
##
## class_signature -> class_signature . attribute [ error VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## class_type -> class_signature . [ error VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## class_signature
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT LPAREN LIDENT COLON QUOTED_STRING_EXPR VAL
##
## Concrete syntax: object inherit ( lident : {%hello|world|} val
##
## Ends in an error in state: 1821.
##
## class_simple_expr -> LPAREN class_expr COLON class_type . RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING SEMISEMI RPAREN QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP OPTLABEL OPEN NEW MODULE METHOD LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INCLUDE FLOAT FALSE EXTERNAL EXCEPTION END CONSTRAINT COLON CLASS CHAR BEGIN BANG BACKQUOTE AS AND ]
## class_simple_expr -> LPAREN class_expr COLON class_type . error [ error VAL UIDENT TYPE TRUE TILDE STRING SEMISEMI RPAREN QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP OPTLABEL OPEN NEW MODULE METHOD LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INCLUDE FLOAT FALSE EXTERNAL EXCEPTION END CONSTRAINT COLON CLASS CHAR BEGIN BANG BACKQUOTE AS AND ]
##
## The known suffix of the stack is as follows:
## LPAREN class_expr COLON class_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1816, spurious reduction of production class_signature -> extension
## In state 1818, spurious reduction of production class_type -> class_signature
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT BANG QUOTED_STRING_EXPR WITH
##
## Concrete syntax: object inherit ! {%hello|world|} with
##
## Ends in an error in state: 1824.
##
## class_expr -> class_expr . attribute [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT END CONSTRAINT AS ]
## class_field -> INHERIT BANG list(attribute) class_expr . option(preceded(AS,mkrhs(LIDENT))) list(post_item_attribute) [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## INHERIT BANG list(attribute) class_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT LIDENT AS WITH
##
## Concrete syntax: object inherit lident as with
##
## Ends in an error in state: 1825.
##
## option(preceded(AS,mkrhs(LIDENT))) -> AS . LIDENT [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## AS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT BANG LIDENT AS LIDENT WITH
##
## Concrete syntax: object inherit ! lident as lident with
##
## Ends in an error in state: 1827.
##
## class_field -> INHERIT BANG list(attribute) class_expr option(preceded(AS,mkrhs(LIDENT))) . list(post_item_attribute) [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## INHERIT BANG list(attribute) class_expr option(preceded(AS,mkrhs(LIDENT)))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: object inherit [@ and ] while
##
## Ends in an error in state: 1829.
##
## class_field -> INHERIT list(attribute) . class_expr option(preceded(AS,mkrhs(LIDENT))) list(post_item_attribute) [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## INHERIT list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT QUOTED_STRING_EXPR WITH
##
## Concrete syntax: object inherit {%hello|world|} with
##
## Ends in an error in state: 1830.
##
## class_expr -> class_expr . attribute [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT END CONSTRAINT AS ]
## class_field -> INHERIT list(attribute) class_expr . option(preceded(AS,mkrhs(LIDENT))) list(post_item_attribute) [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## INHERIT list(attribute) class_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT INHERIT LIDENT AS LIDENT WITH
##
## Concrete syntax: object inherit lident as lident with
##
## Ends in an error in state: 1831.
##
## class_field -> INHERIT list(attribute) class_expr option(preceded(AS,mkrhs(LIDENT))) . list(post_item_attribute) [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## INHERIT list(attribute) class_expr option(preceded(AS,mkrhs(LIDENT)))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT EQUAL LPAREN WITH
##
## Concrete syntax: class lident = ( with
##
## Ends in an error in state: 1836.
##
## class_simple_expr -> LPAREN . class_expr RPAREN [ VAL UIDENT TYPE TRUE TILDE STRING SEMISEMI RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP OPTLABEL OPEN NEW MODULE LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INCLUDE HASH FLOAT FALSE EXTERNAL EXCEPTION EOF CLASS CHAR BEGIN BANG BACKQUOTE AND ]
## class_simple_expr -> LPAREN . class_expr error [ VAL UIDENT TYPE TRUE TILDE STRING SEMISEMI RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP OPTLABEL OPEN NEW MODULE LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INCLUDE HASH FLOAT FALSE EXTERNAL EXCEPTION EOF CLASS CHAR BEGIN BANG BACKQUOTE AND ]
## class_simple_expr -> LPAREN . class_expr COLON class_type RPAREN [ VAL UIDENT TYPE TRUE TILDE STRING SEMISEMI RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP OPTLABEL OPEN NEW MODULE LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INCLUDE HASH FLOAT FALSE EXTERNAL EXCEPTION EOF CLASS CHAR BEGIN BANG BACKQUOTE AND ]
## class_simple_expr -> LPAREN . class_expr COLON class_type error [ VAL UIDENT TYPE TRUE TILDE STRING SEMISEMI RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP OPTLABEL OPEN NEW MODULE LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INCLUDE HASH FLOAT FALSE EXTERNAL EXCEPTION EOF CLASS CHAR BEGIN BANG BACKQUOTE AND ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT EQUAL LPAREN QUOTED_STRING_EXPR WITH
##
## Concrete syntax: class lident = ( {%hello|world|} with
##
## Ends in an error in state: 1837.
##
## class_expr -> class_expr . attribute [ error RPAREN LBRACKETAT COLON ]
## class_simple_expr -> LPAREN class_expr . RPAREN [ VAL UIDENT TYPE TRUE TILDE STRING SEMISEMI RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP OPTLABEL OPEN NEW MODULE LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INCLUDE HASH FLOAT FALSE EXTERNAL EXCEPTION EOF CLASS CHAR BEGIN BANG BACKQUOTE AND ]
## class_simple_expr -> LPAREN class_expr . error [ VAL UIDENT TYPE TRUE TILDE STRING SEMISEMI RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP OPTLABEL OPEN NEW MODULE LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INCLUDE HASH FLOAT FALSE EXTERNAL EXCEPTION EOF CLASS CHAR BEGIN BANG BACKQUOTE AND ]
## class_simple_expr -> LPAREN class_expr . COLON class_type RPAREN [ VAL UIDENT TYPE TRUE TILDE STRING SEMISEMI RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP OPTLABEL OPEN NEW MODULE LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INCLUDE HASH FLOAT FALSE EXTERNAL EXCEPTION EOF CLASS CHAR BEGIN BANG BACKQUOTE AND ]
## class_simple_expr -> LPAREN class_expr . COLON class_type error [ VAL UIDENT TYPE TRUE TILDE STRING SEMISEMI RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP OPTLABEL OPEN NEW MODULE LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INCLUDE HASH FLOAT FALSE EXTERNAL EXCEPTION EOF CLASS CHAR BEGIN BANG BACKQUOTE AND ]
##
## The known suffix of the stack is as follows:
## LPAREN class_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT EQUAL LPAREN LIDENT COLON WITH
##
## Concrete syntax: class lident = ( lident : with
##
## Ends in an error in state: 1840.
##
## class_simple_expr -> LPAREN class_expr COLON . class_type RPAREN [ VAL UIDENT TYPE TRUE TILDE STRING SEMISEMI RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP OPTLABEL OPEN NEW MODULE LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INCLUDE HASH FLOAT FALSE EXTERNAL EXCEPTION EOF CLASS CHAR BEGIN BANG BACKQUOTE AND ]
## class_simple_expr -> LPAREN class_expr COLON . class_type error [ VAL UIDENT TYPE TRUE TILDE STRING SEMISEMI RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP OPTLABEL OPEN NEW MODULE LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INCLUDE HASH FLOAT FALSE EXTERNAL EXCEPTION EOF CLASS CHAR BEGIN BANG BACKQUOTE AND ]
##
## The known suffix of the stack is as follows:
## LPAREN class_expr COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT EQUAL LPAREN LIDENT COLON QUOTED_STRING_EXPR VAL
##
## Concrete syntax: class lident = ( lident : {%hello|world|} val
##
## Ends in an error in state: 1841.
##
## class_simple_expr -> LPAREN class_expr COLON class_type . RPAREN [ VAL UIDENT TYPE TRUE TILDE STRING SEMISEMI RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP OPTLABEL OPEN NEW MODULE LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INCLUDE HASH FLOAT FALSE EXTERNAL EXCEPTION EOF CLASS CHAR BEGIN BANG BACKQUOTE AND ]
## class_simple_expr -> LPAREN class_expr COLON class_type . error [ VAL UIDENT TYPE TRUE TILDE STRING SEMISEMI RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP OPTLABEL OPEN NEW MODULE LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INCLUDE HASH FLOAT FALSE EXTERNAL EXCEPTION EOF CLASS CHAR BEGIN BANG BACKQUOTE AND ]
##
## The known suffix of the stack is as follows:
## LPAREN class_expr COLON class_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1816, spurious reduction of production class_signature -> extension
## In state 1818, spurious reduction of production class_type -> class_signature
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT EQUAL LET WITH
##
## Concrete syntax: class lident = let with
##
## Ends in an error in state: 1844.
##
## class_expr -> LET . OPEN list(attribute) mod_longident IN class_expr [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS AND ]
## class_expr -> LET . OPEN BANG list(attribute) mod_longident IN class_expr [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS AND ]
## let_bindings(no_ext) -> LET . list(attribute) rec_flag let_binding_body list(post_item_attribute) [ IN AND ]
## let_bindings(no_ext) -> LET . PERCENT attr_id list(attribute) rec_flag let_binding_body list(post_item_attribute) [ IN AND ]
##
## The known suffix of the stack is as follows:
## LET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT EQUAL LET OPEN WITH
##
## Concrete syntax: class lident = let open with
##
## Ends in an error in state: 1845.
##
## class_expr -> LET OPEN . list(attribute) mod_longident IN class_expr [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS AND ]
## class_expr -> LET OPEN . BANG list(attribute) mod_longident IN class_expr [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## LET OPEN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT EQUAL LET OPEN BANG WITH
##
## Concrete syntax: class lident = let open ! with
##
## Ends in an error in state: 1846.
##
## class_expr -> LET OPEN BANG . list(attribute) mod_longident IN class_expr [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## LET OPEN BANG
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT EQUAL LET OPEN BANG LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: class lident = let open ! [@ and ] while
##
## Ends in an error in state: 1847.
##
## class_expr -> LET OPEN BANG list(attribute) . mod_longident IN class_expr [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## LET OPEN BANG list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT EQUAL LET OPEN BANG UIDENT WITH
##
## Concrete syntax: class lident = let open ! UIdent with
##
## Ends in an error in state: 1848.
##
## class_expr -> LET OPEN BANG list(attribute) mod_longident . IN class_expr [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS AND ]
## mk_longident(mod_longident,UIDENT) -> mod_longident . DOT UIDENT [ IN DOT ]
##
## The known suffix of the stack is as follows:
## LET OPEN BANG list(attribute) mod_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT EQUAL LET OPEN BANG UIDENT IN WITH
##
## Concrete syntax: class lident = let open ! UIdent in with
##
## Ends in an error in state: 1849.
##
## class_expr -> LET OPEN BANG list(attribute) mod_longident IN . class_expr [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## LET OPEN BANG list(attribute) mod_longident IN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT EQUAL LBRACKET WITH
##
## Concrete syntax: class lident = [ with
##
## Ends in an error in state: 1850.
##
## class_simple_expr -> LBRACKET . reversed_separated_nonempty_llist(COMMA,core_type) RBRACKET class_longident [ VAL UIDENT TYPE TRUE TILDE STRING SEMISEMI RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP OPTLABEL OPEN NEW MODULE LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INCLUDE HASH FLOAT FALSE EXTERNAL EXCEPTION EOF CLASS CHAR BEGIN BANG BACKQUOTE AND ]
##
## The known suffix of the stack is as follows:
## LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT EQUAL LBRACKET QUOTED_STRING_EXPR RBRACKET WITH
##
## Concrete syntax: class lident = [ {%hello|world|} ] with
##
## Ends in an error in state: 1852.
##
## class_simple_expr -> LBRACKET reversed_separated_nonempty_llist(COMMA,core_type) RBRACKET . class_longident [ VAL UIDENT TYPE TRUE TILDE STRING SEMISEMI RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP OPTLABEL OPEN NEW MODULE LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INCLUDE HASH FLOAT FALSE EXTERNAL EXCEPTION EOF CLASS CHAR BEGIN BANG BACKQUOTE AND ]
##
## The known suffix of the stack is as follows:
## LBRACKET reversed_separated_nonempty_llist(COMMA,core_type) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT EQUAL FUN WITH
##
## Concrete syntax: class lident = fun with
##
## Ends in an error in state: 1854.
##
## class_expr -> FUN . list(attribute) class_fun_def [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## FUN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT EQUAL FUN LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: class lident = fun [@ and ] while
##
## Ends in an error in state: 1855.
##
## class_expr -> FUN list(attribute) . class_fun_def [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## FUN list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT EQUAL FUN FALSE WHILE
##
## Concrete syntax: class lident = fun false while
##
## Ends in an error in state: 1856.
##
## class_fun_def -> labeled_simple_pattern . MINUSGREATER class_expr [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS AND ]
## class_fun_def -> labeled_simple_pattern . class_fun_def [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## labeled_simple_pattern
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT EQUAL FUN FALSE MINUSGREATER WITH
##
## Concrete syntax: class lident = fun false -> with
##
## Ends in an error in state: 1857.
##
## class_fun_def -> labeled_simple_pattern MINUSGREATER . class_expr [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## labeled_simple_pattern MINUSGREATER
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT EQUAL LET LIDENT AND LIDENT VAL
##
## Concrete syntax: class lident = let lident and lident val
##
## Ends in an error in state: 1858.
##
## class_expr -> let_bindings(no_ext) . IN class_expr [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS AND ]
## let_bindings(no_ext) -> let_bindings(no_ext) . and_let_binding [ IN AND ]
##
## The known suffix of the stack is as follows:
## let_bindings(no_ext)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1152, spurious reduction of production let_binding_body -> val_ident
## In state 1289, spurious reduction of production list(post_item_attribute) ->
## In state 2003, spurious reduction of production and_let_binding -> AND list(attribute) let_binding_body list(post_item_attribute)
## In state 1739, spurious reduction of production let_bindings(no_ext) -> let_bindings(no_ext) and_let_binding
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT EQUAL LET LIDENT IN WITH
##
## Concrete syntax: class lident = let lident in with
##
## Ends in an error in state: 1859.
##
## class_expr -> let_bindings(no_ext) IN . class_expr [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## let_bindings(no_ext) IN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT EQUAL LIDENT WITH
##
## Concrete syntax: class lident = lident with
##
## Ends in an error in state: 1861.
##
## class_expr -> class_simple_expr . [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS AND ]
## class_expr -> class_simple_expr . reversed_nonempty_llist(labeled_simple_expr) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## class_simple_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT LABEL WITH
##
## Concrete syntax: UIdent ~label: with
##
## Ends in an error in state: 1862.
##
## labeled_simple_expr -> LABEL . simple_expr [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LABEL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT LABEL CHAR WHILE
##
## Concrete syntax: UIdent ~label: 'a' while
##
## Ends in an error in state: 1863.
##
## labeled_simple_expr -> LABEL simple_expr . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LPAREN seq_expr RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LBRACE seq_expr RBRACE [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LBRACKET seq_expr RBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LPAREN seq_expr error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LBRACE seq_expr error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LBRACKET seq_expr error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT label_longident [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . HASH LIDENT [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . HASHOP simple_expr [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LABEL simple_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CHAR CHAR WHILE
##
## Concrete syntax: 'a' 'a' while
##
## Ends in an error in state: 1864.
##
## labeled_simple_expr -> simple_expr . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LPAREN seq_expr RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LBRACE seq_expr RBRACE [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LBRACKET seq_expr RBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LPAREN seq_expr error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LBRACE seq_expr error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LBRACKET seq_expr error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT label_longident [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . HASH LIDENT [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . HASHOP simple_expr [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT EQUAL LIDENT CHAR TO
##
## Concrete syntax: class lident = lident 'a' to
##
## Ends in an error in state: 1865.
##
## class_expr -> class_simple_expr reversed_nonempty_llist(labeled_simple_expr) . [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS AND ]
## reversed_nonempty_llist(labeled_simple_expr) -> reversed_nonempty_llist(labeled_simple_expr) . labeled_simple_expr [ VAL UIDENT TYPE TRUE TILDE STRING SEMISEMI RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP OPTLABEL OPEN NEW MODULE LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INCLUDE HASH FLOAT FALSE EXTERNAL EXCEPTION EOF CLASS CHAR BEGIN BANG BACKQUOTE AND ]
##
## The known suffix of the stack is as follows:
## class_simple_expr reversed_nonempty_llist(labeled_simple_expr)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1864, spurious reduction of production labeled_simple_expr -> simple_expr
## In state 1867, spurious reduction of production reversed_nonempty_llist(labeled_simple_expr) -> labeled_simple_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT EQUAL LET LIDENT IN QUOTED_STRING_EXPR WITH
##
## Concrete syntax: class lident = let lident in {%hello|world|} with
##
## Ends in an error in state: 1869.
##
## class_expr -> let_bindings(no_ext) IN class_expr . [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS AND ]
## class_expr -> class_expr . attribute [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## let_bindings(no_ext) IN class_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT EQUAL FUN FALSE MINUSGREATER QUOTED_STRING_EXPR WITH
##
## Concrete syntax: class lident = fun false -> {%hello|world|} with
##
## Ends in an error in state: 1871.
##
## class_expr -> class_expr . attribute [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS AND ]
## class_fun_def -> labeled_simple_pattern MINUSGREATER class_expr . [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## labeled_simple_pattern MINUSGREATER class_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT EQUAL LET OPEN BANG UIDENT IN QUOTED_STRING_EXPR WITH
##
## Concrete syntax: class lident = let open ! UIdent in {%hello|world|} with
##
## Ends in an error in state: 1874.
##
## class_expr -> LET OPEN BANG list(attribute) mod_longident IN class_expr . [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS AND ]
## class_expr -> class_expr . attribute [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## LET OPEN BANG list(attribute) mod_longident IN class_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT EQUAL LET OPEN LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: class lident = let open [@ and ] while
##
## Ends in an error in state: 1875.
##
## class_expr -> LET OPEN list(attribute) . mod_longident IN class_expr [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## LET OPEN list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT EQUAL LET OPEN UIDENT WITH
##
## Concrete syntax: class lident = let open UIdent with
##
## Ends in an error in state: 1876.
##
## class_expr -> LET OPEN list(attribute) mod_longident . IN class_expr [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS AND ]
## mk_longident(mod_longident,UIDENT) -> mod_longident . DOT UIDENT [ IN DOT ]
##
## The known suffix of the stack is as follows:
## LET OPEN list(attribute) mod_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT EQUAL LET OPEN UIDENT IN WITH
##
## Concrete syntax: class lident = let open UIdent in with
##
## Ends in an error in state: 1877.
##
## class_expr -> LET OPEN list(attribute) mod_longident IN . class_expr [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## LET OPEN list(attribute) mod_longident IN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT EQUAL LET OPEN UIDENT IN QUOTED_STRING_EXPR WITH
##
## Concrete syntax: class lident = let open UIdent in {%hello|world|} with
##
## Ends in an error in state: 1878.
##
## class_expr -> LET OPEN list(attribute) mod_longident IN class_expr . [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS AND ]
## class_expr -> class_expr . attribute [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## LET OPEN list(attribute) mod_longident IN class_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT EQUAL QUOTED_STRING_EXPR WITH
##
## Concrete syntax: class lident = {%hello|world|} with
##
## Ends in an error in state: 1879.
##
## class_expr -> class_expr . attribute [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS AND ]
## class_fun_binding -> EQUAL class_expr . [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## EQUAL class_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT COLON WITH
##
## Concrete syntax: class lident : with
##
## Ends in an error in state: 1880.
##
## class_fun_binding -> COLON . class_type EQUAL class_expr [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT COLON LIDENT WITH
##
## Concrete syntax: class lident : lident with
##
## Ends in an error in state: 1881.
##
## class_type -> LIDENT . COLON tuple_type MINUSGREATER class_type [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF CLASS AND ]
## mk_longident(mod_ext_longident,LIDENT) -> LIDENT . [ VAL UIDENT TYPE STAR SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LIDENT LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## LIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT COLON LIDENT COLON WITH
##
## Concrete syntax: class lident : lident : with
##
## Ends in an error in state: 1882.
##
## class_type -> LIDENT COLON . tuple_type MINUSGREATER class_type [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## LIDENT COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT COLON LIDENT COLON QUOTED_STRING_EXPR WITH
##
## Concrete syntax: class lident : lident : {%hello|world|} with
##
## Ends in an error in state: 1883.
##
## class_type -> LIDENT COLON tuple_type . MINUSGREATER class_type [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## LIDENT COLON tuple_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 358, spurious reduction of production tuple_type -> atomic_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT COLON LIDENT COLON QUOTED_STRING_EXPR MINUSGREATER WITH
##
## Concrete syntax: class lident : lident : {%hello|world|} -> with
##
## Ends in an error in state: 1884.
##
## class_type -> LIDENT COLON tuple_type MINUSGREATER . class_type [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## LIDENT COLON tuple_type MINUSGREATER
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT COLON LET WITH
##
## Concrete syntax: class lident : let with
##
## Ends in an error in state: 1885.
##
## class_signature -> LET . OPEN list(attribute) mod_longident IN class_signature [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF CLASS AND ]
## class_signature -> LET . OPEN BANG list(attribute) mod_longident IN class_signature [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## LET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT COLON LET OPEN WITH
##
## Concrete syntax: class lident : let open with
##
## Ends in an error in state: 1886.
##
## class_signature -> LET OPEN . list(attribute) mod_longident IN class_signature [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF CLASS AND ]
## class_signature -> LET OPEN . BANG list(attribute) mod_longident IN class_signature [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## LET OPEN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT COLON LET OPEN BANG WITH
##
## Concrete syntax: class lident : let open ! with
##
## Ends in an error in state: 1887.
##
## class_signature -> LET OPEN BANG . list(attribute) mod_longident IN class_signature [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## LET OPEN BANG
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT COLON LET OPEN BANG LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: class lident : let open ! [@ and ] while
##
## Ends in an error in state: 1888.
##
## class_signature -> LET OPEN BANG list(attribute) . mod_longident IN class_signature [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## LET OPEN BANG list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT COLON LET OPEN BANG UIDENT WITH
##
## Concrete syntax: class lident : let open ! UIdent with
##
## Ends in an error in state: 1889.
##
## class_signature -> LET OPEN BANG list(attribute) mod_longident . IN class_signature [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF CLASS AND ]
## mk_longident(mod_longident,UIDENT) -> mod_longident . DOT UIDENT [ IN DOT ]
##
## The known suffix of the stack is as follows:
## LET OPEN BANG list(attribute) mod_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT COLON LET OPEN BANG UIDENT IN WITH
##
## Concrete syntax: class lident : let open ! UIdent in with
##
## Ends in an error in state: 1890.
##
## class_signature -> LET OPEN BANG list(attribute) mod_longident IN . class_signature [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## LET OPEN BANG list(attribute) mod_longident IN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS TYPE LIDENT EQUAL LBRACKET WITH
##
## Concrete syntax: class type lident = [ with
##
## Ends in an error in state: 1891.
##
## class_signature -> LBRACKET . reversed_separated_nonempty_llist(COMMA,core_type) RBRACKET clty_longident [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT COLON LBRACKET QUOTED_STRING_EXPR RBRACKET WITH
##
## Concrete syntax: class lident : [ {%hello|world|} ] with
##
## Ends in an error in state: 1893.
##
## class_signature -> LBRACKET reversed_separated_nonempty_llist(COMMA,core_type) RBRACKET . clty_longident [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## LBRACKET reversed_separated_nonempty_llist(COMMA,core_type) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT COLON LET OPEN BANG UIDENT IN LIDENT WITH
##
## Concrete syntax: class lident : let open ! UIdent in lident with
##
## Ends in an error in state: 1897.
##
## class_signature -> class_signature . attribute [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF CLASS AND ]
## class_signature -> LET OPEN BANG list(attribute) mod_longident IN class_signature . [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## LET OPEN BANG list(attribute) mod_longident IN class_signature
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT COLON LET OPEN LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: class lident : let open [@ and ] while
##
## Ends in an error in state: 1899.
##
## class_signature -> LET OPEN list(attribute) . mod_longident IN class_signature [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## LET OPEN list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT COLON LET OPEN UIDENT WITH
##
## Concrete syntax: class lident : let open UIdent with
##
## Ends in an error in state: 1900.
##
## class_signature -> LET OPEN list(attribute) mod_longident . IN class_signature [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF CLASS AND ]
## mk_longident(mod_longident,UIDENT) -> mod_longident . DOT UIDENT [ IN DOT ]
##
## The known suffix of the stack is as follows:
## LET OPEN list(attribute) mod_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT COLON LET OPEN UIDENT IN WITH
##
## Concrete syntax: class lident : let open UIdent in with
##
## Ends in an error in state: 1901.
##
## class_signature -> LET OPEN list(attribute) mod_longident IN . class_signature [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## LET OPEN list(attribute) mod_longident IN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT COLON LET OPEN UIDENT IN LIDENT WITH
##
## Concrete syntax: class lident : let open UIdent in lident with
##
## Ends in an error in state: 1902.
##
## class_signature -> class_signature . attribute [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF CLASS AND ]
## class_signature -> LET OPEN list(attribute) mod_longident IN class_signature . [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## LET OPEN list(attribute) mod_longident IN class_signature
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT COLON LBRACKET WITH
##
## Concrete syntax: class lident : [ with
##
## Ends in an error in state: 1903.
##
## atomic_type -> LBRACKET . tag_field RBRACKET [ UIDENT STAR MINUSGREATER LIDENT HASH ]
## atomic_type -> LBRACKET . BAR reversed_separated_nonempty_llist(BAR,row_field) RBRACKET [ UIDENT STAR MINUSGREATER LIDENT HASH ]
## atomic_type -> LBRACKET . row_field BAR reversed_separated_nonempty_llist(BAR,row_field) RBRACKET [ UIDENT STAR MINUSGREATER LIDENT HASH ]
## class_signature -> LBRACKET . reversed_separated_nonempty_llist(COMMA,core_type) RBRACKET clty_longident [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT COLON UNDERSCORE WITH
##
## Concrete syntax: class lident : _ with
##
## Ends in an error in state: 1904.
##
## class_type -> tuple_type . MINUSGREATER class_type [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## tuple_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 358, spurious reduction of production tuple_type -> atomic_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT COLON QUOTED_STRING_EXPR MINUSGREATER WITH
##
## Concrete syntax: class lident : {%hello|world|} -> with
##
## Ends in an error in state: 1905.
##
## class_type -> tuple_type MINUSGREATER . class_type [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## tuple_type MINUSGREATER
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT COLON OPTLABEL WITH
##
## Concrete syntax: class lident : ?label: with
##
## Ends in an error in state: 1906.
##
## class_type -> optlabel . tuple_type MINUSGREATER class_type [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## optlabel
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT COLON OPTLABEL QUOTED_STRING_EXPR WITH
##
## Concrete syntax: class lident : ?label: {%hello|world|} with
##
## Ends in an error in state: 1907.
##
## class_type -> optlabel tuple_type . MINUSGREATER class_type [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## optlabel tuple_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 358, spurious reduction of production tuple_type -> atomic_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT COLON OPTLABEL QUOTED_STRING_EXPR MINUSGREATER WITH
##
## Concrete syntax: class lident : ?label: {%hello|world|} -> with
##
## Ends in an error in state: 1908.
##
## class_type -> optlabel tuple_type MINUSGREATER . class_type [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## optlabel tuple_type MINUSGREATER
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT COLON UIDENT DOT LIDENT WITH
##
## Concrete syntax: class lident : UIdent . lident with
##
## Ends in an error in state: 1909.
##
## clty_longident -> mk_longident(mod_ext_longident,LIDENT) . [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF CLASS AND ]
## type_longident -> mk_longident(mod_ext_longident,LIDENT) . [ UIDENT STAR MINUSGREATER LIDENT HASH ]
##
## The known suffix of the stack is as follows:
## mk_longident(mod_ext_longident,LIDENT)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT COLON QUOTED_STRING_EXPR WITH
##
## Concrete syntax: class lident : {%hello|world|} with
##
## Ends in an error in state: 1910.
##
## atomic_type -> extension . [ UIDENT STAR MINUSGREATER LIDENT HASH ]
## class_signature -> extension . [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## extension
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT COLON OBJECT END LET
##
## Concrete syntax: class lident : object end let
##
## Ends in an error in state: 1912.
##
## class_signature -> class_signature . attribute [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF CLASS AND ]
## class_type -> class_signature . [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EQUAL EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## class_signature
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT COLON QUOTED_STRING_EXPR VAL
##
## Concrete syntax: class lident : {%hello|world|} val
##
## Ends in an error in state: 1915.
##
## class_fun_binding -> COLON class_type . EQUAL class_expr [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## COLON class_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1910, spurious reduction of production class_signature -> extension
## In state 1912, spurious reduction of production class_type -> class_signature
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT COLON QUOTED_STRING_EXPR EQUAL WITH
##
## Concrete syntax: class lident : {%hello|world|} = with
##
## Ends in an error in state: 1916.
##
## class_fun_binding -> COLON class_type EQUAL . class_expr [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## COLON class_type EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT COLON QUOTED_STRING_EXPR EQUAL QUOTED_STRING_EXPR WITH
##
## Concrete syntax: class lident : {%hello|world|} = {%hello|world|} with
##
## Ends in an error in state: 1917.
##
## class_expr -> class_expr . attribute [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS AND ]
## class_fun_binding -> COLON class_type EQUAL class_expr . [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## COLON class_type EQUAL class_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT FALSE WHILE
##
## Concrete syntax: class lident false while
##
## Ends in an error in state: 1918.
##
## class_fun_binding -> labeled_simple_pattern . class_fun_binding [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## labeled_simple_pattern
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT EQUAL LIDENT LBRACKETATAT AND RBRACKET IN
##
## Concrete syntax: class lident = lident [@@ and ] in
##
## Ends in an error in state: 1921.
##
## structure_item -> CLASS ext list(attribute) virtual_flag formal_class_parameters LIDENT class_fun_binding list(post_item_attribute) . list(and_class_declaration) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## CLASS ext list(attribute) virtual_flag formal_class_parameters LIDENT class_fun_binding list(post_item_attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1304, spurious reduction of production list(post_item_attribute) ->
## In state 1305, spurious reduction of production list(post_item_attribute) -> post_item_attribute list(post_item_attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT EQUAL LIDENT AND WITH
##
## Concrete syntax: class lident = lident and with
##
## Ends in an error in state: 1922.
##
## list(and_class_declaration) -> AND . list(attribute) virtual_flag formal_class_parameters LIDENT class_fun_binding list(post_item_attribute) list(and_class_declaration) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## AND
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT EQUAL LIDENT AND LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: class lident = lident and [@ and ] while
##
## Ends in an error in state: 1923.
##
## list(and_class_declaration) -> AND list(attribute) . virtual_flag formal_class_parameters LIDENT class_fun_binding list(post_item_attribute) list(and_class_declaration) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## AND list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT EQUAL LIDENT AND VIRTUAL WITH
##
## Concrete syntax: class lident = lident and virtual with
##
## Ends in an error in state: 1924.
##
## list(and_class_declaration) -> AND list(attribute) virtual_flag . formal_class_parameters LIDENT class_fun_binding list(post_item_attribute) list(and_class_declaration) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## AND list(attribute) virtual_flag
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT EQUAL LIDENT AND LBRACKET UNDERSCORE RBRACKET WITH
##
## Concrete syntax: class lident = lident and [ _ ] with
##
## Ends in an error in state: 1925.
##
## list(and_class_declaration) -> AND list(attribute) virtual_flag formal_class_parameters . LIDENT class_fun_binding list(post_item_attribute) list(and_class_declaration) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## AND list(attribute) virtual_flag formal_class_parameters
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT EQUAL LIDENT AND LIDENT WITH
##
## Concrete syntax: class lident = lident and lident with
##
## Ends in an error in state: 1926.
##
## list(and_class_declaration) -> AND list(attribute) virtual_flag formal_class_parameters LIDENT . class_fun_binding list(post_item_attribute) list(and_class_declaration) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## AND list(attribute) virtual_flag formal_class_parameters LIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS LIDENT EQUAL LIDENT AND LIDENT EQUAL LIDENT LBRACKETATAT AND RBRACKET IN
##
## Concrete syntax: class lident = lident and lident = lident [@@ and ] in
##
## Ends in an error in state: 1928.
##
## list(and_class_declaration) -> AND list(attribute) virtual_flag formal_class_parameters LIDENT class_fun_binding list(post_item_attribute) . list(and_class_declaration) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## AND list(attribute) virtual_flag formal_class_parameters LIDENT class_fun_binding list(post_item_attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1304, spurious reduction of production list(post_item_attribute) ->
## In state 1305, spurious reduction of production list(post_item_attribute) -> post_item_attribute list(post_item_attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT QUOTED_STRING_ITEM LBRACKETATAT AND SEMISEMI EOF
##
## Concrete syntax: object {%%hello|world|} [@@ and ;; 
##
## Ends in an error in state: 1931.
##
## post_item_attribute -> LBRACKETATAT attr_id payload . RBRACKET [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE METHOD LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT INCLUDE IN EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
##
## The known suffix of the stack is as follows:
## LBRACKETATAT attr_id payload
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 433, spurious reduction of production list(structure_element) ->
## In state 2763, spurious reduction of production list(structure_element) -> SEMISEMI list(structure_element)
## In state 1669, spurious reduction of production structure -> list(structure_element)
## In state 1663, spurious reduction of production payload -> structure
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS TYPE LIDENT EQUAL LIDENT WITH
##
## Concrete syntax: class type lident = lident with
##
## Ends in an error in state: 1937.
##
## class_signature -> class_signature . attribute [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS AND ]
## class_type_declarations -> CLASS TYPE ext list(attribute) virtual_flag formal_class_parameters LIDENT EQUAL class_signature . list(post_item_attribute) list(and_class_type_declaration) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## CLASS TYPE ext list(attribute) virtual_flag formal_class_parameters LIDENT EQUAL class_signature
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS TYPE LIDENT EQUAL LIDENT LBRACKETATAT AND RBRACKET IN
##
## Concrete syntax: class type lident = lident [@@ and ] in
##
## Ends in an error in state: 1938.
##
## class_type_declarations -> CLASS TYPE ext list(attribute) virtual_flag formal_class_parameters LIDENT EQUAL class_signature list(post_item_attribute) . list(and_class_type_declaration) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## CLASS TYPE ext list(attribute) virtual_flag formal_class_parameters LIDENT EQUAL class_signature list(post_item_attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1304, spurious reduction of production list(post_item_attribute) ->
## In state 1305, spurious reduction of production list(post_item_attribute) -> post_item_attribute list(post_item_attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS TYPE LIDENT EQUAL LIDENT AND WITH
##
## Concrete syntax: class type lident = lident and with
##
## Ends in an error in state: 1939.
##
## list(and_class_type_declaration) -> AND . list(attribute) virtual_flag formal_class_parameters LIDENT EQUAL class_signature list(post_item_attribute) list(and_class_type_declaration) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## AND
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS TYPE LIDENT EQUAL LIDENT AND LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: class type lident = lident and [@ and ] while
##
## Ends in an error in state: 1940.
##
## list(and_class_type_declaration) -> AND list(attribute) . virtual_flag formal_class_parameters LIDENT EQUAL class_signature list(post_item_attribute) list(and_class_type_declaration) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## AND list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS TYPE LIDENT EQUAL LIDENT AND VIRTUAL WITH
##
## Concrete syntax: class type lident = lident and virtual with
##
## Ends in an error in state: 1941.
##
## list(and_class_type_declaration) -> AND list(attribute) virtual_flag . formal_class_parameters LIDENT EQUAL class_signature list(post_item_attribute) list(and_class_type_declaration) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## AND list(attribute) virtual_flag
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS TYPE LIDENT EQUAL LIDENT AND LBRACKET UNDERSCORE RBRACKET WITH
##
## Concrete syntax: class type lident = lident and [ _ ] with
##
## Ends in an error in state: 1942.
##
## list(and_class_type_declaration) -> AND list(attribute) virtual_flag formal_class_parameters . LIDENT EQUAL class_signature list(post_item_attribute) list(and_class_type_declaration) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## AND list(attribute) virtual_flag formal_class_parameters
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS TYPE LIDENT EQUAL LIDENT AND LIDENT WITH
##
## Concrete syntax: class type lident = lident and lident with
##
## Ends in an error in state: 1943.
##
## list(and_class_type_declaration) -> AND list(attribute) virtual_flag formal_class_parameters LIDENT . EQUAL class_signature list(post_item_attribute) list(and_class_type_declaration) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## AND list(attribute) virtual_flag formal_class_parameters LIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS TYPE LIDENT EQUAL LIDENT AND LIDENT EQUAL WITH
##
## Concrete syntax: class type lident = lident and lident = with
##
## Ends in an error in state: 1944.
##
## list(and_class_type_declaration) -> AND list(attribute) virtual_flag formal_class_parameters LIDENT EQUAL . class_signature list(post_item_attribute) list(and_class_type_declaration) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## AND list(attribute) virtual_flag formal_class_parameters LIDENT EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS TYPE LIDENT EQUAL LIDENT AND LIDENT EQUAL LIDENT WITH
##
## Concrete syntax: class type lident = lident and lident = lident with
##
## Ends in an error in state: 1945.
##
## class_signature -> class_signature . attribute [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS AND ]
## list(and_class_type_declaration) -> AND list(attribute) virtual_flag formal_class_parameters LIDENT EQUAL class_signature . list(post_item_attribute) list(and_class_type_declaration) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## AND list(attribute) virtual_flag formal_class_parameters LIDENT EQUAL class_signature
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: CLASS TYPE LIDENT EQUAL LIDENT AND LIDENT EQUAL LIDENT LBRACKETATAT AND RBRACKET IN
##
## Concrete syntax: class type lident = lident and lident = lident [@@ and ] in
##
## Ends in an error in state: 1946.
##
## list(and_class_type_declaration) -> AND list(attribute) virtual_flag formal_class_parameters LIDENT EQUAL class_signature list(post_item_attribute) . list(and_class_type_declaration) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## AND list(attribute) virtual_flag formal_class_parameters LIDENT EQUAL class_signature list(post_item_attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1304, spurious reduction of production list(post_item_attribute) ->
## In state 1305, spurious reduction of production list(post_item_attribute) -> post_item_attribute list(post_item_attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: CLASS PERCENT AND WHILE
##
## Concrete syntax: class % and while
##
## Ends in an error in state: 1949.
##
## signature_item -> CLASS ext . list(attribute) virtual_flag formal_class_parameters LIDENT COLON class_type list(post_item_attribute) list(and_class_description) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## CLASS ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: CLASS LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: class [@ and ] while
##
## Ends in an error in state: 1950.
##
## signature_item -> CLASS ext list(attribute) . virtual_flag formal_class_parameters LIDENT COLON class_type list(post_item_attribute) list(and_class_description) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## CLASS ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: CLASS VIRTUAL WITH
##
## Concrete syntax: class virtual with
##
## Ends in an error in state: 1951.
##
## signature_item -> CLASS ext list(attribute) virtual_flag . formal_class_parameters LIDENT COLON class_type list(post_item_attribute) list(and_class_description) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## CLASS ext list(attribute) virtual_flag
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: CLASS LBRACKET UNDERSCORE RBRACKET WITH
##
## Concrete syntax: class [ _ ] with
##
## Ends in an error in state: 1952.
##
## signature_item -> CLASS ext list(attribute) virtual_flag formal_class_parameters . LIDENT COLON class_type list(post_item_attribute) list(and_class_description) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## CLASS ext list(attribute) virtual_flag formal_class_parameters
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: CLASS LIDENT WITH
##
## Concrete syntax: class lident with
##
## Ends in an error in state: 1953.
##
## signature_item -> CLASS ext list(attribute) virtual_flag formal_class_parameters LIDENT . COLON class_type list(post_item_attribute) list(and_class_description) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## CLASS ext list(attribute) virtual_flag formal_class_parameters LIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: CLASS LIDENT COLON WITH
##
## Concrete syntax: class lident : with
##
## Ends in an error in state: 1954.
##
## signature_item -> CLASS ext list(attribute) virtual_flag formal_class_parameters LIDENT COLON . class_type list(post_item_attribute) list(and_class_description) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## CLASS ext list(attribute) virtual_flag formal_class_parameters LIDENT COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: CLASS LIDENT COLON QUOTED_STRING_EXPR EQUAL
##
## Concrete syntax: class lident : {%hello|world|} =
##
## Ends in an error in state: 1955.
##
## signature_item -> CLASS ext list(attribute) virtual_flag formal_class_parameters LIDENT COLON class_type . list(post_item_attribute) list(and_class_description) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## CLASS ext list(attribute) virtual_flag formal_class_parameters LIDENT COLON class_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1910, spurious reduction of production class_signature -> extension
## In state 1912, spurious reduction of production class_type -> class_signature
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: CLASS LIDENT COLON QUOTED_STRING_EXPR LBRACKETATAT AND RBRACKET LET
##
## Concrete syntax: class lident : {%hello|world|} [@@ and ] let
##
## Ends in an error in state: 1956.
##
## signature_item -> CLASS ext list(attribute) virtual_flag formal_class_parameters LIDENT COLON class_type list(post_item_attribute) . list(and_class_description) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## CLASS ext list(attribute) virtual_flag formal_class_parameters LIDENT COLON class_type list(post_item_attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1304, spurious reduction of production list(post_item_attribute) ->
## In state 1305, spurious reduction of production list(post_item_attribute) -> post_item_attribute list(post_item_attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: CLASS LIDENT COLON QUOTED_STRING_EXPR AND WITH
##
## Concrete syntax: class lident : {%hello|world|} and with
##
## Ends in an error in state: 1957.
##
## list(and_class_description) -> AND . list(attribute) virtual_flag formal_class_parameters LIDENT COLON class_type list(post_item_attribute) list(and_class_description) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## AND
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: CLASS LIDENT COLON QUOTED_STRING_EXPR AND LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: class lident : {%hello|world|} and [@ and ] while
##
## Ends in an error in state: 1958.
##
## list(and_class_description) -> AND list(attribute) . virtual_flag formal_class_parameters LIDENT COLON class_type list(post_item_attribute) list(and_class_description) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## AND list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: CLASS LIDENT COLON QUOTED_STRING_EXPR AND VIRTUAL WITH
##
## Concrete syntax: class lident : {%hello|world|} and virtual with
##
## Ends in an error in state: 1959.
##
## list(and_class_description) -> AND list(attribute) virtual_flag . formal_class_parameters LIDENT COLON class_type list(post_item_attribute) list(and_class_description) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## AND list(attribute) virtual_flag
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: CLASS LIDENT COLON QUOTED_STRING_EXPR AND LBRACKET UNDERSCORE RBRACKET WITH
##
## Concrete syntax: class lident : {%hello|world|} and [ _ ] with
##
## Ends in an error in state: 1960.
##
## list(and_class_description) -> AND list(attribute) virtual_flag formal_class_parameters . LIDENT COLON class_type list(post_item_attribute) list(and_class_description) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## AND list(attribute) virtual_flag formal_class_parameters
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: CLASS LIDENT COLON QUOTED_STRING_EXPR AND LIDENT WITH
##
## Concrete syntax: class lident : {%hello|world|} and lident with
##
## Ends in an error in state: 1961.
##
## list(and_class_description) -> AND list(attribute) virtual_flag formal_class_parameters LIDENT . COLON class_type list(post_item_attribute) list(and_class_description) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## AND list(attribute) virtual_flag formal_class_parameters LIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: CLASS LIDENT COLON QUOTED_STRING_EXPR AND LIDENT COLON WITH
##
## Concrete syntax: class lident : {%hello|world|} and lident : with
##
## Ends in an error in state: 1962.
##
## list(and_class_description) -> AND list(attribute) virtual_flag formal_class_parameters LIDENT COLON . class_type list(post_item_attribute) list(and_class_description) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## AND list(attribute) virtual_flag formal_class_parameters LIDENT COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: CLASS LIDENT COLON QUOTED_STRING_EXPR AND LIDENT COLON QUOTED_STRING_EXPR EQUAL
##
## Concrete syntax: class lident : {%hello|world|} and lident : {%hello|world|} =
##
## Ends in an error in state: 1963.
##
## list(and_class_description) -> AND list(attribute) virtual_flag formal_class_parameters LIDENT COLON class_type . list(post_item_attribute) list(and_class_description) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## AND list(attribute) virtual_flag formal_class_parameters LIDENT COLON class_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1910, spurious reduction of production class_signature -> extension
## In state 1912, spurious reduction of production class_type -> class_signature
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: CLASS LIDENT COLON QUOTED_STRING_EXPR AND LIDENT COLON QUOTED_STRING_EXPR LBRACKETATAT AND RBRACKET LET
##
## Concrete syntax: class lident : {%hello|world|} and lident : {%hello|world|} [@@ and ] let
##
## Ends in an error in state: 1964.
##
## list(and_class_description) -> AND list(attribute) virtual_flag formal_class_parameters LIDENT COLON class_type list(post_item_attribute) . list(and_class_description) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## AND list(attribute) virtual_flag formal_class_parameters LIDENT COLON class_type list(post_item_attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1304, spurious reduction of production list(post_item_attribute) ->
## In state 1305, spurious reduction of production list(post_item_attribute) -> post_item_attribute list(post_item_attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: LBRACKETATATAT AND RBRACKET WITH
##
## Concrete syntax: [@@@ and ] with
##
## Ends in an error in state: 1968.
##
## list(signature_element) -> signature_item . list(signature_element) [ RBRACKET EOF ]
##
## The known suffix of the stack is as follows:
## signature_item
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: QUOTED_STRING_ITEM WITH
##
## Concrete syntax: {%%hello|world|} with
##
## Ends in an error in state: 1976.
##
## signature_item -> item_extension . list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## item_extension
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: TYPE LIDENT EQUAL FALSE HASH
##
## Concrete syntax: type lident = false #
##
## Ends in an error in state: 1978.
##
## signature_item -> generic_type_declaration(nonrec_flag,type_kind) . list(generic_and_type_declaration(type_kind)) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## generic_type_declaration(nonrec_flag,type_kind)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1433, spurious reduction of production generalized_constructor_arguments ->
## In state 1434, spurious reduction of production list(attribute) ->
## In state 1435, spurious reduction of production generic_constructor_declaration(epsilon) -> constr_ident generalized_constructor_arguments list(attribute)
## In state 1423, spurious reduction of production reversed_bar_llist(constructor_declaration) -> generic_constructor_declaration(epsilon)
## In state 1417, spurious reduction of production constructor_declarations -> reversed_bar_llist(constructor_declaration)
## In state 1441, spurious reduction of production nonempty_type_kind -> constructor_declarations
## In state 3044, spurious reduction of production type_kind -> EQUAL nonempty_type_kind
## In state 1460, spurious reduction of production reversed_llist(preceded(CONSTRAINT,constrain)) ->
## In state 1461, spurious reduction of production list(post_item_attribute) ->
## In state 1462, spurious reduction of production generic_type_declaration(nonrec_flag,type_kind) -> TYPE ext list(attribute) type_parameters LIDENT type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: TYPE LIDENT COLONEQUAL FALSE LBRACKETATAT AND RBRACKET LET
##
## Concrete syntax: type lident := false [@@ and ] let
##
## Ends in an error in state: 1980.
##
## signature_item -> generic_type_declaration(no_nonrec_flag,type_subst_kind) . list(generic_and_type_declaration(type_subst_kind)) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## generic_type_declaration(no_nonrec_flag,type_subst_kind)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1304, spurious reduction of production list(post_item_attribute) ->
## In state 1305, spurious reduction of production list(post_item_attribute) -> post_item_attribute list(post_item_attribute)
## In state 1459, spurious reduction of production generic_type_declaration(no_nonrec_flag,type_subst_kind) -> TYPE ext list(attribute) type_parameters LIDENT COLONEQUAL nonempty_type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: TYPE LIDENT COLONEQUAL FALSE AND WITH
##
## Concrete syntax: type lident := false and with
##
## Ends in an error in state: 1981.
##
## list(generic_and_type_declaration(type_subst_kind)) -> AND . list(attribute) type_parameters LIDENT COLONEQUAL nonempty_type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) list(generic_and_type_declaration(type_subst_kind)) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## AND
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: TYPE LIDENT COLONEQUAL FALSE AND LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: type lident := false and [@ and ] while
##
## Ends in an error in state: 1982.
##
## list(generic_and_type_declaration(type_subst_kind)) -> AND list(attribute) . type_parameters LIDENT COLONEQUAL nonempty_type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) list(generic_and_type_declaration(type_subst_kind)) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## AND list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: TYPE LIDENT COLONEQUAL FALSE AND UNDERSCORE WITH
##
## Concrete syntax: type lident := false and _ with
##
## Ends in an error in state: 1983.
##
## list(generic_and_type_declaration(type_subst_kind)) -> AND list(attribute) type_parameters . LIDENT COLONEQUAL nonempty_type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) list(generic_and_type_declaration(type_subst_kind)) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## AND list(attribute) type_parameters
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: TYPE LIDENT COLONEQUAL FALSE AND LIDENT WITH
##
## Concrete syntax: type lident := false and lident with
##
## Ends in an error in state: 1984.
##
## list(generic_and_type_declaration(type_subst_kind)) -> AND list(attribute) type_parameters LIDENT . COLONEQUAL nonempty_type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) list(generic_and_type_declaration(type_subst_kind)) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## AND list(attribute) type_parameters LIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: TYPE LIDENT COLONEQUAL FALSE AND LIDENT COLONEQUAL WITH
##
## Concrete syntax: type lident := false and lident := with
##
## Ends in an error in state: 1985.
##
## list(generic_and_type_declaration(type_subst_kind)) -> AND list(attribute) type_parameters LIDENT COLONEQUAL . nonempty_type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) list(generic_and_type_declaration(type_subst_kind)) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## AND list(attribute) type_parameters LIDENT COLONEQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: TYPE LIDENT COLONEQUAL FALSE AND LIDENT COLONEQUAL FALSE LET
##
## Concrete syntax: type lident := false and lident := false let
##
## Ends in an error in state: 1987.
##
## list(generic_and_type_declaration(type_subst_kind)) -> AND list(attribute) type_parameters LIDENT COLONEQUAL nonempty_type_kind reversed_llist(preceded(CONSTRAINT,constrain)) . list(post_item_attribute) list(generic_and_type_declaration(type_subst_kind)) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
## reversed_llist(preceded(CONSTRAINT,constrain)) -> reversed_llist(preceded(CONSTRAINT,constrain)) . CONSTRAINT core_type EQUAL core_type [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION EOF CONSTRAINT CLASS AND ]
##
## The known suffix of the stack is as follows:
## AND list(attribute) type_parameters LIDENT COLONEQUAL nonempty_type_kind reversed_llist(preceded(CONSTRAINT,constrain))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1433, spurious reduction of production generalized_constructor_arguments ->
## In state 1434, spurious reduction of production list(attribute) ->
## In state 1435, spurious reduction of production generic_constructor_declaration(epsilon) -> constr_ident generalized_constructor_arguments list(attribute)
## In state 1423, spurious reduction of production reversed_bar_llist(constructor_declaration) -> generic_constructor_declaration(epsilon)
## In state 1417, spurious reduction of production constructor_declarations -> reversed_bar_llist(constructor_declaration)
## In state 1441, spurious reduction of production nonempty_type_kind -> constructor_declarations
## In state 1986, spurious reduction of production reversed_llist(preceded(CONSTRAINT,constrain)) ->
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: TYPE LIDENT COLONEQUAL FALSE AND LIDENT COLONEQUAL FALSE LBRACKETATAT AND RBRACKET LET
##
## Concrete syntax: type lident := false and lident := false [@@ and ] let
##
## Ends in an error in state: 1988.
##
## list(generic_and_type_declaration(type_subst_kind)) -> AND list(attribute) type_parameters LIDENT COLONEQUAL nonempty_type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) . list(generic_and_type_declaration(type_subst_kind)) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## AND list(attribute) type_parameters LIDENT COLONEQUAL nonempty_type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1304, spurious reduction of production list(post_item_attribute) ->
## In state 1305, spurious reduction of production list(post_item_attribute) -> post_item_attribute list(post_item_attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKETATATAT AND COLON QUOTED_STRING_EXPR WITH
##
## Concrete syntax: [@@@ and : {%hello|world|} with
##
## Ends in an error in state: 1996.
##
## core_type -> core_type . attribute [ RBRACKET LBRACKETAT ]
## payload -> COLON core_type . [ RBRACKET ]
##
## The known suffix of the stack is as follows:
## COLON core_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 358, spurious reduction of production tuple_type -> atomic_type
## In state 344, spurious reduction of production function_type -> tuple_type
## In state 374, spurious reduction of production alias_type -> function_type
## In state 384, spurious reduction of production core_type -> alias_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKETATATAT AND SEMISEMI EOF
##
## Concrete syntax: [@@@ and ;; 
##
## Ends in an error in state: 1997.
##
## floating_attribute -> LBRACKETATATAT attr_id payload . RBRACKET [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## LBRACKETATATAT attr_id payload
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 433, spurious reduction of production list(structure_element) ->
## In state 2763, spurious reduction of production list(structure_element) -> SEMISEMI list(structure_element)
## In state 1669, spurious reduction of production structure -> list(structure_element)
## In state 1663, spurious reduction of production payload -> structure
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKETPERCENTPERCENT AND SEMISEMI EOF
##
## Concrete syntax: [%% and ;; 
##
## Ends in an error in state: 1999.
##
## item_extension -> LBRACKETPERCENTPERCENT attr_id payload . RBRACKET [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## LBRACKETPERCENTPERCENT attr_id payload
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 433, spurious reduction of production list(structure_element) ->
## In state 2763, spurious reduction of production list(structure_element) -> SEMISEMI list(structure_element)
## In state 1669, spurious reduction of production structure -> list(structure_element)
## In state 1663, spurious reduction of production payload -> structure
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: QUOTED_STRING_ITEM LBRACKETATAT AND SEMISEMI EOF
##
## Concrete syntax: {%%hello|world|} [@@ and ;; 
##
## Ends in an error in state: 2001.
##
## post_item_attribute -> LBRACKETATAT attr_id payload . RBRACKET [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN HASH EXTERNAL EXCEPTION EOF CLASS AND ]
##
## The known suffix of the stack is as follows:
## LBRACKETATAT attr_id payload
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 433, spurious reduction of production list(structure_element) ->
## In state 2763, spurious reduction of production list(structure_element) -> SEMISEMI list(structure_element)
## In state 1669, spurious reduction of production structure -> list(structure_element)
## In state 1663, spurious reduction of production payload -> structure
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT COMMA UIDENT COMMA UNDERSCORE WITH
##
## Concrete syntax: [ UIdent , UIdent , _ with
##
## Ends in an error in state: 2004.
##
## expr -> expr . INFIXOP0 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> reversed_separated_nontrivial_llist(COMMA,expr) COMMA expr . [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## reversed_separated_nontrivial_llist(COMMA,expr) COMMA expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT CHAR DOT LBRACKET WITH
##
## Concrete syntax: [ UIdent 'a' . [ with
##
## Ends in an error in state: 2005.
##
## simple_expr -> simple_expr DOT LBRACKET . seq_expr RBRACKET [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT LBRACKET . seq_expr error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT CHAR DOT LBRACKET UIDENT VAL
##
## Concrete syntax: [ UIdent 'a' . [ UIdent val
##
## Ends in an error in state: 2006.
##
## simple_expr -> simple_expr DOT LBRACKET seq_expr . RBRACKET [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT LBRACKET seq_expr . error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT LBRACKET seq_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1048, spurious reduction of production constr_longident -> mod_longident
## In state 1101, spurious reduction of production simple_expr -> constr_longident
## In state 1074, spurious reduction of production expr -> simple_expr
## In state 1095, spurious reduction of production seq_expr -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT CHAR DOT LBRACE WITH
##
## Concrete syntax: [ UIdent 'a' . { with
##
## Ends in an error in state: 2009.
##
## simple_expr -> simple_expr DOT LBRACE . seq_expr RBRACE [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT LBRACE . seq_expr error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT LBRACE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT CHAR DOT LBRACE UIDENT VAL
##
## Concrete syntax: [ UIdent 'a' . { UIdent val
##
## Ends in an error in state: 2010.
##
## simple_expr -> simple_expr DOT LBRACE seq_expr . RBRACE [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT LBRACE seq_expr . error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT LBRACE seq_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1048, spurious reduction of production constr_longident -> mod_longident
## In state 1101, spurious reduction of production simple_expr -> constr_longident
## In state 1074, spurious reduction of production expr -> simple_expr
## In state 1095, spurious reduction of production seq_expr -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT CHAR DOT UIDENT WITH
##
## Concrete syntax: [ UIdent 'a' . UIdent with
##
## Ends in an error in state: 2013.
##
## mk_longident(mod_longident,LIDENT) -> mod_longident . DOT LIDENT [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## mk_longident(mod_longident,UIDENT) -> mod_longident . DOT UIDENT [ DOTOP DOT ]
## simple_expr -> simple_expr DOT mod_longident . DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident . DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident . DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident . DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident . DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident . DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT mod_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT CHAR DOT UIDENT DOTOP WITH
##
## Concrete syntax: [ UIdent 'a' . UIdent .+ with
##
## Ends in an error in state: 2014.
##
## simple_expr -> simple_expr DOT mod_longident DOTOP . LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident DOTOP . LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident DOTOP . LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident DOTOP . LPAREN separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident DOTOP . LBRACE separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident DOTOP . LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT mod_longident DOTOP
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT CHAR DOT UIDENT DOTOP LPAREN WITH
##
## Concrete syntax: [ UIdent 'a' . UIdent .+ ( with
##
## Ends in an error in state: 2015.
##
## simple_expr -> simple_expr DOT mod_longident DOTOP LPAREN . separated_or_terminated_nonempty_list(SEMI,expr) RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident DOTOP LPAREN . separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT mod_longident DOTOP LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT CHAR DOT UIDENT DOTOP LPAREN UIDENT RBRACKET
##
## Concrete syntax: [ UIdent 'a' . UIdent .+ ( UIdent ]
##
## Ends in an error in state: 2016.
##
## simple_expr -> simple_expr DOT mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) . RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) . error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1048, spurious reduction of production constr_longident -> mod_longident
## In state 1101, spurious reduction of production simple_expr -> constr_longident
## In state 1074, spurious reduction of production expr -> simple_expr
## In state 2019, spurious reduction of production separated_or_terminated_nonempty_list(SEMI,expr) -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT VAL
##
## Concrete syntax: [ UIdent val
##
## Ends in an error in state: 2019.
##
## expr -> expr . INFIXOP0 expr [ error STAR SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ error STAR SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ error STAR SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ error STAR SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ error STAR SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ error STAR SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ error STAR SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ error STAR SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ error STAR SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ error STAR SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ error STAR SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ error STAR SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ error STAR SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ error STAR SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ error STAR SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ error STAR SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ error STAR SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ error STAR SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ error STAR SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ error STAR SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ error STAR SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ error STAR SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ error STAR SEMI RPAREN RBRACKET RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
## separated_or_terminated_nonempty_list(SEMI,expr) -> expr . [ error RPAREN RBRACKET RBRACE BARRBRACKET ]
## separated_or_terminated_nonempty_list(SEMI,expr) -> expr . SEMI [ error RPAREN RBRACKET RBRACE BARRBRACKET ]
## separated_or_terminated_nonempty_list(SEMI,expr) -> expr . SEMI separated_or_terminated_nonempty_list(SEMI,expr) [ error RPAREN RBRACKET RBRACE BARRBRACKET ]
##
## The known suffix of the stack is as follows:
## expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1048, spurious reduction of production constr_longident -> mod_longident
## In state 1101, spurious reduction of production simple_expr -> constr_longident
## In state 1074, spurious reduction of production expr -> simple_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT SEMI WITH
##
## Concrete syntax: [ UIdent ; with
##
## Ends in an error in state: 2020.
##
## separated_or_terminated_nonempty_list(SEMI,expr) -> expr SEMI . [ error RPAREN RBRACKET RBRACE BARRBRACKET ]
## separated_or_terminated_nonempty_list(SEMI,expr) -> expr SEMI . separated_or_terminated_nonempty_list(SEMI,expr) [ error RPAREN RBRACKET RBRACE BARRBRACKET ]
##
## The known suffix of the stack is as follows:
## expr SEMI
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT CHAR DOT UIDENT DOTOP LBRACKET WITH
##
## Concrete syntax: [ UIdent 'a' . UIdent .+ [ with
##
## Ends in an error in state: 2022.
##
## simple_expr -> simple_expr DOT mod_longident DOTOP LBRACKET . separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident DOTOP LBRACKET . separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT mod_longident DOTOP LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT CHAR DOT UIDENT DOTOP LBRACKET UIDENT RPAREN
##
## Concrete syntax: [ UIdent 'a' . UIdent .+ [ UIdent )
##
## Ends in an error in state: 2023.
##
## simple_expr -> simple_expr DOT mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) . RBRACKET [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) . error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1048, spurious reduction of production constr_longident -> mod_longident
## In state 1101, spurious reduction of production simple_expr -> constr_longident
## In state 1074, spurious reduction of production expr -> simple_expr
## In state 2019, spurious reduction of production separated_or_terminated_nonempty_list(SEMI,expr) -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT CHAR DOT UIDENT DOTOP LBRACE WITH
##
## Concrete syntax: [ UIdent 'a' . UIdent .+ { with
##
## Ends in an error in state: 2026.
##
## simple_expr -> simple_expr DOT mod_longident DOTOP LBRACE . separated_or_terminated_nonempty_list(SEMI,expr) RBRACE [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident DOTOP LBRACE . separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT mod_longident DOTOP LBRACE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT CHAR DOT UIDENT DOTOP LBRACE UIDENT RPAREN
##
## Concrete syntax: [ UIdent 'a' . UIdent .+ { UIdent )
##
## Ends in an error in state: 2027.
##
## simple_expr -> simple_expr DOT mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) . RBRACE [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) . error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1048, spurious reduction of production constr_longident -> mod_longident
## In state 1101, spurious reduction of production simple_expr -> constr_longident
## In state 1074, spurious reduction of production expr -> simple_expr
## In state 2019, spurious reduction of production separated_or_terminated_nonempty_list(SEMI,expr) -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT DOTOP WITH
##
## Concrete syntax: [ UIdent .+ with
##
## Ends in an error in state: 2031.
##
## expr -> simple_expr DOTOP . LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN LESSMINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> simple_expr DOTOP . LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE LESSMINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> simple_expr DOTOP . LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET LESSMINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOTOP . LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOTOP . LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOTOP . LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOTOP . LPAREN separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOTOP . LBRACE separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOTOP . LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOTOP
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT DOTOP LPAREN WITH
##
## Concrete syntax: [ UIdent .+ ( with
##
## Ends in an error in state: 2032.
##
## expr -> simple_expr DOTOP LPAREN . separated_or_terminated_nonempty_list(SEMI,expr) RPAREN LESSMINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOTOP LPAREN . separated_or_terminated_nonempty_list(SEMI,expr) RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOTOP LPAREN . separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOTOP LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT DOTOP LPAREN UIDENT RBRACKET
##
## Concrete syntax: [ UIdent .+ ( UIdent ]
##
## Ends in an error in state: 2033.
##
## expr -> simple_expr DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) . RPAREN LESSMINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) . RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) . error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1048, spurious reduction of production constr_longident -> mod_longident
## In state 1101, spurious reduction of production simple_expr -> constr_longident
## In state 1074, spurious reduction of production expr -> simple_expr
## In state 2019, spurious reduction of production separated_or_terminated_nonempty_list(SEMI,expr) -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT DOTOP LPAREN UIDENT RPAREN WITH
##
## Concrete syntax: [ UIdent .+ ( UIdent ) with
##
## Ends in an error in state: 2035.
##
## expr -> simple_expr DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN . LESSMINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN . [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT DOTOP LPAREN UIDENT RPAREN LESSMINUS WITH
##
## Concrete syntax: [ UIdent .+ ( UIdent ) <- with
##
## Ends in an error in state: 2036.
##
## expr -> simple_expr DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN LESSMINUS . expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN LESSMINUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT DOTOP LPAREN UIDENT RPAREN LESSMINUS UNDERSCORE WITH
##
## Concrete syntax: [ UIdent .+ ( UIdent ) <- _ with
##
## Ends in an error in state: 2037.
##
## expr -> expr . INFIXOP0 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> simple_expr DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN LESSMINUS expr . [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN LESSMINUS expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT DOTOP LBRACKET WITH
##
## Concrete syntax: [ UIdent .+ [ with
##
## Ends in an error in state: 2038.
##
## expr -> simple_expr DOTOP LBRACKET . separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET LESSMINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOTOP LBRACKET . separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOTOP LBRACKET . separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOTOP LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT DOTOP LBRACKET UIDENT RPAREN
##
## Concrete syntax: [ UIdent .+ [ UIdent )
##
## Ends in an error in state: 2039.
##
## expr -> simple_expr DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) . RBRACKET LESSMINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) . RBRACKET [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) . error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1048, spurious reduction of production constr_longident -> mod_longident
## In state 1101, spurious reduction of production simple_expr -> constr_longident
## In state 1074, spurious reduction of production expr -> simple_expr
## In state 2019, spurious reduction of production separated_or_terminated_nonempty_list(SEMI,expr) -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT DOTOP LBRACKET UIDENT RBRACKET WITH
##
## Concrete syntax: [ UIdent .+ [ UIdent ] with
##
## Ends in an error in state: 2041.
##
## expr -> simple_expr DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET . LESSMINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET . [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT DOTOP LBRACKET UIDENT RBRACKET LESSMINUS WITH
##
## Concrete syntax: [ UIdent .+ [ UIdent ] <- with
##
## Ends in an error in state: 2042.
##
## expr -> simple_expr DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET LESSMINUS . expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET LESSMINUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT DOTOP LBRACKET UIDENT RBRACKET LESSMINUS UNDERSCORE WITH
##
## Concrete syntax: [ UIdent .+ [ UIdent ] <- _ with
##
## Ends in an error in state: 2043.
##
## expr -> expr . INFIXOP0 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> simple_expr DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET LESSMINUS expr . [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET LESSMINUS expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT DOTOP LBRACE WITH
##
## Concrete syntax: [ UIdent .+ { with
##
## Ends in an error in state: 2044.
##
## expr -> simple_expr DOTOP LBRACE . separated_or_terminated_nonempty_list(SEMI,expr) RBRACE LESSMINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOTOP LBRACE . separated_or_terminated_nonempty_list(SEMI,expr) RBRACE [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOTOP LBRACE . separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOTOP LBRACE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT DOTOP LBRACE UIDENT RPAREN
##
## Concrete syntax: [ UIdent .+ { UIdent )
##
## Ends in an error in state: 2045.
##
## expr -> simple_expr DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) . RBRACE LESSMINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) . RBRACE [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) . error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1048, spurious reduction of production constr_longident -> mod_longident
## In state 1101, spurious reduction of production simple_expr -> constr_longident
## In state 1074, spurious reduction of production expr -> simple_expr
## In state 2019, spurious reduction of production separated_or_terminated_nonempty_list(SEMI,expr) -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT DOTOP LBRACE UIDENT RBRACE WITH
##
## Concrete syntax: [ UIdent .+ { UIdent } with
##
## Ends in an error in state: 2047.
##
## expr -> simple_expr DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE . LESSMINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE . [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT DOTOP LBRACE UIDENT RBRACE LESSMINUS WITH
##
## Concrete syntax: [ UIdent .+ { UIdent } <- with
##
## Ends in an error in state: 2048.
##
## expr -> simple_expr DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE LESSMINUS . expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE LESSMINUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT DOTOP LBRACE UIDENT RBRACE LESSMINUS UNDERSCORE WITH
##
## Concrete syntax: [ UIdent .+ { UIdent } <- _ with
##
## Ends in an error in state: 2049.
##
## expr -> expr . INFIXOP0 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> simple_expr DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE LESSMINUS expr . [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE LESSMINUS expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FALSE DOT WITH
##
## Concrete syntax: [ false . with
##
## Ends in an error in state: 2050.
##
## expr -> simple_expr DOT . label_longident LESSMINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> simple_expr DOT . LPAREN seq_expr RPAREN LESSMINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> simple_expr DOT . LBRACE seq_expr RBRACE LESSMINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> simple_expr DOT . LBRACKET seq_expr RBRACKET LESSMINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> simple_expr DOT . mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN LESSMINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> simple_expr DOT . mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE LESSMINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> simple_expr DOT . mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET LESSMINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT . LPAREN seq_expr RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT . LBRACE seq_expr RBRACE [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT . LBRACKET seq_expr RBRACKET [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT . mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT . mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT . mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT . LPAREN seq_expr error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT . LBRACE seq_expr error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT . LBRACKET seq_expr error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT . mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT . mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT . mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT . label_longident [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FALSE DOT LPAREN WITH
##
## Concrete syntax: [ false . ( with
##
## Ends in an error in state: 2051.
##
## expr -> simple_expr DOT LPAREN . seq_expr RPAREN LESSMINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT LPAREN . seq_expr RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT LPAREN . seq_expr error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FALSE DOT LPAREN UIDENT VAL
##
## Concrete syntax: [ false . ( UIdent val
##
## Ends in an error in state: 2052.
##
## expr -> simple_expr DOT LPAREN seq_expr . RPAREN LESSMINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT LPAREN seq_expr . RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT LPAREN seq_expr . error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT LPAREN seq_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1048, spurious reduction of production constr_longident -> mod_longident
## In state 1101, spurious reduction of production simple_expr -> constr_longident
## In state 1074, spurious reduction of production expr -> simple_expr
## In state 1095, spurious reduction of production seq_expr -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FALSE DOT LPAREN UIDENT RPAREN WITH
##
## Concrete syntax: [ false . ( UIdent ) with
##
## Ends in an error in state: 2053.
##
## expr -> simple_expr DOT LPAREN seq_expr RPAREN . LESSMINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN . [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT LPAREN seq_expr RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FALSE DOT LPAREN UIDENT RPAREN LESSMINUS WITH
##
## Concrete syntax: [ false . ( UIdent ) <- with
##
## Ends in an error in state: 2054.
##
## expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS . expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FALSE DOT LPAREN UIDENT RPAREN LESSMINUS UNDERSCORE WITH
##
## Concrete syntax: [ false . ( UIdent ) <- _ with
##
## Ends in an error in state: 2055.
##
## expr -> expr . INFIXOP0 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr . [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FALSE DOT LBRACKET WITH
##
## Concrete syntax: [ false . [ with
##
## Ends in an error in state: 2056.
##
## expr -> simple_expr DOT LBRACKET . seq_expr RBRACKET LESSMINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT LBRACKET . seq_expr RBRACKET [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT LBRACKET . seq_expr error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FALSE DOT LBRACKET UIDENT VAL
##
## Concrete syntax: [ false . [ UIdent val
##
## Ends in an error in state: 2057.
##
## expr -> simple_expr DOT LBRACKET seq_expr . RBRACKET LESSMINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT LBRACKET seq_expr . RBRACKET [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT LBRACKET seq_expr . error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT LBRACKET seq_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1048, spurious reduction of production constr_longident -> mod_longident
## In state 1101, spurious reduction of production simple_expr -> constr_longident
## In state 1074, spurious reduction of production expr -> simple_expr
## In state 1095, spurious reduction of production seq_expr -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FALSE DOT LBRACKET UIDENT RBRACKET WITH
##
## Concrete syntax: [ false . [ UIdent ] with
##
## Ends in an error in state: 2058.
##
## expr -> simple_expr DOT LBRACKET seq_expr RBRACKET . LESSMINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET . [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT LBRACKET seq_expr RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FALSE DOT LBRACKET UIDENT RBRACKET LESSMINUS WITH
##
## Concrete syntax: [ false . [ UIdent ] <- with
##
## Ends in an error in state: 2059.
##
## expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS . expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FALSE DOT LBRACKET UIDENT RBRACKET LESSMINUS UNDERSCORE WITH
##
## Concrete syntax: [ false . [ UIdent ] <- _ with
##
## Ends in an error in state: 2060.
##
## expr -> expr . INFIXOP0 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr . [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FALSE DOT LBRACE WITH
##
## Concrete syntax: [ false . { with
##
## Ends in an error in state: 2061.
##
## expr -> simple_expr DOT LBRACE . seq_expr RBRACE LESSMINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT LBRACE . seq_expr RBRACE [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT LBRACE . seq_expr error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT LBRACE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FALSE DOT LBRACE UIDENT VAL
##
## Concrete syntax: [ false . { UIdent val
##
## Ends in an error in state: 2062.
##
## expr -> simple_expr DOT LBRACE seq_expr . RBRACE LESSMINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT LBRACE seq_expr . RBRACE [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT LBRACE seq_expr . error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT LBRACE seq_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1048, spurious reduction of production constr_longident -> mod_longident
## In state 1101, spurious reduction of production simple_expr -> constr_longident
## In state 1074, spurious reduction of production expr -> simple_expr
## In state 1095, spurious reduction of production seq_expr -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FALSE DOT LBRACE UIDENT RBRACE WITH
##
## Concrete syntax: [ false . { UIdent } with
##
## Ends in an error in state: 2063.
##
## expr -> simple_expr DOT LBRACE seq_expr RBRACE . LESSMINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT LBRACE seq_expr RBRACE . [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT LBRACE seq_expr RBRACE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FALSE DOT LBRACE UIDENT RBRACE LESSMINUS WITH
##
## Concrete syntax: [ false . { UIdent } <- with
##
## Ends in an error in state: 2064.
##
## expr -> simple_expr DOT LBRACE seq_expr RBRACE LESSMINUS . expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT LBRACE seq_expr RBRACE LESSMINUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FALSE DOT LBRACE UIDENT RBRACE LESSMINUS UNDERSCORE WITH
##
## Concrete syntax: [ false . { UIdent } <- _ with
##
## Ends in an error in state: 2065.
##
## expr -> expr . INFIXOP0 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> simple_expr DOT LBRACE seq_expr RBRACE LESSMINUS expr . [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT LBRACE seq_expr RBRACE LESSMINUS expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FALSE DOT UIDENT WITH
##
## Concrete syntax: [ false . UIdent with
##
## Ends in an error in state: 2066.
##
## expr -> simple_expr DOT mod_longident . DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN LESSMINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> simple_expr DOT mod_longident . DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE LESSMINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> simple_expr DOT mod_longident . DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET LESSMINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## mk_longident(mod_longident,LIDENT) -> mod_longident . DOT LIDENT [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESSMINUS LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## mk_longident(mod_longident,UIDENT) -> mod_longident . DOT UIDENT [ DOTOP DOT ]
## simple_expr -> simple_expr DOT mod_longident . DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident . DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident . DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident . DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident . DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident . DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT mod_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FALSE DOT UIDENT DOTOP WITH
##
## Concrete syntax: [ false . UIdent .+ with
##
## Ends in an error in state: 2067.
##
## expr -> simple_expr DOT mod_longident DOTOP . LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN LESSMINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> simple_expr DOT mod_longident DOTOP . LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE LESSMINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> simple_expr DOT mod_longident DOTOP . LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET LESSMINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident DOTOP . LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident DOTOP . LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident DOTOP . LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident DOTOP . LPAREN separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident DOTOP . LBRACE separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident DOTOP . LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT mod_longident DOTOP
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FALSE DOT UIDENT DOTOP LPAREN WITH
##
## Concrete syntax: [ false . UIdent .+ ( with
##
## Ends in an error in state: 2068.
##
## expr -> simple_expr DOT mod_longident DOTOP LPAREN . separated_or_terminated_nonempty_list(SEMI,expr) RPAREN LESSMINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident DOTOP LPAREN . separated_or_terminated_nonempty_list(SEMI,expr) RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident DOTOP LPAREN . separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT mod_longident DOTOP LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FALSE DOT UIDENT DOTOP LPAREN UIDENT RBRACKET
##
## Concrete syntax: [ false . UIdent .+ ( UIdent ]
##
## Ends in an error in state: 2069.
##
## expr -> simple_expr DOT mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) . RPAREN LESSMINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) . RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) . error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1048, spurious reduction of production constr_longident -> mod_longident
## In state 1101, spurious reduction of production simple_expr -> constr_longident
## In state 1074, spurious reduction of production expr -> simple_expr
## In state 2019, spurious reduction of production separated_or_terminated_nonempty_list(SEMI,expr) -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FALSE DOT UIDENT DOTOP LPAREN UIDENT RPAREN WITH
##
## Concrete syntax: [ false . UIdent .+ ( UIdent ) with
##
## Ends in an error in state: 2070.
##
## expr -> simple_expr DOT mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN . LESSMINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN . [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FALSE DOT UIDENT DOTOP LPAREN UIDENT RPAREN LESSMINUS WITH
##
## Concrete syntax: [ false . UIdent .+ ( UIdent ) <- with
##
## Ends in an error in state: 2071.
##
## expr -> simple_expr DOT mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN LESSMINUS . expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN LESSMINUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FALSE DOT UIDENT DOTOP LPAREN UIDENT RPAREN LESSMINUS UNDERSCORE WITH
##
## Concrete syntax: [ false . UIdent .+ ( UIdent ) <- _ with
##
## Ends in an error in state: 2072.
##
## expr -> expr . INFIXOP0 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> simple_expr DOT mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN LESSMINUS expr . [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN LESSMINUS expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FALSE DOT UIDENT DOTOP LBRACKET WITH
##
## Concrete syntax: [ false . UIdent .+ [ with
##
## Ends in an error in state: 2073.
##
## expr -> simple_expr DOT mod_longident DOTOP LBRACKET . separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET LESSMINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident DOTOP LBRACKET . separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident DOTOP LBRACKET . separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT mod_longident DOTOP LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FALSE DOT UIDENT DOTOP LBRACKET UIDENT RPAREN
##
## Concrete syntax: [ false . UIdent .+ [ UIdent )
##
## Ends in an error in state: 2074.
##
## expr -> simple_expr DOT mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) . RBRACKET LESSMINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) . RBRACKET [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) . error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1048, spurious reduction of production constr_longident -> mod_longident
## In state 1101, spurious reduction of production simple_expr -> constr_longident
## In state 1074, spurious reduction of production expr -> simple_expr
## In state 2019, spurious reduction of production separated_or_terminated_nonempty_list(SEMI,expr) -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FALSE DOT UIDENT DOTOP LBRACKET UIDENT RBRACKET WITH
##
## Concrete syntax: [ false . UIdent .+ [ UIdent ] with
##
## Ends in an error in state: 2075.
##
## expr -> simple_expr DOT mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET . LESSMINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET . [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FALSE DOT UIDENT DOTOP LBRACKET UIDENT RBRACKET LESSMINUS WITH
##
## Concrete syntax: [ false . UIdent .+ [ UIdent ] <- with
##
## Ends in an error in state: 2076.
##
## expr -> simple_expr DOT mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET LESSMINUS . expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET LESSMINUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FALSE DOT UIDENT DOTOP LBRACKET UIDENT RBRACKET LESSMINUS UNDERSCORE WITH
##
## Concrete syntax: [ false . UIdent .+ [ UIdent ] <- _ with
##
## Ends in an error in state: 2077.
##
## expr -> expr . INFIXOP0 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> simple_expr DOT mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET LESSMINUS expr . [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET LESSMINUS expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FALSE DOT UIDENT DOTOP LBRACE WITH
##
## Concrete syntax: [ false . UIdent .+ { with
##
## Ends in an error in state: 2078.
##
## expr -> simple_expr DOT mod_longident DOTOP LBRACE . separated_or_terminated_nonempty_list(SEMI,expr) RBRACE LESSMINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident DOTOP LBRACE . separated_or_terminated_nonempty_list(SEMI,expr) RBRACE [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident DOTOP LBRACE . separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT mod_longident DOTOP LBRACE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FALSE DOT UIDENT DOTOP LBRACE UIDENT RPAREN
##
## Concrete syntax: [ false . UIdent .+ { UIdent )
##
## Ends in an error in state: 2079.
##
## expr -> simple_expr DOT mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) . RBRACE LESSMINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) . RBRACE [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) . error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1048, spurious reduction of production constr_longident -> mod_longident
## In state 1101, spurious reduction of production simple_expr -> constr_longident
## In state 1074, spurious reduction of production expr -> simple_expr
## In state 2019, spurious reduction of production separated_or_terminated_nonempty_list(SEMI,expr) -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FALSE DOT UIDENT DOTOP LBRACE UIDENT RBRACE WITH
##
## Concrete syntax: [ false . UIdent .+ { UIdent } with
##
## Ends in an error in state: 2080.
##
## expr -> simple_expr DOT mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE . LESSMINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE . [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FALSE DOT UIDENT DOTOP LBRACE UIDENT RBRACE LESSMINUS WITH
##
## Concrete syntax: [ false . UIdent .+ { UIdent } <- with
##
## Ends in an error in state: 2081.
##
## expr -> simple_expr DOT mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE LESSMINUS . expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE LESSMINUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FALSE DOT UIDENT DOTOP LBRACE UIDENT RBRACE LESSMINUS UNDERSCORE WITH
##
## Concrete syntax: [ false . UIdent .+ { UIdent } <- _ with
##
## Ends in an error in state: 2082.
##
## expr -> expr . INFIXOP0 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> simple_expr DOT mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE LESSMINUS expr . [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE LESSMINUS expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FALSE DOT LIDENT WITH
##
## Concrete syntax: [ false . lident with
##
## Ends in an error in state: 2083.
##
## expr -> simple_expr DOT label_longident . LESSMINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT label_longident . [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT label_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FALSE DOT LIDENT LESSMINUS WITH
##
## Concrete syntax: [ false . lident <- with
##
## Ends in an error in state: 2084.
##
## expr -> simple_expr DOT label_longident LESSMINUS . expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT label_longident LESSMINUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FALSE DOT LIDENT LESSMINUS UNDERSCORE WITH
##
## Concrete syntax: [ false . lident <- _ with
##
## Ends in an error in state: 2085.
##
## expr -> expr . INFIXOP0 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> simple_expr DOT label_longident LESSMINUS expr . [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT label_longident LESSMINUS expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET CHAR CHAR AS
##
## Concrete syntax: [ 'a' 'a' as
##
## Ends in an error in state: 2086.
##
## expr -> simple_expr reversed_nonempty_llist(labeled_simple_expr) . [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## reversed_nonempty_llist(labeled_simple_expr) -> reversed_nonempty_llist(labeled_simple_expr) . labeled_simple_expr [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr reversed_nonempty_llist(labeled_simple_expr)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1732, spurious reduction of production labeled_simple_expr -> simple_expr
## In state 1735, spurious reduction of production reversed_nonempty_llist(labeled_simple_expr) -> labeled_simple_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT CHAR DOTOP LPAREN UIDENT RBRACKET
##
## Concrete syntax: [ UIdent 'a' .+ ( UIdent ]
##
## Ends in an error in state: 2088.
##
## simple_expr -> simple_expr DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) . RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) . error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1048, spurious reduction of production constr_longident -> mod_longident
## In state 1101, spurious reduction of production simple_expr -> constr_longident
## In state 1074, spurious reduction of production expr -> simple_expr
## In state 2019, spurious reduction of production separated_or_terminated_nonempty_list(SEMI,expr) -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT CHAR DOTOP LBRACKET WITH
##
## Concrete syntax: [ UIdent 'a' .+ [ with
##
## Ends in an error in state: 2090.
##
## simple_expr -> simple_expr DOTOP LBRACKET . separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOTOP LBRACKET . separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOTOP LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT CHAR DOTOP LBRACKET UIDENT RPAREN
##
## Concrete syntax: [ UIdent 'a' .+ [ UIdent )
##
## Ends in an error in state: 2091.
##
## simple_expr -> simple_expr DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) . RBRACKET [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) . error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1048, spurious reduction of production constr_longident -> mod_longident
## In state 1101, spurious reduction of production simple_expr -> constr_longident
## In state 1074, spurious reduction of production expr -> simple_expr
## In state 2019, spurious reduction of production separated_or_terminated_nonempty_list(SEMI,expr) -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT CHAR DOTOP LBRACE WITH
##
## Concrete syntax: [ UIdent 'a' .+ { with
##
## Ends in an error in state: 2093.
##
## simple_expr -> simple_expr DOTOP LBRACE . separated_or_terminated_nonempty_list(SEMI,expr) RBRACE [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOTOP LBRACE . separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOTOP LBRACE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT CHAR DOTOP LBRACE UIDENT RPAREN
##
## Concrete syntax: [ UIdent 'a' .+ { UIdent )
##
## Ends in an error in state: 2094.
##
## simple_expr -> simple_expr DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) . RBRACE [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) . error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1048, spurious reduction of production constr_longident -> mod_longident
## In state 1101, spurious reduction of production simple_expr -> constr_longident
## In state 1074, spurious reduction of production expr -> simple_expr
## In state 2019, spurious reduction of production separated_or_terminated_nonempty_list(SEMI,expr) -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT DOT LPAREN UIDENT VAL
##
## Concrete syntax: [ UIdent . ( UIdent val
##
## Ends in an error in state: 2096.
##
## simple_expr -> mod_longident DOT LPAREN seq_expr . RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident DOT LPAREN seq_expr . error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## mod_longident DOT LPAREN seq_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1048, spurious reduction of production constr_longident -> mod_longident
## In state 1101, spurious reduction of production simple_expr -> constr_longident
## In state 1074, spurious reduction of production expr -> simple_expr
## In state 1095, spurious reduction of production seq_expr -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT DOT LBRACKETBAR WITH
##
## Concrete syntax: [ UIdent . [| with
##
## Ends in an error in state: 2099.
##
## simple_expr -> mod_longident DOT LBRACKETBAR . separated_or_terminated_nonempty_list(SEMI,expr) BARRBRACKET [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident DOT LBRACKETBAR . BARRBRACKET [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident DOT LBRACKETBAR . separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## mod_longident DOT LBRACKETBAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT DOT LBRACKETBAR UIDENT RPAREN
##
## Concrete syntax: [ UIdent . [| UIdent )
##
## Ends in an error in state: 2101.
##
## simple_expr -> mod_longident DOT LBRACKETBAR separated_or_terminated_nonempty_list(SEMI,expr) . BARRBRACKET [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident DOT LBRACKETBAR separated_or_terminated_nonempty_list(SEMI,expr) . error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## mod_longident DOT LBRACKETBAR separated_or_terminated_nonempty_list(SEMI,expr)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1048, spurious reduction of production constr_longident -> mod_longident
## In state 1101, spurious reduction of production simple_expr -> constr_longident
## In state 1074, spurious reduction of production expr -> simple_expr
## In state 2019, spurious reduction of production separated_or_terminated_nonempty_list(SEMI,expr) -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT DOT LBRACKET WITH
##
## Concrete syntax: [ UIdent . [ with
##
## Ends in an error in state: 2104.
##
## simple_expr -> mod_longident DOT LBRACKET . separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident DOT LBRACKET . RBRACKET [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident DOT LBRACKET . separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## mod_longident DOT LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT DOT LBRACKET UIDENT RPAREN
##
## Concrete syntax: [ UIdent . [ UIdent )
##
## Ends in an error in state: 2106.
##
## simple_expr -> mod_longident DOT LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) . RBRACKET [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident DOT LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) . error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## mod_longident DOT LBRACKET separated_or_terminated_nonempty_list(SEMI,expr)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1048, spurious reduction of production constr_longident -> mod_longident
## In state 1101, spurious reduction of production simple_expr -> constr_longident
## In state 1074, spurious reduction of production expr -> simple_expr
## In state 2019, spurious reduction of production separated_or_terminated_nonempty_list(SEMI,expr) -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT DOT LBRACELESS WITH
##
## Concrete syntax: [ UIdent . {< with
##
## Ends in an error in state: 2109.
##
## simple_expr -> mod_longident DOT LBRACELESS . separated_or_terminated_nonempty_list(SEMI,object_expr_field) GREATERRBRACE [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident DOT LBRACELESS . separated_or_terminated_nonempty_list(SEMI,object_expr_field) error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## mod_longident DOT LBRACELESS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT DOT LBRACE WITH
##
## Concrete syntax: [ UIdent . { with
##
## Ends in an error in state: 2113.
##
## simple_expr -> mod_longident DOT LBRACE . record_expr_content RBRACE [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident DOT LBRACE . record_expr_content error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## mod_longident DOT LBRACE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACE CHAR VAL
##
## Concrete syntax: { 'a' val
##
## Ends in an error in state: 2114.
##
## record_expr_content -> simple_expr . WITH separated_or_terminated_nonempty_list(SEMI,record_expr_field) [ error RBRACE ]
## simple_expr -> simple_expr . DOT LPAREN seq_expr RPAREN [ WITH HASHOP HASH DOTOP DOT ]
## simple_expr -> simple_expr . DOT LBRACE seq_expr RBRACE [ WITH HASHOP HASH DOTOP DOT ]
## simple_expr -> simple_expr . DOT LBRACKET seq_expr RBRACKET [ WITH HASHOP HASH DOTOP DOT ]
## simple_expr -> simple_expr . DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN [ WITH HASHOP HASH DOTOP DOT ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN [ WITH HASHOP HASH DOTOP DOT ]
## simple_expr -> simple_expr . DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE [ WITH HASHOP HASH DOTOP DOT ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE [ WITH HASHOP HASH DOTOP DOT ]
## simple_expr -> simple_expr . DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET [ WITH HASHOP HASH DOTOP DOT ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET [ WITH HASHOP HASH DOTOP DOT ]
## simple_expr -> simple_expr . DOT LPAREN seq_expr error [ WITH HASHOP HASH DOTOP DOT ]
## simple_expr -> simple_expr . DOT LBRACE seq_expr error [ WITH HASHOP HASH DOTOP DOT ]
## simple_expr -> simple_expr . DOT LBRACKET seq_expr error [ WITH HASHOP HASH DOTOP DOT ]
## simple_expr -> simple_expr . DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH HASHOP HASH DOTOP DOT ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH HASHOP HASH DOTOP DOT ]
## simple_expr -> simple_expr . DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH HASHOP HASH DOTOP DOT ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH HASHOP HASH DOTOP DOT ]
## simple_expr -> simple_expr . DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH HASHOP HASH DOTOP DOT ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH HASHOP HASH DOTOP DOT ]
## simple_expr -> simple_expr . DOT label_longident [ WITH HASHOP HASH DOTOP DOT ]
## simple_expr -> simple_expr . HASH LIDENT [ WITH HASHOP HASH DOTOP DOT ]
## simple_expr -> simple_expr . HASHOP simple_expr [ WITH HASHOP HASH DOTOP DOT ]
##
## The known suffix of the stack is as follows:
## simple_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACE CHAR WITH WITH
##
## Concrete syntax: { 'a' with with
##
## Ends in an error in state: 2115.
##
## record_expr_content -> simple_expr WITH . separated_or_terminated_nonempty_list(SEMI,record_expr_field) [ error RBRACE ]
##
## The known suffix of the stack is as follows:
## simple_expr WITH
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACE CHAR WITH LIDENT WITH
##
## Concrete syntax: { 'a' with lident with
##
## Ends in an error in state: 2117.
##
## separated_or_terminated_nonempty_list(SEMI,record_expr_field) -> label_longident . option(type_constraint) option(preceded(EQUAL,expr)) [ error RBRACE ]
## separated_or_terminated_nonempty_list(SEMI,record_expr_field) -> label_longident . option(type_constraint) option(preceded(EQUAL,expr)) SEMI [ error RBRACE ]
## separated_or_terminated_nonempty_list(SEMI,record_expr_field) -> label_longident . option(type_constraint) option(preceded(EQUAL,expr)) SEMI separated_or_terminated_nonempty_list(SEMI,record_expr_field) [ error RBRACE ]
##
## The known suffix of the stack is as follows:
## label_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACE LIDENT COLONGREATER WITH
##
## Concrete syntax: { lident :> with
##
## Ends in an error in state: 2118.
##
## type_constraint -> COLONGREATER . core_type [ error SEMI RBRACE EQUAL ]
## type_constraint -> COLONGREATER . error [ error SEMI RBRACE EQUAL ]
##
## The known suffix of the stack is as follows:
## COLONGREATER
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACE LIDENT COLONGREATER QUOTED_STRING_EXPR WITH
##
## Concrete syntax: { lident :> {%hello|world|} with
##
## Ends in an error in state: 2120.
##
## core_type -> core_type . attribute [ error SEMI RBRACE LBRACKETAT EQUAL ]
## type_constraint -> COLONGREATER core_type . [ error SEMI RBRACE EQUAL ]
##
## The known suffix of the stack is as follows:
## COLONGREATER core_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 568, spurious reduction of production tuple_type -> atomic_type
## In state 555, spurious reduction of production function_type -> tuple_type
## In state 572, spurious reduction of production alias_type -> function_type
## In state 585, spurious reduction of production core_type -> alias_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACE LIDENT COLON WITH
##
## Concrete syntax: { lident : with
##
## Ends in an error in state: 2121.
##
## type_constraint -> COLON . core_type [ error SEMI RBRACE EQUAL ]
## type_constraint -> COLON . core_type COLONGREATER core_type [ error SEMI RBRACE EQUAL ]
## type_constraint -> COLON . error [ error SEMI RBRACE EQUAL ]
##
## The known suffix of the stack is as follows:
## COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACE LIDENT COLON QUOTED_STRING_EXPR WITH
##
## Concrete syntax: { lident : {%hello|world|} with
##
## Ends in an error in state: 2123.
##
## core_type -> core_type . attribute [ error SEMI RBRACE LBRACKETAT EQUAL COLONGREATER ]
## type_constraint -> COLON core_type . [ error SEMI RBRACE EQUAL ]
## type_constraint -> COLON core_type . COLONGREATER core_type [ error SEMI RBRACE EQUAL ]
##
## The known suffix of the stack is as follows:
## COLON core_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 568, spurious reduction of production tuple_type -> atomic_type
## In state 555, spurious reduction of production function_type -> tuple_type
## In state 572, spurious reduction of production alias_type -> function_type
## In state 585, spurious reduction of production core_type -> alias_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACE LIDENT COLON QUOTED_STRING_EXPR COLONGREATER WITH
##
## Concrete syntax: { lident : {%hello|world|} :> with
##
## Ends in an error in state: 2124.
##
## type_constraint -> COLON core_type COLONGREATER . core_type [ error SEMI RBRACE EQUAL ]
##
## The known suffix of the stack is as follows:
## COLON core_type COLONGREATER
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACE LIDENT COLON QUOTED_STRING_EXPR COLONGREATER QUOTED_STRING_EXPR WITH
##
## Concrete syntax: { lident : {%hello|world|} :> {%hello|world|} with
##
## Ends in an error in state: 2125.
##
## core_type -> core_type . attribute [ error SEMI RBRACE LBRACKETAT EQUAL ]
## type_constraint -> COLON core_type COLONGREATER core_type . [ error SEMI RBRACE EQUAL ]
##
## The known suffix of the stack is as follows:
## COLON core_type COLONGREATER core_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 568, spurious reduction of production tuple_type -> atomic_type
## In state 555, spurious reduction of production function_type -> tuple_type
## In state 572, spurious reduction of production alias_type -> function_type
## In state 585, spurious reduction of production core_type -> alias_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACE LIDENT EQUAL UIDENT GREATERRBRACE
##
## Concrete syntax: { lident = UIdent >}
##
## Ends in an error in state: 2128.
##
## separated_or_terminated_nonempty_list(SEMI,record_expr_field) -> label_longident option(type_constraint) option(preceded(EQUAL,expr)) . [ error RBRACE ]
## separated_or_terminated_nonempty_list(SEMI,record_expr_field) -> label_longident option(type_constraint) option(preceded(EQUAL,expr)) . SEMI [ error RBRACE ]
## separated_or_terminated_nonempty_list(SEMI,record_expr_field) -> label_longident option(type_constraint) option(preceded(EQUAL,expr)) . SEMI separated_or_terminated_nonempty_list(SEMI,record_expr_field) [ error RBRACE ]
##
## The known suffix of the stack is as follows:
## label_longident option(type_constraint) option(preceded(EQUAL,expr))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1048, spurious reduction of production constr_longident -> mod_longident
## In state 1101, spurious reduction of production simple_expr -> constr_longident
## In state 1074, spurious reduction of production expr -> simple_expr
## In state 2357, spurious reduction of production option(preceded(EQUAL,expr)) -> EQUAL expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACE LIDENT SEMI WITH
##
## Concrete syntax: { lident ; with
##
## Ends in an error in state: 2129.
##
## separated_or_terminated_nonempty_list(SEMI,record_expr_field) -> label_longident option(type_constraint) option(preceded(EQUAL,expr)) SEMI . [ error RBRACE ]
## separated_or_terminated_nonempty_list(SEMI,record_expr_field) -> label_longident option(type_constraint) option(preceded(EQUAL,expr)) SEMI . separated_or_terminated_nonempty_list(SEMI,record_expr_field) [ error RBRACE ]
##
## The known suffix of the stack is as follows:
## label_longident option(type_constraint) option(preceded(EQUAL,expr)) SEMI
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACE UIDENT WHILE
##
## Concrete syntax: { UIdent while
##
## Ends in an error in state: 2135.
##
## constr_longident -> mod_longident . [ WITH HASHOP HASH DOTOP DOT ]
## constr_longident -> mod_longident . DOT LPAREN COLONCOLON RPAREN [ WITH HASHOP HASH DOTOP DOT ]
## mk_longident(mod_longident,LIDENT) -> mod_longident . DOT LIDENT [ error SEMI RBRACE EQUAL COLONGREATER COLON ]
## mk_longident(mod_longident,UIDENT) -> mod_longident . DOT UIDENT [ WITH HASHOP HASH DOTOP DOT ]
## mk_longident(mod_longident,val_ident) -> mod_longident . DOT val_ident [ WITH HASHOP HASH DOTOP DOT ]
## simple_expr -> mod_longident . DOT LPAREN seq_expr RPAREN [ WITH HASHOP HASH DOTOP DOT ]
## simple_expr -> mod_longident . DOT LBRACELESS separated_or_terminated_nonempty_list(SEMI,object_expr_field) GREATERRBRACE [ WITH HASHOP HASH DOTOP DOT ]
## simple_expr -> mod_longident . DOT LBRACELESS separated_or_terminated_nonempty_list(SEMI,object_expr_field) error [ WITH HASHOP HASH DOTOP DOT ]
## simple_expr -> mod_longident . DOT LPAREN RPAREN [ WITH HASHOP HASH DOTOP DOT ]
## simple_expr -> mod_longident . DOT LPAREN seq_expr error [ WITH HASHOP HASH DOTOP DOT ]
## simple_expr -> mod_longident . DOT LBRACE record_expr_content RBRACE [ WITH HASHOP HASH DOTOP DOT ]
## simple_expr -> mod_longident . DOT LBRACE record_expr_content error [ WITH HASHOP HASH DOTOP DOT ]
## simple_expr -> mod_longident . DOT LBRACKETBAR separated_or_terminated_nonempty_list(SEMI,expr) BARRBRACKET [ WITH HASHOP HASH DOTOP DOT ]
## simple_expr -> mod_longident . DOT LBRACKETBAR BARRBRACKET [ WITH HASHOP HASH DOTOP DOT ]
## simple_expr -> mod_longident . DOT LBRACKETBAR separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH HASHOP HASH DOTOP DOT ]
## simple_expr -> mod_longident . DOT LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET [ WITH HASHOP HASH DOTOP DOT ]
## simple_expr -> mod_longident . DOT LBRACKET RBRACKET [ WITH HASHOP HASH DOTOP DOT ]
## simple_expr -> mod_longident . DOT LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH HASHOP HASH DOTOP DOT ]
## simple_expr -> mod_longident . DOT LPAREN MODULE ext list(attribute) module_expr COLON module_type RPAREN [ WITH HASHOP HASH DOTOP DOT ]
## simple_expr -> mod_longident . DOT LPAREN MODULE ext list(attribute) module_expr COLON error [ WITH HASHOP HASH DOTOP DOT ]
##
## The known suffix of the stack is as follows:
## mod_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACE UIDENT DOT WITH
##
## Concrete syntax: { UIdent . with
##
## Ends in an error in state: 2136.
##
## constr_longident -> mod_longident DOT . LPAREN COLONCOLON RPAREN [ WITH HASHOP HASH DOTOP DOT ]
## mk_longident(mod_longident,LIDENT) -> mod_longident DOT . LIDENT [ error SEMI RBRACE EQUAL COLONGREATER COLON ]
## mk_longident(mod_longident,UIDENT) -> mod_longident DOT . UIDENT [ WITH HASHOP HASH DOTOP DOT ]
## mk_longident(mod_longident,val_ident) -> mod_longident DOT . val_ident [ WITH HASHOP HASH DOTOP DOT ]
## simple_expr -> mod_longident DOT . LPAREN seq_expr RPAREN [ WITH HASHOP HASH DOTOP DOT ]
## simple_expr -> mod_longident DOT . LBRACELESS separated_or_terminated_nonempty_list(SEMI,object_expr_field) GREATERRBRACE [ WITH HASHOP HASH DOTOP DOT ]
## simple_expr -> mod_longident DOT . LBRACELESS separated_or_terminated_nonempty_list(SEMI,object_expr_field) error [ WITH HASHOP HASH DOTOP DOT ]
## simple_expr -> mod_longident DOT . LPAREN RPAREN [ WITH HASHOP HASH DOTOP DOT ]
## simple_expr -> mod_longident DOT . LPAREN seq_expr error [ WITH HASHOP HASH DOTOP DOT ]
## simple_expr -> mod_longident DOT . LBRACE record_expr_content RBRACE [ WITH HASHOP HASH DOTOP DOT ]
## simple_expr -> mod_longident DOT . LBRACE record_expr_content error [ WITH HASHOP HASH DOTOP DOT ]
## simple_expr -> mod_longident DOT . LBRACKETBAR separated_or_terminated_nonempty_list(SEMI,expr) BARRBRACKET [ WITH HASHOP HASH DOTOP DOT ]
## simple_expr -> mod_longident DOT . LBRACKETBAR BARRBRACKET [ WITH HASHOP HASH DOTOP DOT ]
## simple_expr -> mod_longident DOT . LBRACKETBAR separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH HASHOP HASH DOTOP DOT ]
## simple_expr -> mod_longident DOT . LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET [ WITH HASHOP HASH DOTOP DOT ]
## simple_expr -> mod_longident DOT . LBRACKET RBRACKET [ WITH HASHOP HASH DOTOP DOT ]
## simple_expr -> mod_longident DOT . LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH HASHOP HASH DOTOP DOT ]
## simple_expr -> mod_longident DOT . LPAREN MODULE ext list(attribute) module_expr COLON module_type RPAREN [ WITH HASHOP HASH DOTOP DOT ]
## simple_expr -> mod_longident DOT . LPAREN MODULE ext list(attribute) module_expr COLON error [ WITH HASHOP HASH DOTOP DOT ]
##
## The known suffix of the stack is as follows:
## mod_longident DOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACE UIDENT DOT LIDENT WHILE
##
## Concrete syntax: { UIdent . lident while
##
## Ends in an error in state: 2137.
##
## mk_longident(mod_longident,LIDENT) -> mod_longident DOT LIDENT . [ error SEMI RBRACE EQUAL COLONGREATER COLON ]
## val_ident -> LIDENT . [ WITH HASHOP HASH DOTOP DOT ]
##
## The known suffix of the stack is as follows:
## mod_longident DOT LIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT DOT LBRACKETBAR WITH
##
## Concrete syntax: UIdent . [| with
##
## Ends in an error in state: 2138.
##
## simple_expr -> mod_longident DOT LBRACKETBAR . separated_or_terminated_nonempty_list(SEMI,expr) BARRBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident DOT LBRACKETBAR . BARRBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident DOT LBRACKETBAR . separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## mod_longident DOT LBRACKETBAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT DOT LBRACKETBAR UIDENT RPAREN
##
## Concrete syntax: UIdent . [| UIdent )
##
## Ends in an error in state: 2140.
##
## simple_expr -> mod_longident DOT LBRACKETBAR separated_or_terminated_nonempty_list(SEMI,expr) . BARRBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident DOT LBRACKETBAR separated_or_terminated_nonempty_list(SEMI,expr) . error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## mod_longident DOT LBRACKETBAR separated_or_terminated_nonempty_list(SEMI,expr)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1048, spurious reduction of production constr_longident -> mod_longident
## In state 1101, spurious reduction of production simple_expr -> constr_longident
## In state 1074, spurious reduction of production expr -> simple_expr
## In state 2019, spurious reduction of production separated_or_terminated_nonempty_list(SEMI,expr) -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT DOT LBRACKET WITH
##
## Concrete syntax: UIdent . [ with
##
## Ends in an error in state: 2143.
##
## simple_expr -> mod_longident DOT LBRACKET . separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident DOT LBRACKET . RBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident DOT LBRACKET . separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## mod_longident DOT LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT DOT LBRACKET UIDENT RPAREN
##
## Concrete syntax: UIdent . [ UIdent )
##
## Ends in an error in state: 2145.
##
## simple_expr -> mod_longident DOT LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) . RBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident DOT LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) . error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## mod_longident DOT LBRACKET separated_or_terminated_nonempty_list(SEMI,expr)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1048, spurious reduction of production constr_longident -> mod_longident
## In state 1101, spurious reduction of production simple_expr -> constr_longident
## In state 1074, spurious reduction of production expr -> simple_expr
## In state 2019, spurious reduction of production separated_or_terminated_nonempty_list(SEMI,expr) -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT DOT LBRACELESS WITH
##
## Concrete syntax: UIdent . {< with
##
## Ends in an error in state: 2148.
##
## simple_expr -> mod_longident DOT LBRACELESS . separated_or_terminated_nonempty_list(SEMI,object_expr_field) GREATERRBRACE [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident DOT LBRACELESS . separated_or_terminated_nonempty_list(SEMI,object_expr_field) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## mod_longident DOT LBRACELESS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT DOT LBRACE WITH
##
## Concrete syntax: UIdent . { with
##
## Ends in an error in state: 2152.
##
## simple_expr -> mod_longident DOT LBRACE . record_expr_content RBRACE [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident DOT LBRACE . record_expr_content error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## mod_longident DOT LBRACE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT CHAR DOT LPAREN UIDENT VAL
##
## Concrete syntax: UIdent 'a' . ( UIdent val
##
## Ends in an error in state: 2158.
##
## simple_expr -> simple_expr DOT LPAREN seq_expr . RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT LPAREN seq_expr . error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT LPAREN seq_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1048, spurious reduction of production constr_longident -> mod_longident
## In state 1101, spurious reduction of production simple_expr -> constr_longident
## In state 1074, spurious reduction of production expr -> simple_expr
## In state 1095, spurious reduction of production seq_expr -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT CHAR DOT LBRACKET WITH
##
## Concrete syntax: UIdent 'a' . [ with
##
## Ends in an error in state: 2161.
##
## simple_expr -> simple_expr DOT LBRACKET . seq_expr RBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT LBRACKET . seq_expr error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT CHAR DOT LBRACKET UIDENT VAL
##
## Concrete syntax: UIdent 'a' . [ UIdent val
##
## Ends in an error in state: 2162.
##
## simple_expr -> simple_expr DOT LBRACKET seq_expr . RBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT LBRACKET seq_expr . error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT LBRACKET seq_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1048, spurious reduction of production constr_longident -> mod_longident
## In state 1101, spurious reduction of production simple_expr -> constr_longident
## In state 1074, spurious reduction of production expr -> simple_expr
## In state 1095, spurious reduction of production seq_expr -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT CHAR DOT LBRACE WITH
##
## Concrete syntax: UIdent 'a' . { with
##
## Ends in an error in state: 2165.
##
## simple_expr -> simple_expr DOT LBRACE . seq_expr RBRACE [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT LBRACE . seq_expr error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT LBRACE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT CHAR DOT LBRACE UIDENT VAL
##
## Concrete syntax: UIdent 'a' . { UIdent val
##
## Ends in an error in state: 2166.
##
## simple_expr -> simple_expr DOT LBRACE seq_expr . RBRACE [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT LBRACE seq_expr . error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT LBRACE seq_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1048, spurious reduction of production constr_longident -> mod_longident
## In state 1101, spurious reduction of production simple_expr -> constr_longident
## In state 1074, spurious reduction of production expr -> simple_expr
## In state 1095, spurious reduction of production seq_expr -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT CHAR DOT UIDENT WITH
##
## Concrete syntax: UIdent 'a' . UIdent with
##
## Ends in an error in state: 2169.
##
## mk_longident(mod_longident,LIDENT) -> mod_longident . DOT LIDENT [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## mk_longident(mod_longident,UIDENT) -> mod_longident . DOT UIDENT [ DOTOP DOT ]
## simple_expr -> simple_expr DOT mod_longident . DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident . DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident . DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident . DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident . DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident . DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT mod_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT CHAR DOT UIDENT DOTOP WITH
##
## Concrete syntax: UIdent 'a' . UIdent .+ with
##
## Ends in an error in state: 2170.
##
## simple_expr -> simple_expr DOT mod_longident DOTOP . LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident DOTOP . LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident DOTOP . LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident DOTOP . LPAREN separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident DOTOP . LBRACE separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident DOTOP . LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT mod_longident DOTOP
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT CHAR DOT UIDENT DOTOP LPAREN WITH
##
## Concrete syntax: UIdent 'a' . UIdent .+ ( with
##
## Ends in an error in state: 2171.
##
## simple_expr -> simple_expr DOT mod_longident DOTOP LPAREN . separated_or_terminated_nonempty_list(SEMI,expr) RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident DOTOP LPAREN . separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT mod_longident DOTOP LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT CHAR DOT UIDENT DOTOP LPAREN UIDENT RBRACKET
##
## Concrete syntax: UIdent 'a' . UIdent .+ ( UIdent ]
##
## Ends in an error in state: 2172.
##
## simple_expr -> simple_expr DOT mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) . RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) . error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1048, spurious reduction of production constr_longident -> mod_longident
## In state 1101, spurious reduction of production simple_expr -> constr_longident
## In state 1074, spurious reduction of production expr -> simple_expr
## In state 2019, spurious reduction of production separated_or_terminated_nonempty_list(SEMI,expr) -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT CHAR DOT UIDENT DOTOP LBRACKET WITH
##
## Concrete syntax: UIdent 'a' . UIdent .+ [ with
##
## Ends in an error in state: 2175.
##
## simple_expr -> simple_expr DOT mod_longident DOTOP LBRACKET . separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident DOTOP LBRACKET . separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT mod_longident DOTOP LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT CHAR DOT UIDENT DOTOP LBRACKET UIDENT RPAREN
##
## Concrete syntax: UIdent 'a' . UIdent .+ [ UIdent )
##
## Ends in an error in state: 2176.
##
## simple_expr -> simple_expr DOT mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) . RBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) . error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1048, spurious reduction of production constr_longident -> mod_longident
## In state 1101, spurious reduction of production simple_expr -> constr_longident
## In state 1074, spurious reduction of production expr -> simple_expr
## In state 2019, spurious reduction of production separated_or_terminated_nonempty_list(SEMI,expr) -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT CHAR DOT UIDENT DOTOP LBRACE WITH
##
## Concrete syntax: UIdent 'a' . UIdent .+ { with
##
## Ends in an error in state: 2179.
##
## simple_expr -> simple_expr DOT mod_longident DOTOP LBRACE . separated_or_terminated_nonempty_list(SEMI,expr) RBRACE [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident DOTOP LBRACE . separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT mod_longident DOTOP LBRACE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT CHAR DOT UIDENT DOTOP LBRACE UIDENT RPAREN
##
## Concrete syntax: UIdent 'a' . UIdent .+ { UIdent )
##
## Ends in an error in state: 2180.
##
## simple_expr -> simple_expr DOT mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) . RBRACE [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) . error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1048, spurious reduction of production constr_longident -> mod_longident
## In state 1101, spurious reduction of production simple_expr -> constr_longident
## In state 1074, spurious reduction of production expr -> simple_expr
## In state 2019, spurious reduction of production separated_or_terminated_nonempty_list(SEMI,expr) -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT DOTOP WITH
##
## Concrete syntax: UIdent .+ with
##
## Ends in an error in state: 2184.
##
## expr -> simple_expr DOTOP . LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> simple_expr DOTOP . LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> simple_expr DOTOP . LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOTOP . LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOTOP . LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOTOP . LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOTOP . LPAREN separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOTOP . LBRACE separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOTOP . LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOTOP
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT DOTOP LPAREN WITH
##
## Concrete syntax: UIdent .+ ( with
##
## Ends in an error in state: 2185.
##
## expr -> simple_expr DOTOP LPAREN . separated_or_terminated_nonempty_list(SEMI,expr) RPAREN LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOTOP LPAREN . separated_or_terminated_nonempty_list(SEMI,expr) RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOTOP LPAREN . separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOTOP LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT DOTOP LPAREN UIDENT RBRACKET
##
## Concrete syntax: UIdent .+ ( UIdent ]
##
## Ends in an error in state: 2186.
##
## expr -> simple_expr DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) . RPAREN LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) . RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) . error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1048, spurious reduction of production constr_longident -> mod_longident
## In state 1101, spurious reduction of production simple_expr -> constr_longident
## In state 1074, spurious reduction of production expr -> simple_expr
## In state 2019, spurious reduction of production separated_or_terminated_nonempty_list(SEMI,expr) -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT DOTOP LPAREN UIDENT RPAREN WHILE
##
## Concrete syntax: UIdent .+ ( UIdent ) while
##
## Ends in an error in state: 2188.
##
## expr -> simple_expr DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN . LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT DOTOP LPAREN UIDENT RPAREN LESSMINUS WITH
##
## Concrete syntax: UIdent .+ ( UIdent ) <- with
##
## Ends in an error in state: 2189.
##
## expr -> simple_expr DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN LESSMINUS . expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN LESSMINUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT DOTOP LPAREN UIDENT RPAREN LESSMINUS UNDERSCORE WHILE
##
## Concrete syntax: UIdent .+ ( UIdent ) <- _ while
##
## Ends in an error in state: 2190.
##
## expr -> expr . INFIXOP0 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> simple_expr DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN LESSMINUS expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN LESSMINUS expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT DOTOP LBRACKET WITH
##
## Concrete syntax: UIdent .+ [ with
##
## Ends in an error in state: 2191.
##
## expr -> simple_expr DOTOP LBRACKET . separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOTOP LBRACKET . separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOTOP LBRACKET . separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOTOP LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT DOTOP LBRACKET UIDENT RPAREN
##
## Concrete syntax: UIdent .+ [ UIdent )
##
## Ends in an error in state: 2192.
##
## expr -> simple_expr DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) . RBRACKET LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) . RBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) . error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1048, spurious reduction of production constr_longident -> mod_longident
## In state 1101, spurious reduction of production simple_expr -> constr_longident
## In state 1074, spurious reduction of production expr -> simple_expr
## In state 2019, spurious reduction of production separated_or_terminated_nonempty_list(SEMI,expr) -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT DOTOP LBRACKET UIDENT RBRACKET WHILE
##
## Concrete syntax: UIdent .+ [ UIdent ] while
##
## Ends in an error in state: 2194.
##
## expr -> simple_expr DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET . LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT DOTOP LBRACKET UIDENT RBRACKET LESSMINUS WITH
##
## Concrete syntax: UIdent .+ [ UIdent ] <- with
##
## Ends in an error in state: 2195.
##
## expr -> simple_expr DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET LESSMINUS . expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET LESSMINUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT DOTOP LBRACKET UIDENT RBRACKET LESSMINUS UNDERSCORE WHILE
##
## Concrete syntax: UIdent .+ [ UIdent ] <- _ while
##
## Ends in an error in state: 2196.
##
## expr -> expr . INFIXOP0 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> simple_expr DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET LESSMINUS expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET LESSMINUS expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT DOTOP LBRACE WITH
##
## Concrete syntax: UIdent .+ { with
##
## Ends in an error in state: 2197.
##
## expr -> simple_expr DOTOP LBRACE . separated_or_terminated_nonempty_list(SEMI,expr) RBRACE LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOTOP LBRACE . separated_or_terminated_nonempty_list(SEMI,expr) RBRACE [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOTOP LBRACE . separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOTOP LBRACE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT DOTOP LBRACE UIDENT RPAREN
##
## Concrete syntax: UIdent .+ { UIdent )
##
## Ends in an error in state: 2198.
##
## expr -> simple_expr DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) . RBRACE LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) . RBRACE [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) . error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1048, spurious reduction of production constr_longident -> mod_longident
## In state 1101, spurious reduction of production simple_expr -> constr_longident
## In state 1074, spurious reduction of production expr -> simple_expr
## In state 2019, spurious reduction of production separated_or_terminated_nonempty_list(SEMI,expr) -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT DOTOP LBRACE UIDENT RBRACE WHILE
##
## Concrete syntax: UIdent .+ { UIdent } while
##
## Ends in an error in state: 2200.
##
## expr -> simple_expr DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE . LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT DOTOP LBRACE UIDENT RBRACE LESSMINUS WITH
##
## Concrete syntax: UIdent .+ { UIdent } <- with
##
## Ends in an error in state: 2201.
##
## expr -> simple_expr DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE LESSMINUS . expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE LESSMINUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT DOTOP LBRACE UIDENT RBRACE LESSMINUS UNDERSCORE WHILE
##
## Concrete syntax: UIdent .+ { UIdent } <- _ while
##
## Ends in an error in state: 2202.
##
## expr -> expr . INFIXOP0 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> simple_expr DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE LESSMINUS expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE LESSMINUS expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FALSE DOT WITH
##
## Concrete syntax: false . with
##
## Ends in an error in state: 2203.
##
## expr -> simple_expr DOT . label_longident LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> simple_expr DOT . LPAREN seq_expr RPAREN LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> simple_expr DOT . LBRACE seq_expr RBRACE LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> simple_expr DOT . LBRACKET seq_expr RBRACKET LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> simple_expr DOT . mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> simple_expr DOT . mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> simple_expr DOT . mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT . LPAREN seq_expr RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT . LBRACE seq_expr RBRACE [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT . LBRACKET seq_expr RBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT . mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT . mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT . mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT . LPAREN seq_expr error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT . LBRACE seq_expr error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT . LBRACKET seq_expr error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT . mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT . mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT . mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT . label_longident [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FALSE DOT LPAREN WITH
##
## Concrete syntax: false . ( with
##
## Ends in an error in state: 2204.
##
## expr -> simple_expr DOT LPAREN . seq_expr RPAREN LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT LPAREN . seq_expr RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT LPAREN . seq_expr error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FALSE DOT LPAREN UIDENT VAL
##
## Concrete syntax: false . ( UIdent val
##
## Ends in an error in state: 2205.
##
## expr -> simple_expr DOT LPAREN seq_expr . RPAREN LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT LPAREN seq_expr . RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT LPAREN seq_expr . error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT LPAREN seq_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1048, spurious reduction of production constr_longident -> mod_longident
## In state 1101, spurious reduction of production simple_expr -> constr_longident
## In state 1074, spurious reduction of production expr -> simple_expr
## In state 1095, spurious reduction of production seq_expr -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FALSE DOT LPAREN UIDENT RPAREN WHILE
##
## Concrete syntax: false . ( UIdent ) while
##
## Ends in an error in state: 2206.
##
## expr -> simple_expr DOT LPAREN seq_expr RPAREN . LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT LPAREN seq_expr RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FALSE DOT LPAREN UIDENT RPAREN LESSMINUS WITH
##
## Concrete syntax: false . ( UIdent ) <- with
##
## Ends in an error in state: 2207.
##
## expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS . expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FALSE DOT LPAREN UIDENT RPAREN LESSMINUS UNDERSCORE WHILE
##
## Concrete syntax: false . ( UIdent ) <- _ while
##
## Ends in an error in state: 2208.
##
## expr -> expr . INFIXOP0 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FALSE DOT LBRACKET WITH
##
## Concrete syntax: false . [ with
##
## Ends in an error in state: 2209.
##
## expr -> simple_expr DOT LBRACKET . seq_expr RBRACKET LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT LBRACKET . seq_expr RBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT LBRACKET . seq_expr error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FALSE DOT LBRACKET UIDENT VAL
##
## Concrete syntax: false . [ UIdent val
##
## Ends in an error in state: 2210.
##
## expr -> simple_expr DOT LBRACKET seq_expr . RBRACKET LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT LBRACKET seq_expr . RBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT LBRACKET seq_expr . error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT LBRACKET seq_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1048, spurious reduction of production constr_longident -> mod_longident
## In state 1101, spurious reduction of production simple_expr -> constr_longident
## In state 1074, spurious reduction of production expr -> simple_expr
## In state 1095, spurious reduction of production seq_expr -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FALSE DOT LBRACKET UIDENT RBRACKET WHILE
##
## Concrete syntax: false . [ UIdent ] while
##
## Ends in an error in state: 2211.
##
## expr -> simple_expr DOT LBRACKET seq_expr RBRACKET . LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT LBRACKET seq_expr RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FALSE DOT LBRACKET UIDENT RBRACKET LESSMINUS WITH
##
## Concrete syntax: false . [ UIdent ] <- with
##
## Ends in an error in state: 2212.
##
## expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS . expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FALSE DOT LBRACKET UIDENT RBRACKET LESSMINUS UNDERSCORE WHILE
##
## Concrete syntax: false . [ UIdent ] <- _ while
##
## Ends in an error in state: 2213.
##
## expr -> expr . INFIXOP0 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FALSE DOT LBRACE WITH
##
## Concrete syntax: false . { with
##
## Ends in an error in state: 2214.
##
## expr -> simple_expr DOT LBRACE . seq_expr RBRACE LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT LBRACE . seq_expr RBRACE [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT LBRACE . seq_expr error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT LBRACE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FALSE DOT LBRACE UIDENT VAL
##
## Concrete syntax: false . { UIdent val
##
## Ends in an error in state: 2215.
##
## expr -> simple_expr DOT LBRACE seq_expr . RBRACE LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT LBRACE seq_expr . RBRACE [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT LBRACE seq_expr . error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT LBRACE seq_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1048, spurious reduction of production constr_longident -> mod_longident
## In state 1101, spurious reduction of production simple_expr -> constr_longident
## In state 1074, spurious reduction of production expr -> simple_expr
## In state 1095, spurious reduction of production seq_expr -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FALSE DOT LBRACE UIDENT RBRACE WHILE
##
## Concrete syntax: false . { UIdent } while
##
## Ends in an error in state: 2216.
##
## expr -> simple_expr DOT LBRACE seq_expr RBRACE . LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT LBRACE seq_expr RBRACE . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT LBRACE seq_expr RBRACE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FALSE DOT LBRACE UIDENT RBRACE LESSMINUS WITH
##
## Concrete syntax: false . { UIdent } <- with
##
## Ends in an error in state: 2217.
##
## expr -> simple_expr DOT LBRACE seq_expr RBRACE LESSMINUS . expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT LBRACE seq_expr RBRACE LESSMINUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FALSE DOT LBRACE UIDENT RBRACE LESSMINUS UNDERSCORE WHILE
##
## Concrete syntax: false . { UIdent } <- _ while
##
## Ends in an error in state: 2218.
##
## expr -> expr . INFIXOP0 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> simple_expr DOT LBRACE seq_expr RBRACE LESSMINUS expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT LBRACE seq_expr RBRACE LESSMINUS expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FALSE DOT UIDENT WITH
##
## Concrete syntax: false . UIdent with
##
## Ends in an error in state: 2219.
##
## expr -> simple_expr DOT mod_longident . DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> simple_expr DOT mod_longident . DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> simple_expr DOT mod_longident . DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## mk_longident(mod_longident,LIDENT) -> mod_longident . DOT LIDENT [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESSMINUS LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## mk_longident(mod_longident,UIDENT) -> mod_longident . DOT UIDENT [ DOTOP DOT ]
## simple_expr -> simple_expr DOT mod_longident . DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident . DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident . DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident . DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident . DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident . DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT mod_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FALSE DOT UIDENT DOTOP WITH
##
## Concrete syntax: false . UIdent .+ with
##
## Ends in an error in state: 2220.
##
## expr -> simple_expr DOT mod_longident DOTOP . LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> simple_expr DOT mod_longident DOTOP . LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> simple_expr DOT mod_longident DOTOP . LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident DOTOP . LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident DOTOP . LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident DOTOP . LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident DOTOP . LPAREN separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident DOTOP . LBRACE separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident DOTOP . LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT mod_longident DOTOP
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FALSE DOT UIDENT DOTOP LPAREN WITH
##
## Concrete syntax: false . UIdent .+ ( with
##
## Ends in an error in state: 2221.
##
## expr -> simple_expr DOT mod_longident DOTOP LPAREN . separated_or_terminated_nonempty_list(SEMI,expr) RPAREN LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident DOTOP LPAREN . separated_or_terminated_nonempty_list(SEMI,expr) RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident DOTOP LPAREN . separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT mod_longident DOTOP LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FALSE DOT UIDENT DOTOP LPAREN UIDENT RBRACKET
##
## Concrete syntax: false . UIdent .+ ( UIdent ]
##
## Ends in an error in state: 2222.
##
## expr -> simple_expr DOT mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) . RPAREN LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) . RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) . error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1048, spurious reduction of production constr_longident -> mod_longident
## In state 1101, spurious reduction of production simple_expr -> constr_longident
## In state 1074, spurious reduction of production expr -> simple_expr
## In state 2019, spurious reduction of production separated_or_terminated_nonempty_list(SEMI,expr) -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FALSE DOT UIDENT DOTOP LPAREN UIDENT RPAREN WHILE
##
## Concrete syntax: false . UIdent .+ ( UIdent ) while
##
## Ends in an error in state: 2223.
##
## expr -> simple_expr DOT mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN . LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FALSE DOT UIDENT DOTOP LPAREN UIDENT RPAREN LESSMINUS WITH
##
## Concrete syntax: false . UIdent .+ ( UIdent ) <- with
##
## Ends in an error in state: 2224.
##
## expr -> simple_expr DOT mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN LESSMINUS . expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN LESSMINUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FALSE DOT UIDENT DOTOP LPAREN UIDENT RPAREN LESSMINUS UNDERSCORE WHILE
##
## Concrete syntax: false . UIdent .+ ( UIdent ) <- _ while
##
## Ends in an error in state: 2225.
##
## expr -> expr . INFIXOP0 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> simple_expr DOT mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN LESSMINUS expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN LESSMINUS expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FALSE DOT UIDENT DOTOP LBRACKET WITH
##
## Concrete syntax: false . UIdent .+ [ with
##
## Ends in an error in state: 2226.
##
## expr -> simple_expr DOT mod_longident DOTOP LBRACKET . separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident DOTOP LBRACKET . separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident DOTOP LBRACKET . separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT mod_longident DOTOP LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FALSE DOT UIDENT DOTOP LBRACKET UIDENT RPAREN
##
## Concrete syntax: false . UIdent .+ [ UIdent )
##
## Ends in an error in state: 2227.
##
## expr -> simple_expr DOT mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) . RBRACKET LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) . RBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) . error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1048, spurious reduction of production constr_longident -> mod_longident
## In state 1101, spurious reduction of production simple_expr -> constr_longident
## In state 1074, spurious reduction of production expr -> simple_expr
## In state 2019, spurious reduction of production separated_or_terminated_nonempty_list(SEMI,expr) -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FALSE DOT UIDENT DOTOP LBRACKET UIDENT RBRACKET WHILE
##
## Concrete syntax: false . UIdent .+ [ UIdent ] while
##
## Ends in an error in state: 2228.
##
## expr -> simple_expr DOT mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET . LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FALSE DOT UIDENT DOTOP LBRACKET UIDENT RBRACKET LESSMINUS WITH
##
## Concrete syntax: false . UIdent .+ [ UIdent ] <- with
##
## Ends in an error in state: 2229.
##
## expr -> simple_expr DOT mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET LESSMINUS . expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET LESSMINUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FALSE DOT UIDENT DOTOP LBRACKET UIDENT RBRACKET LESSMINUS UNDERSCORE WHILE
##
## Concrete syntax: false . UIdent .+ [ UIdent ] <- _ while
##
## Ends in an error in state: 2230.
##
## expr -> expr . INFIXOP0 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> simple_expr DOT mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET LESSMINUS expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET LESSMINUS expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FALSE DOT UIDENT DOTOP LBRACE WITH
##
## Concrete syntax: false . UIdent .+ { with
##
## Ends in an error in state: 2231.
##
## expr -> simple_expr DOT mod_longident DOTOP LBRACE . separated_or_terminated_nonempty_list(SEMI,expr) RBRACE LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident DOTOP LBRACE . separated_or_terminated_nonempty_list(SEMI,expr) RBRACE [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident DOTOP LBRACE . separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT mod_longident DOTOP LBRACE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FALSE DOT UIDENT DOTOP LBRACE UIDENT RPAREN
##
## Concrete syntax: false . UIdent .+ { UIdent )
##
## Ends in an error in state: 2232.
##
## expr -> simple_expr DOT mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) . RBRACE LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) . RBRACE [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) . error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1048, spurious reduction of production constr_longident -> mod_longident
## In state 1101, spurious reduction of production simple_expr -> constr_longident
## In state 1074, spurious reduction of production expr -> simple_expr
## In state 2019, spurious reduction of production separated_or_terminated_nonempty_list(SEMI,expr) -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FALSE DOT UIDENT DOTOP LBRACE UIDENT RBRACE WHILE
##
## Concrete syntax: false . UIdent .+ { UIdent } while
##
## Ends in an error in state: 2233.
##
## expr -> simple_expr DOT mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE . LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FALSE DOT UIDENT DOTOP LBRACE UIDENT RBRACE LESSMINUS WITH
##
## Concrete syntax: false . UIdent .+ { UIdent } <- with
##
## Ends in an error in state: 2234.
##
## expr -> simple_expr DOT mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE LESSMINUS . expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE LESSMINUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FALSE DOT UIDENT DOTOP LBRACE UIDENT RBRACE LESSMINUS UNDERSCORE WHILE
##
## Concrete syntax: false . UIdent .+ { UIdent } <- _ while
##
## Ends in an error in state: 2235.
##
## expr -> expr . INFIXOP0 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> simple_expr DOT mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE LESSMINUS expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE LESSMINUS expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FALSE DOT LIDENT WHILE
##
## Concrete syntax: false . lident while
##
## Ends in an error in state: 2236.
##
## expr -> simple_expr DOT label_longident . LESSMINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOT label_longident . [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT label_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FALSE DOT LIDENT LESSMINUS WITH
##
## Concrete syntax: false . lident <- with
##
## Ends in an error in state: 2237.
##
## expr -> simple_expr DOT label_longident LESSMINUS . expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT label_longident LESSMINUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FALSE DOT LIDENT LESSMINUS UNDERSCORE WHILE
##
## Concrete syntax: false . lident <- _ while
##
## Ends in an error in state: 2238.
##
## expr -> expr . INFIXOP0 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> simple_expr DOT label_longident LESSMINUS expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOT label_longident LESSMINUS expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT QUESTION LIDENT WHILE
##
## Concrete syntax: UIdent ? lident while
##
## Ends in an error in state: 2239.
##
## expr -> simple_expr reversed_nonempty_llist(labeled_simple_expr) . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## reversed_nonempty_llist(labeled_simple_expr) -> reversed_nonempty_llist(labeled_simple_expr) . labeled_simple_expr [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr reversed_nonempty_llist(labeled_simple_expr)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FOR FALSE EQUAL UIDENT VAL
##
## Concrete syntax: [ for false = UIdent val
##
## Ends in an error in state: 2241.
##
## expr -> FOR ext list(attribute) pattern EQUAL seq_expr . direction_flag seq_expr DO seq_expr DONE [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## FOR ext list(attribute) pattern EQUAL seq_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 943, spurious reduction of production constr_longident -> mod_longident
## In state 1178, spurious reduction of production simple_expr -> constr_longident
## In state 1032, spurious reduction of production expr -> simple_expr
## In state 1172, spurious reduction of production seq_expr -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FOR FALSE EQUAL UIDENT DOWNTO WITH
##
## Concrete syntax: [ for false = UIdent downto with
##
## Ends in an error in state: 2244.
##
## expr -> FOR ext list(attribute) pattern EQUAL seq_expr direction_flag . seq_expr DO seq_expr DONE [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## FOR ext list(attribute) pattern EQUAL seq_expr direction_flag
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FOR FALSE EQUAL UIDENT DOWNTO UIDENT VAL
##
## Concrete syntax: [ for false = UIdent downto UIdent val
##
## Ends in an error in state: 2245.
##
## expr -> FOR ext list(attribute) pattern EQUAL seq_expr direction_flag seq_expr . DO seq_expr DONE [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## FOR ext list(attribute) pattern EQUAL seq_expr direction_flag seq_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 943, spurious reduction of production constr_longident -> mod_longident
## In state 1178, spurious reduction of production simple_expr -> constr_longident
## In state 1032, spurious reduction of production expr -> simple_expr
## In state 1172, spurious reduction of production seq_expr -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FOR FALSE EQUAL UIDENT DOWNTO UIDENT DO WITH
##
## Concrete syntax: [ for false = UIdent downto UIdent do with
##
## Ends in an error in state: 2246.
##
## expr -> FOR ext list(attribute) pattern EQUAL seq_expr direction_flag seq_expr DO . seq_expr DONE [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## FOR ext list(attribute) pattern EQUAL seq_expr direction_flag seq_expr DO
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FOR FALSE EQUAL UIDENT DOWNTO UIDENT DO UIDENT VAL
##
## Concrete syntax: [ for false = UIdent downto UIdent do UIdent val
##
## Ends in an error in state: 2247.
##
## expr -> FOR ext list(attribute) pattern EQUAL seq_expr direction_flag seq_expr DO seq_expr . DONE [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## FOR ext list(attribute) pattern EQUAL seq_expr direction_flag seq_expr DO seq_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 943, spurious reduction of production constr_longident -> mod_longident
## In state 1178, spurious reduction of production simple_expr -> constr_longident
## In state 1032, spurious reduction of production expr -> simple_expr
## In state 1172, spurious reduction of production seq_expr -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FUN FALSE LPAREN WITH
##
## Concrete syntax: [ fun false ( with
##
## Ends in an error in state: 2250.
##
## constr_extra_nonprefix_ident -> LPAREN . RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE COLON CHAR BACKQUOTE ]
## constr_longident -> LPAREN . COLONCOLON RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE COLON CHAR BACKQUOTE ]
## fun_def -> LPAREN . TYPE nonempty_list(mkrhs(LIDENT)) RPAREN fun_def [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_pattern_not_ident -> LPAREN . pattern RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE COLON CHAR BACKQUOTE ]
## simple_pattern_not_ident -> LPAREN . MODULE ext list(attribute) module_name RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE COLON CHAR BACKQUOTE ]
## simple_pattern_not_ident -> LPAREN . MODULE ext list(attribute) module_name COLON module_type RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE COLON CHAR BACKQUOTE ]
## simple_pattern_not_ident -> LPAREN . pattern error [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE COLON CHAR BACKQUOTE ]
## simple_pattern_not_ident -> LPAREN . pattern COLON core_type RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE COLON CHAR BACKQUOTE ]
## simple_pattern_not_ident -> LPAREN . pattern COLON core_type error [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE COLON CHAR BACKQUOTE ]
## simple_pattern_not_ident -> LPAREN . pattern COLON error [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE COLON CHAR BACKQUOTE ]
## simple_pattern_not_ident -> LPAREN . MODULE ext list(attribute) module_name COLON module_type error [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE COLON CHAR BACKQUOTE ]
## val_extra_ident -> LPAREN . operator RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE COLON CHAR BACKQUOTE ]
## val_extra_ident -> LPAREN . operator error [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE COLON CHAR BACKQUOTE ]
## val_extra_ident -> LPAREN . error [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE COLON CHAR BACKQUOTE ]
## val_extra_ident -> LPAREN . MODULE error [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE COLON CHAR BACKQUOTE ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FUN FALSE LPAREN TYPE WITH
##
## Concrete syntax: [ fun false ( type with
##
## Ends in an error in state: 2251.
##
## fun_def -> LPAREN TYPE . nonempty_list(mkrhs(LIDENT)) RPAREN fun_def [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LPAREN TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FUN FALSE LPAREN TYPE LIDENT DOT
##
## Concrete syntax: [ fun false ( type lident .
##
## Ends in an error in state: 2252.
##
## fun_def -> LPAREN TYPE nonempty_list(mkrhs(LIDENT)) . RPAREN fun_def [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LPAREN TYPE nonempty_list(mkrhs(LIDENT))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 750, spurious reduction of production nonempty_list(mkrhs(LIDENT)) -> LIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FUN FALSE LPAREN TYPE LIDENT RPAREN WITH
##
## Concrete syntax: [ fun false ( type lident ) with
##
## Ends in an error in state: 2253.
##
## fun_def -> LPAREN TYPE nonempty_list(mkrhs(LIDENT)) RPAREN . fun_def [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LPAREN TYPE nonempty_list(mkrhs(LIDENT)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FUN FALSE COLON WITH
##
## Concrete syntax: [ fun false : with
##
## Ends in an error in state: 2254.
##
## fun_def -> COLON . atomic_type MINUSGREATER seq_expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FUN FALSE COLON QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: [ fun false : {%hello|world|} while
##
## Ends in an error in state: 2255.
##
## atomic_type -> atomic_type . type_longident [ UIDENT MINUSGREATER LIDENT HASH ]
## atomic_type -> atomic_type . HASH clty_longident [ UIDENT MINUSGREATER LIDENT HASH ]
## fun_def -> COLON atomic_type . MINUSGREATER seq_expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## COLON atomic_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FUN FALSE COLON QUOTED_STRING_EXPR MINUSGREATER WITH
##
## Concrete syntax: [ fun false : {%hello|world|} -> with
##
## Ends in an error in state: 2256.
##
## fun_def -> COLON atomic_type MINUSGREATER . seq_expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## COLON atomic_type MINUSGREATER
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FUN FALSE FALSE WHILE
##
## Concrete syntax: [ fun false false while
##
## Ends in an error in state: 2258.
##
## fun_def -> labeled_simple_pattern . fun_def [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## labeled_simple_pattern
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FUN FALSE WHILE
##
## Concrete syntax: [ fun false while
##
## Ends in an error in state: 2262.
##
## expr -> FUN ext list(attribute) labeled_simple_pattern . fun_def [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## FUN ext list(attribute) labeled_simple_pattern
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT CHAR DOTOP LPAREN UIDENT RBRACKET
##
## Concrete syntax: UIdent 'a' .+ ( UIdent ]
##
## Ends in an error in state: 2264.
##
## simple_expr -> simple_expr DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) . RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) . error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1048, spurious reduction of production constr_longident -> mod_longident
## In state 1101, spurious reduction of production simple_expr -> constr_longident
## In state 1074, spurious reduction of production expr -> simple_expr
## In state 2019, spurious reduction of production separated_or_terminated_nonempty_list(SEMI,expr) -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT CHAR DOTOP LBRACKET WITH
##
## Concrete syntax: UIdent 'a' .+ [ with
##
## Ends in an error in state: 2266.
##
## simple_expr -> simple_expr DOTOP LBRACKET . separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOTOP LBRACKET . separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOTOP LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT CHAR DOTOP LBRACKET UIDENT RPAREN
##
## Concrete syntax: UIdent 'a' .+ [ UIdent )
##
## Ends in an error in state: 2267.
##
## simple_expr -> simple_expr DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) . RBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) . error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1048, spurious reduction of production constr_longident -> mod_longident
## In state 1101, spurious reduction of production simple_expr -> constr_longident
## In state 1074, spurious reduction of production expr -> simple_expr
## In state 2019, spurious reduction of production separated_or_terminated_nonempty_list(SEMI,expr) -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT CHAR DOTOP LBRACE WITH
##
## Concrete syntax: UIdent 'a' .+ { with
##
## Ends in an error in state: 2269.
##
## simple_expr -> simple_expr DOTOP LBRACE . separated_or_terminated_nonempty_list(SEMI,expr) RBRACE [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOTOP LBRACE . separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOTOP LBRACE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT CHAR DOTOP LBRACE UIDENT RPAREN
##
## Concrete syntax: UIdent 'a' .+ { UIdent )
##
## Ends in an error in state: 2270.
##
## simple_expr -> simple_expr DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) . RBRACE [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) . error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## simple_expr DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1048, spurious reduction of production constr_longident -> mod_longident
## In state 1101, spurious reduction of production simple_expr -> constr_longident
## In state 1074, spurious reduction of production expr -> simple_expr
## In state 2019, spurious reduction of production separated_or_terminated_nonempty_list(SEMI,expr) -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FOR FALSE EQUAL UIDENT VAL
##
## Concrete syntax: for false = UIdent val
##
## Ends in an error in state: 2272.
##
## expr -> FOR ext list(attribute) pattern EQUAL seq_expr . direction_flag seq_expr DO seq_expr DONE [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## FOR ext list(attribute) pattern EQUAL seq_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 943, spurious reduction of production constr_longident -> mod_longident
## In state 1178, spurious reduction of production simple_expr -> constr_longident
## In state 1032, spurious reduction of production expr -> simple_expr
## In state 1172, spurious reduction of production seq_expr -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FOR FALSE EQUAL UIDENT DOWNTO WITH
##
## Concrete syntax: for false = UIdent downto with
##
## Ends in an error in state: 2273.
##
## expr -> FOR ext list(attribute) pattern EQUAL seq_expr direction_flag . seq_expr DO seq_expr DONE [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## FOR ext list(attribute) pattern EQUAL seq_expr direction_flag
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FOR FALSE EQUAL UIDENT DOWNTO UIDENT VAL
##
## Concrete syntax: for false = UIdent downto UIdent val
##
## Ends in an error in state: 2274.
##
## expr -> FOR ext list(attribute) pattern EQUAL seq_expr direction_flag seq_expr . DO seq_expr DONE [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## FOR ext list(attribute) pattern EQUAL seq_expr direction_flag seq_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 943, spurious reduction of production constr_longident -> mod_longident
## In state 1178, spurious reduction of production simple_expr -> constr_longident
## In state 1032, spurious reduction of production expr -> simple_expr
## In state 1172, spurious reduction of production seq_expr -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FOR FALSE EQUAL UIDENT DOWNTO UIDENT DO WITH
##
## Concrete syntax: for false = UIdent downto UIdent do with
##
## Ends in an error in state: 2275.
##
## expr -> FOR ext list(attribute) pattern EQUAL seq_expr direction_flag seq_expr DO . seq_expr DONE [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## FOR ext list(attribute) pattern EQUAL seq_expr direction_flag seq_expr DO
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FOR FALSE EQUAL UIDENT DOWNTO UIDENT DO UIDENT VAL
##
## Concrete syntax: for false = UIdent downto UIdent do UIdent val
##
## Ends in an error in state: 2276.
##
## expr -> FOR ext list(attribute) pattern EQUAL seq_expr direction_flag seq_expr DO seq_expr . DONE [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## FOR ext list(attribute) pattern EQUAL seq_expr direction_flag seq_expr DO seq_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 943, spurious reduction of production constr_longident -> mod_longident
## In state 1178, spurious reduction of production simple_expr -> constr_longident
## In state 1032, spurious reduction of production expr -> simple_expr
## In state 1172, spurious reduction of production seq_expr -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FUN FALSE LPAREN WITH
##
## Concrete syntax: fun false ( with
##
## Ends in an error in state: 2279.
##
## constr_extra_nonprefix_ident -> LPAREN . RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE COLON CHAR BACKQUOTE ]
## constr_longident -> LPAREN . COLONCOLON RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE COLON CHAR BACKQUOTE ]
## fun_def -> LPAREN . TYPE nonempty_list(mkrhs(LIDENT)) RPAREN fun_def [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_pattern_not_ident -> LPAREN . pattern RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE COLON CHAR BACKQUOTE ]
## simple_pattern_not_ident -> LPAREN . MODULE ext list(attribute) module_name RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE COLON CHAR BACKQUOTE ]
## simple_pattern_not_ident -> LPAREN . MODULE ext list(attribute) module_name COLON module_type RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE COLON CHAR BACKQUOTE ]
## simple_pattern_not_ident -> LPAREN . pattern error [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE COLON CHAR BACKQUOTE ]
## simple_pattern_not_ident -> LPAREN . pattern COLON core_type RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE COLON CHAR BACKQUOTE ]
## simple_pattern_not_ident -> LPAREN . pattern COLON core_type error [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE COLON CHAR BACKQUOTE ]
## simple_pattern_not_ident -> LPAREN . pattern COLON error [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE COLON CHAR BACKQUOTE ]
## simple_pattern_not_ident -> LPAREN . MODULE ext list(attribute) module_name COLON module_type error [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE COLON CHAR BACKQUOTE ]
## val_extra_ident -> LPAREN . operator RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE COLON CHAR BACKQUOTE ]
## val_extra_ident -> LPAREN . operator error [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE COLON CHAR BACKQUOTE ]
## val_extra_ident -> LPAREN . error [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE COLON CHAR BACKQUOTE ]
## val_extra_ident -> LPAREN . MODULE error [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE COLON CHAR BACKQUOTE ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FUN FALSE LPAREN TYPE WITH
##
## Concrete syntax: fun false ( type with
##
## Ends in an error in state: 2280.
##
## fun_def -> LPAREN TYPE . nonempty_list(mkrhs(LIDENT)) RPAREN fun_def [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LPAREN TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FUN FALSE LPAREN TYPE LIDENT DOT
##
## Concrete syntax: fun false ( type lident .
##
## Ends in an error in state: 2281.
##
## fun_def -> LPAREN TYPE nonempty_list(mkrhs(LIDENT)) . RPAREN fun_def [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LPAREN TYPE nonempty_list(mkrhs(LIDENT))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 750, spurious reduction of production nonempty_list(mkrhs(LIDENT)) -> LIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FUN FALSE LPAREN TYPE LIDENT RPAREN WITH
##
## Concrete syntax: fun false ( type lident ) with
##
## Ends in an error in state: 2282.
##
## fun_def -> LPAREN TYPE nonempty_list(mkrhs(LIDENT)) RPAREN . fun_def [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LPAREN TYPE nonempty_list(mkrhs(LIDENT)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FUN FALSE COLON WITH
##
## Concrete syntax: fun false : with
##
## Ends in an error in state: 2283.
##
## fun_def -> COLON . atomic_type MINUSGREATER seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FUN FALSE COLON QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: fun false : {%hello|world|} while
##
## Ends in an error in state: 2284.
##
## atomic_type -> atomic_type . type_longident [ UIDENT MINUSGREATER LIDENT HASH ]
## atomic_type -> atomic_type . HASH clty_longident [ UIDENT MINUSGREATER LIDENT HASH ]
## fun_def -> COLON atomic_type . MINUSGREATER seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## COLON atomic_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FUN FALSE COLON QUOTED_STRING_EXPR MINUSGREATER WITH
##
## Concrete syntax: fun false : {%hello|world|} -> with
##
## Ends in an error in state: 2285.
##
## fun_def -> COLON atomic_type MINUSGREATER . seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## COLON atomic_type MINUSGREATER
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FUN FALSE FALSE WHILE
##
## Concrete syntax: fun false false while
##
## Ends in an error in state: 2287.
##
## fun_def -> labeled_simple_pattern . fun_def [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## labeled_simple_pattern
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FUN FALSE WHILE
##
## Concrete syntax: fun false while
##
## Ends in an error in state: 2291.
##
## expr -> FUN ext list(attribute) labeled_simple_pattern . fun_def [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## FUN ext list(attribute) labeled_simple_pattern
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FUNCTION FALSE WHEN UIDENT VAL
##
## Concrete syntax: function false when UIdent val
##
## Ends in an error in state: 2293.
##
## match_case -> pattern WHEN seq_expr . MINUSGREATER seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## pattern WHEN seq_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 943, spurious reduction of production constr_longident -> mod_longident
## In state 1178, spurious reduction of production simple_expr -> constr_longident
## In state 1032, spurious reduction of production expr -> simple_expr
## In state 1172, spurious reduction of production seq_expr -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FUNCTION FALSE WHEN UIDENT MINUSGREATER WITH
##
## Concrete syntax: function false when UIdent -> with
##
## Ends in an error in state: 2294.
##
## match_case -> pattern WHEN seq_expr MINUSGREATER . seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## pattern WHEN seq_expr MINUSGREATER
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FUNCTION FALSE MINUSGREATER WITH
##
## Concrete syntax: function false -> with
##
## Ends in an error in state: 2296.
##
## match_case -> pattern MINUSGREATER . seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## match_case -> pattern MINUSGREATER . DOT [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## pattern MINUSGREATER
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FUNCTION FALSE MINUSGREATER DOT WHILE
##
## Concrete syntax: function false -> . while
##
## Ends in an error in state: 2300.
##
## expr -> FUNCTION ext list(attribute) reversed_preceded_or_separated_nonempty_llist(BAR,match_case) . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## reversed_preceded_or_separated_nonempty_llist(BAR,match_case) -> reversed_preceded_or_separated_nonempty_llist(BAR,match_case) . BAR match_case [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## FUNCTION ext list(attribute) reversed_preceded_or_separated_nonempty_llist(BAR,match_case)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FUNCTION FALSE MINUSGREATER UIDENT BAR WITH
##
## Concrete syntax: function false -> UIdent | with
##
## Ends in an error in state: 2301.
##
## reversed_preceded_or_separated_nonempty_llist(BAR,match_case) -> reversed_preceded_or_separated_nonempty_llist(BAR,match_case) BAR . match_case [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## reversed_preceded_or_separated_nonempty_llist(BAR,match_case) BAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: IF UIDENT VAL
##
## Concrete syntax: if UIdent val
##
## Ends in an error in state: 2304.
##
## expr -> IF ext list(attribute) seq_expr . THEN expr ELSE expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> IF ext list(attribute) seq_expr . THEN expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## IF ext list(attribute) seq_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 943, spurious reduction of production constr_longident -> mod_longident
## In state 1178, spurious reduction of production simple_expr -> constr_longident
## In state 1032, spurious reduction of production expr -> simple_expr
## In state 1172, spurious reduction of production seq_expr -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: IF UIDENT THEN WITH
##
## Concrete syntax: if UIdent then with
##
## Ends in an error in state: 2305.
##
## expr -> IF ext list(attribute) seq_expr THEN . expr ELSE expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> IF ext list(attribute) seq_expr THEN . expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## IF ext list(attribute) seq_expr THEN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: IF UIDENT THEN UNDERSCORE WHILE
##
## Concrete syntax: if UIdent then _ while
##
## Ends in an error in state: 2306.
##
## expr -> IF ext list(attribute) seq_expr THEN expr . ELSE expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> IF ext list(attribute) seq_expr THEN expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP0 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## IF ext list(attribute) seq_expr THEN expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: IF UIDENT THEN UIDENT ELSE WITH
##
## Concrete syntax: if UIdent then UIdent else with
##
## Ends in an error in state: 2307.
##
## expr -> IF ext list(attribute) seq_expr THEN expr ELSE . expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## IF ext list(attribute) seq_expr THEN expr ELSE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: IF UIDENT THEN UIDENT ELSE UNDERSCORE WHILE
##
## Concrete syntax: if UIdent then UIdent else _ while
##
## Ends in an error in state: 2308.
##
## expr -> IF ext list(attribute) seq_expr THEN expr ELSE expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP0 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## IF ext list(attribute) seq_expr THEN expr ELSE expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LETOP FALSE QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: let* false {%hello|world|} while
##
## Ends in an error in state: 2310.
##
## letop_binding_body -> pattern_no_exn . EQUAL seq_expr [ IN ANDOP ]
## pattern_comma_list(pattern_no_exn) -> pattern_no_exn . COMMA pattern [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern_comma_list(pattern_no_exn) -> pattern_no_exn . COMMA error [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern_no_exn -> pattern_no_exn . COLONCOLON pattern [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern_no_exn -> pattern_no_exn . attribute [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern_no_exn -> pattern_no_exn . AS val_ident [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern_no_exn -> pattern_no_exn . AS error [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern_no_exn -> pattern_no_exn . COLONCOLON error [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern_no_exn -> pattern_no_exn . BAR pattern [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern_no_exn -> pattern_no_exn . BAR error [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
##
## The known suffix of the stack is as follows:
## pattern_no_exn
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LETOP FALSE EQUAL WITH
##
## Concrete syntax: let* false = with
##
## Ends in an error in state: 2311.
##
## letop_binding_body -> pattern_no_exn EQUAL . seq_expr [ IN ANDOP ]
##
## The known suffix of the stack is as follows:
## pattern_no_exn EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET LETOP LIDENT EQUAL UIDENT VAL
##
## Concrete syntax: [ let* lident = UIdent val
##
## Ends in an error in state: 2313.
##
## expr -> LETOP letop_bindings . IN seq_expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## letop_bindings -> letop_bindings . ANDOP letop_binding_body [ IN ANDOP ]
##
## The known suffix of the stack is as follows:
## LETOP letop_bindings
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 943, spurious reduction of production constr_longident -> mod_longident
## In state 1178, spurious reduction of production simple_expr -> constr_longident
## In state 1032, spurious reduction of production expr -> simple_expr
## In state 1172, spurious reduction of production seq_expr -> expr
## In state 1160, spurious reduction of production strict_binding -> EQUAL seq_expr
## In state 2397, spurious reduction of production letop_binding_body -> val_ident strict_binding
## In state 2318, spurious reduction of production letop_bindings -> letop_binding_body
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET LETOP LIDENT IN WITH
##
## Concrete syntax: [ let* lident in with
##
## Ends in an error in state: 2314.
##
## expr -> LETOP letop_bindings IN . seq_expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LETOP letop_bindings IN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LETOP LIDENT ANDOP WITH
##
## Concrete syntax: let* lident and* with
##
## Ends in an error in state: 2316.
##
## letop_bindings -> letop_bindings ANDOP . letop_binding_body [ IN ANDOP ]
##
## The known suffix of the stack is as follows:
## letop_bindings ANDOP
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT DOT LPAREN UIDENT VAL
##
## Concrete syntax: UIdent . ( UIdent val
##
## Ends in an error in state: 2319.
##
## simple_expr -> mod_longident DOT LPAREN seq_expr . RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> mod_longident DOT LPAREN seq_expr . error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## mod_longident DOT LPAREN seq_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1048, spurious reduction of production constr_longident -> mod_longident
## In state 1101, spurious reduction of production simple_expr -> constr_longident
## In state 1074, spurious reduction of production expr -> simple_expr
## In state 1095, spurious reduction of production seq_expr -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LAZY CHAR UIDENT
##
## Concrete syntax: lazy 'a' UIdent
##
## Ends in an error in state: 2322.
##
## expr -> LAZY ext list(attribute) simple_expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LPAREN seq_expr RPAREN [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LBRACE seq_expr RBRACE [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LBRACKET seq_expr RBRACKET [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LPAREN seq_expr error [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LBRACE seq_expr error [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LBRACKET seq_expr error [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) error [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT label_longident [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . HASH LIDENT [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . HASHOP simple_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LAZY ext list(attribute) simple_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FUNCTION FALSE WHEN UIDENT VAL
##
## Concrete syntax: [ function false when UIdent val
##
## Ends in an error in state: 2323.
##
## match_case -> pattern WHEN seq_expr . MINUSGREATER seq_expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## pattern WHEN seq_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 943, spurious reduction of production constr_longident -> mod_longident
## In state 1178, spurious reduction of production simple_expr -> constr_longident
## In state 1032, spurious reduction of production expr -> simple_expr
## In state 1172, spurious reduction of production seq_expr -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FUNCTION FALSE WHEN UIDENT MINUSGREATER WITH
##
## Concrete syntax: [ function false when UIdent -> with
##
## Ends in an error in state: 2324.
##
## match_case -> pattern WHEN seq_expr MINUSGREATER . seq_expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## pattern WHEN seq_expr MINUSGREATER
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FUNCTION FALSE MINUSGREATER WITH
##
## Concrete syntax: [ function false -> with
##
## Ends in an error in state: 2326.
##
## match_case -> pattern MINUSGREATER . seq_expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## match_case -> pattern MINUSGREATER . DOT [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## pattern MINUSGREATER
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FUNCTION FALSE MINUSGREATER DOT WITH
##
## Concrete syntax: [ function false -> . with
##
## Ends in an error in state: 2330.
##
## expr -> FUNCTION ext list(attribute) reversed_preceded_or_separated_nonempty_llist(BAR,match_case) . [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## reversed_preceded_or_separated_nonempty_llist(BAR,match_case) -> reversed_preceded_or_separated_nonempty_llist(BAR,match_case) . BAR match_case [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## FUNCTION ext list(attribute) reversed_preceded_or_separated_nonempty_llist(BAR,match_case)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET FUNCTION FALSE MINUSGREATER UIDENT BAR WITH
##
## Concrete syntax: [ function false -> UIdent | with
##
## Ends in an error in state: 2331.
##
## reversed_preceded_or_separated_nonempty_llist(BAR,match_case) -> reversed_preceded_or_separated_nonempty_llist(BAR,match_case) BAR . match_case [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## reversed_preceded_or_separated_nonempty_llist(BAR,match_case) BAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: BEGIN UIDENT VAL
##
## Concrete syntax: begin UIdent val
##
## Ends in an error in state: 2335.
##
## simple_expr -> BEGIN ext list(attribute) seq_expr . END [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> BEGIN ext list(attribute) seq_expr . error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## BEGIN ext list(attribute) seq_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1048, spurious reduction of production constr_longident -> mod_longident
## In state 1101, spurious reduction of production simple_expr -> constr_longident
## In state 1074, spurious reduction of production expr -> simple_expr
## In state 1095, spurious reduction of production seq_expr -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET IF UIDENT VAL
##
## Concrete syntax: [ if UIdent val
##
## Ends in an error in state: 2341.
##
## expr -> IF ext list(attribute) seq_expr . THEN expr ELSE expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> IF ext list(attribute) seq_expr . THEN expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## IF ext list(attribute) seq_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 943, spurious reduction of production constr_longident -> mod_longident
## In state 1178, spurious reduction of production simple_expr -> constr_longident
## In state 1032, spurious reduction of production expr -> simple_expr
## In state 1172, spurious reduction of production seq_expr -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET IF UIDENT THEN WITH
##
## Concrete syntax: [ if UIdent then with
##
## Ends in an error in state: 2342.
##
## expr -> IF ext list(attribute) seq_expr THEN . expr ELSE expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> IF ext list(attribute) seq_expr THEN . expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## IF ext list(attribute) seq_expr THEN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET IF UIDENT THEN UNDERSCORE WITH
##
## Concrete syntax: [ if UIdent then _ with
##
## Ends in an error in state: 2343.
##
## expr -> IF ext list(attribute) seq_expr THEN expr . ELSE expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> IF ext list(attribute) seq_expr THEN expr . [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP0 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## IF ext list(attribute) seq_expr THEN expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET IF UIDENT THEN UIDENT ELSE WITH
##
## Concrete syntax: [ if UIdent then UIdent else with
##
## Ends in an error in state: 2344.
##
## expr -> IF ext list(attribute) seq_expr THEN expr ELSE . expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## IF ext list(attribute) seq_expr THEN expr ELSE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET IF UIDENT THEN UIDENT ELSE UNDERSCORE WITH
##
## Concrete syntax: [ if UIdent then UIdent else _ with
##
## Ends in an error in state: 2345.
##
## expr -> IF ext list(attribute) seq_expr THEN expr ELSE expr . [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP0 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## IF ext list(attribute) seq_expr THEN expr ELSE expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET BEGIN UIDENT VAL
##
## Concrete syntax: [ begin UIdent val
##
## Ends in an error in state: 2347.
##
## simple_expr -> BEGIN ext list(attribute) seq_expr . END [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> BEGIN ext list(attribute) seq_expr . error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## BEGIN ext list(attribute) seq_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1048, spurious reduction of production constr_longident -> mod_longident
## In state 1101, spurious reduction of production simple_expr -> constr_longident
## In state 1074, spurious reduction of production expr -> simple_expr
## In state 1095, spurious reduction of production seq_expr -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET LAZY CHAR UIDENT
##
## Concrete syntax: [ lazy 'a' UIdent
##
## Ends in an error in state: 2350.
##
## expr -> LAZY ext list(attribute) simple_expr . [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LPAREN seq_expr RPAREN [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LBRACE seq_expr RBRACE [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LBRACKET seq_expr RBRACKET [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) RPAREN [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) RBRACE [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) RBRACKET [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LPAREN seq_expr error [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LBRACE seq_expr error [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT LBRACKET seq_expr error [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LPAREN separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACE separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT mod_longident DOTOP LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) error [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . DOT label_longident [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . HASH LIDENT [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## simple_expr -> simple_expr . HASHOP simple_expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LAZY ext list(attribute) simple_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET UIDENT RPAREN
##
## Concrete syntax: [ UIdent )
##
## Ends in an error in state: 2351.
##
## simple_expr -> LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) . RBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) . error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LBRACKET separated_or_terminated_nonempty_list(SEMI,expr)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1048, spurious reduction of production constr_longident -> mod_longident
## In state 1101, spurious reduction of production simple_expr -> constr_longident
## In state 1074, spurious reduction of production expr -> simple_expr
## In state 2019, spurious reduction of production separated_or_terminated_nonempty_list(SEMI,expr) -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACELESS LIDENT EQUAL UIDENT VAL
##
## Concrete syntax: {< lident = UIdent val
##
## Ends in an error in state: 2357.
##
## expr -> expr . INFIXOP0 expr [ error STAR SEMI RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ error STAR SEMI RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ error STAR SEMI RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ error STAR SEMI RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ error STAR SEMI RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ error STAR SEMI RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ error STAR SEMI RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ error STAR SEMI RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ error STAR SEMI RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ error STAR SEMI RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ error STAR SEMI RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ error STAR SEMI RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ error STAR SEMI RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ error STAR SEMI RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ error STAR SEMI RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ error STAR SEMI RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ error STAR SEMI RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ error STAR SEMI RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ error STAR SEMI RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ error STAR SEMI RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ error STAR SEMI RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ error STAR SEMI RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
## option(preceded(EQUAL,expr)) -> EQUAL expr . [ error SEMI RBRACE GREATERRBRACE ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ error STAR SEMI RBRACE PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## EQUAL expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1048, spurious reduction of production constr_longident -> mod_longident
## In state 1101, spurious reduction of production simple_expr -> constr_longident
## In state 1074, spurious reduction of production expr -> simple_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACELESS LIDENT EQUAL UIDENT RBRACE
##
## Concrete syntax: {< lident = UIdent }
##
## Ends in an error in state: 2358.
##
## separated_or_terminated_nonempty_list(SEMI,object_expr_field) -> LIDENT option(preceded(EQUAL,expr)) . [ error GREATERRBRACE ]
## separated_or_terminated_nonempty_list(SEMI,object_expr_field) -> LIDENT option(preceded(EQUAL,expr)) . SEMI [ error GREATERRBRACE ]
## separated_or_terminated_nonempty_list(SEMI,object_expr_field) -> LIDENT option(preceded(EQUAL,expr)) . SEMI separated_or_terminated_nonempty_list(SEMI,object_expr_field) [ error GREATERRBRACE ]
##
## The known suffix of the stack is as follows:
## LIDENT option(preceded(EQUAL,expr))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1048, spurious reduction of production constr_longident -> mod_longident
## In state 1101, spurious reduction of production simple_expr -> constr_longident
## In state 1074, spurious reduction of production expr -> simple_expr
## In state 2357, spurious reduction of production option(preceded(EQUAL,expr)) -> EQUAL expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACELESS LIDENT SEMI WITH
##
## Concrete syntax: {< lident ; with
##
## Ends in an error in state: 2359.
##
## separated_or_terminated_nonempty_list(SEMI,object_expr_field) -> LIDENT option(preceded(EQUAL,expr)) SEMI . [ error GREATERRBRACE ]
## separated_or_terminated_nonempty_list(SEMI,object_expr_field) -> LIDENT option(preceded(EQUAL,expr)) SEMI . separated_or_terminated_nonempty_list(SEMI,object_expr_field) [ error GREATERRBRACE ]
##
## The known suffix of the stack is as follows:
## LIDENT option(preceded(EQUAL,expr)) SEMI
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET LBRACKET UIDENT RPAREN
##
## Concrete syntax: [ [ UIdent )
##
## Ends in an error in state: 2365.
##
## simple_expr -> LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) . RBRACKET [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> LBRACKET separated_or_terminated_nonempty_list(SEMI,expr) . error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LBRACKET separated_or_terminated_nonempty_list(SEMI,expr)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1048, spurious reduction of production constr_longident -> mod_longident
## In state 1101, spurious reduction of production simple_expr -> constr_longident
## In state 1074, spurious reduction of production expr -> simple_expr
## In state 2019, spurious reduction of production separated_or_terminated_nonempty_list(SEMI,expr) -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET LET OPEN PERCENT AND WHILE
##
## Concrete syntax: [ let open % and while
##
## Ends in an error in state: 2369.
##
## expr -> LET OPEN ext . list(attribute) module_expr IN seq_expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LET OPEN ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET LET OPEN LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: [ let open [@ and ] while
##
## Ends in an error in state: 2370.
##
## expr -> LET OPEN ext list(attribute) . module_expr IN seq_expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LET OPEN ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET LET OPEN QUOTED_STRING_EXPR WITH
##
## Concrete syntax: [ let open {%hello|world|} with
##
## Ends in an error in state: 2371.
##
## expr -> LET OPEN ext list(attribute) module_expr . IN seq_expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## module_expr -> module_expr . attribute [ LPAREN LBRACKETAT IN ]
## module_expr -> module_expr . paren_module_expr [ LPAREN LBRACKETAT IN ]
## module_expr -> module_expr . LPAREN RPAREN [ LPAREN LBRACKETAT IN ]
##
## The known suffix of the stack is as follows:
## LET OPEN ext list(attribute) module_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET LET OPEN QUOTED_STRING_EXPR IN WITH
##
## Concrete syntax: [ let open {%hello|world|} in with
##
## Ends in an error in state: 2372.
##
## expr -> LET OPEN ext list(attribute) module_expr IN . seq_expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LET OPEN ext list(attribute) module_expr IN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET LET MODULE WITH
##
## Concrete syntax: [ let module with
##
## Ends in an error in state: 2374.
##
## expr -> LET MODULE . ext list(attribute) module_name module_binding_body IN seq_expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LET MODULE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET LET MODULE PERCENT AND WHILE
##
## Concrete syntax: [ let module % and while
##
## Ends in an error in state: 2375.
##
## expr -> LET MODULE ext . list(attribute) module_name module_binding_body IN seq_expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LET MODULE ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET LET MODULE LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: [ let module [@ and ] while
##
## Ends in an error in state: 2376.
##
## expr -> LET MODULE ext list(attribute) . module_name module_binding_body IN seq_expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LET MODULE ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET LET MODULE UIDENT WITH
##
## Concrete syntax: [ let module UIdent with
##
## Ends in an error in state: 2377.
##
## expr -> LET MODULE ext list(attribute) module_name . module_binding_body IN seq_expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LET MODULE ext list(attribute) module_name
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET LET MODULE UIDENT EQUAL QUOTED_STRING_EXPR VAL
##
## Concrete syntax: [ let module UIdent = {%hello|world|} val
##
## Ends in an error in state: 2378.
##
## expr -> LET MODULE ext list(attribute) module_name module_binding_body . IN seq_expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LET MODULE ext list(attribute) module_name module_binding_body
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1312, spurious reduction of production module_binding_body -> EQUAL module_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET LET MODULE UIDENT EQUAL QUOTED_STRING_EXPR IN WITH
##
## Concrete syntax: [ let module UIdent = {%hello|world|} in with
##
## Ends in an error in state: 2379.
##
## expr -> LET MODULE ext list(attribute) module_name module_binding_body IN . seq_expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LET MODULE ext list(attribute) module_name module_binding_body IN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET LET EXCEPTION WITH
##
## Concrete syntax: [ let exception with
##
## Ends in an error in state: 2381.
##
## expr -> LET EXCEPTION . ext list(attribute) constr_ident generalized_constructor_arguments list(attribute) IN seq_expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LET EXCEPTION
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET LET EXCEPTION PERCENT AND WHILE
##
## Concrete syntax: [ let exception % and while
##
## Ends in an error in state: 2382.
##
## expr -> LET EXCEPTION ext . list(attribute) constr_ident generalized_constructor_arguments list(attribute) IN seq_expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LET EXCEPTION ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET LET EXCEPTION LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: [ let exception [@ and ] while
##
## Ends in an error in state: 2383.
##
## expr -> LET EXCEPTION ext list(attribute) . constr_ident generalized_constructor_arguments list(attribute) IN seq_expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LET EXCEPTION ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET LET EXCEPTION FALSE WITH
##
## Concrete syntax: [ let exception false with
##
## Ends in an error in state: 2384.
##
## expr -> LET EXCEPTION ext list(attribute) constr_ident . generalized_constructor_arguments list(attribute) IN seq_expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LET EXCEPTION ext list(attribute) constr_ident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET LET EXCEPTION FALSE COLON QUOTED_STRING_EXPR VAL
##
## Concrete syntax: [ let exception false : {%hello|world|} val
##
## Ends in an error in state: 2385.
##
## expr -> LET EXCEPTION ext list(attribute) constr_ident generalized_constructor_arguments . list(attribute) IN seq_expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LET EXCEPTION ext list(attribute) constr_ident generalized_constructor_arguments
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1395, spurious reduction of production generalized_constructor_arguments -> COLON atomic_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET LET EXCEPTION FALSE LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: [ let exception false [@ and ] while
##
## Ends in an error in state: 2386.
##
## expr -> LET EXCEPTION ext list(attribute) constr_ident generalized_constructor_arguments list(attribute) . IN seq_expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LET EXCEPTION ext list(attribute) constr_ident generalized_constructor_arguments list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET LET EXCEPTION FALSE IN WITH
##
## Concrete syntax: [ let exception false in with
##
## Ends in an error in state: 2387.
##
## expr -> LET EXCEPTION ext list(attribute) constr_ident generalized_constructor_arguments list(attribute) IN . seq_expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LET EXCEPTION ext list(attribute) constr_ident generalized_constructor_arguments list(attribute) IN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKETBAR UIDENT RPAREN
##
## Concrete syntax: [| UIdent )
##
## Ends in an error in state: 2390.
##
## simple_expr -> LBRACKETBAR separated_or_terminated_nonempty_list(SEMI,expr) . BARRBRACKET [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> LBRACKETBAR separated_or_terminated_nonempty_list(SEMI,expr) . error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LBRACKETBAR separated_or_terminated_nonempty_list(SEMI,expr)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1048, spurious reduction of production constr_longident -> mod_longident
## In state 1101, spurious reduction of production simple_expr -> constr_longident
## In state 1074, spurious reduction of production expr -> simple_expr
## In state 2019, spurious reduction of production separated_or_terminated_nonempty_list(SEMI,expr) -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: FUN QUESTION LPAREN LIDENT EQUAL UIDENT VAL
##
## Concrete syntax: fun ? ( lident = UIdent val
##
## Ends in an error in state: 2394.
##
## labeled_simple_pattern -> QUESTION LPAREN label_let_pattern option(preceded(EQUAL,seq_expr)) . RPAREN [ UNDERSCORE UIDENT TRUE TILDE STRING QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL COLONGREATER COLON CHAR BACKQUOTE ]
##
## The known suffix of the stack is as follows:
## QUESTION LPAREN label_let_pattern option(preceded(EQUAL,seq_expr))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 943, spurious reduction of production constr_longident -> mod_longident
## In state 1178, spurious reduction of production simple_expr -> constr_longident
## In state 1032, spurious reduction of production expr -> simple_expr
## In state 1172, spurious reduction of production seq_expr -> expr
## In state 2393, spurious reduction of production option(preceded(EQUAL,seq_expr)) -> EQUAL seq_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET LIDENT LESSMINUS UNDERSCORE WITH
##
## Concrete syntax: [ lident <- _ with
##
## Ends in an error in state: 2398.
##
## expr -> expr . INFIXOP0 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> LIDENT LESSMINUS expr . [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LIDENT LESSMINUS expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE LPAREN LPAREN VAL UIDENT VAL
##
## Concrete syntax: include ( ( val UIdent val
##
## Ends in an error in state: 2399.
##
## expr -> expr . INFIXOP0 expr [ error STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ error STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ error STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ error STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ error STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ error STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ error STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ error STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ error STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ error STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ error STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ error STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ error STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ error STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ error STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ error STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ error STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ error STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ error STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ error STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ error STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ error STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
## paren_module_expr -> LPAREN VAL list(attribute) expr . RPAREN [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
## paren_module_expr -> LPAREN VAL list(attribute) expr . COLON module_type RPAREN [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
## paren_module_expr -> LPAREN VAL list(attribute) expr . COLON module_type COLONGREATER module_type RPAREN [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
## paren_module_expr -> LPAREN VAL list(attribute) expr . COLONGREATER module_type RPAREN [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
## paren_module_expr -> LPAREN VAL list(attribute) expr . COLON error [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
## paren_module_expr -> LPAREN VAL list(attribute) expr . COLONGREATER error [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
## paren_module_expr -> LPAREN VAL list(attribute) expr . error [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ error STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LPAREN VAL list(attribute) expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1048, spurious reduction of production constr_longident -> mod_longident
## In state 1101, spurious reduction of production simple_expr -> constr_longident
## In state 1074, spurious reduction of production expr -> simple_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE LPAREN LPAREN VAL UIDENT COLONGREATER WITH
##
## Concrete syntax: include ( ( val UIdent :> with
##
## Ends in an error in state: 2402.
##
## paren_module_expr -> LPAREN VAL list(attribute) expr COLONGREATER . module_type RPAREN [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
## paren_module_expr -> LPAREN VAL list(attribute) expr COLONGREATER . error [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
##
## The known suffix of the stack is as follows:
## LPAREN VAL list(attribute) expr COLONGREATER
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE LPAREN LPAREN VAL UIDENT COLONGREATER QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: include ( ( val UIdent :> {%hello|world|} while
##
## Ends in an error in state: 2404.
##
## module_type -> module_type . attribute [ WITH RPAREN MINUSGREATER LBRACKETAT ]
## module_type -> module_type . MINUSGREATER module_type [ WITH RPAREN MINUSGREATER LBRACKETAT ]
## module_type -> module_type . WITH reversed_separated_nonempty_llist(AND,with_constraint) [ WITH RPAREN MINUSGREATER LBRACKETAT ]
## paren_module_expr -> LPAREN VAL list(attribute) expr COLONGREATER module_type . RPAREN [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
##
## The known suffix of the stack is as follows:
## LPAREN VAL list(attribute) expr COLONGREATER module_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE LPAREN LPAREN VAL UIDENT COLON WITH
##
## Concrete syntax: include ( ( val UIdent : with
##
## Ends in an error in state: 2406.
##
## paren_module_expr -> LPAREN VAL list(attribute) expr COLON . module_type RPAREN [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
## paren_module_expr -> LPAREN VAL list(attribute) expr COLON . module_type COLONGREATER module_type RPAREN [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
## paren_module_expr -> LPAREN VAL list(attribute) expr COLON . error [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
##
## The known suffix of the stack is as follows:
## LPAREN VAL list(attribute) expr COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE LPAREN LPAREN VAL UIDENT COLON QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: include ( ( val UIdent : {%hello|world|} while
##
## Ends in an error in state: 2408.
##
## module_type -> module_type . attribute [ WITH RPAREN MINUSGREATER LBRACKETAT COLONGREATER ]
## module_type -> module_type . MINUSGREATER module_type [ WITH RPAREN MINUSGREATER LBRACKETAT COLONGREATER ]
## module_type -> module_type . WITH reversed_separated_nonempty_llist(AND,with_constraint) [ WITH RPAREN MINUSGREATER LBRACKETAT COLONGREATER ]
## paren_module_expr -> LPAREN VAL list(attribute) expr COLON module_type . RPAREN [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
## paren_module_expr -> LPAREN VAL list(attribute) expr COLON module_type . COLONGREATER module_type RPAREN [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
##
## The known suffix of the stack is as follows:
## LPAREN VAL list(attribute) expr COLON module_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE LPAREN LPAREN VAL UIDENT COLON QUOTED_STRING_EXPR COLONGREATER WITH
##
## Concrete syntax: include ( ( val UIdent : {%hello|world|} :> with
##
## Ends in an error in state: 2410.
##
## paren_module_expr -> LPAREN VAL list(attribute) expr COLON module_type COLONGREATER . module_type RPAREN [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
##
## The known suffix of the stack is as follows:
## LPAREN VAL list(attribute) expr COLON module_type COLONGREATER
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE LPAREN LPAREN VAL UIDENT COLON QUOTED_STRING_EXPR COLONGREATER QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: include ( ( val UIdent : {%hello|world|} :> {%hello|world|} while
##
## Ends in an error in state: 2411.
##
## module_type -> module_type . attribute [ WITH RPAREN MINUSGREATER LBRACKETAT ]
## module_type -> module_type . MINUSGREATER module_type [ WITH RPAREN MINUSGREATER LBRACKETAT ]
## module_type -> module_type . WITH reversed_separated_nonempty_llist(AND,with_constraint) [ WITH RPAREN MINUSGREATER LBRACKETAT ]
## paren_module_expr -> LPAREN VAL list(attribute) expr COLON module_type COLONGREATER module_type . RPAREN [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
##
## The known suffix of the stack is as follows:
## LPAREN VAL list(attribute) expr COLON module_type COLONGREATER module_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE LPAREN FUNCTOR WITH
##
## Concrete syntax: include ( functor with
##
## Ends in an error in state: 2413.
##
## module_expr -> FUNCTOR . list(attribute) reversed_nonempty_llist(functor_arg) MINUSGREATER module_expr [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
##
## The known suffix of the stack is as follows:
## FUNCTOR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE LPAREN FUNCTOR LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: include ( functor [@ and ] while
##
## Ends in an error in state: 2414.
##
## module_expr -> FUNCTOR list(attribute) . reversed_nonempty_llist(functor_arg) MINUSGREATER module_expr [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
##
## The known suffix of the stack is as follows:
## FUNCTOR list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE LPAREN FUNCTOR LPAREN RPAREN WITH
##
## Concrete syntax: include ( functor ( ) with
##
## Ends in an error in state: 2415.
##
## module_expr -> FUNCTOR list(attribute) reversed_nonempty_llist(functor_arg) . MINUSGREATER module_expr [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
## reversed_nonempty_llist(functor_arg) -> reversed_nonempty_llist(functor_arg) . functor_arg [ MINUSGREATER LPAREN ]
##
## The known suffix of the stack is as follows:
## FUNCTOR list(attribute) reversed_nonempty_llist(functor_arg)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE LPAREN FUNCTOR LPAREN RPAREN MINUSGREATER WITH
##
## Concrete syntax: include ( functor ( ) -> with
##
## Ends in an error in state: 2416.
##
## module_expr -> FUNCTOR list(attribute) reversed_nonempty_llist(functor_arg) MINUSGREATER . module_expr [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
##
## The known suffix of the stack is as follows:
## FUNCTOR list(attribute) reversed_nonempty_llist(functor_arg) MINUSGREATER
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE LPAREN FUNCTOR LPAREN RPAREN MINUSGREATER QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: include ( functor ( ) -> {%hello|world|} while
##
## Ends in an error in state: 2418.
##
## module_expr -> FUNCTOR list(attribute) reversed_nonempty_llist(functor_arg) MINUSGREATER module_expr . [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
## module_expr -> module_expr . attribute [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
## module_expr -> module_expr . paren_module_expr [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
## module_expr -> module_expr . LPAREN RPAREN [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
##
## The known suffix of the stack is as follows:
## FUNCTOR list(attribute) reversed_nonempty_llist(functor_arg) MINUSGREATER module_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE LPAREN QUOTED_STRING_EXPR LPAREN WITH
##
## Concrete syntax: include ( {%hello|world|} ( with
##
## Ends in an error in state: 2419.
##
## module_expr -> module_expr LPAREN . RPAREN [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
## paren_module_expr -> LPAREN . module_expr COLON module_type RPAREN [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
## paren_module_expr -> LPAREN . module_expr COLON module_type error [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
## paren_module_expr -> LPAREN . module_expr RPAREN [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
## paren_module_expr -> LPAREN . module_expr error [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
## paren_module_expr -> LPAREN . VAL list(attribute) expr RPAREN [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
## paren_module_expr -> LPAREN . VAL list(attribute) expr COLON module_type RPAREN [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
## paren_module_expr -> LPAREN . VAL list(attribute) expr COLON module_type COLONGREATER module_type RPAREN [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
## paren_module_expr -> LPAREN . VAL list(attribute) expr COLONGREATER module_type RPAREN [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
## paren_module_expr -> LPAREN . VAL list(attribute) expr COLON error [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
## paren_module_expr -> LPAREN . VAL list(attribute) expr COLONGREATER error [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
## paren_module_expr -> LPAREN . VAL list(attribute) expr error [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
##
## The known suffix of the stack is as follows:
## module_expr LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE LPAREN LPAREN QUOTED_STRING_EXPR WITH
##
## Concrete syntax: include ( ( {%hello|world|} with
##
## Ends in an error in state: 2421.
##
## module_expr -> module_expr . attribute [ error RPAREN LPAREN LBRACKETAT COLON ]
## module_expr -> module_expr . paren_module_expr [ error RPAREN LPAREN LBRACKETAT COLON ]
## module_expr -> module_expr . LPAREN RPAREN [ error RPAREN LPAREN LBRACKETAT COLON ]
## paren_module_expr -> LPAREN module_expr . COLON module_type RPAREN [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
## paren_module_expr -> LPAREN module_expr . COLON module_type error [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
## paren_module_expr -> LPAREN module_expr . RPAREN [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
## paren_module_expr -> LPAREN module_expr . error [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
##
## The known suffix of the stack is as follows:
## LPAREN module_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE LPAREN LPAREN QUOTED_STRING_EXPR COLON WITH
##
## Concrete syntax: include ( ( {%hello|world|} : with
##
## Ends in an error in state: 2424.
##
## paren_module_expr -> LPAREN module_expr COLON . module_type RPAREN [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
## paren_module_expr -> LPAREN module_expr COLON . module_type error [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
##
## The known suffix of the stack is as follows:
## LPAREN module_expr COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE LPAREN LPAREN QUOTED_STRING_EXPR COLON QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: include ( ( {%hello|world|} : {%hello|world|} while
##
## Ends in an error in state: 2425.
##
## module_type -> module_type . attribute [ error WITH RPAREN MINUSGREATER LBRACKETAT ]
## module_type -> module_type . MINUSGREATER module_type [ error WITH RPAREN MINUSGREATER LBRACKETAT ]
## module_type -> module_type . WITH reversed_separated_nonempty_llist(AND,with_constraint) [ error WITH RPAREN MINUSGREATER LBRACKETAT ]
## paren_module_expr -> LPAREN module_expr COLON module_type . RPAREN [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
## paren_module_expr -> LPAREN module_expr COLON module_type . error [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
##
## The known suffix of the stack is as follows:
## LPAREN module_expr COLON module_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE LPAREN UIDENT WHILE
##
## Concrete syntax: include ( UIdent while
##
## Ends in an error in state: 2430.
##
## mk_longident(mod_longident,UIDENT) -> mod_longident . DOT UIDENT [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END DOT COLON CLASS AND ]
## module_expr -> mod_longident . [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END COLON CLASS AND ]
##
## The known suffix of the stack is as follows:
## mod_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE LPAREN UIDENT DOT WITH
##
## Concrete syntax: include ( UIdent . with
##
## Ends in an error in state: 2431.
##
## mk_longident(mod_longident,UIDENT) -> mod_longident DOT . UIDENT [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END DOT COLON CLASS AND ]
##
## The known suffix of the stack is as follows:
## mod_longident DOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE LPAREN QUOTED_STRING_EXPR WITH
##
## Concrete syntax: include ( {%hello|world|} with
##
## Ends in an error in state: 2433.
##
## module_expr -> module_expr . attribute [ error RPAREN LPAREN LBRACKETAT COLON ]
## module_expr -> module_expr . paren_module_expr [ error RPAREN LPAREN LBRACKETAT COLON ]
## module_expr -> module_expr . LPAREN RPAREN [ error RPAREN LPAREN LBRACKETAT COLON ]
## paren_module_expr -> LPAREN module_expr . COLON module_type RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
## paren_module_expr -> LPAREN module_expr . COLON module_type error [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
## paren_module_expr -> LPAREN module_expr . RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
## paren_module_expr -> LPAREN module_expr . error [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
##
## The known suffix of the stack is as follows:
## LPAREN module_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE LPAREN QUOTED_STRING_EXPR COLON WITH
##
## Concrete syntax: include ( {%hello|world|} : with
##
## Ends in an error in state: 2436.
##
## paren_module_expr -> LPAREN module_expr COLON . module_type RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
## paren_module_expr -> LPAREN module_expr COLON . module_type error [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
##
## The known suffix of the stack is as follows:
## LPAREN module_expr COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE LPAREN QUOTED_STRING_EXPR COLON QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: include ( {%hello|world|} : {%hello|world|} while
##
## Ends in an error in state: 2437.
##
## module_type -> module_type . attribute [ error WITH RPAREN MINUSGREATER LBRACKETAT ]
## module_type -> module_type . MINUSGREATER module_type [ error WITH RPAREN MINUSGREATER LBRACKETAT ]
## module_type -> module_type . WITH reversed_separated_nonempty_llist(AND,with_constraint) [ error WITH RPAREN MINUSGREATER LBRACKETAT ]
## paren_module_expr -> LPAREN module_expr COLON module_type . RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
## paren_module_expr -> LPAREN module_expr COLON module_type . error [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
##
## The known suffix of the stack is as follows:
## LPAREN module_expr COLON module_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LET OPEN BANG QUOTED_STRING_EXPR WITH
##
## Concrete syntax: let open ! {%hello|world|} with
##
## Ends in an error in state: 2440.
##
## expr -> LET OPEN BANG ext list(attribute) module_expr . IN seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## module_expr -> module_expr . attribute [ LPAREN LBRACKETAT IN ]
## module_expr -> module_expr . paren_module_expr [ LPAREN LBRACKETAT IN ]
## module_expr -> module_expr . LPAREN RPAREN [ LPAREN LBRACKETAT IN ]
##
## The known suffix of the stack is as follows:
## LET OPEN BANG ext list(attribute) module_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LET OPEN BANG QUOTED_STRING_EXPR IN WITH
##
## Concrete syntax: let open ! {%hello|world|} in with
##
## Ends in an error in state: 2441.
##
## expr -> LET OPEN BANG ext list(attribute) module_expr IN . seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LET OPEN BANG ext list(attribute) module_expr IN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LET OPEN PERCENT AND WHILE
##
## Concrete syntax: let open % and while
##
## Ends in an error in state: 2443.
##
## expr -> LET OPEN ext . list(attribute) module_expr IN seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LET OPEN ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LET OPEN LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: let open [@ and ] while
##
## Ends in an error in state: 2444.
##
## expr -> LET OPEN ext list(attribute) . module_expr IN seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LET OPEN ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LET OPEN QUOTED_STRING_EXPR WITH
##
## Concrete syntax: let open {%hello|world|} with
##
## Ends in an error in state: 2445.
##
## expr -> LET OPEN ext list(attribute) module_expr . IN seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## module_expr -> module_expr . attribute [ LPAREN LBRACKETAT IN ]
## module_expr -> module_expr . paren_module_expr [ LPAREN LBRACKETAT IN ]
## module_expr -> module_expr . LPAREN RPAREN [ LPAREN LBRACKETAT IN ]
##
## The known suffix of the stack is as follows:
## LET OPEN ext list(attribute) module_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LET OPEN QUOTED_STRING_EXPR IN WITH
##
## Concrete syntax: let open {%hello|world|} in with
##
## Ends in an error in state: 2446.
##
## expr -> LET OPEN ext list(attribute) module_expr IN . seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LET OPEN ext list(attribute) module_expr IN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LET MODULE WITH
##
## Concrete syntax: let module with
##
## Ends in an error in state: 2448.
##
## expr -> LET MODULE . ext list(attribute) module_name module_binding_body IN seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LET MODULE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LET MODULE PERCENT AND WHILE
##
## Concrete syntax: let module % and while
##
## Ends in an error in state: 2449.
##
## expr -> LET MODULE ext . list(attribute) module_name module_binding_body IN seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LET MODULE ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LET MODULE LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: let module [@ and ] while
##
## Ends in an error in state: 2450.
##
## expr -> LET MODULE ext list(attribute) . module_name module_binding_body IN seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LET MODULE ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LET MODULE UIDENT WITH
##
## Concrete syntax: let module UIdent with
##
## Ends in an error in state: 2451.
##
## expr -> LET MODULE ext list(attribute) module_name . module_binding_body IN seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LET MODULE ext list(attribute) module_name
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LET MODULE UIDENT EQUAL QUOTED_STRING_EXPR VAL
##
## Concrete syntax: let module UIdent = {%hello|world|} val
##
## Ends in an error in state: 2452.
##
## expr -> LET MODULE ext list(attribute) module_name module_binding_body . IN seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LET MODULE ext list(attribute) module_name module_binding_body
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1312, spurious reduction of production module_binding_body -> EQUAL module_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LET MODULE UIDENT EQUAL QUOTED_STRING_EXPR IN WITH
##
## Concrete syntax: let module UIdent = {%hello|world|} in with
##
## Ends in an error in state: 2453.
##
## expr -> LET MODULE ext list(attribute) module_name module_binding_body IN . seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LET MODULE ext list(attribute) module_name module_binding_body IN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LET EXCEPTION WITH
##
## Concrete syntax: let exception with
##
## Ends in an error in state: 2455.
##
## expr -> LET EXCEPTION . ext list(attribute) constr_ident generalized_constructor_arguments list(attribute) IN seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LET EXCEPTION
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LET EXCEPTION PERCENT AND WHILE
##
## Concrete syntax: let exception % and while
##
## Ends in an error in state: 2456.
##
## expr -> LET EXCEPTION ext . list(attribute) constr_ident generalized_constructor_arguments list(attribute) IN seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LET EXCEPTION ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LET EXCEPTION LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: let exception [@ and ] while
##
## Ends in an error in state: 2457.
##
## expr -> LET EXCEPTION ext list(attribute) . constr_ident generalized_constructor_arguments list(attribute) IN seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LET EXCEPTION ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LET EXCEPTION FALSE WITH
##
## Concrete syntax: let exception false with
##
## Ends in an error in state: 2458.
##
## expr -> LET EXCEPTION ext list(attribute) constr_ident . generalized_constructor_arguments list(attribute) IN seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LET EXCEPTION ext list(attribute) constr_ident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LET EXCEPTION FALSE COLON QUOTED_STRING_EXPR VAL
##
## Concrete syntax: let exception false : {%hello|world|} val
##
## Ends in an error in state: 2459.
##
## expr -> LET EXCEPTION ext list(attribute) constr_ident generalized_constructor_arguments . list(attribute) IN seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LET EXCEPTION ext list(attribute) constr_ident generalized_constructor_arguments
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1395, spurious reduction of production generalized_constructor_arguments -> COLON atomic_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LET EXCEPTION FALSE LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: let exception false [@ and ] while
##
## Ends in an error in state: 2460.
##
## expr -> LET EXCEPTION ext list(attribute) constr_ident generalized_constructor_arguments list(attribute) . IN seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LET EXCEPTION ext list(attribute) constr_ident generalized_constructor_arguments list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LET EXCEPTION FALSE IN WITH
##
## Concrete syntax: let exception false in with
##
## Ends in an error in state: 2461.
##
## expr -> LET EXCEPTION ext list(attribute) constr_ident generalized_constructor_arguments list(attribute) IN . seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LET EXCEPTION ext list(attribute) constr_ident generalized_constructor_arguments list(attribute) IN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET MATCH UIDENT VAL
##
## Concrete syntax: [ match UIdent val
##
## Ends in an error in state: 2463.
##
## expr -> MATCH ext list(attribute) seq_expr . WITH reversed_preceded_or_separated_nonempty_llist(BAR,match_case) [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## MATCH ext list(attribute) seq_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 943, spurious reduction of production constr_longident -> mod_longident
## In state 1178, spurious reduction of production simple_expr -> constr_longident
## In state 1032, spurious reduction of production expr -> simple_expr
## In state 1172, spurious reduction of production seq_expr -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET MATCH UIDENT WITH WITH
##
## Concrete syntax: [ match UIdent with with
##
## Ends in an error in state: 2464.
##
## expr -> MATCH ext list(attribute) seq_expr WITH . reversed_preceded_or_separated_nonempty_llist(BAR,match_case) [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## MATCH ext list(attribute) seq_expr WITH
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET MATCH UIDENT WITH FALSE MINUSGREATER DOT WITH
##
## Concrete syntax: [ match UIdent with false -> . with
##
## Ends in an error in state: 2465.
##
## expr -> MATCH ext list(attribute) seq_expr WITH reversed_preceded_or_separated_nonempty_llist(BAR,match_case) . [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## reversed_preceded_or_separated_nonempty_llist(BAR,match_case) -> reversed_preceded_or_separated_nonempty_llist(BAR,match_case) . BAR match_case [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## MATCH ext list(attribute) seq_expr WITH reversed_preceded_or_separated_nonempty_llist(BAR,match_case)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT VAL BANG LIDENT COLON QUOTED_STRING_EXPR RPAREN
##
## Concrete syntax: object val ! lident : {%hello|world|} )
##
## Ends in an error in state: 2467.
##
## value -> BANG list(attribute) mutable_flag LIDENT type_constraint . EQUAL seq_expr [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## BANG list(attribute) mutable_flag LIDENT type_constraint
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 358, spurious reduction of production tuple_type -> atomic_type
## In state 344, spurious reduction of production function_type -> tuple_type
## In state 374, spurious reduction of production alias_type -> function_type
## In state 384, spurious reduction of production core_type -> alias_type
## In state 1234, spurious reduction of production type_constraint -> COLON core_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT VAL BANG LIDENT COLON QUOTED_STRING_EXPR EQUAL WITH
##
## Concrete syntax: object val ! lident : {%hello|world|} = with
##
## Ends in an error in state: 2468.
##
## value -> BANG list(attribute) mutable_flag LIDENT type_constraint EQUAL . seq_expr [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## BANG list(attribute) mutable_flag LIDENT type_constraint EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT VAL LIDENT EQUAL UIDENT TYPE
##
## Concrete syntax: object val lident = UIdent type
##
## Ends in an error in state: 2470.
##
## class_field -> VAL value . list(post_item_attribute) [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## VAL value
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1048, spurious reduction of production constr_longident -> mod_longident
## In state 1101, spurious reduction of production simple_expr -> constr_longident
## In state 1074, spurious reduction of production expr -> simple_expr
## In state 1095, spurious reduction of production seq_expr -> expr
## In state 2484, spurious reduction of production value -> list(attribute) mutable_flag LIDENT EQUAL seq_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT VAL LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: object val [@ and ] while
##
## Ends in an error in state: 2472.
##
## value -> list(attribute) . virtual_with_mutable_flag LIDENT COLON core_type [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
## value -> list(attribute) . mutable_flag LIDENT EQUAL seq_expr [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
## value -> list(attribute) . mutable_flag LIDENT type_constraint EQUAL seq_expr [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT VAL VIRTUAL WITH
##
## Concrete syntax: object val virtual with
##
## Ends in an error in state: 2473.
##
## virtual_with_mutable_flag -> VIRTUAL . [ LIDENT ]
## virtual_with_mutable_flag -> VIRTUAL . MUTABLE [ LIDENT ]
##
## The known suffix of the stack is as follows:
## VIRTUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT VAL MUTABLE WITH
##
## Concrete syntax: object val mutable with
##
## Ends in an error in state: 2475.
##
## mutable_flag -> MUTABLE . [ LIDENT ]
## virtual_with_mutable_flag -> MUTABLE . VIRTUAL [ LIDENT ]
##
## The known suffix of the stack is as follows:
## MUTABLE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT VAL MUTABLE VIRTUAL WITH
##
## Concrete syntax: object val mutable virtual with
##
## Ends in an error in state: 2477.
##
## value -> list(attribute) virtual_with_mutable_flag . LIDENT COLON core_type [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## list(attribute) virtual_with_mutable_flag
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT VAL VIRTUAL LIDENT WITH
##
## Concrete syntax: object val virtual lident with
##
## Ends in an error in state: 2478.
##
## value -> list(attribute) virtual_with_mutable_flag LIDENT . COLON core_type [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## list(attribute) virtual_with_mutable_flag LIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT VAL VIRTUAL LIDENT COLON WITH
##
## Concrete syntax: object val virtual lident : with
##
## Ends in an error in state: 2479.
##
## value -> list(attribute) virtual_with_mutable_flag LIDENT COLON . core_type [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## list(attribute) virtual_with_mutable_flag LIDENT COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT VAL VIRTUAL LIDENT COLON QUOTED_STRING_EXPR WITH
##
## Concrete syntax: object val virtual lident : {%hello|world|} with
##
## Ends in an error in state: 2480.
##
## core_type -> core_type . attribute [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT END CONSTRAINT ]
## value -> list(attribute) virtual_with_mutable_flag LIDENT COLON core_type . [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## list(attribute) virtual_with_mutable_flag LIDENT COLON core_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 568, spurious reduction of production tuple_type -> atomic_type
## In state 555, spurious reduction of production function_type -> tuple_type
## In state 572, spurious reduction of production alias_type -> function_type
## In state 585, spurious reduction of production core_type -> alias_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT VAL LIDENT WITH
##
## Concrete syntax: object val lident with
##
## Ends in an error in state: 2482.
##
## value -> list(attribute) mutable_flag LIDENT . EQUAL seq_expr [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
## value -> list(attribute) mutable_flag LIDENT . type_constraint EQUAL seq_expr [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## list(attribute) mutable_flag LIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT VAL LIDENT EQUAL WITH
##
## Concrete syntax: object val lident = with
##
## Ends in an error in state: 2483.
##
## value -> list(attribute) mutable_flag LIDENT EQUAL . seq_expr [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## list(attribute) mutable_flag LIDENT EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT VAL LIDENT COLON QUOTED_STRING_EXPR RPAREN
##
## Concrete syntax: object val lident : {%hello|world|} )
##
## Ends in an error in state: 2485.
##
## value -> list(attribute) mutable_flag LIDENT type_constraint . EQUAL seq_expr [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## list(attribute) mutable_flag LIDENT type_constraint
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 358, spurious reduction of production tuple_type -> atomic_type
## In state 344, spurious reduction of production function_type -> tuple_type
## In state 374, spurious reduction of production alias_type -> function_type
## In state 384, spurious reduction of production core_type -> alias_type
## In state 1234, spurious reduction of production type_constraint -> COLON core_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT VAL LIDENT COLON QUOTED_STRING_EXPR EQUAL WITH
##
## Concrete syntax: object val lident : {%hello|world|} = with
##
## Ends in an error in state: 2486.
##
## value -> list(attribute) mutable_flag LIDENT type_constraint EQUAL . seq_expr [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INITIALIZER INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## list(attribute) mutable_flag LIDENT type_constraint EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET LBRACKETBAR UIDENT RPAREN
##
## Concrete syntax: [ [| UIdent )
##
## Ends in an error in state: 2492.
##
## simple_expr -> LBRACKETBAR separated_or_terminated_nonempty_list(SEMI,expr) . BARRBRACKET [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> LBRACKETBAR separated_or_terminated_nonempty_list(SEMI,expr) . error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LBRACKETBAR separated_or_terminated_nonempty_list(SEMI,expr)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1048, spurious reduction of production constr_longident -> mod_longident
## In state 1101, spurious reduction of production simple_expr -> constr_longident
## In state 1074, spurious reduction of production expr -> simple_expr
## In state 2019, spurious reduction of production separated_or_terminated_nonempty_list(SEMI,expr) -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET LPAREN MODULE WITH
##
## Concrete syntax: [ ( module with
##
## Ends in an error in state: 2496.
##
## simple_expr -> LPAREN MODULE . ext list(attribute) module_expr RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> LPAREN MODULE . ext list(attribute) module_expr COLON module_type RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> LPAREN MODULE . ext list(attribute) module_expr COLON error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## val_extra_ident -> LPAREN MODULE . error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LPAREN MODULE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET LPAREN MODULE PERCENT AND WHILE
##
## Concrete syntax: [ ( module % and while
##
## Ends in an error in state: 2497.
##
## simple_expr -> LPAREN MODULE ext . list(attribute) module_expr RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> LPAREN MODULE ext . list(attribute) module_expr COLON module_type RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> LPAREN MODULE ext . list(attribute) module_expr COLON error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LPAREN MODULE ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET LPAREN MODULE LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: [ ( module [@ and ] while
##
## Ends in an error in state: 2498.
##
## simple_expr -> LPAREN MODULE ext list(attribute) . module_expr RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> LPAREN MODULE ext list(attribute) . module_expr COLON module_type RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> LPAREN MODULE ext list(attribute) . module_expr COLON error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LPAREN MODULE ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET LPAREN MODULE QUOTED_STRING_EXPR WITH
##
## Concrete syntax: [ ( module {%hello|world|} with
##
## Ends in an error in state: 2499.
##
## module_expr -> module_expr . attribute [ RPAREN LPAREN LBRACKETAT COLON ]
## module_expr -> module_expr . paren_module_expr [ RPAREN LPAREN LBRACKETAT COLON ]
## module_expr -> module_expr . LPAREN RPAREN [ RPAREN LPAREN LBRACKETAT COLON ]
## simple_expr -> LPAREN MODULE ext list(attribute) module_expr . RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> LPAREN MODULE ext list(attribute) module_expr . COLON module_type RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> LPAREN MODULE ext list(attribute) module_expr . COLON error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LPAREN MODULE ext list(attribute) module_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET LPAREN MODULE QUOTED_STRING_EXPR COLON WITH
##
## Concrete syntax: [ ( module {%hello|world|} : with
##
## Ends in an error in state: 2501.
##
## simple_expr -> LPAREN MODULE ext list(attribute) module_expr COLON . module_type RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> LPAREN MODULE ext list(attribute) module_expr COLON . error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LPAREN MODULE ext list(attribute) module_expr COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET LPAREN MODULE QUOTED_STRING_EXPR COLON QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: [ ( module {%hello|world|} : {%hello|world|} while
##
## Ends in an error in state: 2503.
##
## module_type -> module_type . attribute [ WITH RPAREN MINUSGREATER LBRACKETAT ]
## module_type -> module_type . MINUSGREATER module_type [ WITH RPAREN MINUSGREATER LBRACKETAT ]
## module_type -> module_type . WITH reversed_separated_nonempty_llist(AND,with_constraint) [ WITH RPAREN MINUSGREATER LBRACKETAT ]
## simple_expr -> LPAREN MODULE ext list(attribute) module_expr COLON module_type . RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LPAREN MODULE ext list(attribute) module_expr COLON module_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET LPAREN UIDENT VAL
##
## Concrete syntax: [ ( UIdent val
##
## Ends in an error in state: 2505.
##
## simple_expr -> LPAREN seq_expr . RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> LPAREN seq_expr . error [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
## simple_expr -> LPAREN seq_expr . type_constraint RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LPAREN seq_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1048, spurious reduction of production constr_longident -> mod_longident
## In state 1101, spurious reduction of production simple_expr -> constr_longident
## In state 1074, spurious reduction of production expr -> simple_expr
## In state 1095, spurious reduction of production seq_expr -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET LPAREN UIDENT COLON QUOTED_STRING_EXPR EQUAL
##
## Concrete syntax: [ ( UIdent : {%hello|world|} =
##
## Ends in an error in state: 2508.
##
## simple_expr -> LPAREN seq_expr type_constraint . RPAREN [ error VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LPAREN seq_expr type_constraint
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 358, spurious reduction of production tuple_type -> atomic_type
## In state 344, spurious reduction of production function_type -> tuple_type
## In state 374, spurious reduction of production alias_type -> function_type
## In state 384, spurious reduction of production core_type -> alias_type
## In state 1234, spurious reduction of production type_constraint -> COLON core_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT OPEN WITH
##
## Concrete syntax: include struct open with
##
## Ends in an error in state: 2510.
##
## open_declaration -> OPEN . ext list(attribute) module_expr list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
## open_declaration -> OPEN . BANG ext list(attribute) module_expr list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## OPEN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT OPEN BANG WITH
##
## Concrete syntax: include struct open ! with
##
## Ends in an error in state: 2511.
##
## open_declaration -> OPEN BANG . ext list(attribute) module_expr list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## OPEN BANG
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT OPEN BANG PERCENT AND WHILE
##
## Concrete syntax: include struct open ! % and while
##
## Ends in an error in state: 2512.
##
## open_declaration -> OPEN BANG ext . list(attribute) module_expr list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## OPEN BANG ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT OPEN BANG LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: include struct open ! [@ and ] while
##
## Ends in an error in state: 2513.
##
## open_declaration -> OPEN BANG ext list(attribute) . module_expr list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## OPEN BANG ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT OPEN BANG QUOTED_STRING_EXPR WITH
##
## Concrete syntax: include struct open ! {%hello|world|} with
##
## Ends in an error in state: 2514.
##
## module_expr -> module_expr . attribute [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
## module_expr -> module_expr . paren_module_expr [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
## module_expr -> module_expr . LPAREN RPAREN [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
## open_declaration -> OPEN BANG ext list(attribute) module_expr . list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## OPEN BANG ext list(attribute) module_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT OPEN PERCENT AND WHILE
##
## Concrete syntax: include struct open % and while
##
## Ends in an error in state: 2516.
##
## open_declaration -> OPEN ext . list(attribute) module_expr list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## OPEN ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT OPEN LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: include struct open [@ and ] while
##
## Ends in an error in state: 2517.
##
## open_declaration -> OPEN ext list(attribute) . module_expr list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## OPEN ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT OPEN QUOTED_STRING_EXPR WITH
##
## Concrete syntax: include struct open {%hello|world|} with
##
## Ends in an error in state: 2518.
##
## module_expr -> module_expr . attribute [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
## module_expr -> module_expr . paren_module_expr [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
## module_expr -> module_expr . LPAREN RPAREN [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
## open_declaration -> OPEN ext list(attribute) module_expr . list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## OPEN ext list(attribute) module_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT MODULE WITH
##
## Concrete syntax: include struct module with
##
## Ends in an error in state: 2520.
##
## module_type_declaration -> MODULE . TYPE ext list(attribute) ident option(preceded(EQUAL,module_type)) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
## structure_item -> MODULE . ext list(attribute) module_name module_binding_body list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
## structure_item -> MODULE . ext list(attribute) REC module_name module_binding_body list(post_item_attribute) list(and_module_binding) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## MODULE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT MODULE TYPE WITH
##
## Concrete syntax: include struct module type with
##
## Ends in an error in state: 2521.
##
## module_type_declaration -> MODULE TYPE . ext list(attribute) ident option(preceded(EQUAL,module_type)) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## MODULE TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT MODULE TYPE PERCENT AND WHILE
##
## Concrete syntax: include struct module type % and while
##
## Ends in an error in state: 2522.
##
## module_type_declaration -> MODULE TYPE ext . list(attribute) ident option(preceded(EQUAL,module_type)) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## MODULE TYPE ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT MODULE TYPE LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: include struct module type [@ and ] while
##
## Ends in an error in state: 2523.
##
## module_type_declaration -> MODULE TYPE ext list(attribute) . ident option(preceded(EQUAL,module_type)) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## MODULE TYPE ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT MODULE TYPE LIDENT WITH
##
## Concrete syntax: include struct module type lident with
##
## Ends in an error in state: 2524.
##
## module_type_declaration -> MODULE TYPE ext list(attribute) ident . option(preceded(EQUAL,module_type)) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## MODULE TYPE ext list(attribute) ident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT MODULE TYPE LIDENT EQUAL WITH
##
## Concrete syntax: include struct module type lident = with
##
## Ends in an error in state: 2525.
##
## option(preceded(EQUAL,module_type)) -> EQUAL . module_type [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT MODULE TYPE LIDENT EQUAL QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: include struct module type lident = {%hello|world|} while
##
## Ends in an error in state: 2526.
##
## module_type -> module_type . attribute [ error WITH VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
## module_type -> module_type . MINUSGREATER module_type [ error WITH VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
## module_type -> module_type . WITH reversed_separated_nonempty_llist(AND,with_constraint) [ error WITH VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
## option(preceded(EQUAL,module_type)) -> EQUAL module_type . [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## EQUAL module_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT MODULE PERCENT AND WHILE
##
## Concrete syntax: include struct module % and while
##
## Ends in an error in state: 2529.
##
## structure_item -> MODULE ext . list(attribute) module_name module_binding_body list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
## structure_item -> MODULE ext . list(attribute) REC module_name module_binding_body list(post_item_attribute) list(and_module_binding) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## MODULE ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT MODULE LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: include struct module [@ and ] while
##
## Ends in an error in state: 2530.
##
## structure_item -> MODULE ext list(attribute) . module_name module_binding_body list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
## structure_item -> MODULE ext list(attribute) . REC module_name module_binding_body list(post_item_attribute) list(and_module_binding) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## MODULE ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT MODULE REC WITH
##
## Concrete syntax: include struct module rec with
##
## Ends in an error in state: 2531.
##
## structure_item -> MODULE ext list(attribute) REC . module_name module_binding_body list(post_item_attribute) list(and_module_binding) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## MODULE ext list(attribute) REC
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT MODULE REC UIDENT WITH
##
## Concrete syntax: include struct module rec UIdent with
##
## Ends in an error in state: 2532.
##
## structure_item -> MODULE ext list(attribute) REC module_name . module_binding_body list(post_item_attribute) list(and_module_binding) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## MODULE ext list(attribute) REC module_name
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT MODULE UIDENT EQUAL WITH
##
## Concrete syntax: include struct module UIdent = with
##
## Ends in an error in state: 2533.
##
## module_binding_body -> EQUAL . module_expr [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT MODULE UIDENT EQUAL QUOTED_STRING_EXPR WITH
##
## Concrete syntax: include struct module UIdent = {%hello|world|} with
##
## Ends in an error in state: 2534.
##
## module_binding_body -> EQUAL module_expr . [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## module_expr -> module_expr . attribute [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## module_expr -> module_expr . paren_module_expr [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## module_expr -> module_expr . LPAREN RPAREN [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## EQUAL module_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT MODULE UIDENT COLON WITH
##
## Concrete syntax: include struct module UIdent : with
##
## Ends in an error in state: 2535.
##
## module_binding_body -> COLON . module_type EQUAL module_expr [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT MODULE UIDENT COLON QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: include struct module UIdent : {%hello|world|} while
##
## Ends in an error in state: 2536.
##
## module_binding_body -> COLON module_type . EQUAL module_expr [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## module_type -> module_type . attribute [ WITH MINUSGREATER LBRACKETAT EQUAL ]
## module_type -> module_type . MINUSGREATER module_type [ WITH MINUSGREATER LBRACKETAT EQUAL ]
## module_type -> module_type . WITH reversed_separated_nonempty_llist(AND,with_constraint) [ WITH MINUSGREATER LBRACKETAT EQUAL ]
##
## The known suffix of the stack is as follows:
## COLON module_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT MODULE UIDENT COLON QUOTED_STRING_EXPR EQUAL WITH
##
## Concrete syntax: include struct module UIdent : {%hello|world|} = with
##
## Ends in an error in state: 2537.
##
## module_binding_body -> COLON module_type EQUAL . module_expr [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## COLON module_type EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT MODULE UIDENT COLON QUOTED_STRING_EXPR EQUAL QUOTED_STRING_EXPR WITH
##
## Concrete syntax: include struct module UIdent : {%hello|world|} = {%hello|world|} with
##
## Ends in an error in state: 2538.
##
## module_binding_body -> COLON module_type EQUAL module_expr . [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## module_expr -> module_expr . attribute [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## module_expr -> module_expr . paren_module_expr [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## module_expr -> module_expr . LPAREN RPAREN [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## COLON module_type EQUAL module_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT MODULE REC UIDENT EQUAL QUOTED_STRING_EXPR LBRACKETATAT AND RBRACKET METHOD
##
## Concrete syntax: include struct module rec UIdent = {%hello|world|} [@@ and ] method
##
## Ends in an error in state: 2540.
##
## structure_item -> MODULE ext list(attribute) REC module_name module_binding_body list(post_item_attribute) . list(and_module_binding) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## MODULE ext list(attribute) REC module_name module_binding_body list(post_item_attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1600, spurious reduction of production list(post_item_attribute) ->
## In state 1601, spurious reduction of production list(post_item_attribute) -> post_item_attribute list(post_item_attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT MODULE REC UIDENT EQUAL QUOTED_STRING_EXPR AND WITH
##
## Concrete syntax: include struct module rec UIdent = {%hello|world|} and with
##
## Ends in an error in state: 2541.
##
## list(and_module_binding) -> AND . list(attribute) module_name module_binding_body list(post_item_attribute) list(and_module_binding) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## AND
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT MODULE REC UIDENT EQUAL QUOTED_STRING_EXPR AND LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: include struct module rec UIdent = {%hello|world|} and [@ and ] while
##
## Ends in an error in state: 2542.
##
## list(and_module_binding) -> AND list(attribute) . module_name module_binding_body list(post_item_attribute) list(and_module_binding) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## AND list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT MODULE REC UIDENT EQUAL QUOTED_STRING_EXPR AND UIDENT WITH
##
## Concrete syntax: include struct module rec UIdent = {%hello|world|} and UIdent with
##
## Ends in an error in state: 2543.
##
## list(and_module_binding) -> AND list(attribute) module_name . module_binding_body list(post_item_attribute) list(and_module_binding) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## AND list(attribute) module_name
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT MODULE REC UIDENT EQUAL QUOTED_STRING_EXPR AND UIDENT EQUAL QUOTED_STRING_EXPR LBRACKETATAT AND RBRACKET METHOD
##
## Concrete syntax: include struct module rec UIdent = {%hello|world|} and UIdent = {%hello|world|} [@@ and ] method
##
## Ends in an error in state: 2545.
##
## list(and_module_binding) -> AND list(attribute) module_name module_binding_body list(post_item_attribute) . list(and_module_binding) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## AND list(attribute) module_name module_binding_body list(post_item_attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1600, spurious reduction of production list(post_item_attribute) ->
## In state 1601, spurious reduction of production list(post_item_attribute) -> post_item_attribute list(post_item_attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT MODULE UIDENT LPAREN RPAREN WITH
##
## Concrete syntax: include struct module UIdent ( ) with
##
## Ends in an error in state: 2547.
##
## module_binding_body -> functor_arg . module_binding_body [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## functor_arg
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT MODULE UIDENT WITH
##
## Concrete syntax: include struct module UIdent with
##
## Ends in an error in state: 2550.
##
## structure_item -> MODULE ext list(attribute) module_name . module_binding_body list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## MODULE ext list(attribute) module_name
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT MODULE UIDENT EQUAL QUOTED_STRING_EXPR AND
##
## Concrete syntax: include struct module UIdent = {%hello|world|} and
##
## Ends in an error in state: 2551.
##
## structure_item -> MODULE ext list(attribute) module_name module_binding_body . list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## MODULE ext list(attribute) module_name module_binding_body
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 2534, spurious reduction of production module_binding_body -> EQUAL module_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT LET WITH
##
## Concrete syntax: include struct let with
##
## Ends in an error in state: 2553.
##
## expr -> LET . MODULE ext list(attribute) module_name module_binding_body IN seq_expr [ error VAL TYPE STAR SEMISEMI SEMI QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE GREATER EXTERNAL EXCEPTION EQUAL END COMMA COLONEQUAL COLONCOLON CLASS BARBAR AMPERSAND AMPERAMPER ]
## expr -> LET . EXCEPTION ext list(attribute) constr_ident generalized_constructor_arguments list(attribute) IN seq_expr [ error VAL TYPE STAR SEMISEMI SEMI QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE GREATER EXTERNAL EXCEPTION EQUAL END COMMA COLONEQUAL COLONCOLON CLASS BARBAR AMPERSAND AMPERAMPER ]
## expr -> LET . OPEN ext list(attribute) module_expr IN seq_expr [ error VAL TYPE STAR SEMISEMI SEMI QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE GREATER EXTERNAL EXCEPTION EQUAL END COMMA COLONEQUAL COLONCOLON CLASS BARBAR AMPERSAND AMPERAMPER ]
## expr -> LET . OPEN BANG ext list(attribute) module_expr IN seq_expr [ error VAL TYPE STAR SEMISEMI SEMI QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE GREATER EXTERNAL EXCEPTION EQUAL END COMMA COLONEQUAL COLONCOLON CLASS BARBAR AMPERSAND AMPERAMPER ]
## let_bindings(ext) -> LET . ext list(attribute) rec_flag let_binding_body list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE IN EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## LET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT LET PERCENT AND WHILE
##
## Concrete syntax: include struct let % and while
##
## Ends in an error in state: 2554.
##
## let_bindings(ext) -> LET ext . list(attribute) rec_flag let_binding_body list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE IN EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## LET ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT LET LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: include struct let [@ and ] while
##
## Ends in an error in state: 2555.
##
## let_bindings(ext) -> LET ext list(attribute) . rec_flag let_binding_body list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE IN EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## LET ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT LET REC WITH
##
## Concrete syntax: include struct let rec with
##
## Ends in an error in state: 2556.
##
## let_bindings(ext) -> LET ext list(attribute) rec_flag . let_binding_body list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE IN EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## LET ext list(attribute) rec_flag
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT LET LPAREN WITH
##
## Concrete syntax: include struct let ( with
##
## Ends in an error in state: 2557.
##
## constr_extra_nonprefix_ident -> LPAREN . RPAREN [ UNDERSCORE UIDENT TRUE STRING QUOTED_STRING_EXPR PLUS MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LAZY INT HASH FLOAT FALSE EXCEPTION EQUAL COMMA COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
## constr_longident -> LPAREN . COLONCOLON RPAREN [ UNDERSCORE UIDENT TRUE STRING QUOTED_STRING_EXPR PLUS MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LAZY INT HASH FLOAT FALSE EXCEPTION EQUAL COMMA COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
## simple_pattern_not_ident -> LPAREN . pattern RPAREN [ LBRACKETAT EQUAL COMMA COLONCOLON COLON BAR AS ]
## simple_pattern_not_ident -> LPAREN . MODULE ext list(attribute) module_name RPAREN [ LBRACKETAT EQUAL COMMA COLONCOLON COLON BAR AS ]
## simple_pattern_not_ident -> LPAREN . MODULE ext list(attribute) module_name COLON module_type RPAREN [ LBRACKETAT EQUAL COMMA COLONCOLON COLON BAR AS ]
## simple_pattern_not_ident -> LPAREN . pattern error [ LBRACKETAT EQUAL COMMA COLONCOLON COLON BAR AS ]
## simple_pattern_not_ident -> LPAREN . pattern COLON core_type RPAREN [ LBRACKETAT EQUAL COMMA COLONCOLON COLON BAR AS ]
## simple_pattern_not_ident -> LPAREN . pattern COLON core_type error [ LBRACKETAT EQUAL COMMA COLONCOLON COLON BAR AS ]
## simple_pattern_not_ident -> LPAREN . pattern COLON error [ LBRACKETAT EQUAL COMMA COLONCOLON COLON BAR AS ]
## simple_pattern_not_ident -> LPAREN . MODULE ext list(attribute) module_name COLON module_type error [ LBRACKETAT EQUAL COMMA COLONCOLON COLON BAR AS ]
## val_extra_ident -> LPAREN . operator RPAREN [ error VAL UNDERSCORE UIDENT TYPE TRUE TILDE STRING SEMISEMI QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL OPEN MODULE MINUS LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACE LABEL INT INCLUDE IN HASH FLOAT FALSE EXTERNAL EXCEPTION EQUAL END COMMA COLONGREATER COLONCOLON COLON CLASS CHAR BAR BACKQUOTE AS AND ]
## val_extra_ident -> LPAREN . operator error [ error VAL UNDERSCORE UIDENT TYPE TRUE TILDE STRING SEMISEMI QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL OPEN MODULE MINUS LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACE LABEL INT INCLUDE IN HASH FLOAT FALSE EXTERNAL EXCEPTION EQUAL END COMMA COLONGREATER COLONCOLON COLON CLASS CHAR BAR BACKQUOTE AS AND ]
## val_extra_ident -> LPAREN . error [ error VAL UNDERSCORE UIDENT TYPE TRUE TILDE STRING SEMISEMI QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL OPEN MODULE MINUS LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACE LABEL INT INCLUDE IN HASH FLOAT FALSE EXTERNAL EXCEPTION EQUAL END COMMA COLONGREATER COLONCOLON COLON CLASS CHAR BAR BACKQUOTE AS AND ]
## val_extra_ident -> LPAREN . MODULE error [ error VAL UNDERSCORE UIDENT TYPE TRUE TILDE STRING SEMISEMI QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL OPEN MODULE MINUS LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACE LABEL INT INCLUDE IN HASH FLOAT FALSE EXTERNAL EXCEPTION EQUAL END COMMA COLONGREATER COLONCOLON COLON CLASS CHAR BAR BACKQUOTE AS AND ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT LET LPAREN MODULE WITH
##
## Concrete syntax: include struct let ( module with
##
## Ends in an error in state: 2558.
##
## simple_pattern_not_ident -> LPAREN MODULE . ext list(attribute) module_name RPAREN [ LBRACKETAT EQUAL COMMA COLONCOLON COLON BAR AS ]
## simple_pattern_not_ident -> LPAREN MODULE . ext list(attribute) module_name COLON module_type RPAREN [ LBRACKETAT EQUAL COMMA COLONCOLON COLON BAR AS ]
## simple_pattern_not_ident -> LPAREN MODULE . ext list(attribute) module_name COLON module_type error [ LBRACKETAT EQUAL COMMA COLONCOLON COLON BAR AS ]
## val_extra_ident -> LPAREN MODULE . error [ error VAL UNDERSCORE UIDENT TYPE TRUE TILDE STRING SEMISEMI QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL OPEN MODULE MINUS LPAREN LIDENT LET LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACE LABEL INT INCLUDE IN HASH FLOAT FALSE EXTERNAL EXCEPTION EQUAL END COMMA COLONGREATER COLONCOLON COLON CLASS CHAR BAR BACKQUOTE AS AND ]
##
## The known suffix of the stack is as follows:
## LPAREN MODULE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT LET LIDENT WITH
##
## Concrete syntax: include struct let lident with
##
## Ends in an error in state: 2559.
##
## let_binding_body -> val_ident . [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN EXTERNAL EXCEPTION END CLASS AND ]
## let_binding_body_no_punning -> val_ident . strict_binding [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN EXTERNAL EXCEPTION END CLASS AND ]
## let_binding_body_no_punning -> val_ident . type_constraint EQUAL seq_expr [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN EXTERNAL EXCEPTION END CLASS AND ]
## let_binding_body_no_punning -> val_ident . COLON reversed_nonempty_llist(typevar) DOT core_type EQUAL seq_expr [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN EXTERNAL EXCEPTION END CLASS AND ]
## let_binding_body_no_punning -> val_ident . COLON TYPE nonempty_list(mkrhs(LIDENT)) DOT core_type EQUAL seq_expr [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN EXTERNAL EXCEPTION END CLASS AND ]
## simple_pattern -> val_ident . [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
##
## The known suffix of the stack is as follows:
## val_ident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT LET LIDENT COLON WITH
##
## Concrete syntax: include struct let lident : with
##
## Ends in an error in state: 2560.
##
## let_binding_body_no_punning -> val_ident COLON . reversed_nonempty_llist(typevar) DOT core_type EQUAL seq_expr [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN EXTERNAL EXCEPTION END CLASS AND ]
## let_binding_body_no_punning -> val_ident COLON . TYPE nonempty_list(mkrhs(LIDENT)) DOT core_type EQUAL seq_expr [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN EXTERNAL EXCEPTION END CLASS AND ]
## type_constraint -> COLON . core_type [ EQUAL ]
## type_constraint -> COLON . core_type COLONGREATER core_type [ EQUAL ]
## type_constraint -> COLON . error [ EQUAL ]
##
## The known suffix of the stack is as follows:
## val_ident COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT LET LIDENT COLON TYPE WITH
##
## Concrete syntax: include struct let lident : type with
##
## Ends in an error in state: 2561.
##
## let_binding_body_no_punning -> val_ident COLON TYPE . nonempty_list(mkrhs(LIDENT)) DOT core_type EQUAL seq_expr [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## val_ident COLON TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT LET LIDENT COLON TYPE LIDENT RPAREN
##
## Concrete syntax: include struct let lident : type lident )
##
## Ends in an error in state: 2562.
##
## let_binding_body_no_punning -> val_ident COLON TYPE nonempty_list(mkrhs(LIDENT)) . DOT core_type EQUAL seq_expr [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## val_ident COLON TYPE nonempty_list(mkrhs(LIDENT))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 750, spurious reduction of production nonempty_list(mkrhs(LIDENT)) -> LIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT LET LIDENT COLON TYPE LIDENT DOT WITH
##
## Concrete syntax: include struct let lident : type lident . with
##
## Ends in an error in state: 2563.
##
## let_binding_body_no_punning -> val_ident COLON TYPE nonempty_list(mkrhs(LIDENT)) DOT . core_type EQUAL seq_expr [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## val_ident COLON TYPE nonempty_list(mkrhs(LIDENT)) DOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT LET LIDENT COLON TYPE LIDENT DOT QUOTED_STRING_EXPR WITH
##
## Concrete syntax: include struct let lident : type lident . {%hello|world|} with
##
## Ends in an error in state: 2564.
##
## core_type -> core_type . attribute [ LBRACKETAT EQUAL ]
## let_binding_body_no_punning -> val_ident COLON TYPE nonempty_list(mkrhs(LIDENT)) DOT core_type . EQUAL seq_expr [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## val_ident COLON TYPE nonempty_list(mkrhs(LIDENT)) DOT core_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 358, spurious reduction of production tuple_type -> atomic_type
## In state 344, spurious reduction of production function_type -> tuple_type
## In state 374, spurious reduction of production alias_type -> function_type
## In state 384, spurious reduction of production core_type -> alias_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT LET LIDENT COLON TYPE LIDENT DOT QUOTED_STRING_EXPR EQUAL WITH
##
## Concrete syntax: include struct let lident : type lident . {%hello|world|} = with
##
## Ends in an error in state: 2565.
##
## let_binding_body_no_punning -> val_ident COLON TYPE nonempty_list(mkrhs(LIDENT)) DOT core_type EQUAL . seq_expr [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## val_ident COLON TYPE nonempty_list(mkrhs(LIDENT)) DOT core_type EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT LET LIDENT COLON QUOTE LIDENT QUOTE LIDENT WITH
##
## Concrete syntax: include struct let lident : ' lident ' lident with
##
## Ends in an error in state: 2567.
##
## let_binding_body_no_punning -> val_ident COLON reversed_nonempty_llist(typevar) . DOT core_type EQUAL seq_expr [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN EXTERNAL EXCEPTION END CLASS AND ]
## reversed_nonempty_llist(typevar) -> reversed_nonempty_llist(typevar) . QUOTE ident [ QUOTE DOT ]
##
## The known suffix of the stack is as follows:
## val_ident COLON reversed_nonempty_llist(typevar)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT LET LIDENT COLON QUOTE LIDENT DOT WITH
##
## Concrete syntax: include struct let lident : ' lident . with
##
## Ends in an error in state: 2568.
##
## let_binding_body_no_punning -> val_ident COLON reversed_nonempty_llist(typevar) DOT . core_type EQUAL seq_expr [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## val_ident COLON reversed_nonempty_llist(typevar) DOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT LET LIDENT COLON QUOTE LIDENT DOT QUOTED_STRING_EXPR WITH
##
## Concrete syntax: include struct let lident : ' lident . {%hello|world|} with
##
## Ends in an error in state: 2569.
##
## core_type -> core_type . attribute [ LBRACKETAT EQUAL ]
## let_binding_body_no_punning -> val_ident COLON reversed_nonempty_llist(typevar) DOT core_type . EQUAL seq_expr [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## val_ident COLON reversed_nonempty_llist(typevar) DOT core_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 358, spurious reduction of production tuple_type -> atomic_type
## In state 344, spurious reduction of production function_type -> tuple_type
## In state 374, spurious reduction of production alias_type -> function_type
## In state 384, spurious reduction of production core_type -> alias_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT LET LIDENT COLON QUOTE LIDENT DOT QUOTED_STRING_EXPR EQUAL WITH
##
## Concrete syntax: include struct let lident : ' lident . {%hello|world|} = with
##
## Ends in an error in state: 2570.
##
## let_binding_body_no_punning -> val_ident COLON reversed_nonempty_llist(typevar) DOT core_type EQUAL . seq_expr [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## val_ident COLON reversed_nonempty_llist(typevar) DOT core_type EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT LET LIDENT COLON QUOTED_STRING_EXPR RPAREN
##
## Concrete syntax: include struct let lident : {%hello|world|} )
##
## Ends in an error in state: 2572.
##
## let_binding_body_no_punning -> val_ident type_constraint . EQUAL seq_expr [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## val_ident type_constraint
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 358, spurious reduction of production tuple_type -> atomic_type
## In state 344, spurious reduction of production function_type -> tuple_type
## In state 374, spurious reduction of production alias_type -> function_type
## In state 384, spurious reduction of production core_type -> alias_type
## In state 1234, spurious reduction of production type_constraint -> COLON core_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT LET LIDENT COLON QUOTED_STRING_EXPR EQUAL WITH
##
## Concrete syntax: include struct let lident : {%hello|world|} = with
##
## Ends in an error in state: 2573.
##
## let_binding_body_no_punning -> val_ident type_constraint EQUAL . seq_expr [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## val_ident type_constraint EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT LET FALSE WHEN
##
## Concrete syntax: include struct let false when
##
## Ends in an error in state: 2576.
##
## let_binding_body_no_punning -> simple_pattern_not_ident . COLON core_type EQUAL seq_expr [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN EXTERNAL EXCEPTION END CLASS AND ]
## simple_pattern -> simple_pattern_not_ident . [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
##
## The known suffix of the stack is as follows:
## simple_pattern_not_ident
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 914, spurious reduction of production simple_pattern_not_ident -> constr_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT LET FALSE COLON WITH
##
## Concrete syntax: include struct let false : with
##
## Ends in an error in state: 2577.
##
## let_binding_body_no_punning -> simple_pattern_not_ident COLON . core_type EQUAL seq_expr [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## simple_pattern_not_ident COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT LET FALSE COLON QUOTED_STRING_EXPR WITH
##
## Concrete syntax: include struct let false : {%hello|world|} with
##
## Ends in an error in state: 2578.
##
## core_type -> core_type . attribute [ LBRACKETAT EQUAL ]
## let_binding_body_no_punning -> simple_pattern_not_ident COLON core_type . EQUAL seq_expr [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## simple_pattern_not_ident COLON core_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 358, spurious reduction of production tuple_type -> atomic_type
## In state 344, spurious reduction of production function_type -> tuple_type
## In state 374, spurious reduction of production alias_type -> function_type
## In state 384, spurious reduction of production core_type -> alias_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT LET FALSE COLON QUOTED_STRING_EXPR EQUAL WITH
##
## Concrete syntax: include struct let false : {%hello|world|} = with
##
## Ends in an error in state: 2579.
##
## let_binding_body_no_punning -> simple_pattern_not_ident COLON core_type EQUAL . seq_expr [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## simple_pattern_not_ident COLON core_type EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT LET FALSE QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: include struct let false {%hello|world|} while
##
## Ends in an error in state: 2581.
##
## let_binding_body_no_punning -> pattern_no_exn . EQUAL seq_expr [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN EXTERNAL EXCEPTION END CLASS AND ]
## pattern_comma_list(pattern_no_exn) -> pattern_no_exn . COMMA pattern [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern_comma_list(pattern_no_exn) -> pattern_no_exn . COMMA error [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern_no_exn -> pattern_no_exn . COLONCOLON pattern [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern_no_exn -> pattern_no_exn . attribute [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern_no_exn -> pattern_no_exn . AS val_ident [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern_no_exn -> pattern_no_exn . AS error [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern_no_exn -> pattern_no_exn . COLONCOLON error [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern_no_exn -> pattern_no_exn . BAR pattern [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
## pattern_no_exn -> pattern_no_exn . BAR error [ LBRACKETAT EQUAL COMMA COLONCOLON BAR AS ]
##
## The known suffix of the stack is as follows:
## pattern_no_exn
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT LET FALSE EQUAL WITH
##
## Concrete syntax: include struct let false = with
##
## Ends in an error in state: 2582.
##
## let_binding_body_no_punning -> pattern_no_exn EQUAL . seq_expr [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE IN EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## pattern_no_exn EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT LET FALSE EQUAL UIDENT RPAREN
##
## Concrete syntax: include struct let false = UIdent )
##
## Ends in an error in state: 2585.
##
## let_bindings(ext) -> LET ext list(attribute) rec_flag let_binding_body . list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE IN EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## LET ext list(attribute) rec_flag let_binding_body
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1048, spurious reduction of production constr_longident -> mod_longident
## In state 1101, spurious reduction of production simple_expr -> constr_longident
## In state 1074, spurious reduction of production expr -> simple_expr
## In state 1095, spurious reduction of production seq_expr -> expr
## In state 2583, spurious reduction of production let_binding_body_no_punning -> pattern_no_exn EQUAL seq_expr
## In state 2584, spurious reduction of production let_binding_body -> let_binding_body_no_punning
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT INCLUDE WITH
##
## Concrete syntax: include struct include with
##
## Ends in an error in state: 2587.
##
## structure_item -> INCLUDE . ext list(attribute) module_expr list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## INCLUDE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT INCLUDE PERCENT AND WHILE
##
## Concrete syntax: include struct include % and while
##
## Ends in an error in state: 2588.
##
## structure_item -> INCLUDE ext . list(attribute) module_expr list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## INCLUDE ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT INCLUDE LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: include struct include [@ and ] while
##
## Ends in an error in state: 2589.
##
## structure_item -> INCLUDE ext list(attribute) . module_expr list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## INCLUDE ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT INCLUDE QUOTED_STRING_EXPR WITH
##
## Concrete syntax: include struct include {%hello|world|} with
##
## Ends in an error in state: 2590.
##
## module_expr -> module_expr . attribute [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
## module_expr -> module_expr . paren_module_expr [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
## module_expr -> module_expr . LPAREN RPAREN [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
## structure_item -> INCLUDE ext list(attribute) module_expr . list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## INCLUDE ext list(attribute) module_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT EXTERNAL WITH
##
## Concrete syntax: include struct external with
##
## Ends in an error in state: 2592.
##
## primitive_declaration -> EXTERNAL . ext list(attribute) val_ident COLON core_type EQUAL nonempty_list(raw_string) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## EXTERNAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT EXTERNAL PERCENT AND WHILE
##
## Concrete syntax: include struct external % and while
##
## Ends in an error in state: 2593.
##
## primitive_declaration -> EXTERNAL ext . list(attribute) val_ident COLON core_type EQUAL nonempty_list(raw_string) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## EXTERNAL ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT EXTERNAL LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: include struct external [@ and ] while
##
## Ends in an error in state: 2594.
##
## primitive_declaration -> EXTERNAL ext list(attribute) . val_ident COLON core_type EQUAL nonempty_list(raw_string) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## EXTERNAL ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT EXTERNAL LIDENT WITH
##
## Concrete syntax: include struct external lident with
##
## Ends in an error in state: 2595.
##
## primitive_declaration -> EXTERNAL ext list(attribute) val_ident . COLON core_type EQUAL nonempty_list(raw_string) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## EXTERNAL ext list(attribute) val_ident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT EXTERNAL LIDENT COLON WITH
##
## Concrete syntax: include struct external lident : with
##
## Ends in an error in state: 2596.
##
## primitive_declaration -> EXTERNAL ext list(attribute) val_ident COLON . core_type EQUAL nonempty_list(raw_string) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## EXTERNAL ext list(attribute) val_ident COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT EXTERNAL LIDENT COLON QUOTED_STRING_EXPR WITH
##
## Concrete syntax: include struct external lident : {%hello|world|} with
##
## Ends in an error in state: 2597.
##
## core_type -> core_type . attribute [ LBRACKETAT EQUAL ]
## primitive_declaration -> EXTERNAL ext list(attribute) val_ident COLON core_type . EQUAL nonempty_list(raw_string) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## EXTERNAL ext list(attribute) val_ident COLON core_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 358, spurious reduction of production tuple_type -> atomic_type
## In state 344, spurious reduction of production function_type -> tuple_type
## In state 374, spurious reduction of production alias_type -> function_type
## In state 384, spurious reduction of production core_type -> alias_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT EXTERNAL LIDENT COLON QUOTED_STRING_EXPR EQUAL WITH
##
## Concrete syntax: include struct external lident : {%hello|world|} = with
##
## Ends in an error in state: 2598.
##
## primitive_declaration -> EXTERNAL ext list(attribute) val_ident COLON core_type EQUAL . nonempty_list(raw_string) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## EXTERNAL ext list(attribute) val_ident COLON core_type EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT EXTERNAL LIDENT COLON QUOTED_STRING_EXPR EQUAL STRING WITH
##
## Concrete syntax: include struct external lident : {%hello|world|} = "hello" with
##
## Ends in an error in state: 2599.
##
## nonempty_list(raw_string) -> STRING . [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
## nonempty_list(raw_string) -> STRING . nonempty_list(raw_string) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## STRING
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT EXCEPTION WITH
##
## Concrete syntax: include struct exception with
##
## Ends in an error in state: 2603.
##
## sig_exception_declaration -> EXCEPTION . ext list(attribute) constr_ident generalized_constructor_arguments list(attribute) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
## str_exception_declaration -> EXCEPTION . ext list(attribute) constr_ident EQUAL constr_longident list(attribute) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## EXCEPTION
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT EXCEPTION PERCENT AND WHILE
##
## Concrete syntax: include struct exception % and while
##
## Ends in an error in state: 2604.
##
## sig_exception_declaration -> EXCEPTION ext . list(attribute) constr_ident generalized_constructor_arguments list(attribute) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
## str_exception_declaration -> EXCEPTION ext . list(attribute) constr_ident EQUAL constr_longident list(attribute) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## EXCEPTION ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT EXCEPTION LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: include struct exception [@ and ] while
##
## Ends in an error in state: 2605.
##
## sig_exception_declaration -> EXCEPTION ext list(attribute) . constr_ident generalized_constructor_arguments list(attribute) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
## str_exception_declaration -> EXCEPTION ext list(attribute) . constr_ident EQUAL constr_longident list(attribute) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## EXCEPTION ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT EXCEPTION LPAREN WITH
##
## Concrete syntax: include struct exception ( with
##
## Ends in an error in state: 2607.
##
## constr_extra_nonprefix_ident -> LPAREN . RPAREN [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN OF MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL END CONSTRAINT COLON CLASS BAR AND ]
## constr_ident -> LPAREN . COLONCOLON RPAREN [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN OF MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL END CONSTRAINT COLON CLASS BAR AND ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT EXCEPTION LBRACKET WITH
##
## Concrete syntax: include struct exception [ with
##
## Ends in an error in state: 2608.
##
## constr_extra_nonprefix_ident -> LBRACKET . RBRACKET [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN OF MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL END CONSTRAINT COLON CLASS BAR AND ]
##
## The known suffix of the stack is as follows:
## LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT EXCEPTION FALSE WITH
##
## Concrete syntax: include struct exception false with
##
## Ends in an error in state: 2609.
##
## sig_exception_declaration -> EXCEPTION ext list(attribute) constr_ident . generalized_constructor_arguments list(attribute) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
## str_exception_declaration -> EXCEPTION ext list(attribute) constr_ident . EQUAL constr_longident list(attribute) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## EXCEPTION ext list(attribute) constr_ident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT EXCEPTION FALSE OF WITH
##
## Concrete syntax: include struct exception false of with
##
## Ends in an error in state: 2610.
##
## generalized_constructor_arguments -> OF . constructor_arguments [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS BAR AND ]
##
## The known suffix of the stack is as follows:
## OF
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT EXCEPTION FALSE OF LBRACE WITH
##
## Concrete syntax: include struct exception false of { with
##
## Ends in an error in state: 2611.
##
## constructor_arguments -> LBRACE . label_declarations RBRACE [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS BAR AND ]
##
## The known suffix of the stack is as follows:
## LBRACE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT EXCEPTION FALSE OF QUOTED_STRING_EXPR STAR WITH
##
## Concrete syntax: include struct exception false of {%hello|world|} * with
##
## Ends in an error in state: 2615.
##
## constructor_arguments -> reversed_separated_nonempty_llist(STAR,atomic_type) STAR . atomic_type [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS BAR AND ]
## reversed_separated_nonempty_llist(STAR,atomic_type) -> reversed_separated_nonempty_llist(STAR,atomic_type) STAR . atomic_type [ STAR ]
##
## The known suffix of the stack is as follows:
## reversed_separated_nonempty_llist(STAR,atomic_type) STAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT EXCEPTION FALSE OF QUOTED_STRING_EXPR STAR QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: include struct exception false of {%hello|world|} * {%hello|world|} while
##
## Ends in an error in state: 2616.
##
## atomic_type -> atomic_type . type_longident [ error VAL UIDENT TYPE STAR SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION END CONSTRAINT CLASS BAR AND ]
## atomic_type -> atomic_type . HASH clty_longident [ error VAL UIDENT TYPE STAR SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION END CONSTRAINT CLASS BAR AND ]
## constructor_arguments -> reversed_separated_nonempty_llist(STAR,atomic_type) STAR atomic_type . [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS BAR AND ]
## reversed_separated_nonempty_llist(STAR,atomic_type) -> reversed_separated_nonempty_llist(STAR,atomic_type) STAR atomic_type . [ STAR ]
##
## The known suffix of the stack is as follows:
## reversed_separated_nonempty_llist(STAR,atomic_type) STAR atomic_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT EXCEPTION FALSE OF QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: include struct exception false of {%hello|world|} while
##
## Ends in an error in state: 2618.
##
## atomic_type -> atomic_type . type_longident [ error VAL UIDENT TYPE STAR SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION END CONSTRAINT CLASS BAR AND ]
## atomic_type -> atomic_type . HASH clty_longident [ error VAL UIDENT TYPE STAR SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION END CONSTRAINT CLASS BAR AND ]
## constructor_arguments -> atomic_type . [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS BAR AND ]
## reversed_separated_nonempty_llist(STAR,atomic_type) -> atomic_type . [ STAR ]
##
## The known suffix of the stack is as follows:
## atomic_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT EXCEPTION FALSE EQUAL WITH
##
## Concrete syntax: include struct exception false = with
##
## Ends in an error in state: 2619.
##
## str_exception_declaration -> EXCEPTION ext list(attribute) constr_ident EQUAL . constr_longident list(attribute) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## EXCEPTION ext list(attribute) constr_ident EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT EXCEPTION FALSE EQUAL LPAREN WITH
##
## Concrete syntax: include struct exception false = ( with
##
## Ends in an error in state: 2620.
##
## constr_extra_nonprefix_ident -> LPAREN . RPAREN [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS BAR ]
## constr_longident -> LPAREN . COLONCOLON RPAREN [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS BAR ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT EXCEPTION FALSE EQUAL UIDENT WITH
##
## Concrete syntax: include struct exception false = UIdent with
##
## Ends in an error in state: 2621.
##
## constr_longident -> mod_longident . [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS BAR ]
## constr_longident -> mod_longident . DOT LPAREN COLONCOLON RPAREN [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS BAR ]
## mk_longident(mod_longident,UIDENT) -> mod_longident . DOT UIDENT [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END DOT CLASS BAR ]
##
## The known suffix of the stack is as follows:
## mod_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT EXCEPTION FALSE EQUAL UIDENT DOT WITH
##
## Concrete syntax: include struct exception false = UIdent . with
##
## Ends in an error in state: 2622.
##
## constr_longident -> mod_longident DOT . LPAREN COLONCOLON RPAREN [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS BAR ]
## mk_longident(mod_longident,UIDENT) -> mod_longident DOT . UIDENT [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END DOT CLASS BAR ]
##
## The known suffix of the stack is as follows:
## mod_longident DOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT EXCEPTION FALSE EQUAL UIDENT DOT LPAREN WITH
##
## Concrete syntax: include struct exception false = UIdent . ( with
##
## Ends in an error in state: 2623.
##
## constr_longident -> mod_longident DOT LPAREN . COLONCOLON RPAREN [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS BAR ]
##
## The known suffix of the stack is as follows:
## mod_longident DOT LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT EXCEPTION FALSE EQUAL UIDENT BAR
##
## Concrete syntax: include struct exception false = UIdent |
##
## Ends in an error in state: 2624.
##
## str_exception_declaration -> EXCEPTION ext list(attribute) constr_ident EQUAL constr_longident . list(attribute) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## EXCEPTION ext list(attribute) constr_ident EQUAL constr_longident
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 2621, spurious reduction of production constr_longident -> mod_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT EXCEPTION FALSE EQUAL UIDENT LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: include struct exception false = UIdent [@ and ] while
##
## Ends in an error in state: 2625.
##
## str_exception_declaration -> EXCEPTION ext list(attribute) constr_ident EQUAL constr_longident list(attribute) . list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## EXCEPTION ext list(attribute) constr_ident EQUAL constr_longident list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1700, spurious reduction of production list(attribute) ->
## In state 1701, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT EXCEPTION FALSE COLON WITH
##
## Concrete syntax: include struct exception false : with
##
## Ends in an error in state: 2627.
##
## generalized_constructor_arguments -> COLON . constructor_arguments MINUSGREATER atomic_type [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS BAR AND ]
## generalized_constructor_arguments -> COLON . atomic_type [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS BAR AND ]
##
## The known suffix of the stack is as follows:
## COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT EXCEPTION FALSE COLON QUOTED_STRING_EXPR STAR QUOTED_STRING_EXPR VAL
##
## Concrete syntax: include struct exception false : {%hello|world|} * {%hello|world|} val
##
## Ends in an error in state: 2628.
##
## generalized_constructor_arguments -> COLON constructor_arguments . MINUSGREATER atomic_type [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS BAR AND ]
##
## The known suffix of the stack is as follows:
## COLON constructor_arguments
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1380, spurious reduction of production constructor_arguments -> reversed_separated_nonempty_llist(STAR,atomic_type) STAR atomic_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT EXCEPTION FALSE COLON QUOTED_STRING_EXPR MINUSGREATER WITH
##
## Concrete syntax: include struct exception false : {%hello|world|} -> with
##
## Ends in an error in state: 2629.
##
## generalized_constructor_arguments -> COLON constructor_arguments MINUSGREATER . atomic_type [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS BAR AND ]
##
## The known suffix of the stack is as follows:
## COLON constructor_arguments MINUSGREATER
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT EXCEPTION FALSE COLON QUOTED_STRING_EXPR MINUSGREATER QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: include struct exception false : {%hello|world|} -> {%hello|world|} while
##
## Ends in an error in state: 2630.
##
## atomic_type -> atomic_type . type_longident [ error VAL UIDENT TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION END CONSTRAINT CLASS BAR AND ]
## atomic_type -> atomic_type . HASH clty_longident [ error VAL UIDENT TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION END CONSTRAINT CLASS BAR AND ]
## generalized_constructor_arguments -> COLON constructor_arguments MINUSGREATER atomic_type . [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS BAR AND ]
##
## The known suffix of the stack is as follows:
## COLON constructor_arguments MINUSGREATER atomic_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT EXCEPTION FALSE COLON QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: include struct exception false : {%hello|world|} while
##
## Ends in an error in state: 2631.
##
## atomic_type -> atomic_type . type_longident [ error VAL UIDENT TYPE STAR SEMISEMI QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION END CONSTRAINT CLASS BAR AND ]
## atomic_type -> atomic_type . HASH clty_longident [ error VAL UIDENT TYPE STAR SEMISEMI QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION END CONSTRAINT CLASS BAR AND ]
## constructor_arguments -> atomic_type . [ MINUSGREATER ]
## generalized_constructor_arguments -> COLON atomic_type . [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS BAR AND ]
## reversed_separated_nonempty_llist(STAR,atomic_type) -> atomic_type . [ STAR ]
##
## The known suffix of the stack is as follows:
## COLON atomic_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT EXCEPTION FALSE COLON QUOTED_STRING_EXPR CONSTRAINT
##
## Concrete syntax: include struct exception false : {%hello|world|} constraint
##
## Ends in an error in state: 2632.
##
## sig_exception_declaration -> EXCEPTION ext list(attribute) constr_ident generalized_constructor_arguments . list(attribute) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## EXCEPTION ext list(attribute) constr_ident generalized_constructor_arguments
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 2631, spurious reduction of production generalized_constructor_arguments -> COLON atomic_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT EXCEPTION FALSE LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: include struct exception false [@ and ] while
##
## Ends in an error in state: 2633.
##
## sig_exception_declaration -> EXCEPTION ext list(attribute) constr_ident generalized_constructor_arguments list(attribute) . list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## EXCEPTION ext list(attribute) constr_ident generalized_constructor_arguments list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1700, spurious reduction of production list(attribute) ->
## In state 1701, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT CLASS WITH
##
## Concrete syntax: include struct class with
##
## Ends in an error in state: 2636.
##
## class_type_declarations -> CLASS . TYPE ext list(attribute) virtual_flag formal_class_parameters LIDENT EQUAL class_signature list(post_item_attribute) list(and_class_type_declaration) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
## structure_item -> CLASS . ext list(attribute) virtual_flag formal_class_parameters LIDENT class_fun_binding list(post_item_attribute) list(and_class_declaration) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## CLASS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT CLASS TYPE WITH
##
## Concrete syntax: include struct class type with
##
## Ends in an error in state: 2637.
##
## class_type_declarations -> CLASS TYPE . ext list(attribute) virtual_flag formal_class_parameters LIDENT EQUAL class_signature list(post_item_attribute) list(and_class_type_declaration) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## CLASS TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT CLASS TYPE PERCENT AND WHILE
##
## Concrete syntax: include struct class type % and while
##
## Ends in an error in state: 2638.
##
## class_type_declarations -> CLASS TYPE ext . list(attribute) virtual_flag formal_class_parameters LIDENT EQUAL class_signature list(post_item_attribute) list(and_class_type_declaration) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## CLASS TYPE ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT CLASS TYPE LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: include struct class type [@ and ] while
##
## Ends in an error in state: 2639.
##
## class_type_declarations -> CLASS TYPE ext list(attribute) . virtual_flag formal_class_parameters LIDENT EQUAL class_signature list(post_item_attribute) list(and_class_type_declaration) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## CLASS TYPE ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT CLASS TYPE VIRTUAL WITH
##
## Concrete syntax: include struct class type virtual with
##
## Ends in an error in state: 2640.
##
## class_type_declarations -> CLASS TYPE ext list(attribute) virtual_flag . formal_class_parameters LIDENT EQUAL class_signature list(post_item_attribute) list(and_class_type_declaration) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## CLASS TYPE ext list(attribute) virtual_flag
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT CLASS TYPE LBRACKET UNDERSCORE RBRACKET WITH
##
## Concrete syntax: include struct class type [ _ ] with
##
## Ends in an error in state: 2641.
##
## class_type_declarations -> CLASS TYPE ext list(attribute) virtual_flag formal_class_parameters . LIDENT EQUAL class_signature list(post_item_attribute) list(and_class_type_declaration) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## CLASS TYPE ext list(attribute) virtual_flag formal_class_parameters
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT CLASS TYPE LIDENT WITH
##
## Concrete syntax: include struct class type lident with
##
## Ends in an error in state: 2642.
##
## class_type_declarations -> CLASS TYPE ext list(attribute) virtual_flag formal_class_parameters LIDENT . EQUAL class_signature list(post_item_attribute) list(and_class_type_declaration) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## CLASS TYPE ext list(attribute) virtual_flag formal_class_parameters LIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT CLASS TYPE LIDENT EQUAL WITH
##
## Concrete syntax: include struct class type lident = with
##
## Ends in an error in state: 2643.
##
## class_type_declarations -> CLASS TYPE ext list(attribute) virtual_flag formal_class_parameters LIDENT EQUAL . class_signature list(post_item_attribute) list(and_class_type_declaration) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## CLASS TYPE ext list(attribute) virtual_flag formal_class_parameters LIDENT EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT CLASS TYPE LIDENT EQUAL LIDENT METHOD
##
## Concrete syntax: include struct class type lident = lident method
##
## Ends in an error in state: 2644.
##
## class_signature -> class_signature . attribute [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## class_type_declarations -> CLASS TYPE ext list(attribute) virtual_flag formal_class_parameters LIDENT EQUAL class_signature . list(post_item_attribute) list(and_class_type_declaration) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## CLASS TYPE ext list(attribute) virtual_flag formal_class_parameters LIDENT EQUAL class_signature
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT CLASS TYPE LIDENT EQUAL LIDENT LBRACKETATAT AND RBRACKET METHOD
##
## Concrete syntax: include struct class type lident = lident [@@ and ] method
##
## Ends in an error in state: 2645.
##
## class_type_declarations -> CLASS TYPE ext list(attribute) virtual_flag formal_class_parameters LIDENT EQUAL class_signature list(post_item_attribute) . list(and_class_type_declaration) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## CLASS TYPE ext list(attribute) virtual_flag formal_class_parameters LIDENT EQUAL class_signature list(post_item_attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1600, spurious reduction of production list(post_item_attribute) ->
## In state 1601, spurious reduction of production list(post_item_attribute) -> post_item_attribute list(post_item_attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT CLASS TYPE LIDENT EQUAL LIDENT AND WITH
##
## Concrete syntax: include struct class type lident = lident and with
##
## Ends in an error in state: 2646.
##
## list(and_class_type_declaration) -> AND . list(attribute) virtual_flag formal_class_parameters LIDENT EQUAL class_signature list(post_item_attribute) list(and_class_type_declaration) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## AND
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT CLASS TYPE LIDENT EQUAL LIDENT AND LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: include struct class type lident = lident and [@ and ] while
##
## Ends in an error in state: 2647.
##
## list(and_class_type_declaration) -> AND list(attribute) . virtual_flag formal_class_parameters LIDENT EQUAL class_signature list(post_item_attribute) list(and_class_type_declaration) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## AND list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT CLASS TYPE LIDENT EQUAL LIDENT AND VIRTUAL WITH
##
## Concrete syntax: include struct class type lident = lident and virtual with
##
## Ends in an error in state: 2648.
##
## list(and_class_type_declaration) -> AND list(attribute) virtual_flag . formal_class_parameters LIDENT EQUAL class_signature list(post_item_attribute) list(and_class_type_declaration) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## AND list(attribute) virtual_flag
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT CLASS TYPE LIDENT EQUAL LIDENT AND LBRACKET UNDERSCORE RBRACKET WITH
##
## Concrete syntax: include struct class type lident = lident and [ _ ] with
##
## Ends in an error in state: 2649.
##
## list(and_class_type_declaration) -> AND list(attribute) virtual_flag formal_class_parameters . LIDENT EQUAL class_signature list(post_item_attribute) list(and_class_type_declaration) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## AND list(attribute) virtual_flag formal_class_parameters
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT CLASS TYPE LIDENT EQUAL LIDENT AND LIDENT WITH
##
## Concrete syntax: include struct class type lident = lident and lident with
##
## Ends in an error in state: 2650.
##
## list(and_class_type_declaration) -> AND list(attribute) virtual_flag formal_class_parameters LIDENT . EQUAL class_signature list(post_item_attribute) list(and_class_type_declaration) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## AND list(attribute) virtual_flag formal_class_parameters LIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT CLASS TYPE LIDENT EQUAL LIDENT AND LIDENT EQUAL WITH
##
## Concrete syntax: include struct class type lident = lident and lident = with
##
## Ends in an error in state: 2651.
##
## list(and_class_type_declaration) -> AND list(attribute) virtual_flag formal_class_parameters LIDENT EQUAL . class_signature list(post_item_attribute) list(and_class_type_declaration) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## AND list(attribute) virtual_flag formal_class_parameters LIDENT EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT CLASS TYPE LIDENT EQUAL LIDENT AND LIDENT EQUAL LIDENT METHOD
##
## Concrete syntax: include struct class type lident = lident and lident = lident method
##
## Ends in an error in state: 2652.
##
## class_signature -> class_signature . attribute [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## list(and_class_type_declaration) -> AND list(attribute) virtual_flag formal_class_parameters LIDENT EQUAL class_signature . list(post_item_attribute) list(and_class_type_declaration) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## AND list(attribute) virtual_flag formal_class_parameters LIDENT EQUAL class_signature
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT CLASS TYPE LIDENT EQUAL LIDENT AND LIDENT EQUAL LIDENT LBRACKETATAT AND RBRACKET METHOD
##
## Concrete syntax: include struct class type lident = lident and lident = lident [@@ and ] method
##
## Ends in an error in state: 2653.
##
## list(and_class_type_declaration) -> AND list(attribute) virtual_flag formal_class_parameters LIDENT EQUAL class_signature list(post_item_attribute) . list(and_class_type_declaration) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## AND list(attribute) virtual_flag formal_class_parameters LIDENT EQUAL class_signature list(post_item_attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1600, spurious reduction of production list(post_item_attribute) ->
## In state 1601, spurious reduction of production list(post_item_attribute) -> post_item_attribute list(post_item_attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT CLASS PERCENT AND WHILE
##
## Concrete syntax: include struct class % and while
##
## Ends in an error in state: 2656.
##
## structure_item -> CLASS ext . list(attribute) virtual_flag formal_class_parameters LIDENT class_fun_binding list(post_item_attribute) list(and_class_declaration) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## CLASS ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT CLASS LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: include struct class [@ and ] while
##
## Ends in an error in state: 2657.
##
## structure_item -> CLASS ext list(attribute) . virtual_flag formal_class_parameters LIDENT class_fun_binding list(post_item_attribute) list(and_class_declaration) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## CLASS ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT CLASS VIRTUAL WITH
##
## Concrete syntax: include struct class virtual with
##
## Ends in an error in state: 2658.
##
## structure_item -> CLASS ext list(attribute) virtual_flag . formal_class_parameters LIDENT class_fun_binding list(post_item_attribute) list(and_class_declaration) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## CLASS ext list(attribute) virtual_flag
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT CLASS LBRACKET UNDERSCORE RBRACKET WITH
##
## Concrete syntax: include struct class [ _ ] with
##
## Ends in an error in state: 2659.
##
## structure_item -> CLASS ext list(attribute) virtual_flag formal_class_parameters . LIDENT class_fun_binding list(post_item_attribute) list(and_class_declaration) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## CLASS ext list(attribute) virtual_flag formal_class_parameters
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT CLASS LIDENT WITH
##
## Concrete syntax: include struct class lident with
##
## Ends in an error in state: 2660.
##
## structure_item -> CLASS ext list(attribute) virtual_flag formal_class_parameters LIDENT . class_fun_binding list(post_item_attribute) list(and_class_declaration) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## CLASS ext list(attribute) virtual_flag formal_class_parameters LIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT CLASS LIDENT EQUAL WITH
##
## Concrete syntax: include struct class lident = with
##
## Ends in an error in state: 2661.
##
## class_fun_binding -> EQUAL . class_expr [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT CLASS LIDENT EQUAL QUOTED_STRING_EXPR WITH
##
## Concrete syntax: include struct class lident = {%hello|world|} with
##
## Ends in an error in state: 2662.
##
## class_expr -> class_expr . attribute [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## class_fun_binding -> EQUAL class_expr . [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## EQUAL class_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT CLASS LIDENT COLON WITH
##
## Concrete syntax: include struct class lident : with
##
## Ends in an error in state: 2663.
##
## class_fun_binding -> COLON . class_type EQUAL class_expr [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT CLASS LIDENT COLON QUOTED_STRING_EXPR VAL
##
## Concrete syntax: include struct class lident : {%hello|world|} val
##
## Ends in an error in state: 2664.
##
## class_fun_binding -> COLON class_type . EQUAL class_expr [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## COLON class_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1910, spurious reduction of production class_signature -> extension
## In state 1912, spurious reduction of production class_type -> class_signature
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT CLASS LIDENT COLON QUOTED_STRING_EXPR EQUAL WITH
##
## Concrete syntax: include struct class lident : {%hello|world|} = with
##
## Ends in an error in state: 2665.
##
## class_fun_binding -> COLON class_type EQUAL . class_expr [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## COLON class_type EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT CLASS LIDENT COLON QUOTED_STRING_EXPR EQUAL QUOTED_STRING_EXPR WITH
##
## Concrete syntax: include struct class lident : {%hello|world|} = {%hello|world|} with
##
## Ends in an error in state: 2666.
##
## class_expr -> class_expr . attribute [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## class_fun_binding -> COLON class_type EQUAL class_expr . [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## COLON class_type EQUAL class_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT CLASS LIDENT FALSE WHILE
##
## Concrete syntax: include struct class lident false while
##
## Ends in an error in state: 2667.
##
## class_fun_binding -> labeled_simple_pattern . class_fun_binding [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## labeled_simple_pattern
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT CLASS LIDENT EQUAL LIDENT LBRACKETATAT AND RBRACKET METHOD
##
## Concrete syntax: include struct class lident = lident [@@ and ] method
##
## Ends in an error in state: 2670.
##
## structure_item -> CLASS ext list(attribute) virtual_flag formal_class_parameters LIDENT class_fun_binding list(post_item_attribute) . list(and_class_declaration) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## CLASS ext list(attribute) virtual_flag formal_class_parameters LIDENT class_fun_binding list(post_item_attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1600, spurious reduction of production list(post_item_attribute) ->
## In state 1601, spurious reduction of production list(post_item_attribute) -> post_item_attribute list(post_item_attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT CLASS LIDENT EQUAL LIDENT AND WITH
##
## Concrete syntax: include struct class lident = lident and with
##
## Ends in an error in state: 2671.
##
## list(and_class_declaration) -> AND . list(attribute) virtual_flag formal_class_parameters LIDENT class_fun_binding list(post_item_attribute) list(and_class_declaration) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## AND
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT CLASS LIDENT EQUAL LIDENT AND LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: include struct class lident = lident and [@ and ] while
##
## Ends in an error in state: 2672.
##
## list(and_class_declaration) -> AND list(attribute) . virtual_flag formal_class_parameters LIDENT class_fun_binding list(post_item_attribute) list(and_class_declaration) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## AND list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT CLASS LIDENT EQUAL LIDENT AND VIRTUAL WITH
##
## Concrete syntax: include struct class lident = lident and virtual with
##
## Ends in an error in state: 2673.
##
## list(and_class_declaration) -> AND list(attribute) virtual_flag . formal_class_parameters LIDENT class_fun_binding list(post_item_attribute) list(and_class_declaration) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## AND list(attribute) virtual_flag
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT CLASS LIDENT EQUAL LIDENT AND LBRACKET UNDERSCORE RBRACKET WITH
##
## Concrete syntax: include struct class lident = lident and [ _ ] with
##
## Ends in an error in state: 2674.
##
## list(and_class_declaration) -> AND list(attribute) virtual_flag formal_class_parameters . LIDENT class_fun_binding list(post_item_attribute) list(and_class_declaration) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## AND list(attribute) virtual_flag formal_class_parameters
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT CLASS LIDENT EQUAL LIDENT AND LIDENT WITH
##
## Concrete syntax: include struct class lident = lident and lident with
##
## Ends in an error in state: 2675.
##
## list(and_class_declaration) -> AND list(attribute) virtual_flag formal_class_parameters LIDENT . class_fun_binding list(post_item_attribute) list(and_class_declaration) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## AND list(attribute) virtual_flag formal_class_parameters LIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT CLASS LIDENT EQUAL LIDENT AND LIDENT EQUAL LIDENT LBRACKETATAT AND RBRACKET METHOD
##
## Concrete syntax: include struct class lident = lident and lident = lident [@@ and ] method
##
## Ends in an error in state: 2677.
##
## list(and_class_declaration) -> AND list(attribute) virtual_flag formal_class_parameters LIDENT class_fun_binding list(post_item_attribute) . list(and_class_declaration) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## AND list(attribute) virtual_flag formal_class_parameters LIDENT class_fun_binding list(post_item_attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1600, spurious reduction of production list(post_item_attribute) ->
## In state 1601, spurious reduction of production list(post_item_attribute) -> post_item_attribute list(post_item_attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT LBRACKETATATAT AND RBRACKET WITH
##
## Concrete syntax: include struct [@@@ and ] with
##
## Ends in an error in state: 2681.
##
## list(structure_element) -> structure_item . list(structure_element) [ error END ]
##
## The known suffix of the stack is as follows:
## structure_item
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT QUOTED_STRING_ITEM LET WITH
##
## Concrete syntax: include struct {%%hello|world|} let with
##
## Ends in an error in state: 2682.
##
## let_bindings(ext) -> LET . ext list(attribute) rec_flag let_binding_body list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## LET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT QUOTED_STRING_ITEM LET LIDENT IN
##
## Concrete syntax: include struct {%%hello|world|} let lident in
##
## Ends in an error in state: 2689.
##
## let_bindings(ext) -> let_bindings(ext) . and_let_binding [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## structure_item -> let_bindings(ext) . [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## let_bindings(ext)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 2559, spurious reduction of production let_binding_body -> val_ident
## In state 2585, spurious reduction of production list(post_item_attribute) ->
## In state 2586, spurious reduction of production let_bindings(ext) -> LET ext list(attribute) rec_flag let_binding_body list(post_item_attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT LET LIDENT AND WITH
##
## Concrete syntax: include struct let lident and with
##
## Ends in an error in state: 2690.
##
## and_let_binding -> AND . list(attribute) let_binding_body list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE IN EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## AND
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT LET LIDENT AND LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: include struct let lident and [@ and ] while
##
## Ends in an error in state: 2691.
##
## and_let_binding -> AND list(attribute) . let_binding_body list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE IN EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## AND list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT LET LIDENT AND FALSE EQUAL UIDENT RPAREN
##
## Concrete syntax: include struct let lident and false = UIdent )
##
## Ends in an error in state: 2692.
##
## and_let_binding -> AND list(attribute) let_binding_body . list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE IN EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## AND list(attribute) let_binding_body
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1048, spurious reduction of production constr_longident -> mod_longident
## In state 1101, spurious reduction of production simple_expr -> constr_longident
## In state 1074, spurious reduction of production expr -> simple_expr
## In state 1095, spurious reduction of production seq_expr -> expr
## In state 2583, spurious reduction of production let_binding_body_no_punning -> pattern_no_exn EQUAL seq_expr
## In state 2584, spurious reduction of production let_binding_body -> let_binding_body_no_punning
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT QUOTED_STRING_ITEM WITH
##
## Concrete syntax: include struct {%%hello|world|} with
##
## Ends in an error in state: 2695.
##
## structure_item -> item_extension . list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## item_extension
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT TYPE LIDENT LBRACKETATAT AND RBRACKET METHOD
##
## Concrete syntax: include struct type lident [@@ and ] method
##
## Ends in an error in state: 2697.
##
## structure_item -> generic_type_declaration(nonrec_flag,type_kind) . list(generic_and_type_declaration(type_kind)) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## generic_type_declaration(nonrec_flag,type_kind)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1600, spurious reduction of production list(post_item_attribute) ->
## In state 1601, spurious reduction of production list(post_item_attribute) -> post_item_attribute list(post_item_attribute)
## In state 2832, spurious reduction of production generic_type_declaration(nonrec_flag,type_kind) -> TYPE ext list(attribute) type_parameters LIDENT type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT TYPE LIDENT AND WITH
##
## Concrete syntax: include struct type lident and with
##
## Ends in an error in state: 2698.
##
## list(generic_and_type_declaration(type_kind)) -> AND . list(attribute) type_parameters LIDENT type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) list(generic_and_type_declaration(type_kind)) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## AND
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT TYPE LIDENT AND LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: include struct type lident and [@ and ] while
##
## Ends in an error in state: 2699.
##
## list(generic_and_type_declaration(type_kind)) -> AND list(attribute) . type_parameters LIDENT type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) list(generic_and_type_declaration(type_kind)) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## AND list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT TYPE LIDENT AND UNDERSCORE WITH
##
## Concrete syntax: include struct type lident and _ with
##
## Ends in an error in state: 2700.
##
## list(generic_and_type_declaration(type_kind)) -> AND list(attribute) type_parameters . LIDENT type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) list(generic_and_type_declaration(type_kind)) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## AND list(attribute) type_parameters
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT TYPE LIDENT AND LIDENT WITH
##
## Concrete syntax: include struct type lident and lident with
##
## Ends in an error in state: 2701.
##
## list(generic_and_type_declaration(type_kind)) -> AND list(attribute) type_parameters LIDENT . type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) list(generic_and_type_declaration(type_kind)) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## AND list(attribute) type_parameters LIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT TYPE LIDENT AND LIDENT EQUAL DOTDOT WITH
##
## Concrete syntax: include struct type lident and lident = .. with
##
## Ends in an error in state: 2703.
##
## list(generic_and_type_declaration(type_kind)) -> AND list(attribute) type_parameters LIDENT type_kind reversed_llist(preceded(CONSTRAINT,constrain)) . list(post_item_attribute) list(generic_and_type_declaration(type_kind)) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
## reversed_llist(preceded(CONSTRAINT,constrain)) -> reversed_llist(preceded(CONSTRAINT,constrain)) . CONSTRAINT core_type EQUAL core_type [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
##
## The known suffix of the stack is as follows:
## AND list(attribute) type_parameters LIDENT type_kind reversed_llist(preceded(CONSTRAINT,constrain))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT TYPE LIDENT AND LIDENT LBRACKETATAT AND RBRACKET METHOD
##
## Concrete syntax: include struct type lident and lident [@@ and ] method
##
## Ends in an error in state: 2704.
##
## list(generic_and_type_declaration(type_kind)) -> AND list(attribute) type_parameters LIDENT type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) . list(generic_and_type_declaration(type_kind)) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## AND list(attribute) type_parameters LIDENT type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1600, spurious reduction of production list(post_item_attribute) ->
## In state 1601, spurious reduction of production list(post_item_attribute) -> post_item_attribute list(post_item_attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT SEMISEMI UIDENT RPAREN
##
## Concrete syntax: include struct ;; UIdent )
##
## Ends in an error in state: 2709.
##
## list(structure_element) -> SEMISEMI seq_expr . list(post_item_attribute) list(structure_element) [ error END ]
##
## The known suffix of the stack is as follows:
## SEMISEMI seq_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1048, spurious reduction of production constr_longident -> mod_longident
## In state 1101, spurious reduction of production simple_expr -> constr_longident
## In state 1074, spurious reduction of production expr -> simple_expr
## In state 1095, spurious reduction of production seq_expr -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT SEMISEMI UIDENT LBRACKETATAT AND RBRACKET METHOD
##
## Concrete syntax: include struct ;; UIdent [@@ and ] method
##
## Ends in an error in state: 2710.
##
## list(structure_element) -> SEMISEMI seq_expr list(post_item_attribute) . list(structure_element) [ error END ]
##
## The known suffix of the stack is as follows:
## SEMISEMI seq_expr list(post_item_attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1600, spurious reduction of production list(post_item_attribute) ->
## In state 1601, spurious reduction of production list(post_item_attribute) -> post_item_attribute list(post_item_attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT LET LIDENT LBRACKETATAT AND RBRACKET METHOD
##
## Concrete syntax: include struct let lident [@@ and ] method
##
## Ends in an error in state: 2713.
##
## expr -> let_bindings(ext) . IN seq_expr [ error VAL TYPE STAR SEMISEMI SEMI QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE GREATER EXTERNAL EXCEPTION EQUAL END COMMA COLONEQUAL COLONCOLON CLASS BARBAR AMPERSAND AMPERAMPER ]
## let_bindings(ext) -> let_bindings(ext) . and_let_binding [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE IN EXTERNAL EXCEPTION END CLASS AND ]
## structure_item -> let_bindings(ext) . [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## let_bindings(ext)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1600, spurious reduction of production list(post_item_attribute) ->
## In state 1601, spurious reduction of production list(post_item_attribute) -> post_item_attribute list(post_item_attribute)
## In state 2586, spurious reduction of production let_bindings(ext) -> LET ext list(attribute) rec_flag let_binding_body list(post_item_attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT UIDENT RPAREN
##
## Concrete syntax: include struct UIdent )
##
## Ends in an error in state: 2717.
##
## structure -> seq_expr . list(post_item_attribute) list(structure_element) [ error END ]
##
## The known suffix of the stack is as follows:
## seq_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1048, spurious reduction of production constr_longident -> mod_longident
## In state 1101, spurious reduction of production simple_expr -> constr_longident
## In state 1074, spurious reduction of production expr -> simple_expr
## In state 1095, spurious reduction of production seq_expr -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT UIDENT LBRACKETATAT AND RBRACKET METHOD
##
## Concrete syntax: include struct UIdent [@@ and ] method
##
## Ends in an error in state: 2718.
##
## structure -> seq_expr list(post_item_attribute) . list(structure_element) [ error END ]
##
## The known suffix of the stack is as follows:
## seq_expr list(post_item_attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1600, spurious reduction of production list(post_item_attribute) ->
## In state 1601, spurious reduction of production list(post_item_attribute) -> post_item_attribute list(post_item_attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE LPAREN MODULE TYPE OF QUOTED_STRING_EXPR COLON
##
## Concrete syntax: include ( module type of {%hello|world|} :
##
## Ends in an error in state: 2721.
##
## module_expr -> module_expr . attribute [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## module_expr -> module_expr . paren_module_expr [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## module_expr -> module_expr . LPAREN RPAREN [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## module_type -> MODULE TYPE OF list(attribute) module_expr . [ error WITH VAL TYPE SEMISEMI RPAREN QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## MODULE TYPE OF list(attribute) module_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LBRACKET LPAREN MODULE UIDENT COLON QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: [ ( module UIdent : {%hello|world|} while
##
## Ends in an error in state: 2722.
##
## module_type -> module_type . attribute [ error WITH RPAREN MINUSGREATER LBRACKETAT ]
## module_type -> module_type . MINUSGREATER module_type [ error WITH RPAREN MINUSGREATER LBRACKETAT ]
## module_type -> module_type . WITH reversed_separated_nonempty_llist(AND,with_constraint) [ error WITH RPAREN MINUSGREATER LBRACKETAT ]
## simple_pattern_not_ident -> LPAREN MODULE ext list(attribute) module_name COLON module_type . RPAREN [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
## simple_pattern_not_ident -> LPAREN MODULE ext list(attribute) module_name COLON module_type . error [ error SEMI RPAREN RBRACKET RBRACE LBRACKETAT COMMA COLONCOLON COLON BARRBRACKET BAR AS ]
##
## The known suffix of the stack is as follows:
## LPAREN MODULE ext list(attribute) module_name COLON module_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LBRACKETBAR FALSE RBRACKET
##
## Concrete syntax: [| false ]
##
## Ends in an error in state: 2726.
##
## simple_delimited_pattern -> LBRACKETBAR separated_or_terminated_nonempty_list(SEMI,pattern) . BARRBRACKET [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
## simple_delimited_pattern -> LBRACKETBAR separated_or_terminated_nonempty_list(SEMI,pattern) . error [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
##
## The known suffix of the stack is as follows:
## LBRACKETBAR separated_or_terminated_nonempty_list(SEMI,pattern)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 747, spurious reduction of production simple_pattern_not_ident -> constr_longident
## In state 717, spurious reduction of production simple_pattern -> simple_pattern_not_ident
## In state 734, spurious reduction of production pattern_gen -> simple_pattern
## In state 735, spurious reduction of production pattern -> pattern_gen
## In state 794, spurious reduction of production separated_or_terminated_nonempty_list(SEMI,pattern) -> pattern
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LETOP LIDENT EQUAL UIDENT VAL
##
## Concrete syntax: let* lident = UIdent val
##
## Ends in an error in state: 2729.
##
## expr -> LETOP letop_bindings . IN seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## letop_bindings -> letop_bindings . ANDOP letop_binding_body [ IN ANDOP ]
##
## The known suffix of the stack is as follows:
## LETOP letop_bindings
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 943, spurious reduction of production constr_longident -> mod_longident
## In state 1178, spurious reduction of production simple_expr -> constr_longident
## In state 1032, spurious reduction of production expr -> simple_expr
## In state 1172, spurious reduction of production seq_expr -> expr
## In state 1160, spurious reduction of production strict_binding -> EQUAL seq_expr
## In state 2397, spurious reduction of production letop_binding_body -> val_ident strict_binding
## In state 2318, spurious reduction of production letop_bindings -> letop_binding_body
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LETOP LIDENT IN WITH
##
## Concrete syntax: let* lident in with
##
## Ends in an error in state: 2730.
##
## expr -> LETOP letop_bindings IN . seq_expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LETOP letop_bindings IN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LIDENT LESSMINUS UNDERSCORE WHILE
##
## Concrete syntax: lident <- _ while
##
## Ends in an error in state: 2732.
##
## expr -> expr . INFIXOP0 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> LIDENT LESSMINUS expr . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LIDENT LESSMINUS expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: MATCH UIDENT VAL
##
## Concrete syntax: match UIdent val
##
## Ends in an error in state: 2733.
##
## expr -> MATCH ext list(attribute) seq_expr . WITH reversed_preceded_or_separated_nonempty_llist(BAR,match_case) [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## MATCH ext list(attribute) seq_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 943, spurious reduction of production constr_longident -> mod_longident
## In state 1178, spurious reduction of production simple_expr -> constr_longident
## In state 1032, spurious reduction of production expr -> simple_expr
## In state 1172, spurious reduction of production seq_expr -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: MATCH UIDENT WITH WITH
##
## Concrete syntax: match UIdent with with
##
## Ends in an error in state: 2734.
##
## expr -> MATCH ext list(attribute) seq_expr WITH . reversed_preceded_or_separated_nonempty_llist(BAR,match_case) [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## MATCH ext list(attribute) seq_expr WITH
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: MATCH UIDENT WITH FALSE MINUSGREATER DOT WHILE
##
## Concrete syntax: match UIdent with false -> . while
##
## Ends in an error in state: 2735.
##
## expr -> MATCH ext list(attribute) seq_expr WITH reversed_preceded_or_separated_nonempty_llist(BAR,match_case) . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## reversed_preceded_or_separated_nonempty_llist(BAR,match_case) -> reversed_preceded_or_separated_nonempty_llist(BAR,match_case) . BAR match_case [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## MATCH ext list(attribute) seq_expr WITH reversed_preceded_or_separated_nonempty_llist(BAR,match_case)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET TRY UIDENT VAL
##
## Concrete syntax: [ try UIdent val
##
## Ends in an error in state: 2736.
##
## expr -> TRY ext list(attribute) seq_expr . WITH reversed_preceded_or_separated_nonempty_llist(BAR,match_case) [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> TRY ext list(attribute) seq_expr . WITH error [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## TRY ext list(attribute) seq_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 943, spurious reduction of production constr_longident -> mod_longident
## In state 1178, spurious reduction of production simple_expr -> constr_longident
## In state 1032, spurious reduction of production expr -> simple_expr
## In state 1172, spurious reduction of production seq_expr -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET TRY UIDENT WITH WITH
##
## Concrete syntax: [ try UIdent with with
##
## Ends in an error in state: 2737.
##
## expr -> TRY ext list(attribute) seq_expr WITH . reversed_preceded_or_separated_nonempty_llist(BAR,match_case) [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## expr -> TRY ext list(attribute) seq_expr WITH . error [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## TRY ext list(attribute) seq_expr WITH
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET TRY UIDENT WITH FALSE MINUSGREATER DOT WITH
##
## Concrete syntax: [ try UIdent with false -> . with
##
## Ends in an error in state: 2739.
##
## expr -> TRY ext list(attribute) seq_expr WITH reversed_preceded_or_separated_nonempty_llist(BAR,match_case) . [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
## reversed_preceded_or_separated_nonempty_llist(BAR,match_case) -> reversed_preceded_or_separated_nonempty_llist(BAR,match_case) . BAR match_case [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## TRY ext list(attribute) seq_expr WITH reversed_preceded_or_separated_nonempty_llist(BAR,match_case)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE LPAREN VAL UIDENT VAL
##
## Concrete syntax: include ( val UIdent val
##
## Ends in an error in state: 2740.
##
## expr -> expr . INFIXOP0 expr [ error STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP1 expr [ error STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP2 expr [ error STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP3 expr [ error STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . INFIXOP4 expr [ error STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . PLUS expr [ error STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSDOT expr [ error STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . PLUSEQ expr [ error STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . MINUS expr [ error STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . MINUSDOT expr [ error STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . STAR expr [ error STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . PERCENT expr [ error STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . EQUAL expr [ error STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . LESS expr [ error STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . GREATER expr [ error STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . OR expr [ error STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . BARBAR expr [ error STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERSAND expr [ error STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . AMPERAMPER expr [ error STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . COLONEQUAL expr [ error STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . COLONCOLON expr [ error STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
## expr -> expr . attribute [ error STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
## paren_module_expr -> LPAREN VAL list(attribute) expr . RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
## paren_module_expr -> LPAREN VAL list(attribute) expr . COLON module_type RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
## paren_module_expr -> LPAREN VAL list(attribute) expr . COLON module_type COLONGREATER module_type RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
## paren_module_expr -> LPAREN VAL list(attribute) expr . COLONGREATER module_type RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
## paren_module_expr -> LPAREN VAL list(attribute) expr . COLON error [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
## paren_module_expr -> LPAREN VAL list(attribute) expr . COLONGREATER error [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
## paren_module_expr -> LPAREN VAL list(attribute) expr . error [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
## reversed_separated_nontrivial_llist(COMMA,expr) -> expr . COMMA expr [ error STAR RPAREN PLUSEQ PLUSDOT PLUS PERCENT OR MINUSDOT MINUS LESS LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LPAREN VAL list(attribute) expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1048, spurious reduction of production constr_longident -> mod_longident
## In state 1101, spurious reduction of production simple_expr -> constr_longident
## In state 1074, spurious reduction of production expr -> simple_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE LPAREN VAL UIDENT COLONGREATER WITH
##
## Concrete syntax: include ( val UIdent :> with
##
## Ends in an error in state: 2743.
##
## paren_module_expr -> LPAREN VAL list(attribute) expr COLONGREATER . module_type RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
## paren_module_expr -> LPAREN VAL list(attribute) expr COLONGREATER . error [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
##
## The known suffix of the stack is as follows:
## LPAREN VAL list(attribute) expr COLONGREATER
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE LPAREN VAL UIDENT COLONGREATER QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: include ( val UIdent :> {%hello|world|} while
##
## Ends in an error in state: 2745.
##
## module_type -> module_type . attribute [ WITH RPAREN MINUSGREATER LBRACKETAT ]
## module_type -> module_type . MINUSGREATER module_type [ WITH RPAREN MINUSGREATER LBRACKETAT ]
## module_type -> module_type . WITH reversed_separated_nonempty_llist(AND,with_constraint) [ WITH RPAREN MINUSGREATER LBRACKETAT ]
## paren_module_expr -> LPAREN VAL list(attribute) expr COLONGREATER module_type . RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
##
## The known suffix of the stack is as follows:
## LPAREN VAL list(attribute) expr COLONGREATER module_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE LPAREN VAL UIDENT COLON WITH
##
## Concrete syntax: include ( val UIdent : with
##
## Ends in an error in state: 2747.
##
## paren_module_expr -> LPAREN VAL list(attribute) expr COLON . module_type RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
## paren_module_expr -> LPAREN VAL list(attribute) expr COLON . module_type COLONGREATER module_type RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
## paren_module_expr -> LPAREN VAL list(attribute) expr COLON . error [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
##
## The known suffix of the stack is as follows:
## LPAREN VAL list(attribute) expr COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE LPAREN VAL UIDENT COLON QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: include ( val UIdent : {%hello|world|} while
##
## Ends in an error in state: 2749.
##
## module_type -> module_type . attribute [ WITH RPAREN MINUSGREATER LBRACKETAT COLONGREATER ]
## module_type -> module_type . MINUSGREATER module_type [ WITH RPAREN MINUSGREATER LBRACKETAT COLONGREATER ]
## module_type -> module_type . WITH reversed_separated_nonempty_llist(AND,with_constraint) [ WITH RPAREN MINUSGREATER LBRACKETAT COLONGREATER ]
## paren_module_expr -> LPAREN VAL list(attribute) expr COLON module_type . RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
## paren_module_expr -> LPAREN VAL list(attribute) expr COLON module_type . COLONGREATER module_type RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
##
## The known suffix of the stack is as follows:
## LPAREN VAL list(attribute) expr COLON module_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE LPAREN VAL UIDENT COLON QUOTED_STRING_EXPR COLONGREATER WITH
##
## Concrete syntax: include ( val UIdent : {%hello|world|} :> with
##
## Ends in an error in state: 2751.
##
## paren_module_expr -> LPAREN VAL list(attribute) expr COLON module_type COLONGREATER . module_type RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
##
## The known suffix of the stack is as follows:
## LPAREN VAL list(attribute) expr COLON module_type COLONGREATER
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE LPAREN VAL UIDENT COLON QUOTED_STRING_EXPR COLONGREATER QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: include ( val UIdent : {%hello|world|} :> {%hello|world|} while
##
## Ends in an error in state: 2752.
##
## module_type -> module_type . attribute [ WITH RPAREN MINUSGREATER LBRACKETAT ]
## module_type -> module_type . MINUSGREATER module_type [ WITH RPAREN MINUSGREATER LBRACKETAT ]
## module_type -> module_type . WITH reversed_separated_nonempty_llist(AND,with_constraint) [ WITH RPAREN MINUSGREATER LBRACKETAT ]
## paren_module_expr -> LPAREN VAL list(attribute) expr COLON module_type COLONGREATER module_type . RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER COLON CLASS AND ]
##
## The known suffix of the stack is as follows:
## LPAREN VAL list(attribute) expr COLON module_type COLONGREATER module_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OPEN BANG QUOTED_STRING_EXPR WITH
##
## Concrete syntax: open ! {%hello|world|} with
##
## Ends in an error in state: 2754.
##
## module_expr -> module_expr . attribute [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
## module_expr -> module_expr . paren_module_expr [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
## module_expr -> module_expr . LPAREN RPAREN [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
## open_declaration -> OPEN BANG ext list(attribute) module_expr . list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## OPEN BANG ext list(attribute) module_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OPEN PERCENT AND WHILE
##
## Concrete syntax: open % and while
##
## Ends in an error in state: 2756.
##
## open_declaration -> OPEN ext . list(attribute) module_expr list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## OPEN ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OPEN LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: open [@ and ] while
##
## Ends in an error in state: 2757.
##
## open_declaration -> OPEN ext list(attribute) . module_expr list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## OPEN ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OPEN QUOTED_STRING_EXPR WITH
##
## Concrete syntax: open {%hello|world|} with
##
## Ends in an error in state: 2758.
##
## module_expr -> module_expr . attribute [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
## module_expr -> module_expr . paren_module_expr [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
## module_expr -> module_expr . LPAREN RPAREN [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
## open_declaration -> OPEN ext list(attribute) module_expr . list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## OPEN ext list(attribute) module_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: SEMISEMI UIDENT TO
##
## Concrete syntax: ;; UIdent to
##
## Ends in an error in state: 2760.
##
## list(structure_element) -> SEMISEMI seq_expr . list(post_item_attribute) list(structure_element) [ RBRACKET EOF ]
##
## The known suffix of the stack is as follows:
## SEMISEMI seq_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 943, spurious reduction of production constr_longident -> mod_longident
## In state 1178, spurious reduction of production simple_expr -> constr_longident
## In state 1032, spurious reduction of production expr -> simple_expr
## In state 1172, spurious reduction of production seq_expr -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: SEMISEMI UIDENT LBRACKETATAT AND RBRACKET IN
##
## Concrete syntax: ;; UIdent [@@ and ] in
##
## Ends in an error in state: 2761.
##
## list(structure_element) -> SEMISEMI seq_expr list(post_item_attribute) . list(structure_element) [ RBRACKET EOF ]
##
## The known suffix of the stack is as follows:
## SEMISEMI seq_expr list(post_item_attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1304, spurious reduction of production list(post_item_attribute) ->
## In state 1305, spurious reduction of production list(post_item_attribute) -> post_item_attribute list(post_item_attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET LBRACKETPERCENT AND SEMISEMI EOF
##
## Concrete syntax: [ [% and ;; 
##
## Ends in an error in state: 2764.
##
## extension -> LBRACKETPERCENT attr_id payload . RBRACKET [ error WITH VAL UIDENT TYPE TRUE TILDE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATERRBRACE GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE DOTOP DOT CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LBRACKETPERCENT attr_id payload
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 433, spurious reduction of production list(structure_element) ->
## In state 2763, spurious reduction of production list(structure_element) -> SEMISEMI list(structure_element)
## In state 1669, spurious reduction of production structure -> list(structure_element)
## In state 1663, spurious reduction of production payload -> structure
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT TYPE LIDENT EQUAL LBRACKET WITH
##
## Concrete syntax: include struct type lident = [ with
##
## Ends in an error in state: 2767.
##
## atomic_type -> LBRACKET . tag_field RBRACKET [ error VAL UIDENT TYPE STAR SEMISEMI QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL END CONSTRAINT CLASS AS AND ]
## atomic_type -> LBRACKET . BAR reversed_separated_nonempty_llist(BAR,row_field) RBRACKET [ error VAL UIDENT TYPE STAR SEMISEMI QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL END CONSTRAINT CLASS AS AND ]
## atomic_type -> LBRACKET . row_field BAR reversed_separated_nonempty_llist(BAR,row_field) RBRACKET [ error VAL UIDENT TYPE STAR SEMISEMI QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL END CONSTRAINT CLASS AS AND ]
## constr_extra_nonprefix_ident -> LBRACKET . RBRACKET [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN OF MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT COLON CLASS BAR AND ]
##
## The known suffix of the stack is as follows:
## LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT TYPE LIDENT EQUAL PRIVATE LBRACE WITH
##
## Concrete syntax: include struct type lident = private { with
##
## Ends in an error in state: 2768.
##
## nonempty_type_kind -> PRIVATE LBRACE . label_declarations RBRACE [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
##
## The known suffix of the stack is as follows:
## PRIVATE LBRACE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT TYPE LIDENT EQUAL BAR WITH
##
## Concrete syntax: include struct type lident = | with
##
## Ends in an error in state: 2772.
##
## constructor_declarations -> BAR . [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
## generic_constructor_declaration(BAR) -> BAR . constr_ident generalized_constructor_arguments list(attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS BAR AND ]
##
## The known suffix of the stack is as follows:
## BAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT TYPE LIDENT EQUAL BAR FALSE WITH
##
## Concrete syntax: include struct type lident = | false with
##
## Ends in an error in state: 2773.
##
## generic_constructor_declaration(BAR) -> BAR constr_ident . generalized_constructor_arguments list(attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS BAR AND ]
##
## The known suffix of the stack is as follows:
## BAR constr_ident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT TYPE LIDENT EQUAL BAR FALSE OF LBRACE LIDENT COLON QUOTED_STRING_EXPR RBRACE WITH
##
## Concrete syntax: include struct type lident = | false of { lident : {%hello|world|} } with
##
## Ends in an error in state: 2774.
##
## generic_constructor_declaration(BAR) -> BAR constr_ident generalized_constructor_arguments . list(attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS BAR AND ]
##
## The known suffix of the stack is as follows:
## BAR constr_ident generalized_constructor_arguments
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT TYPE LIDENT EQUAL FALSE LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: include struct type lident = false [@ and ] while
##
## Ends in an error in state: 2776.
##
## constructor_declarations -> reversed_bar_llist(constructor_declaration) . [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
## reversed_bar_llist(constructor_declaration) -> reversed_bar_llist(constructor_declaration) . generic_constructor_declaration(BAR) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS BAR AND ]
##
## The known suffix of the stack is as follows:
## reversed_bar_llist(constructor_declaration)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1700, spurious reduction of production list(attribute) ->
## In state 1701, spurious reduction of production list(attribute) -> attribute list(attribute)
## In state 2785, spurious reduction of production generic_constructor_declaration(epsilon) -> constr_ident generalized_constructor_arguments list(attribute)
## In state 2779, spurious reduction of production reversed_bar_llist(constructor_declaration) -> generic_constructor_declaration(epsilon)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG TYPE LIDENT PLUSEQ BAR WITH
##
## Concrete syntax: include sig type lident += | with
##
## Ends in an error in state: 2777.
##
## generic_constructor_declaration(BAR) -> BAR . constr_ident generalized_constructor_arguments list(attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS BAR AND ]
##
## The known suffix of the stack is as follows:
## BAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT TYPE LIDENT EQUAL PRIVATE QUOTED_STRING_EXPR WITH
##
## Concrete syntax: include struct type lident = private {%hello|world|} with
##
## Ends in an error in state: 2781.
##
## core_type -> core_type . attribute [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
## nonempty_type_kind -> PRIVATE core_type . [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
##
## The known suffix of the stack is as follows:
## PRIVATE core_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 568, spurious reduction of production tuple_type -> atomic_type
## In state 555, spurious reduction of production function_type -> tuple_type
## In state 572, spurious reduction of production alias_type -> function_type
## In state 585, spurious reduction of production core_type -> alias_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT TYPE LIDENT EQUAL FALSE WITH
##
## Concrete syntax: include struct type lident = false with
##
## Ends in an error in state: 2783.
##
## generic_constructor_declaration(epsilon) -> constr_ident . generalized_constructor_arguments list(attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS BAR AND ]
##
## The known suffix of the stack is as follows:
## constr_ident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT TYPE LIDENT EQUAL FALSE OF LBRACE LIDENT COLON QUOTED_STRING_EXPR RBRACE WITH
##
## Concrete syntax: include struct type lident = false of { lident : {%hello|world|} } with
##
## Ends in an error in state: 2784.
##
## generic_constructor_declaration(epsilon) -> constr_ident generalized_constructor_arguments . list(attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS BAR AND ]
##
## The known suffix of the stack is as follows:
## constr_ident generalized_constructor_arguments
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT TYPE LIDENT EQUAL LBRACE WITH
##
## Concrete syntax: include struct type lident = { with
##
## Ends in an error in state: 2786.
##
## nonempty_type_kind -> LBRACE . label_declarations RBRACE [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
##
## The known suffix of the stack is as follows:
## LBRACE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT TYPE LIDENT EQUAL QUOTED_STRING_EXPR WITH
##
## Concrete syntax: include struct type lident = {%hello|world|} with
##
## Ends in an error in state: 2791.
##
## core_type -> core_type . attribute [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION EQUAL END CONSTRAINT CLASS AND ]
## nonempty_type_kind -> core_type . [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
## nonempty_type_kind -> core_type . EQUAL constructor_declarations [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
## nonempty_type_kind -> core_type . EQUAL PRIVATE constructor_declarations [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
## nonempty_type_kind -> core_type . EQUAL DOTDOT [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
## nonempty_type_kind -> core_type . EQUAL PRIVATE DOTDOT [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
## nonempty_type_kind -> core_type . EQUAL LBRACE label_declarations RBRACE [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
## nonempty_type_kind -> core_type . EQUAL PRIVATE LBRACE label_declarations RBRACE [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
##
## The known suffix of the stack is as follows:
## core_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 568, spurious reduction of production tuple_type -> atomic_type
## In state 555, spurious reduction of production function_type -> tuple_type
## In state 572, spurious reduction of production alias_type -> function_type
## In state 585, spurious reduction of production core_type -> alias_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT TYPE LIDENT EQUAL QUOTED_STRING_EXPR EQUAL WITH
##
## Concrete syntax: include struct type lident = {%hello|world|} = with
##
## Ends in an error in state: 2792.
##
## nonempty_type_kind -> core_type EQUAL . constructor_declarations [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
## nonempty_type_kind -> core_type EQUAL . PRIVATE constructor_declarations [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
## nonempty_type_kind -> core_type EQUAL . DOTDOT [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
## nonempty_type_kind -> core_type EQUAL . PRIVATE DOTDOT [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
## nonempty_type_kind -> core_type EQUAL . LBRACE label_declarations RBRACE [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
## nonempty_type_kind -> core_type EQUAL . PRIVATE LBRACE label_declarations RBRACE [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
##
## The known suffix of the stack is as follows:
## core_type EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT TYPE LIDENT EQUAL QUOTED_STRING_EXPR EQUAL PRIVATE WITH
##
## Concrete syntax: include struct type lident = {%hello|world|} = private with
##
## Ends in an error in state: 2793.
##
## nonempty_type_kind -> core_type EQUAL PRIVATE . constructor_declarations [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
## nonempty_type_kind -> core_type EQUAL PRIVATE . DOTDOT [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
## nonempty_type_kind -> core_type EQUAL PRIVATE . LBRACE label_declarations RBRACE [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
##
## The known suffix of the stack is as follows:
## core_type EQUAL PRIVATE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT TYPE LIDENT EQUAL QUOTED_STRING_EXPR EQUAL PRIVATE LBRACE WITH
##
## Concrete syntax: include struct type lident = {%hello|world|} = private { with
##
## Ends in an error in state: 2794.
##
## nonempty_type_kind -> core_type EQUAL PRIVATE LBRACE . label_declarations RBRACE [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
##
## The known suffix of the stack is as follows:
## core_type EQUAL PRIVATE LBRACE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT TYPE LIDENT EQUAL QUOTED_STRING_EXPR EQUAL LBRACE WITH
##
## Concrete syntax: include struct type lident = {%hello|world|} = { with
##
## Ends in an error in state: 2799.
##
## nonempty_type_kind -> core_type EQUAL LBRACE . label_declarations RBRACE [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
##
## The known suffix of the stack is as follows:
## core_type EQUAL LBRACE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT TYPE NONREC LIDENT EQUAL DOTDOT WITH
##
## Concrete syntax: include struct type nonrec lident = .. with
##
## Ends in an error in state: 2806.
##
## generic_type_declaration(nonrec_flag,type_kind) -> TYPE ext list(attribute) NONREC type_parameters LIDENT type_kind reversed_llist(preceded(CONSTRAINT,constrain)) . list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## reversed_llist(preceded(CONSTRAINT,constrain)) -> reversed_llist(preceded(CONSTRAINT,constrain)) . CONSTRAINT core_type EQUAL core_type [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
##
## The known suffix of the stack is as follows:
## TYPE ext list(attribute) NONREC type_parameters LIDENT type_kind reversed_llist(preceded(CONSTRAINT,constrain))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT TYPE NONREC UIDENT DOT LIDENT WHILE
##
## Concrete syntax: include struct type nonrec UIdent . lident while
##
## Ends in an error in state: 2808.
##
## structure_item -> TYPE ext list(attribute) NONREC type_parameters type_longident . PLUSEQ private_flag reversed_bar_llist(extension_constructor) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## TYPE ext list(attribute) NONREC type_parameters type_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT TYPE NONREC LIDENT PLUSEQ WITH
##
## Concrete syntax: include struct type nonrec lident += with
##
## Ends in an error in state: 2809.
##
## structure_item -> TYPE ext list(attribute) NONREC type_parameters type_longident PLUSEQ . private_flag reversed_bar_llist(extension_constructor) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## TYPE ext list(attribute) NONREC type_parameters type_longident PLUSEQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT TYPE NONREC LIDENT PLUSEQ PRIVATE WITH
##
## Concrete syntax: include struct type nonrec lident += private with
##
## Ends in an error in state: 2810.
##
## structure_item -> TYPE ext list(attribute) NONREC type_parameters type_longident PLUSEQ private_flag . reversed_bar_llist(extension_constructor) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## TYPE ext list(attribute) NONREC type_parameters type_longident PLUSEQ private_flag
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT TYPE LIDENT PLUSEQ BAR WITH
##
## Concrete syntax: include struct type lident += | with
##
## Ends in an error in state: 2811.
##
## extension_constructor_rebind(BAR) -> BAR . constr_ident EQUAL constr_longident list(attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CLASS BAR ]
## generic_constructor_declaration(BAR) -> BAR . constr_ident generalized_constructor_arguments list(attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CLASS BAR ]
##
## The known suffix of the stack is as follows:
## BAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT TYPE LIDENT PLUSEQ BAR FALSE WITH
##
## Concrete syntax: include struct type lident += | false with
##
## Ends in an error in state: 2812.
##
## extension_constructor_rebind(BAR) -> BAR constr_ident . EQUAL constr_longident list(attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CLASS BAR ]
## generic_constructor_declaration(BAR) -> BAR constr_ident . generalized_constructor_arguments list(attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CLASS BAR ]
##
## The known suffix of the stack is as follows:
## BAR constr_ident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT TYPE LIDENT PLUSEQ BAR FALSE EQUAL WITH
##
## Concrete syntax: include struct type lident += | false = with
##
## Ends in an error in state: 2813.
##
## extension_constructor_rebind(BAR) -> BAR constr_ident EQUAL . constr_longident list(attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CLASS BAR ]
##
## The known suffix of the stack is as follows:
## BAR constr_ident EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT TYPE LIDENT PLUSEQ BAR FALSE EQUAL FALSE WITH
##
## Concrete syntax: include struct type lident += | false = false with
##
## Ends in an error in state: 2814.
##
## extension_constructor_rebind(BAR) -> BAR constr_ident EQUAL constr_longident . list(attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CLASS BAR ]
##
## The known suffix of the stack is as follows:
## BAR constr_ident EQUAL constr_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT TYPE NONREC LIDENT PLUSEQ FALSE COLON QUOTED_STRING_EXPR CONSTRAINT
##
## Concrete syntax: include struct type nonrec lident += false : {%hello|world|} constraint
##
## Ends in an error in state: 2816.
##
## reversed_bar_llist(extension_constructor) -> reversed_bar_llist(extension_constructor) . generic_constructor_declaration(BAR) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CLASS BAR ]
## reversed_bar_llist(extension_constructor) -> reversed_bar_llist(extension_constructor) . extension_constructor_rebind(BAR) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CLASS BAR ]
## structure_item -> TYPE ext list(attribute) NONREC type_parameters type_longident PLUSEQ private_flag reversed_bar_llist(extension_constructor) . list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## TYPE ext list(attribute) NONREC type_parameters type_longident PLUSEQ private_flag reversed_bar_llist(extension_constructor)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 2631, spurious reduction of production generalized_constructor_arguments -> COLON atomic_type
## In state 2784, spurious reduction of production list(attribute) ->
## In state 2785, spurious reduction of production generic_constructor_declaration(epsilon) -> constr_ident generalized_constructor_arguments list(attribute)
## In state 2820, spurious reduction of production reversed_bar_llist(extension_constructor) -> generic_constructor_declaration(epsilon)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT TYPE LIDENT PLUSEQ FALSE WITH
##
## Concrete syntax: include struct type lident += false with
##
## Ends in an error in state: 2824.
##
## extension_constructor_rebind(epsilon) -> constr_ident . EQUAL constr_longident list(attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CLASS BAR ]
## generic_constructor_declaration(epsilon) -> constr_ident . generalized_constructor_arguments list(attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CLASS BAR ]
##
## The known suffix of the stack is as follows:
## constr_ident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT TYPE LIDENT PLUSEQ FALSE EQUAL WITH
##
## Concrete syntax: include struct type lident += false = with
##
## Ends in an error in state: 2825.
##
## extension_constructor_rebind(epsilon) -> constr_ident EQUAL . constr_longident list(attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CLASS BAR ]
##
## The known suffix of the stack is as follows:
## constr_ident EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT TYPE LIDENT PLUSEQ FALSE EQUAL FALSE WITH
##
## Concrete syntax: include struct type lident += false = false with
##
## Ends in an error in state: 2826.
##
## extension_constructor_rebind(epsilon) -> constr_ident EQUAL constr_longident . list(attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CLASS BAR ]
##
## The known suffix of the stack is as follows:
## constr_ident EQUAL constr_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT TYPE UNDERSCORE WITH
##
## Concrete syntax: include struct type _ with
##
## Ends in an error in state: 2828.
##
## generic_type_declaration(nonrec_flag,type_kind) -> TYPE ext list(attribute) type_parameters . LIDENT type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## structure_item -> TYPE ext list(attribute) type_parameters . type_longident PLUSEQ private_flag reversed_bar_llist(extension_constructor) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## TYPE ext list(attribute) type_parameters
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT TYPE LIDENT WITH
##
## Concrete syntax: include struct type lident with
##
## Ends in an error in state: 2829.
##
## generic_type_declaration(nonrec_flag,type_kind) -> TYPE ext list(attribute) type_parameters LIDENT . type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## mk_longident(mod_ext_longident,LIDENT) -> LIDENT . [ PLUSEQ ]
##
## The known suffix of the stack is as follows:
## TYPE ext list(attribute) type_parameters LIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT TYPE LIDENT EQUAL DOTDOT WITH
##
## Concrete syntax: include struct type lident = .. with
##
## Ends in an error in state: 2831.
##
## generic_type_declaration(nonrec_flag,type_kind) -> TYPE ext list(attribute) type_parameters LIDENT type_kind reversed_llist(preceded(CONSTRAINT,constrain)) . list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## reversed_llist(preceded(CONSTRAINT,constrain)) -> reversed_llist(preceded(CONSTRAINT,constrain)) . CONSTRAINT core_type EQUAL core_type [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
##
## The known suffix of the stack is as follows:
## TYPE ext list(attribute) type_parameters LIDENT type_kind reversed_llist(preceded(CONSTRAINT,constrain))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT TYPE UIDENT DOT LIDENT WHILE
##
## Concrete syntax: include struct type UIdent . lident while
##
## Ends in an error in state: 2833.
##
## structure_item -> TYPE ext list(attribute) type_parameters type_longident . PLUSEQ private_flag reversed_bar_llist(extension_constructor) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## TYPE ext list(attribute) type_parameters type_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT TYPE LIDENT PLUSEQ WITH
##
## Concrete syntax: include struct type lident += with
##
## Ends in an error in state: 2834.
##
## structure_item -> TYPE ext list(attribute) type_parameters type_longident PLUSEQ . private_flag reversed_bar_llist(extension_constructor) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## TYPE ext list(attribute) type_parameters type_longident PLUSEQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT TYPE LIDENT PLUSEQ PRIVATE WITH
##
## Concrete syntax: include struct type lident += private with
##
## Ends in an error in state: 2835.
##
## structure_item -> TYPE ext list(attribute) type_parameters type_longident PLUSEQ private_flag . reversed_bar_llist(extension_constructor) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## TYPE ext list(attribute) type_parameters type_longident PLUSEQ private_flag
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT TYPE LIDENT PLUSEQ FALSE COLON QUOTED_STRING_EXPR CONSTRAINT
##
## Concrete syntax: include struct type lident += false : {%hello|world|} constraint
##
## Ends in an error in state: 2836.
##
## reversed_bar_llist(extension_constructor) -> reversed_bar_llist(extension_constructor) . generic_constructor_declaration(BAR) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CLASS BAR ]
## reversed_bar_llist(extension_constructor) -> reversed_bar_llist(extension_constructor) . extension_constructor_rebind(BAR) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CLASS BAR ]
## structure_item -> TYPE ext list(attribute) type_parameters type_longident PLUSEQ private_flag reversed_bar_llist(extension_constructor) . list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## TYPE ext list(attribute) type_parameters type_longident PLUSEQ private_flag reversed_bar_llist(extension_constructor)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 2631, spurious reduction of production generalized_constructor_arguments -> COLON atomic_type
## In state 2784, spurious reduction of production list(attribute) ->
## In state 2785, spurious reduction of production generic_constructor_declaration(epsilon) -> constr_ident generalized_constructor_arguments list(attribute)
## In state 2820, spurious reduction of production reversed_bar_llist(extension_constructor) -> generic_constructor_declaration(epsilon)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE MODULE TYPE OF QUOTED_STRING_EXPR IN
##
## Concrete syntax: include module type of {%hello|world|} in
##
## Ends in an error in state: 2841.
##
## module_expr -> module_expr . attribute [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER CLASS AND ]
## module_expr -> module_expr . paren_module_expr [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER CLASS AND ]
## module_expr -> module_expr . LPAREN RPAREN [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LPAREN LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER CLASS AND ]
## module_type -> MODULE TYPE OF list(attribute) module_expr . [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER CLASS AND ]
##
## The known suffix of the stack is as follows:
## MODULE TYPE OF list(attribute) module_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACE LIDENT COLON LPAREN MODULE QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: { lident : ( module {%hello|world|} while
##
## Ends in an error in state: 2842.
##
## atomic_type -> LPAREN MODULE ext list(attribute) module_type . RPAREN [ error WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER METHOD LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INCLUDE HASH EXTERNAL EXCEPTION EQUAL END CONSTRAINT COLONGREATER CLASS BAR AS AND ]
## module_type -> module_type . attribute [ WITH RPAREN MINUSGREATER LBRACKETAT ]
## module_type -> module_type . MINUSGREATER module_type [ WITH RPAREN MINUSGREATER LBRACKETAT ]
## module_type -> module_type . WITH reversed_separated_nonempty_llist(AND,with_constraint) [ WITH RPAREN MINUSGREATER LBRACKETAT ]
##
## The known suffix of the stack is as follows:
## LPAREN MODULE ext list(attribute) module_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: INCLUDE STRUCT VAL LIDENT COLON QUOTED_STRING_EXPR WITH
##
## Concrete syntax: include struct val lident : {%hello|world|} with
##
## Ends in an error in state: 2844.
##
## core_type -> core_type . attribute [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
## value_description -> VAL ext list(attribute) val_ident COLON core_type . list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## VAL ext list(attribute) val_ident COLON core_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 568, spurious reduction of production tuple_type -> atomic_type
## In state 555, spurious reduction of production function_type -> tuple_type
## In state 572, spurious reduction of production alias_type -> function_type
## In state 585, spurious reduction of production core_type -> alias_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG TYPE WITH
##
## Concrete syntax: include sig type with
##
## Ends in an error in state: 2846.
##
## generic_type_declaration(no_nonrec_flag,type_subst_kind) -> TYPE . ext list(attribute) type_parameters LIDENT COLONEQUAL nonempty_type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## generic_type_declaration(no_nonrec_flag,type_subst_kind) -> TYPE . ext list(attribute) NONREC type_parameters LIDENT COLONEQUAL nonempty_type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## generic_type_declaration(nonrec_flag,type_kind) -> TYPE . ext list(attribute) type_parameters LIDENT type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## generic_type_declaration(nonrec_flag,type_kind) -> TYPE . ext list(attribute) NONREC type_parameters LIDENT type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## signature_item -> TYPE . ext list(attribute) type_parameters type_longident PLUSEQ private_flag reversed_bar_llist(extension_constructor_declaration) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
## signature_item -> TYPE . ext list(attribute) NONREC type_parameters type_longident PLUSEQ private_flag reversed_bar_llist(extension_constructor_declaration) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG TYPE PERCENT AND WHILE
##
## Concrete syntax: include sig type % and while
##
## Ends in an error in state: 2847.
##
## generic_type_declaration(no_nonrec_flag,type_subst_kind) -> TYPE ext . list(attribute) type_parameters LIDENT COLONEQUAL nonempty_type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## generic_type_declaration(no_nonrec_flag,type_subst_kind) -> TYPE ext . list(attribute) NONREC type_parameters LIDENT COLONEQUAL nonempty_type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## generic_type_declaration(nonrec_flag,type_kind) -> TYPE ext . list(attribute) type_parameters LIDENT type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## generic_type_declaration(nonrec_flag,type_kind) -> TYPE ext . list(attribute) NONREC type_parameters LIDENT type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## signature_item -> TYPE ext . list(attribute) type_parameters type_longident PLUSEQ private_flag reversed_bar_llist(extension_constructor_declaration) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
## signature_item -> TYPE ext . list(attribute) NONREC type_parameters type_longident PLUSEQ private_flag reversed_bar_llist(extension_constructor_declaration) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## TYPE ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG TYPE LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: include sig type [@ and ] while
##
## Ends in an error in state: 2848.
##
## generic_type_declaration(no_nonrec_flag,type_subst_kind) -> TYPE ext list(attribute) . type_parameters LIDENT COLONEQUAL nonempty_type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## generic_type_declaration(no_nonrec_flag,type_subst_kind) -> TYPE ext list(attribute) . NONREC type_parameters LIDENT COLONEQUAL nonempty_type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## generic_type_declaration(nonrec_flag,type_kind) -> TYPE ext list(attribute) . type_parameters LIDENT type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## generic_type_declaration(nonrec_flag,type_kind) -> TYPE ext list(attribute) . NONREC type_parameters LIDENT type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## signature_item -> TYPE ext list(attribute) . type_parameters type_longident PLUSEQ private_flag reversed_bar_llist(extension_constructor_declaration) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
## signature_item -> TYPE ext list(attribute) . NONREC type_parameters type_longident PLUSEQ private_flag reversed_bar_llist(extension_constructor_declaration) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## TYPE ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG TYPE NONREC WITH
##
## Concrete syntax: include sig type nonrec with
##
## Ends in an error in state: 2849.
##
## generic_type_declaration(no_nonrec_flag,type_subst_kind) -> TYPE ext list(attribute) NONREC . type_parameters LIDENT COLONEQUAL nonempty_type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## generic_type_declaration(nonrec_flag,type_kind) -> TYPE ext list(attribute) NONREC . type_parameters LIDENT type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## signature_item -> TYPE ext list(attribute) NONREC . type_parameters type_longident PLUSEQ private_flag reversed_bar_llist(extension_constructor_declaration) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## TYPE ext list(attribute) NONREC
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG TYPE NONREC UNDERSCORE WITH
##
## Concrete syntax: include sig type nonrec _ with
##
## Ends in an error in state: 2850.
##
## generic_type_declaration(no_nonrec_flag,type_subst_kind) -> TYPE ext list(attribute) NONREC type_parameters . LIDENT COLONEQUAL nonempty_type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## generic_type_declaration(nonrec_flag,type_kind) -> TYPE ext list(attribute) NONREC type_parameters . LIDENT type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## signature_item -> TYPE ext list(attribute) NONREC type_parameters . type_longident PLUSEQ private_flag reversed_bar_llist(extension_constructor_declaration) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## TYPE ext list(attribute) NONREC type_parameters
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG TYPE NONREC LIDENT WITH
##
## Concrete syntax: include sig type nonrec lident with
##
## Ends in an error in state: 2851.
##
## generic_type_declaration(no_nonrec_flag,type_subst_kind) -> TYPE ext list(attribute) NONREC type_parameters LIDENT . COLONEQUAL nonempty_type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## generic_type_declaration(nonrec_flag,type_kind) -> TYPE ext list(attribute) NONREC type_parameters LIDENT . type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## mk_longident(mod_ext_longident,LIDENT) -> LIDENT . [ PLUSEQ ]
##
## The known suffix of the stack is as follows:
## TYPE ext list(attribute) NONREC type_parameters LIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG TYPE NONREC LIDENT COLONEQUAL WITH
##
## Concrete syntax: include sig type nonrec lident := with
##
## Ends in an error in state: 2852.
##
## generic_type_declaration(no_nonrec_flag,type_subst_kind) -> TYPE ext list(attribute) NONREC type_parameters LIDENT COLONEQUAL . nonempty_type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## TYPE ext list(attribute) NONREC type_parameters LIDENT COLONEQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG TYPE NONREC LIDENT COLONEQUAL FALSE LET
##
## Concrete syntax: include sig type nonrec lident := false let
##
## Ends in an error in state: 2854.
##
## generic_type_declaration(no_nonrec_flag,type_subst_kind) -> TYPE ext list(attribute) NONREC type_parameters LIDENT COLONEQUAL nonempty_type_kind reversed_llist(preceded(CONSTRAINT,constrain)) . list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## reversed_llist(preceded(CONSTRAINT,constrain)) -> reversed_llist(preceded(CONSTRAINT,constrain)) . CONSTRAINT core_type EQUAL core_type [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
##
## The known suffix of the stack is as follows:
## TYPE ext list(attribute) NONREC type_parameters LIDENT COLONEQUAL nonempty_type_kind reversed_llist(preceded(CONSTRAINT,constrain))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 2783, spurious reduction of production generalized_constructor_arguments ->
## In state 2784, spurious reduction of production list(attribute) ->
## In state 2785, spurious reduction of production generic_constructor_declaration(epsilon) -> constr_ident generalized_constructor_arguments list(attribute)
## In state 2779, spurious reduction of production reversed_bar_llist(constructor_declaration) -> generic_constructor_declaration(epsilon)
## In state 2776, spurious reduction of production constructor_declarations -> reversed_bar_llist(constructor_declaration)
## In state 2804, spurious reduction of production nonempty_type_kind -> constructor_declarations
## In state 2853, spurious reduction of production reversed_llist(preceded(CONSTRAINT,constrain)) ->
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG TYPE NONREC UIDENT DOT LIDENT WHILE
##
## Concrete syntax: include sig type nonrec UIdent . lident while
##
## Ends in an error in state: 2856.
##
## signature_item -> TYPE ext list(attribute) NONREC type_parameters type_longident . PLUSEQ private_flag reversed_bar_llist(extension_constructor_declaration) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## TYPE ext list(attribute) NONREC type_parameters type_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG TYPE NONREC LIDENT PLUSEQ WITH
##
## Concrete syntax: include sig type nonrec lident += with
##
## Ends in an error in state: 2857.
##
## signature_item -> TYPE ext list(attribute) NONREC type_parameters type_longident PLUSEQ . private_flag reversed_bar_llist(extension_constructor_declaration) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## TYPE ext list(attribute) NONREC type_parameters type_longident PLUSEQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG TYPE NONREC LIDENT PLUSEQ PRIVATE WITH
##
## Concrete syntax: include sig type nonrec lident += private with
##
## Ends in an error in state: 2858.
##
## signature_item -> TYPE ext list(attribute) NONREC type_parameters type_longident PLUSEQ private_flag . reversed_bar_llist(extension_constructor_declaration) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## TYPE ext list(attribute) NONREC type_parameters type_longident PLUSEQ private_flag
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG TYPE NONREC LIDENT PLUSEQ FALSE CONSTRAINT
##
## Concrete syntax: include sig type nonrec lident += false constraint
##
## Ends in an error in state: 2859.
##
## reversed_bar_llist(extension_constructor_declaration) -> reversed_bar_llist(extension_constructor_declaration) . generic_constructor_declaration(BAR) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CLASS BAR ]
## signature_item -> TYPE ext list(attribute) NONREC type_parameters type_longident PLUSEQ private_flag reversed_bar_llist(extension_constructor_declaration) . list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## TYPE ext list(attribute) NONREC type_parameters type_longident PLUSEQ private_flag reversed_bar_llist(extension_constructor_declaration)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 2783, spurious reduction of production generalized_constructor_arguments ->
## In state 2784, spurious reduction of production list(attribute) ->
## In state 2785, spurious reduction of production generic_constructor_declaration(epsilon) -> constr_ident generalized_constructor_arguments list(attribute)
## In state 2862, spurious reduction of production reversed_bar_llist(extension_constructor_declaration) -> generic_constructor_declaration(epsilon)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG TYPE UNDERSCORE WITH
##
## Concrete syntax: include sig type _ with
##
## Ends in an error in state: 2864.
##
## generic_type_declaration(no_nonrec_flag,type_subst_kind) -> TYPE ext list(attribute) type_parameters . LIDENT COLONEQUAL nonempty_type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## generic_type_declaration(nonrec_flag,type_kind) -> TYPE ext list(attribute) type_parameters . LIDENT type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## signature_item -> TYPE ext list(attribute) type_parameters . type_longident PLUSEQ private_flag reversed_bar_llist(extension_constructor_declaration) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## TYPE ext list(attribute) type_parameters
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG TYPE LIDENT WITH
##
## Concrete syntax: include sig type lident with
##
## Ends in an error in state: 2865.
##
## generic_type_declaration(no_nonrec_flag,type_subst_kind) -> TYPE ext list(attribute) type_parameters LIDENT . COLONEQUAL nonempty_type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## generic_type_declaration(nonrec_flag,type_kind) -> TYPE ext list(attribute) type_parameters LIDENT . type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## mk_longident(mod_ext_longident,LIDENT) -> LIDENT . [ PLUSEQ ]
##
## The known suffix of the stack is as follows:
## TYPE ext list(attribute) type_parameters LIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG TYPE LIDENT COLONEQUAL WITH
##
## Concrete syntax: include sig type lident := with
##
## Ends in an error in state: 2866.
##
## generic_type_declaration(no_nonrec_flag,type_subst_kind) -> TYPE ext list(attribute) type_parameters LIDENT COLONEQUAL . nonempty_type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## TYPE ext list(attribute) type_parameters LIDENT COLONEQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG TYPE LIDENT COLONEQUAL FALSE LET
##
## Concrete syntax: include sig type lident := false let
##
## Ends in an error in state: 2868.
##
## generic_type_declaration(no_nonrec_flag,type_subst_kind) -> TYPE ext list(attribute) type_parameters LIDENT COLONEQUAL nonempty_type_kind reversed_llist(preceded(CONSTRAINT,constrain)) . list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## reversed_llist(preceded(CONSTRAINT,constrain)) -> reversed_llist(preceded(CONSTRAINT,constrain)) . CONSTRAINT core_type EQUAL core_type [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
##
## The known suffix of the stack is as follows:
## TYPE ext list(attribute) type_parameters LIDENT COLONEQUAL nonempty_type_kind reversed_llist(preceded(CONSTRAINT,constrain))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 2783, spurious reduction of production generalized_constructor_arguments ->
## In state 2784, spurious reduction of production list(attribute) ->
## In state 2785, spurious reduction of production generic_constructor_declaration(epsilon) -> constr_ident generalized_constructor_arguments list(attribute)
## In state 2779, spurious reduction of production reversed_bar_llist(constructor_declaration) -> generic_constructor_declaration(epsilon)
## In state 2776, spurious reduction of production constructor_declarations -> reversed_bar_llist(constructor_declaration)
## In state 2804, spurious reduction of production nonempty_type_kind -> constructor_declarations
## In state 2867, spurious reduction of production reversed_llist(preceded(CONSTRAINT,constrain)) ->
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG TYPE UIDENT DOT LIDENT WHILE
##
## Concrete syntax: include sig type UIdent . lident while
##
## Ends in an error in state: 2870.
##
## signature_item -> TYPE ext list(attribute) type_parameters type_longident . PLUSEQ private_flag reversed_bar_llist(extension_constructor_declaration) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## TYPE ext list(attribute) type_parameters type_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG TYPE LIDENT PLUSEQ WITH
##
## Concrete syntax: include sig type lident += with
##
## Ends in an error in state: 2871.
##
## signature_item -> TYPE ext list(attribute) type_parameters type_longident PLUSEQ . private_flag reversed_bar_llist(extension_constructor_declaration) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## TYPE ext list(attribute) type_parameters type_longident PLUSEQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG TYPE LIDENT PLUSEQ PRIVATE WITH
##
## Concrete syntax: include sig type lident += private with
##
## Ends in an error in state: 2872.
##
## signature_item -> TYPE ext list(attribute) type_parameters type_longident PLUSEQ private_flag . reversed_bar_llist(extension_constructor_declaration) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## TYPE ext list(attribute) type_parameters type_longident PLUSEQ private_flag
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG TYPE LIDENT PLUSEQ FALSE CONSTRAINT
##
## Concrete syntax: include sig type lident += false constraint
##
## Ends in an error in state: 2873.
##
## reversed_bar_llist(extension_constructor_declaration) -> reversed_bar_llist(extension_constructor_declaration) . generic_constructor_declaration(BAR) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CLASS BAR ]
## signature_item -> TYPE ext list(attribute) type_parameters type_longident PLUSEQ private_flag reversed_bar_llist(extension_constructor_declaration) . list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## TYPE ext list(attribute) type_parameters type_longident PLUSEQ private_flag reversed_bar_llist(extension_constructor_declaration)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 2783, spurious reduction of production generalized_constructor_arguments ->
## In state 2784, spurious reduction of production list(attribute) ->
## In state 2785, spurious reduction of production generic_constructor_declaration(epsilon) -> constr_ident generalized_constructor_arguments list(attribute)
## In state 2862, spurious reduction of production reversed_bar_llist(extension_constructor_declaration) -> generic_constructor_declaration(epsilon)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG SEMISEMI WITH
##
## Concrete syntax: include sig ;; with
##
## Ends in an error in state: 2875.
##
## list(signature_element) -> SEMISEMI . list(signature_element) [ error END ]
##
## The known suffix of the stack is as follows:
## SEMISEMI
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG OPEN WITH
##
## Concrete syntax: include sig open with
##
## Ends in an error in state: 2876.
##
## open_description -> OPEN . ext list(attribute) mod_ext_longident list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
## open_description -> OPEN . BANG ext list(attribute) mod_ext_longident list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## OPEN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG OPEN BANG WITH
##
## Concrete syntax: include sig open ! with
##
## Ends in an error in state: 2877.
##
## open_description -> OPEN BANG . ext list(attribute) mod_ext_longident list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## OPEN BANG
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG OPEN BANG PERCENT AND WHILE
##
## Concrete syntax: include sig open ! % and while
##
## Ends in an error in state: 2878.
##
## open_description -> OPEN BANG ext . list(attribute) mod_ext_longident list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## OPEN BANG ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG OPEN BANG LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: include sig open ! [@ and ] while
##
## Ends in an error in state: 2879.
##
## open_description -> OPEN BANG ext list(attribute) . mod_ext_longident list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## OPEN BANG ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG OPEN BANG UIDENT WITH
##
## Concrete syntax: include sig open ! UIdent with
##
## Ends in an error in state: 2880.
##
## mk_longident(mod_ext_longident,UIDENT) -> mod_ext_longident . DOT UIDENT [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LPAREN LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END DOT CLASS ]
## mod_ext_longident -> mod_ext_longident . LPAREN mod_ext_longident RPAREN [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LPAREN LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END DOT CLASS ]
## mod_ext_longident -> mod_ext_longident . LPAREN error [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LPAREN LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END DOT CLASS ]
## open_description -> OPEN BANG ext list(attribute) mod_ext_longident . list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## OPEN BANG ext list(attribute) mod_ext_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG OPEN PERCENT AND WHILE
##
## Concrete syntax: include sig open % and while
##
## Ends in an error in state: 2882.
##
## open_description -> OPEN ext . list(attribute) mod_ext_longident list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## OPEN ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG OPEN LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: include sig open [@ and ] while
##
## Ends in an error in state: 2883.
##
## open_description -> OPEN ext list(attribute) . mod_ext_longident list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## OPEN ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG OPEN UIDENT WITH
##
## Concrete syntax: include sig open UIdent with
##
## Ends in an error in state: 2884.
##
## mk_longident(mod_ext_longident,UIDENT) -> mod_ext_longident . DOT UIDENT [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LPAREN LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END DOT CLASS ]
## mod_ext_longident -> mod_ext_longident . LPAREN mod_ext_longident RPAREN [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LPAREN LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END DOT CLASS ]
## mod_ext_longident -> mod_ext_longident . LPAREN error [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LPAREN LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END DOT CLASS ]
## open_description -> OPEN ext list(attribute) mod_ext_longident . list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## OPEN ext list(attribute) mod_ext_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG MODULE WITH
##
## Concrete syntax: include sig module with
##
## Ends in an error in state: 2886.
##
## module_subst -> MODULE . ext list(attribute) UIDENT COLONEQUAL mod_ext_longident list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
## module_subst -> MODULE . ext list(attribute) UIDENT COLONEQUAL error [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
## module_type_declaration -> MODULE . TYPE ext list(attribute) ident option(preceded(EQUAL,module_type)) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
## module_type_subst -> MODULE . TYPE ext list(attribute) ident COLONEQUAL module_type list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
## signature_item -> MODULE . ext list(attribute) module_name module_declaration_body list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
## signature_item -> MODULE . ext list(attribute) module_name EQUAL mod_longident list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
## signature_item -> MODULE . ext list(attribute) REC module_name COLON module_type list(post_item_attribute) list(and_module_declaration) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## MODULE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG MODULE TYPE WITH
##
## Concrete syntax: include sig module type with
##
## Ends in an error in state: 2887.
##
## module_type_declaration -> MODULE TYPE . ext list(attribute) ident option(preceded(EQUAL,module_type)) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
## module_type_subst -> MODULE TYPE . ext list(attribute) ident COLONEQUAL module_type list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## MODULE TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG MODULE TYPE PERCENT AND WHILE
##
## Concrete syntax: include sig module type % and while
##
## Ends in an error in state: 2888.
##
## module_type_declaration -> MODULE TYPE ext . list(attribute) ident option(preceded(EQUAL,module_type)) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
## module_type_subst -> MODULE TYPE ext . list(attribute) ident COLONEQUAL module_type list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## MODULE TYPE ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG MODULE TYPE LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: include sig module type [@ and ] while
##
## Ends in an error in state: 2889.
##
## module_type_declaration -> MODULE TYPE ext list(attribute) . ident option(preceded(EQUAL,module_type)) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
## module_type_subst -> MODULE TYPE ext list(attribute) . ident COLONEQUAL module_type list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## MODULE TYPE ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG MODULE TYPE LIDENT WITH
##
## Concrete syntax: include sig module type lident with
##
## Ends in an error in state: 2890.
##
## module_type_declaration -> MODULE TYPE ext list(attribute) ident . option(preceded(EQUAL,module_type)) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
## module_type_subst -> MODULE TYPE ext list(attribute) ident . COLONEQUAL module_type list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## MODULE TYPE ext list(attribute) ident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG MODULE TYPE LIDENT COLONEQUAL WITH
##
## Concrete syntax: include sig module type lident := with
##
## Ends in an error in state: 2891.
##
## module_type_subst -> MODULE TYPE ext list(attribute) ident COLONEQUAL . module_type list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## MODULE TYPE ext list(attribute) ident COLONEQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG MODULE TYPE LIDENT COLONEQUAL QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: include sig module type lident := {%hello|world|} while
##
## Ends in an error in state: 2892.
##
## module_type -> module_type . attribute [ error WITH VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
## module_type -> module_type . MINUSGREATER module_type [ error WITH VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
## module_type -> module_type . WITH reversed_separated_nonempty_llist(AND,with_constraint) [ error WITH VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
## module_type_subst -> MODULE TYPE ext list(attribute) ident COLONEQUAL module_type . list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## MODULE TYPE ext list(attribute) ident COLONEQUAL module_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG MODULE PERCENT AND WHILE
##
## Concrete syntax: include sig module % and while
##
## Ends in an error in state: 2894.
##
## module_subst -> MODULE ext . list(attribute) UIDENT COLONEQUAL mod_ext_longident list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
## module_subst -> MODULE ext . list(attribute) UIDENT COLONEQUAL error [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
## signature_item -> MODULE ext . list(attribute) module_name module_declaration_body list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
## signature_item -> MODULE ext . list(attribute) module_name EQUAL mod_longident list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
## signature_item -> MODULE ext . list(attribute) REC module_name COLON module_type list(post_item_attribute) list(and_module_declaration) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## MODULE ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG MODULE LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: include sig module [@ and ] while
##
## Ends in an error in state: 2895.
##
## module_subst -> MODULE ext list(attribute) . UIDENT COLONEQUAL mod_ext_longident list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
## module_subst -> MODULE ext list(attribute) . UIDENT COLONEQUAL error [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
## signature_item -> MODULE ext list(attribute) . module_name module_declaration_body list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
## signature_item -> MODULE ext list(attribute) . module_name EQUAL mod_longident list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
## signature_item -> MODULE ext list(attribute) . REC module_name COLON module_type list(post_item_attribute) list(and_module_declaration) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## MODULE ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG MODULE UIDENT WITH
##
## Concrete syntax: include sig module UIdent with
##
## Ends in an error in state: 2896.
##
## module_name -> UIDENT . [ LPAREN EQUAL COLON ]
## module_subst -> MODULE ext list(attribute) UIDENT . COLONEQUAL mod_ext_longident list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
## module_subst -> MODULE ext list(attribute) UIDENT . COLONEQUAL error [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## MODULE ext list(attribute) UIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG MODULE UIDENT COLONEQUAL WITH
##
## Concrete syntax: include sig module UIdent := with
##
## Ends in an error in state: 2897.
##
## module_subst -> MODULE ext list(attribute) UIDENT COLONEQUAL . mod_ext_longident list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
## module_subst -> MODULE ext list(attribute) UIDENT COLONEQUAL . error [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## MODULE ext list(attribute) UIDENT COLONEQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG MODULE UIDENT COLONEQUAL UIDENT WITH
##
## Concrete syntax: include sig module UIdent := UIdent with
##
## Ends in an error in state: 2899.
##
## mk_longident(mod_ext_longident,UIDENT) -> mod_ext_longident . DOT UIDENT [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LPAREN LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END DOT CLASS ]
## mod_ext_longident -> mod_ext_longident . LPAREN mod_ext_longident RPAREN [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LPAREN LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END DOT CLASS ]
## mod_ext_longident -> mod_ext_longident . LPAREN error [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LPAREN LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END DOT CLASS ]
## module_subst -> MODULE ext list(attribute) UIDENT COLONEQUAL mod_ext_longident . list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## MODULE ext list(attribute) UIDENT COLONEQUAL mod_ext_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG MODULE REC WITH
##
## Concrete syntax: include sig module rec with
##
## Ends in an error in state: 2901.
##
## signature_item -> MODULE ext list(attribute) REC . module_name COLON module_type list(post_item_attribute) list(and_module_declaration) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## MODULE ext list(attribute) REC
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG MODULE REC UIDENT WITH
##
## Concrete syntax: include sig module rec UIdent with
##
## Ends in an error in state: 2902.
##
## signature_item -> MODULE ext list(attribute) REC module_name . COLON module_type list(post_item_attribute) list(and_module_declaration) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## MODULE ext list(attribute) REC module_name
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG MODULE REC UIDENT COLON WITH
##
## Concrete syntax: include sig module rec UIdent : with
##
## Ends in an error in state: 2903.
##
## signature_item -> MODULE ext list(attribute) REC module_name COLON . module_type list(post_item_attribute) list(and_module_declaration) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## MODULE ext list(attribute) REC module_name COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG MODULE REC UIDENT COLON QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: include sig module rec UIdent : {%hello|world|} while
##
## Ends in an error in state: 2904.
##
## module_type -> module_type . attribute [ error WITH VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## module_type -> module_type . MINUSGREATER module_type [ error WITH VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## module_type -> module_type . WITH reversed_separated_nonempty_llist(AND,with_constraint) [ error WITH VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## signature_item -> MODULE ext list(attribute) REC module_name COLON module_type . list(post_item_attribute) list(and_module_declaration) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## MODULE ext list(attribute) REC module_name COLON module_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG MODULE REC UIDENT COLON QUOTED_STRING_EXPR LBRACKETATAT AND RBRACKET METHOD
##
## Concrete syntax: include sig module rec UIdent : {%hello|world|} [@@ and ] method
##
## Ends in an error in state: 2905.
##
## signature_item -> MODULE ext list(attribute) REC module_name COLON module_type list(post_item_attribute) . list(and_module_declaration) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## MODULE ext list(attribute) REC module_name COLON module_type list(post_item_attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1600, spurious reduction of production list(post_item_attribute) ->
## In state 1601, spurious reduction of production list(post_item_attribute) -> post_item_attribute list(post_item_attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG MODULE REC UIDENT COLON QUOTED_STRING_EXPR AND WITH
##
## Concrete syntax: include sig module rec UIdent : {%hello|world|} and with
##
## Ends in an error in state: 2906.
##
## list(and_module_declaration) -> AND . list(attribute) module_name COLON module_type list(post_item_attribute) list(and_module_declaration) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## AND
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG MODULE REC UIDENT COLON QUOTED_STRING_EXPR AND LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: include sig module rec UIdent : {%hello|world|} and [@ and ] while
##
## Ends in an error in state: 2907.
##
## list(and_module_declaration) -> AND list(attribute) . module_name COLON module_type list(post_item_attribute) list(and_module_declaration) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## AND list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG MODULE REC UIDENT COLON QUOTED_STRING_EXPR AND UIDENT WITH
##
## Concrete syntax: include sig module rec UIdent : {%hello|world|} and UIdent with
##
## Ends in an error in state: 2908.
##
## list(and_module_declaration) -> AND list(attribute) module_name . COLON module_type list(post_item_attribute) list(and_module_declaration) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## AND list(attribute) module_name
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG MODULE REC UIDENT COLON QUOTED_STRING_EXPR AND UIDENT COLON WITH
##
## Concrete syntax: include sig module rec UIdent : {%hello|world|} and UIdent : with
##
## Ends in an error in state: 2909.
##
## list(and_module_declaration) -> AND list(attribute) module_name COLON . module_type list(post_item_attribute) list(and_module_declaration) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## AND list(attribute) module_name COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG MODULE REC UIDENT COLON QUOTED_STRING_EXPR AND UIDENT COLON QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: include sig module rec UIdent : {%hello|world|} and UIdent : {%hello|world|} while
##
## Ends in an error in state: 2910.
##
## list(and_module_declaration) -> AND list(attribute) module_name COLON module_type . list(post_item_attribute) list(and_module_declaration) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
## module_type -> module_type . attribute [ error WITH VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## module_type -> module_type . MINUSGREATER module_type [ error WITH VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
## module_type -> module_type . WITH reversed_separated_nonempty_llist(AND,with_constraint) [ error WITH VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
##
## The known suffix of the stack is as follows:
## AND list(attribute) module_name COLON module_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG MODULE REC UIDENT COLON QUOTED_STRING_EXPR AND UIDENT COLON QUOTED_STRING_EXPR LBRACKETATAT AND RBRACKET METHOD
##
## Concrete syntax: include sig module rec UIdent : {%hello|world|} and UIdent : {%hello|world|} [@@ and ] method
##
## Ends in an error in state: 2911.
##
## list(and_module_declaration) -> AND list(attribute) module_name COLON module_type list(post_item_attribute) . list(and_module_declaration) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## AND list(attribute) module_name COLON module_type list(post_item_attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1600, spurious reduction of production list(post_item_attribute) ->
## In state 1601, spurious reduction of production list(post_item_attribute) -> post_item_attribute list(post_item_attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG MODULE UNDERSCORE WITH
##
## Concrete syntax: include sig module _ with
##
## Ends in an error in state: 2914.
##
## signature_item -> MODULE ext list(attribute) module_name . module_declaration_body list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
## signature_item -> MODULE ext list(attribute) module_name . EQUAL mod_longident list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## MODULE ext list(attribute) module_name
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG MODULE UIDENT EQUAL WITH
##
## Concrete syntax: include sig module UIdent = with
##
## Ends in an error in state: 2915.
##
## signature_item -> MODULE ext list(attribute) module_name EQUAL . mod_longident list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## MODULE ext list(attribute) module_name EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG MODULE UIDENT EQUAL UIDENT WITH
##
## Concrete syntax: include sig module UIdent = UIdent with
##
## Ends in an error in state: 2916.
##
## mk_longident(mod_longident,UIDENT) -> mod_longident . DOT UIDENT [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END DOT CLASS ]
## signature_item -> MODULE ext list(attribute) module_name EQUAL mod_longident . list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## MODULE ext list(attribute) module_name EQUAL mod_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG MODULE UIDENT COLON WITH
##
## Concrete syntax: include sig module UIdent : with
##
## Ends in an error in state: 2918.
##
## module_declaration_body -> COLON . module_type [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG MODULE UIDENT COLON QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: include sig module UIdent : {%hello|world|} while
##
## Ends in an error in state: 2919.
##
## module_declaration_body -> COLON module_type . [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
## module_type -> module_type . attribute [ error WITH VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
## module_type -> module_type . MINUSGREATER module_type [ error WITH VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
## module_type -> module_type . WITH reversed_separated_nonempty_llist(AND,with_constraint) [ error WITH VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## COLON module_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG MODULE UIDENT LPAREN RPAREN WITH
##
## Concrete syntax: include sig module UIdent ( ) with
##
## Ends in an error in state: 2922.
##
## module_declaration_body -> functor_arg . module_declaration_body [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## functor_arg
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG INCLUDE WITH
##
## Concrete syntax: include sig include with
##
## Ends in an error in state: 2924.
##
## signature_item -> INCLUDE . ext list(attribute) module_type list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## INCLUDE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG INCLUDE PERCENT AND WHILE
##
## Concrete syntax: include sig include % and while
##
## Ends in an error in state: 2925.
##
## signature_item -> INCLUDE ext . list(attribute) module_type list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## INCLUDE ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG INCLUDE LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: include sig include [@ and ] while
##
## Ends in an error in state: 2926.
##
## signature_item -> INCLUDE ext list(attribute) . module_type list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## INCLUDE ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG INCLUDE QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: include sig include {%hello|world|} while
##
## Ends in an error in state: 2927.
##
## module_type -> module_type . attribute [ error WITH VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
## module_type -> module_type . MINUSGREATER module_type [ error WITH VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
## module_type -> module_type . WITH reversed_separated_nonempty_llist(AND,with_constraint) [ error WITH VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
## signature_item -> INCLUDE ext list(attribute) module_type . list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## INCLUDE ext list(attribute) module_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG EXCEPTION WITH
##
## Concrete syntax: include sig exception with
##
## Ends in an error in state: 2929.
##
## sig_exception_declaration -> EXCEPTION . ext list(attribute) constr_ident generalized_constructor_arguments list(attribute) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## EXCEPTION
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG EXCEPTION PERCENT AND WHILE
##
## Concrete syntax: include sig exception % and while
##
## Ends in an error in state: 2930.
##
## sig_exception_declaration -> EXCEPTION ext . list(attribute) constr_ident generalized_constructor_arguments list(attribute) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## EXCEPTION ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG EXCEPTION LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: include sig exception [@ and ] while
##
## Ends in an error in state: 2931.
##
## sig_exception_declaration -> EXCEPTION ext list(attribute) . constr_ident generalized_constructor_arguments list(attribute) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## EXCEPTION ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG EXCEPTION FALSE WITH
##
## Concrete syntax: include sig exception false with
##
## Ends in an error in state: 2932.
##
## sig_exception_declaration -> EXCEPTION ext list(attribute) constr_ident . generalized_constructor_arguments list(attribute) list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## EXCEPTION ext list(attribute) constr_ident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG CLASS WITH
##
## Concrete syntax: include sig class with
##
## Ends in an error in state: 2933.
##
## class_type_declarations -> CLASS . TYPE ext list(attribute) virtual_flag formal_class_parameters LIDENT EQUAL class_signature list(post_item_attribute) list(and_class_type_declaration) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
## signature_item -> CLASS . ext list(attribute) virtual_flag formal_class_parameters LIDENT COLON class_type list(post_item_attribute) list(and_class_description) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## CLASS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG CLASS PERCENT AND WHILE
##
## Concrete syntax: include sig class % and while
##
## Ends in an error in state: 2934.
##
## signature_item -> CLASS ext . list(attribute) virtual_flag formal_class_parameters LIDENT COLON class_type list(post_item_attribute) list(and_class_description) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## CLASS ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG CLASS LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: include sig class [@ and ] while
##
## Ends in an error in state: 2935.
##
## signature_item -> CLASS ext list(attribute) . virtual_flag formal_class_parameters LIDENT COLON class_type list(post_item_attribute) list(and_class_description) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## CLASS ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG CLASS VIRTUAL WITH
##
## Concrete syntax: include sig class virtual with
##
## Ends in an error in state: 2936.
##
## signature_item -> CLASS ext list(attribute) virtual_flag . formal_class_parameters LIDENT COLON class_type list(post_item_attribute) list(and_class_description) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## CLASS ext list(attribute) virtual_flag
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG CLASS LBRACKET UNDERSCORE RBRACKET WITH
##
## Concrete syntax: include sig class [ _ ] with
##
## Ends in an error in state: 2937.
##
## signature_item -> CLASS ext list(attribute) virtual_flag formal_class_parameters . LIDENT COLON class_type list(post_item_attribute) list(and_class_description) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## CLASS ext list(attribute) virtual_flag formal_class_parameters
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG CLASS LIDENT WITH
##
## Concrete syntax: include sig class lident with
##
## Ends in an error in state: 2938.
##
## signature_item -> CLASS ext list(attribute) virtual_flag formal_class_parameters LIDENT . COLON class_type list(post_item_attribute) list(and_class_description) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## CLASS ext list(attribute) virtual_flag formal_class_parameters LIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG CLASS LIDENT COLON WITH
##
## Concrete syntax: include sig class lident : with
##
## Ends in an error in state: 2939.
##
## signature_item -> CLASS ext list(attribute) virtual_flag formal_class_parameters LIDENT COLON . class_type list(post_item_attribute) list(and_class_description) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## CLASS ext list(attribute) virtual_flag formal_class_parameters LIDENT COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG CLASS LIDENT COLON QUOTED_STRING_EXPR RPAREN
##
## Concrete syntax: include sig class lident : {%hello|world|} )
##
## Ends in an error in state: 2940.
##
## signature_item -> CLASS ext list(attribute) virtual_flag formal_class_parameters LIDENT COLON class_type . list(post_item_attribute) list(and_class_description) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## CLASS ext list(attribute) virtual_flag formal_class_parameters LIDENT COLON class_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1816, spurious reduction of production class_signature -> extension
## In state 1818, spurious reduction of production class_type -> class_signature
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG CLASS LIDENT COLON QUOTED_STRING_EXPR LBRACKETATAT AND RBRACKET METHOD
##
## Concrete syntax: include sig class lident : {%hello|world|} [@@ and ] method
##
## Ends in an error in state: 2941.
##
## signature_item -> CLASS ext list(attribute) virtual_flag formal_class_parameters LIDENT COLON class_type list(post_item_attribute) . list(and_class_description) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## CLASS ext list(attribute) virtual_flag formal_class_parameters LIDENT COLON class_type list(post_item_attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1600, spurious reduction of production list(post_item_attribute) ->
## In state 1601, spurious reduction of production list(post_item_attribute) -> post_item_attribute list(post_item_attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG CLASS LIDENT COLON QUOTED_STRING_EXPR AND WITH
##
## Concrete syntax: include sig class lident : {%hello|world|} and with
##
## Ends in an error in state: 2942.
##
## list(and_class_description) -> AND . list(attribute) virtual_flag formal_class_parameters LIDENT COLON class_type list(post_item_attribute) list(and_class_description) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## AND
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG CLASS LIDENT COLON QUOTED_STRING_EXPR AND LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: include sig class lident : {%hello|world|} and [@ and ] while
##
## Ends in an error in state: 2943.
##
## list(and_class_description) -> AND list(attribute) . virtual_flag formal_class_parameters LIDENT COLON class_type list(post_item_attribute) list(and_class_description) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## AND list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG CLASS LIDENT COLON QUOTED_STRING_EXPR AND VIRTUAL WITH
##
## Concrete syntax: include sig class lident : {%hello|world|} and virtual with
##
## Ends in an error in state: 2944.
##
## list(and_class_description) -> AND list(attribute) virtual_flag . formal_class_parameters LIDENT COLON class_type list(post_item_attribute) list(and_class_description) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## AND list(attribute) virtual_flag
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG CLASS LIDENT COLON QUOTED_STRING_EXPR AND LBRACKET UNDERSCORE RBRACKET WITH
##
## Concrete syntax: include sig class lident : {%hello|world|} and [ _ ] with
##
## Ends in an error in state: 2945.
##
## list(and_class_description) -> AND list(attribute) virtual_flag formal_class_parameters . LIDENT COLON class_type list(post_item_attribute) list(and_class_description) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## AND list(attribute) virtual_flag formal_class_parameters
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG CLASS LIDENT COLON QUOTED_STRING_EXPR AND LIDENT WITH
##
## Concrete syntax: include sig class lident : {%hello|world|} and lident with
##
## Ends in an error in state: 2946.
##
## list(and_class_description) -> AND list(attribute) virtual_flag formal_class_parameters LIDENT . COLON class_type list(post_item_attribute) list(and_class_description) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## AND list(attribute) virtual_flag formal_class_parameters LIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG CLASS LIDENT COLON QUOTED_STRING_EXPR AND LIDENT COLON WITH
##
## Concrete syntax: include sig class lident : {%hello|world|} and lident : with
##
## Ends in an error in state: 2947.
##
## list(and_class_description) -> AND list(attribute) virtual_flag formal_class_parameters LIDENT COLON . class_type list(post_item_attribute) list(and_class_description) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## AND list(attribute) virtual_flag formal_class_parameters LIDENT COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG CLASS LIDENT COLON QUOTED_STRING_EXPR AND LIDENT COLON QUOTED_STRING_EXPR RPAREN
##
## Concrete syntax: include sig class lident : {%hello|world|} and lident : {%hello|world|} )
##
## Ends in an error in state: 2948.
##
## list(and_class_description) -> AND list(attribute) virtual_flag formal_class_parameters LIDENT COLON class_type . list(post_item_attribute) list(and_class_description) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## AND list(attribute) virtual_flag formal_class_parameters LIDENT COLON class_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1816, spurious reduction of production class_signature -> extension
## In state 1818, spurious reduction of production class_type -> class_signature
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG CLASS LIDENT COLON QUOTED_STRING_EXPR AND LIDENT COLON QUOTED_STRING_EXPR LBRACKETATAT AND RBRACKET METHOD
##
## Concrete syntax: include sig class lident : {%hello|world|} and lident : {%hello|world|} [@@ and ] method
##
## Ends in an error in state: 2949.
##
## list(and_class_description) -> AND list(attribute) virtual_flag formal_class_parameters LIDENT COLON class_type list(post_item_attribute) . list(and_class_description) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## AND list(attribute) virtual_flag formal_class_parameters LIDENT COLON class_type list(post_item_attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1600, spurious reduction of production list(post_item_attribute) ->
## In state 1601, spurious reduction of production list(post_item_attribute) -> post_item_attribute list(post_item_attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG LBRACKETATATAT AND RBRACKET WITH
##
## Concrete syntax: include sig [@@@ and ] with
##
## Ends in an error in state: 2953.
##
## list(signature_element) -> signature_item . list(signature_element) [ error END ]
##
## The known suffix of the stack is as follows:
## signature_item
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG QUOTED_STRING_ITEM WITH
##
## Concrete syntax: include sig {%%hello|world|} with
##
## Ends in an error in state: 2961.
##
## signature_item -> item_extension . list(post_item_attribute) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## item_extension
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG TYPE LIDENT EQUAL FALSE LET
##
## Concrete syntax: include sig type lident = false let
##
## Ends in an error in state: 2963.
##
## signature_item -> generic_type_declaration(nonrec_flag,type_kind) . list(generic_and_type_declaration(type_kind)) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## generic_type_declaration(nonrec_flag,type_kind)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 2783, spurious reduction of production generalized_constructor_arguments ->
## In state 2784, spurious reduction of production list(attribute) ->
## In state 2785, spurious reduction of production generic_constructor_declaration(epsilon) -> constr_ident generalized_constructor_arguments list(attribute)
## In state 2779, spurious reduction of production reversed_bar_llist(constructor_declaration) -> generic_constructor_declaration(epsilon)
## In state 2776, spurious reduction of production constructor_declarations -> reversed_bar_llist(constructor_declaration)
## In state 2804, spurious reduction of production nonempty_type_kind -> constructor_declarations
## In state 2790, spurious reduction of production type_kind -> EQUAL nonempty_type_kind
## In state 2830, spurious reduction of production reversed_llist(preceded(CONSTRAINT,constrain)) ->
## In state 2831, spurious reduction of production list(post_item_attribute) ->
## In state 2832, spurious reduction of production generic_type_declaration(nonrec_flag,type_kind) -> TYPE ext list(attribute) type_parameters LIDENT type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG TYPE LIDENT COLONEQUAL FALSE LBRACKETATAT AND RBRACKET METHOD
##
## Concrete syntax: include sig type lident := false [@@ and ] method
##
## Ends in an error in state: 2965.
##
## signature_item -> generic_type_declaration(no_nonrec_flag,type_subst_kind) . list(generic_and_type_declaration(type_subst_kind)) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## generic_type_declaration(no_nonrec_flag,type_subst_kind)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1600, spurious reduction of production list(post_item_attribute) ->
## In state 1601, spurious reduction of production list(post_item_attribute) -> post_item_attribute list(post_item_attribute)
## In state 2869, spurious reduction of production generic_type_declaration(no_nonrec_flag,type_subst_kind) -> TYPE ext list(attribute) type_parameters LIDENT COLONEQUAL nonempty_type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG TYPE LIDENT COLONEQUAL FALSE AND WITH
##
## Concrete syntax: include sig type lident := false and with
##
## Ends in an error in state: 2966.
##
## list(generic_and_type_declaration(type_subst_kind)) -> AND . list(attribute) type_parameters LIDENT COLONEQUAL nonempty_type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) list(generic_and_type_declaration(type_subst_kind)) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## AND
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG TYPE LIDENT COLONEQUAL FALSE AND LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: include sig type lident := false and [@ and ] while
##
## Ends in an error in state: 2967.
##
## list(generic_and_type_declaration(type_subst_kind)) -> AND list(attribute) . type_parameters LIDENT COLONEQUAL nonempty_type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) list(generic_and_type_declaration(type_subst_kind)) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## AND list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG TYPE LIDENT COLONEQUAL FALSE AND UNDERSCORE WITH
##
## Concrete syntax: include sig type lident := false and _ with
##
## Ends in an error in state: 2968.
##
## list(generic_and_type_declaration(type_subst_kind)) -> AND list(attribute) type_parameters . LIDENT COLONEQUAL nonempty_type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) list(generic_and_type_declaration(type_subst_kind)) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## AND list(attribute) type_parameters
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG TYPE LIDENT COLONEQUAL FALSE AND LIDENT WITH
##
## Concrete syntax: include sig type lident := false and lident with
##
## Ends in an error in state: 2969.
##
## list(generic_and_type_declaration(type_subst_kind)) -> AND list(attribute) type_parameters LIDENT . COLONEQUAL nonempty_type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) list(generic_and_type_declaration(type_subst_kind)) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## AND list(attribute) type_parameters LIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG TYPE LIDENT COLONEQUAL FALSE AND LIDENT COLONEQUAL WITH
##
## Concrete syntax: include sig type lident := false and lident := with
##
## Ends in an error in state: 2970.
##
## list(generic_and_type_declaration(type_subst_kind)) -> AND list(attribute) type_parameters LIDENT COLONEQUAL . nonempty_type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) list(generic_and_type_declaration(type_subst_kind)) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## AND list(attribute) type_parameters LIDENT COLONEQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG TYPE LIDENT COLONEQUAL FALSE AND LIDENT COLONEQUAL FALSE LET
##
## Concrete syntax: include sig type lident := false and lident := false let
##
## Ends in an error in state: 2972.
##
## list(generic_and_type_declaration(type_subst_kind)) -> AND list(attribute) type_parameters LIDENT COLONEQUAL nonempty_type_kind reversed_llist(preceded(CONSTRAINT,constrain)) . list(post_item_attribute) list(generic_and_type_declaration(type_subst_kind)) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
## reversed_llist(preceded(CONSTRAINT,constrain)) -> reversed_llist(preceded(CONSTRAINT,constrain)) . CONSTRAINT core_type EQUAL core_type [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE EXTERNAL EXCEPTION END CONSTRAINT CLASS AND ]
##
## The known suffix of the stack is as follows:
## AND list(attribute) type_parameters LIDENT COLONEQUAL nonempty_type_kind reversed_llist(preceded(CONSTRAINT,constrain))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 2783, spurious reduction of production generalized_constructor_arguments ->
## In state 2784, spurious reduction of production list(attribute) ->
## In state 2785, spurious reduction of production generic_constructor_declaration(epsilon) -> constr_ident generalized_constructor_arguments list(attribute)
## In state 2779, spurious reduction of production reversed_bar_llist(constructor_declaration) -> generic_constructor_declaration(epsilon)
## In state 2776, spurious reduction of production constructor_declarations -> reversed_bar_llist(constructor_declaration)
## In state 2804, spurious reduction of production nonempty_type_kind -> constructor_declarations
## In state 2971, spurious reduction of production reversed_llist(preceded(CONSTRAINT,constrain)) ->
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG TYPE LIDENT COLONEQUAL FALSE AND LIDENT COLONEQUAL FALSE LBRACKETATAT AND RBRACKET METHOD
##
## Concrete syntax: include sig type lident := false and lident := false [@@ and ] method
##
## Ends in an error in state: 2973.
##
## list(generic_and_type_declaration(type_subst_kind)) -> AND list(attribute) type_parameters LIDENT COLONEQUAL nonempty_type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) . list(generic_and_type_declaration(type_subst_kind)) [ error VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE EXTERNAL EXCEPTION END CLASS ]
##
## The known suffix of the stack is as follows:
## AND list(attribute) type_parameters LIDENT COLONEQUAL nonempty_type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1600, spurious reduction of production list(post_item_attribute) ->
## In state 1601, spurious reduction of production list(post_item_attribute) -> post_item_attribute list(post_item_attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: LPAREN MODULE UIDENT COLON QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: ( module UIdent : {%hello|world|} while
##
## Ends in an error in state: 2983.
##
## module_type -> module_type . attribute [ error WITH RPAREN MINUSGREATER LBRACKETAT ]
## module_type -> module_type . MINUSGREATER module_type [ error WITH RPAREN MINUSGREATER LBRACKETAT ]
## module_type -> module_type . WITH reversed_separated_nonempty_llist(AND,with_constraint) [ error WITH RPAREN MINUSGREATER LBRACKETAT ]
## simple_pattern_not_ident -> LPAREN MODULE ext list(attribute) module_name COLON module_type . RPAREN [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
## simple_pattern_not_ident -> LPAREN MODULE ext list(attribute) module_name COLON module_type . error [ WHEN UNDERSCORE UIDENT TRUE TILDE STRING RPAREN RBRACKET QUOTED_STRING_EXPR QUESTION PLUS OPTLABEL MINUSGREATER MINUS LPAREN LIDENT LBRACKETPERCENT LBRACKETBAR LBRACKETAT LBRACKET LBRACE LABEL INT HASH FLOAT FALSE EQUAL EOF COMMA COLONGREATER COLONCOLON COLON CHAR BAR BACKQUOTE AS ]
##
## The known suffix of the stack is as follows:
## LPAREN MODULE ext list(attribute) module_name COLON module_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT LPAREN QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: object ( {%hello|world|} while
##
## Ends in an error in state: 2986.
##
## class_self_pattern -> LPAREN pattern . RPAREN [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT ]
## class_self_pattern -> LPAREN pattern . COLON core_type RPAREN [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT ]
## pattern -> pattern . COLONCOLON pattern [ RPAREN LBRACKETAT COMMA COLONCOLON COLON BAR AS ]
## pattern -> pattern . attribute [ RPAREN LBRACKETAT COMMA COLONCOLON COLON BAR AS ]
## pattern -> pattern . AS val_ident [ RPAREN LBRACKETAT COMMA COLONCOLON COLON BAR AS ]
## pattern -> pattern . AS error [ RPAREN LBRACKETAT COMMA COLONCOLON COLON BAR AS ]
## pattern -> pattern . COLONCOLON error [ RPAREN LBRACKETAT COMMA COLONCOLON COLON BAR AS ]
## pattern -> pattern . BAR pattern [ RPAREN LBRACKETAT COMMA COLONCOLON COLON BAR AS ]
## pattern -> pattern . BAR error [ RPAREN LBRACKETAT COMMA COLONCOLON COLON BAR AS ]
## pattern_comma_list(pattern) -> pattern . COMMA pattern [ RPAREN LBRACKETAT COMMA COLONCOLON COLON BAR AS ]
## pattern_comma_list(pattern) -> pattern . COMMA error [ RPAREN LBRACKETAT COMMA COLONCOLON COLON BAR AS ]
##
## The known suffix of the stack is as follows:
## LPAREN pattern
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT LPAREN FALSE COLON WITH
##
## Concrete syntax: object ( false : with
##
## Ends in an error in state: 2988.
##
## class_self_pattern -> LPAREN pattern COLON . core_type RPAREN [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT ]
##
## The known suffix of the stack is as follows:
## LPAREN pattern COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT LPAREN FALSE COLON QUOTED_STRING_EXPR WITH
##
## Concrete syntax: object ( false : {%hello|world|} with
##
## Ends in an error in state: 2989.
##
## class_self_pattern -> LPAREN pattern COLON core_type . RPAREN [ error VAL QUOTED_STRING_ITEM METHOD LBRACKETPERCENTPERCENT LBRACKETATATAT INITIALIZER INHERIT END CONSTRAINT ]
## core_type -> core_type . attribute [ RPAREN LBRACKETAT ]
##
## The known suffix of the stack is as follows:
## LPAREN pattern COLON core_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 358, spurious reduction of production tuple_type -> atomic_type
## In state 344, spurious reduction of production function_type -> tuple_type
## In state 374, spurious reduction of production alias_type -> function_type
## In state 384, spurious reduction of production core_type -> alias_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT LPAREN FALSE RPAREN WITH
##
## Concrete syntax: object ( false ) with
##
## Ends in an error in state: 2991.
##
## expr -> OBJECT ext list(attribute) class_self_pattern . list(text_cstr(class_field)) END [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> OBJECT ext list(attribute) class_self_pattern . list(text_cstr(class_field)) error [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## OBJECT ext list(attribute) class_self_pattern
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET WHILE UIDENT VAL
##
## Concrete syntax: [ while UIdent val
##
## Ends in an error in state: 2995.
##
## expr -> WHILE ext list(attribute) seq_expr . DO seq_expr DONE [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## WHILE ext list(attribute) seq_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 943, spurious reduction of production constr_longident -> mod_longident
## In state 1178, spurious reduction of production simple_expr -> constr_longident
## In state 1032, spurious reduction of production expr -> simple_expr
## In state 1172, spurious reduction of production seq_expr -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET WHILE UIDENT DO WITH
##
## Concrete syntax: [ while UIdent do with
##
## Ends in an error in state: 2996.
##
## expr -> WHILE ext list(attribute) seq_expr DO . seq_expr DONE [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## WHILE ext list(attribute) seq_expr DO
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKET WHILE UIDENT DO UIDENT VAL
##
## Concrete syntax: [ while UIdent do UIdent val
##
## Ends in an error in state: 2997.
##
## expr -> WHILE ext list(attribute) seq_expr DO seq_expr . DONE [ error VAL TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSDOT MINUS METHOD LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN GREATERRBRACE GREATER EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS BARRBRACKET BARBAR BAR AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## WHILE ext list(attribute) seq_expr DO seq_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 943, spurious reduction of production constr_longident -> mod_longident
## In state 1178, spurious reduction of production simple_expr -> constr_longident
## In state 1032, spurious reduction of production expr -> simple_expr
## In state 1172, spurious reduction of production seq_expr -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LPAREN MODULE WITH
##
## Concrete syntax: ( module with
##
## Ends in an error in state: 2999.
##
## simple_expr -> LPAREN MODULE . ext list(attribute) module_expr RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> LPAREN MODULE . ext list(attribute) module_expr COLON module_type RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> LPAREN MODULE . ext list(attribute) module_expr COLON error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## val_extra_ident -> LPAREN MODULE . error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LPAREN MODULE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LPAREN MODULE PERCENT AND WHILE
##
## Concrete syntax: ( module % and while
##
## Ends in an error in state: 3000.
##
## simple_expr -> LPAREN MODULE ext . list(attribute) module_expr RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> LPAREN MODULE ext . list(attribute) module_expr COLON module_type RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> LPAREN MODULE ext . list(attribute) module_expr COLON error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LPAREN MODULE ext
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production attr_id -> single_attr_id
## In state 57, spurious reduction of production ext -> PERCENT attr_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LPAREN MODULE LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: ( module [@ and ] while
##
## Ends in an error in state: 3001.
##
## simple_expr -> LPAREN MODULE ext list(attribute) . module_expr RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> LPAREN MODULE ext list(attribute) . module_expr COLON module_type RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> LPAREN MODULE ext list(attribute) . module_expr COLON error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LPAREN MODULE ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LPAREN MODULE QUOTED_STRING_EXPR WITH
##
## Concrete syntax: ( module {%hello|world|} with
##
## Ends in an error in state: 3002.
##
## module_expr -> module_expr . attribute [ RPAREN LPAREN LBRACKETAT COLON ]
## module_expr -> module_expr . paren_module_expr [ RPAREN LPAREN LBRACKETAT COLON ]
## module_expr -> module_expr . LPAREN RPAREN [ RPAREN LPAREN LBRACKETAT COLON ]
## simple_expr -> LPAREN MODULE ext list(attribute) module_expr . RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> LPAREN MODULE ext list(attribute) module_expr . COLON module_type RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> LPAREN MODULE ext list(attribute) module_expr . COLON error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LPAREN MODULE ext list(attribute) module_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LPAREN MODULE QUOTED_STRING_EXPR COLON WITH
##
## Concrete syntax: ( module {%hello|world|} : with
##
## Ends in an error in state: 3004.
##
## simple_expr -> LPAREN MODULE ext list(attribute) module_expr COLON . module_type RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> LPAREN MODULE ext list(attribute) module_expr COLON . error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LPAREN MODULE ext list(attribute) module_expr COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LPAREN MODULE QUOTED_STRING_EXPR COLON QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: ( module {%hello|world|} : {%hello|world|} while
##
## Ends in an error in state: 3006.
##
## module_type -> module_type . attribute [ WITH RPAREN MINUSGREATER LBRACKETAT ]
## module_type -> module_type . MINUSGREATER module_type [ WITH RPAREN MINUSGREATER LBRACKETAT ]
## module_type -> module_type . WITH reversed_separated_nonempty_llist(AND,with_constraint) [ WITH RPAREN MINUSGREATER LBRACKETAT ]
## simple_expr -> LPAREN MODULE ext list(attribute) module_expr COLON module_type . RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LPAREN MODULE ext list(attribute) module_expr COLON module_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LPAREN UIDENT VAL
##
## Concrete syntax: ( UIdent val
##
## Ends in an error in state: 3008.
##
## simple_expr -> LPAREN seq_expr . RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> LPAREN seq_expr . error [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
## simple_expr -> LPAREN seq_expr . type_constraint RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LPAREN seq_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1048, spurious reduction of production constr_longident -> mod_longident
## In state 1101, spurious reduction of production simple_expr -> constr_longident
## In state 1074, spurious reduction of production expr -> simple_expr
## In state 1095, spurious reduction of production seq_expr -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LPAREN UIDENT COLON QUOTED_STRING_EXPR EQUAL
##
## Concrete syntax: ( UIdent : {%hello|world|} =
##
## Ends in an error in state: 3011.
##
## simple_expr -> LPAREN seq_expr type_constraint . RPAREN [ WITH VAL UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LPAREN seq_expr type_constraint
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 358, spurious reduction of production tuple_type -> atomic_type
## In state 344, spurious reduction of production function_type -> tuple_type
## In state 374, spurious reduction of production alias_type -> function_type
## In state 384, spurious reduction of production core_type -> alias_type
## In state 1234, spurious reduction of production type_constraint -> COLON core_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: TRY UIDENT VAL
##
## Concrete syntax: try UIdent val
##
## Ends in an error in state: 3014.
##
## expr -> TRY ext list(attribute) seq_expr . WITH reversed_preceded_or_separated_nonempty_llist(BAR,match_case) [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> TRY ext list(attribute) seq_expr . WITH error [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## TRY ext list(attribute) seq_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 943, spurious reduction of production constr_longident -> mod_longident
## In state 1178, spurious reduction of production simple_expr -> constr_longident
## In state 1032, spurious reduction of production expr -> simple_expr
## In state 1172, spurious reduction of production seq_expr -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: TRY UIDENT WITH WITH
##
## Concrete syntax: try UIdent with with
##
## Ends in an error in state: 3015.
##
## expr -> TRY ext list(attribute) seq_expr WITH . reversed_preceded_or_separated_nonempty_llist(BAR,match_case) [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## expr -> TRY ext list(attribute) seq_expr WITH . error [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## TRY ext list(attribute) seq_expr WITH
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: TRY UIDENT WITH FALSE MINUSGREATER DOT WHILE
##
## Concrete syntax: try UIdent with false -> . while
##
## Ends in an error in state: 3017.
##
## expr -> TRY ext list(attribute) seq_expr WITH reversed_preceded_or_separated_nonempty_llist(BAR,match_case) . [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
## reversed_preceded_or_separated_nonempty_llist(BAR,match_case) -> reversed_preceded_or_separated_nonempty_llist(BAR,match_case) . BAR match_case [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## TRY ext list(attribute) seq_expr WITH reversed_preceded_or_separated_nonempty_llist(BAR,match_case)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: LBRACKETPERCENT AND SEMISEMI EOF
##
## Concrete syntax: [% and ;; 
##
## Ends in an error in state: 3018.
##
## extension -> LBRACKETPERCENT attr_id payload . RBRACKET [ WITH WHEN VAL UNDERSCORE UIDENT TYPE TRUE TO TILDE THEN STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUESTION PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN NEW MODULE MINUSGREATER MINUSDOT MINUS LPAREN LIDENT LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASHOP HASH GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DOTOP DOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE AS ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LBRACKETPERCENT attr_id payload
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 433, spurious reduction of production list(structure_element) ->
## In state 2763, spurious reduction of production list(structure_element) -> SEMISEMI list(structure_element)
## In state 1669, spurious reduction of production structure -> list(structure_element)
## In state 1663, spurious reduction of production payload -> structure
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: LESS LIDENT COLON QUOTED_STRING_EXPR RBRACE
##
## Concrete syntax: < lident : {%hello|world|} }
##
## Ends in an error in state: 3020.
##
## meth_list -> LIDENT COLON possibly_poly(core_type_no_attr) . list(attribute) SEMI list(attribute) meth_list [ GREATER ]
## meth_list -> LIDENT COLON possibly_poly(core_type_no_attr) . list(attribute) SEMI list(attribute) [ GREATER ]
## meth_list -> LIDENT COLON possibly_poly(core_type_no_attr) . list(attribute) [ GREATER ]
##
## The known suffix of the stack is as follows:
## LIDENT COLON possibly_poly(core_type_no_attr)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 358, spurious reduction of production tuple_type -> atomic_type
## In state 344, spurious reduction of production function_type -> tuple_type
## In state 374, spurious reduction of production alias_type -> function_type
## In state 1372, spurious reduction of production possibly_poly(core_type_no_attr) -> alias_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: LESS LIDENT COLON QUOTED_STRING_EXPR LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: < lident : {%hello|world|} [@ and ] while
##
## Ends in an error in state: 3021.
##
## meth_list -> LIDENT COLON possibly_poly(core_type_no_attr) list(attribute) . SEMI list(attribute) meth_list [ GREATER ]
## meth_list -> LIDENT COLON possibly_poly(core_type_no_attr) list(attribute) . SEMI list(attribute) [ GREATER ]
## meth_list -> LIDENT COLON possibly_poly(core_type_no_attr) list(attribute) . [ GREATER ]
##
## The known suffix of the stack is as follows:
## LIDENT COLON possibly_poly(core_type_no_attr) list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: LESS LIDENT COLON QUOTED_STRING_EXPR SEMI WITH
##
## Concrete syntax: < lident : {%hello|world|} ; with
##
## Ends in an error in state: 3022.
##
## meth_list -> LIDENT COLON possibly_poly(core_type_no_attr) list(attribute) SEMI . list(attribute) meth_list [ GREATER ]
## meth_list -> LIDENT COLON possibly_poly(core_type_no_attr) list(attribute) SEMI . list(attribute) [ GREATER ]
##
## The known suffix of the stack is as follows:
## LIDENT COLON possibly_poly(core_type_no_attr) list(attribute) SEMI
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: LESS LIDENT COLON QUOTED_STRING_EXPR SEMI LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: < lident : {%hello|world|} ; [@ and ] while
##
## Ends in an error in state: 3023.
##
## meth_list -> LIDENT COLON possibly_poly(core_type_no_attr) list(attribute) SEMI list(attribute) . meth_list [ GREATER ]
## meth_list -> LIDENT COLON possibly_poly(core_type_no_attr) list(attribute) SEMI list(attribute) . [ GREATER ]
##
## The known suffix of the stack is as follows:
## LIDENT COLON possibly_poly(core_type_no_attr) list(attribute) SEMI list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: LESS DOTDOT WITH
##
## Concrete syntax: < .. with
##
## Ends in an error in state: 3026.
##
## atomic_type -> LESS meth_list . GREATER [ WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## LESS meth_list
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: LIDENT COLON QUOTED_STRING_EXPR WITH
##
## Concrete syntax: lident : {%hello|world|} with
##
## Ends in an error in state: 3028.
##
## function_type -> LIDENT COLON tuple_type . MINUSGREATER function_type [ WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH GREATER EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## LIDENT COLON tuple_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 358, spurious reduction of production tuple_type -> atomic_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: LIDENT COLON QUOTED_STRING_EXPR MINUSGREATER WITH
##
## Concrete syntax: lident : {%hello|world|} -> with
##
## Ends in an error in state: 3029.
##
## function_type -> LIDENT COLON tuple_type MINUSGREATER . function_type [ WITH VAL TYPE SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH GREATER EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## LIDENT COLON tuple_type MINUSGREATER
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: LPAREN QUOTED_STRING_EXPR COMMA QUOTED_STRING_EXPR RPAREN WITH
##
## Concrete syntax: ( {%hello|world|} , {%hello|world|} ) with
##
## Ends in an error in state: 3032.
##
## atomic_type -> LPAREN reversed_separated_nontrivial_llist(COMMA,core_type) RPAREN . type_longident [ WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## atomic_type -> LPAREN reversed_separated_nontrivial_llist(COMMA,core_type) RPAREN . HASH clty_longident [ WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## LPAREN reversed_separated_nontrivial_llist(COMMA,core_type) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: LPAREN QUOTED_STRING_EXPR COMMA QUOTED_STRING_EXPR RPAREN HASH WITH
##
## Concrete syntax: ( {%hello|world|} , {%hello|world|} ) # with
##
## Ends in an error in state: 3033.
##
## atomic_type -> LPAREN reversed_separated_nontrivial_llist(COMMA,core_type) RPAREN HASH . clty_longident [ WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## LPAREN reversed_separated_nontrivial_llist(COMMA,core_type) RPAREN HASH
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: LPAREN QUOTED_STRING_EXPR WITH
##
## Concrete syntax: ( {%hello|world|} with
##
## Ends in an error in state: 3036.
##
## atomic_type -> LPAREN core_type . RPAREN [ WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## core_type -> core_type . attribute [ RPAREN LBRACKETAT COMMA ]
## reversed_separated_nontrivial_llist(COMMA,core_type) -> core_type . COMMA core_type [ RPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## LPAREN core_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 358, spurious reduction of production tuple_type -> atomic_type
## In state 344, spurious reduction of production function_type -> tuple_type
## In state 374, spurious reduction of production alias_type -> function_type
## In state 384, spurious reduction of production core_type -> alias_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: TYPE LIDENT EQUAL PRIVATE LBRACE WITH
##
## Concrete syntax: type lident = private { with
##
## Ends in an error in state: 3038.
##
## nonempty_type_kind -> PRIVATE LBRACE . label_declarations RBRACE [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CONSTRAINT CLASS AND ]
##
## The known suffix of the stack is as follows:
## PRIVATE LBRACE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: TYPE LIDENT EQUAL PRIVATE QUOTED_STRING_EXPR WITH
##
## Concrete syntax: type lident = private {%hello|world|} with
##
## Ends in an error in state: 3042.
##
## core_type -> core_type . attribute [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EOF CONSTRAINT CLASS AND ]
## nonempty_type_kind -> PRIVATE core_type . [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CONSTRAINT CLASS AND ]
##
## The known suffix of the stack is as follows:
## PRIVATE core_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 358, spurious reduction of production tuple_type -> atomic_type
## In state 344, spurious reduction of production function_type -> tuple_type
## In state 374, spurious reduction of production alias_type -> function_type
## In state 384, spurious reduction of production core_type -> alias_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: TYPE NONREC UIDENT DOT LIDENT WHILE
##
## Concrete syntax: type nonrec UIdent . lident while
##
## Ends in an error in state: 3045.
##
## structure_item -> TYPE ext list(attribute) NONREC type_parameters type_longident . PLUSEQ private_flag reversed_bar_llist(extension_constructor) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## TYPE ext list(attribute) NONREC type_parameters type_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: TYPE NONREC LIDENT PLUSEQ WITH
##
## Concrete syntax: type nonrec lident += with
##
## Ends in an error in state: 3046.
##
## structure_item -> TYPE ext list(attribute) NONREC type_parameters type_longident PLUSEQ . private_flag reversed_bar_llist(extension_constructor) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## TYPE ext list(attribute) NONREC type_parameters type_longident PLUSEQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: TYPE NONREC LIDENT PLUSEQ PRIVATE WITH
##
## Concrete syntax: type nonrec lident += private with
##
## Ends in an error in state: 3047.
##
## structure_item -> TYPE ext list(attribute) NONREC type_parameters type_longident PLUSEQ private_flag . reversed_bar_llist(extension_constructor) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## TYPE ext list(attribute) NONREC type_parameters type_longident PLUSEQ private_flag
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: TYPE LIDENT PLUSEQ BAR WITH
##
## Concrete syntax: type lident += | with
##
## Ends in an error in state: 3048.
##
## extension_constructor_rebind(BAR) -> BAR . constr_ident EQUAL constr_longident list(attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS BAR ]
## generic_constructor_declaration(BAR) -> BAR . constr_ident generalized_constructor_arguments list(attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS BAR ]
##
## The known suffix of the stack is as follows:
## BAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: TYPE LIDENT PLUSEQ BAR FALSE WITH
##
## Concrete syntax: type lident += | false with
##
## Ends in an error in state: 3049.
##
## extension_constructor_rebind(BAR) -> BAR constr_ident . EQUAL constr_longident list(attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS BAR ]
## generic_constructor_declaration(BAR) -> BAR constr_ident . generalized_constructor_arguments list(attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS BAR ]
##
## The known suffix of the stack is as follows:
## BAR constr_ident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: TYPE LIDENT PLUSEQ BAR FALSE EQUAL WITH
##
## Concrete syntax: type lident += | false = with
##
## Ends in an error in state: 3050.
##
## extension_constructor_rebind(BAR) -> BAR constr_ident EQUAL . constr_longident list(attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS BAR ]
##
## The known suffix of the stack is as follows:
## BAR constr_ident EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: TYPE LIDENT PLUSEQ BAR FALSE EQUAL FALSE WITH
##
## Concrete syntax: type lident += | false = false with
##
## Ends in an error in state: 3051.
##
## extension_constructor_rebind(BAR) -> BAR constr_ident EQUAL constr_longident . list(attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS BAR ]
##
## The known suffix of the stack is as follows:
## BAR constr_ident EQUAL constr_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: TYPE NONREC LIDENT PLUSEQ FALSE COLON QUOTED_STRING_EXPR CONSTRAINT
##
## Concrete syntax: type nonrec lident += false : {%hello|world|} constraint
##
## Ends in an error in state: 3053.
##
## reversed_bar_llist(extension_constructor) -> reversed_bar_llist(extension_constructor) . generic_constructor_declaration(BAR) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS BAR ]
## reversed_bar_llist(extension_constructor) -> reversed_bar_llist(extension_constructor) . extension_constructor_rebind(BAR) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS BAR ]
## structure_item -> TYPE ext list(attribute) NONREC type_parameters type_longident PLUSEQ private_flag reversed_bar_llist(extension_constructor) . list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## TYPE ext list(attribute) NONREC type_parameters type_longident PLUSEQ private_flag reversed_bar_llist(extension_constructor)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1395, spurious reduction of production generalized_constructor_arguments -> COLON atomic_type
## In state 1434, spurious reduction of production list(attribute) ->
## In state 1435, spurious reduction of production generic_constructor_declaration(epsilon) -> constr_ident generalized_constructor_arguments list(attribute)
## In state 3057, spurious reduction of production reversed_bar_llist(extension_constructor) -> generic_constructor_declaration(epsilon)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: TYPE LIDENT PLUSEQ FALSE WITH
##
## Concrete syntax: type lident += false with
##
## Ends in an error in state: 3061.
##
## extension_constructor_rebind(epsilon) -> constr_ident . EQUAL constr_longident list(attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS BAR ]
## generic_constructor_declaration(epsilon) -> constr_ident . generalized_constructor_arguments list(attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS BAR ]
##
## The known suffix of the stack is as follows:
## constr_ident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: TYPE LIDENT PLUSEQ FALSE EQUAL WITH
##
## Concrete syntax: type lident += false = with
##
## Ends in an error in state: 3062.
##
## extension_constructor_rebind(epsilon) -> constr_ident EQUAL . constr_longident list(attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS BAR ]
##
## The known suffix of the stack is as follows:
## constr_ident EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: TYPE LIDENT PLUSEQ FALSE EQUAL FALSE WITH
##
## Concrete syntax: type lident += false = false with
##
## Ends in an error in state: 3063.
##
## extension_constructor_rebind(epsilon) -> constr_ident EQUAL constr_longident . list(attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS BAR ]
##
## The known suffix of the stack is as follows:
## constr_ident EQUAL constr_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: TYPE UNDERSCORE WITH
##
## Concrete syntax: type _ with
##
## Ends in an error in state: 3065.
##
## generic_type_declaration(nonrec_flag,type_kind) -> TYPE ext list(attribute) type_parameters . LIDENT type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS AND ]
## structure_item -> TYPE ext list(attribute) type_parameters . type_longident PLUSEQ private_flag reversed_bar_llist(extension_constructor) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## TYPE ext list(attribute) type_parameters
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: TYPE LIDENT WITH
##
## Concrete syntax: type lident with
##
## Ends in an error in state: 3066.
##
## generic_type_declaration(nonrec_flag,type_kind) -> TYPE ext list(attribute) type_parameters LIDENT . type_kind reversed_llist(preceded(CONSTRAINT,constrain)) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS AND ]
## mk_longident(mod_ext_longident,LIDENT) -> LIDENT . [ PLUSEQ ]
##
## The known suffix of the stack is as follows:
## TYPE ext list(attribute) type_parameters LIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: TYPE UIDENT DOT LIDENT WHILE
##
## Concrete syntax: type UIdent . lident while
##
## Ends in an error in state: 3067.
##
## structure_item -> TYPE ext list(attribute) type_parameters type_longident . PLUSEQ private_flag reversed_bar_llist(extension_constructor) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## TYPE ext list(attribute) type_parameters type_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: TYPE LIDENT PLUSEQ WITH
##
## Concrete syntax: type lident += with
##
## Ends in an error in state: 3068.
##
## structure_item -> TYPE ext list(attribute) type_parameters type_longident PLUSEQ . private_flag reversed_bar_llist(extension_constructor) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## TYPE ext list(attribute) type_parameters type_longident PLUSEQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: TYPE LIDENT PLUSEQ PRIVATE WITH
##
## Concrete syntax: type lident += private with
##
## Ends in an error in state: 3069.
##
## structure_item -> TYPE ext list(attribute) type_parameters type_longident PLUSEQ private_flag . reversed_bar_llist(extension_constructor) list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## TYPE ext list(attribute) type_parameters type_longident PLUSEQ private_flag
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: TYPE LIDENT PLUSEQ FALSE COLON QUOTED_STRING_EXPR CONSTRAINT
##
## Concrete syntax: type lident += false : {%hello|world|} constraint
##
## Ends in an error in state: 3070.
##
## reversed_bar_llist(extension_constructor) -> reversed_bar_llist(extension_constructor) . generic_constructor_declaration(BAR) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS BAR ]
## reversed_bar_llist(extension_constructor) -> reversed_bar_llist(extension_constructor) . extension_constructor_rebind(BAR) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS BAR ]
## structure_item -> TYPE ext list(attribute) type_parameters type_longident PLUSEQ private_flag reversed_bar_llist(extension_constructor) . list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## TYPE ext list(attribute) type_parameters type_longident PLUSEQ private_flag reversed_bar_llist(extension_constructor)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1395, spurious reduction of production generalized_constructor_arguments -> COLON atomic_type
## In state 1434, spurious reduction of production list(attribute) ->
## In state 1435, spurious reduction of production generic_constructor_declaration(epsilon) -> constr_ident generalized_constructor_arguments list(attribute)
## In state 3057, spurious reduction of production reversed_bar_llist(extension_constructor) -> generic_constructor_declaration(epsilon)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: OBJECT LBRACKETAT AND SEMISEMI EOF
##
## Concrete syntax: object [@ and ;; 
##
## Ends in an error in state: 3072.
##
## attribute -> LBRACKETAT attr_id payload . RBRACKET [ error WITH WHILE VAL UNDERSCORE UIDENT TYPE TRY TRUE STRING STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPEN OBJECT NEW MODULE MINUSGREATER MINUSDOT MINUS METHOD MATCH LPAREN LIDENT LETOP LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY INT INITIALIZER INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN IF GREATERRBRACE GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL END ELSE CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR BANG BACKQUOTE ASSERT AS AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LBRACKETAT attr_id payload
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 433, spurious reduction of production list(structure_element) ->
## In state 2763, spurious reduction of production list(structure_element) -> SEMISEMI list(structure_element)
## In state 1669, spurious reduction of production structure -> list(structure_element)
## In state 1663, spurious reduction of production payload -> structure
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: INCLUDE SIG LBRACKETAT AND RBRACKET WHILE
##
## Concrete syntax: include sig [@ and ] while
##
## Ends in an error in state: 3074.
##
## module_type -> SIG list(attribute) . signature END [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER CLASS AND ]
## module_type -> SIG list(attribute) . signature error [ WITH VAL TYPE SEMISEMI RPAREN RBRACKET QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EQUAL EOF COLONGREATER CLASS AND ]
##
## The known suffix of the stack is as follows:
## SIG list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1700, spurious reduction of production list(attribute) ->
## In state 1701, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: LPAREN MODULE QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: ( module {%hello|world|} while
##
## Ends in an error in state: 3078.
##
## atomic_type -> LPAREN MODULE ext list(attribute) module_type . RPAREN [ WITH VAL UIDENT TYPE STAR SEMISEMI SEMI RPAREN RBRACKET RBRACE QUOTED_STRING_ITEM OPEN MODULE MINUSGREATER LIDENT LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND AMPERSAND ]
## module_type -> module_type . attribute [ WITH RPAREN MINUSGREATER LBRACKETAT ]
## module_type -> module_type . MINUSGREATER module_type [ WITH RPAREN MINUSGREATER LBRACKETAT ]
## module_type -> module_type . WITH reversed_separated_nonempty_llist(AND,with_constraint) [ WITH RPAREN MINUSGREATER LBRACKETAT ]
##
## The known suffix of the stack is as follows:
## LPAREN MODULE ext list(attribute) module_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: VAL LIDENT COLON QUOTED_STRING_EXPR WITH
##
## Concrete syntax: val lident : {%hello|world|} with
##
## Ends in an error in state: 3080.
##
## core_type -> core_type . attribute [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
## value_description -> VAL ext list(attribute) val_ident COLON core_type . list(post_item_attribute) [ VAL TYPE SEMISEMI RBRACKET QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## VAL ext list(attribute) val_ident COLON core_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 358, spurious reduction of production tuple_type -> atomic_type
## In state 344, spurious reduction of production function_type -> tuple_type
## In state 374, spurious reduction of production alias_type -> function_type
## In state 384, spurious reduction of production core_type -> alias_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: UIDENT LBRACKETAT AND SEMISEMI EOF
##
## Concrete syntax: UIdent [@ and ;; 
##
## Ends in an error in state: 3082.
##
## attribute -> LBRACKETAT attr_id payload . RBRACKET [ WITH WHILE WHEN VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TO TILDE THEN STRUCT STRING STAR SIG SEMISEMI SEMI RPAREN REC RBRACKET RBRACE QUOTED_STRING_ITEM QUOTED_STRING_EXPR QUOTE QUESTION PRIVATE PREFIXOP PLUSEQ PLUSDOT PLUS PERCENT OR OPTLABEL OPEN OBJECT NONREC NEW MUTABLE MODULE MINUSGREATER MINUSDOT MINUS MATCH LPAREN LIDENT LETOP LET LESS LBRACKETPERCENTPERCENT LBRACKETPERCENT LBRACKETLESS LBRACKETGREATER LBRACKETBAR LBRACKETATATAT LBRACKETATAT LBRACKETAT LBRACKET LBRACELESS LBRACE LAZY LABEL INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN IF HASH GREATER FUNCTOR FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOTDOT DONE DO CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARBAR BAR BANG BACKQUOTE ASSERT AS ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## LBRACKETAT attr_id payload
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 433, spurious reduction of production list(structure_element) ->
## In state 2763, spurious reduction of production list(structure_element) -> SEMISEMI list(structure_element)
## In state 1669, spurious reduction of production structure -> list(structure_element)
## In state 1663, spurious reduction of production payload -> structure
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: WHILE LBRACKETAT AND RBRACKET VIRTUAL
##
## Concrete syntax: while [@ and ] virtual
##
## Ends in an error in state: 3084.
##
## expr -> WHILE ext list(attribute) . seq_expr DO seq_expr DONE [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## WHILE ext list(attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 193, spurious reduction of production list(attribute) ->
## In state 194, spurious reduction of production list(attribute) -> attribute list(attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: WHILE UIDENT VAL
##
## Concrete syntax: while UIdent val
##
## Ends in an error in state: 3085.
##
## expr -> WHILE ext list(attribute) seq_expr . DO seq_expr DONE [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## WHILE ext list(attribute) seq_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 943, spurious reduction of production constr_longident -> mod_longident
## In state 1178, spurious reduction of production simple_expr -> constr_longident
## In state 1032, spurious reduction of production expr -> simple_expr
## In state 1172, spurious reduction of production seq_expr -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: WHILE UIDENT DO WITH
##
## Concrete syntax: while UIdent do with
##
## Ends in an error in state: 3086.
##
## expr -> WHILE ext list(attribute) seq_expr DO . seq_expr DONE [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## WHILE ext list(attribute) seq_expr DO
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: WHILE UIDENT DO UIDENT VAL
##
## Concrete syntax: while UIdent do UIdent val
##
## Ends in an error in state: 3087.
##
## expr -> WHILE ext list(attribute) seq_expr DO seq_expr . DONE [ WITH VAL TYPE TO THEN STAR SEMISEMI SEMI RPAREN RBRACKET QUOTED_STRING_ITEM PLUSEQ PLUSDOT PLUS PERCENT OR OPEN MODULE MINUSGREATER MINUSDOT MINUS LET LESS LBRACKETPERCENTPERCENT LBRACKETATATAT LBRACKETATAT LBRACKETAT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN HASH GREATER EXTERNAL EXCEPTION EQUAL EOF ELSE DOWNTO DONE DO COMMA COLONEQUAL COLONCOLON CLASS BARBAR BAR ANDOP AND AMPERSAND AMPERAMPER ]
##
## The known suffix of the stack is as follows:
## WHILE ext list(attribute) seq_expr DO seq_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 943, spurious reduction of production constr_longident -> mod_longident
## In state 1178, spurious reduction of production simple_expr -> constr_longident
## In state 1032, spurious reduction of production expr -> simple_expr
## In state 1172, spurious reduction of production seq_expr -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

implementation: SEMISEMI RBRACKET
##
## Concrete syntax: ;; ]
##
## Ends in an error in state: 3089.
##
## implementation -> structure . EOF [ # ]
##
## The known suffix of the stack is as follows:
## structure
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 433, spurious reduction of production list(structure_element) ->
## In state 2763, spurious reduction of production list(structure_element) -> SEMISEMI list(structure_element)
## In state 1669, spurious reduction of production structure -> list(structure_element)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: WITH
##
## Concrete syntax: with
##
## Ends in an error in state: 3092.
##
## interface' -> . interface [ # ]
##
## The known suffix of the stack is as follows:
##
##

<YOUR SYNTAX ERROR MESSAGE HERE>

interface: SEMISEMI RBRACKET
##
## Concrete syntax: ;; ]
##
## Ends in an error in state: 3093.
##
## interface -> signature . EOF [ # ]
##
## The known suffix of the stack is as follows:
## signature
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1468, spurious reduction of production list(signature_element) ->
## In state 1993, spurious reduction of production list(signature_element) -> SEMISEMI list(signature_element)
## In state 1995, spurious reduction of production signature -> list(signature_element)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_any_longident: WITH
##
## Concrete syntax: with
##
## Ends in an error in state: 3096.
##
## parse_any_longident' -> . parse_any_longident [ # ]
##
## The known suffix of the stack is as follows:
##
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_any_longident: LPAREN WITH
##
## Concrete syntax: ( with
##
## Ends in an error in state: 3097.
##
## constr_extra_nonprefix_ident -> LPAREN . RPAREN [ EOF ]
## mk_longident(mod_ext_longident,__anonymous_41) -> LPAREN . COLONCOLON RPAREN [ EOF ]
## val_extra_ident -> LPAREN . operator RPAREN [ EOF ]
## val_extra_ident -> LPAREN . operator error [ EOF ]
## val_extra_ident -> LPAREN . error [ EOF ]
## val_extra_ident -> LPAREN . MODULE error [ EOF ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_any_longident: LPAREN COLONCOLON WITH
##
## Concrete syntax: ( :: with
##
## Ends in an error in state: 3098.
##
## mk_longident(mod_ext_longident,__anonymous_41) -> LPAREN COLONCOLON . RPAREN [ EOF ]
##
## The known suffix of the stack is as follows:
## LPAREN COLONCOLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_any_longident: UIDENT LPAREN UIDENT RPAREN WITH
##
## Concrete syntax: UIdent ( UIdent ) with
##
## Ends in an error in state: 3102.
##
## mk_longident(mod_ext_longident,UIDENT) -> mod_ext_longident . DOT UIDENT [ LPAREN DOT ]
## mk_longident(mod_ext_longident,__anonymous_41) -> mod_ext_longident . DOT ident [ EOF ]
## mk_longident(mod_ext_longident,__anonymous_41) -> mod_ext_longident . DOT LPAREN COLONCOLON RPAREN [ EOF ]
## mk_longident(mod_ext_longident,__anonymous_41) -> mod_ext_longident . DOT val_extra_ident [ EOF ]
## mod_ext_longident -> mod_ext_longident . LPAREN mod_ext_longident RPAREN [ LPAREN DOT ]
## mod_ext_longident -> mod_ext_longident . LPAREN error [ LPAREN DOT ]
##
## The known suffix of the stack is as follows:
## mod_ext_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_any_longident: UIDENT DOT WITH
##
## Concrete syntax: UIdent . with
##
## Ends in an error in state: 3103.
##
## mk_longident(mod_ext_longident,UIDENT) -> mod_ext_longident DOT . UIDENT [ LPAREN DOT ]
## mk_longident(mod_ext_longident,__anonymous_41) -> mod_ext_longident DOT . ident [ EOF ]
## mk_longident(mod_ext_longident,__anonymous_41) -> mod_ext_longident DOT . LPAREN COLONCOLON RPAREN [ EOF ]
## mk_longident(mod_ext_longident,__anonymous_41) -> mod_ext_longident DOT . val_extra_ident [ EOF ]
##
## The known suffix of the stack is as follows:
## mod_ext_longident DOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_any_longident: UIDENT DOT LPAREN WITH
##
## Concrete syntax: UIdent . ( with
##
## Ends in an error in state: 3104.
##
## mk_longident(mod_ext_longident,__anonymous_41) -> mod_ext_longident DOT LPAREN . COLONCOLON RPAREN [ EOF ]
## val_extra_ident -> LPAREN . operator RPAREN [ EOF ]
## val_extra_ident -> LPAREN . operator error [ EOF ]
## val_extra_ident -> LPAREN . error [ EOF ]
## val_extra_ident -> LPAREN . MODULE error [ EOF ]
##
## The known suffix of the stack is as follows:
## mod_ext_longident DOT LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_any_longident: UIDENT DOT LPAREN COLONCOLON WITH
##
## Concrete syntax: UIdent . ( :: with
##
## Ends in an error in state: 3105.
##
## mk_longident(mod_ext_longident,__anonymous_41) -> mod_ext_longident DOT LPAREN COLONCOLON . RPAREN [ EOF ]
##
## The known suffix of the stack is as follows:
## mod_ext_longident DOT LPAREN COLONCOLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_any_longident: FALSE WHILE
##
## Concrete syntax: false while
##
## Ends in an error in state: 3112.
##
## parse_any_longident -> any_longident . EOF [ # ]
##
## The known suffix of the stack is as follows:
## any_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_constr_longident: WITH
##
## Concrete syntax: with
##
## Ends in an error in state: 3114.
##
## parse_constr_longident' -> . parse_constr_longident [ # ]
##
## The known suffix of the stack is as follows:
##
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_constr_longident: UIDENT VAL
##
## Concrete syntax: UIdent val
##
## Ends in an error in state: 3116.
##
## parse_constr_longident -> constr_longident . EOF [ # ]
##
## The known suffix of the stack is as follows:
## constr_longident
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1385, spurious reduction of production constr_longident -> mod_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: WITH
##
## Concrete syntax: with
##
## Ends in an error in state: 3118.
##
## parse_core_type' -> . parse_core_type [ # ]
##
## The known suffix of the stack is as follows:
##
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_core_type: QUOTED_STRING_EXPR WITH
##
## Concrete syntax: {%hello|world|} with
##
## Ends in an error in state: 3120.
##
## core_type -> core_type . attribute [ LBRACKETAT EOF ]
## parse_core_type -> core_type . EOF [ # ]
##
## The known suffix of the stack is as follows:
## core_type
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 358, spurious reduction of production tuple_type -> atomic_type
## In state 344, spurious reduction of production function_type -> tuple_type
## In state 374, spurious reduction of production alias_type -> function_type
## In state 384, spurious reduction of production core_type -> alias_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_expression: WITH
##
## Concrete syntax: with
##
## Ends in an error in state: 3122.
##
## parse_expression' -> . parse_expression [ # ]
##
## The known suffix of the stack is as follows:
##
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_expression: UIDENT VAL
##
## Concrete syntax: UIdent val
##
## Ends in an error in state: 3123.
##
## parse_expression -> seq_expr . EOF [ # ]
##
## The known suffix of the stack is as follows:
## seq_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 943, spurious reduction of production constr_longident -> mod_longident
## In state 1178, spurious reduction of production simple_expr -> constr_longident
## In state 1032, spurious reduction of production expr -> simple_expr
## In state 1172, spurious reduction of production seq_expr -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_mod_ext_longident: WITH
##
## Concrete syntax: with
##
## Ends in an error in state: 3126.
##
## parse_mod_ext_longident' -> . parse_mod_ext_longident [ # ]
##
## The known suffix of the stack is as follows:
##
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_mod_ext_longident: UIDENT WITH
##
## Concrete syntax: UIdent with
##
## Ends in an error in state: 3128.
##
## mk_longident(mod_ext_longident,UIDENT) -> mod_ext_longident . DOT UIDENT [ LPAREN EOF DOT ]
## mod_ext_longident -> mod_ext_longident . LPAREN mod_ext_longident RPAREN [ LPAREN EOF DOT ]
## mod_ext_longident -> mod_ext_longident . LPAREN error [ LPAREN EOF DOT ]
## parse_mod_ext_longident -> mod_ext_longident . EOF [ # ]
##
## The known suffix of the stack is as follows:
## mod_ext_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_mod_longident: WITH
##
## Concrete syntax: with
##
## Ends in an error in state: 3130.
##
## parse_mod_longident' -> . parse_mod_longident [ # ]
##
## The known suffix of the stack is as follows:
##
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_mod_longident: UIDENT WITH
##
## Concrete syntax: UIdent with
##
## Ends in an error in state: 3132.
##
## mk_longident(mod_longident,UIDENT) -> mod_longident . DOT UIDENT [ EOF DOT ]
## parse_mod_longident -> mod_longident . EOF [ # ]
##
## The known suffix of the stack is as follows:
## mod_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_mty_longident: WITH
##
## Concrete syntax: with
##
## Ends in an error in state: 3134.
##
## parse_mty_longident' -> . parse_mty_longident [ # ]
##
## The known suffix of the stack is as follows:
##
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_mty_longident: LIDENT WHILE
##
## Concrete syntax: lident while
##
## Ends in an error in state: 3136.
##
## parse_mty_longident -> mty_longident . EOF [ # ]
##
## The known suffix of the stack is as follows:
## mty_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: WITH
##
## Concrete syntax: with
##
## Ends in an error in state: 3138.
##
## parse_pattern' -> . parse_pattern [ # ]
##
## The known suffix of the stack is as follows:
##
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_pattern: QUOTED_STRING_EXPR WHILE
##
## Concrete syntax: {%hello|world|} while
##
## Ends in an error in state: 3139.
##
## parse_pattern -> pattern . EOF [ # ]
## pattern -> pattern . COLONCOLON pattern [ LBRACKETAT EOF COMMA COLONCOLON BAR AS ]
## pattern -> pattern . attribute [ LBRACKETAT EOF COMMA COLONCOLON BAR AS ]
## pattern -> pattern . AS val_ident [ LBRACKETAT EOF COMMA COLONCOLON BAR AS ]
## pattern -> pattern . AS error [ LBRACKETAT EOF COMMA COLONCOLON BAR AS ]
## pattern -> pattern . COLONCOLON error [ LBRACKETAT EOF COMMA COLONCOLON BAR AS ]
## pattern -> pattern . BAR pattern [ LBRACKETAT EOF COMMA COLONCOLON BAR AS ]
## pattern -> pattern . BAR error [ LBRACKETAT EOF COMMA COLONCOLON BAR AS ]
## pattern_comma_list(pattern) -> pattern . COMMA pattern [ LBRACKETAT EOF COMMA COLONCOLON BAR AS ]
## pattern_comma_list(pattern) -> pattern . COMMA error [ LBRACKETAT EOF COMMA COLONCOLON BAR AS ]
##
## The known suffix of the stack is as follows:
## pattern
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_val_longident: WITH
##
## Concrete syntax: with
##
## Ends in an error in state: 3142.
##
## parse_val_longident' -> . parse_val_longident [ # ]
##
## The known suffix of the stack is as follows:
##
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_val_longident: LIDENT VAL
##
## Concrete syntax: lident val
##
## Ends in an error in state: 3143.
##
## parse_val_longident -> val_longident . EOF [ # ]
##
## The known suffix of the stack is as follows:
## val_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_val_longident: UIDENT WITH
##
## Concrete syntax: UIdent with
##
## Ends in an error in state: 3146.
##
## mk_longident(mod_longident,UIDENT) -> mod_longident . DOT UIDENT [ DOT ]
## mk_longident(mod_longident,val_ident) -> mod_longident . DOT val_ident [ EOF ]
##
## The known suffix of the stack is as follows:
## mod_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

parse_val_longident: UIDENT DOT WITH
##
## Concrete syntax: UIdent . with
##
## Ends in an error in state: 3147.
##
## mk_longident(mod_longident,UIDENT) -> mod_longident DOT . UIDENT [ VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF DOT CLASS ]
## mk_longident(mod_longident,val_ident) -> mod_longident DOT . val_ident [ VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## mod_longident DOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

toplevel_phrase: WITH
##
## Concrete syntax: with
##
## Ends in an error in state: 3148.
##
## toplevel_phrase' -> . toplevel_phrase [ # ]
##
## The known suffix of the stack is as follows:
##
##

<YOUR SYNTAX ERROR MESSAGE HERE>

toplevel_phrase: HASH WITH
##
## Concrete syntax: # with
##
## Ends in an error in state: 3149.
##
## toplevel_directive -> HASH . ident [ VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
## toplevel_directive -> HASH . ident STRING [ VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
## toplevel_directive -> HASH . ident INT [ VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
## toplevel_directive -> HASH . ident val_longident [ VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
## toplevel_directive -> HASH . ident mod_longident [ VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
## toplevel_directive -> HASH . ident FALSE [ VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
## toplevel_directive -> HASH . ident TRUE [ VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## HASH
##

<YOUR SYNTAX ERROR MESSAGE HERE>

toplevel_phrase: HASH LIDENT WITH
##
## Concrete syntax: # lident with
##
## Ends in an error in state: 3150.
##
## toplevel_directive -> HASH ident . [ VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
## toplevel_directive -> HASH ident . STRING [ VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
## toplevel_directive -> HASH ident . INT [ VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
## toplevel_directive -> HASH ident . val_longident [ VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
## toplevel_directive -> HASH ident . mod_longident [ VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
## toplevel_directive -> HASH ident . FALSE [ VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
## toplevel_directive -> HASH ident . TRUE [ VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## HASH ident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

toplevel_phrase: HASH LIDENT UIDENT WITH
##
## Concrete syntax: # lident UIdent with
##
## Ends in an error in state: 3156.
##
## mk_longident(mod_longident,UIDENT) -> mod_longident . DOT UIDENT [ VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF DOT CLASS ]
## mk_longident(mod_longident,val_ident) -> mod_longident . DOT val_ident [ VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
## toplevel_directive -> HASH ident mod_longident . [ VAL TYPE SEMISEMI QUOTED_STRING_ITEM OPEN MODULE LET LBRACKETPERCENTPERCENT LBRACKETATATAT INCLUDE HASH EXTERNAL EXCEPTION EOF CLASS ]
##
## The known suffix of the stack is as follows:
## HASH ident mod_longident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

toplevel_phrase: HASH LIDENT VAL
##
## Concrete syntax: # lident val
##
## Ends in an error in state: 3159.
##
## toplevel_phrase -> toplevel_directive . SEMISEMI [ # ]
##
## The known suffix of the stack is as follows:
## toplevel_directive
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 3150, spurious reduction of production toplevel_directive -> HASH ident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

toplevel_phrase: QUOTED_STRING_ITEM RBRACKET
##
## Concrete syntax: {%%hello|world|} ]
##
## Ends in an error in state: 3161.
##
## list(text_str(structure_item)) -> structure_item . list(text_str(structure_item)) [ SEMISEMI ]
##
## The known suffix of the stack is as follows:
## structure_item
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1649, spurious reduction of production list(post_item_attribute) ->
## In state 1650, spurious reduction of production structure_item -> item_extension list(post_item_attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

toplevel_phrase: UIDENT VAL
##
## Concrete syntax: UIdent val
##
## Ends in an error in state: 3163.
##
## toplevel_phrase -> seq_expr . list(post_item_attribute) SEMISEMI [ # ]
##
## The known suffix of the stack is as follows:
## seq_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 943, spurious reduction of production constr_longident -> mod_longident
## In state 1178, spurious reduction of production simple_expr -> constr_longident
## In state 1032, spurious reduction of production expr -> simple_expr
## In state 1172, spurious reduction of production seq_expr -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

toplevel_phrase: UIDENT LBRACKETATAT AND RBRACKET VAL
##
## Concrete syntax: UIdent [@@ and ] val
##
## Ends in an error in state: 3164.
##
## toplevel_phrase -> seq_expr list(post_item_attribute) . SEMISEMI [ # ]
##
## The known suffix of the stack is as follows:
## seq_expr list(post_item_attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1304, spurious reduction of production list(post_item_attribute) ->
## In state 1305, spurious reduction of production list(post_item_attribute) -> post_item_attribute list(post_item_attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

use_file: WITH
##
## Concrete syntax: with
##
## Ends in an error in state: 3168.
##
## use_file' -> . use_file [ # ]
##
## The known suffix of the stack is as follows:
##
##

<YOUR SYNTAX ERROR MESSAGE HERE>

use_file: SEMISEMI WITH
##
## Concrete syntax: ;; with
##
## Ends in an error in state: 3169.
##
## list(use_file_element) -> SEMISEMI . list(use_file_element) [ EOF ]
## list(use_file_element) -> SEMISEMI . seq_expr list(post_item_attribute) list(use_file_element) [ EOF ]
##
## The known suffix of the stack is as follows:
## SEMISEMI
##

<YOUR SYNTAX ERROR MESSAGE HERE>

use_file: HASH LIDENT LIDENT UIDENT
##
## Concrete syntax: # lident lident UIdent
##
## Ends in an error in state: 3170.
##
## list(use_file_element) -> toplevel_directive . list(use_file_element) [ EOF ]
##
## The known suffix of the stack is as follows:
## toplevel_directive
##

<YOUR SYNTAX ERROR MESSAGE HERE>

use_file: QUOTED_STRING_ITEM RBRACKET
##
## Concrete syntax: {%%hello|world|} ]
##
## Ends in an error in state: 3171.
##
## list(use_file_element) -> structure_item . list(use_file_element) [ EOF ]
##
## The known suffix of the stack is as follows:
## structure_item
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1649, spurious reduction of production list(post_item_attribute) ->
## In state 1650, spurious reduction of production structure_item -> item_extension list(post_item_attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

use_file: SEMISEMI UIDENT TO
##
## Concrete syntax: ;; UIdent to
##
## Ends in an error in state: 3174.
##
## list(use_file_element) -> SEMISEMI seq_expr . list(post_item_attribute) list(use_file_element) [ EOF ]
##
## The known suffix of the stack is as follows:
## SEMISEMI seq_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 943, spurious reduction of production constr_longident -> mod_longident
## In state 1178, spurious reduction of production simple_expr -> constr_longident
## In state 1032, spurious reduction of production expr -> simple_expr
## In state 1172, spurious reduction of production seq_expr -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

use_file: SEMISEMI UIDENT LBRACKETATAT AND RBRACKET RBRACKET
##
## Concrete syntax: ;; UIdent [@@ and ] ]
##
## Ends in an error in state: 3175.
##
## list(use_file_element) -> SEMISEMI seq_expr list(post_item_attribute) . list(use_file_element) [ EOF ]
##
## The known suffix of the stack is as follows:
## SEMISEMI seq_expr list(post_item_attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1304, spurious reduction of production list(post_item_attribute) ->
## In state 1305, spurious reduction of production list(post_item_attribute) -> post_item_attribute list(post_item_attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

use_file: UIDENT TO
##
## Concrete syntax: UIdent to
##
## Ends in an error in state: 3179.
##
## use_file -> seq_expr . list(post_item_attribute) list(use_file_element) EOF [ # ]
##
## The known suffix of the stack is as follows:
## seq_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 943, spurious reduction of production constr_longident -> mod_longident
## In state 1178, spurious reduction of production simple_expr -> constr_longident
## In state 1032, spurious reduction of production expr -> simple_expr
## In state 1172, spurious reduction of production seq_expr -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

use_file: UIDENT LBRACKETATAT AND RBRACKET RBRACKET
##
## Concrete syntax: UIdent [@@ and ] ]
##
## Ends in an error in state: 3180.
##
## use_file -> seq_expr list(post_item_attribute) . list(use_file_element) EOF [ # ]
##
## The known suffix of the stack is as follows:
## seq_expr list(post_item_attribute)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1304, spurious reduction of production list(post_item_attribute) ->
## In state 1305, spurious reduction of production list(post_item_attribute) -> post_item_attribute list(post_item_attribute)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

